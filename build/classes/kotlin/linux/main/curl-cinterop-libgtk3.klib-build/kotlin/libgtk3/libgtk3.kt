@file:kotlinx.cinterop.InteropStubs
@file:Suppress("UNUSED_VARIABLE", "UNUSED_EXPRESSION")
package libgtk3

import kotlin.native.SymbolName
import kotlinx.cinterop.internal.*
import kotlinx.cinterop.*
import cnames.structs._GAction
import cnames.structs._GActionGroup
import cnames.structs._GActionMap
import cnames.structs._GAppInfo
import cnames.structs._GAppInfoMonitor
import cnames.structs._GAppLaunchContextPrivate
import cnames.structs._GApplicationCommandLinePrivate
import cnames.structs._GApplicationPrivate
import cnames.structs._GAsyncInitable
import cnames.structs._GAsyncResult
import cnames.structs._GBinding
import cnames.structs._GBufferedInputStreamPrivate
import cnames.structs._GBufferedOutputStreamPrivate
import cnames.structs._GBytes
import cnames.structs._GBytesIcon
import cnames.structs._GCancellablePrivate
import cnames.structs._GCharsetConverter
import cnames.structs._GConverter
import cnames.structs._GConverterInputStreamPrivate
import cnames.structs._GConverterOutputStreamPrivate
import cnames.structs._GCredentials
import cnames.structs._GCredentialsClass
import cnames.structs._GDBusActionGroup
import cnames.structs._GDBusAuthObserver
import cnames.structs._GDBusConnection
import cnames.structs._GDBusInterface
import cnames.structs._GDBusInterfaceSkeletonPrivate
import cnames.structs._GDBusMenuModel
import cnames.structs._GDBusMessage
import cnames.structs._GDBusMethodInvocation
import cnames.structs._GDBusObject
import cnames.structs._GDBusObjectManager
import cnames.structs._GDBusObjectManagerClientPrivate
import cnames.structs._GDBusObjectManagerServerPrivate
import cnames.structs._GDBusObjectProxyPrivate
import cnames.structs._GDBusObjectSkeletonPrivate
import cnames.structs._GDBusProxyPrivate
import cnames.structs._GDBusServer
import cnames.structs._GData
import cnames.structs._GDataInputStreamPrivate
import cnames.structs._GDataOutputStreamPrivate
import cnames.structs._GDatagramBased
import cnames.structs._GDateTime
import cnames.structs._GDrive
import cnames.structs._GDtlsClientConnection
import cnames.structs._GDtlsConnection
import cnames.structs._GDtlsServerConnection
import cnames.structs._GEmblem
import cnames.structs._GEmblemClass
import cnames.structs._GEmblemedIconPrivate
import cnames.structs._GFile
import cnames.structs._GFileAttributeMatcher
import cnames.structs._GFileDescriptorBased
import cnames.structs._GFileEnumeratorPrivate
import cnames.structs._GFileIOStreamPrivate
import cnames.structs._GFileIcon
import cnames.structs._GFileIconClass
import cnames.structs._GFileInfo
import cnames.structs._GFileInfoClass
import cnames.structs._GFileInputStreamPrivate
import cnames.structs._GFileMonitorPrivate
import cnames.structs._GFileOutputStreamPrivate
import cnames.structs._GFilenameCompleter
import cnames.structs._GHashTable
import cnames.structs._GIOExtension
import cnames.structs._GIOExtensionPoint
import cnames.structs._GIOModule
import cnames.structs._GIOModuleClass
import cnames.structs._GIOModuleScope
import cnames.structs._GIOSchedulerJob
import cnames.structs._GIOStreamAdapter
import cnames.structs._GIOStreamPrivate
import cnames.structs._GIcon
import cnames.structs._GInetAddressMaskPrivate
import cnames.structs._GInetAddressPrivate
import cnames.structs._GInetSocketAddressPrivate
import cnames.structs._GInitable
import cnames.structs._GInputStreamPrivate
import cnames.structs._GKeyFile
import cnames.structs._GListModel
import cnames.structs._GListStore
import cnames.structs._GLoadableIcon
import cnames.structs._GMainContext
import cnames.structs._GMarkupParseContext
import cnames.structs._GMemoryInputStreamPrivate
import cnames.structs._GMemoryOutputStreamPrivate
import cnames.structs._GMenu
import cnames.structs._GMenuAttributeIterPrivate
import cnames.structs._GMenuItem
import cnames.structs._GMenuLinkIterPrivate
import cnames.structs._GMenuModelPrivate
import cnames.structs._GMount
import cnames.structs._GMountOperationPrivate
import cnames.structs._GNativeSocketAddress
import cnames.structs._GNetworkAddressPrivate
import cnames.structs._GNetworkMonitor
import cnames.structs._GNetworkServicePrivate
import cnames.structs._GNotification
import cnames.structs._GOptionGroup
import cnames.structs._GOutputStreamPrivate
import cnames.structs._GParamSpecPool
import cnames.structs._GPermissionPrivate
import cnames.structs._GPollableInputStream
import cnames.structs._GPollableOutputStream
import cnames.structs._GPropertyAction
import cnames.structs._GProxy
import cnames.structs._GProxyAddressEnumeratorPrivate
import cnames.structs._GProxyAddressPrivate
import cnames.structs._GProxyResolver
import cnames.structs._GRemoteActionGroup
import cnames.structs._GResolverPrivate
import cnames.structs._GResource
import cnames.structs._GSeekable
import cnames.structs._GSettingsBackend
import cnames.structs._GSettingsPrivate
import cnames.structs._GSettingsSchema
import cnames.structs._GSettingsSchemaKey
import cnames.structs._GSettingsSchemaSource
import cnames.structs._GSimpleAction
import cnames.structs._GSimpleActionGroupPrivate
import cnames.structs._GSimpleAsyncResult
import cnames.structs._GSimpleAsyncResultClass
import cnames.structs._GSimpleIOStream
import cnames.structs._GSimplePermission
import cnames.structs._GSimpleProxyResolverPrivate
import cnames.structs._GSocketClientPrivate
import cnames.structs._GSocketConnectable
import cnames.structs._GSocketConnectionPrivate
import cnames.structs._GSocketControlMessagePrivate
import cnames.structs._GSocketListenerPrivate
import cnames.structs._GSocketPrivate
import cnames.structs._GSocketServicePrivate
import cnames.structs._GSourcePrivate
import cnames.structs._GSrvTarget
import cnames.structs._GSubprocess
import cnames.structs._GSubprocessLauncher
import cnames.structs._GTask
import cnames.structs._GTaskClass
import cnames.structs._GTcpConnectionPrivate
import cnames.structs._GTcpWrapperConnectionPrivate
import cnames.structs._GTestDBus
import cnames.structs._GThemedIcon
import cnames.structs._GThemedIconClass
import cnames.structs._GThreadedSocketServicePrivate
import cnames.structs._GTlsBackend
import cnames.structs._GTlsCertificatePrivate
import cnames.structs._GTlsClientConnection
import cnames.structs._GTlsConnectionPrivate
import cnames.structs._GTlsDatabasePrivate
import cnames.structs._GTlsFileDatabase
import cnames.structs._GTlsInteractionPrivate
import cnames.structs._GTlsPasswordPrivate
import cnames.structs._GTlsServerConnection
import cnames.structs._GTypeCValue
import cnames.structs._GTypePlugin
import cnames.structs._GUnixCredentialsMessage
import cnames.structs._GUnixFDList
import cnames.structs._GVariant
import cnames.structs._GVariantType
import cnames.structs._GVolume
import cnames.structs._GZlibCompressor
import cnames.structs._GZlibDecompressor
import cnames.structs._GdkAtom
import cnames.structs._GdkDevice
import cnames.structs._GdkDisplay
import cnames.structs._GdkDragContext
import cnames.structs._GdkEventSequence
import cnames.structs._GdkFrameClock
import cnames.structs._GdkGLContext
import cnames.structs._GdkMonitor
import cnames.structs._GdkPixbuf
import cnames.structs._GdkPixbufAnimation
import cnames.structs._GdkScreen
import cnames.structs._GdkVisual
import cnames.structs._GdkWindow
import cnames.structs._GtkAboutDialogPrivate
import cnames.structs._GtkAccelGroupPrivate
import cnames.structs._GtkAccelLabelPrivate
import cnames.structs._GtkAccelMap
import cnames.structs._GtkAccelMapClass
import cnames.structs._GtkAccessiblePrivate
import cnames.structs._GtkActionBarPrivate
import cnames.structs._GtkActionable
import cnames.structs._GtkAdjustmentPrivate
import cnames.structs._GtkAppChooser
import cnames.structs._GtkAppChooserButtonPrivate
import cnames.structs._GtkAppChooserDialogPrivate
import cnames.structs._GtkAppChooserWidgetPrivate
import cnames.structs._GtkApplicationPrivate
import cnames.structs._GtkApplicationWindowPrivate
import cnames.structs._GtkAspectFramePrivate
import cnames.structs._GtkAssistantPrivate
import cnames.structs._GtkBinPrivate
import cnames.structs._GtkBoxPrivate
import cnames.structs._GtkBuildable
import cnames.structs._GtkBuilderPrivate
import cnames.structs._GtkButtonBoxPrivate
import cnames.structs._GtkButtonPrivate
import cnames.structs._GtkCalendarPrivate
import cnames.structs._GtkCellAreaBoxPrivate
import cnames.structs._GtkCellAreaContextPrivate
import cnames.structs._GtkCellAreaPrivate
import cnames.structs._GtkCellEditable
import cnames.structs._GtkCellLayout
import cnames.structs._GtkCellRendererAccelPrivate
import cnames.structs._GtkCellRendererClassPrivate
import cnames.structs._GtkCellRendererComboPrivate
import cnames.structs._GtkCellRendererPixbufPrivate
import cnames.structs._GtkCellRendererPrivate
import cnames.structs._GtkCellRendererProgressPrivate
import cnames.structs._GtkCellRendererSpinPrivate
import cnames.structs._GtkCellRendererSpinnerPrivate
import cnames.structs._GtkCellRendererTextPrivate
import cnames.structs._GtkCellRendererTogglePrivate
import cnames.structs._GtkCellViewPrivate
import cnames.structs._GtkCheckMenuItemPrivate
import cnames.structs._GtkClipboard
import cnames.structs._GtkColorButtonPrivate
import cnames.structs._GtkColorChooser
import cnames.structs._GtkColorChooserDialogPrivate
import cnames.structs._GtkColorChooserWidgetPrivate
import cnames.structs._GtkComboBoxPrivate
import cnames.structs._GtkComboBoxTextPrivate
import cnames.structs._GtkContainerPrivate
import cnames.structs._GtkCssProviderPrivate
import cnames.structs._GtkCssSection
import cnames.structs._GtkDialogPrivate
import cnames.structs._GtkEditable
import cnames.structs._GtkEntryBufferPrivate
import cnames.structs._GtkEntryCompletionPrivate
import cnames.structs._GtkEntryPrivate
import cnames.structs._GtkEventBoxPrivate
import cnames.structs._GtkEventController
import cnames.structs._GtkEventControllerClass
import cnames.structs._GtkExpanderPrivate
import cnames.structs._GtkFileChooser
import cnames.structs._GtkFileChooserButtonPrivate
import cnames.structs._GtkFileChooserDialogPrivate
import cnames.structs._GtkFileChooserNative
import cnames.structs._GtkFileChooserWidgetPrivate
import cnames.structs._GtkFileFilter
import cnames.structs._GtkFixedPrivate
import cnames.structs._GtkFontButtonPrivate
import cnames.structs._GtkFontChooser
import cnames.structs._GtkFontChooserDialogPrivate
import cnames.structs._GtkFontChooserWidgetPrivate
import cnames.structs._GtkFramePrivate
import cnames.structs._GtkGesture
import cnames.structs._GtkGestureClass
import cnames.structs._GtkGestureDrag
import cnames.structs._GtkGestureDragClass
import cnames.structs._GtkGestureLongPress
import cnames.structs._GtkGestureLongPressClass
import cnames.structs._GtkGestureMultiPress
import cnames.structs._GtkGestureMultiPressClass
import cnames.structs._GtkGesturePan
import cnames.structs._GtkGesturePanClass
import cnames.structs._GtkGestureRotate
import cnames.structs._GtkGestureRotateClass
import cnames.structs._GtkGestureSingle
import cnames.structs._GtkGestureSingleClass
import cnames.structs._GtkGestureSwipe
import cnames.structs._GtkGestureSwipeClass
import cnames.structs._GtkGestureZoom
import cnames.structs._GtkGestureZoomClass
import cnames.structs._GtkGridPrivate
import cnames.structs._GtkHeaderBarPrivate
import cnames.structs._GtkIMContextSimplePrivate
import cnames.structs._GtkIMMulticontextPrivate
import cnames.structs._GtkIconFactoryPrivate
import cnames.structs._GtkIconInfo
import cnames.structs._GtkIconInfoClass
import cnames.structs._GtkIconSet
import cnames.structs._GtkIconSource
import cnames.structs._GtkIconThemePrivate
import cnames.structs._GtkIconViewPrivate
import cnames.structs._GtkImagePrivate
import cnames.structs._GtkInfoBarPrivate
import cnames.structs._GtkInvisiblePrivate
import cnames.structs._GtkLabelPrivate
import cnames.structs._GtkLabelSelectionInfo
import cnames.structs._GtkLayoutPrivate
import cnames.structs._GtkLevelBarPrivate
import cnames.structs._GtkLinkButtonPrivate
import cnames.structs._GtkListStorePrivate
import cnames.structs._GtkLockButtonPrivate
import cnames.structs._GtkMenuBarPrivate
import cnames.structs._GtkMenuButtonPrivate
import cnames.structs._GtkMenuItemPrivate
import cnames.structs._GtkMenuPrivate
import cnames.structs._GtkMenuShellPrivate
import cnames.structs._GtkMenuToolButtonPrivate
import cnames.structs._GtkMessageDialogPrivate
import cnames.structs._GtkMiscPrivate
import cnames.structs._GtkModelButton
import cnames.structs._GtkMountOperationPrivate
import cnames.structs._GtkNotebookPrivate
import cnames.structs._GtkOrientable
import cnames.structs._GtkOverlayPrivate
import cnames.structs._GtkPadController
import cnames.structs._GtkPadControllerClass
import cnames.structs._GtkPageSetup
import cnames.structs._GtkPanedPrivate
import cnames.structs._GtkPaperSize
import cnames.structs._GtkPlacesSidebar
import cnames.structs._GtkPlacesSidebarClass
import cnames.structs._GtkPopoverMenu
import cnames.structs._GtkPopoverPrivate
import cnames.structs._GtkPrintContext
import cnames.structs._GtkPrintOperationPreview
import cnames.structs._GtkPrintOperationPrivate
import cnames.structs._GtkPrintSettings
import cnames.structs._GtkProgressBarPrivate
import cnames.structs._GtkRadioButtonPrivate
import cnames.structs._GtkRadioMenuItemPrivate
import cnames.structs._GtkRangePrivate
import cnames.structs._GtkRecentChooser
import cnames.structs._GtkRecentChooserDialogPrivate
import cnames.structs._GtkRecentChooserMenuPrivate
import cnames.structs._GtkRecentChooserWidgetPrivate
import cnames.structs._GtkRecentFilter
import cnames.structs._GtkRecentInfo
import cnames.structs._GtkRecentManagerPrivate
import cnames.structs._GtkScaleButtonPrivate
import cnames.structs._GtkScalePrivate
import cnames.structs._GtkScrollable
import cnames.structs._GtkScrolledWindowPrivate
import cnames.structs._GtkSelectionData
import cnames.structs._GtkSeparatorPrivate
import cnames.structs._GtkSeparatorToolItemPrivate
import cnames.structs._GtkSettingsPrivate
import cnames.structs._GtkShortcutLabel
import cnames.structs._GtkShortcutLabelClass
import cnames.structs._GtkShortcutsGroup
import cnames.structs._GtkShortcutsGroupClass
import cnames.structs._GtkShortcutsSection
import cnames.structs._GtkShortcutsSectionClass
import cnames.structs._GtkShortcutsShortcut
import cnames.structs._GtkShortcutsShortcutClass
import cnames.structs._GtkSizeGroupPrivate
import cnames.structs._GtkSpinButtonPrivate
import cnames.structs._GtkSpinnerPrivate
import cnames.structs._GtkStackSidebarPrivate
import cnames.structs._GtkStatusbarPrivate
import cnames.structs._GtkStyleContextPrivate
import cnames.structs._GtkStylePropertiesPrivate
import cnames.structs._GtkStyleProvider
import cnames.structs._GtkSwitchPrivate
import cnames.structs._GtkTargetList
import cnames.structs._GtkTextBTree
import cnames.structs._GtkTextBufferPrivate
import cnames.structs._GtkTextTagPrivate
import cnames.structs._GtkTextTagTablePrivate
import cnames.structs._GtkTextViewPrivate
import cnames.structs._GtkToggleButtonPrivate
import cnames.structs._GtkToggleToolButtonPrivate
import cnames.structs._GtkToolButtonPrivate
import cnames.structs._GtkToolItemGroupPrivate
import cnames.structs._GtkToolItemPrivate
import cnames.structs._GtkToolPalettePrivate
import cnames.structs._GtkToolShell
import cnames.structs._GtkToolbarPrivate
import cnames.structs._GtkTooltip
import cnames.structs._GtkTreeDragDest
import cnames.structs._GtkTreeDragSource
import cnames.structs._GtkTreeModel
import cnames.structs._GtkTreeModelFilterPrivate
import cnames.structs._GtkTreeModelSortPrivate
import cnames.structs._GtkTreePath
import cnames.structs._GtkTreeRowReference
import cnames.structs._GtkTreeSelectionPrivate
import cnames.structs._GtkTreeSortable
import cnames.structs._GtkTreeStorePrivate
import cnames.structs._GtkTreeViewColumnPrivate
import cnames.structs._GtkTreeViewPrivate
import cnames.structs._GtkViewportPrivate
import cnames.structs._GtkWidgetClassPrivate
import cnames.structs._GtkWidgetPath
import cnames.structs._GtkWidgetPrivate
import cnames.structs._GtkWindowGeometryInfo
import cnames.structs._GtkWindowGroupPrivate
import cnames.structs._GtkWindowPrivate
import cnames.structs._PangoAttrList
import cnames.structs._PangoContext
import cnames.structs._PangoFontDescription
import cnames.structs._PangoFontFace
import cnames.structs._PangoFontFamily
import cnames.structs._PangoFontMap
import cnames.structs._PangoLanguage
import cnames.structs._PangoLayout
import cnames.structs._PangoTabArray
import cnames.structs._cairo
import cnames.structs._cairo_font_options
import cnames.structs._cairo_pattern
import cnames.structs._cairo_region
import cnames.structs._cairo_surface
import platform.posix.__gnuc_va_list

// NOTE THIS FILE IS AUTO-GENERATED

@CStruct("struct { unsigned long p0; union { int p0; unsigned int p1; long p2; unsigned long p3; long p4; unsigned long p5; float p6; double p7; void* p8; } p1[2]; }")
class _GValue(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    var g_type: GType
        get() = memberAt<GTypeVar>(0).value
        set(value) { memberAt<GTypeVar>(0).value = value }
    
    val data: CArrayPointer<anonymousStruct1>
        get() = arrayMemberAt(8)
}

@CStruct("union { int p0; unsigned int p1; long p2; unsigned long p3; long p4; unsigned long p5; float p6; double p7; void* p8; }")
class anonymousStruct1(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(8, 8)
    
    var v_int: gint
        get() = memberAt<gintVar>(0).value
        set(value) { memberAt<gintVar>(0).value = value }
    
    var v_uint: guint
        get() = memberAt<guintVar>(0).value
        set(value) { memberAt<guintVar>(0).value = value }
    
    var v_long: glong
        get() = memberAt<glongVar>(0).value
        set(value) { memberAt<glongVar>(0).value = value }
    
    var v_ulong: gulong
        get() = memberAt<gulongVar>(0).value
        set(value) { memberAt<gulongVar>(0).value = value }
    
    var v_int64: gint64
        get() = memberAt<gint64Var>(0).value
        set(value) { memberAt<gint64Var>(0).value = value }
    
    var v_uint64: guint64
        get() = memberAt<guint64Var>(0).value
        set(value) { memberAt<guint64Var>(0).value = value }
    
    var v_float: gfloat
        get() = memberAt<gfloatVar>(0).value
        set(value) { memberAt<gfloatVar>(0).value = value }
    
    var v_double: gdouble
        get() = memberAt<gdoubleVar>(0).value
        set(value) { memberAt<gdoubleVar>(0).value = value }
    
    var v_pointer: gpointer?
        get() = memberAt<gpointerVar>(0).value
        set(value) { memberAt<gpointerVar>(0).value = value }
}

@CStruct("struct { unsigned long p0; }")
class _GTypeClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(8, 8)
    
    var g_type: GType
        get() = memberAt<GTypeVar>(0).value
        set(value) { memberAt<GTypeVar>(0).value = value }
}

@CStruct("struct { unsigned long p0; unsigned long p1; }")
class _GTypeInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    var g_type: GType
        get() = memberAt<GTypeVar>(0).value
        set(value) { memberAt<GTypeVar>(0).value = value }
    
    var g_instance_type: GType
        get() = memberAt<GTypeVar>(8).value
        set(value) { memberAt<GTypeVar>(8).value = value }
}

@CStruct("struct { void* p0; }")
class _GTypeInstance(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(8, 8)
    
    var g_class: CPointer<GTypeClass>?
        get() = memberAt<CPointerVar<GTypeClass>>(0).value
        set(value) { memberAt<CPointerVar<GTypeClass>>(0).value = value }
}

@CStruct("struct { unsigned short p0; void* p1; void* p2; void* p3; void* p4; void* p5; unsigned short p6; unsigned short p7; void* p8; void* p9; }")
class _GTypeInfo(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(72, 8)
    
    var class_size: guint16
        get() = memberAt<guint16Var>(0).value
        set(value) { memberAt<guint16Var>(0).value = value }
    
    var base_init: GBaseInitFunc?
        get() = memberAt<GBaseInitFuncVar>(8).value
        set(value) { memberAt<GBaseInitFuncVar>(8).value = value }
    
    var base_finalize: GBaseFinalizeFunc?
        get() = memberAt<GBaseFinalizeFuncVar>(16).value
        set(value) { memberAt<GBaseFinalizeFuncVar>(16).value = value }
    
    var class_init: GClassInitFunc?
        get() = memberAt<GClassInitFuncVar>(24).value
        set(value) { memberAt<GClassInitFuncVar>(24).value = value }
    
    var class_finalize: GClassFinalizeFunc?
        get() = memberAt<GClassFinalizeFuncVar>(32).value
        set(value) { memberAt<GClassFinalizeFuncVar>(32).value = value }
    
    var class_data: gconstpointer?
        get() = memberAt<gconstpointerVar>(40).value
        set(value) { memberAt<gconstpointerVar>(40).value = value }
    
    var instance_size: guint16
        get() = memberAt<guint16Var>(48).value
        set(value) { memberAt<guint16Var>(48).value = value }
    
    var n_preallocs: guint16
        get() = memberAt<guint16Var>(50).value
        set(value) { memberAt<guint16Var>(50).value = value }
    
    var instance_init: GInstanceInitFunc?
        get() = memberAt<GInstanceInitFuncVar>(56).value
        set(value) { memberAt<GInstanceInitFuncVar>(56).value = value }
    
    var value_table: CPointer<GTypeValueTable>?
        get() = memberAt<CPointerVar<GTypeValueTable>>(64).value
        set(value) { memberAt<CPointerVar<GTypeValueTable>>(64).value = value }
}

@CStruct("struct { void* p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; }")
class _GTypeValueTable(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(64, 8)
    
    var value_init: CPointer<CFunction<(CPointer<GValue>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GValue>?) -> Unit>>>(0).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GValue>?) -> Unit>>>(0).value = value }
    
    var value_free: CPointer<CFunction<(CPointer<GValue>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GValue>?) -> Unit>>>(8).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GValue>?) -> Unit>>>(8).value = value }
    
    var value_copy: CPointer<CFunction<(CPointer<GValue>?, CPointer<GValue>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GValue>?, CPointer<GValue>?) -> Unit>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GValue>?, CPointer<GValue>?) -> Unit>>>(16).value = value }
    
    var value_peek_pointer: CPointer<CFunction<(CPointer<GValue>?) -> gpointer?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GValue>?) -> gpointer?>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GValue>?) -> gpointer?>>>(24).value = value }
    
    var collect_format: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(32).value
        set(value) { memberAt<CPointerVar<gcharVar>>(32).value = value }
    
    var collect_value: CPointer<CFunction<(CPointer<GValue>?, guint, CPointer<GTypeCValue>?, guint) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GValue>?, guint, CPointer<GTypeCValue>?, guint) -> CPointer<gcharVar>?>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GValue>?, guint, CPointer<GTypeCValue>?, guint) -> CPointer<gcharVar>?>>>(40).value = value }
    
    var lcopy_format: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(48).value
        set(value) { memberAt<CPointerVar<gcharVar>>(48).value = value }
    
    var lcopy_value: CPointer<CFunction<(CPointer<GValue>?, guint, CPointer<GTypeCValue>?, guint) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GValue>?, guint, CPointer<GTypeCValue>?, guint) -> CPointer<gcharVar>?>>>(56).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GValue>?, guint, CPointer<GTypeCValue>?, guint) -> CPointer<gcharVar>?>>>(56).value = value }
}

@CStruct("struct { unsigned int p0; }")
class _GTypeFundamentalInfo(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(4, 4)
    
    var type_flags: GTypeFundamentalFlags
        get() = memberAt<GTypeFundamentalFlagsVar>(0).value
        set(value) { memberAt<GTypeFundamentalFlagsVar>(0).value = value }
}

@CStruct("struct { void* p0; void* p1; void* p2; }")
class _GInterfaceInfo(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    var interface_init: GInterfaceInitFunc?
        get() = memberAt<GInterfaceInitFuncVar>(0).value
        set(value) { memberAt<GInterfaceInitFuncVar>(0).value = value }
    
    var interface_finalize: GInterfaceFinalizeFunc?
        get() = memberAt<GInterfaceFinalizeFuncVar>(8).value
        set(value) { memberAt<GInterfaceFinalizeFuncVar>(8).value = value }
    
    var interface_data: gpointer?
        get() = memberAt<gpointerVar>(16).value
        set(value) { memberAt<gpointerVar>(16).value = value }
}

@CStruct("struct { unsigned long p0; void* p1; unsigned int p2; unsigned int p3; }")
class _GTypeQuery(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    var type: GType
        get() = memberAt<GTypeVar>(0).value
        set(value) { memberAt<GTypeVar>(0).value = value }
    
    var type_name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(8).value
        set(value) { memberAt<CPointerVar<gcharVar>>(8).value = value }
    
    var class_size: guint
        get() = memberAt<guintVar>(16).value
        set(value) { memberAt<guintVar>(16).value = value }
    
    var instance_size: guint
        get() = memberAt<guintVar>(20).value
        set(value) { memberAt<guintVar>(20).value = value }
}

@CStruct("struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; }")
class _GParamSpec(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(72, 8)
    
    val g_type_instance: GTypeInstance
        get() = memberAt(0)
    
    var name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(8).value
        set(value) { memberAt<CPointerVar<gcharVar>>(8).value = value }
    
    var flags: GParamFlags
        get() = memberAt<GParamFlagsVar>(16).value
        set(value) { memberAt<GParamFlagsVar>(16).value = value }
    
    var value_type: GType
        get() = memberAt<GTypeVar>(24).value
        set(value) { memberAt<GTypeVar>(24).value = value }
    
    var owner_type: GType
        get() = memberAt<GTypeVar>(32).value
        set(value) { memberAt<GTypeVar>(32).value = value }
    
    var _nick: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(40).value
        set(value) { memberAt<CPointerVar<gcharVar>>(40).value = value }
    
    var _blurb: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(48).value
        set(value) { memberAt<CPointerVar<gcharVar>>(48).value = value }
    
    var qdata: CPointer<GData>?
        get() = memberAt<CPointerVar<GData>>(56).value
        set(value) { memberAt<CPointerVar<GData>>(56).value = value }
    
    var ref_count: guint
        get() = memberAt<guintVar>(64).value
        set(value) { memberAt<guintVar>(64).value = value }
    
    var param_id: guint
        get() = memberAt<guintVar>(68).value
        set(value) { memberAt<guintVar>(68).value = value }
}

@CStruct("struct { struct { unsigned long p0; } p0; unsigned long p1; void* p2; void* p3; void* p4; void* p5; void* p6[4]; }")
class _GParamSpecClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(80, 8)
    
    val g_type_class: GTypeClass
        get() = memberAt(0)
    
    var value_type: GType
        get() = memberAt<GTypeVar>(8).value
        set(value) { memberAt<GTypeVar>(8).value = value }
    
    var finalize: CPointer<CFunction<(CPointer<GParamSpec>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GParamSpec>?) -> Unit>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GParamSpec>?) -> Unit>>>(16).value = value }
    
    var value_set_default: CPointer<CFunction<(CPointer<GParamSpec>?, CPointer<GValue>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GParamSpec>?, CPointer<GValue>?) -> Unit>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GParamSpec>?, CPointer<GValue>?) -> Unit>>>(24).value = value }
    
    var value_validate: CPointer<CFunction<(CPointer<GParamSpec>?, CPointer<GValue>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GParamSpec>?, CPointer<GValue>?) -> gboolean>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GParamSpec>?, CPointer<GValue>?) -> gboolean>>>(32).value = value }
    
    var values_cmp: CPointer<CFunction<(CPointer<GParamSpec>?, CPointer<GValue>?, CPointer<GValue>?) -> gint>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GParamSpec>?, CPointer<GValue>?, CPointer<GValue>?) -> gint>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GParamSpec>?, CPointer<GValue>?, CPointer<GValue>?) -> gint>>>(40).value = value }
    
    val dummy: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(48)
}

@CStruct("struct { void* p0; struct { unsigned long p0; union { int p0; unsigned int p1; long p2; unsigned long p3; long p4; unsigned long p5; float p6; double p7; void* p8; } p1[2]; } p1; }")
class _GParameter(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    var name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(0).value
        set(value) { memberAt<CPointerVar<gcharVar>>(0).value = value }
    
    val value: GValue
        get() = memberAt(8)
}

@CStruct("struct { unsigned short p0; unsigned short p1; void* p2; unsigned long p3; void* p4; void* p5; void* p6; void* p7; }")
class _GParamSpecTypeInfo(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    var instance_size: guint16
        get() = memberAt<guint16Var>(0).value
        set(value) { memberAt<guint16Var>(0).value = value }
    
    var n_preallocs: guint16
        get() = memberAt<guint16Var>(2).value
        set(value) { memberAt<guint16Var>(2).value = value }
    
    var instance_init: CPointer<CFunction<(CPointer<GParamSpec>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GParamSpec>?) -> Unit>>>(8).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GParamSpec>?) -> Unit>>>(8).value = value }
    
    var value_type: GType
        get() = memberAt<GTypeVar>(16).value
        set(value) { memberAt<GTypeVar>(16).value = value }
    
    var finalize: CPointer<CFunction<(CPointer<GParamSpec>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GParamSpec>?) -> Unit>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GParamSpec>?) -> Unit>>>(24).value = value }
    
    var value_set_default: CPointer<CFunction<(CPointer<GParamSpec>?, CPointer<GValue>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GParamSpec>?, CPointer<GValue>?) -> Unit>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GParamSpec>?, CPointer<GValue>?) -> Unit>>>(32).value = value }
    
    var value_validate: CPointer<CFunction<(CPointer<GParamSpec>?, CPointer<GValue>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GParamSpec>?, CPointer<GValue>?) -> gboolean>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GParamSpec>?, CPointer<GValue>?) -> gboolean>>>(40).value = value }
    
    var values_cmp: CPointer<CFunction<(CPointer<GParamSpec>?, CPointer<GValue>?, CPointer<GValue>?) -> gint>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GParamSpec>?, CPointer<GValue>?, CPointer<GValue>?) -> gint>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GParamSpec>?, CPointer<GValue>?, CPointer<GValue>?) -> gint>>>(48).value = value }
}

@CStruct("struct { void* p0; void* p1; void* p2; }")
class _GList(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    var data: gpointer?
        get() = memberAt<gpointerVar>(0).value
        set(value) { memberAt<gpointerVar>(0).value = value }
    
    var next: CPointer<GList>?
        get() = memberAt<CPointerVar<GList>>(8).value
        set(value) { memberAt<CPointerVar<GList>>(8).value = value }
    
    var prev: CPointer<GList>?
        get() = memberAt<CPointerVar<GList>>(16).value
        set(value) { memberAt<CPointerVar<GList>>(16).value = value }
}

class _GClosure(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    var marshal: CPointer<CFunction<(CPointer<GClosure>?, CPointer<GValue>?, guint, CPointer<GValue>?, gpointer?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GClosure>?, CPointer<GValue>?, guint, CPointer<GValue>?, gpointer?, gpointer?) -> Unit>>>(8).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GClosure>?, CPointer<GValue>?, guint, CPointer<GValue>?, gpointer?, gpointer?) -> Unit>>>(8).value = value }
    
    var data: gpointer?
        get() = memberAt<gpointerVar>(16).value
        set(value) { memberAt<gpointerVar>(16).value = value }
    
    var notifiers: CPointer<GClosureNotifyData>?
        get() = memberAt<CPointerVar<GClosureNotifyData>>(24).value
        set(value) { memberAt<CPointerVar<GClosureNotifyData>>(24).value = value }
    
    var ref_count: guint
        get() = readBits(this.rawPtr, 0, 15, false).toUInt()
        set(value) { writeBits(this.rawPtr, 0, 15, value.toLong()) }
    
    var meta_marshal_nouse: guint
        get() = readBits(this.rawPtr, 15, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 15, 1, value.toLong()) }
    
    var n_guards: guint
        get() = readBits(this.rawPtr, 16, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 16, 1, value.toLong()) }
    
    var n_fnotifiers: guint
        get() = readBits(this.rawPtr, 17, 2, false).toUInt()
        set(value) { writeBits(this.rawPtr, 17, 2, value.toLong()) }
    
    var n_inotifiers: guint
        get() = readBits(this.rawPtr, 19, 8, false).toUInt()
        set(value) { writeBits(this.rawPtr, 19, 8, value.toLong()) }
    
    var in_inotify: guint
        get() = readBits(this.rawPtr, 27, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 27, 1, value.toLong()) }
    
    var floating: guint
        get() = readBits(this.rawPtr, 28, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 28, 1, value.toLong()) }
    
    var derivative_flag: guint
        get() = readBits(this.rawPtr, 29, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 29, 1, value.toLong()) }
    
    var in_marshal: guint
        get() = readBits(this.rawPtr, 30, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 30, 1, value.toLong()) }
    
    var is_invalid: guint
        get() = readBits(this.rawPtr, 31, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 31, 1, value.toLong()) }
}

@CStruct("struct { void* p0; void* p1; }")
class _GClosureNotifyData(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    var data: gpointer?
        get() = memberAt<gpointerVar>(0).value
        set(value) { memberAt<gpointerVar>(0).value = value }
    
    var notify: GClosureNotify?
        get() = memberAt<GClosureNotifyVar>(8).value
        set(value) { memberAt<GClosureNotifyVar>(8).value = value }
}

@CStruct("struct { null p0; void* p1; }")
class _GCClosure(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val closure: GClosure
        get() = memberAt(0)
    
    var callback: gpointer?
        get() = memberAt<gpointerVar>(32).value
        set(value) { memberAt<gpointerVar>(32).value = value }
}

@CStruct("struct { unsigned int p0; void* p1; unsigned long p2; unsigned int p3; unsigned long p4; unsigned int p5; void* p6; }")
class _GSignalQuery(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    var signal_id: guint
        get() = memberAt<guintVar>(0).value
        set(value) { memberAt<guintVar>(0).value = value }
    
    var signal_name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(8).value
        set(value) { memberAt<CPointerVar<gcharVar>>(8).value = value }
    
    var itype: GType
        get() = memberAt<GTypeVar>(16).value
        set(value) { memberAt<GTypeVar>(16).value = value }
    
    var signal_flags: GSignalFlags
        get() = memberAt<GSignalFlagsVar>(24).value
        set(value) { memberAt<GSignalFlagsVar>(24).value = value }
    
    var return_type: GType
        get() = memberAt<GTypeVar>(32).value
        set(value) { memberAt<GTypeVar>(32).value = value }
    
    var n_params: guint
        get() = memberAt<guintVar>(40).value
        set(value) { memberAt<guintVar>(40).value = value }
    
    var param_types: CPointer<GTypeVar>?
        get() = memberAt<CPointerVar<GTypeVar>>(48).value
        set(value) { memberAt<CPointerVar<GTypeVar>>(48).value = value }
}

@CStruct("struct { unsigned int p0; unsigned int p1; unsigned int p2; }")
class _GSignalInvocationHint(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(12, 4)
    
    var signal_id: guint
        get() = memberAt<guintVar>(0).value
        set(value) { memberAt<guintVar>(0).value = value }
    
    var detail: GQuark
        get() = memberAt<GQuarkVar>(4).value
        set(value) { memberAt<GQuarkVar>(4).value = value }
    
    var run_type: GSignalFlags
        get() = memberAt<GSignalFlagsVar>(8).value
        set(value) { memberAt<GSignalFlagsVar>(8).value = value }
}

@CStruct("struct { struct { void* p0; } p0; unsigned int p1; void* p2; }")
class _GObject(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    val g_type_instance: GTypeInstance
        get() = memberAt(0)
    
    var ref_count: guint
        get() = memberAt<guintVar>(8).value
        set(value) { memberAt<guintVar>(8).value = value }
    
    var qdata: CPointer<GData>?
        get() = memberAt<CPointerVar<GData>>(16).value
        set(value) { memberAt<CPointerVar<GData>>(16).value = value }
}

@CStruct("struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; }")
class _GObjectClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(136, 8)
    
    val g_type_class: GTypeClass
        get() = memberAt(0)
    
    var construct_properties: CPointer<GSList>?
        get() = memberAt<CPointerVar<GSList>>(8).value
        set(value) { memberAt<CPointerVar<GSList>>(8).value = value }
    
    var constructor: CPointer<CFunction<(GType, guint, CPointer<GObjectConstructParam>?) -> CPointer<GObject>?>>?
        get() = memberAt<CPointerVar<CFunction<(GType, guint, CPointer<GObjectConstructParam>?) -> CPointer<GObject>?>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(GType, guint, CPointer<GObjectConstructParam>?) -> CPointer<GObject>?>>>(16).value = value }
    
    var set_property: CPointer<CFunction<(CPointer<GObject>?, guint, CPointer<GValue>?, CPointer<GParamSpec>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GObject>?, guint, CPointer<GValue>?, CPointer<GParamSpec>?) -> Unit>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GObject>?, guint, CPointer<GValue>?, CPointer<GParamSpec>?) -> Unit>>>(24).value = value }
    
    var get_property: CPointer<CFunction<(CPointer<GObject>?, guint, CPointer<GValue>?, CPointer<GParamSpec>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GObject>?, guint, CPointer<GValue>?, CPointer<GParamSpec>?) -> Unit>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GObject>?, guint, CPointer<GValue>?, CPointer<GParamSpec>?) -> Unit>>>(32).value = value }
    
    var dispose: CPointer<CFunction<(CPointer<GObject>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GObject>?) -> Unit>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GObject>?) -> Unit>>>(40).value = value }
    
    var finalize: CPointer<CFunction<(CPointer<GObject>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GObject>?) -> Unit>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GObject>?) -> Unit>>>(48).value = value }
    
    var dispatch_properties_changed: CPointer<CFunction<(CPointer<GObject>?, guint, CPointer<CPointerVar<GParamSpec>>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GObject>?, guint, CPointer<CPointerVar<GParamSpec>>?) -> Unit>>>(56).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GObject>?, guint, CPointer<CPointerVar<GParamSpec>>?) -> Unit>>>(56).value = value }
    
    var notify: CPointer<CFunction<(CPointer<GObject>?, CPointer<GParamSpec>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GObject>?, CPointer<GParamSpec>?) -> Unit>>>(64).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GObject>?, CPointer<GParamSpec>?) -> Unit>>>(64).value = value }
    
    var constructed: CPointer<CFunction<(CPointer<GObject>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GObject>?) -> Unit>>>(72).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GObject>?) -> Unit>>>(72).value = value }
    
    var flags: gsize
        get() = memberAt<gsizeVar>(80).value
        set(value) { memberAt<gsizeVar>(80).value = value }
    
    val pdummy: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(88)
}

@CStruct("struct { void* p0; void* p1; }")
class _GSList(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    var data: gpointer?
        get() = memberAt<gpointerVar>(0).value
        set(value) { memberAt<gpointerVar>(0).value = value }
    
    var next: CPointer<GSList>?
        get() = memberAt<CPointerVar<GSList>>(8).value
        set(value) { memberAt<CPointerVar<GSList>>(8).value = value }
}

@CStruct("struct { void* p0; void* p1; }")
class _GObjectConstructParam(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    var pspec: CPointer<GParamSpec>?
        get() = memberAt<CPointerVar<GParamSpec>>(0).value
        set(value) { memberAt<CPointerVar<GParamSpec>>(0).value = value }
    
    var value: CPointer<GValue>?
        get() = memberAt<CPointerVar<GValue>>(8).value
        set(value) { memberAt<CPointerVar<GValue>>(8).value = value }
}

@CStruct("struct { union { void* p0; } p0; }")
class GWeakRef(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(8, 8)
    
    val priv: anonymousStruct2
        get() = memberAt(0)
}

@CStruct("union { void* p0; }")
class anonymousStruct2(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(8, 8)
    
    var p: gpointer?
        get() = memberAt<gpointerVar>(0).value
        set(value) { memberAt<gpointerVar>(0).value = value }
}

@CStruct("struct { struct { unsigned long p0; } p0; int p1; int p2; unsigned int p3; void* p4; }")
class _GEnumClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val g_type_class: GTypeClass
        get() = memberAt(0)
    
    var minimum: gint
        get() = memberAt<gintVar>(8).value
        set(value) { memberAt<gintVar>(8).value = value }
    
    var maximum: gint
        get() = memberAt<gintVar>(12).value
        set(value) { memberAt<gintVar>(12).value = value }
    
    var n_values: guint
        get() = memberAt<guintVar>(16).value
        set(value) { memberAt<guintVar>(16).value = value }
    
    var values: CPointer<GEnumValue>?
        get() = memberAt<CPointerVar<GEnumValue>>(24).value
        set(value) { memberAt<CPointerVar<GEnumValue>>(24).value = value }
}

@CStruct("struct { int p0; void* p1; void* p2; }")
class _GEnumValue(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    var value: gint
        get() = memberAt<gintVar>(0).value
        set(value) { memberAt<gintVar>(0).value = value }
    
    var value_name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(8).value
        set(value) { memberAt<CPointerVar<gcharVar>>(8).value = value }
    
    var value_nick: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(16).value
        set(value) { memberAt<CPointerVar<gcharVar>>(16).value = value }
}

@CStruct("struct { struct { unsigned long p0; } p0; unsigned int p1; unsigned int p2; void* p3; }")
class _GFlagsClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    val g_type_class: GTypeClass
        get() = memberAt(0)
    
    var mask: guint
        get() = memberAt<guintVar>(8).value
        set(value) { memberAt<guintVar>(8).value = value }
    
    var n_values: guint
        get() = memberAt<guintVar>(12).value
        set(value) { memberAt<guintVar>(12).value = value }
    
    var values: CPointer<GFlagsValue>?
        get() = memberAt<CPointerVar<GFlagsValue>>(16).value
        set(value) { memberAt<CPointerVar<GFlagsValue>>(16).value = value }
}

@CStruct("struct { unsigned int p0; void* p1; void* p2; }")
class _GFlagsValue(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    var value: guint
        get() = memberAt<guintVar>(0).value
        set(value) { memberAt<guintVar>(0).value = value }
    
    var value_name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(8).value
        set(value) { memberAt<CPointerVar<gcharVar>>(8).value = value }
    
    var value_nick: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(16).value
        set(value) { memberAt<CPointerVar<gcharVar>>(16).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; signed char p1; signed char p2; signed char p3; }")
class _GParamSpecChar(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(80, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
    
    var minimum: gint8
        get() = memberAt<gint8Var>(72).value
        set(value) { memberAt<gint8Var>(72).value = value }
    
    var maximum: gint8
        get() = memberAt<gint8Var>(73).value
        set(value) { memberAt<gint8Var>(73).value = value }
    
    var default_value: gint8
        get() = memberAt<gint8Var>(74).value
        set(value) { memberAt<gint8Var>(74).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; unsigned char p1; unsigned char p2; unsigned char p3; }")
class _GParamSpecUChar(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(80, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
    
    var minimum: guint8
        get() = memberAt<guint8Var>(72).value
        set(value) { memberAt<guint8Var>(72).value = value }
    
    var maximum: guint8
        get() = memberAt<guint8Var>(73).value
        set(value) { memberAt<guint8Var>(73).value = value }
    
    var default_value: guint8
        get() = memberAt<guint8Var>(74).value
        set(value) { memberAt<guint8Var>(74).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; int p1; }")
class _GParamSpecBoolean(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(80, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
    
    var default_value: gboolean
        get() = memberAt<gbooleanVar>(72).value
        set(value) { memberAt<gbooleanVar>(72).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; int p1; int p2; int p3; }")
class _GParamSpecInt(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(88, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
    
    var minimum: gint
        get() = memberAt<gintVar>(72).value
        set(value) { memberAt<gintVar>(72).value = value }
    
    var maximum: gint
        get() = memberAt<gintVar>(76).value
        set(value) { memberAt<gintVar>(76).value = value }
    
    var default_value: gint
        get() = memberAt<gintVar>(80).value
        set(value) { memberAt<gintVar>(80).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; unsigned int p1; unsigned int p2; unsigned int p3; }")
class _GParamSpecUInt(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(88, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
    
    var minimum: guint
        get() = memberAt<guintVar>(72).value
        set(value) { memberAt<guintVar>(72).value = value }
    
    var maximum: guint
        get() = memberAt<guintVar>(76).value
        set(value) { memberAt<guintVar>(76).value = value }
    
    var default_value: guint
        get() = memberAt<guintVar>(80).value
        set(value) { memberAt<guintVar>(80).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; long p1; long p2; long p3; }")
class _GParamSpecLong(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(96, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
    
    var minimum: glong
        get() = memberAt<glongVar>(72).value
        set(value) { memberAt<glongVar>(72).value = value }
    
    var maximum: glong
        get() = memberAt<glongVar>(80).value
        set(value) { memberAt<glongVar>(80).value = value }
    
    var default_value: glong
        get() = memberAt<glongVar>(88).value
        set(value) { memberAt<glongVar>(88).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; unsigned long p1; unsigned long p2; unsigned long p3; }")
class _GParamSpecULong(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(96, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
    
    var minimum: gulong
        get() = memberAt<gulongVar>(72).value
        set(value) { memberAt<gulongVar>(72).value = value }
    
    var maximum: gulong
        get() = memberAt<gulongVar>(80).value
        set(value) { memberAt<gulongVar>(80).value = value }
    
    var default_value: gulong
        get() = memberAt<gulongVar>(88).value
        set(value) { memberAt<gulongVar>(88).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; long p1; long p2; long p3; }")
class _GParamSpecInt64(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(96, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
    
    var minimum: gint64
        get() = memberAt<gint64Var>(72).value
        set(value) { memberAt<gint64Var>(72).value = value }
    
    var maximum: gint64
        get() = memberAt<gint64Var>(80).value
        set(value) { memberAt<gint64Var>(80).value = value }
    
    var default_value: gint64
        get() = memberAt<gint64Var>(88).value
        set(value) { memberAt<gint64Var>(88).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; unsigned long p1; unsigned long p2; unsigned long p3; }")
class _GParamSpecUInt64(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(96, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
    
    var minimum: guint64
        get() = memberAt<guint64Var>(72).value
        set(value) { memberAt<guint64Var>(72).value = value }
    
    var maximum: guint64
        get() = memberAt<guint64Var>(80).value
        set(value) { memberAt<guint64Var>(80).value = value }
    
    var default_value: guint64
        get() = memberAt<guint64Var>(88).value
        set(value) { memberAt<guint64Var>(88).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; unsigned int p1; }")
class _GParamSpecUnichar(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(80, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
    
    var default_value: gunichar
        get() = memberAt<gunicharVar>(72).value
        set(value) { memberAt<gunicharVar>(72).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; void* p1; int p2; }")
class _GParamSpecEnum(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(88, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
    
    var enum_class: CPointer<GEnumClass>?
        get() = memberAt<CPointerVar<GEnumClass>>(72).value
        set(value) { memberAt<CPointerVar<GEnumClass>>(72).value = value }
    
    var default_value: gint
        get() = memberAt<gintVar>(80).value
        set(value) { memberAt<gintVar>(80).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; void* p1; unsigned int p2; }")
class _GParamSpecFlags(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(88, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
    
    var flags_class: CPointer<GFlagsClass>?
        get() = memberAt<CPointerVar<GFlagsClass>>(72).value
        set(value) { memberAt<CPointerVar<GFlagsClass>>(72).value = value }
    
    var default_value: guint
        get() = memberAt<guintVar>(80).value
        set(value) { memberAt<guintVar>(80).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; float p1; float p2; float p3; float p4; }")
class _GParamSpecFloat(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(88, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
    
    var minimum: gfloat
        get() = memberAt<gfloatVar>(72).value
        set(value) { memberAt<gfloatVar>(72).value = value }
    
    var maximum: gfloat
        get() = memberAt<gfloatVar>(76).value
        set(value) { memberAt<gfloatVar>(76).value = value }
    
    var default_value: gfloat
        get() = memberAt<gfloatVar>(80).value
        set(value) { memberAt<gfloatVar>(80).value = value }
    
    var epsilon: gfloat
        get() = memberAt<gfloatVar>(84).value
        set(value) { memberAt<gfloatVar>(84).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; double p1; double p2; double p3; double p4; }")
class _GParamSpecDouble(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(104, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
    
    var minimum: gdouble
        get() = memberAt<gdoubleVar>(72).value
        set(value) { memberAt<gdoubleVar>(72).value = value }
    
    var maximum: gdouble
        get() = memberAt<gdoubleVar>(80).value
        set(value) { memberAt<gdoubleVar>(80).value = value }
    
    var default_value: gdouble
        get() = memberAt<gdoubleVar>(88).value
        set(value) { memberAt<gdoubleVar>(88).value = value }
    
    var epsilon: gdouble
        get() = memberAt<gdoubleVar>(96).value
        set(value) { memberAt<gdoubleVar>(96).value = value }
}

class _GParamSpecString(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(104, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
    
    var default_value: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(72).value
        set(value) { memberAt<CPointerVar<gcharVar>>(72).value = value }
    
    var cset_first: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(80).value
        set(value) { memberAt<CPointerVar<gcharVar>>(80).value = value }
    
    var cset_nth: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(88).value
        set(value) { memberAt<CPointerVar<gcharVar>>(88).value = value }
    
    var substitutor: gchar
        get() = memberAt<gcharVar>(96).value
        set(value) { memberAt<gcharVar>(96).value = value }
    
    var null_fold_if_empty: guint
        get() = readBits(this.rawPtr, 776, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 776, 1, value.toLong()) }
    
    var ensure_non_null: guint
        get() = readBits(this.rawPtr, 777, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 777, 1, value.toLong()) }
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; }")
class _GParamSpecParam(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(72, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; }")
class _GParamSpecBoxed(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(72, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; }")
class _GParamSpecPointer(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(72, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; void* p1; unsigned int p2; }")
class _GParamSpecValueArray(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(88, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
    
    var element_spec: CPointer<GParamSpec>?
        get() = memberAt<CPointerVar<GParamSpec>>(72).value
        set(value) { memberAt<CPointerVar<GParamSpec>>(72).value = value }
    
    var fixed_n_elements: guint
        get() = memberAt<guintVar>(80).value
        set(value) { memberAt<guintVar>(80).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; }")
class _GParamSpecObject(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(72, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; void* p1; }")
class _GParamSpecOverride(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(80, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
    
    var overridden: CPointer<GParamSpec>?
        get() = memberAt<CPointerVar<GParamSpec>>(72).value
        set(value) { memberAt<CPointerVar<GParamSpec>>(72).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; unsigned long p1; }")
class _GParamSpecGType(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(80, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
    
    var is_a_type: GType
        get() = memberAt<GTypeVar>(72).value
        set(value) { memberAt<GTypeVar>(72).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; void* p1; void* p2; void* p3[4]; }")
class _GParamSpecVariant(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(120, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
    
    var type: CPointer<GVariantType>?
        get() = memberAt<CPointerVar<GVariantType>>(72).value
        set(value) { memberAt<CPointerVar<GVariantType>>(72).value = value }
    
    var default_value: CPointer<GVariant>?
        get() = memberAt<CPointerVar<GVariant>>(80).value
        set(value) { memberAt<CPointerVar<GVariant>>(80).value = value }
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(88)
}

@CStruct("struct { void* p0; void* p1; void* p2; unsigned int p3; void* p4; int p5; unsigned int p6; unsigned int p7; void* p8; void* p9; void* p10; void* p11; void* p12; }")
class _GSource(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(96, 8)
    
    var callback_data: gpointer?
        get() = memberAt<gpointerVar>(0).value
        set(value) { memberAt<gpointerVar>(0).value = value }
    
    var callback_funcs: CPointer<GSourceCallbackFuncs>?
        get() = memberAt<CPointerVar<GSourceCallbackFuncs>>(8).value
        set(value) { memberAt<CPointerVar<GSourceCallbackFuncs>>(8).value = value }
    
    var source_funcs: CPointer<GSourceFuncs>?
        get() = memberAt<CPointerVar<GSourceFuncs>>(16).value
        set(value) { memberAt<CPointerVar<GSourceFuncs>>(16).value = value }
    
    var ref_count: guint
        get() = memberAt<guintVar>(24).value
        set(value) { memberAt<guintVar>(24).value = value }
    
    var context: CPointer<GMainContext>?
        get() = memberAt<CPointerVar<GMainContext>>(32).value
        set(value) { memberAt<CPointerVar<GMainContext>>(32).value = value }
    
    var priority: gint
        get() = memberAt<gintVar>(40).value
        set(value) { memberAt<gintVar>(40).value = value }
    
    var flags: guint
        get() = memberAt<guintVar>(44).value
        set(value) { memberAt<guintVar>(44).value = value }
    
    var source_id: guint
        get() = memberAt<guintVar>(48).value
        set(value) { memberAt<guintVar>(48).value = value }
    
    var poll_fds: CPointer<GSList>?
        get() = memberAt<CPointerVar<GSList>>(56).value
        set(value) { memberAt<CPointerVar<GSList>>(56).value = value }
    
    var prev: CPointer<GSource>?
        get() = memberAt<CPointerVar<GSource>>(64).value
        set(value) { memberAt<CPointerVar<GSource>>(64).value = value }
    
    var next: CPointer<GSource>?
        get() = memberAt<CPointerVar<GSource>>(72).value
        set(value) { memberAt<CPointerVar<GSource>>(72).value = value }
    
    var name: CPointer<ByteVar>?
        get() = memberAt<CPointerVar<ByteVar>>(80).value
        set(value) { memberAt<CPointerVar<ByteVar>>(80).value = value }
    
    var priv: CPointer<GSourcePrivate>?
        get() = memberAt<CPointerVar<GSourcePrivate>>(88).value
        set(value) { memberAt<CPointerVar<GSourcePrivate>>(88).value = value }
}

@CStruct("struct { void* p0; void* p1; void* p2; }")
class _GSourceCallbackFuncs(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    var ref: CPointer<CFunction<(gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(gpointer?) -> Unit>>>(0).value
        set(value) { memberAt<CPointerVar<CFunction<(gpointer?) -> Unit>>>(0).value = value }
    
    var unref: CPointer<CFunction<(gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(gpointer?) -> Unit>>>(8).value
        set(value) { memberAt<CPointerVar<CFunction<(gpointer?) -> Unit>>>(8).value = value }
    
    var get: CPointer<CFunction<(gpointer?, CPointer<GSource>?, CPointer<GSourceFuncVar>?, CPointer<gpointerVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(gpointer?, CPointer<GSource>?, CPointer<GSourceFuncVar>?, CPointer<gpointerVar>?) -> Unit>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(gpointer?, CPointer<GSource>?, CPointer<GSourceFuncVar>?, CPointer<gpointerVar>?) -> Unit>>>(16).value = value }
}

@CStruct("struct { void* p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GSourceFuncs(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    var prepare: CPointer<CFunction<(CPointer<GSource>?, CPointer<gintVar>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSource>?, CPointer<gintVar>?) -> gboolean>>>(0).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSource>?, CPointer<gintVar>?) -> gboolean>>>(0).value = value }
    
    var check: CPointer<CFunction<(CPointer<GSource>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSource>?) -> gboolean>>>(8).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSource>?) -> gboolean>>>(8).value = value }
    
    var dispatch: CPointer<CFunction<(CPointer<GSource>?, GSourceFunc?, gpointer?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSource>?, GSourceFunc?, gpointer?) -> gboolean>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSource>?, GSourceFunc?, gpointer?) -> gboolean>>>(16).value = value }
    
    var finalize: CPointer<CFunction<(CPointer<GSource>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSource>?) -> Unit>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSource>?) -> Unit>>>(24).value = value }
    
    var closure_callback: GSourceFunc?
        get() = memberAt<GSourceFuncVar>(32).value
        set(value) { memberAt<GSourceFuncVar>(32).value = value }
    
    var closure_marshal: GSourceDummyMarshal?
        get() = memberAt<GSourceDummyMarshalVar>(40).value
        set(value) { memberAt<GSourceDummyMarshalVar>(40).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; unsigned int p1; void* p2; void* p3; void* p4; }")
class _GTypeModule(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var use_count: guint
        get() = memberAt<guintVar>(24).value
        set(value) { memberAt<guintVar>(24).value = value }
    
    var type_infos: CPointer<GSList>?
        get() = memberAt<CPointerVar<GSList>>(32).value
        set(value) { memberAt<CPointerVar<GSList>>(32).value = value }
    
    var interface_infos: CPointer<GSList>?
        get() = memberAt<CPointerVar<GSList>>(40).value
        set(value) { memberAt<CPointerVar<GSList>>(40).value = value }
    
    var name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(48).value
        set(value) { memberAt<CPointerVar<gcharVar>>(48).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; }")
class _GTypeModuleClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(184, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var load: CPointer<CFunction<(CPointer<GTypeModule>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTypeModule>?) -> gboolean>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTypeModule>?) -> gboolean>>>(136).value = value }
    
    var unload: CPointer<CFunction<(CPointer<GTypeModule>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTypeModule>?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTypeModule>?) -> Unit>>>(144).value = value }
    
    var reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value = value }
    
    var reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
    
    var reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value = value }
    
    var reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GTypePluginClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val base_iface: GTypeInterface
        get() = memberAt(0)
    
    var use_plugin: GTypePluginUse?
        get() = memberAt<GTypePluginUseVar>(16).value
        set(value) { memberAt<GTypePluginUseVar>(16).value = value }
    
    var unuse_plugin: GTypePluginUnuse?
        get() = memberAt<GTypePluginUnuseVar>(24).value
        set(value) { memberAt<GTypePluginUnuseVar>(24).value = value }
    
    var complete_type_info: GTypePluginCompleteTypeInfo?
        get() = memberAt<GTypePluginCompleteTypeInfoVar>(32).value
        set(value) { memberAt<GTypePluginCompleteTypeInfoVar>(32).value = value }
    
    var complete_interface_info: GTypePluginCompleteInterfaceInfo?
        get() = memberAt<GTypePluginCompleteInterfaceInfoVar>(40).value
        set(value) { memberAt<GTypePluginCompleteInterfaceInfoVar>(40).value = value }
}

@CStruct("struct { unsigned int p0; void* p1; unsigned int p2; }")
class _GValueArray(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    var n_values: guint
        get() = memberAt<guintVar>(0).value
        set(value) { memberAt<guintVar>(0).value = value }
    
    var values: CPointer<GValue>?
        get() = memberAt<CPointerVar<GValue>>(8).value
        set(value) { memberAt<CPointerVar<GValue>>(8).value = value }
    
    var n_prealloced: guint
        get() = memberAt<guintVar>(16).value
        set(value) { memberAt<guintVar>(16).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GAppLaunchContext(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GAppLaunchContextPrivate>?
        get() = memberAt<CPointerVar<GAppLaunchContextPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GAppLaunchContextPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GBufferedInputStream(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val parent_instance: GFilterInputStream
        get() = memberAt(0)
    
    var priv: CPointer<GBufferedInputStreamPrivate>?
        get() = memberAt<CPointerVar<GBufferedInputStreamPrivate>>(40).value
        set(value) { memberAt<CPointerVar<GBufferedInputStreamPrivate>>(40).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GFilterInputStream(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val parent_instance: GInputStream
        get() = memberAt(0)
    
    var base_stream: CPointer<GInputStream>?
        get() = memberAt<CPointerVar<GInputStream>>(32).value
        set(value) { memberAt<CPointerVar<GInputStream>>(32).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GInputStream(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GInputStreamPrivate>?
        get() = memberAt<CPointerVar<GInputStreamPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GInputStreamPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GBufferedOutputStream(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val parent_instance: GFilterOutputStream
        get() = memberAt(0)
    
    var priv: CPointer<GBufferedOutputStreamPrivate>?
        get() = memberAt<CPointerVar<GBufferedOutputStreamPrivate>>(40).value
        set(value) { memberAt<CPointerVar<GBufferedOutputStreamPrivate>>(40).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GFilterOutputStream(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val parent_instance: GOutputStream
        get() = memberAt(0)
    
    var base_stream: CPointer<GOutputStream>?
        get() = memberAt<CPointerVar<GOutputStream>>(32).value
        set(value) { memberAt<CPointerVar<GOutputStream>>(32).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GOutputStream(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GOutputStreamPrivate>?
        get() = memberAt<CPointerVar<GOutputStreamPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GOutputStreamPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GCancellable(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GCancellablePrivate>?
        get() = memberAt<CPointerVar<GCancellablePrivate>>(24).value
        set(value) { memberAt<CPointerVar<GCancellablePrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GConverterInputStream(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val parent_instance: GFilterInputStream
        get() = memberAt(0)
    
    var priv: CPointer<GConverterInputStreamPrivate>?
        get() = memberAt<CPointerVar<GConverterInputStreamPrivate>>(40).value
        set(value) { memberAt<CPointerVar<GConverterInputStreamPrivate>>(40).value = value }
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GConverterOutputStream(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val parent_instance: GFilterOutputStream
        get() = memberAt(0)
    
    var priv: CPointer<GConverterOutputStreamPrivate>?
        get() = memberAt<CPointerVar<GConverterOutputStreamPrivate>>(40).value
        set(value) { memberAt<CPointerVar<GConverterOutputStreamPrivate>>(40).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GDataInputStream(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val parent_instance: GBufferedInputStream
        get() = memberAt(0)
    
    var priv: CPointer<GDataInputStreamPrivate>?
        get() = memberAt<CPointerVar<GDataInputStreamPrivate>>(48).value
        set(value) { memberAt<CPointerVar<GDataInputStreamPrivate>>(48).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GSimpleActionGroup(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GSimpleActionGroupPrivate>?
        get() = memberAt<CPointerVar<GSimpleActionGroupPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GSimpleActionGroupPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GApplication(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GApplicationPrivate>?
        get() = memberAt<CPointerVar<GApplicationPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GApplicationPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GApplicationCommandLine(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GApplicationCommandLinePrivate>?
        get() = memberAt<CPointerVar<GApplicationCommandLinePrivate>>(24).value
        set(value) { memberAt<CPointerVar<GApplicationCommandLinePrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GSettings(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GSettingsPrivate>?
        get() = memberAt<CPointerVar<GSettingsPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GSettingsPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GPermission(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GPermissionPrivate>?
        get() = memberAt<CPointerVar<GPermissionPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GPermissionPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GMenuModel(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GMenuModelPrivate>?
        get() = memberAt<CPointerVar<GMenuModelPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GMenuModelPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GFileEnumerator(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GFileEnumeratorPrivate>?
        get() = memberAt<CPointerVar<GFileEnumeratorPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GFileEnumeratorPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GFileMonitor(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GFileMonitorPrivate>?
        get() = memberAt<CPointerVar<GFileMonitorPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GFileMonitorPrivate>>(24).value = value }
}

@CStruct("struct { void* p0; unsigned int p1; unsigned int p2; }")
class _GFileAttributeInfo(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    var name: CPointer<ByteVar>?
        get() = memberAt<CPointerVar<ByteVar>>(0).value
        set(value) { memberAt<CPointerVar<ByteVar>>(0).value = value }
    
    var type: GFileAttributeType
        get() = memberAt<GFileAttributeTypeVar>(8).value
        set(value) { memberAt<GFileAttributeTypeVar>(8).value = value }
    
    var flags: GFileAttributeInfoFlags
        get() = memberAt<GFileAttributeInfoFlagsVar>(12).value
        set(value) { memberAt<GFileAttributeInfoFlagsVar>(12).value = value }
}

@CStruct("struct { void* p0; int p1; }")
class _GFileAttributeInfoList(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    var infos: CPointer<GFileAttributeInfo>?
        get() = memberAt<CPointerVar<GFileAttributeInfo>>(0).value
        set(value) { memberAt<CPointerVar<GFileAttributeInfo>>(0).value = value }
    
    var n_infos: Int
        get() = memberAt<IntVar>(8).value
        set(value) { memberAt<IntVar>(8).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GFileInputStream(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val parent_instance: GInputStream
        get() = memberAt(0)
    
    var priv: CPointer<GFileInputStreamPrivate>?
        get() = memberAt<CPointerVar<GFileInputStreamPrivate>>(32).value
        set(value) { memberAt<CPointerVar<GFileInputStreamPrivate>>(32).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GFileOutputStream(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val parent_instance: GOutputStream
        get() = memberAt(0)
    
    var priv: CPointer<GFileOutputStreamPrivate>?
        get() = memberAt<CPointerVar<GFileOutputStreamPrivate>>(32).value
        set(value) { memberAt<CPointerVar<GFileOutputStreamPrivate>>(32).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GFileIOStream(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val parent_instance: GIOStream
        get() = memberAt(0)
    
    var priv: CPointer<GFileIOStreamPrivate>?
        get() = memberAt<CPointerVar<GFileIOStreamPrivate>>(32).value
        set(value) { memberAt<CPointerVar<GFileIOStreamPrivate>>(32).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GIOStream(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GIOStreamPrivate>?
        get() = memberAt<CPointerVar<GIOStreamPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GIOStreamPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GInetAddress(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GInetAddressPrivate>?
        get() = memberAt<CPointerVar<GInetAddressPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GInetAddressPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GInetAddressMask(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GInetAddressMaskPrivate>?
        get() = memberAt<CPointerVar<GInetAddressMaskPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GInetAddressMaskPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; } p0; void* p1; }")
class _GInetSocketAddress(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GSocketAddress
        get() = memberAt(0)
    
    var priv: CPointer<GInetSocketAddressPrivate>?
        get() = memberAt<CPointerVar<GInetSocketAddressPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GInetSocketAddressPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; }")
class _GSocketAddress(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GMemoryInputStream(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val parent_instance: GInputStream
        get() = memberAt(0)
    
    var priv: CPointer<GMemoryInputStreamPrivate>?
        get() = memberAt<CPointerVar<GMemoryInputStreamPrivate>>(32).value
        set(value) { memberAt<CPointerVar<GMemoryInputStreamPrivate>>(32).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GMemoryOutputStream(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val parent_instance: GOutputStream
        get() = memberAt(0)
    
    var priv: CPointer<GMemoryOutputStreamPrivate>?
        get() = memberAt<CPointerVar<GMemoryOutputStreamPrivate>>(32).value
        set(value) { memberAt<CPointerVar<GMemoryOutputStreamPrivate>>(32).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GMountOperation(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GMountOperationPrivate>?
        get() = memberAt<CPointerVar<GMountOperationPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GMountOperationPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GNetworkAddress(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GNetworkAddressPrivate>?
        get() = memberAt<CPointerVar<GNetworkAddressPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GNetworkAddressPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GNetworkService(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GNetworkServicePrivate>?
        get() = memberAt<CPointerVar<GNetworkServicePrivate>>(24).value
        set(value) { memberAt<CPointerVar<GNetworkServicePrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GResolver(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GResolverPrivate>?
        get() = memberAt<CPointerVar<GResolverPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GResolverPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GSocket(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GSocketPrivate>?
        get() = memberAt<CPointerVar<GSocketPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GSocketPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GSocketControlMessage(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GSocketControlMessagePrivate>?
        get() = memberAt<CPointerVar<GSocketControlMessagePrivate>>(24).value
        set(value) { memberAt<CPointerVar<GSocketControlMessagePrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GSocketClient(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GSocketClientPrivate>?
        get() = memberAt<CPointerVar<GSocketClientPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GSocketClientPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GSocketConnection(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val parent_instance: GIOStream
        get() = memberAt(0)
    
    var priv: CPointer<GSocketConnectionPrivate>?
        get() = memberAt<CPointerVar<GSocketConnectionPrivate>>(32).value
        set(value) { memberAt<CPointerVar<GSocketConnectionPrivate>>(32).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GSocketListener(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GSocketListenerPrivate>?
        get() = memberAt<CPointerVar<GSocketListenerPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GSocketListenerPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GSocketService(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val parent_instance: GSocketListener
        get() = memberAt(0)
    
    var priv: CPointer<GSocketServicePrivate>?
        get() = memberAt<CPointerVar<GSocketServicePrivate>>(32).value
        set(value) { memberAt<CPointerVar<GSocketServicePrivate>>(32).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; }")
class _GSocketAddressEnumerator(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GTcpConnection(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val parent_instance: GSocketConnection
        get() = memberAt(0)
    
    var priv: CPointer<GTcpConnectionPrivate>?
        get() = memberAt<CPointerVar<GTcpConnectionPrivate>>(40).value
        set(value) { memberAt<CPointerVar<GTcpConnectionPrivate>>(40).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GTcpWrapperConnection(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val parent_instance: GTcpConnection
        get() = memberAt(0)
    
    var priv: CPointer<GTcpWrapperConnectionPrivate>?
        get() = memberAt<CPointerVar<GTcpWrapperConnectionPrivate>>(48).value
        set(value) { memberAt<CPointerVar<GTcpWrapperConnectionPrivate>>(48).value = value }
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GThreadedSocketService(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val parent_instance: GSocketService
        get() = memberAt(0)
    
    var priv: CPointer<GThreadedSocketServicePrivate>?
        get() = memberAt<CPointerVar<GThreadedSocketServicePrivate>>(40).value
        set(value) { memberAt<CPointerVar<GThreadedSocketServicePrivate>>(40).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GTlsCertificate(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GTlsCertificatePrivate>?
        get() = memberAt<CPointerVar<GTlsCertificatePrivate>>(24).value
        set(value) { memberAt<CPointerVar<GTlsCertificatePrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GTlsConnection(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val parent_instance: GIOStream
        get() = memberAt(0)
    
    var priv: CPointer<GTlsConnectionPrivate>?
        get() = memberAt<CPointerVar<GTlsConnectionPrivate>>(32).value
        set(value) { memberAt<CPointerVar<GTlsConnectionPrivate>>(32).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GTlsDatabase(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GTlsDatabasePrivate>?
        get() = memberAt<CPointerVar<GTlsDatabasePrivate>>(24).value
        set(value) { memberAt<CPointerVar<GTlsDatabasePrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GTlsInteraction(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GTlsInteractionPrivate>?
        get() = memberAt<CPointerVar<GTlsInteractionPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GTlsInteractionPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GTlsPassword(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GTlsPasswordPrivate>?
        get() = memberAt<CPointerVar<GTlsPasswordPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GTlsPasswordPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; }")
class _GVfs(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; } p0; void* p1; } p0; void* p1; }")
class _GProxyAddress(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val parent_instance: GInetSocketAddress
        get() = memberAt(0)
    
    var priv: CPointer<GProxyAddressPrivate>?
        get() = memberAt<CPointerVar<GProxyAddressPrivate>>(32).value
        set(value) { memberAt<CPointerVar<GProxyAddressPrivate>>(32).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; } p0; void* p1; }")
class _GProxyAddressEnumerator(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GSocketAddressEnumerator
        get() = memberAt(0)
    
    var priv: CPointer<GProxyAddressEnumeratorPrivate>?
        get() = memberAt<CPointerVar<GProxyAddressEnumeratorPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GProxyAddressEnumeratorPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GVolumeMonitor(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: gpointer?
        get() = memberAt<gpointerVar>(24).value
        set(value) { memberAt<gpointerVar>(24).value = value }
}

@CStruct("struct { void* p0; unsigned long p1; }")
class _GInputVector(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    var buffer: gpointer?
        get() = memberAt<gpointerVar>(0).value
        set(value) { memberAt<gpointerVar>(0).value = value }
    
    var size: gsize
        get() = memberAt<gsizeVar>(8).value
        set(value) { memberAt<gsizeVar>(8).value = value }
}

@CStruct("struct { void* p0; void* p1; unsigned int p2; unsigned long p3; int p4; void* p5; void* p6; }")
class _GInputMessage(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    var address: CPointer<CPointerVar<GSocketAddress>>?
        get() = memberAt<CPointerVar<CPointerVar<GSocketAddress>>>(0).value
        set(value) { memberAt<CPointerVar<CPointerVar<GSocketAddress>>>(0).value = value }
    
    var vectors: CPointer<GInputVector>?
        get() = memberAt<CPointerVar<GInputVector>>(8).value
        set(value) { memberAt<CPointerVar<GInputVector>>(8).value = value }
    
    var num_vectors: guint
        get() = memberAt<guintVar>(16).value
        set(value) { memberAt<guintVar>(16).value = value }
    
    var bytes_received: gsize
        get() = memberAt<gsizeVar>(24).value
        set(value) { memberAt<gsizeVar>(24).value = value }
    
    var flags: gint
        get() = memberAt<gintVar>(32).value
        set(value) { memberAt<gintVar>(32).value = value }
    
    var control_messages: CPointer<CPointerVar<CPointerVar<GSocketControlMessage>>>?
        get() = memberAt<CPointerVar<CPointerVar<CPointerVar<GSocketControlMessage>>>>(40).value
        set(value) { memberAt<CPointerVar<CPointerVar<CPointerVar<GSocketControlMessage>>>>(40).value = value }
    
    var num_control_messages: CPointer<guintVar>?
        get() = memberAt<CPointerVar<guintVar>>(48).value
        set(value) { memberAt<CPointerVar<guintVar>>(48).value = value }
}

@CStruct("struct { void* p0; unsigned long p1; }")
class _GOutputVector(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    var buffer: gconstpointer?
        get() = memberAt<gconstpointerVar>(0).value
        set(value) { memberAt<gconstpointerVar>(0).value = value }
    
    var size: gsize
        get() = memberAt<gsizeVar>(8).value
        set(value) { memberAt<gsizeVar>(8).value = value }
}

@CStruct("struct { void* p0; void* p1; unsigned int p2; unsigned int p3; void* p4; unsigned int p5; }")
class _GOutputMessage(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    var address: CPointer<GSocketAddress>?
        get() = memberAt<CPointerVar<GSocketAddress>>(0).value
        set(value) { memberAt<CPointerVar<GSocketAddress>>(0).value = value }
    
    var vectors: CPointer<GOutputVector>?
        get() = memberAt<CPointerVar<GOutputVector>>(8).value
        set(value) { memberAt<CPointerVar<GOutputVector>>(8).value = value }
    
    var num_vectors: guint
        get() = memberAt<guintVar>(16).value
        set(value) { memberAt<guintVar>(16).value = value }
    
    var bytes_sent: guint
        get() = memberAt<guintVar>(20).value
        set(value) { memberAt<guintVar>(20).value = value }
    
    var control_messages: CPointer<CPointerVar<GSocketControlMessage>>?
        get() = memberAt<CPointerVar<CPointerVar<GSocketControlMessage>>>(24).value
        set(value) { memberAt<CPointerVar<CPointerVar<GSocketControlMessage>>>(24).value = value }
    
    var num_control_messages: guint
        get() = memberAt<guintVar>(32).value
        set(value) { memberAt<guintVar>(32).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GDBusProxy(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GDBusProxyPrivate>?
        get() = memberAt<CPointerVar<GDBusProxyPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GDBusProxyPrivate>>(24).value = value }
}

@CStruct("struct { int p0; void* p1; }")
class _GDBusErrorEntry(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    var error_code: gint
        get() = memberAt<gintVar>(0).value
        set(value) { memberAt<gintVar>(0).value = value }
    
    var dbus_error_name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(8).value
        set(value) { memberAt<CPointerVar<gcharVar>>(8).value = value }
}

@CStruct("struct { void* p0; void* p1; void* p2; void* p3[8]; }")
class _GDBusInterfaceVTable(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(88, 8)
    
    var method_call: GDBusInterfaceMethodCallFunc?
        get() = memberAt<GDBusInterfaceMethodCallFuncVar>(0).value
        set(value) { memberAt<GDBusInterfaceMethodCallFuncVar>(0).value = value }
    
    var get_property: GDBusInterfaceGetPropertyFunc?
        get() = memberAt<GDBusInterfaceGetPropertyFuncVar>(8).value
        set(value) { memberAt<GDBusInterfaceGetPropertyFuncVar>(8).value = value }
    
    var set_property: GDBusInterfaceSetPropertyFunc?
        get() = memberAt<GDBusInterfaceSetPropertyFuncVar>(16).value
        set(value) { memberAt<GDBusInterfaceSetPropertyFuncVar>(16).value = value }
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(24)
}

@CStruct("struct { unsigned int p0; int p1; void* p2; }")
class _GError(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    var domain: GQuark
        get() = memberAt<GQuarkVar>(0).value
        set(value) { memberAt<GQuarkVar>(0).value = value }
    
    var code: gint
        get() = memberAt<gintVar>(4).value
        set(value) { memberAt<gintVar>(4).value = value }
    
    var message: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(8).value
        set(value) { memberAt<CPointerVar<gcharVar>>(8).value = value }
}

@CStruct("struct { void* p0; void* p1; void* p2; void* p3[8]; }")
class _GDBusSubtreeVTable(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(88, 8)
    
    var enumerate: GDBusSubtreeEnumerateFunc?
        get() = memberAt<GDBusSubtreeEnumerateFuncVar>(0).value
        set(value) { memberAt<GDBusSubtreeEnumerateFuncVar>(0).value = value }
    
    var introspect: GDBusSubtreeIntrospectFunc?
        get() = memberAt<GDBusSubtreeIntrospectFuncVar>(8).value
        set(value) { memberAt<GDBusSubtreeIntrospectFuncVar>(8).value = value }
    
    var dispatch: GDBusSubtreeDispatchFunc?
        get() = memberAt<GDBusSubtreeDispatchFuncVar>(16).value
        set(value) { memberAt<GDBusSubtreeDispatchFuncVar>(16).value = value }
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(24)
}

@CStruct("struct { int p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GDBusInterfaceInfo(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    var ref_count: gint
        get() = memberAt<gintVar>(0).value
        set(value) { memberAt<gintVar>(0).value = value }
    
    var name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(8).value
        set(value) { memberAt<CPointerVar<gcharVar>>(8).value = value }
    
    var methods: CPointer<CPointerVar<GDBusMethodInfo>>?
        get() = memberAt<CPointerVar<CPointerVar<GDBusMethodInfo>>>(16).value
        set(value) { memberAt<CPointerVar<CPointerVar<GDBusMethodInfo>>>(16).value = value }
    
    var signals: CPointer<CPointerVar<GDBusSignalInfo>>?
        get() = memberAt<CPointerVar<CPointerVar<GDBusSignalInfo>>>(24).value
        set(value) { memberAt<CPointerVar<CPointerVar<GDBusSignalInfo>>>(24).value = value }
    
    var properties: CPointer<CPointerVar<GDBusPropertyInfo>>?
        get() = memberAt<CPointerVar<CPointerVar<GDBusPropertyInfo>>>(32).value
        set(value) { memberAt<CPointerVar<CPointerVar<GDBusPropertyInfo>>>(32).value = value }
    
    var annotations: CPointer<CPointerVar<GDBusAnnotationInfo>>?
        get() = memberAt<CPointerVar<CPointerVar<GDBusAnnotationInfo>>>(40).value
        set(value) { memberAt<CPointerVar<CPointerVar<GDBusAnnotationInfo>>>(40).value = value }
}

@CStruct("struct { int p0; void* p1; void* p2; void* p3; void* p4; }")
class _GDBusMethodInfo(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    var ref_count: gint
        get() = memberAt<gintVar>(0).value
        set(value) { memberAt<gintVar>(0).value = value }
    
    var name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(8).value
        set(value) { memberAt<CPointerVar<gcharVar>>(8).value = value }
    
    var in_args: CPointer<CPointerVar<GDBusArgInfo>>?
        get() = memberAt<CPointerVar<CPointerVar<GDBusArgInfo>>>(16).value
        set(value) { memberAt<CPointerVar<CPointerVar<GDBusArgInfo>>>(16).value = value }
    
    var out_args: CPointer<CPointerVar<GDBusArgInfo>>?
        get() = memberAt<CPointerVar<CPointerVar<GDBusArgInfo>>>(24).value
        set(value) { memberAt<CPointerVar<CPointerVar<GDBusArgInfo>>>(24).value = value }
    
    var annotations: CPointer<CPointerVar<GDBusAnnotationInfo>>?
        get() = memberAt<CPointerVar<CPointerVar<GDBusAnnotationInfo>>>(32).value
        set(value) { memberAt<CPointerVar<CPointerVar<GDBusAnnotationInfo>>>(32).value = value }
}

@CStruct("struct { int p0; void* p1; void* p2; void* p3; }")
class _GDBusArgInfo(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    var ref_count: gint
        get() = memberAt<gintVar>(0).value
        set(value) { memberAt<gintVar>(0).value = value }
    
    var name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(8).value
        set(value) { memberAt<CPointerVar<gcharVar>>(8).value = value }
    
    var signature: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(16).value
        set(value) { memberAt<CPointerVar<gcharVar>>(16).value = value }
    
    var annotations: CPointer<CPointerVar<GDBusAnnotationInfo>>?
        get() = memberAt<CPointerVar<CPointerVar<GDBusAnnotationInfo>>>(24).value
        set(value) { memberAt<CPointerVar<CPointerVar<GDBusAnnotationInfo>>>(24).value = value }
}

@CStruct("struct { int p0; void* p1; void* p2; void* p3; }")
class _GDBusAnnotationInfo(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    var ref_count: gint
        get() = memberAt<gintVar>(0).value
        set(value) { memberAt<gintVar>(0).value = value }
    
    var key: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(8).value
        set(value) { memberAt<CPointerVar<gcharVar>>(8).value = value }
    
    var value: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(16).value
        set(value) { memberAt<CPointerVar<gcharVar>>(16).value = value }
    
    var annotations: CPointer<CPointerVar<GDBusAnnotationInfo>>?
        get() = memberAt<CPointerVar<CPointerVar<GDBusAnnotationInfo>>>(24).value
        set(value) { memberAt<CPointerVar<CPointerVar<GDBusAnnotationInfo>>>(24).value = value }
}

@CStruct("struct { int p0; void* p1; void* p2; void* p3; }")
class _GDBusSignalInfo(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    var ref_count: gint
        get() = memberAt<gintVar>(0).value
        set(value) { memberAt<gintVar>(0).value = value }
    
    var name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(8).value
        set(value) { memberAt<CPointerVar<gcharVar>>(8).value = value }
    
    var args: CPointer<CPointerVar<GDBusArgInfo>>?
        get() = memberAt<CPointerVar<CPointerVar<GDBusArgInfo>>>(16).value
        set(value) { memberAt<CPointerVar<CPointerVar<GDBusArgInfo>>>(16).value = value }
    
    var annotations: CPointer<CPointerVar<GDBusAnnotationInfo>>?
        get() = memberAt<CPointerVar<CPointerVar<GDBusAnnotationInfo>>>(24).value
        set(value) { memberAt<CPointerVar<CPointerVar<GDBusAnnotationInfo>>>(24).value = value }
}

@CStruct("struct { int p0; void* p1; void* p2; unsigned int p3; void* p4; }")
class _GDBusPropertyInfo(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    var ref_count: gint
        get() = memberAt<gintVar>(0).value
        set(value) { memberAt<gintVar>(0).value = value }
    
    var name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(8).value
        set(value) { memberAt<CPointerVar<gcharVar>>(8).value = value }
    
    var signature: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(16).value
        set(value) { memberAt<CPointerVar<gcharVar>>(16).value = value }
    
    var flags: GDBusPropertyInfoFlags
        get() = memberAt<GDBusPropertyInfoFlagsVar>(24).value
        set(value) { memberAt<GDBusPropertyInfoFlagsVar>(24).value = value }
    
    var annotations: CPointer<CPointerVar<GDBusAnnotationInfo>>?
        get() = memberAt<CPointerVar<CPointerVar<GDBusAnnotationInfo>>>(32).value
        set(value) { memberAt<CPointerVar<CPointerVar<GDBusAnnotationInfo>>>(32).value = value }
}

@CStruct("struct { int p0; void* p1; void* p2; void* p3; void* p4; }")
class _GDBusNodeInfo(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    var ref_count: gint
        get() = memberAt<gintVar>(0).value
        set(value) { memberAt<gintVar>(0).value = value }
    
    var path: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(8).value
        set(value) { memberAt<CPointerVar<gcharVar>>(8).value = value }
    
    var interfaces: CPointer<CPointerVar<GDBusInterfaceInfo>>?
        get() = memberAt<CPointerVar<CPointerVar<GDBusInterfaceInfo>>>(16).value
        set(value) { memberAt<CPointerVar<CPointerVar<GDBusInterfaceInfo>>>(16).value = value }
    
    var nodes: CPointer<CPointerVar<GDBusNodeInfo>>?
        get() = memberAt<CPointerVar<CPointerVar<GDBusNodeInfo>>>(24).value
        set(value) { memberAt<CPointerVar<CPointerVar<GDBusNodeInfo>>>(24).value = value }
    
    var annotations: CPointer<CPointerVar<GDBusAnnotationInfo>>?
        get() = memberAt<CPointerVar<CPointerVar<GDBusAnnotationInfo>>>(32).value
        set(value) { memberAt<CPointerVar<CPointerVar<GDBusAnnotationInfo>>>(32).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GDBusInterfaceSkeleton(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GDBusInterfaceSkeletonPrivate>?
        get() = memberAt<CPointerVar<GDBusInterfaceSkeletonPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GDBusInterfaceSkeletonPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GDBusObjectSkeleton(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GDBusObjectSkeletonPrivate>?
        get() = memberAt<CPointerVar<GDBusObjectSkeletonPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GDBusObjectSkeletonPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GDBusObjectProxy(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GDBusObjectProxyPrivate>?
        get() = memberAt<CPointerVar<GDBusObjectProxyPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GDBusObjectProxyPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GDBusObjectManagerClient(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GDBusObjectManagerClientPrivate>?
        get() = memberAt<CPointerVar<GDBusObjectManagerClientPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GDBusObjectManagerClientPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GDBusObjectManagerServer(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GDBusObjectManagerServerPrivate>?
        get() = memberAt<CPointerVar<GDBusObjectManagerServerPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GDBusObjectManagerServerPrivate>>(24).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; }")
class _GActionInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(80, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var get_name: CPointer<CFunction<(CPointer<GAction>?) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAction>?) -> CPointer<gcharVar>?>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAction>?) -> CPointer<gcharVar>?>>>(16).value = value }
    
    var get_parameter_type: CPointer<CFunction<(CPointer<GAction>?) -> CPointer<GVariantType>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAction>?) -> CPointer<GVariantType>?>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAction>?) -> CPointer<GVariantType>?>>>(24).value = value }
    
    var get_state_type: CPointer<CFunction<(CPointer<GAction>?) -> CPointer<GVariantType>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAction>?) -> CPointer<GVariantType>?>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAction>?) -> CPointer<GVariantType>?>>>(32).value = value }
    
    var get_state_hint: CPointer<CFunction<(CPointer<GAction>?) -> CPointer<GVariant>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAction>?) -> CPointer<GVariant>?>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAction>?) -> CPointer<GVariant>?>>>(40).value = value }
    
    var get_enabled: CPointer<CFunction<(CPointer<GAction>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAction>?) -> gboolean>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAction>?) -> gboolean>>>(48).value = value }
    
    var get_state: CPointer<CFunction<(CPointer<GAction>?) -> CPointer<GVariant>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAction>?) -> CPointer<GVariant>?>>>(56).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAction>?) -> CPointer<GVariant>?>>>(56).value = value }
    
    var change_state: CPointer<CFunction<(CPointer<GAction>?, CPointer<GVariant>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAction>?, CPointer<GVariant>?) -> Unit>>>(64).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAction>?, CPointer<GVariant>?) -> Unit>>>(64).value = value }
    
    var activate: CPointer<CFunction<(CPointer<GAction>?, CPointer<GVariant>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAction>?, CPointer<GVariant>?) -> Unit>>>(72).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAction>?, CPointer<GVariant>?) -> Unit>>>(72).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; }")
class _GActionGroupInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(128, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var has_action: CPointer<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> gboolean>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> gboolean>>>(16).value = value }
    
    var list_actions: CPointer<CFunction<(CPointer<GActionGroup>?) -> CPointer<CPointerVar<gcharVar>>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?) -> CPointer<CPointerVar<gcharVar>>?>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?) -> CPointer<CPointerVar<gcharVar>>?>>>(24).value = value }
    
    var get_action_enabled: CPointer<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> gboolean>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> gboolean>>>(32).value = value }
    
    var get_action_parameter_type: CPointer<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> CPointer<GVariantType>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> CPointer<GVariantType>?>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> CPointer<GVariantType>?>>>(40).value = value }
    
    var get_action_state_type: CPointer<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> CPointer<GVariantType>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> CPointer<GVariantType>?>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> CPointer<GVariantType>?>>>(48).value = value }
    
    var get_action_state_hint: CPointer<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> CPointer<GVariant>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> CPointer<GVariant>?>>>(56).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> CPointer<GVariant>?>>>(56).value = value }
    
    var get_action_state: CPointer<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> CPointer<GVariant>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> CPointer<GVariant>?>>>(64).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> CPointer<GVariant>?>>>(64).value = value }
    
    var change_action_state: CPointer<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?, CPointer<GVariant>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?, CPointer<GVariant>?) -> Unit>>>(72).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?, CPointer<GVariant>?) -> Unit>>>(72).value = value }
    
    var activate_action: CPointer<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?, CPointer<GVariant>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?, CPointer<GVariant>?) -> Unit>>>(80).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?, CPointer<GVariant>?) -> Unit>>>(80).value = value }
    
    var action_added: CPointer<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> Unit>>>(88).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> Unit>>>(88).value = value }
    
    var action_removed: CPointer<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> Unit>>>(96).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> Unit>>>(96).value = value }
    
    var action_enabled_changed: CPointer<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?, gboolean) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?, gboolean) -> Unit>>>(104).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?, gboolean) -> Unit>>>(104).value = value }
    
    var action_state_changed: CPointer<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?, CPointer<GVariant>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?, CPointer<GVariant>?) -> Unit>>>(112).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?, CPointer<GVariant>?) -> Unit>>>(112).value = value }
    
    var query_action: CPointer<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?, CPointer<gbooleanVar>?, CPointer<CPointerVar<GVariantType>>?, CPointer<CPointerVar<GVariantType>>?, CPointer<CPointerVar<GVariant>>?, CPointer<CPointerVar<GVariant>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?, CPointer<gbooleanVar>?, CPointer<CPointerVar<GVariantType>>?, CPointer<CPointerVar<GVariantType>>?, CPointer<CPointerVar<GVariant>>?, CPointer<CPointerVar<GVariant>>?) -> gboolean>>>(120).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?, CPointer<gbooleanVar>?, CPointer<CPointerVar<GVariantType>>?, CPointer<CPointerVar<GVariantType>>?, CPointer<CPointerVar<GVariant>>?, CPointer<CPointerVar<GVariant>>?) -> gboolean>>>(120).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; }")
class _GActionMapInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var lookup_action: CPointer<CFunction<(CPointer<GActionMap>?, CPointer<gcharVar>?) -> CPointer<GAction>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GActionMap>?, CPointer<gcharVar>?) -> CPointer<GAction>?>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GActionMap>?, CPointer<gcharVar>?) -> CPointer<GAction>?>>>(16).value = value }
    
    var add_action: CPointer<CFunction<(CPointer<GActionMap>?, CPointer<GAction>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GActionMap>?, CPointer<GAction>?) -> Unit>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GActionMap>?, CPointer<GAction>?) -> Unit>>>(24).value = value }
    
    var remove_action: CPointer<CFunction<(CPointer<GActionMap>?, CPointer<gcharVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GActionMap>?, CPointer<gcharVar>?) -> Unit>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GActionMap>?, CPointer<gcharVar>?) -> Unit>>>(32).value = value }
}

@CStruct("struct { void* p0; void* p1; void* p2; void* p3; void* p4; unsigned long p5[3]; }")
class _GActionEntry(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(64, 8)
    
    var name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(0).value
        set(value) { memberAt<CPointerVar<gcharVar>>(0).value = value }
    
    var activate: CPointer<CFunction<(CPointer<GSimpleAction>?, CPointer<GVariant>?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSimpleAction>?, CPointer<GVariant>?, gpointer?) -> Unit>>>(8).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSimpleAction>?, CPointer<GVariant>?, gpointer?) -> Unit>>>(8).value = value }
    
    var parameter_type: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(16).value
        set(value) { memberAt<CPointerVar<gcharVar>>(16).value = value }
    
    var state: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(24).value
        set(value) { memberAt<CPointerVar<gcharVar>>(24).value = value }
    
    var change_state: CPointer<CFunction<(CPointer<GSimpleAction>?, CPointer<GVariant>?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSimpleAction>?, CPointer<GVariant>?, gpointer?) -> Unit>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSimpleAction>?, CPointer<GVariant>?, gpointer?) -> Unit>>>(32).value = value }
    
    val padding: CArrayPointer<gsizeVar>
        get() = arrayMemberAt(40)
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; }")
class _GAppLaunchContextClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(200, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var get_display: CPointer<CFunction<(CPointer<GAppLaunchContext>?, CPointer<GAppInfo>?, CPointer<GList>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppLaunchContext>?, CPointer<GAppInfo>?, CPointer<GList>?) -> CPointer<ByteVar>?>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppLaunchContext>?, CPointer<GAppInfo>?, CPointer<GList>?) -> CPointer<ByteVar>?>>>(136).value = value }
    
    var get_startup_notify_id: CPointer<CFunction<(CPointer<GAppLaunchContext>?, CPointer<GAppInfo>?, CPointer<GList>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppLaunchContext>?, CPointer<GAppInfo>?, CPointer<GList>?) -> CPointer<ByteVar>?>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppLaunchContext>?, CPointer<GAppInfo>?, CPointer<GList>?) -> CPointer<ByteVar>?>>>(144).value = value }
    
    var launch_failed: CPointer<CFunction<(CPointer<GAppLaunchContext>?, CPointer<ByteVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppLaunchContext>?, CPointer<ByteVar>?) -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppLaunchContext>?, CPointer<ByteVar>?) -> Unit>>>(152).value = value }
    
    var launched: CPointer<CFunction<(CPointer<GAppLaunchContext>?, CPointer<GAppInfo>?, CPointer<GVariant>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppLaunchContext>?, CPointer<GAppInfo>?, CPointer<GVariant>?) -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppLaunchContext>?, CPointer<GAppInfo>?, CPointer<GVariant>?) -> Unit>>>(160).value = value }
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(192).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; void* p23; }")
class _GAppInfoIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(200, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var dup: CPointer<CFunction<(CPointer<GAppInfo>?) -> CPointer<GAppInfo>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> CPointer<GAppInfo>?>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> CPointer<GAppInfo>?>>>(16).value = value }
    
    var equal: CPointer<CFunction<(CPointer<GAppInfo>?, CPointer<GAppInfo>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?, CPointer<GAppInfo>?) -> gboolean>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?, CPointer<GAppInfo>?) -> gboolean>>>(24).value = value }
    
    var get_id: CPointer<CFunction<(CPointer<GAppInfo>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> CPointer<ByteVar>?>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> CPointer<ByteVar>?>>>(32).value = value }
    
    var get_name: CPointer<CFunction<(CPointer<GAppInfo>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> CPointer<ByteVar>?>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> CPointer<ByteVar>?>>>(40).value = value }
    
    var get_description: CPointer<CFunction<(CPointer<GAppInfo>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> CPointer<ByteVar>?>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> CPointer<ByteVar>?>>>(48).value = value }
    
    var get_executable: CPointer<CFunction<(CPointer<GAppInfo>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> CPointer<ByteVar>?>>>(56).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> CPointer<ByteVar>?>>>(56).value = value }
    
    var get_icon: CPointer<CFunction<(CPointer<GAppInfo>?) -> CPointer<GIcon>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> CPointer<GIcon>?>>>(64).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> CPointer<GIcon>?>>>(64).value = value }
    
    var launch: CPointer<CFunction<(CPointer<GAppInfo>?, CPointer<GList>?, CPointer<GAppLaunchContext>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?, CPointer<GList>?, CPointer<GAppLaunchContext>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(72).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?, CPointer<GList>?, CPointer<GAppLaunchContext>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(72).value = value }
    
    var supports_uris: CPointer<CFunction<(CPointer<GAppInfo>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> gboolean>>>(80).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> gboolean>>>(80).value = value }
    
    var supports_files: CPointer<CFunction<(CPointer<GAppInfo>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> gboolean>>>(88).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> gboolean>>>(88).value = value }
    
    var launch_uris: CPointer<CFunction<(CPointer<GAppInfo>?, CPointer<GList>?, CPointer<GAppLaunchContext>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?, CPointer<GList>?, CPointer<GAppLaunchContext>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(96).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?, CPointer<GList>?, CPointer<GAppLaunchContext>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(96).value = value }
    
    var should_show: CPointer<CFunction<(CPointer<GAppInfo>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> gboolean>>>(104).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> gboolean>>>(104).value = value }
    
    var set_as_default_for_type: CPointer<CFunction<(CPointer<GAppInfo>?, CPointer<ByteVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?, CPointer<ByteVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(112).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?, CPointer<ByteVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(112).value = value }
    
    var set_as_default_for_extension: CPointer<CFunction<(CPointer<GAppInfo>?, CPointer<ByteVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?, CPointer<ByteVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(120).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?, CPointer<ByteVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(120).value = value }
    
    var add_supports_type: CPointer<CFunction<(CPointer<GAppInfo>?, CPointer<ByteVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?, CPointer<ByteVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(128).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?, CPointer<ByteVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(128).value = value }
    
    var can_remove_supports_type: CPointer<CFunction<(CPointer<GAppInfo>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> gboolean>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> gboolean>>>(136).value = value }
    
    var remove_supports_type: CPointer<CFunction<(CPointer<GAppInfo>?, CPointer<ByteVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?, CPointer<ByteVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?, CPointer<ByteVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(144).value = value }
    
    var can_delete: CPointer<CFunction<(CPointer<GAppInfo>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> gboolean>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> gboolean>>>(152).value = value }
    
    var do_delete: CPointer<CFunction<(CPointer<GAppInfo>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> gboolean>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> gboolean>>>(160).value = value }
    
    var get_commandline: CPointer<CFunction<(CPointer<GAppInfo>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> CPointer<ByteVar>?>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> CPointer<ByteVar>?>>>(168).value = value }
    
    var get_display_name: CPointer<CFunction<(CPointer<GAppInfo>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> CPointer<ByteVar>?>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> CPointer<ByteVar>?>>>(176).value = value }
    
    var set_as_last_used_for_type: CPointer<CFunction<(CPointer<GAppInfo>?, CPointer<ByteVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?, CPointer<ByteVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?, CPointer<ByteVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(184).value = value }
    
    var get_supported_types: CPointer<CFunction<(CPointer<GAppInfo>?) -> CPointer<CPointerVar<ByteVar>>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> CPointer<CPointerVar<ByteVar>>?>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> CPointer<CPointerVar<ByteVar>>?>>>(192).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15[8]; }")
class _GApplicationClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(312, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var startup: CPointer<CFunction<(CPointer<GApplication>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GApplication>?) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GApplication>?) -> Unit>>>(136).value = value }
    
    var activate: CPointer<CFunction<(CPointer<GApplication>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GApplication>?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GApplication>?) -> Unit>>>(144).value = value }
    
    var open: CPointer<CFunction<(CPointer<GApplication>?, CPointer<CPointerVar<GFile>>?, gint, CPointer<gcharVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GApplication>?, CPointer<CPointerVar<GFile>>?, gint, CPointer<gcharVar>?) -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GApplication>?, CPointer<CPointerVar<GFile>>?, gint, CPointer<gcharVar>?) -> Unit>>>(152).value = value }
    
    var command_line: CPointer<CFunction<(CPointer<GApplication>?, CPointer<GApplicationCommandLine>?) -> Int>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GApplication>?, CPointer<GApplicationCommandLine>?) -> Int>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GApplication>?, CPointer<GApplicationCommandLine>?) -> Int>>>(160).value = value }
    
    var local_command_line: CPointer<CFunction<(CPointer<GApplication>?, CPointer<CPointerVar<CPointerVar<gcharVar>>>?, CPointer<IntVar>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GApplication>?, CPointer<CPointerVar<CPointerVar<gcharVar>>>?, CPointer<IntVar>?) -> gboolean>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GApplication>?, CPointer<CPointerVar<CPointerVar<gcharVar>>>?, CPointer<IntVar>?) -> gboolean>>>(168).value = value }
    
    var before_emit: CPointer<CFunction<(CPointer<GApplication>?, CPointer<GVariant>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GApplication>?, CPointer<GVariant>?) -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GApplication>?, CPointer<GVariant>?) -> Unit>>>(176).value = value }
    
    var after_emit: CPointer<CFunction<(CPointer<GApplication>?, CPointer<GVariant>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GApplication>?, CPointer<GVariant>?) -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GApplication>?, CPointer<GVariant>?) -> Unit>>>(184).value = value }
    
    var add_platform_data: CPointer<CFunction<(CPointer<GApplication>?, CPointer<GVariantBuilder>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GApplication>?, CPointer<GVariantBuilder>?) -> Unit>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GApplication>?, CPointer<GVariantBuilder>?) -> Unit>>>(192).value = value }
    
    var quit_mainloop: CPointer<CFunction<(CPointer<GApplication>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GApplication>?) -> Unit>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GApplication>?) -> Unit>>>(200).value = value }
    
    var run_mainloop: CPointer<CFunction<(CPointer<GApplication>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GApplication>?) -> Unit>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GApplication>?) -> Unit>>>(208).value = value }
    
    var shutdown: CPointer<CFunction<(CPointer<GApplication>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GApplication>?) -> Unit>>>(216).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GApplication>?) -> Unit>>>(216).value = value }
    
    var dbus_register: CPointer<CFunction<(CPointer<GApplication>?, CPointer<GDBusConnection>?, CPointer<gcharVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GApplication>?, CPointer<GDBusConnection>?, CPointer<gcharVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(224).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GApplication>?, CPointer<GDBusConnection>?, CPointer<gcharVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(224).value = value }
    
    var dbus_unregister: CPointer<CFunction<(CPointer<GApplication>?, CPointer<GDBusConnection>?, CPointer<gcharVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GApplication>?, CPointer<GDBusConnection>?, CPointer<gcharVar>?) -> Unit>>>(232).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GApplication>?, CPointer<GDBusConnection>?, CPointer<gcharVar>?) -> Unit>>>(232).value = value }
    
    var handle_local_options: CPointer<CFunction<(CPointer<GApplication>?, CPointer<GVariantDict>?) -> gint>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GApplication>?, CPointer<GVariantDict>?) -> gint>>>(240).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GApplication>?, CPointer<GVariantDict>?) -> gint>>>(240).value = value }
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(248)
}

@CStruct("struct { union { struct { unsigned long p0; void* p1; unsigned long p2[14]; } p0; unsigned long p1[16]; } p0; }")
class _GVariantBuilder(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(128, 8)
    
    val u: anonymousStruct3
        get() = memberAt(0)
}

@CStruct("union { struct { unsigned long p0; void* p1; unsigned long p2[14]; } p0; unsigned long p1[16]; }")
class anonymousStruct3(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(128, 8)
    
    val s: anonymousStruct4
        get() = memberAt(0)
    
    val x: CArrayPointer<gsizeVar>
        get() = arrayMemberAt(0)
}

@CStruct("struct { unsigned long p0; void* p1; unsigned long p2[14]; }")
class anonymousStruct4(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(128, 8)
    
    var partial_magic: gsize
        get() = memberAt<gsizeVar>(0).value
        set(value) { memberAt<gsizeVar>(0).value = value }
    
    var type: CPointer<GVariantType>?
        get() = memberAt<CPointerVar<GVariantType>>(8).value
        set(value) { memberAt<CPointerVar<GVariantType>>(8).value = value }
    
    val y: CArrayPointer<gsizeVar>
        get() = arrayMemberAt(16)
}

@CStruct("struct { union { struct { void* p0; unsigned long p1; unsigned long p2[14]; } p0; unsigned long p1[16]; } p0; }")
class _GVariantDict(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(128, 8)
    
    val u: anonymousStruct5
        get() = memberAt(0)
}

@CStruct("union { struct { void* p0; unsigned long p1; unsigned long p2[14]; } p0; unsigned long p1[16]; }")
class anonymousStruct5(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(128, 8)
    
    val s: anonymousStruct6
        get() = memberAt(0)
    
    val x: CArrayPointer<gsizeVar>
        get() = arrayMemberAt(0)
}

@CStruct("struct { void* p0; unsigned long p1; unsigned long p2[14]; }")
class anonymousStruct6(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(128, 8)
    
    var asv: CPointer<GVariant>?
        get() = memberAt<CPointerVar<GVariant>>(0).value
        set(value) { memberAt<CPointerVar<GVariant>>(0).value = value }
    
    var partial_magic: gsize
        get() = memberAt<gsizeVar>(8).value
        set(value) { memberAt<gsizeVar>(8).value = value }
    
    val y: CArrayPointer<gsizeVar>
        get() = arrayMemberAt(16)
}

@CStruct("struct { void* p0; char p1; int p2; unsigned int p3; void* p4; void* p5; void* p6; }")
class _GOptionEntry(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    var long_name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(0).value
        set(value) { memberAt<CPointerVar<gcharVar>>(0).value = value }
    
    var short_name: gchar
        get() = memberAt<gcharVar>(8).value
        set(value) { memberAt<gcharVar>(8).value = value }
    
    var flags: gint
        get() = memberAt<gintVar>(12).value
        set(value) { memberAt<gintVar>(12).value = value }
    
    var arg: GOptionArg
        get() = memberAt<GOptionArg.Var>(16).value
        set(value) { memberAt<GOptionArg.Var>(16).value = value }
    
    var arg_data: gpointer?
        get() = memberAt<gpointerVar>(24).value
        set(value) { memberAt<gpointerVar>(24).value = value }
    
    var description: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(32).value
        set(value) { memberAt<CPointerVar<gcharVar>>(32).value = value }
    
    var arg_description: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(40).value
        set(value) { memberAt<CPointerVar<gcharVar>>(40).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4[11]; }")
class _GApplicationCommandLineClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(248, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var print_literal: CPointer<CFunction<(CPointer<GApplicationCommandLine>?, CPointer<gcharVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GApplicationCommandLine>?, CPointer<gcharVar>?) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GApplicationCommandLine>?, CPointer<gcharVar>?) -> Unit>>>(136).value = value }
    
    var printerr_literal: CPointer<CFunction<(CPointer<GApplicationCommandLine>?, CPointer<gcharVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GApplicationCommandLine>?, CPointer<gcharVar>?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GApplicationCommandLine>?, CPointer<gcharVar>?) -> Unit>>>(144).value = value }
    
    var get_stdin: CPointer<CFunction<(CPointer<GApplicationCommandLine>?) -> CPointer<GInputStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GApplicationCommandLine>?) -> CPointer<GInputStream>?>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GApplicationCommandLine>?) -> CPointer<GInputStream>?>>>(152).value = value }
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(160)
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; }")
class _GInitableIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var init: CPointer<CFunction<(CPointer<GInitable>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GInitable>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GInitable>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(16).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; }")
class _GAsyncInitableIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var init_async: CPointer<CFunction<(CPointer<GAsyncInitable>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAsyncInitable>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAsyncInitable>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(16).value = value }
    
    var init_finish: CPointer<CFunction<(CPointer<GAsyncInitable>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAsyncInitable>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAsyncInitable>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(24).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; }")
class _GAsyncResultIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var get_user_data: CPointer<CFunction<(CPointer<GAsyncResult>?) -> gpointer?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAsyncResult>?) -> gpointer?>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAsyncResult>?) -> gpointer?>>>(16).value = value }
    
    var get_source_object: CPointer<CFunction<(CPointer<GAsyncResult>?) -> CPointer<GObject>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAsyncResult>?) -> CPointer<GObject>?>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAsyncResult>?) -> CPointer<GObject>?>>>(24).value = value }
    
    var is_tagged: CPointer<CFunction<(CPointer<GAsyncResult>?, gpointer?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAsyncResult>?, gpointer?) -> gboolean>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAsyncResult>?, gpointer?) -> gboolean>>>(32).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; }")
class _GInputStreamClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(248, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var read_fn: CPointer<CFunction<(CPointer<GInputStream>?, COpaquePointer?, gsize, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gssize>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GInputStream>?, COpaquePointer?, gsize, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GInputStream>?, COpaquePointer?, gsize, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(136).value = value }
    
    var skip: CPointer<CFunction<(CPointer<GInputStream>?, gsize, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gssize>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GInputStream>?, gsize, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GInputStream>?, gsize, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(144).value = value }
    
    var close_fn: CPointer<CFunction<(CPointer<GInputStream>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GInputStream>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GInputStream>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(152).value = value }
    
    var read_async: CPointer<CFunction<(CPointer<GInputStream>?, COpaquePointer?, gsize, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GInputStream>?, COpaquePointer?, gsize, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GInputStream>?, COpaquePointer?, gsize, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(160).value = value }
    
    var read_finish: CPointer<CFunction<(CPointer<GInputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gssize>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GInputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GInputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(168).value = value }
    
    var skip_async: CPointer<CFunction<(CPointer<GInputStream>?, gsize, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GInputStream>?, gsize, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GInputStream>?, gsize, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(176).value = value }
    
    var skip_finish: CPointer<CFunction<(CPointer<GInputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gssize>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GInputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GInputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(184).value = value }
    
    var close_async: CPointer<CFunction<(CPointer<GInputStream>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GInputStream>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GInputStream>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(192).value = value }
    
    var close_finish: CPointer<CFunction<(CPointer<GInputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GInputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GInputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(200).value = value }
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(208).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(216).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(216).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(224).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(224).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(232).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(232).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(240).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(240).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; } p0; void* p1; void* p2; void* p3; }")
class _GFilterInputStreamClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(272, 8)
    
    val parent_class: GInputStreamClass
        get() = memberAt(0)
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(248).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(248).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(256).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(256).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value = value }
}

@CStruct("struct { struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; } p0; void* p1; void* p2; void* p3; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; }")
class _GBufferedInputStreamClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(336, 8)
    
    val parent_class: GFilterInputStreamClass
        get() = memberAt(0)
    
    var fill: CPointer<CFunction<(CPointer<GBufferedInputStream>?, gssize, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gssize>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GBufferedInputStream>?, gssize, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(272).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GBufferedInputStream>?, gssize, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(272).value = value }
    
    var fill_async: CPointer<CFunction<(CPointer<GBufferedInputStream>?, gssize, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GBufferedInputStream>?, gssize, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(280).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GBufferedInputStream>?, gssize, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(280).value = value }
    
    var fill_finish: CPointer<CFunction<(CPointer<GBufferedInputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gssize>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GBufferedInputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(288).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GBufferedInputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(288).value = value }
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(304).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(304).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(312).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(312).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(320).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(320).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; }")
class _GOutputStreamClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(296, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var write_fn: CPointer<CFunction<(CPointer<GOutputStream>?, COpaquePointer?, gsize, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gssize>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, COpaquePointer?, gsize, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, COpaquePointer?, gsize, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(136).value = value }
    
    var splice: CPointer<CFunction<(CPointer<GOutputStream>?, CPointer<GInputStream>?, GOutputStreamSpliceFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gssize>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, CPointer<GInputStream>?, GOutputStreamSpliceFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, CPointer<GInputStream>?, GOutputStreamSpliceFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(144).value = value }
    
    var flush: CPointer<CFunction<(CPointer<GOutputStream>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(152).value = value }
    
    var close_fn: CPointer<CFunction<(CPointer<GOutputStream>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(160).value = value }
    
    var write_async: CPointer<CFunction<(CPointer<GOutputStream>?, COpaquePointer?, gsize, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, COpaquePointer?, gsize, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, COpaquePointer?, gsize, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(168).value = value }
    
    var write_finish: CPointer<CFunction<(CPointer<GOutputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gssize>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(176).value = value }
    
    var splice_async: CPointer<CFunction<(CPointer<GOutputStream>?, CPointer<GInputStream>?, GOutputStreamSpliceFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, CPointer<GInputStream>?, GOutputStreamSpliceFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, CPointer<GInputStream>?, GOutputStreamSpliceFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(184).value = value }
    
    var splice_finish: CPointer<CFunction<(CPointer<GOutputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gssize>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(192).value = value }
    
    var flush_async: CPointer<CFunction<(CPointer<GOutputStream>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(200).value = value }
    
    var flush_finish: CPointer<CFunction<(CPointer<GOutputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(208).value = value }
    
    var close_async: CPointer<CFunction<(CPointer<GOutputStream>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(216).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(216).value = value }
    
    var close_finish: CPointer<CFunction<(CPointer<GOutputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(224).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(224).value = value }
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(232).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(232).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(240).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(240).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(248).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(248).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(256).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(256).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value = value }
    
    var _g_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value = value }
    
    var _g_reserved7: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(280).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(280).value = value }
    
    var _g_reserved8: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(288).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(288).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; } p0; void* p1; void* p2; void* p3; }")
class _GFilterOutputStreamClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(320, 8)
    
    val parent_class: GOutputStreamClass
        get() = memberAt(0)
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(304).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(304).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(312).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(312).value = value }
}

@CStruct("struct { struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; } p0; void* p1; void* p2; void* p3; } p0; void* p1; void* p2; }")
class _GBufferedOutputStreamClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(336, 8)
    
    val parent_class: GFilterOutputStreamClass
        get() = memberAt(0)
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(320).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(320).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; }")
class _GCancellableClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(184, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var cancelled: CPointer<CFunction<(CPointer<GCancellable>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GCancellable>?) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GCancellable>?) -> Unit>>>(136).value = value }
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value = value }
}

@CStruct("struct { int p0; unsigned short p1; unsigned short p2; }")
class _GPollFD(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(8, 4)
    
    var fd: gint
        get() = memberAt<gintVar>(0).value
        set(value) { memberAt<gintVar>(0).value = value }
    
    var events: gushort
        get() = memberAt<gushortVar>(4).value
        set(value) { memberAt<gushortVar>(4).value = value }
    
    var revents: gushort
        get() = memberAt<gushortVar>(6).value
        set(value) { memberAt<gushortVar>(6).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; }")
class _GConverterIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var convert: CPointer<CFunction<(CPointer<GConverter>?, COpaquePointer?, gsize, COpaquePointer?, gsize, GConverterFlags, CPointer<gsizeVar>?, CPointer<gsizeVar>?, CPointer<CPointerVar<GError>>?) -> GConverterResult>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GConverter>?, COpaquePointer?, gsize, COpaquePointer?, gsize, GConverterFlags, CPointer<gsizeVar>?, CPointer<gsizeVar>?, CPointer<CPointerVar<GError>>?) -> GConverterResult>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GConverter>?, COpaquePointer?, gsize, COpaquePointer?, gsize, GConverterFlags, CPointer<gsizeVar>?, CPointer<gsizeVar>?, CPointer<CPointerVar<GError>>?) -> GConverterResult>>>(16).value = value }
    
    var reset: CPointer<CFunction<(CPointer<GConverter>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GConverter>?) -> Unit>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GConverter>?) -> Unit>>>(24).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; }")
class _GCharsetConverterClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(136, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; } p0; void* p1; void* p2; void* p3; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GConverterInputStreamClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(312, 8)
    
    val parent_class: GFilterInputStreamClass
        get() = memberAt(0)
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(280).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(280).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(288).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(288).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(304).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(304).value = value }
}

@CStruct("struct { struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; } p0; void* p1; void* p2; void* p3; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GConverterOutputStreamClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(360, 8)
    
    val parent_class: GFilterOutputStreamClass
        get() = memberAt(0)
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(320).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(320).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(336).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(336).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(344).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(344).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(352).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(352).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GDatagramBasedInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var receive_messages: CPointer<CFunction<(CPointer<GDatagramBased>?, CPointer<GInputMessage>?, guint, gint, gint64, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gint>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDatagramBased>?, CPointer<GInputMessage>?, guint, gint, gint64, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gint>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDatagramBased>?, CPointer<GInputMessage>?, guint, gint, gint64, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gint>>>(16).value = value }
    
    var send_messages: CPointer<CFunction<(CPointer<GDatagramBased>?, CPointer<GOutputMessage>?, guint, gint, gint64, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gint>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDatagramBased>?, CPointer<GOutputMessage>?, guint, gint, gint64, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gint>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDatagramBased>?, CPointer<GOutputMessage>?, guint, gint, gint64, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gint>>>(24).value = value }
    
    var create_source: CPointer<CFunction<(CPointer<GDatagramBased>?, GIOCondition, CPointer<GCancellable>?) -> CPointer<GSource>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDatagramBased>?, GIOCondition, CPointer<GCancellable>?) -> CPointer<GSource>?>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDatagramBased>?, GIOCondition, CPointer<GCancellable>?) -> CPointer<GSource>?>>>(32).value = value }
    
    var condition_check: CPointer<CFunction<(CPointer<GDatagramBased>?, GIOCondition) -> GIOCondition>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDatagramBased>?, GIOCondition) -> GIOCondition>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDatagramBased>?, GIOCondition) -> GIOCondition>>>(40).value = value }
    
    var condition_wait: CPointer<CFunction<(CPointer<GDatagramBased>?, GIOCondition, gint64, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDatagramBased>?, GIOCondition, gint64, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDatagramBased>?, GIOCondition, gint64, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(48).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; } p0; void* p1; void* p2; void* p3; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GDataInputStreamClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(376, 8)
    
    val parent_class: GBufferedInputStreamClass
        get() = memberAt(0)
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(336).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(336).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(344).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(344).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(352).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(352).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(360).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(360).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(368).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(368).value = value }
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GDataOutputStream(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val parent_instance: GFilterOutputStream
        get() = memberAt(0)
    
    var priv: CPointer<GDataOutputStreamPrivate>?
        get() = memberAt<CPointerVar<GDataOutputStreamPrivate>>(40).value
        set(value) { memberAt<CPointerVar<GDataOutputStreamPrivate>>(40).value = value }
}

@CStruct("struct { struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; } p0; void* p1; void* p2; void* p3; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GDataOutputStreamClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(360, 8)
    
    val parent_class: GFilterOutputStreamClass
        get() = memberAt(0)
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(320).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(320).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(336).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(336).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(344).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(344).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(352).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(352).value = value }
}

@CStruct("struct { void* p0; unsigned long p1; unsigned long p2; }")
class _GString(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    var str: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(0).value
        set(value) { memberAt<CPointerVar<gcharVar>>(0).value = value }
    
    var len: gsize
        get() = memberAt<gsizeVar>(8).value
        set(value) { memberAt<gsizeVar>(8).value = value }
    
    var allocated_len: gsize
        get() = memberAt<gsizeVar>(16).value
        set(value) { memberAt<gsizeVar>(16).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3[32]; }")
class _GDBusProxyClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(408, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var g_properties_changed: CPointer<CFunction<(CPointer<GDBusProxy>?, CPointer<GVariant>?, CPointer<CPointerVar<gcharVar>>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusProxy>?, CPointer<GVariant>?, CPointer<CPointerVar<gcharVar>>?) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusProxy>?, CPointer<GVariant>?, CPointer<CPointerVar<gcharVar>>?) -> Unit>>>(136).value = value }
    
    var g_signal: CPointer<CFunction<(CPointer<GDBusProxy>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<GVariant>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusProxy>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<GVariant>?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusProxy>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<GVariant>?) -> Unit>>>(144).value = value }
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(152)
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; void* p23; void* p24; void* p25; void* p26; void* p27; void* p28; void* p29; void* p30; void* p31; void* p32; }")
class _GDriveIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(272, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var changed: CPointer<CFunction<(CPointer<GDrive>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> Unit>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> Unit>>>(16).value = value }
    
    var disconnected: CPointer<CFunction<(CPointer<GDrive>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> Unit>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> Unit>>>(24).value = value }
    
    var eject_button: CPointer<CFunction<(CPointer<GDrive>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> Unit>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> Unit>>>(32).value = value }
    
    var get_name: CPointer<CFunction<(CPointer<GDrive>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> CPointer<ByteVar>?>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> CPointer<ByteVar>?>>>(40).value = value }
    
    var get_icon: CPointer<CFunction<(CPointer<GDrive>?) -> CPointer<GIcon>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> CPointer<GIcon>?>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> CPointer<GIcon>?>>>(48).value = value }
    
    var has_volumes: CPointer<CFunction<(CPointer<GDrive>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(56).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(56).value = value }
    
    var get_volumes: CPointer<CFunction<(CPointer<GDrive>?) -> CPointer<GList>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> CPointer<GList>?>>>(64).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> CPointer<GList>?>>>(64).value = value }
    
    var is_media_removable: CPointer<CFunction<(CPointer<GDrive>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(72).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(72).value = value }
    
    var has_media: CPointer<CFunction<(CPointer<GDrive>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(80).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(80).value = value }
    
    var is_media_check_automatic: CPointer<CFunction<(CPointer<GDrive>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(88).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(88).value = value }
    
    var can_eject: CPointer<CFunction<(CPointer<GDrive>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(96).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(96).value = value }
    
    var can_poll_for_media: CPointer<CFunction<(CPointer<GDrive>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(104).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(104).value = value }
    
    var eject: CPointer<CFunction<(CPointer<GDrive>?, GMountUnmountFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, GMountUnmountFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(112).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, GMountUnmountFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(112).value = value }
    
    var eject_finish: CPointer<CFunction<(CPointer<GDrive>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(120).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(120).value = value }
    
    var poll_for_media: CPointer<CFunction<(CPointer<GDrive>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(128).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(128).value = value }
    
    var poll_for_media_finish: CPointer<CFunction<(CPointer<GDrive>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(136).value = value }
    
    var get_identifier: CPointer<CFunction<(CPointer<GDrive>?, CPointer<ByteVar>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, CPointer<ByteVar>?) -> CPointer<ByteVar>?>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, CPointer<ByteVar>?) -> CPointer<ByteVar>?>>>(144).value = value }
    
    var enumerate_identifiers: CPointer<CFunction<(CPointer<GDrive>?) -> CPointer<CPointerVar<ByteVar>>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> CPointer<CPointerVar<ByteVar>>?>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> CPointer<CPointerVar<ByteVar>>?>>>(152).value = value }
    
    var get_start_stop_type: CPointer<CFunction<(CPointer<GDrive>?) -> GDriveStartStopType>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> GDriveStartStopType>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> GDriveStartStopType>>>(160).value = value }
    
    var can_start: CPointer<CFunction<(CPointer<GDrive>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(168).value = value }
    
    var can_start_degraded: CPointer<CFunction<(CPointer<GDrive>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(176).value = value }
    
    var start: CPointer<CFunction<(CPointer<GDrive>?, GDriveStartFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, GDriveStartFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, GDriveStartFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(184).value = value }
    
    var start_finish: CPointer<CFunction<(CPointer<GDrive>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(192).value = value }
    
    var can_stop: CPointer<CFunction<(CPointer<GDrive>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(200).value = value }
    
    var stop: CPointer<CFunction<(CPointer<GDrive>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(208).value = value }
    
    var stop_finish: CPointer<CFunction<(CPointer<GDrive>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(216).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(216).value = value }
    
    var stop_button: CPointer<CFunction<(CPointer<GDrive>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> Unit>>>(224).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> Unit>>>(224).value = value }
    
    var eject_with_operation: CPointer<CFunction<(CPointer<GDrive>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(232).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(232).value = value }
    
    var eject_with_operation_finish: CPointer<CFunction<(CPointer<GDrive>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(240).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(240).value = value }
    
    var get_sort_key: CPointer<CFunction<(CPointer<GDrive>?) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> CPointer<gcharVar>?>>>(248).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> CPointer<gcharVar>?>>>(248).value = value }
    
    var get_symbolic_icon: CPointer<CFunction<(CPointer<GDrive>?) -> CPointer<GIcon>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> CPointer<GIcon>?>>>(256).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> CPointer<GIcon>?>>>(256).value = value }
    
    var is_removable: CPointer<CFunction<(CPointer<GDrive>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(264).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(264).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; }")
class _GDtlsConnectionInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(72, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var accept_certificate: CPointer<CFunction<(CPointer<GDtlsConnection>?, CPointer<GTlsCertificate>?, GTlsCertificateFlags) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDtlsConnection>?, CPointer<GTlsCertificate>?, GTlsCertificateFlags) -> gboolean>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDtlsConnection>?, CPointer<GTlsCertificate>?, GTlsCertificateFlags) -> gboolean>>>(16).value = value }
    
    var handshake: CPointer<CFunction<(CPointer<GDtlsConnection>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDtlsConnection>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDtlsConnection>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(24).value = value }
    
    var handshake_async: CPointer<CFunction<(CPointer<GDtlsConnection>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDtlsConnection>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDtlsConnection>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(32).value = value }
    
    var handshake_finish: CPointer<CFunction<(CPointer<GDtlsConnection>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDtlsConnection>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDtlsConnection>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(40).value = value }
    
    var shutdown: CPointer<CFunction<(CPointer<GDtlsConnection>?, gboolean, gboolean, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDtlsConnection>?, gboolean, gboolean, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDtlsConnection>?, gboolean, gboolean, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(48).value = value }
    
    var shutdown_async: CPointer<CFunction<(CPointer<GDtlsConnection>?, gboolean, gboolean, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDtlsConnection>?, gboolean, gboolean, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(56).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDtlsConnection>?, gboolean, gboolean, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(56).value = value }
    
    var shutdown_finish: CPointer<CFunction<(CPointer<GDtlsConnection>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDtlsConnection>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(64).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDtlsConnection>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(64).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; }")
class _GDtlsClientConnectionInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; }")
class _GDtlsServerConnectionInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GIconIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var hash: CPointer<CFunction<(CPointer<GIcon>?) -> guint>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GIcon>?) -> guint>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GIcon>?) -> guint>>>(16).value = value }
    
    var equal: CPointer<CFunction<(CPointer<GIcon>?, CPointer<GIcon>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GIcon>?, CPointer<GIcon>?) -> gboolean>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GIcon>?, CPointer<GIcon>?) -> gboolean>>>(24).value = value }
    
    var to_tokens: CPointer<CFunction<(CPointer<GIcon>?, CPointer<GPtrArray>?, CPointer<gintVar>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GIcon>?, CPointer<GPtrArray>?, CPointer<gintVar>?) -> gboolean>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GIcon>?, CPointer<GPtrArray>?, CPointer<gintVar>?) -> gboolean>>>(32).value = value }
    
    var from_tokens: CPointer<CFunction<(CPointer<CPointerVar<gcharVar>>?, gint, gint, CPointer<CPointerVar<GError>>?) -> CPointer<GIcon>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<CPointerVar<gcharVar>>?, gint, gint, CPointer<CPointerVar<GError>>?) -> CPointer<GIcon>?>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<CPointerVar<gcharVar>>?, gint, gint, CPointer<CPointerVar<GError>>?) -> CPointer<GIcon>?>>>(40).value = value }
    
    var serialize: CPointer<CFunction<(CPointer<GIcon>?) -> CPointer<GVariant>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GIcon>?) -> CPointer<GVariant>?>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GIcon>?) -> CPointer<GVariant>?>>>(48).value = value }
}

@CStruct("struct { void* p0; unsigned int p1; }")
class _GPtrArray(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    var pdata: CPointer<gpointerVar>?
        get() = memberAt<CPointerVar<gpointerVar>>(0).value
        set(value) { memberAt<CPointerVar<gpointerVar>>(0).value = value }
    
    var len: guint
        get() = memberAt<guintVar>(8).value
        set(value) { memberAt<guintVar>(8).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GEmblemedIcon(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GEmblemedIconPrivate>?
        get() = memberAt<CPointerVar<GEmblemedIconPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GEmblemedIconPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; }")
class _GEmblemedIconClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(136, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; }")
class _GFileEnumeratorClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(240, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var next_file: CPointer<CFunction<(CPointer<GFileEnumerator>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileEnumerator>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileEnumerator>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(136).value = value }
    
    var close_fn: CPointer<CFunction<(CPointer<GFileEnumerator>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileEnumerator>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileEnumerator>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(144).value = value }
    
    var next_files_async: CPointer<CFunction<(CPointer<GFileEnumerator>?, Int, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileEnumerator>?, Int, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileEnumerator>?, Int, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(152).value = value }
    
    var next_files_finish: CPointer<CFunction<(CPointer<GFileEnumerator>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileEnumerator>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileEnumerator>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>>(160).value = value }
    
    var close_async: CPointer<CFunction<(CPointer<GFileEnumerator>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileEnumerator>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileEnumerator>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(168).value = value }
    
    var close_finish: CPointer<CFunction<(CPointer<GFileEnumerator>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileEnumerator>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileEnumerator>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(176).value = value }
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(192).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(200).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(208).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(216).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(216).value = value }
    
    var _g_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(224).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(224).value = value }
    
    var _g_reserved7: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(232).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(232).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; void* p23; void* p24; void* p25; void* p26; void* p27; void* p28; void* p29; void* p30; void* p31; void* p32; void* p33; void* p34; void* p35; void* p36; void* p37; void* p38; void* p39; void* p40; void* p41; void* p42; void* p43; void* p44; void* p45; void* p46; void* p47; void* p48; void* p49; void* p50; void* p51; void* p52; void* p53; void* p54; void* p55; void* p56; void* p57; void* p58; void* p59; void* p60; void* p61; void* p62; void* p63; void* p64; void* p65; void* p66; void* p67; void* p68; void* p69; void* p70; void* p71; void* p72; void* p73; void* p74; void* p75; void* p76; void* p77; void* p78; void* p79; void* p80; void* p81; void* p82; void* p83; void* p84; void* p85; void* p86; void* p87; void* p88; void* p89; void* p90; void* p91; void* p92; void* p93; int p94; void* p95; void* p96; void* p97; void* p98; void* p99; void* p100; void* p101; void* p102; void* p103; }")
class _GFileIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(840, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var dup: CPointer<CFunction<(CPointer<GFile>?) -> CPointer<GFile>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?) -> CPointer<GFile>?>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?) -> CPointer<GFile>?>>>(16).value = value }
    
    var hash: CPointer<CFunction<(CPointer<GFile>?) -> guint>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?) -> guint>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?) -> guint>>>(24).value = value }
    
    var equal: CPointer<CFunction<(CPointer<GFile>?, CPointer<GFile>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GFile>?) -> gboolean>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GFile>?) -> gboolean>>>(32).value = value }
    
    var is_native: CPointer<CFunction<(CPointer<GFile>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?) -> gboolean>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?) -> gboolean>>>(40).value = value }
    
    var has_uri_scheme: CPointer<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?) -> gboolean>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?) -> gboolean>>>(48).value = value }
    
    var get_uri_scheme: CPointer<CFunction<(CPointer<GFile>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?) -> CPointer<ByteVar>?>>>(56).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?) -> CPointer<ByteVar>?>>>(56).value = value }
    
    var get_basename: CPointer<CFunction<(CPointer<GFile>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?) -> CPointer<ByteVar>?>>>(64).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?) -> CPointer<ByteVar>?>>>(64).value = value }
    
    var get_path: CPointer<CFunction<(CPointer<GFile>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?) -> CPointer<ByteVar>?>>>(72).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?) -> CPointer<ByteVar>?>>>(72).value = value }
    
    var get_uri: CPointer<CFunction<(CPointer<GFile>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?) -> CPointer<ByteVar>?>>>(80).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?) -> CPointer<ByteVar>?>>>(80).value = value }
    
    var get_parse_name: CPointer<CFunction<(CPointer<GFile>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?) -> CPointer<ByteVar>?>>>(88).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?) -> CPointer<ByteVar>?>>>(88).value = value }
    
    var get_parent: CPointer<CFunction<(CPointer<GFile>?) -> CPointer<GFile>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?) -> CPointer<GFile>?>>>(96).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?) -> CPointer<GFile>?>>>(96).value = value }
    
    var prefix_matches: CPointer<CFunction<(CPointer<GFile>?, CPointer<GFile>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GFile>?) -> gboolean>>>(104).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GFile>?) -> gboolean>>>(104).value = value }
    
    var get_relative_path: CPointer<CFunction<(CPointer<GFile>?, CPointer<GFile>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GFile>?) -> CPointer<ByteVar>?>>>(112).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GFile>?) -> CPointer<ByteVar>?>>>(112).value = value }
    
    var resolve_relative_path: CPointer<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?) -> CPointer<GFile>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?) -> CPointer<GFile>?>>>(120).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?) -> CPointer<GFile>?>>>(120).value = value }
    
    var get_child_for_display_name: CPointer<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFile>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFile>?>>>(128).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFile>?>>>(128).value = value }
    
    var enumerate_children: CPointer<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, GFileQueryInfoFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileEnumerator>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, GFileQueryInfoFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileEnumerator>?>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, GFileQueryInfoFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileEnumerator>?>>>(136).value = value }
    
    var enumerate_children_async: CPointer<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, GFileQueryInfoFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, GFileQueryInfoFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, GFileQueryInfoFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(144).value = value }
    
    var enumerate_children_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileEnumerator>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileEnumerator>?>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileEnumerator>?>>>(152).value = value }
    
    var query_info: CPointer<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, GFileQueryInfoFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, GFileQueryInfoFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, GFileQueryInfoFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(160).value = value }
    
    var query_info_async: CPointer<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, GFileQueryInfoFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, GFileQueryInfoFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, GFileQueryInfoFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(168).value = value }
    
    var query_info_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(176).value = value }
    
    var query_filesystem_info: CPointer<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(184).value = value }
    
    var query_filesystem_info_async: CPointer<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(192).value = value }
    
    var query_filesystem_info_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(200).value = value }
    
    var find_enclosing_mount: CPointer<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GMount>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GMount>?>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GMount>?>>>(208).value = value }
    
    var find_enclosing_mount_async: CPointer<CFunction<(CPointer<GFile>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(216).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(216).value = value }
    
    var find_enclosing_mount_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GMount>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GMount>?>>>(224).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GMount>?>>>(224).value = value }
    
    var set_display_name: CPointer<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFile>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFile>?>>>(232).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFile>?>>>(232).value = value }
    
    var set_display_name_async: CPointer<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(240).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(240).value = value }
    
    var set_display_name_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFile>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFile>?>>>(248).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFile>?>>>(248).value = value }
    
    var query_settable_attributes: CPointer<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileAttributeInfoList>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileAttributeInfoList>?>>>(256).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileAttributeInfoList>?>>>(256).value = value }
    
    var _query_settable_attributes_async: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value = value }
    
    var _query_settable_attributes_finish: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value = value }
    
    var query_writable_namespaces: CPointer<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileAttributeInfoList>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileAttributeInfoList>?>>>(280).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileAttributeInfoList>?>>>(280).value = value }
    
    var _query_writable_namespaces_async: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(288).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(288).value = value }
    
    var _query_writable_namespaces_finish: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value = value }
    
    var set_attribute: CPointer<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, GFileAttributeType, gpointer?, GFileQueryInfoFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, GFileAttributeType, gpointer?, GFileQueryInfoFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(304).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, GFileAttributeType, gpointer?, GFileQueryInfoFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(304).value = value }
    
    var set_attributes_from_info: CPointer<CFunction<(CPointer<GFile>?, CPointer<GFileInfo>?, GFileQueryInfoFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GFileInfo>?, GFileQueryInfoFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(312).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GFileInfo>?, GFileQueryInfoFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(312).value = value }
    
    var set_attributes_async: CPointer<CFunction<(CPointer<GFile>?, CPointer<GFileInfo>?, GFileQueryInfoFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GFileInfo>?, GFileQueryInfoFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(320).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GFileInfo>?, GFileQueryInfoFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(320).value = value }
    
    var set_attributes_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GFileInfo>>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GFileInfo>>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(328).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GFileInfo>>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(328).value = value }
    
    var read_fn: CPointer<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInputStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInputStream>?>>>(336).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInputStream>?>>>(336).value = value }
    
    var read_async: CPointer<CFunction<(CPointer<GFile>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(344).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(344).value = value }
    
    var read_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInputStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInputStream>?>>>(352).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInputStream>?>>>(352).value = value }
    
    var append_to: CPointer<CFunction<(CPointer<GFile>?, GFileCreateFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileOutputStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileCreateFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileOutputStream>?>>>(360).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileCreateFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileOutputStream>?>>>(360).value = value }
    
    var append_to_async: CPointer<CFunction<(CPointer<GFile>?, GFileCreateFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileCreateFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(368).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileCreateFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(368).value = value }
    
    var append_to_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileOutputStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileOutputStream>?>>>(376).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileOutputStream>?>>>(376).value = value }
    
    var create: CPointer<CFunction<(CPointer<GFile>?, GFileCreateFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileOutputStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileCreateFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileOutputStream>?>>>(384).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileCreateFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileOutputStream>?>>>(384).value = value }
    
    var create_async: CPointer<CFunction<(CPointer<GFile>?, GFileCreateFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileCreateFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(392).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileCreateFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(392).value = value }
    
    var create_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileOutputStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileOutputStream>?>>>(400).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileOutputStream>?>>>(400).value = value }
    
    var replace: CPointer<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, gboolean, GFileCreateFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileOutputStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, gboolean, GFileCreateFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileOutputStream>?>>>(408).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, gboolean, GFileCreateFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileOutputStream>?>>>(408).value = value }
    
    var replace_async: CPointer<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, gboolean, GFileCreateFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, gboolean, GFileCreateFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(416).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, gboolean, GFileCreateFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(416).value = value }
    
    var replace_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileOutputStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileOutputStream>?>>>(424).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileOutputStream>?>>>(424).value = value }
    
    var delete_file: CPointer<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(432).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(432).value = value }
    
    var delete_file_async: CPointer<CFunction<(CPointer<GFile>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(440).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(440).value = value }
    
    var delete_file_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(448).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(448).value = value }
    
    var trash: CPointer<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(456).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(456).value = value }
    
    var trash_async: CPointer<CFunction<(CPointer<GFile>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(464).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(464).value = value }
    
    var trash_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(472).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(472).value = value }
    
    var make_directory: CPointer<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(480).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(480).value = value }
    
    var make_directory_async: CPointer<CFunction<(CPointer<GFile>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(488).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(488).value = value }
    
    var make_directory_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(496).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(496).value = value }
    
    var make_symbolic_link: CPointer<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(504).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(504).value = value }
    
    var _make_symbolic_link_async: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(512).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(512).value = value }
    
    var _make_symbolic_link_finish: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(520).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(520).value = value }
    
    var copy: CPointer<CFunction<(CPointer<GFile>?, CPointer<GFile>?, GFileCopyFlags, CPointer<GCancellable>?, GFileProgressCallback?, gpointer?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GFile>?, GFileCopyFlags, CPointer<GCancellable>?, GFileProgressCallback?, gpointer?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(528).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GFile>?, GFileCopyFlags, CPointer<GCancellable>?, GFileProgressCallback?, gpointer?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(528).value = value }
    
    var copy_async: CPointer<CFunction<(CPointer<GFile>?, CPointer<GFile>?, GFileCopyFlags, Int, CPointer<GCancellable>?, GFileProgressCallback?, gpointer?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GFile>?, GFileCopyFlags, Int, CPointer<GCancellable>?, GFileProgressCallback?, gpointer?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(536).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GFile>?, GFileCopyFlags, Int, CPointer<GCancellable>?, GFileProgressCallback?, gpointer?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(536).value = value }
    
    var copy_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(544).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(544).value = value }
    
    var move: CPointer<CFunction<(CPointer<GFile>?, CPointer<GFile>?, GFileCopyFlags, CPointer<GCancellable>?, GFileProgressCallback?, gpointer?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GFile>?, GFileCopyFlags, CPointer<GCancellable>?, GFileProgressCallback?, gpointer?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(552).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GFile>?, GFileCopyFlags, CPointer<GCancellable>?, GFileProgressCallback?, gpointer?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(552).value = value }
    
    var _move_async: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(560).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(560).value = value }
    
    var _move_finish: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(568).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(568).value = value }
    
    var mount_mountable: CPointer<CFunction<(CPointer<GFile>?, GMountMountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GMountMountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(576).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GMountMountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(576).value = value }
    
    var mount_mountable_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFile>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFile>?>>>(584).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFile>?>>>(584).value = value }
    
    var unmount_mountable: CPointer<CFunction<(CPointer<GFile>?, GMountUnmountFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GMountUnmountFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(592).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GMountUnmountFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(592).value = value }
    
    var unmount_mountable_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(600).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(600).value = value }
    
    var eject_mountable: CPointer<CFunction<(CPointer<GFile>?, GMountUnmountFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GMountUnmountFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(608).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GMountUnmountFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(608).value = value }
    
    var eject_mountable_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(616).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(616).value = value }
    
    var mount_enclosing_volume: CPointer<CFunction<(CPointer<GFile>?, GMountMountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GMountMountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(624).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GMountMountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(624).value = value }
    
    var mount_enclosing_volume_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(632).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(632).value = value }
    
    var monitor_dir: CPointer<CFunction<(CPointer<GFile>?, GFileMonitorFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileMonitor>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileMonitorFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileMonitor>?>>>(640).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileMonitorFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileMonitor>?>>>(640).value = value }
    
    var monitor_file: CPointer<CFunction<(CPointer<GFile>?, GFileMonitorFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileMonitor>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileMonitorFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileMonitor>?>>>(648).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileMonitorFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileMonitor>?>>>(648).value = value }
    
    var open_readwrite: CPointer<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileIOStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileIOStream>?>>>(656).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileIOStream>?>>>(656).value = value }
    
    var open_readwrite_async: CPointer<CFunction<(CPointer<GFile>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(664).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(664).value = value }
    
    var open_readwrite_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileIOStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileIOStream>?>>>(672).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileIOStream>?>>>(672).value = value }
    
    var create_readwrite: CPointer<CFunction<(CPointer<GFile>?, GFileCreateFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileIOStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileCreateFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileIOStream>?>>>(680).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileCreateFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileIOStream>?>>>(680).value = value }
    
    var create_readwrite_async: CPointer<CFunction<(CPointer<GFile>?, GFileCreateFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileCreateFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(688).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileCreateFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(688).value = value }
    
    var create_readwrite_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileIOStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileIOStream>?>>>(696).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileIOStream>?>>>(696).value = value }
    
    var replace_readwrite: CPointer<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, gboolean, GFileCreateFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileIOStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, gboolean, GFileCreateFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileIOStream>?>>>(704).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, gboolean, GFileCreateFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileIOStream>?>>>(704).value = value }
    
    var replace_readwrite_async: CPointer<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, gboolean, GFileCreateFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, gboolean, GFileCreateFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(712).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, gboolean, GFileCreateFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(712).value = value }
    
    var replace_readwrite_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileIOStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileIOStream>?>>>(720).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileIOStream>?>>>(720).value = value }
    
    var start_mountable: CPointer<CFunction<(CPointer<GFile>?, GDriveStartFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GDriveStartFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(728).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GDriveStartFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(728).value = value }
    
    var start_mountable_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(736).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(736).value = value }
    
    var stop_mountable: CPointer<CFunction<(CPointer<GFile>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(744).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(744).value = value }
    
    var stop_mountable_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(752).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(752).value = value }
    
    var supports_thread_contexts: gboolean
        get() = memberAt<gbooleanVar>(760).value
        set(value) { memberAt<gbooleanVar>(760).value = value }
    
    var unmount_mountable_with_operation: CPointer<CFunction<(CPointer<GFile>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(768).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(768).value = value }
    
    var unmount_mountable_with_operation_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(776).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(776).value = value }
    
    var eject_mountable_with_operation: CPointer<CFunction<(CPointer<GFile>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(784).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(784).value = value }
    
    var eject_mountable_with_operation_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(792).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(792).value = value }
    
    var poll_mountable: CPointer<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(800).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(800).value = value }
    
    var poll_mountable_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(808).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(808).value = value }
    
    var measure_disk_usage: CPointer<CFunction<(CPointer<GFile>?, GFileMeasureFlags, CPointer<GCancellable>?, GFileMeasureProgressCallback?, gpointer?, CPointer<guint64Var>?, CPointer<guint64Var>?, CPointer<guint64Var>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileMeasureFlags, CPointer<GCancellable>?, GFileMeasureProgressCallback?, gpointer?, CPointer<guint64Var>?, CPointer<guint64Var>?, CPointer<guint64Var>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(816).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileMeasureFlags, CPointer<GCancellable>?, GFileMeasureProgressCallback?, gpointer?, CPointer<guint64Var>?, CPointer<guint64Var>?, CPointer<guint64Var>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(816).value = value }
    
    var measure_disk_usage_async: CPointer<CFunction<(CPointer<GFile>?, GFileMeasureFlags, gint, CPointer<GCancellable>?, GFileMeasureProgressCallback?, gpointer?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileMeasureFlags, gint, CPointer<GCancellable>?, GFileMeasureProgressCallback?, gpointer?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(824).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileMeasureFlags, gint, CPointer<GCancellable>?, GFileMeasureProgressCallback?, gpointer?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(824).value = value }
    
    var measure_disk_usage_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<guint64Var>?, CPointer<guint64Var>?, CPointer<guint64Var>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<guint64Var>?, CPointer<guint64Var>?, CPointer<guint64Var>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(832).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<guint64Var>?, CPointer<guint64Var>?, CPointer<guint64Var>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(832).value = value }
}

@CStruct("struct { long p0; long p1; }")
class _GTimeVal(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    var tv_sec: glong
        get() = memberAt<glongVar>(0).value
        set(value) { memberAt<glongVar>(0).value = value }
    
    var tv_usec: glong
        get() = memberAt<glongVar>(8).value
        set(value) { memberAt<glongVar>(8).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; }")
class _GFileInputStreamClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(336, 8)
    
    val parent_class: GInputStreamClass
        get() = memberAt(0)
    
    var tell: CPointer<CFunction<(CPointer<GFileInputStream>?) -> goffset>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileInputStream>?) -> goffset>>>(248).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileInputStream>?) -> goffset>>>(248).value = value }
    
    var can_seek: CPointer<CFunction<(CPointer<GFileInputStream>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileInputStream>?) -> gboolean>>>(256).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileInputStream>?) -> gboolean>>>(256).value = value }
    
    var seek: CPointer<CFunction<(CPointer<GFileInputStream>?, goffset, GSeekType, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileInputStream>?, goffset, GSeekType, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(264).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileInputStream>?, goffset, GSeekType, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(264).value = value }
    
    var query_info: CPointer<CFunction<(CPointer<GFileInputStream>?, CPointer<ByteVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileInputStream>?, CPointer<ByteVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(272).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileInputStream>?, CPointer<ByteVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(272).value = value }
    
    var query_info_async: CPointer<CFunction<(CPointer<GFileInputStream>?, CPointer<ByteVar>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileInputStream>?, CPointer<ByteVar>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(280).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileInputStream>?, CPointer<ByteVar>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(280).value = value }
    
    var query_info_finish: CPointer<CFunction<(CPointer<GFileInputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileInputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(288).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileInputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(288).value = value }
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(304).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(304).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(312).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(312).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(320).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(320).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; }")
class _GIOStreamClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(256, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var get_input_stream: CPointer<CFunction<(CPointer<GIOStream>?) -> CPointer<GInputStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GIOStream>?) -> CPointer<GInputStream>?>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GIOStream>?) -> CPointer<GInputStream>?>>>(136).value = value }
    
    var get_output_stream: CPointer<CFunction<(CPointer<GIOStream>?) -> CPointer<GOutputStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GIOStream>?) -> CPointer<GOutputStream>?>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GIOStream>?) -> CPointer<GOutputStream>?>>>(144).value = value }
    
    var close_fn: CPointer<CFunction<(CPointer<GIOStream>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GIOStream>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GIOStream>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(152).value = value }
    
    var close_async: CPointer<CFunction<(CPointer<GIOStream>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GIOStream>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GIOStream>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(160).value = value }
    
    var close_finish: CPointer<CFunction<(CPointer<GIOStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GIOStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GIOStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(168).value = value }
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(192).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(200).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(208).value = value }
    
    var _g_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(216).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(216).value = value }
    
    var _g_reserved7: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(224).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(224).value = value }
    
    var _g_reserved8: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(232).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(232).value = value }
    
    var _g_reserved9: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(240).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(240).value = value }
    
    var _g_reserved10: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(248).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(248).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; }")
class _GFileIOStreamClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(368, 8)
    
    val parent_class: GIOStreamClass
        get() = memberAt(0)
    
    var tell: CPointer<CFunction<(CPointer<GFileIOStream>?) -> goffset>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileIOStream>?) -> goffset>>>(256).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileIOStream>?) -> goffset>>>(256).value = value }
    
    var can_seek: CPointer<CFunction<(CPointer<GFileIOStream>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileIOStream>?) -> gboolean>>>(264).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileIOStream>?) -> gboolean>>>(264).value = value }
    
    var seek: CPointer<CFunction<(CPointer<GFileIOStream>?, goffset, GSeekType, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileIOStream>?, goffset, GSeekType, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(272).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileIOStream>?, goffset, GSeekType, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(272).value = value }
    
    var can_truncate: CPointer<CFunction<(CPointer<GFileIOStream>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileIOStream>?) -> gboolean>>>(280).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileIOStream>?) -> gboolean>>>(280).value = value }
    
    var truncate_fn: CPointer<CFunction<(CPointer<GFileIOStream>?, goffset, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileIOStream>?, goffset, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(288).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileIOStream>?, goffset, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(288).value = value }
    
    var query_info: CPointer<CFunction<(CPointer<GFileIOStream>?, CPointer<ByteVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileIOStream>?, CPointer<ByteVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(296).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileIOStream>?, CPointer<ByteVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(296).value = value }
    
    var query_info_async: CPointer<CFunction<(CPointer<GFileIOStream>?, CPointer<ByteVar>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileIOStream>?, CPointer<ByteVar>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(304).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileIOStream>?, CPointer<ByteVar>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(304).value = value }
    
    var query_info_finish: CPointer<CFunction<(CPointer<GFileIOStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileIOStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(312).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileIOStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(312).value = value }
    
    var get_etag: CPointer<CFunction<(CPointer<GFileIOStream>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileIOStream>?) -> CPointer<ByteVar>?>>>(320).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileIOStream>?) -> CPointer<ByteVar>?>>>(320).value = value }
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(336).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(336).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(344).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(344).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(352).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(352).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(360).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(360).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; }")
class _GFileMonitorClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(192, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var changed: CPointer<CFunction<(CPointer<GFileMonitor>?, CPointer<GFile>?, CPointer<GFile>?, GFileMonitorEvent) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileMonitor>?, CPointer<GFile>?, CPointer<GFile>?, GFileMonitorEvent) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileMonitor>?, CPointer<GFile>?, CPointer<GFile>?, GFileMonitorEvent) -> Unit>>>(136).value = value }
    
    var cancel: CPointer<CFunction<(CPointer<GFileMonitor>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileMonitor>?) -> gboolean>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileMonitor>?) -> gboolean>>>(144).value = value }
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GFilenameCompleterClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(168, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var got_completion_data: CPointer<CFunction<(CPointer<GFilenameCompleter>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFilenameCompleter>?) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFilenameCompleter>?) -> Unit>>>(136).value = value }
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; }")
class _GFileOutputStreamClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(408, 8)
    
    val parent_class: GOutputStreamClass
        get() = memberAt(0)
    
    var tell: CPointer<CFunction<(CPointer<GFileOutputStream>?) -> goffset>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileOutputStream>?) -> goffset>>>(296).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileOutputStream>?) -> goffset>>>(296).value = value }
    
    var can_seek: CPointer<CFunction<(CPointer<GFileOutputStream>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileOutputStream>?) -> gboolean>>>(304).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileOutputStream>?) -> gboolean>>>(304).value = value }
    
    var seek: CPointer<CFunction<(CPointer<GFileOutputStream>?, goffset, GSeekType, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileOutputStream>?, goffset, GSeekType, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(312).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileOutputStream>?, goffset, GSeekType, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(312).value = value }
    
    var can_truncate: CPointer<CFunction<(CPointer<GFileOutputStream>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileOutputStream>?) -> gboolean>>>(320).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileOutputStream>?) -> gboolean>>>(320).value = value }
    
    var truncate_fn: CPointer<CFunction<(CPointer<GFileOutputStream>?, goffset, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileOutputStream>?, goffset, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(328).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileOutputStream>?, goffset, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(328).value = value }
    
    var query_info: CPointer<CFunction<(CPointer<GFileOutputStream>?, CPointer<ByteVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileOutputStream>?, CPointer<ByteVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(336).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileOutputStream>?, CPointer<ByteVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(336).value = value }
    
    var query_info_async: CPointer<CFunction<(CPointer<GFileOutputStream>?, CPointer<ByteVar>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileOutputStream>?, CPointer<ByteVar>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(344).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileOutputStream>?, CPointer<ByteVar>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(344).value = value }
    
    var query_info_finish: CPointer<CFunction<(CPointer<GFileOutputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileOutputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(352).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileOutputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(352).value = value }
    
    var get_etag: CPointer<CFunction<(CPointer<GFileOutputStream>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileOutputStream>?) -> CPointer<ByteVar>?>>>(360).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileOutputStream>?) -> CPointer<ByteVar>?>>>(360).value = value }
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(368).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(368).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(376).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(376).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(384).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(384).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(392).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(392).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(400).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(400).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; }")
class _GInetAddressClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(152, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var to_string: CPointer<CFunction<(CPointer<GInetAddress>?) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GInetAddress>?) -> CPointer<gcharVar>?>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GInetAddress>?) -> CPointer<gcharVar>?>>>(136).value = value }
    
    var to_bytes: CPointer<CFunction<(CPointer<GInetAddress>?) -> CPointer<guint8Var>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GInetAddress>?) -> CPointer<guint8Var>?>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GInetAddress>?) -> CPointer<guint8Var>?>>>(144).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; }")
class _GInetAddressMaskClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(136, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; }")
class _GSocketAddressClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(160, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var get_family: CPointer<CFunction<(CPointer<GSocketAddress>?) -> GSocketFamily>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSocketAddress>?) -> GSocketFamily>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSocketAddress>?) -> GSocketFamily>>>(136).value = value }
    
    var get_native_size: CPointer<CFunction<(CPointer<GSocketAddress>?) -> gssize>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSocketAddress>?) -> gssize>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSocketAddress>?) -> gssize>>>(144).value = value }
    
    var to_native: CPointer<CFunction<(CPointer<GSocketAddress>?, gpointer?, gsize, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSocketAddress>?, gpointer?, gsize, CPointer<CPointerVar<GError>>?) -> gboolean>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSocketAddress>?, gpointer?, gsize, CPointer<CPointerVar<GError>>?) -> gboolean>>>(152).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; } p0; }")
class _GInetSocketAddressClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(160, 8)
    
    val parent_class: GSocketAddressClass
        get() = memberAt(0)
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; }")
class _GLoadableIconIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var load: CPointer<CFunction<(CPointer<GLoadableIcon>?, Int, CPointer<CPointerVar<ByteVar>>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GInputStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GLoadableIcon>?, Int, CPointer<CPointerVar<ByteVar>>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GInputStream>?>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GLoadableIcon>?, Int, CPointer<CPointerVar<ByteVar>>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GInputStream>?>>>(16).value = value }
    
    var load_async: CPointer<CFunction<(CPointer<GLoadableIcon>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GLoadableIcon>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GLoadableIcon>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(24).value = value }
    
    var load_finish: CPointer<CFunction<(CPointer<GLoadableIcon>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<ByteVar>>?, CPointer<CPointerVar<GError>>?) -> CPointer<GInputStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GLoadableIcon>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<ByteVar>>?, CPointer<CPointerVar<GError>>?) -> CPointer<GInputStream>?>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GLoadableIcon>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<ByteVar>>?, CPointer<CPointerVar<GError>>?) -> CPointer<GInputStream>?>>>(32).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GMemoryInputStreamClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(288, 8)
    
    val parent_class: GInputStreamClass
        get() = memberAt(0)
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(248).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(248).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(256).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(256).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(280).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(280).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GMemoryOutputStreamClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(336, 8)
    
    val parent_class: GOutputStreamClass
        get() = memberAt(0)
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(304).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(304).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(312).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(312).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(320).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(320).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; void* p23; void* p24; void* p25; void* p26; void* p27; }")
class _GMountIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(232, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var changed: CPointer<CFunction<(CPointer<GMount>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> Unit>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> Unit>>>(16).value = value }
    
    var unmounted: CPointer<CFunction<(CPointer<GMount>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> Unit>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> Unit>>>(24).value = value }
    
    var get_root: CPointer<CFunction<(CPointer<GMount>?) -> CPointer<GFile>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> CPointer<GFile>?>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> CPointer<GFile>?>>>(32).value = value }
    
    var get_name: CPointer<CFunction<(CPointer<GMount>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> CPointer<ByteVar>?>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> CPointer<ByteVar>?>>>(40).value = value }
    
    var get_icon: CPointer<CFunction<(CPointer<GMount>?) -> CPointer<GIcon>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> CPointer<GIcon>?>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> CPointer<GIcon>?>>>(48).value = value }
    
    var get_uuid: CPointer<CFunction<(CPointer<GMount>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> CPointer<ByteVar>?>>>(56).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> CPointer<ByteVar>?>>>(56).value = value }
    
    var get_volume: CPointer<CFunction<(CPointer<GMount>?) -> CPointer<GVolume>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> CPointer<GVolume>?>>>(64).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> CPointer<GVolume>?>>>(64).value = value }
    
    var get_drive: CPointer<CFunction<(CPointer<GMount>?) -> CPointer<GDrive>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> CPointer<GDrive>?>>>(72).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> CPointer<GDrive>?>>>(72).value = value }
    
    var can_unmount: CPointer<CFunction<(CPointer<GMount>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> gboolean>>>(80).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> gboolean>>>(80).value = value }
    
    var can_eject: CPointer<CFunction<(CPointer<GMount>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> gboolean>>>(88).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> gboolean>>>(88).value = value }
    
    var unmount: CPointer<CFunction<(CPointer<GMount>?, GMountUnmountFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?, GMountUnmountFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(96).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?, GMountUnmountFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(96).value = value }
    
    var unmount_finish: CPointer<CFunction<(CPointer<GMount>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(104).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(104).value = value }
    
    var eject: CPointer<CFunction<(CPointer<GMount>?, GMountUnmountFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?, GMountUnmountFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(112).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?, GMountUnmountFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(112).value = value }
    
    var eject_finish: CPointer<CFunction<(CPointer<GMount>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(120).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(120).value = value }
    
    var remount: CPointer<CFunction<(CPointer<GMount>?, GMountMountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?, GMountMountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(128).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?, GMountMountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(128).value = value }
    
    var remount_finish: CPointer<CFunction<(CPointer<GMount>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(136).value = value }
    
    var guess_content_type: CPointer<CFunction<(CPointer<GMount>?, gboolean, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?, gboolean, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?, gboolean, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(144).value = value }
    
    var guess_content_type_finish: CPointer<CFunction<(CPointer<GMount>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<CPointerVar<gcharVar>>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<CPointerVar<gcharVar>>?>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<CPointerVar<gcharVar>>?>>>(152).value = value }
    
    var guess_content_type_sync: CPointer<CFunction<(CPointer<GMount>?, gboolean, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<CPointerVar<gcharVar>>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?, gboolean, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<CPointerVar<gcharVar>>?>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?, gboolean, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<CPointerVar<gcharVar>>?>>>(160).value = value }
    
    var pre_unmount: CPointer<CFunction<(CPointer<GMount>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> Unit>>>(168).value = value }
    
    var unmount_with_operation: CPointer<CFunction<(CPointer<GMount>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(176).value = value }
    
    var unmount_with_operation_finish: CPointer<CFunction<(CPointer<GMount>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(184).value = value }
    
    var eject_with_operation: CPointer<CFunction<(CPointer<GMount>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(192).value = value }
    
    var eject_with_operation_finish: CPointer<CFunction<(CPointer<GMount>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(200).value = value }
    
    var get_default_location: CPointer<CFunction<(CPointer<GMount>?) -> CPointer<GFile>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> CPointer<GFile>?>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> CPointer<GFile>?>>>(208).value = value }
    
    var get_sort_key: CPointer<CFunction<(CPointer<GMount>?) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> CPointer<gcharVar>?>>>(216).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> CPointer<gcharVar>?>>>(216).value = value }
    
    var get_symbolic_icon: CPointer<CFunction<(CPointer<GMount>?) -> CPointer<GIcon>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> CPointer<GIcon>?>>>(224).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> CPointer<GIcon>?>>>(224).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; }")
class _GMountOperationClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(256, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var ask_password: CPointer<CFunction<(CPointer<GMountOperation>?, CPointer<ByteVar>?, CPointer<ByteVar>?, CPointer<ByteVar>?, GAskPasswordFlags) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMountOperation>?, CPointer<ByteVar>?, CPointer<ByteVar>?, CPointer<ByteVar>?, GAskPasswordFlags) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMountOperation>?, CPointer<ByteVar>?, CPointer<ByteVar>?, CPointer<ByteVar>?, GAskPasswordFlags) -> Unit>>>(136).value = value }
    
    var ask_question: CPointer<CFunction<(CPointer<GMountOperation>?, CPointer<ByteVar>?, CArrayPointer<CPointerVar<ByteVar>>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMountOperation>?, CPointer<ByteVar>?, CArrayPointer<CPointerVar<ByteVar>>?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMountOperation>?, CPointer<ByteVar>?, CArrayPointer<CPointerVar<ByteVar>>?) -> Unit>>>(144).value = value }
    
    var reply: CPointer<CFunction<(CPointer<GMountOperation>?, GMountOperationResult) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMountOperation>?, GMountOperationResult) -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMountOperation>?, GMountOperationResult) -> Unit>>>(152).value = value }
    
    var aborted: CPointer<CFunction<(CPointer<GMountOperation>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMountOperation>?) -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMountOperation>?) -> Unit>>>(160).value = value }
    
    var show_processes: CPointer<CFunction<(CPointer<GMountOperation>?, CPointer<gcharVar>?, CPointer<GArray>?, CArrayPointer<CPointerVar<gcharVar>>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMountOperation>?, CPointer<gcharVar>?, CPointer<GArray>?, CArrayPointer<CPointerVar<gcharVar>>?) -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMountOperation>?, CPointer<gcharVar>?, CPointer<GArray>?, CArrayPointer<CPointerVar<gcharVar>>?) -> Unit>>>(168).value = value }
    
    var show_unmount_progress: CPointer<CFunction<(CPointer<GMountOperation>?, CPointer<gcharVar>?, gint64, gint64) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMountOperation>?, CPointer<gcharVar>?, gint64, gint64) -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMountOperation>?, CPointer<gcharVar>?, gint64, gint64) -> Unit>>>(176).value = value }
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(192).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(200).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(208).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(216).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(216).value = value }
    
    var _g_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(224).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(224).value = value }
    
    var _g_reserved7: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(232).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(232).value = value }
    
    var _g_reserved8: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(240).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(240).value = value }
    
    var _g_reserved9: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(248).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(248).value = value }
}

@CStruct("struct { void* p0; unsigned int p1; }")
class _GArray(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    var data: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(0).value
        set(value) { memberAt<CPointerVar<gcharVar>>(0).value = value }
    
    var len: guint
        get() = memberAt<guintVar>(8).value
        set(value) { memberAt<guintVar>(8).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; void* p23; void* p24; void* p25; }")
class _GVolumeMonitorClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(336, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var volume_added: CPointer<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GVolume>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GVolume>?) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GVolume>?) -> Unit>>>(136).value = value }
    
    var volume_removed: CPointer<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GVolume>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GVolume>?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GVolume>?) -> Unit>>>(144).value = value }
    
    var volume_changed: CPointer<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GVolume>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GVolume>?) -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GVolume>?) -> Unit>>>(152).value = value }
    
    var mount_added: CPointer<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GMount>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GMount>?) -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GMount>?) -> Unit>>>(160).value = value }
    
    var mount_removed: CPointer<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GMount>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GMount>?) -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GMount>?) -> Unit>>>(168).value = value }
    
    var mount_pre_unmount: CPointer<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GMount>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GMount>?) -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GMount>?) -> Unit>>>(176).value = value }
    
    var mount_changed: CPointer<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GMount>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GMount>?) -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GMount>?) -> Unit>>>(184).value = value }
    
    var drive_connected: CPointer<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GDrive>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GDrive>?) -> Unit>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GDrive>?) -> Unit>>>(192).value = value }
    
    var drive_disconnected: CPointer<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GDrive>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GDrive>?) -> Unit>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GDrive>?) -> Unit>>>(200).value = value }
    
    var drive_changed: CPointer<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GDrive>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GDrive>?) -> Unit>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GDrive>?) -> Unit>>>(208).value = value }
    
    var is_supported: CPointer<CFunction<() -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<() -> gboolean>>>(216).value
        set(value) { memberAt<CPointerVar<CFunction<() -> gboolean>>>(216).value = value }
    
    var get_connected_drives: CPointer<CFunction<(CPointer<GVolumeMonitor>?) -> CPointer<GList>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?) -> CPointer<GList>?>>>(224).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?) -> CPointer<GList>?>>>(224).value = value }
    
    var get_volumes: CPointer<CFunction<(CPointer<GVolumeMonitor>?) -> CPointer<GList>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?) -> CPointer<GList>?>>>(232).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?) -> CPointer<GList>?>>>(232).value = value }
    
    var get_mounts: CPointer<CFunction<(CPointer<GVolumeMonitor>?) -> CPointer<GList>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?) -> CPointer<GList>?>>>(240).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?) -> CPointer<GList>?>>>(240).value = value }
    
    var get_volume_for_uuid: CPointer<CFunction<(CPointer<GVolumeMonitor>?, CPointer<ByteVar>?) -> CPointer<GVolume>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<ByteVar>?) -> CPointer<GVolume>?>>>(248).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<ByteVar>?) -> CPointer<GVolume>?>>>(248).value = value }
    
    var get_mount_for_uuid: CPointer<CFunction<(CPointer<GVolumeMonitor>?, CPointer<ByteVar>?) -> CPointer<GMount>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<ByteVar>?) -> CPointer<GMount>?>>>(256).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<ByteVar>?) -> CPointer<GMount>?>>>(256).value = value }
    
    var adopt_orphan_mount: CPointer<CFunction<(CPointer<GMount>?, CPointer<GVolumeMonitor>?) -> CPointer<GVolume>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?, CPointer<GVolumeMonitor>?) -> CPointer<GVolume>?>>>(264).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?, CPointer<GVolumeMonitor>?) -> CPointer<GVolume>?>>>(264).value = value }
    
    var drive_eject_button: CPointer<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GDrive>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GDrive>?) -> Unit>>>(272).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GDrive>?) -> Unit>>>(272).value = value }
    
    var drive_stop_button: CPointer<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GDrive>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GDrive>?) -> Unit>>>(280).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GDrive>?) -> Unit>>>(280).value = value }
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(288).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(288).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(304).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(304).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(312).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(312).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(320).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(320).value = value }
    
    var _g_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; }")
class _GNativeVolumeMonitor(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GVolumeMonitor
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; void* p23; void* p24; void* p25; } p0; void* p1; }")
class _GNativeVolumeMonitorClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(344, 8)
    
    val parent_class: GVolumeMonitorClass
        get() = memberAt(0)
    
    var get_mount_for_mount_path: CPointer<CFunction<(CPointer<ByteVar>?, CPointer<GCancellable>?) -> CPointer<GMount>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<ByteVar>?, CPointer<GCancellable>?) -> CPointer<GMount>?>>>(336).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<ByteVar>?, CPointer<GCancellable>?) -> CPointer<GMount>?>>>(336).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; }")
class _GNetworkAddressClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(136, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GNetworkMonitorInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var network_changed: CPointer<CFunction<(CPointer<GNetworkMonitor>?, gboolean) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GNetworkMonitor>?, gboolean) -> Unit>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GNetworkMonitor>?, gboolean) -> Unit>>>(16).value = value }
    
    var can_reach: CPointer<CFunction<(CPointer<GNetworkMonitor>?, CPointer<GSocketConnectable>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GNetworkMonitor>?, CPointer<GSocketConnectable>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GNetworkMonitor>?, CPointer<GSocketConnectable>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(24).value = value }
    
    var can_reach_async: CPointer<CFunction<(CPointer<GNetworkMonitor>?, CPointer<GSocketConnectable>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GNetworkMonitor>?, CPointer<GSocketConnectable>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GNetworkMonitor>?, CPointer<GSocketConnectable>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(32).value = value }
    
    var can_reach_finish: CPointer<CFunction<(CPointer<GNetworkMonitor>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GNetworkMonitor>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GNetworkMonitor>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(40).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; }")
class _GNetworkServiceClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(136, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7[16]; }")
class _GPermissionClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(312, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var acquire: CPointer<CFunction<(CPointer<GPermission>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GPermission>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GPermission>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(136).value = value }
    
    var acquire_async: CPointer<CFunction<(CPointer<GPermission>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GPermission>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GPermission>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(144).value = value }
    
    var acquire_finish: CPointer<CFunction<(CPointer<GPermission>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GPermission>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GPermission>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(152).value = value }
    
    var release: CPointer<CFunction<(CPointer<GPermission>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GPermission>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GPermission>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(160).value = value }
    
    var release_async: CPointer<CFunction<(CPointer<GPermission>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GPermission>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GPermission>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(168).value = value }
    
    var release_finish: CPointer<CFunction<(CPointer<GPermission>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GPermission>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GPermission>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(176).value = value }
    
    val reserved: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(184)
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GPollableInputStreamInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var can_poll: CPointer<CFunction<(CPointer<GPollableInputStream>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GPollableInputStream>?) -> gboolean>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GPollableInputStream>?) -> gboolean>>>(16).value = value }
    
    var is_readable: CPointer<CFunction<(CPointer<GPollableInputStream>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GPollableInputStream>?) -> gboolean>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GPollableInputStream>?) -> gboolean>>>(24).value = value }
    
    var create_source: CPointer<CFunction<(CPointer<GPollableInputStream>?, CPointer<GCancellable>?) -> CPointer<GSource>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GPollableInputStream>?, CPointer<GCancellable>?) -> CPointer<GSource>?>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GPollableInputStream>?, CPointer<GCancellable>?) -> CPointer<GSource>?>>>(32).value = value }
    
    var read_nonblocking: CPointer<CFunction<(CPointer<GPollableInputStream>?, COpaquePointer?, gsize, CPointer<CPointerVar<GError>>?) -> gssize>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GPollableInputStream>?, COpaquePointer?, gsize, CPointer<CPointerVar<GError>>?) -> gssize>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GPollableInputStream>?, COpaquePointer?, gsize, CPointer<CPointerVar<GError>>?) -> gssize>>>(40).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GPollableOutputStreamInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var can_poll: CPointer<CFunction<(CPointer<GPollableOutputStream>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GPollableOutputStream>?) -> gboolean>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GPollableOutputStream>?) -> gboolean>>>(16).value = value }
    
    var is_writable: CPointer<CFunction<(CPointer<GPollableOutputStream>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GPollableOutputStream>?) -> gboolean>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GPollableOutputStream>?) -> gboolean>>>(24).value = value }
    
    var create_source: CPointer<CFunction<(CPointer<GPollableOutputStream>?, CPointer<GCancellable>?) -> CPointer<GSource>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GPollableOutputStream>?, CPointer<GCancellable>?) -> CPointer<GSource>?>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GPollableOutputStream>?, CPointer<GCancellable>?) -> CPointer<GSource>?>>>(32).value = value }
    
    var write_nonblocking: CPointer<CFunction<(CPointer<GPollableOutputStream>?, COpaquePointer?, gsize, CPointer<CPointerVar<GError>>?) -> gssize>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GPollableOutputStream>?, COpaquePointer?, gsize, CPointer<CPointerVar<GError>>?) -> gssize>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GPollableOutputStream>?, COpaquePointer?, gsize, CPointer<CPointerVar<GError>>?) -> gssize>>>(40).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GProxyInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var connect: CPointer<CFunction<(CPointer<GProxy>?, CPointer<GIOStream>?, CPointer<GProxyAddress>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GIOStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GProxy>?, CPointer<GIOStream>?, CPointer<GProxyAddress>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GIOStream>?>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GProxy>?, CPointer<GIOStream>?, CPointer<GProxyAddress>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GIOStream>?>>>(16).value = value }
    
    var connect_async: CPointer<CFunction<(CPointer<GProxy>?, CPointer<GIOStream>?, CPointer<GProxyAddress>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GProxy>?, CPointer<GIOStream>?, CPointer<GProxyAddress>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GProxy>?, CPointer<GIOStream>?, CPointer<GProxyAddress>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(24).value = value }
    
    var connect_finish: CPointer<CFunction<(CPointer<GProxy>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GIOStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GProxy>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GIOStream>?>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GProxy>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GIOStream>?>>>(32).value = value }
    
    var supports_hostname: CPointer<CFunction<(CPointer<GProxy>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GProxy>?) -> gboolean>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GProxy>?) -> gboolean>>>(40).value = value }
}

@CStruct("struct { struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; } p0; } p0; }")
class _GProxyAddressClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(160, 8)
    
    val parent_class: GInetSocketAddressClass
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; }")
class _GSocketAddressEnumeratorClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(160, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var next: CPointer<CFunction<(CPointer<GSocketAddressEnumerator>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GSocketAddress>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSocketAddressEnumerator>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GSocketAddress>?>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSocketAddressEnumerator>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GSocketAddress>?>>>(136).value = value }
    
    var next_async: CPointer<CFunction<(CPointer<GSocketAddressEnumerator>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSocketAddressEnumerator>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSocketAddressEnumerator>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(144).value = value }
    
    var next_finish: CPointer<CFunction<(CPointer<GSocketAddressEnumerator>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GSocketAddress>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSocketAddressEnumerator>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GSocketAddress>?>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSocketAddressEnumerator>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GSocketAddress>?>>>(152).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; }")
class _GProxyAddressEnumeratorClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(216, 8)
    
    val parent_class: GSocketAddressEnumeratorClass
        get() = memberAt(0)
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(192).value = value }
    
    var _g_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(200).value = value }
    
    var _g_reserved7: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(208).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GProxyResolverInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var is_supported: CPointer<CFunction<(CPointer<GProxyResolver>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GProxyResolver>?) -> gboolean>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GProxyResolver>?) -> gboolean>>>(16).value = value }
    
    var lookup: CPointer<CFunction<(CPointer<GProxyResolver>?, CPointer<gcharVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<CPointerVar<gcharVar>>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GProxyResolver>?, CPointer<gcharVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<CPointerVar<gcharVar>>?>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GProxyResolver>?, CPointer<gcharVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<CPointerVar<gcharVar>>?>>>(24).value = value }
    
    var lookup_async: CPointer<CFunction<(CPointer<GProxyResolver>?, CPointer<gcharVar>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GProxyResolver>?, CPointer<gcharVar>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GProxyResolver>?, CPointer<gcharVar>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(32).value = value }
    
    var lookup_finish: CPointer<CFunction<(CPointer<GProxyResolver>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<CPointerVar<gcharVar>>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GProxyResolver>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<CPointerVar<gcharVar>>?>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GProxyResolver>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<CPointerVar<gcharVar>>?>>>(40).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; }")
class _GResolverClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(264, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var reload: CPointer<CFunction<(CPointer<GResolver>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GResolver>?) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GResolver>?) -> Unit>>>(136).value = value }
    
    var lookup_by_name: CPointer<CFunction<(CPointer<GResolver>?, CPointer<gcharVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<gcharVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<gcharVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>>(144).value = value }
    
    var lookup_by_name_async: CPointer<CFunction<(CPointer<GResolver>?, CPointer<gcharVar>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<gcharVar>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<gcharVar>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(152).value = value }
    
    var lookup_by_name_finish: CPointer<CFunction<(CPointer<GResolver>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>>(160).value = value }
    
    var lookup_by_address: CPointer<CFunction<(CPointer<GResolver>?, CPointer<GInetAddress>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<GInetAddress>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<gcharVar>?>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<GInetAddress>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<gcharVar>?>>>(168).value = value }
    
    var lookup_by_address_async: CPointer<CFunction<(CPointer<GResolver>?, CPointer<GInetAddress>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<GInetAddress>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<GInetAddress>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(176).value = value }
    
    var lookup_by_address_finish: CPointer<CFunction<(CPointer<GResolver>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<gcharVar>?>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<gcharVar>?>>>(184).value = value }
    
    var lookup_service: CPointer<CFunction<(CPointer<GResolver>?, CPointer<gcharVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<gcharVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<gcharVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>>(192).value = value }
    
    var lookup_service_async: CPointer<CFunction<(CPointer<GResolver>?, CPointer<gcharVar>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<gcharVar>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<gcharVar>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(200).value = value }
    
    var lookup_service_finish: CPointer<CFunction<(CPointer<GResolver>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>>(208).value = value }
    
    var lookup_records: CPointer<CFunction<(CPointer<GResolver>?, CPointer<gcharVar>?, GResolverRecordType, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<gcharVar>?, GResolverRecordType, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>>(216).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<gcharVar>?, GResolverRecordType, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>>(216).value = value }
    
    var lookup_records_async: CPointer<CFunction<(CPointer<GResolver>?, CPointer<gcharVar>?, GResolverRecordType, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<gcharVar>?, GResolverRecordType, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(224).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<gcharVar>?, GResolverRecordType, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(224).value = value }
    
    var lookup_records_finish: CPointer<CFunction<(CPointer<GResolver>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>>(232).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>>(232).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(240).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(240).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(248).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(248).value = value }
    
    var _g_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(256).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(256).value = value }
}

@CStruct("struct { void* p0; unsigned long p1; void* p2; void* p3; void* p4; }")
class _GStaticResource(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    var data: CPointer<guint8Var>?
        get() = memberAt<CPointerVar<guint8Var>>(0).value
        set(value) { memberAt<CPointerVar<guint8Var>>(0).value = value }
    
    var data_len: gsize
        get() = memberAt<gsizeVar>(8).value
        set(value) { memberAt<gsizeVar>(8).value = value }
    
    var resource: CPointer<GResource>?
        get() = memberAt<CPointerVar<GResource>>(16).value
        set(value) { memberAt<CPointerVar<GResource>>(16).value = value }
    
    var next: CPointer<GStaticResource>?
        get() = memberAt<CPointerVar<GStaticResource>>(24).value
        set(value) { memberAt<CPointerVar<GStaticResource>>(24).value = value }
    
    var padding: gpointer?
        get() = memberAt<gpointerVar>(32).value
        set(value) { memberAt<gpointerVar>(32).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GSeekableIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var tell: CPointer<CFunction<(CPointer<GSeekable>?) -> goffset>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSeekable>?) -> goffset>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSeekable>?) -> goffset>>>(16).value = value }
    
    var can_seek: CPointer<CFunction<(CPointer<GSeekable>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSeekable>?) -> gboolean>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSeekable>?) -> gboolean>>>(24).value = value }
    
    var seek: CPointer<CFunction<(CPointer<GSeekable>?, goffset, GSeekType, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSeekable>?, goffset, GSeekType, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSeekable>?, goffset, GSeekType, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(32).value = value }
    
    var can_truncate: CPointer<CFunction<(CPointer<GSeekable>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSeekable>?) -> gboolean>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSeekable>?) -> gboolean>>>(40).value = value }
    
    var truncate_fn: CPointer<CFunction<(CPointer<GSeekable>?, goffset, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSeekable>?, goffset, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSeekable>?, goffset, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(48).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5[20]; }")
class _GSettingsClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(328, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var writable_changed: CPointer<CFunction<(CPointer<GSettings>?, CPointer<gcharVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSettings>?, CPointer<gcharVar>?) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSettings>?, CPointer<gcharVar>?) -> Unit>>>(136).value = value }
    
    var changed: CPointer<CFunction<(CPointer<GSettings>?, CPointer<gcharVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSettings>?, CPointer<gcharVar>?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSettings>?, CPointer<gcharVar>?) -> Unit>>>(144).value = value }
    
    var writable_change_event: CPointer<CFunction<(CPointer<GSettings>?, GQuark) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSettings>?, GQuark) -> gboolean>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSettings>?, GQuark) -> gboolean>>>(152).value = value }
    
    var change_event: CPointer<CFunction<(CPointer<GSettings>?, CPointer<GQuarkVar>?, gint) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSettings>?, CPointer<GQuarkVar>?, gint) -> gboolean>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSettings>?, CPointer<GQuarkVar>?, gint) -> gboolean>>>(160).value = value }
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(168)
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1[12]; }")
class _GSimpleActionGroupClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(232, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(136)
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GSocketClientClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(176, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var event: CPointer<CFunction<(CPointer<GSocketClient>?, GSocketClientEvent, CPointer<GSocketConnectable>?, CPointer<GIOStream>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSocketClient>?, GSocketClientEvent, CPointer<GSocketConnectable>?, CPointer<GIOStream>?) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSocketClient>?, GSocketClientEvent, CPointer<GSocketConnectable>?, CPointer<GIOStream>?) -> Unit>>>(136).value = value }
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; }")
class _GSocketConnectableIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var enumerate: CPointer<CFunction<(CPointer<GSocketConnectable>?) -> CPointer<GSocketAddressEnumerator>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSocketConnectable>?) -> CPointer<GSocketAddressEnumerator>?>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSocketConnectable>?) -> CPointer<GSocketAddressEnumerator>?>>>(16).value = value }
    
    var proxy_enumerate: CPointer<CFunction<(CPointer<GSocketConnectable>?) -> CPointer<GSocketAddressEnumerator>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSocketConnectable>?) -> CPointer<GSocketAddressEnumerator>?>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSocketConnectable>?) -> CPointer<GSocketAddressEnumerator>?>>>(24).value = value }
    
    var to_string: CPointer<CFunction<(CPointer<GSocketConnectable>?) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSocketConnectable>?) -> CPointer<gcharVar>?>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSocketConnectable>?) -> CPointer<gcharVar>?>>>(32).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; }")
class _GSocketClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(216, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(136).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value = value }
    
    var _g_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value = value }
    
    var _g_reserved7: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value = value }
    
    var _g_reserved8: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(192).value = value }
    
    var _g_reserved9: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(200).value = value }
    
    var _g_reserved10: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(208).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; }")
class _GSocketConnectionClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(304, 8)
    
    val parent_class: GIOStreamClass
        get() = memberAt(0)
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(256).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(256).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(280).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(280).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(288).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(288).value = value }
    
    var _g_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; }")
class _GSocketControlMessageClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(216, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var get_size: CPointer<CFunction<(CPointer<GSocketControlMessage>?) -> gsize>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSocketControlMessage>?) -> gsize>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSocketControlMessage>?) -> gsize>>>(136).value = value }
    
    var get_level: CPointer<CFunction<(CPointer<GSocketControlMessage>?) -> Int>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSocketControlMessage>?) -> Int>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSocketControlMessage>?) -> Int>>>(144).value = value }
    
    var get_type: CPointer<CFunction<(CPointer<GSocketControlMessage>?) -> Int>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSocketControlMessage>?) -> Int>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSocketControlMessage>?) -> Int>>>(152).value = value }
    
    var serialize: CPointer<CFunction<(CPointer<GSocketControlMessage>?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSocketControlMessage>?, gpointer?) -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSocketControlMessage>?, gpointer?) -> Unit>>>(160).value = value }
    
    var deserialize: CPointer<CFunction<(Int, Int, gsize, gpointer?) -> CPointer<GSocketControlMessage>?>>?
        get() = memberAt<CPointerVar<CFunction<(Int, Int, gsize, gpointer?) -> CPointer<GSocketControlMessage>?>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(Int, Int, gsize, gpointer?) -> CPointer<GSocketControlMessage>?>>>(168).value = value }
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(192).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(200).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(208).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; }")
class _GSocketListenerClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(192, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var changed: CPointer<CFunction<(CPointer<GSocketListener>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSocketListener>?) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSocketListener>?) -> Unit>>>(136).value = value }
    
    var event: CPointer<CFunction<(CPointer<GSocketListener>?, GSocketListenerEvent, CPointer<GSocket>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSocketListener>?, GSocketListenerEvent, CPointer<GSocket>?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSocketListener>?, GSocketListenerEvent, CPointer<GSocket>?) -> Unit>>>(144).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value = value }
    
    var _g_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; }")
class _GSocketServiceClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(248, 8)
    
    val parent_class: GSocketListenerClass
        get() = memberAt(0)
    
    var incoming: CPointer<CFunction<(CPointer<GSocketService>?, CPointer<GSocketConnection>?, CPointer<GObject>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSocketService>?, CPointer<GSocketConnection>?, CPointer<GObject>?) -> gboolean>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSocketService>?, CPointer<GSocketConnection>?, CPointer<GObject>?) -> gboolean>>>(192).value = value }
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(200).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(208).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(216).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(216).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(224).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(224).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(232).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(232).value = value }
    
    var _g_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(240).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(240).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GSimpleProxyResolver(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GSimpleProxyResolverPrivate>?
        get() = memberAt<CPointerVar<GSimpleProxyResolverPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GSimpleProxyResolverPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GSimpleProxyResolverClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(176, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(136).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value = value }
}

@CStruct("struct { struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; } p0; }")
class _GTcpConnectionClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(304, 8)
    
    val parent_class: GSocketConnectionClass
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; } p0; } p0; }")
class _GTcpWrapperConnectionClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(304, 8)
    
    val parent_class: GTcpConnectionClass
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; }")
class _GThreadedSocketServiceClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(296, 8)
    
    val parent_class: GSocketServiceClass
        get() = memberAt(0)
    
    var run: CPointer<CFunction<(CPointer<GThreadedSocketService>?, CPointer<GSocketConnection>?, CPointer<GObject>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GThreadedSocketService>?, CPointer<GSocketConnection>?, CPointer<GObject>?) -> gboolean>>>(248).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GThreadedSocketService>?, CPointer<GSocketConnection>?, CPointer<GObject>?) -> gboolean>>>(248).value = value }
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(256).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(256).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(280).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(280).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(288).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(288).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; }")
class _GTlsBackendInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(88, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var supports_tls: CPointer<CFunction<(CPointer<GTlsBackend>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsBackend>?) -> gboolean>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsBackend>?) -> gboolean>>>(16).value = value }
    
    var get_certificate_type: CPointer<CFunction<() -> GType>>?
        get() = memberAt<CPointerVar<CFunction<() -> GType>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<() -> GType>>>(24).value = value }
    
    var get_client_connection_type: CPointer<CFunction<() -> GType>>?
        get() = memberAt<CPointerVar<CFunction<() -> GType>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<() -> GType>>>(32).value = value }
    
    var get_server_connection_type: CPointer<CFunction<() -> GType>>?
        get() = memberAt<CPointerVar<CFunction<() -> GType>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<() -> GType>>>(40).value = value }
    
    var get_file_database_type: CPointer<CFunction<() -> GType>>?
        get() = memberAt<CPointerVar<CFunction<() -> GType>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<() -> GType>>>(48).value = value }
    
    var get_default_database: CPointer<CFunction<(CPointer<GTlsBackend>?) -> CPointer<GTlsDatabase>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsBackend>?) -> CPointer<GTlsDatabase>?>>>(56).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsBackend>?) -> CPointer<GTlsDatabase>?>>>(56).value = value }
    
    var supports_dtls: CPointer<CFunction<(CPointer<GTlsBackend>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsBackend>?) -> gboolean>>>(64).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsBackend>?) -> gboolean>>>(64).value = value }
    
    var get_dtls_client_connection_type: CPointer<CFunction<() -> GType>>?
        get() = memberAt<CPointerVar<CFunction<() -> GType>>>(72).value
        set(value) { memberAt<CPointerVar<CFunction<() -> GType>>>(72).value = value }
    
    var get_dtls_server_connection_type: CPointer<CFunction<() -> GType>>?
        get() = memberAt<CPointerVar<CFunction<() -> GType>>>(80).value
        set(value) { memberAt<CPointerVar<CFunction<() -> GType>>>(80).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2[8]; }")
class _GTlsCertificateClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(208, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var verify: CPointer<CFunction<(CPointer<GTlsCertificate>?, CPointer<GSocketConnectable>?, CPointer<GTlsCertificate>?) -> GTlsCertificateFlags>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsCertificate>?, CPointer<GSocketConnectable>?, CPointer<GTlsCertificate>?) -> GTlsCertificateFlags>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsCertificate>?, CPointer<GSocketConnectable>?, CPointer<GTlsCertificate>?) -> GTlsCertificateFlags>>>(136).value = value }
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(144)
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; } p0; void* p1; void* p2; void* p3; void* p4; void* p5[8]; }")
class _GTlsConnectionClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(352, 8)
    
    val parent_class: GIOStreamClass
        get() = memberAt(0)
    
    var accept_certificate: CPointer<CFunction<(CPointer<GTlsConnection>?, CPointer<GTlsCertificate>?, GTlsCertificateFlags) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsConnection>?, CPointer<GTlsCertificate>?, GTlsCertificateFlags) -> gboolean>>>(256).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsConnection>?, CPointer<GTlsCertificate>?, GTlsCertificateFlags) -> gboolean>>>(256).value = value }
    
    var handshake: CPointer<CFunction<(CPointer<GTlsConnection>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsConnection>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(264).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsConnection>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(264).value = value }
    
    var handshake_async: CPointer<CFunction<(CPointer<GTlsConnection>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsConnection>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(272).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsConnection>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(272).value = value }
    
    var handshake_finish: CPointer<CFunction<(CPointer<GTlsConnection>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsConnection>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(280).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsConnection>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(280).value = value }
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(288)
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; }")
class _GTlsClientConnectionInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var copy_session_state: CPointer<CFunction<(CPointer<GTlsClientConnection>?, CPointer<GTlsClientConnection>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsClientConnection>?, CPointer<GTlsClientConnection>?) -> Unit>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsClientConnection>?, CPointer<GTlsClientConnection>?) -> Unit>>>(16).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14[16]; }")
class _GTlsDatabaseClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(368, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var verify_chain: CPointer<CFunction<(CPointer<GTlsDatabase>?, CPointer<GTlsCertificate>?, CPointer<gcharVar>?, CPointer<GSocketConnectable>?, CPointer<GTlsInteraction>?, GTlsDatabaseVerifyFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> GTlsCertificateFlags>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GTlsCertificate>?, CPointer<gcharVar>?, CPointer<GSocketConnectable>?, CPointer<GTlsInteraction>?, GTlsDatabaseVerifyFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> GTlsCertificateFlags>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GTlsCertificate>?, CPointer<gcharVar>?, CPointer<GSocketConnectable>?, CPointer<GTlsInteraction>?, GTlsDatabaseVerifyFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> GTlsCertificateFlags>>>(136).value = value }
    
    var verify_chain_async: CPointer<CFunction<(CPointer<GTlsDatabase>?, CPointer<GTlsCertificate>?, CPointer<gcharVar>?, CPointer<GSocketConnectable>?, CPointer<GTlsInteraction>?, GTlsDatabaseVerifyFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GTlsCertificate>?, CPointer<gcharVar>?, CPointer<GSocketConnectable>?, CPointer<GTlsInteraction>?, GTlsDatabaseVerifyFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GTlsCertificate>?, CPointer<gcharVar>?, CPointer<GSocketConnectable>?, CPointer<GTlsInteraction>?, GTlsDatabaseVerifyFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(144).value = value }
    
    var verify_chain_finish: CPointer<CFunction<(CPointer<GTlsDatabase>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> GTlsCertificateFlags>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> GTlsCertificateFlags>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> GTlsCertificateFlags>>>(152).value = value }
    
    var create_certificate_handle: CPointer<CFunction<(CPointer<GTlsDatabase>?, CPointer<GTlsCertificate>?) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GTlsCertificate>?) -> CPointer<gcharVar>?>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GTlsCertificate>?) -> CPointer<gcharVar>?>>>(160).value = value }
    
    var lookup_certificate_for_handle: CPointer<CFunction<(CPointer<GTlsDatabase>?, CPointer<gcharVar>?, CPointer<GTlsInteraction>?, GTlsDatabaseLookupFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GTlsCertificate>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<gcharVar>?, CPointer<GTlsInteraction>?, GTlsDatabaseLookupFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GTlsCertificate>?>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<gcharVar>?, CPointer<GTlsInteraction>?, GTlsDatabaseLookupFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GTlsCertificate>?>>>(168).value = value }
    
    var lookup_certificate_for_handle_async: CPointer<CFunction<(CPointer<GTlsDatabase>?, CPointer<gcharVar>?, CPointer<GTlsInteraction>?, GTlsDatabaseLookupFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<gcharVar>?, CPointer<GTlsInteraction>?, GTlsDatabaseLookupFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<gcharVar>?, CPointer<GTlsInteraction>?, GTlsDatabaseLookupFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(176).value = value }
    
    var lookup_certificate_for_handle_finish: CPointer<CFunction<(CPointer<GTlsDatabase>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GTlsCertificate>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GTlsCertificate>?>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GTlsCertificate>?>>>(184).value = value }
    
    var lookup_certificate_issuer: CPointer<CFunction<(CPointer<GTlsDatabase>?, CPointer<GTlsCertificate>?, CPointer<GTlsInteraction>?, GTlsDatabaseLookupFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GTlsCertificate>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GTlsCertificate>?, CPointer<GTlsInteraction>?, GTlsDatabaseLookupFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GTlsCertificate>?>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GTlsCertificate>?, CPointer<GTlsInteraction>?, GTlsDatabaseLookupFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GTlsCertificate>?>>>(192).value = value }
    
    var lookup_certificate_issuer_async: CPointer<CFunction<(CPointer<GTlsDatabase>?, CPointer<GTlsCertificate>?, CPointer<GTlsInteraction>?, GTlsDatabaseLookupFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GTlsCertificate>?, CPointer<GTlsInteraction>?, GTlsDatabaseLookupFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GTlsCertificate>?, CPointer<GTlsInteraction>?, GTlsDatabaseLookupFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(200).value = value }
    
    var lookup_certificate_issuer_finish: CPointer<CFunction<(CPointer<GTlsDatabase>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GTlsCertificate>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GTlsCertificate>?>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GTlsCertificate>?>>>(208).value = value }
    
    var lookup_certificates_issued_by: CPointer<CFunction<(CPointer<GTlsDatabase>?, CPointer<GByteArray>?, CPointer<GTlsInteraction>?, GTlsDatabaseLookupFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GByteArray>?, CPointer<GTlsInteraction>?, GTlsDatabaseLookupFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>>(216).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GByteArray>?, CPointer<GTlsInteraction>?, GTlsDatabaseLookupFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>>(216).value = value }
    
    var lookup_certificates_issued_by_async: CPointer<CFunction<(CPointer<GTlsDatabase>?, CPointer<GByteArray>?, CPointer<GTlsInteraction>?, GTlsDatabaseLookupFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GByteArray>?, CPointer<GTlsInteraction>?, GTlsDatabaseLookupFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(224).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GByteArray>?, CPointer<GTlsInteraction>?, GTlsDatabaseLookupFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(224).value = value }
    
    var lookup_certificates_issued_by_finish: CPointer<CFunction<(CPointer<GTlsDatabase>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>>(232).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>>(232).value = value }
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(240)
}

@CStruct("struct { void* p0; unsigned int p1; }")
class _GByteArray(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    var data: CPointer<guint8Var>?
        get() = memberAt<CPointerVar<guint8Var>>(0).value
        set(value) { memberAt<CPointerVar<guint8Var>>(0).value = value }
    
    var len: guint
        get() = memberAt<guintVar>(8).value
        set(value) { memberAt<guintVar>(8).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1[8]; }")
class _GTlsFileDatabaseInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(80, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(16)
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7[21]; }")
class _GTlsInteractionClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(352, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var ask_password: CPointer<CFunction<(CPointer<GTlsInteraction>?, CPointer<GTlsPassword>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> GTlsInteractionResult>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsInteraction>?, CPointer<GTlsPassword>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> GTlsInteractionResult>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsInteraction>?, CPointer<GTlsPassword>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> GTlsInteractionResult>>>(136).value = value }
    
    var ask_password_async: CPointer<CFunction<(CPointer<GTlsInteraction>?, CPointer<GTlsPassword>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsInteraction>?, CPointer<GTlsPassword>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsInteraction>?, CPointer<GTlsPassword>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(144).value = value }
    
    var ask_password_finish: CPointer<CFunction<(CPointer<GTlsInteraction>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> GTlsInteractionResult>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsInteraction>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> GTlsInteractionResult>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsInteraction>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> GTlsInteractionResult>>>(152).value = value }
    
    var request_certificate: CPointer<CFunction<(CPointer<GTlsInteraction>?, CPointer<GTlsConnection>?, GTlsCertificateRequestFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> GTlsInteractionResult>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsInteraction>?, CPointer<GTlsConnection>?, GTlsCertificateRequestFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> GTlsInteractionResult>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsInteraction>?, CPointer<GTlsConnection>?, GTlsCertificateRequestFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> GTlsInteractionResult>>>(160).value = value }
    
    var request_certificate_async: CPointer<CFunction<(CPointer<GTlsInteraction>?, CPointer<GTlsConnection>?, GTlsCertificateRequestFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsInteraction>?, CPointer<GTlsConnection>?, GTlsCertificateRequestFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsInteraction>?, CPointer<GTlsConnection>?, GTlsCertificateRequestFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(168).value = value }
    
    var request_certificate_finish: CPointer<CFunction<(CPointer<GTlsInteraction>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> GTlsInteractionResult>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsInteraction>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> GTlsInteractionResult>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsInteraction>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> GTlsInteractionResult>>>(176).value = value }
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(184)
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; }")
class _GTlsServerConnectionInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4[4]; }")
class _GTlsPasswordClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(192, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var get_value: CPointer<CFunction<(CPointer<GTlsPassword>?, CPointer<gsizeVar>?) -> CPointer<gucharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsPassword>?, CPointer<gsizeVar>?) -> CPointer<gucharVar>?>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsPassword>?, CPointer<gsizeVar>?) -> CPointer<gucharVar>?>>>(136).value = value }
    
    var set_value: CPointer<CFunction<(CPointer<GTlsPassword>?, CPointer<gucharVar>?, gssize, GDestroyNotify?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsPassword>?, CPointer<gucharVar>?, gssize, GDestroyNotify?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsPassword>?, CPointer<gucharVar>?, gssize, GDestroyNotify?) -> Unit>>>(144).value = value }
    
    var get_default_warning: CPointer<CFunction<(CPointer<GTlsPassword>?) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsPassword>?) -> CPointer<gcharVar>?>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsPassword>?) -> CPointer<gcharVar>?>>>(152).value = value }
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(160)
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; }")
class _GVfsClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(272, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var is_active: CPointer<CFunction<(CPointer<GVfs>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVfs>?) -> gboolean>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVfs>?) -> gboolean>>>(136).value = value }
    
    var get_file_for_path: CPointer<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?) -> CPointer<GFile>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?) -> CPointer<GFile>?>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?) -> CPointer<GFile>?>>>(144).value = value }
    
    var get_file_for_uri: CPointer<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?) -> CPointer<GFile>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?) -> CPointer<GFile>?>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?) -> CPointer<GFile>?>>>(152).value = value }
    
    var get_supported_uri_schemes: CPointer<CFunction<(CPointer<GVfs>?) -> CPointer<CPointerVar<gcharVar>>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVfs>?) -> CPointer<CPointerVar<gcharVar>>?>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVfs>?) -> CPointer<CPointerVar<gcharVar>>?>>>(160).value = value }
    
    var parse_name: CPointer<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?) -> CPointer<GFile>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?) -> CPointer<GFile>?>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?) -> CPointer<GFile>?>>>(168).value = value }
    
    var local_file_add_info: CPointer<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?, guint64, CPointer<GFileAttributeMatcher>?, CPointer<GFileInfo>?, CPointer<GCancellable>?, CPointer<gpointerVar>?, CPointer<GDestroyNotifyVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?, guint64, CPointer<GFileAttributeMatcher>?, CPointer<GFileInfo>?, CPointer<GCancellable>?, CPointer<gpointerVar>?, CPointer<GDestroyNotifyVar>?) -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?, guint64, CPointer<GFileAttributeMatcher>?, CPointer<GFileInfo>?, CPointer<GCancellable>?, CPointer<gpointerVar>?, CPointer<GDestroyNotifyVar>?) -> Unit>>>(176).value = value }
    
    var add_writable_namespaces: CPointer<CFunction<(CPointer<GVfs>?, CPointer<GFileAttributeInfoList>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVfs>?, CPointer<GFileAttributeInfoList>?) -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVfs>?, CPointer<GFileAttributeInfoList>?) -> Unit>>>(184).value = value }
    
    var local_file_set_attributes: CPointer<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?, CPointer<GFileInfo>?, GFileQueryInfoFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?, CPointer<GFileInfo>?, GFileQueryInfoFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?, CPointer<GFileInfo>?, GFileQueryInfoFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(192).value = value }
    
    var local_file_removed: CPointer<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?) -> Unit>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?) -> Unit>>>(200).value = value }
    
    var local_file_moved: CPointer<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?, CPointer<ByteVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?, CPointer<ByteVar>?) -> Unit>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?, CPointer<ByteVar>?) -> Unit>>>(208).value = value }
    
    var deserialize_icon: CPointer<CFunction<(CPointer<GVfs>?, CPointer<GVariant>?) -> CPointer<GIcon>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVfs>?, CPointer<GVariant>?) -> CPointer<GIcon>?>>>(216).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVfs>?, CPointer<GVariant>?) -> CPointer<GIcon>?>>>(216).value = value }
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(224).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(224).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(232).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(232).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(240).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(240).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(248).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(248).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(256).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(256).value = value }
    
    var _g_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; }")
class _GVolumeIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(184, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var changed: CPointer<CFunction<(CPointer<GVolume>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> Unit>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> Unit>>>(16).value = value }
    
    var removed: CPointer<CFunction<(CPointer<GVolume>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> Unit>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> Unit>>>(24).value = value }
    
    var get_name: CPointer<CFunction<(CPointer<GVolume>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> CPointer<ByteVar>?>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> CPointer<ByteVar>?>>>(32).value = value }
    
    var get_icon: CPointer<CFunction<(CPointer<GVolume>?) -> CPointer<GIcon>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> CPointer<GIcon>?>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> CPointer<GIcon>?>>>(40).value = value }
    
    var get_uuid: CPointer<CFunction<(CPointer<GVolume>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> CPointer<ByteVar>?>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> CPointer<ByteVar>?>>>(48).value = value }
    
    var get_drive: CPointer<CFunction<(CPointer<GVolume>?) -> CPointer<GDrive>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> CPointer<GDrive>?>>>(56).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> CPointer<GDrive>?>>>(56).value = value }
    
    var get_mount: CPointer<CFunction<(CPointer<GVolume>?) -> CPointer<GMount>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> CPointer<GMount>?>>>(64).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> CPointer<GMount>?>>>(64).value = value }
    
    var can_mount: CPointer<CFunction<(CPointer<GVolume>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> gboolean>>>(72).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> gboolean>>>(72).value = value }
    
    var can_eject: CPointer<CFunction<(CPointer<GVolume>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> gboolean>>>(80).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> gboolean>>>(80).value = value }
    
    var mount_fn: CPointer<CFunction<(CPointer<GVolume>?, GMountMountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?, GMountMountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(88).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?, GMountMountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(88).value = value }
    
    var mount_finish: CPointer<CFunction<(CPointer<GVolume>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(96).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(96).value = value }
    
    var eject: CPointer<CFunction<(CPointer<GVolume>?, GMountUnmountFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?, GMountUnmountFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(104).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?, GMountUnmountFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(104).value = value }
    
    var eject_finish: CPointer<CFunction<(CPointer<GVolume>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(112).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(112).value = value }
    
    var get_identifier: CPointer<CFunction<(CPointer<GVolume>?, CPointer<ByteVar>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?, CPointer<ByteVar>?) -> CPointer<ByteVar>?>>>(120).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?, CPointer<ByteVar>?) -> CPointer<ByteVar>?>>>(120).value = value }
    
    var enumerate_identifiers: CPointer<CFunction<(CPointer<GVolume>?) -> CPointer<CPointerVar<ByteVar>>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> CPointer<CPointerVar<ByteVar>>?>>>(128).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> CPointer<CPointerVar<ByteVar>>?>>>(128).value = value }
    
    var should_automount: CPointer<CFunction<(CPointer<GVolume>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> gboolean>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> gboolean>>>(136).value = value }
    
    var get_activation_root: CPointer<CFunction<(CPointer<GVolume>?) -> CPointer<GFile>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> CPointer<GFile>?>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> CPointer<GFile>?>>>(144).value = value }
    
    var eject_with_operation: CPointer<CFunction<(CPointer<GVolume>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(152).value = value }
    
    var eject_with_operation_finish: CPointer<CFunction<(CPointer<GVolume>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(160).value = value }
    
    var get_sort_key: CPointer<CFunction<(CPointer<GVolume>?) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> CPointer<gcharVar>?>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> CPointer<gcharVar>?>>>(168).value = value }
    
    var get_symbolic_icon: CPointer<CFunction<(CPointer<GVolume>?) -> CPointer<GIcon>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> CPointer<GIcon>?>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> CPointer<GIcon>?>>>(176).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; }")
class _GZlibCompressorClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(136, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; }")
class _GZlibDecompressorClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(136, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GDBusInterfaceIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val parent_iface: GTypeInterface
        get() = memberAt(0)
    
    var get_info: CPointer<CFunction<(CPointer<GDBusInterface>?) -> CPointer<GDBusInterfaceInfo>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusInterface>?) -> CPointer<GDBusInterfaceInfo>?>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusInterface>?) -> CPointer<GDBusInterfaceInfo>?>>>(16).value = value }
    
    var get_object: CPointer<CFunction<(CPointer<GDBusInterface>?) -> CPointer<GDBusObject>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusInterface>?) -> CPointer<GDBusObject>?>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusInterface>?) -> CPointer<GDBusObject>?>>>(24).value = value }
    
    var set_object: CPointer<CFunction<(CPointer<GDBusInterface>?, CPointer<GDBusObject>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusInterface>?, CPointer<GDBusObject>?) -> Unit>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusInterface>?, CPointer<GDBusObject>?) -> Unit>>>(32).value = value }
    
    var dup_object: CPointer<CFunction<(CPointer<GDBusInterface>?) -> CPointer<GDBusObject>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusInterface>?) -> CPointer<GDBusObject>?>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusInterface>?) -> CPointer<GDBusObject>?>>>(40).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5[8]; void* p6; void* p7[8]; }")
class _GDBusInterfaceSkeletonClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(304, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var get_info: CPointer<CFunction<(CPointer<GDBusInterfaceSkeleton>?) -> CPointer<GDBusInterfaceInfo>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusInterfaceSkeleton>?) -> CPointer<GDBusInterfaceInfo>?>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusInterfaceSkeleton>?) -> CPointer<GDBusInterfaceInfo>?>>>(136).value = value }
    
    var get_vtable: CPointer<CFunction<(CPointer<GDBusInterfaceSkeleton>?) -> CPointer<GDBusInterfaceVTable>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusInterfaceSkeleton>?) -> CPointer<GDBusInterfaceVTable>?>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusInterfaceSkeleton>?) -> CPointer<GDBusInterfaceVTable>?>>>(144).value = value }
    
    var get_properties: CPointer<CFunction<(CPointer<GDBusInterfaceSkeleton>?) -> CPointer<GVariant>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusInterfaceSkeleton>?) -> CPointer<GVariant>?>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusInterfaceSkeleton>?) -> CPointer<GVariant>?>>>(152).value = value }
    
    var flush: CPointer<CFunction<(CPointer<GDBusInterfaceSkeleton>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusInterfaceSkeleton>?) -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusInterfaceSkeleton>?) -> Unit>>>(160).value = value }
    
    val vfunc_padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(168)
    
    var g_authorize_method: CPointer<CFunction<(CPointer<GDBusInterfaceSkeleton>?, CPointer<GDBusMethodInvocation>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusInterfaceSkeleton>?, CPointer<GDBusMethodInvocation>?) -> gboolean>>>(232).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusInterfaceSkeleton>?, CPointer<GDBusMethodInvocation>?) -> gboolean>>>(232).value = value }
    
    val signal_padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(240)
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GDBusObjectIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val parent_iface: GTypeInterface
        get() = memberAt(0)
    
    var get_object_path: CPointer<CFunction<(CPointer<GDBusObject>?) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusObject>?) -> CPointer<gcharVar>?>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusObject>?) -> CPointer<gcharVar>?>>>(16).value = value }
    
    var get_interfaces: CPointer<CFunction<(CPointer<GDBusObject>?) -> CPointer<GList>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusObject>?) -> CPointer<GList>?>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusObject>?) -> CPointer<GList>?>>>(24).value = value }
    
    var get_interface: CPointer<CFunction<(CPointer<GDBusObject>?, CPointer<gcharVar>?) -> CPointer<GDBusInterface>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusObject>?, CPointer<gcharVar>?) -> CPointer<GDBusInterface>?>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusObject>?, CPointer<gcharVar>?) -> CPointer<GDBusInterface>?>>>(32).value = value }
    
    var interface_added: CPointer<CFunction<(CPointer<GDBusObject>?, CPointer<GDBusInterface>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusObject>?, CPointer<GDBusInterface>?) -> Unit>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusObject>?, CPointer<GDBusInterface>?) -> Unit>>>(40).value = value }
    
    var interface_removed: CPointer<CFunction<(CPointer<GDBusObject>?, CPointer<GDBusInterface>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusObject>?, CPointer<GDBusInterface>?) -> Unit>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusObject>?, CPointer<GDBusInterface>?) -> Unit>>>(48).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2[8]; }")
class _GDBusObjectSkeletonClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(208, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var authorize_method: CPointer<CFunction<(CPointer<GDBusObjectSkeleton>?, CPointer<GDBusInterfaceSkeleton>?, CPointer<GDBusMethodInvocation>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectSkeleton>?, CPointer<GDBusInterfaceSkeleton>?, CPointer<GDBusMethodInvocation>?) -> gboolean>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectSkeleton>?, CPointer<GDBusInterfaceSkeleton>?, CPointer<GDBusMethodInvocation>?) -> gboolean>>>(136).value = value }
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(144)
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1[8]; }")
class _GDBusObjectProxyClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(200, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(136)
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; }")
class _GDBusObjectManagerIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(80, 8)
    
    val parent_iface: GTypeInterface
        get() = memberAt(0)
    
    var get_object_path: CPointer<CFunction<(CPointer<GDBusObjectManager>?) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManager>?) -> CPointer<gcharVar>?>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManager>?) -> CPointer<gcharVar>?>>>(16).value = value }
    
    var get_objects: CPointer<CFunction<(CPointer<GDBusObjectManager>?) -> CPointer<GList>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManager>?) -> CPointer<GList>?>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManager>?) -> CPointer<GList>?>>>(24).value = value }
    
    var get_object: CPointer<CFunction<(CPointer<GDBusObjectManager>?, CPointer<gcharVar>?) -> CPointer<GDBusObject>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManager>?, CPointer<gcharVar>?) -> CPointer<GDBusObject>?>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManager>?, CPointer<gcharVar>?) -> CPointer<GDBusObject>?>>>(32).value = value }
    
    var get_interface: CPointer<CFunction<(CPointer<GDBusObjectManager>?, CPointer<gcharVar>?, CPointer<gcharVar>?) -> CPointer<GDBusInterface>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManager>?, CPointer<gcharVar>?, CPointer<gcharVar>?) -> CPointer<GDBusInterface>?>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManager>?, CPointer<gcharVar>?, CPointer<gcharVar>?) -> CPointer<GDBusInterface>?>>>(40).value = value }
    
    var object_added: CPointer<CFunction<(CPointer<GDBusObjectManager>?, CPointer<GDBusObject>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManager>?, CPointer<GDBusObject>?) -> Unit>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManager>?, CPointer<GDBusObject>?) -> Unit>>>(48).value = value }
    
    var object_removed: CPointer<CFunction<(CPointer<GDBusObjectManager>?, CPointer<GDBusObject>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManager>?, CPointer<GDBusObject>?) -> Unit>>>(56).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManager>?, CPointer<GDBusObject>?) -> Unit>>>(56).value = value }
    
    var interface_added: CPointer<CFunction<(CPointer<GDBusObjectManager>?, CPointer<GDBusObject>?, CPointer<GDBusInterface>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManager>?, CPointer<GDBusObject>?, CPointer<GDBusInterface>?) -> Unit>>>(64).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManager>?, CPointer<GDBusObject>?, CPointer<GDBusInterface>?) -> Unit>>>(64).value = value }
    
    var interface_removed: CPointer<CFunction<(CPointer<GDBusObjectManager>?, CPointer<GDBusObject>?, CPointer<GDBusInterface>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManager>?, CPointer<GDBusObject>?, CPointer<GDBusInterface>?) -> Unit>>>(72).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManager>?, CPointer<GDBusObject>?, CPointer<GDBusInterface>?) -> Unit>>>(72).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3[8]; }")
class _GDBusObjectManagerClientClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(216, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var interface_proxy_signal: CPointer<CFunction<(CPointer<GDBusObjectManagerClient>?, CPointer<GDBusObjectProxy>?, CPointer<GDBusProxy>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<GVariant>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManagerClient>?, CPointer<GDBusObjectProxy>?, CPointer<GDBusProxy>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<GVariant>?) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManagerClient>?, CPointer<GDBusObjectProxy>?, CPointer<GDBusProxy>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<GVariant>?) -> Unit>>>(136).value = value }
    
    var interface_proxy_properties_changed: CPointer<CFunction<(CPointer<GDBusObjectManagerClient>?, CPointer<GDBusObjectProxy>?, CPointer<GDBusProxy>?, CPointer<GVariant>?, CPointer<CPointerVar<gcharVar>>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManagerClient>?, CPointer<GDBusObjectProxy>?, CPointer<GDBusProxy>?, CPointer<GVariant>?, CPointer<CPointerVar<gcharVar>>?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManagerClient>?, CPointer<GDBusObjectProxy>?, CPointer<GDBusProxy>?, CPointer<GVariant>?, CPointer<CPointerVar<gcharVar>>?) -> Unit>>>(144).value = value }
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(152)
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1[8]; }")
class _GDBusObjectManagerServerClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(200, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(136)
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; }")
class _GRemoteActionGroupInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var activate_action_full: CPointer<CFunction<(CPointer<GRemoteActionGroup>?, CPointer<gcharVar>?, CPointer<GVariant>?, CPointer<GVariant>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GRemoteActionGroup>?, CPointer<gcharVar>?, CPointer<GVariant>?, CPointer<GVariant>?) -> Unit>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GRemoteActionGroup>?, CPointer<gcharVar>?, CPointer<GVariant>?, CPointer<GVariant>?) -> Unit>>>(16).value = value }
    
    var change_action_state_full: CPointer<CFunction<(CPointer<GRemoteActionGroup>?, CPointer<gcharVar>?, CPointer<GVariant>?, CPointer<GVariant>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GRemoteActionGroup>?, CPointer<gcharVar>?, CPointer<GVariant>?, CPointer<GVariant>?) -> Unit>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GRemoteActionGroup>?, CPointer<gcharVar>?, CPointer<GVariant>?, CPointer<GVariant>?) -> Unit>>>(24).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; }")
class _GMenuModelClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(200, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var is_mutable: CPointer<CFunction<(CPointer<GMenuModel>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMenuModel>?) -> gboolean>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMenuModel>?) -> gboolean>>>(136).value = value }
    
    var get_n_items: CPointer<CFunction<(CPointer<GMenuModel>?) -> gint>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMenuModel>?) -> gint>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMenuModel>?) -> gint>>>(144).value = value }
    
    var get_item_attributes: CPointer<CFunction<(CPointer<GMenuModel>?, gint, CPointer<CPointerVar<GHashTable>>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMenuModel>?, gint, CPointer<CPointerVar<GHashTable>>?) -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMenuModel>?, gint, CPointer<CPointerVar<GHashTable>>?) -> Unit>>>(152).value = value }
    
    var iterate_item_attributes: CPointer<CFunction<(CPointer<GMenuModel>?, gint) -> CPointer<GMenuAttributeIter>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMenuModel>?, gint) -> CPointer<GMenuAttributeIter>?>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMenuModel>?, gint) -> CPointer<GMenuAttributeIter>?>>>(160).value = value }
    
    var get_item_attribute_value: CPointer<CFunction<(CPointer<GMenuModel>?, gint, CPointer<gcharVar>?, CPointer<GVariantType>?) -> CPointer<GVariant>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMenuModel>?, gint, CPointer<gcharVar>?, CPointer<GVariantType>?) -> CPointer<GVariant>?>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMenuModel>?, gint, CPointer<gcharVar>?, CPointer<GVariantType>?) -> CPointer<GVariant>?>>>(168).value = value }
    
    var get_item_links: CPointer<CFunction<(CPointer<GMenuModel>?, gint, CPointer<CPointerVar<GHashTable>>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMenuModel>?, gint, CPointer<CPointerVar<GHashTable>>?) -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMenuModel>?, gint, CPointer<CPointerVar<GHashTable>>?) -> Unit>>>(176).value = value }
    
    var iterate_item_links: CPointer<CFunction<(CPointer<GMenuModel>?, gint) -> CPointer<GMenuLinkIter>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMenuModel>?, gint) -> CPointer<GMenuLinkIter>?>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMenuModel>?, gint) -> CPointer<GMenuLinkIter>?>>>(184).value = value }
    
    var get_item_link: CPointer<CFunction<(CPointer<GMenuModel>?, gint, CPointer<gcharVar>?) -> CPointer<GMenuModel>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMenuModel>?, gint, CPointer<gcharVar>?) -> CPointer<GMenuModel>?>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMenuModel>?, gint, CPointer<gcharVar>?) -> CPointer<GMenuModel>?>>>(192).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GMenuAttributeIter(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GMenuAttributeIterPrivate>?
        get() = memberAt<CPointerVar<GMenuAttributeIterPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GMenuAttributeIterPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GMenuLinkIter(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GMenuLinkIterPrivate>?
        get() = memberAt<CPointerVar<GMenuLinkIterPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GMenuLinkIterPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; }")
class _GMenuAttributeIterClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(144, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var get_next: CPointer<CFunction<(CPointer<GMenuAttributeIter>?, CPointer<CPointerVar<gcharVar>>?, CPointer<CPointerVar<GVariant>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMenuAttributeIter>?, CPointer<CPointerVar<gcharVar>>?, CPointer<CPointerVar<GVariant>>?) -> gboolean>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMenuAttributeIter>?, CPointer<CPointerVar<gcharVar>>?, CPointer<CPointerVar<GVariant>>?) -> gboolean>>>(136).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; }")
class _GMenuLinkIterClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(144, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var get_next: CPointer<CFunction<(CPointer<GMenuLinkIter>?, CPointer<CPointerVar<gcharVar>>?, CPointer<CPointerVar<GMenuModel>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMenuLinkIter>?, CPointer<CPointerVar<gcharVar>>?, CPointer<CPointerVar<GMenuModel>>?) -> gboolean>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMenuLinkIter>?, CPointer<CPointerVar<gcharVar>>?, CPointer<CPointerVar<GMenuModel>>?) -> gboolean>>>(136).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; }")
class _GListModelInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var get_item_type: CPointer<CFunction<(CPointer<GListModel>?) -> GType>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GListModel>?) -> GType>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GListModel>?) -> GType>>>(16).value = value }
    
    var get_n_items: CPointer<CFunction<(CPointer<GListModel>?) -> guint>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GListModel>?) -> guint>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GListModel>?) -> guint>>>(24).value = value }
    
    var get_item: CPointer<CFunction<(CPointer<GListModel>?, guint) -> gpointer?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GListModel>?, guint) -> gpointer?>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GListModel>?, guint) -> gpointer?>>>(32).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; }")
class GListStoreClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(136, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GtkAccelGroup(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GtkAccelGroupPrivate>?
        get() = memberAt<CPointerVar<GtkAccelGroupPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GtkAccelGroupPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GtkAccelGroupClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(176, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var accel_changed: CPointer<CFunction<(CPointer<GtkAccelGroup>?, guint, GdkModifierType, CPointer<GClosure>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkAccelGroup>?, guint, GdkModifierType, CPointer<GClosure>?) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkAccelGroup>?, guint, GdkModifierType, CPointer<GClosure>?) -> Unit>>>(136).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value = value }
}

class _GtkAccelKey(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(12, 4)
    
    var accel_key: guint
        get() = memberAt<guintVar>(0).value
        set(value) { memberAt<guintVar>(0).value = value }
    
    var accel_mods: GdkModifierType
        get() = memberAt<GdkModifierTypeVar>(4).value
        set(value) { memberAt<GdkModifierTypeVar>(4).value = value }
    
    var accel_flags: guint
        get() = readBits(this.rawPtr, 64, 16, false).toUInt()
        set(value) { writeBits(this.rawPtr, 64, 16, value.toLong()) }
}

@CStruct("struct { null p0; void* p1; unsigned int p2; }")
class _GtkAccelGroupEntry(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val key: GtkAccelKey
        get() = memberAt(0)
    
    var closure: CPointer<GClosure>?
        get() = memberAt<CPointerVar<GClosure>>(16).value
        set(value) { memberAt<CPointerVar<GClosure>>(16).value = value }
    
    var accel_path_quark: GQuark
        get() = memberAt<GQuarkVar>(24).value
        set(value) { memberAt<GQuarkVar>(24).value = value }
}

@CStruct("struct { short p0; short p1; short p2; short p3; }")
class _GtkBorder(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(8, 2)
    
    var left: gint16
        get() = memberAt<gint16Var>(0).value
        set(value) { memberAt<gint16Var>(0).value = value }
    
    var right: gint16
        get() = memberAt<gint16Var>(2).value
        set(value) { memberAt<gint16Var>(2).value = value }
    
    var top: gint16
        get() = memberAt<gint16Var>(4).value
        set(value) { memberAt<gint16Var>(4).value = value }
    
    var bottom: gint16
        get() = memberAt<gint16Var>(6).value
        set(value) { memberAt<gint16Var>(6).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GtkAdjustment(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GInitiallyUnowned
        get() = memberAt(0)
    
    var priv: CPointer<GtkAdjustmentPrivate>?
        get() = memberAt<CPointerVar<GtkAdjustmentPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GtkAdjustmentPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GtkBuilder(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GtkBuilderPrivate>?
        get() = memberAt<CPointerVar<GtkBuilderPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GtkBuilderPrivate>>(24).value = value }
}

class _GtkRcStyle(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(384, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(24).value
        set(value) { memberAt<CPointerVar<gcharVar>>(24).value = value }
    
    val bg_pixmap_name: CArrayPointer<CPointerVar<gcharVar>>
        get() = arrayMemberAt(32)
    
    var font_desc: CPointer<PangoFontDescription>?
        get() = memberAt<CPointerVar<PangoFontDescription>>(72).value
        set(value) { memberAt<CPointerVar<PangoFontDescription>>(72).value = value }
    
    val color_flags: CArrayPointer<GtkRcFlagsVar>
        get() = arrayMemberAt(80)
    
    val fg: CArrayPointer<GdkColor>
        get() = arrayMemberAt(100)
    
    val bg: CArrayPointer<GdkColor>
        get() = arrayMemberAt(160)
    
    val text: CArrayPointer<GdkColor>
        get() = arrayMemberAt(220)
    
    val base: CArrayPointer<GdkColor>
        get() = arrayMemberAt(280)
    
    var xthickness: gint
        get() = memberAt<gintVar>(340).value
        set(value) { memberAt<gintVar>(340).value = value }
    
    var ythickness: gint
        get() = memberAt<gintVar>(344).value
        set(value) { memberAt<gintVar>(344).value = value }
    
    var rc_properties: CPointer<GArray>?
        get() = memberAt<CPointerVar<GArray>>(352).value
        set(value) { memberAt<CPointerVar<GArray>>(352).value = value }
    
    var rc_style_lists: CPointer<GSList>?
        get() = memberAt<CPointerVar<GSList>>(360).value
        set(value) { memberAt<CPointerVar<GSList>>(360).value = value }
    
    var icon_factories: CPointer<GSList>?
        get() = memberAt<CPointerVar<GSList>>(368).value
        set(value) { memberAt<CPointerVar<GSList>>(368).value = value }
    
    var engine_specified: guint
        get() = readBits(this.rawPtr, 3008, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 3008, 1, value.toLong()) }
}

@CStruct("struct { unsigned int p0; unsigned short p1; unsigned short p2; unsigned short p3; }")
class _GdkColor(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(12, 4)
    
    var pixel: guint32
        get() = memberAt<guint32Var>(0).value
        set(value) { memberAt<guint32Var>(0).value = value }
    
    var red: guint16
        get() = memberAt<guint16Var>(4).value
        set(value) { memberAt<guint16Var>(4).value = value }
    
    var green: guint16
        get() = memberAt<guint16Var>(6).value
        set(value) { memberAt<guint16Var>(6).value = value }
    
    var blue: guint16
        get() = memberAt<guint16Var>(8).value
        set(value) { memberAt<guint16Var>(8).value = value }
}

@CStruct("struct { int p0; int p1; }")
class _GtkRequisition(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(8, 4)
    
    var width: gint
        get() = memberAt<gintVar>(0).value
        set(value) { memberAt<gintVar>(0).value = value }
    
    var height: gint
        get() = memberAt<gintVar>(4).value
        set(value) { memberAt<gintVar>(4).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GtkSettings(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GtkSettingsPrivate>?
        get() = memberAt<CPointerVar<GtkSettingsPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GtkSettingsPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; struct { unsigned int p0; unsigned short p1; unsigned short p2; unsigned short p3; } p1[5]; struct { unsigned int p0; unsigned short p1; unsigned short p2; unsigned short p3; } p2[5]; struct { unsigned int p0; unsigned short p1; unsigned short p2; unsigned short p3; } p3[5]; struct { unsigned int p0; unsigned short p1; unsigned short p2; unsigned short p3; } p4[5]; struct { unsigned int p0; unsigned short p1; unsigned short p2; unsigned short p3; } p5[5]; struct { unsigned int p0; unsigned short p1; unsigned short p2; unsigned short p3; } p6[5]; struct { unsigned int p0; unsigned short p1; unsigned short p2; unsigned short p3; } p7[5]; struct { unsigned int p0; unsigned short p1; unsigned short p2; unsigned short p3; } p8[5]; struct { unsigned int p0; unsigned short p1; unsigned short p2; unsigned short p3; } p9; struct { unsigned int p0; unsigned short p1; unsigned short p2; unsigned short p3; } p10; void* p11; int p12; int p13; void* p14[5]; int p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; }")
class _GtkStyle(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(640, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    val fg: CArrayPointer<GdkColor>
        get() = arrayMemberAt(24)
    
    val bg: CArrayPointer<GdkColor>
        get() = arrayMemberAt(84)
    
    val light: CArrayPointer<GdkColor>
        get() = arrayMemberAt(144)
    
    val dark: CArrayPointer<GdkColor>
        get() = arrayMemberAt(204)
    
    val mid: CArrayPointer<GdkColor>
        get() = arrayMemberAt(264)
    
    val text: CArrayPointer<GdkColor>
        get() = arrayMemberAt(324)
    
    val base: CArrayPointer<GdkColor>
        get() = arrayMemberAt(384)
    
    val text_aa: CArrayPointer<GdkColor>
        get() = arrayMemberAt(444)
    
    val black: GdkColor
        get() = memberAt(504)
    
    val white: GdkColor
        get() = memberAt(516)
    
    var font_desc: CPointer<PangoFontDescription>?
        get() = memberAt<CPointerVar<PangoFontDescription>>(528).value
        set(value) { memberAt<CPointerVar<PangoFontDescription>>(528).value = value }
    
    var xthickness: gint
        get() = memberAt<gintVar>(536).value
        set(value) { memberAt<gintVar>(536).value = value }
    
    var ythickness: gint
        get() = memberAt<gintVar>(540).value
        set(value) { memberAt<gintVar>(540).value = value }
    
    val background: CArrayPointer<CPointerVar<cairo_pattern_t>>
        get() = arrayMemberAt(544)
    
    var attach_count: gint
        get() = memberAt<gintVar>(584).value
        set(value) { memberAt<gintVar>(584).value = value }
    
    var visual: CPointer<GdkVisual>?
        get() = memberAt<CPointerVar<GdkVisual>>(592).value
        set(value) { memberAt<CPointerVar<GdkVisual>>(592).value = value }
    
    var private_font_desc: CPointer<PangoFontDescription>?
        get() = memberAt<CPointerVar<PangoFontDescription>>(600).value
        set(value) { memberAt<CPointerVar<PangoFontDescription>>(600).value = value }
    
    var rc_style: CPointer<GtkRcStyle>?
        get() = memberAt<CPointerVar<GtkRcStyle>>(608).value
        set(value) { memberAt<CPointerVar<GtkRcStyle>>(608).value = value }
    
    var styles: CPointer<GSList>?
        get() = memberAt<CPointerVar<GSList>>(616).value
        set(value) { memberAt<CPointerVar<GSList>>(616).value = value }
    
    var property_cache: CPointer<GArray>?
        get() = memberAt<CPointerVar<GArray>>(624).value
        set(value) { memberAt<CPointerVar<GArray>>(624).value = value }
    
    var icon_factories: CPointer<GSList>?
        get() = memberAt<CPointerVar<GSList>>(632).value
        set(value) { memberAt<CPointerVar<GSList>>(632).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GtkStyleContext(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_object: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GtkStyleContextPrivate>?
        get() = memberAt<CPointerVar<GtkStyleContextPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GtkStyleContextPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GtkWidget(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GInitiallyUnowned
        get() = memberAt(0)
    
    var priv: CPointer<GtkWidgetPrivate>?
        get() = memberAt<CPointerVar<GtkWidgetPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GtkWidgetPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkWindow(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val bin: GtkBin
        get() = memberAt(0)
    
    var priv: CPointer<GtkWindowPrivate>?
        get() = memberAt<CPointerVar<GtkWindowPrivate>>(48).value
        set(value) { memberAt<CPointerVar<GtkWindowPrivate>>(48).value = value }
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkBin(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val container: GtkContainer
        get() = memberAt(0)
    
    var priv: CPointer<GtkBinPrivate>?
        get() = memberAt<CPointerVar<GtkBinPrivate>>(40).value
        set(value) { memberAt<CPointerVar<GtkBinPrivate>>(40).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GtkContainer(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val widget: GtkWidget
        get() = memberAt(0)
    
    var priv: CPointer<GtkContainerPrivate>?
        get() = memberAt<CPointerVar<GtkContainerPrivate>>(32).value
        set(value) { memberAt<CPointerVar<GtkContainerPrivate>>(32).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; unsigned int p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; void* p23; void* p24; void* p25; void* p26; void* p27; void* p28; void* p29; void* p30; void* p31; void* p32; void* p33; void* p34; void* p35; void* p36; void* p37; void* p38; void* p39; void* p40; void* p41; void* p42; void* p43; void* p44; void* p45; void* p46; void* p47; void* p48; void* p49; void* p50; void* p51; void* p52; void* p53; void* p54; void* p55; void* p56; void* p57; void* p58; void* p59; void* p60; void* p61; void* p62; void* p63; void* p64; void* p65; void* p66; void* p67; void* p68; void* p69; void* p70; void* p71; void* p72; void* p73; void* p74; void* p75; void* p76; void* p77; void* p78; void* p79; void* p80; void* p81; void* p82; void* p83; void* p84; void* p85; void* p86; }")
class _GtkWidgetClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(824, 8)
    
    val parent_class: GInitiallyUnownedClass
        get() = memberAt(0)
    
    var activate_signal: guint
        get() = memberAt<guintVar>(136).value
        set(value) { memberAt<guintVar>(136).value = value }
    
    var dispatch_child_properties_changed: CPointer<CFunction<(CPointer<GtkWidget>?, guint, CPointer<CPointerVar<GParamSpec>>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, guint, CPointer<CPointerVar<GParamSpec>>?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, guint, CPointer<CPointerVar<GParamSpec>>?) -> Unit>>>(144).value = value }
    
    var destroy: CPointer<CFunction<(CPointer<GtkWidget>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?) -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?) -> Unit>>>(152).value = value }
    
    var show: CPointer<CFunction<(CPointer<GtkWidget>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?) -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?) -> Unit>>>(160).value = value }
    
    var show_all: CPointer<CFunction<(CPointer<GtkWidget>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?) -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?) -> Unit>>>(168).value = value }
    
    var hide: CPointer<CFunction<(CPointer<GtkWidget>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?) -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?) -> Unit>>>(176).value = value }
    
    var map: CPointer<CFunction<(CPointer<GtkWidget>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?) -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?) -> Unit>>>(184).value = value }
    
    var unmap: CPointer<CFunction<(CPointer<GtkWidget>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?) -> Unit>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?) -> Unit>>>(192).value = value }
    
    var realize: CPointer<CFunction<(CPointer<GtkWidget>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?) -> Unit>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?) -> Unit>>>(200).value = value }
    
    var unrealize: CPointer<CFunction<(CPointer<GtkWidget>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?) -> Unit>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?) -> Unit>>>(208).value = value }
    
    var size_allocate: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GtkAllocation>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GtkAllocation>?) -> Unit>>>(216).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GtkAllocation>?) -> Unit>>>(216).value = value }
    
    var state_changed: CPointer<CFunction<(CPointer<GtkWidget>?, GtkStateType) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, GtkStateType) -> Unit>>>(224).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, GtkStateType) -> Unit>>>(224).value = value }
    
    var state_flags_changed: CPointer<CFunction<(CPointer<GtkWidget>?, GtkStateFlags) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, GtkStateFlags) -> Unit>>>(232).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, GtkStateFlags) -> Unit>>>(232).value = value }
    
    var parent_set: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GtkWidget>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GtkWidget>?) -> Unit>>>(240).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GtkWidget>?) -> Unit>>>(240).value = value }
    
    var hierarchy_changed: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GtkWidget>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GtkWidget>?) -> Unit>>>(248).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GtkWidget>?) -> Unit>>>(248).value = value }
    
    var style_set: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GtkStyle>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GtkStyle>?) -> Unit>>>(256).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GtkStyle>?) -> Unit>>>(256).value = value }
    
    var direction_changed: CPointer<CFunction<(CPointer<GtkWidget>?, GtkTextDirection) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, GtkTextDirection) -> Unit>>>(264).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, GtkTextDirection) -> Unit>>>(264).value = value }
    
    var grab_notify: CPointer<CFunction<(CPointer<GtkWidget>?, gboolean) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, gboolean) -> Unit>>>(272).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, gboolean) -> Unit>>>(272).value = value }
    
    var child_notify: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GParamSpec>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GParamSpec>?) -> Unit>>>(280).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GParamSpec>?) -> Unit>>>(280).value = value }
    
    var draw: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<cairo_t>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<cairo_t>?) -> gboolean>>>(288).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<cairo_t>?) -> gboolean>>>(288).value = value }
    
    var get_request_mode: CPointer<CFunction<(CPointer<GtkWidget>?) -> GtkSizeRequestMode>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?) -> GtkSizeRequestMode>>>(296).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?) -> GtkSizeRequestMode>>>(296).value = value }
    
    var get_preferred_height: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(304).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(304).value = value }
    
    var get_preferred_width_for_height: CPointer<CFunction<(CPointer<GtkWidget>?, gint, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, gint, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(312).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, gint, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(312).value = value }
    
    var get_preferred_width: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(320).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(320).value = value }
    
    var get_preferred_height_for_width: CPointer<CFunction<(CPointer<GtkWidget>?, gint, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, gint, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(328).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, gint, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(328).value = value }
    
    var mnemonic_activate: CPointer<CFunction<(CPointer<GtkWidget>?, gboolean) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, gboolean) -> gboolean>>>(336).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, gboolean) -> gboolean>>>(336).value = value }
    
    var grab_focus: CPointer<CFunction<(CPointer<GtkWidget>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?) -> Unit>>>(344).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?) -> Unit>>>(344).value = value }
    
    var focus: CPointer<CFunction<(CPointer<GtkWidget>?, GtkDirectionType) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, GtkDirectionType) -> gboolean>>>(352).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, GtkDirectionType) -> gboolean>>>(352).value = value }
    
    var move_focus: CPointer<CFunction<(CPointer<GtkWidget>?, GtkDirectionType) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, GtkDirectionType) -> Unit>>>(360).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, GtkDirectionType) -> Unit>>>(360).value = value }
    
    var keynav_failed: CPointer<CFunction<(CPointer<GtkWidget>?, GtkDirectionType) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, GtkDirectionType) -> gboolean>>>(368).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, GtkDirectionType) -> gboolean>>>(368).value = value }
    
    var event: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEvent>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEvent>?) -> gboolean>>>(376).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEvent>?) -> gboolean>>>(376).value = value }
    
    var button_press_event: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventButton>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventButton>?) -> gboolean>>>(384).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventButton>?) -> gboolean>>>(384).value = value }
    
    var button_release_event: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventButton>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventButton>?) -> gboolean>>>(392).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventButton>?) -> gboolean>>>(392).value = value }
    
    var scroll_event: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventScroll>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventScroll>?) -> gboolean>>>(400).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventScroll>?) -> gboolean>>>(400).value = value }
    
    var motion_notify_event: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventMotion>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventMotion>?) -> gboolean>>>(408).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventMotion>?) -> gboolean>>>(408).value = value }
    
    var delete_event: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventAny>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventAny>?) -> gboolean>>>(416).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventAny>?) -> gboolean>>>(416).value = value }
    
    var destroy_event: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventAny>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventAny>?) -> gboolean>>>(424).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventAny>?) -> gboolean>>>(424).value = value }
    
    var key_press_event: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventKey>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventKey>?) -> gboolean>>>(432).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventKey>?) -> gboolean>>>(432).value = value }
    
    var key_release_event: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventKey>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventKey>?) -> gboolean>>>(440).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventKey>?) -> gboolean>>>(440).value = value }
    
    var enter_notify_event: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventCrossing>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventCrossing>?) -> gboolean>>>(448).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventCrossing>?) -> gboolean>>>(448).value = value }
    
    var leave_notify_event: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventCrossing>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventCrossing>?) -> gboolean>>>(456).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventCrossing>?) -> gboolean>>>(456).value = value }
    
    var configure_event: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventConfigure>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventConfigure>?) -> gboolean>>>(464).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventConfigure>?) -> gboolean>>>(464).value = value }
    
    var focus_in_event: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventFocus>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventFocus>?) -> gboolean>>>(472).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventFocus>?) -> gboolean>>>(472).value = value }
    
    var focus_out_event: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventFocus>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventFocus>?) -> gboolean>>>(480).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventFocus>?) -> gboolean>>>(480).value = value }
    
    var map_event: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventAny>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventAny>?) -> gboolean>>>(488).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventAny>?) -> gboolean>>>(488).value = value }
    
    var unmap_event: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventAny>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventAny>?) -> gboolean>>>(496).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventAny>?) -> gboolean>>>(496).value = value }
    
    var property_notify_event: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventProperty>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventProperty>?) -> gboolean>>>(504).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventProperty>?) -> gboolean>>>(504).value = value }
    
    var selection_clear_event: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventSelection>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventSelection>?) -> gboolean>>>(512).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventSelection>?) -> gboolean>>>(512).value = value }
    
    var selection_request_event: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventSelection>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventSelection>?) -> gboolean>>>(520).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventSelection>?) -> gboolean>>>(520).value = value }
    
    var selection_notify_event: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventSelection>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventSelection>?) -> gboolean>>>(528).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventSelection>?) -> gboolean>>>(528).value = value }
    
    var proximity_in_event: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventProximity>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventProximity>?) -> gboolean>>>(536).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventProximity>?) -> gboolean>>>(536).value = value }
    
    var proximity_out_event: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventProximity>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventProximity>?) -> gboolean>>>(544).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventProximity>?) -> gboolean>>>(544).value = value }
    
    var visibility_notify_event: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventVisibility>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventVisibility>?) -> gboolean>>>(552).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventVisibility>?) -> gboolean>>>(552).value = value }
    
    var window_state_event: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventWindowState>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventWindowState>?) -> gboolean>>>(560).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventWindowState>?) -> gboolean>>>(560).value = value }
    
    var damage_event: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventExpose>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventExpose>?) -> gboolean>>>(568).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventExpose>?) -> gboolean>>>(568).value = value }
    
    var grab_broken_event: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventGrabBroken>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventGrabBroken>?) -> gboolean>>>(576).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventGrabBroken>?) -> gboolean>>>(576).value = value }
    
    var selection_get: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GtkSelectionData>?, guint, guint) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GtkSelectionData>?, guint, guint) -> Unit>>>(584).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GtkSelectionData>?, guint, guint) -> Unit>>>(584).value = value }
    
    var selection_received: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GtkSelectionData>?, guint) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GtkSelectionData>?, guint) -> Unit>>>(592).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GtkSelectionData>?, guint) -> Unit>>>(592).value = value }
    
    var drag_begin: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GdkDragContext>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkDragContext>?) -> Unit>>>(600).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkDragContext>?) -> Unit>>>(600).value = value }
    
    var drag_end: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GdkDragContext>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkDragContext>?) -> Unit>>>(608).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkDragContext>?) -> Unit>>>(608).value = value }
    
    var drag_data_get: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GdkDragContext>?, CPointer<GtkSelectionData>?, guint, guint) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkDragContext>?, CPointer<GtkSelectionData>?, guint, guint) -> Unit>>>(616).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkDragContext>?, CPointer<GtkSelectionData>?, guint, guint) -> Unit>>>(616).value = value }
    
    var drag_data_delete: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GdkDragContext>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkDragContext>?) -> Unit>>>(624).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkDragContext>?) -> Unit>>>(624).value = value }
    
    var drag_leave: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GdkDragContext>?, guint) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkDragContext>?, guint) -> Unit>>>(632).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkDragContext>?, guint) -> Unit>>>(632).value = value }
    
    var drag_motion: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GdkDragContext>?, gint, gint, guint) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkDragContext>?, gint, gint, guint) -> gboolean>>>(640).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkDragContext>?, gint, gint, guint) -> gboolean>>>(640).value = value }
    
    var drag_drop: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GdkDragContext>?, gint, gint, guint) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkDragContext>?, gint, gint, guint) -> gboolean>>>(648).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkDragContext>?, gint, gint, guint) -> gboolean>>>(648).value = value }
    
    var drag_data_received: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GdkDragContext>?, gint, gint, CPointer<GtkSelectionData>?, guint, guint) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkDragContext>?, gint, gint, CPointer<GtkSelectionData>?, guint, guint) -> Unit>>>(656).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkDragContext>?, gint, gint, CPointer<GtkSelectionData>?, guint, guint) -> Unit>>>(656).value = value }
    
    var drag_failed: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GdkDragContext>?, GtkDragResult) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkDragContext>?, GtkDragResult) -> gboolean>>>(664).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkDragContext>?, GtkDragResult) -> gboolean>>>(664).value = value }
    
    var popup_menu: CPointer<CFunction<(CPointer<GtkWidget>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?) -> gboolean>>>(672).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?) -> gboolean>>>(672).value = value }
    
    var show_help: CPointer<CFunction<(CPointer<GtkWidget>?, GtkWidgetHelpType) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, GtkWidgetHelpType) -> gboolean>>>(680).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, GtkWidgetHelpType) -> gboolean>>>(680).value = value }
    
    var get_accessible: CPointer<CFunction<(CPointer<GtkWidget>?) -> CPointer<AtkObject>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?) -> CPointer<AtkObject>?>>>(688).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?) -> CPointer<AtkObject>?>>>(688).value = value }
    
    var screen_changed: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GdkScreen>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkScreen>?) -> Unit>>>(696).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkScreen>?) -> Unit>>>(696).value = value }
    
    var can_activate_accel: CPointer<CFunction<(CPointer<GtkWidget>?, guint) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, guint) -> gboolean>>>(704).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, guint) -> gboolean>>>(704).value = value }
    
    var composited_changed: CPointer<CFunction<(CPointer<GtkWidget>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?) -> Unit>>>(712).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?) -> Unit>>>(712).value = value }
    
    var query_tooltip: CPointer<CFunction<(CPointer<GtkWidget>?, gint, gint, gboolean, CPointer<GtkTooltip>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, gint, gint, gboolean, CPointer<GtkTooltip>?) -> gboolean>>>(720).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, gint, gint, gboolean, CPointer<GtkTooltip>?) -> gboolean>>>(720).value = value }
    
    var compute_expand: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<gbooleanVar>?, CPointer<gbooleanVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<gbooleanVar>?, CPointer<gbooleanVar>?) -> Unit>>>(728).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<gbooleanVar>?, CPointer<gbooleanVar>?) -> Unit>>>(728).value = value }
    
    var adjust_size_request: CPointer<CFunction<(CPointer<GtkWidget>?, GtkOrientation, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, GtkOrientation, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(736).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, GtkOrientation, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(736).value = value }
    
    var adjust_size_allocation: CPointer<CFunction<(CPointer<GtkWidget>?, GtkOrientation, CPointer<gintVar>?, CPointer<gintVar>?, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, GtkOrientation, CPointer<gintVar>?, CPointer<gintVar>?, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(744).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, GtkOrientation, CPointer<gintVar>?, CPointer<gintVar>?, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(744).value = value }
    
    var style_updated: CPointer<CFunction<(CPointer<GtkWidget>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?) -> Unit>>>(752).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?) -> Unit>>>(752).value = value }
    
    var touch_event: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventTouch>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventTouch>?) -> gboolean>>>(760).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventTouch>?) -> gboolean>>>(760).value = value }
    
    var get_preferred_height_and_baseline_for_width: CPointer<CFunction<(CPointer<GtkWidget>?, gint, CPointer<gintVar>?, CPointer<gintVar>?, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, gint, CPointer<gintVar>?, CPointer<gintVar>?, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(768).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, gint, CPointer<gintVar>?, CPointer<gintVar>?, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(768).value = value }
    
    var adjust_baseline_request: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(776).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(776).value = value }
    
    var adjust_baseline_allocation: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<gintVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<gintVar>?) -> Unit>>>(784).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<gintVar>?) -> Unit>>>(784).value = value }
    
    var queue_draw_region: CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<cairo_region_t>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<cairo_region_t>?) -> Unit>>>(792).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWidget>?, CPointer<cairo_region_t>?) -> Unit>>>(792).value = value }
    
    var priv: CPointer<GtkWidgetClassPrivate>?
        get() = memberAt<CPointerVar<GtkWidgetClassPrivate>>(800).value
        set(value) { memberAt<CPointerVar<GtkWidgetClassPrivate>>(800).value = value }
    
    var _gtk_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(808).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(808).value = value }
    
    var _gtk_reserved7: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(816).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(816).value = value }
}

@CStruct("struct { int p0; int p1; int p2; int p3; }")
class _cairo_rectangle_int(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 4)
    
    var x: Int
        get() = memberAt<IntVar>(0).value
        set(value) { memberAt<IntVar>(0).value = value }
    
    var y: Int
        get() = memberAt<IntVar>(4).value
        set(value) { memberAt<IntVar>(4).value = value }
    
    var width: Int
        get() = memberAt<IntVar>(8).value
        set(value) { memberAt<IntVar>(8).value = value }
    
    var height: Int
        get() = memberAt<IntVar>(12).value
        set(value) { memberAt<IntVar>(12).value = value }
}

@CStruct("union { int p0; struct { int p0; void* p1; signed char p2; } p1; struct { int p0; void* p1; signed char p2; struct { int p0; int p1; int p2; int p3; } p3; void* p4; int p5; } p2; struct { int p0; void* p1; signed char p2; unsigned int p3; } p3; struct { int p0; void* p1; signed char p2; unsigned int p3; double p4; double p5; void* p6; unsigned int p7; short p8; void* p9; double p10; double p11; } p4; struct { int p0; void* p1; signed char p2; unsigned int p3; double p4; double p5; void* p6; unsigned int p7; unsigned int p8; void* p9; double p10; double p11; } p5; struct { int p0; void* p1; signed char p2; unsigned int p3; double p4; double p5; void* p6; unsigned int p7; void* p8; int p9; void* p10; double p11; double p12; } p6; null p7; null p8; struct { int p0; void* p1; signed char p2; void* p3; unsigned int p4; double p5; double p6; double p7; double p8; unsigned int p9; unsigned int p10; int p11; unsigned int p12; } p9; struct { int p0; void* p1; signed char p2; short p3; } p10; struct { int p0; void* p1; signed char p2; int p3; int p4; int p5; int p6; } p11; struct { int p0; void* p1; signed char p2; void* p3; unsigned int p4; unsigned int p5; } p12; struct { int p0; void* p1; signed char p2; void* p3; void* p4; void* p5; unsigned int p6; void* p7; } p13; struct { int p0; void* p1; signed char p2; void* p3; unsigned int p4; void* p5; unsigned int p6; unsigned int p7; } p14; struct { int p0; void* p1; signed char p2; unsigned int p3; void* p4; } p15; struct { int p0; void* p1; signed char p2; void* p3; unsigned int p4; short p5; short p6; } p16; struct { int p0; void* p1; signed char p2; unsigned int p3; unsigned int p4; } p17; struct { int p0; void* p1; signed char p2; unsigned int p3; void* p4; } p18; struct { int p0; void* p1; signed char p2; int p3; int p4; void* p5; } p19; struct { int p0; void* p1; signed char p2; signed char p3; signed char p4; unsigned int p5; double p6; double p7; double p8; double p9; double p10; double p11; unsigned int p12; } p20; struct { int p0; void* p1; signed char p2; signed char p3; signed char p4; unsigned int p5; double p6; double p7; double p8; double p9; double p10; double p11; double p12; double p13; unsigned int p14; } p21; struct { int p0; void* p1; signed char p2; unsigned int p3; unsigned int p4; unsigned int p5; unsigned int p6; } p22; struct { int p0; void* p1; signed char p2; unsigned int p3; unsigned int p4; unsigned int p5; unsigned int p6; double p7; } p23; struct { int p0; void* p1; signed char p2; unsigned int p3; unsigned int p4; unsigned int p5; } p24; }")
class _GdkEvent(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(96, 8)
    
    var type: GdkEventType
        get() = memberAt<GdkEventTypeVar>(0).value
        set(value) { memberAt<GdkEventTypeVar>(0).value = value }
    
    val any: GdkEventAny
        get() = memberAt(0)
    
    val expose: GdkEventExpose
        get() = memberAt(0)
    
    val visibility: GdkEventVisibility
        get() = memberAt(0)
    
    val motion: GdkEventMotion
        get() = memberAt(0)
    
    val button: GdkEventButton
        get() = memberAt(0)
    
    val touch: GdkEventTouch
        get() = memberAt(0)
    
    val scroll: GdkEventScroll
        get() = memberAt(0)
    
    val key: GdkEventKey
        get() = memberAt(0)
    
    val crossing: GdkEventCrossing
        get() = memberAt(0)
    
    val focus_change: GdkEventFocus
        get() = memberAt(0)
    
    val configure: GdkEventConfigure
        get() = memberAt(0)
    
    val property: GdkEventProperty
        get() = memberAt(0)
    
    val selection: GdkEventSelection
        get() = memberAt(0)
    
    val owner_change: GdkEventOwnerChange
        get() = memberAt(0)
    
    val proximity: GdkEventProximity
        get() = memberAt(0)
    
    val dnd: GdkEventDND
        get() = memberAt(0)
    
    val window_state: GdkEventWindowState
        get() = memberAt(0)
    
    val setting: GdkEventSetting
        get() = memberAt(0)
    
    val grab_broken: GdkEventGrabBroken
        get() = memberAt(0)
    
    val touchpad_swipe: GdkEventTouchpadSwipe
        get() = memberAt(0)
    
    val touchpad_pinch: GdkEventTouchpadPinch
        get() = memberAt(0)
    
    val pad_button: GdkEventPadButton
        get() = memberAt(0)
    
    val pad_axis: GdkEventPadAxis
        get() = memberAt(0)
    
    val pad_group_mode: GdkEventPadGroupMode
        get() = memberAt(0)
}

@CStruct("struct { int p0; void* p1; signed char p2; }")
class _GdkEventAny(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    var type: GdkEventType
        get() = memberAt<GdkEventTypeVar>(0).value
        set(value) { memberAt<GdkEventTypeVar>(0).value = value }
    
    var window: CPointer<GdkWindow>?
        get() = memberAt<CPointerVar<GdkWindow>>(8).value
        set(value) { memberAt<CPointerVar<GdkWindow>>(8).value = value }
    
    var send_event: gint8
        get() = memberAt<gint8Var>(16).value
        set(value) { memberAt<gint8Var>(16).value = value }
}

@CStruct("struct { int p0; void* p1; signed char p2; struct { int p0; int p1; int p2; int p3; } p3; void* p4; int p5; }")
class _GdkEventExpose(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    var type: GdkEventType
        get() = memberAt<GdkEventTypeVar>(0).value
        set(value) { memberAt<GdkEventTypeVar>(0).value = value }
    
    var window: CPointer<GdkWindow>?
        get() = memberAt<CPointerVar<GdkWindow>>(8).value
        set(value) { memberAt<CPointerVar<GdkWindow>>(8).value = value }
    
    var send_event: gint8
        get() = memberAt<gint8Var>(16).value
        set(value) { memberAt<gint8Var>(16).value = value }
    
    val area: GdkRectangle
        get() = memberAt(20)
    
    var region: CPointer<cairo_region_t>?
        get() = memberAt<CPointerVar<cairo_region_t>>(40).value
        set(value) { memberAt<CPointerVar<cairo_region_t>>(40).value = value }
    
    var count: gint
        get() = memberAt<gintVar>(48).value
        set(value) { memberAt<gintVar>(48).value = value }
}

@CStruct("struct { int p0; void* p1; signed char p2; unsigned int p3; }")
class _GdkEventVisibility(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    var type: GdkEventType
        get() = memberAt<GdkEventTypeVar>(0).value
        set(value) { memberAt<GdkEventTypeVar>(0).value = value }
    
    var window: CPointer<GdkWindow>?
        get() = memberAt<CPointerVar<GdkWindow>>(8).value
        set(value) { memberAt<CPointerVar<GdkWindow>>(8).value = value }
    
    var send_event: gint8
        get() = memberAt<gint8Var>(16).value
        set(value) { memberAt<gint8Var>(16).value = value }
    
    var state: GdkVisibilityState
        get() = memberAt<GdkVisibilityState.Var>(20).value
        set(value) { memberAt<GdkVisibilityState.Var>(20).value = value }
}

@CStruct("struct { int p0; void* p1; signed char p2; unsigned int p3; double p4; double p5; void* p6; unsigned int p7; short p8; void* p9; double p10; double p11; }")
class _GdkEventMotion(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(80, 8)
    
    var type: GdkEventType
        get() = memberAt<GdkEventTypeVar>(0).value
        set(value) { memberAt<GdkEventTypeVar>(0).value = value }
    
    var window: CPointer<GdkWindow>?
        get() = memberAt<CPointerVar<GdkWindow>>(8).value
        set(value) { memberAt<CPointerVar<GdkWindow>>(8).value = value }
    
    var send_event: gint8
        get() = memberAt<gint8Var>(16).value
        set(value) { memberAt<gint8Var>(16).value = value }
    
    var time: guint32
        get() = memberAt<guint32Var>(20).value
        set(value) { memberAt<guint32Var>(20).value = value }
    
    var x: gdouble
        get() = memberAt<gdoubleVar>(24).value
        set(value) { memberAt<gdoubleVar>(24).value = value }
    
    var y: gdouble
        get() = memberAt<gdoubleVar>(32).value
        set(value) { memberAt<gdoubleVar>(32).value = value }
    
    var axes: CPointer<gdoubleVar>?
        get() = memberAt<CPointerVar<gdoubleVar>>(40).value
        set(value) { memberAt<CPointerVar<gdoubleVar>>(40).value = value }
    
    var state: guint
        get() = memberAt<guintVar>(48).value
        set(value) { memberAt<guintVar>(48).value = value }
    
    var is_hint: gint16
        get() = memberAt<gint16Var>(52).value
        set(value) { memberAt<gint16Var>(52).value = value }
    
    var device: CPointer<GdkDevice>?
        get() = memberAt<CPointerVar<GdkDevice>>(56).value
        set(value) { memberAt<CPointerVar<GdkDevice>>(56).value = value }
    
    var x_root: gdouble
        get() = memberAt<gdoubleVar>(64).value
        set(value) { memberAt<gdoubleVar>(64).value = value }
    
    var y_root: gdouble
        get() = memberAt<gdoubleVar>(72).value
        set(value) { memberAt<gdoubleVar>(72).value = value }
}

@CStruct("struct { int p0; void* p1; signed char p2; unsigned int p3; double p4; double p5; void* p6; unsigned int p7; unsigned int p8; void* p9; double p10; double p11; }")
class _GdkEventButton(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(80, 8)
    
    var type: GdkEventType
        get() = memberAt<GdkEventTypeVar>(0).value
        set(value) { memberAt<GdkEventTypeVar>(0).value = value }
    
    var window: CPointer<GdkWindow>?
        get() = memberAt<CPointerVar<GdkWindow>>(8).value
        set(value) { memberAt<CPointerVar<GdkWindow>>(8).value = value }
    
    var send_event: gint8
        get() = memberAt<gint8Var>(16).value
        set(value) { memberAt<gint8Var>(16).value = value }
    
    var time: guint32
        get() = memberAt<guint32Var>(20).value
        set(value) { memberAt<guint32Var>(20).value = value }
    
    var x: gdouble
        get() = memberAt<gdoubleVar>(24).value
        set(value) { memberAt<gdoubleVar>(24).value = value }
    
    var y: gdouble
        get() = memberAt<gdoubleVar>(32).value
        set(value) { memberAt<gdoubleVar>(32).value = value }
    
    var axes: CPointer<gdoubleVar>?
        get() = memberAt<CPointerVar<gdoubleVar>>(40).value
        set(value) { memberAt<CPointerVar<gdoubleVar>>(40).value = value }
    
    var state: guint
        get() = memberAt<guintVar>(48).value
        set(value) { memberAt<guintVar>(48).value = value }
    
    var button: guint
        get() = memberAt<guintVar>(52).value
        set(value) { memberAt<guintVar>(52).value = value }
    
    var device: CPointer<GdkDevice>?
        get() = memberAt<CPointerVar<GdkDevice>>(56).value
        set(value) { memberAt<CPointerVar<GdkDevice>>(56).value = value }
    
    var x_root: gdouble
        get() = memberAt<gdoubleVar>(64).value
        set(value) { memberAt<gdoubleVar>(64).value = value }
    
    var y_root: gdouble
        get() = memberAt<gdoubleVar>(72).value
        set(value) { memberAt<gdoubleVar>(72).value = value }
}

@CStruct("struct { int p0; void* p1; signed char p2; unsigned int p3; double p4; double p5; void* p6; unsigned int p7; void* p8; int p9; void* p10; double p11; double p12; }")
class _GdkEventTouch(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(96, 8)
    
    var type: GdkEventType
        get() = memberAt<GdkEventTypeVar>(0).value
        set(value) { memberAt<GdkEventTypeVar>(0).value = value }
    
    var window: CPointer<GdkWindow>?
        get() = memberAt<CPointerVar<GdkWindow>>(8).value
        set(value) { memberAt<CPointerVar<GdkWindow>>(8).value = value }
    
    var send_event: gint8
        get() = memberAt<gint8Var>(16).value
        set(value) { memberAt<gint8Var>(16).value = value }
    
    var time: guint32
        get() = memberAt<guint32Var>(20).value
        set(value) { memberAt<guint32Var>(20).value = value }
    
    var x: gdouble
        get() = memberAt<gdoubleVar>(24).value
        set(value) { memberAt<gdoubleVar>(24).value = value }
    
    var y: gdouble
        get() = memberAt<gdoubleVar>(32).value
        set(value) { memberAt<gdoubleVar>(32).value = value }
    
    var axes: CPointer<gdoubleVar>?
        get() = memberAt<CPointerVar<gdoubleVar>>(40).value
        set(value) { memberAt<CPointerVar<gdoubleVar>>(40).value = value }
    
    var state: guint
        get() = memberAt<guintVar>(48).value
        set(value) { memberAt<guintVar>(48).value = value }
    
    var sequence: CPointer<GdkEventSequence>?
        get() = memberAt<CPointerVar<GdkEventSequence>>(56).value
        set(value) { memberAt<CPointerVar<GdkEventSequence>>(56).value = value }
    
    var emulating_pointer: gboolean
        get() = memberAt<gbooleanVar>(64).value
        set(value) { memberAt<gbooleanVar>(64).value = value }
    
    var device: CPointer<GdkDevice>?
        get() = memberAt<CPointerVar<GdkDevice>>(72).value
        set(value) { memberAt<CPointerVar<GdkDevice>>(72).value = value }
    
    var x_root: gdouble
        get() = memberAt<gdoubleVar>(80).value
        set(value) { memberAt<gdoubleVar>(80).value = value }
    
    var y_root: gdouble
        get() = memberAt<gdoubleVar>(88).value
        set(value) { memberAt<gdoubleVar>(88).value = value }
}

class _GdkEventScroll(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(96, 8)
    
    var type: GdkEventType
        get() = memberAt<GdkEventTypeVar>(0).value
        set(value) { memberAt<GdkEventTypeVar>(0).value = value }
    
    var window: CPointer<GdkWindow>?
        get() = memberAt<CPointerVar<GdkWindow>>(8).value
        set(value) { memberAt<CPointerVar<GdkWindow>>(8).value = value }
    
    var send_event: gint8
        get() = memberAt<gint8Var>(16).value
        set(value) { memberAt<gint8Var>(16).value = value }
    
    var time: guint32
        get() = memberAt<guint32Var>(20).value
        set(value) { memberAt<guint32Var>(20).value = value }
    
    var x: gdouble
        get() = memberAt<gdoubleVar>(24).value
        set(value) { memberAt<gdoubleVar>(24).value = value }
    
    var y: gdouble
        get() = memberAt<gdoubleVar>(32).value
        set(value) { memberAt<gdoubleVar>(32).value = value }
    
    var state: guint
        get() = memberAt<guintVar>(40).value
        set(value) { memberAt<guintVar>(40).value = value }
    
    var direction: GdkScrollDirection
        get() = memberAt<GdkScrollDirection.Var>(44).value
        set(value) { memberAt<GdkScrollDirection.Var>(44).value = value }
    
    var device: CPointer<GdkDevice>?
        get() = memberAt<CPointerVar<GdkDevice>>(48).value
        set(value) { memberAt<CPointerVar<GdkDevice>>(48).value = value }
    
    var x_root: gdouble
        get() = memberAt<gdoubleVar>(56).value
        set(value) { memberAt<gdoubleVar>(56).value = value }
    
    var y_root: gdouble
        get() = memberAt<gdoubleVar>(64).value
        set(value) { memberAt<gdoubleVar>(64).value = value }
    
    var delta_x: gdouble
        get() = memberAt<gdoubleVar>(72).value
        set(value) { memberAt<gdoubleVar>(72).value = value }
    
    var delta_y: gdouble
        get() = memberAt<gdoubleVar>(80).value
        set(value) { memberAt<gdoubleVar>(80).value = value }
    
    var is_stop: guint
        get() = readBits(this.rawPtr, 704, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 704, 1, value.toLong()) }
}

class _GdkEventKey(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    var type: GdkEventType
        get() = memberAt<GdkEventTypeVar>(0).value
        set(value) { memberAt<GdkEventTypeVar>(0).value = value }
    
    var window: CPointer<GdkWindow>?
        get() = memberAt<CPointerVar<GdkWindow>>(8).value
        set(value) { memberAt<CPointerVar<GdkWindow>>(8).value = value }
    
    var send_event: gint8
        get() = memberAt<gint8Var>(16).value
        set(value) { memberAt<gint8Var>(16).value = value }
    
    var time: guint32
        get() = memberAt<guint32Var>(20).value
        set(value) { memberAt<guint32Var>(20).value = value }
    
    var state: guint
        get() = memberAt<guintVar>(24).value
        set(value) { memberAt<guintVar>(24).value = value }
    
    var keyval: guint
        get() = memberAt<guintVar>(28).value
        set(value) { memberAt<guintVar>(28).value = value }
    
    var length: gint
        get() = memberAt<gintVar>(32).value
        set(value) { memberAt<gintVar>(32).value = value }
    
    var string: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(40).value
        set(value) { memberAt<CPointerVar<gcharVar>>(40).value = value }
    
    var hardware_keycode: guint16
        get() = memberAt<guint16Var>(48).value
        set(value) { memberAt<guint16Var>(48).value = value }
    
    var group: guint8
        get() = memberAt<guint8Var>(50).value
        set(value) { memberAt<guint8Var>(50).value = value }
    
    var is_modifier: guint
        get() = readBits(this.rawPtr, 408, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 408, 1, value.toLong()) }
}

@CStruct("struct { int p0; void* p1; signed char p2; void* p3; unsigned int p4; double p5; double p6; double p7; double p8; unsigned int p9; unsigned int p10; int p11; unsigned int p12; }")
class _GdkEventCrossing(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(88, 8)
    
    var type: GdkEventType
        get() = memberAt<GdkEventTypeVar>(0).value
        set(value) { memberAt<GdkEventTypeVar>(0).value = value }
    
    var window: CPointer<GdkWindow>?
        get() = memberAt<CPointerVar<GdkWindow>>(8).value
        set(value) { memberAt<CPointerVar<GdkWindow>>(8).value = value }
    
    var send_event: gint8
        get() = memberAt<gint8Var>(16).value
        set(value) { memberAt<gint8Var>(16).value = value }
    
    var subwindow: CPointer<GdkWindow>?
        get() = memberAt<CPointerVar<GdkWindow>>(24).value
        set(value) { memberAt<CPointerVar<GdkWindow>>(24).value = value }
    
    var time: guint32
        get() = memberAt<guint32Var>(32).value
        set(value) { memberAt<guint32Var>(32).value = value }
    
    var x: gdouble
        get() = memberAt<gdoubleVar>(40).value
        set(value) { memberAt<gdoubleVar>(40).value = value }
    
    var y: gdouble
        get() = memberAt<gdoubleVar>(48).value
        set(value) { memberAt<gdoubleVar>(48).value = value }
    
    var x_root: gdouble
        get() = memberAt<gdoubleVar>(56).value
        set(value) { memberAt<gdoubleVar>(56).value = value }
    
    var y_root: gdouble
        get() = memberAt<gdoubleVar>(64).value
        set(value) { memberAt<gdoubleVar>(64).value = value }
    
    var mode: GdkCrossingMode
        get() = memberAt<GdkCrossingMode.Var>(72).value
        set(value) { memberAt<GdkCrossingMode.Var>(72).value = value }
    
    var detail: GdkNotifyType
        get() = memberAt<GdkNotifyTypeVar>(76).value
        set(value) { memberAt<GdkNotifyTypeVar>(76).value = value }
    
    var focus: gboolean
        get() = memberAt<gbooleanVar>(80).value
        set(value) { memberAt<gbooleanVar>(80).value = value }
    
    var state: guint
        get() = memberAt<guintVar>(84).value
        set(value) { memberAt<guintVar>(84).value = value }
}

@CStruct("struct { int p0; void* p1; signed char p2; short p3; }")
class _GdkEventFocus(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    var type: GdkEventType
        get() = memberAt<GdkEventTypeVar>(0).value
        set(value) { memberAt<GdkEventTypeVar>(0).value = value }
    
    var window: CPointer<GdkWindow>?
        get() = memberAt<CPointerVar<GdkWindow>>(8).value
        set(value) { memberAt<CPointerVar<GdkWindow>>(8).value = value }
    
    var send_event: gint8
        get() = memberAt<gint8Var>(16).value
        set(value) { memberAt<gint8Var>(16).value = value }
    
    var `in`: gint16
        get() = memberAt<gint16Var>(18).value
        set(value) { memberAt<gint16Var>(18).value = value }
}

@CStruct("struct { int p0; void* p1; signed char p2; int p3; int p4; int p5; int p6; }")
class _GdkEventConfigure(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    var type: GdkEventType
        get() = memberAt<GdkEventTypeVar>(0).value
        set(value) { memberAt<GdkEventTypeVar>(0).value = value }
    
    var window: CPointer<GdkWindow>?
        get() = memberAt<CPointerVar<GdkWindow>>(8).value
        set(value) { memberAt<CPointerVar<GdkWindow>>(8).value = value }
    
    var send_event: gint8
        get() = memberAt<gint8Var>(16).value
        set(value) { memberAt<gint8Var>(16).value = value }
    
    var x: gint
        get() = memberAt<gintVar>(20).value
        set(value) { memberAt<gintVar>(20).value = value }
    
    var y: gint
        get() = memberAt<gintVar>(24).value
        set(value) { memberAt<gintVar>(24).value = value }
    
    var width: gint
        get() = memberAt<gintVar>(28).value
        set(value) { memberAt<gintVar>(28).value = value }
    
    var height: gint
        get() = memberAt<gintVar>(32).value
        set(value) { memberAt<gintVar>(32).value = value }
}

@CStruct("struct { int p0; void* p1; signed char p2; void* p3; unsigned int p4; unsigned int p5; }")
class _GdkEventProperty(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    var type: GdkEventType
        get() = memberAt<GdkEventTypeVar>(0).value
        set(value) { memberAt<GdkEventTypeVar>(0).value = value }
    
    var window: CPointer<GdkWindow>?
        get() = memberAt<CPointerVar<GdkWindow>>(8).value
        set(value) { memberAt<CPointerVar<GdkWindow>>(8).value = value }
    
    var send_event: gint8
        get() = memberAt<gint8Var>(16).value
        set(value) { memberAt<gint8Var>(16).value = value }
    
    var atom: GdkAtom?
        get() = memberAt<GdkAtomVar>(24).value
        set(value) { memberAt<GdkAtomVar>(24).value = value }
    
    var time: guint32
        get() = memberAt<guint32Var>(32).value
        set(value) { memberAt<guint32Var>(32).value = value }
    
    var state: guint
        get() = memberAt<guintVar>(36).value
        set(value) { memberAt<guintVar>(36).value = value }
}

@CStruct("struct { int p0; void* p1; signed char p2; void* p3; void* p4; void* p5; unsigned int p6; void* p7; }")
class _GdkEventSelection(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(64, 8)
    
    var type: GdkEventType
        get() = memberAt<GdkEventTypeVar>(0).value
        set(value) { memberAt<GdkEventTypeVar>(0).value = value }
    
    var window: CPointer<GdkWindow>?
        get() = memberAt<CPointerVar<GdkWindow>>(8).value
        set(value) { memberAt<CPointerVar<GdkWindow>>(8).value = value }
    
    var send_event: gint8
        get() = memberAt<gint8Var>(16).value
        set(value) { memberAt<gint8Var>(16).value = value }
    
    var selection: GdkAtom?
        get() = memberAt<GdkAtomVar>(24).value
        set(value) { memberAt<GdkAtomVar>(24).value = value }
    
    var target: GdkAtom?
        get() = memberAt<GdkAtomVar>(32).value
        set(value) { memberAt<GdkAtomVar>(32).value = value }
    
    var property: GdkAtom?
        get() = memberAt<GdkAtomVar>(40).value
        set(value) { memberAt<GdkAtomVar>(40).value = value }
    
    var time: guint32
        get() = memberAt<guint32Var>(48).value
        set(value) { memberAt<guint32Var>(48).value = value }
    
    var requestor: CPointer<GdkWindow>?
        get() = memberAt<CPointerVar<GdkWindow>>(56).value
        set(value) { memberAt<CPointerVar<GdkWindow>>(56).value = value }
}

@CStruct("struct { int p0; void* p1; signed char p2; void* p3; unsigned int p4; void* p5; unsigned int p6; unsigned int p7; }")
class _GdkEventOwnerChange(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    var type: GdkEventType
        get() = memberAt<GdkEventTypeVar>(0).value
        set(value) { memberAt<GdkEventTypeVar>(0).value = value }
    
    var window: CPointer<GdkWindow>?
        get() = memberAt<CPointerVar<GdkWindow>>(8).value
        set(value) { memberAt<CPointerVar<GdkWindow>>(8).value = value }
    
    var send_event: gint8
        get() = memberAt<gint8Var>(16).value
        set(value) { memberAt<gint8Var>(16).value = value }
    
    var owner: CPointer<GdkWindow>?
        get() = memberAt<CPointerVar<GdkWindow>>(24).value
        set(value) { memberAt<CPointerVar<GdkWindow>>(24).value = value }
    
    var reason: GdkOwnerChange
        get() = memberAt<GdkOwnerChange.Var>(32).value
        set(value) { memberAt<GdkOwnerChange.Var>(32).value = value }
    
    var selection: GdkAtom?
        get() = memberAt<GdkAtomVar>(40).value
        set(value) { memberAt<GdkAtomVar>(40).value = value }
    
    var time: guint32
        get() = memberAt<guint32Var>(48).value
        set(value) { memberAt<guint32Var>(48).value = value }
    
    var selection_time: guint32
        get() = memberAt<guint32Var>(52).value
        set(value) { memberAt<guint32Var>(52).value = value }
}

@CStruct("struct { int p0; void* p1; signed char p2; unsigned int p3; void* p4; }")
class _GdkEventProximity(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    var type: GdkEventType
        get() = memberAt<GdkEventTypeVar>(0).value
        set(value) { memberAt<GdkEventTypeVar>(0).value = value }
    
    var window: CPointer<GdkWindow>?
        get() = memberAt<CPointerVar<GdkWindow>>(8).value
        set(value) { memberAt<CPointerVar<GdkWindow>>(8).value = value }
    
    var send_event: gint8
        get() = memberAt<gint8Var>(16).value
        set(value) { memberAt<gint8Var>(16).value = value }
    
    var time: guint32
        get() = memberAt<guint32Var>(20).value
        set(value) { memberAt<guint32Var>(20).value = value }
    
    var device: CPointer<GdkDevice>?
        get() = memberAt<CPointerVar<GdkDevice>>(24).value
        set(value) { memberAt<CPointerVar<GdkDevice>>(24).value = value }
}

@CStruct("struct { int p0; void* p1; signed char p2; void* p3; unsigned int p4; short p5; short p6; }")
class _GdkEventDND(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    var type: GdkEventType
        get() = memberAt<GdkEventTypeVar>(0).value
        set(value) { memberAt<GdkEventTypeVar>(0).value = value }
    
    var window: CPointer<GdkWindow>?
        get() = memberAt<CPointerVar<GdkWindow>>(8).value
        set(value) { memberAt<CPointerVar<GdkWindow>>(8).value = value }
    
    var send_event: gint8
        get() = memberAt<gint8Var>(16).value
        set(value) { memberAt<gint8Var>(16).value = value }
    
    var context: CPointer<GdkDragContext>?
        get() = memberAt<CPointerVar<GdkDragContext>>(24).value
        set(value) { memberAt<CPointerVar<GdkDragContext>>(24).value = value }
    
    var time: guint32
        get() = memberAt<guint32Var>(32).value
        set(value) { memberAt<guint32Var>(32).value = value }
    
    var x_root: gshort
        get() = memberAt<gshortVar>(36).value
        set(value) { memberAt<gshortVar>(36).value = value }
    
    var y_root: gshort
        get() = memberAt<gshortVar>(38).value
        set(value) { memberAt<gshortVar>(38).value = value }
}

@CStruct("struct { int p0; void* p1; signed char p2; unsigned int p3; unsigned int p4; }")
class _GdkEventWindowState(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    var type: GdkEventType
        get() = memberAt<GdkEventTypeVar>(0).value
        set(value) { memberAt<GdkEventTypeVar>(0).value = value }
    
    var window: CPointer<GdkWindow>?
        get() = memberAt<CPointerVar<GdkWindow>>(8).value
        set(value) { memberAt<CPointerVar<GdkWindow>>(8).value = value }
    
    var send_event: gint8
        get() = memberAt<gint8Var>(16).value
        set(value) { memberAt<gint8Var>(16).value = value }
    
    var changed_mask: GdkWindowState
        get() = memberAt<GdkWindowStateVar>(20).value
        set(value) { memberAt<GdkWindowStateVar>(20).value = value }
    
    var new_window_state: GdkWindowState
        get() = memberAt<GdkWindowStateVar>(24).value
        set(value) { memberAt<GdkWindowStateVar>(24).value = value }
}

@CStruct("struct { int p0; void* p1; signed char p2; unsigned int p3; void* p4; }")
class _GdkEventSetting(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    var type: GdkEventType
        get() = memberAt<GdkEventTypeVar>(0).value
        set(value) { memberAt<GdkEventTypeVar>(0).value = value }
    
    var window: CPointer<GdkWindow>?
        get() = memberAt<CPointerVar<GdkWindow>>(8).value
        set(value) { memberAt<CPointerVar<GdkWindow>>(8).value = value }
    
    var send_event: gint8
        get() = memberAt<gint8Var>(16).value
        set(value) { memberAt<gint8Var>(16).value = value }
    
    var action: GdkSettingAction
        get() = memberAt<GdkSettingAction.Var>(20).value
        set(value) { memberAt<GdkSettingAction.Var>(20).value = value }
    
    var name: CPointer<ByteVar>?
        get() = memberAt<CPointerVar<ByteVar>>(24).value
        set(value) { memberAt<CPointerVar<ByteVar>>(24).value = value }
}

@CStruct("struct { int p0; void* p1; signed char p2; int p3; int p4; void* p5; }")
class _GdkEventGrabBroken(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    var type: GdkEventType
        get() = memberAt<GdkEventTypeVar>(0).value
        set(value) { memberAt<GdkEventTypeVar>(0).value = value }
    
    var window: CPointer<GdkWindow>?
        get() = memberAt<CPointerVar<GdkWindow>>(8).value
        set(value) { memberAt<CPointerVar<GdkWindow>>(8).value = value }
    
    var send_event: gint8
        get() = memberAt<gint8Var>(16).value
        set(value) { memberAt<gint8Var>(16).value = value }
    
    var keyboard: gboolean
        get() = memberAt<gbooleanVar>(20).value
        set(value) { memberAt<gbooleanVar>(20).value = value }
    
    var implicit: gboolean
        get() = memberAt<gbooleanVar>(24).value
        set(value) { memberAt<gbooleanVar>(24).value = value }
    
    var grab_window: CPointer<GdkWindow>?
        get() = memberAt<CPointerVar<GdkWindow>>(32).value
        set(value) { memberAt<CPointerVar<GdkWindow>>(32).value = value }
}

@CStruct("struct { int p0; void* p1; signed char p2; signed char p3; signed char p4; unsigned int p5; double p6; double p7; double p8; double p9; double p10; double p11; unsigned int p12; }")
class _GdkEventTouchpadSwipe(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(80, 8)
    
    var type: GdkEventType
        get() = memberAt<GdkEventTypeVar>(0).value
        set(value) { memberAt<GdkEventTypeVar>(0).value = value }
    
    var window: CPointer<GdkWindow>?
        get() = memberAt<CPointerVar<GdkWindow>>(8).value
        set(value) { memberAt<CPointerVar<GdkWindow>>(8).value = value }
    
    var send_event: gint8
        get() = memberAt<gint8Var>(16).value
        set(value) { memberAt<gint8Var>(16).value = value }
    
    var phase: gint8
        get() = memberAt<gint8Var>(17).value
        set(value) { memberAt<gint8Var>(17).value = value }
    
    var n_fingers: gint8
        get() = memberAt<gint8Var>(18).value
        set(value) { memberAt<gint8Var>(18).value = value }
    
    var time: guint32
        get() = memberAt<guint32Var>(20).value
        set(value) { memberAt<guint32Var>(20).value = value }
    
    var x: gdouble
        get() = memberAt<gdoubleVar>(24).value
        set(value) { memberAt<gdoubleVar>(24).value = value }
    
    var y: gdouble
        get() = memberAt<gdoubleVar>(32).value
        set(value) { memberAt<gdoubleVar>(32).value = value }
    
    var dx: gdouble
        get() = memberAt<gdoubleVar>(40).value
        set(value) { memberAt<gdoubleVar>(40).value = value }
    
    var dy: gdouble
        get() = memberAt<gdoubleVar>(48).value
        set(value) { memberAt<gdoubleVar>(48).value = value }
    
    var x_root: gdouble
        get() = memberAt<gdoubleVar>(56).value
        set(value) { memberAt<gdoubleVar>(56).value = value }
    
    var y_root: gdouble
        get() = memberAt<gdoubleVar>(64).value
        set(value) { memberAt<gdoubleVar>(64).value = value }
    
    var state: guint
        get() = memberAt<guintVar>(72).value
        set(value) { memberAt<guintVar>(72).value = value }
}

@CStruct("struct { int p0; void* p1; signed char p2; signed char p3; signed char p4; unsigned int p5; double p6; double p7; double p8; double p9; double p10; double p11; double p12; double p13; unsigned int p14; }")
class _GdkEventTouchpadPinch(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(96, 8)
    
    var type: GdkEventType
        get() = memberAt<GdkEventTypeVar>(0).value
        set(value) { memberAt<GdkEventTypeVar>(0).value = value }
    
    var window: CPointer<GdkWindow>?
        get() = memberAt<CPointerVar<GdkWindow>>(8).value
        set(value) { memberAt<CPointerVar<GdkWindow>>(8).value = value }
    
    var send_event: gint8
        get() = memberAt<gint8Var>(16).value
        set(value) { memberAt<gint8Var>(16).value = value }
    
    var phase: gint8
        get() = memberAt<gint8Var>(17).value
        set(value) { memberAt<gint8Var>(17).value = value }
    
    var n_fingers: gint8
        get() = memberAt<gint8Var>(18).value
        set(value) { memberAt<gint8Var>(18).value = value }
    
    var time: guint32
        get() = memberAt<guint32Var>(20).value
        set(value) { memberAt<guint32Var>(20).value = value }
    
    var x: gdouble
        get() = memberAt<gdoubleVar>(24).value
        set(value) { memberAt<gdoubleVar>(24).value = value }
    
    var y: gdouble
        get() = memberAt<gdoubleVar>(32).value
        set(value) { memberAt<gdoubleVar>(32).value = value }
    
    var dx: gdouble
        get() = memberAt<gdoubleVar>(40).value
        set(value) { memberAt<gdoubleVar>(40).value = value }
    
    var dy: gdouble
        get() = memberAt<gdoubleVar>(48).value
        set(value) { memberAt<gdoubleVar>(48).value = value }
    
    var angle_delta: gdouble
        get() = memberAt<gdoubleVar>(56).value
        set(value) { memberAt<gdoubleVar>(56).value = value }
    
    var scale: gdouble
        get() = memberAt<gdoubleVar>(64).value
        set(value) { memberAt<gdoubleVar>(64).value = value }
    
    var x_root: gdouble
        get() = memberAt<gdoubleVar>(72).value
        set(value) { memberAt<gdoubleVar>(72).value = value }
    
    var y_root: gdouble
        get() = memberAt<gdoubleVar>(80).value
        set(value) { memberAt<gdoubleVar>(80).value = value }
    
    var state: guint
        get() = memberAt<guintVar>(88).value
        set(value) { memberAt<guintVar>(88).value = value }
}

@CStruct("struct { int p0; void* p1; signed char p2; unsigned int p3; unsigned int p4; unsigned int p5; unsigned int p6; }")
class _GdkEventPadButton(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    var type: GdkEventType
        get() = memberAt<GdkEventTypeVar>(0).value
        set(value) { memberAt<GdkEventTypeVar>(0).value = value }
    
    var window: CPointer<GdkWindow>?
        get() = memberAt<CPointerVar<GdkWindow>>(8).value
        set(value) { memberAt<CPointerVar<GdkWindow>>(8).value = value }
    
    var send_event: gint8
        get() = memberAt<gint8Var>(16).value
        set(value) { memberAt<gint8Var>(16).value = value }
    
    var time: guint32
        get() = memberAt<guint32Var>(20).value
        set(value) { memberAt<guint32Var>(20).value = value }
    
    var group: guint
        get() = memberAt<guintVar>(24).value
        set(value) { memberAt<guintVar>(24).value = value }
    
    var button: guint
        get() = memberAt<guintVar>(28).value
        set(value) { memberAt<guintVar>(28).value = value }
    
    var mode: guint
        get() = memberAt<guintVar>(32).value
        set(value) { memberAt<guintVar>(32).value = value }
}

@CStruct("struct { int p0; void* p1; signed char p2; unsigned int p3; unsigned int p4; unsigned int p5; unsigned int p6; double p7; }")
class _GdkEventPadAxis(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    var type: GdkEventType
        get() = memberAt<GdkEventTypeVar>(0).value
        set(value) { memberAt<GdkEventTypeVar>(0).value = value }
    
    var window: CPointer<GdkWindow>?
        get() = memberAt<CPointerVar<GdkWindow>>(8).value
        set(value) { memberAt<CPointerVar<GdkWindow>>(8).value = value }
    
    var send_event: gint8
        get() = memberAt<gint8Var>(16).value
        set(value) { memberAt<gint8Var>(16).value = value }
    
    var time: guint32
        get() = memberAt<guint32Var>(20).value
        set(value) { memberAt<guint32Var>(20).value = value }
    
    var group: guint
        get() = memberAt<guintVar>(24).value
        set(value) { memberAt<guintVar>(24).value = value }
    
    var index: guint
        get() = memberAt<guintVar>(28).value
        set(value) { memberAt<guintVar>(28).value = value }
    
    var mode: guint
        get() = memberAt<guintVar>(32).value
        set(value) { memberAt<guintVar>(32).value = value }
    
    var value: gdouble
        get() = memberAt<gdoubleVar>(40).value
        set(value) { memberAt<gdoubleVar>(40).value = value }
}

@CStruct("struct { int p0; void* p1; signed char p2; unsigned int p3; unsigned int p4; unsigned int p5; }")
class _GdkEventPadGroupMode(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    var type: GdkEventType
        get() = memberAt<GdkEventTypeVar>(0).value
        set(value) { memberAt<GdkEventTypeVar>(0).value = value }
    
    var window: CPointer<GdkWindow>?
        get() = memberAt<CPointerVar<GdkWindow>>(8).value
        set(value) { memberAt<CPointerVar<GdkWindow>>(8).value = value }
    
    var send_event: gint8
        get() = memberAt<gint8Var>(16).value
        set(value) { memberAt<gint8Var>(16).value = value }
    
    var time: guint32
        get() = memberAt<guint32Var>(20).value
        set(value) { memberAt<guint32Var>(20).value = value }
    
    var group: guint
        get() = memberAt<guintVar>(24).value
        set(value) { memberAt<guintVar>(24).value = value }
    
    var mode: guint
        get() = memberAt<guintVar>(28).value
        set(value) { memberAt<guintVar>(28).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; void* p2; void* p3; unsigned int p4; void* p5; unsigned int p6; }")
class _AtkObject(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(72, 8)
    
    val parent: GObject
        get() = memberAt(0)
    
    var description: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(24).value
        set(value) { memberAt<CPointerVar<gcharVar>>(24).value = value }
    
    var name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(32).value
        set(value) { memberAt<CPointerVar<gcharVar>>(32).value = value }
    
    var accessible_parent: CPointer<AtkObject>?
        get() = memberAt<CPointerVar<AtkObject>>(40).value
        set(value) { memberAt<CPointerVar<AtkObject>>(40).value = value }
    
    var role: AtkRole
        get() = memberAt<AtkRoleVar>(48).value
        set(value) { memberAt<AtkRoleVar>(48).value = value }
    
    var relation_set: CPointer<AtkRelationSet>?
        get() = memberAt<CPointerVar<AtkRelationSet>>(56).value
        set(value) { memberAt<CPointerVar<AtkRelationSet>>(56).value = value }
    
    var layer: AtkLayer
        get() = memberAt<AtkLayer.Var>(64).value
        set(value) { memberAt<AtkLayer.Var>(64).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _AtkRelationSet(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent: GObject
        get() = memberAt(0)
    
    var relations: CPointer<GPtrArray>?
        get() = memberAt<CPointerVar<GPtrArray>>(24).value
        set(value) { memberAt<CPointerVar<GPtrArray>>(24).value = value }
}

@CStruct("struct { double p0; double p1; double p2; double p3; }")
class _GdkRGBA(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    var red: gdouble
        get() = memberAt<gdoubleVar>(0).value
        set(value) { memberAt<gdoubleVar>(0).value = value }
    
    var green: gdouble
        get() = memberAt<gdoubleVar>(8).value
        set(value) { memberAt<gdoubleVar>(8).value = value }
    
    var blue: gdouble
        get() = memberAt<gdoubleVar>(16).value
        set(value) { memberAt<gdoubleVar>(16).value = value }
    
    var alpha: gdouble
        get() = memberAt<gdoubleVar>(24).value
        set(value) { memberAt<gdoubleVar>(24).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GtkApplication(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val parent: GApplication
        get() = memberAt(0)
    
    var priv: CPointer<GtkApplicationPrivate>?
        get() = memberAt<CPointerVar<GtkApplicationPrivate>>(32).value
        set(value) { memberAt<CPointerVar<GtkApplicationPrivate>>(32).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15[8]; } p0; void* p1; void* p2; void* p3[12]; }")
class _GtkApplicationClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(424, 8)
    
    val parent_class: GApplicationClass
        get() = memberAt(0)
    
    var window_added: CPointer<CFunction<(CPointer<GtkApplication>?, CPointer<GtkWindow>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkApplication>?, CPointer<GtkWindow>?) -> Unit>>>(312).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkApplication>?, CPointer<GtkWindow>?) -> Unit>>>(312).value = value }
    
    var window_removed: CPointer<CFunction<(CPointer<GtkApplication>?, CPointer<GtkWindow>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkApplication>?, CPointer<GtkWindow>?) -> Unit>>>(320).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkApplication>?, CPointer<GtkWindow>?) -> Unit>>>(320).value = value }
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(328)
}

class _GtkContainerClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(976, 8)
    
    val parent_class: GtkWidgetClass
        get() = memberAt(0)
    
    var add: CPointer<CFunction<(CPointer<GtkContainer>?, CPointer<GtkWidget>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkContainer>?, CPointer<GtkWidget>?) -> Unit>>>(824).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkContainer>?, CPointer<GtkWidget>?) -> Unit>>>(824).value = value }
    
    var remove: CPointer<CFunction<(CPointer<GtkContainer>?, CPointer<GtkWidget>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkContainer>?, CPointer<GtkWidget>?) -> Unit>>>(832).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkContainer>?, CPointer<GtkWidget>?) -> Unit>>>(832).value = value }
    
    var check_resize: CPointer<CFunction<(CPointer<GtkContainer>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkContainer>?) -> Unit>>>(840).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkContainer>?) -> Unit>>>(840).value = value }
    
    var forall: CPointer<CFunction<(CPointer<GtkContainer>?, gboolean, GtkCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkContainer>?, gboolean, GtkCallback?, gpointer?) -> Unit>>>(848).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkContainer>?, gboolean, GtkCallback?, gpointer?) -> Unit>>>(848).value = value }
    
    var set_focus_child: CPointer<CFunction<(CPointer<GtkContainer>?, CPointer<GtkWidget>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkContainer>?, CPointer<GtkWidget>?) -> Unit>>>(856).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkContainer>?, CPointer<GtkWidget>?) -> Unit>>>(856).value = value }
    
    var child_type: CPointer<CFunction<(CPointer<GtkContainer>?) -> GType>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkContainer>?) -> GType>>>(864).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkContainer>?) -> GType>>>(864).value = value }
    
    var composite_name: CPointer<CFunction<(CPointer<GtkContainer>?, CPointer<GtkWidget>?) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkContainer>?, CPointer<GtkWidget>?) -> CPointer<gcharVar>?>>>(872).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkContainer>?, CPointer<GtkWidget>?) -> CPointer<gcharVar>?>>>(872).value = value }
    
    var set_child_property: CPointer<CFunction<(CPointer<GtkContainer>?, CPointer<GtkWidget>?, guint, CPointer<GValue>?, CPointer<GParamSpec>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkContainer>?, CPointer<GtkWidget>?, guint, CPointer<GValue>?, CPointer<GParamSpec>?) -> Unit>>>(880).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkContainer>?, CPointer<GtkWidget>?, guint, CPointer<GValue>?, CPointer<GParamSpec>?) -> Unit>>>(880).value = value }
    
    var get_child_property: CPointer<CFunction<(CPointer<GtkContainer>?, CPointer<GtkWidget>?, guint, CPointer<GValue>?, CPointer<GParamSpec>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkContainer>?, CPointer<GtkWidget>?, guint, CPointer<GValue>?, CPointer<GParamSpec>?) -> Unit>>>(888).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkContainer>?, CPointer<GtkWidget>?, guint, CPointer<GValue>?, CPointer<GParamSpec>?) -> Unit>>>(888).value = value }
    
    var get_path_for_child: CPointer<CFunction<(CPointer<GtkContainer>?, CPointer<GtkWidget>?) -> CPointer<GtkWidgetPath>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkContainer>?, CPointer<GtkWidget>?) -> CPointer<GtkWidgetPath>?>>>(896).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkContainer>?, CPointer<GtkWidget>?) -> CPointer<GtkWidgetPath>?>>>(896).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(912).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(912).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(920).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(920).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(928).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(928).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(936).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(936).value = value }
    
    var _gtk_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(944).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(944).value = value }
    
    var _gtk_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(952).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(952).value = value }
    
    var _gtk_reserved7: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(960).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(960).value = value }
    
    var _gtk_reserved8: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(968).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(968).value = value }
    
    var _handle_border_width: UInt
        get() = readBits(this.rawPtr, 7232, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 7232, 1, value.toLong()) }
}

@CStruct("struct { null p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkBinClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1008, 8)
    
    val parent_class: GtkContainerClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(976).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(976).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(984).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(984).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(992).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(992).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1000).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1000).value = value }
}

@CStruct("struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; }")
class _GtkWindowClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1072, 8)
    
    val parent_class: GtkBinClass
        get() = memberAt(0)
    
    var set_focus: CPointer<CFunction<(CPointer<GtkWindow>?, CPointer<GtkWidget>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWindow>?, CPointer<GtkWidget>?) -> Unit>>>(1008).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWindow>?, CPointer<GtkWidget>?) -> Unit>>>(1008).value = value }
    
    var activate_focus: CPointer<CFunction<(CPointer<GtkWindow>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWindow>?) -> Unit>>>(1016).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWindow>?) -> Unit>>>(1016).value = value }
    
    var activate_default: CPointer<CFunction<(CPointer<GtkWindow>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWindow>?) -> Unit>>>(1024).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWindow>?) -> Unit>>>(1024).value = value }
    
    var keys_changed: CPointer<CFunction<(CPointer<GtkWindow>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWindow>?) -> Unit>>>(1032).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWindow>?) -> Unit>>>(1032).value = value }
    
    var enable_debugging: CPointer<CFunction<(CPointer<GtkWindow>?, gboolean) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkWindow>?, gboolean) -> gboolean>>>(1040).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkWindow>?, gboolean) -> gboolean>>>(1040).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1048).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1048).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1056).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1056).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1064).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1064).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GtkWindowGroup(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GtkWindowGroupPrivate>?
        get() = memberAt<CPointerVar<GtkWindowGroupPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GtkWindowGroupPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkWindowGroupClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(168, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(136).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
}

@CStruct("struct { int p0; int p1; int p2; int p3; int p4; int p5; int p6; int p7; double p8; double p9; unsigned int p10; }")
class _GdkGeometry(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    var min_width: gint
        get() = memberAt<gintVar>(0).value
        set(value) { memberAt<gintVar>(0).value = value }
    
    var min_height: gint
        get() = memberAt<gintVar>(4).value
        set(value) { memberAt<gintVar>(4).value = value }
    
    var max_width: gint
        get() = memberAt<gintVar>(8).value
        set(value) { memberAt<gintVar>(8).value = value }
    
    var max_height: gint
        get() = memberAt<gintVar>(12).value
        set(value) { memberAt<gintVar>(12).value = value }
    
    var base_width: gint
        get() = memberAt<gintVar>(16).value
        set(value) { memberAt<gintVar>(16).value = value }
    
    var base_height: gint
        get() = memberAt<gintVar>(20).value
        set(value) { memberAt<gintVar>(20).value = value }
    
    var width_inc: gint
        get() = memberAt<gintVar>(24).value
        set(value) { memberAt<gintVar>(24).value = value }
    
    var height_inc: gint
        get() = memberAt<gintVar>(28).value
        set(value) { memberAt<gintVar>(28).value = value }
    
    var min_aspect: gdouble
        get() = memberAt<gdoubleVar>(32).value
        set(value) { memberAt<gdoubleVar>(32).value = value }
    
    var max_aspect: gdouble
        get() = memberAt<gdoubleVar>(40).value
        set(value) { memberAt<gdoubleVar>(40).value = value }
    
    var win_gravity: GdkGravity
        get() = memberAt<GdkGravityVar>(48).value
        set(value) { memberAt<GdkGravityVar>(48).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkDialog(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(64, 8)
    
    val window: GtkWindow
        get() = memberAt(0)
    
    var priv: CPointer<GtkDialogPrivate>?
        get() = memberAt<CPointerVar<GtkDialogPrivate>>(56).value
        set(value) { memberAt<CPointerVar<GtkDialogPrivate>>(56).value = value }
}

@CStruct("struct { struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; }")
class _GtkDialogClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1120, 8)
    
    val parent_class: GtkWindowClass
        get() = memberAt(0)
    
    var response: CPointer<CFunction<(CPointer<GtkDialog>?, gint) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkDialog>?, gint) -> Unit>>>(1072).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkDialog>?, gint) -> Unit>>>(1072).value = value }
    
    var close: CPointer<CFunction<(CPointer<GtkDialog>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkDialog>?) -> Unit>>>(1080).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkDialog>?) -> Unit>>>(1080).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1088).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1088).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1096).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1096).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1104).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1104).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1112).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1112).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkAboutDialog(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(72, 8)
    
    val parent_instance: GtkDialog
        get() = memberAt(0)
    
    var priv: CPointer<GtkAboutDialogPrivate>?
        get() = memberAt<CPointerVar<GtkAboutDialogPrivate>>(64).value
        set(value) { memberAt<CPointerVar<GtkAboutDialogPrivate>>(64).value = value }
}

@CStruct("struct { struct { struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GtkAboutDialogClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1160, 8)
    
    val parent_class: GtkDialogClass
        get() = memberAt(0)
    
    var activate_link: CPointer<CFunction<(CPointer<GtkAboutDialog>?, CPointer<gcharVar>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkAboutDialog>?, CPointer<gcharVar>?) -> gboolean>>>(1120).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkAboutDialog>?, CPointer<gcharVar>?) -> gboolean>>>(1120).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1128).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1128).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1136).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1136).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1144).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1152).value = value }
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkMenuShell(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val container: GtkContainer
        get() = memberAt(0)
    
    var priv: CPointer<GtkMenuShellPrivate>?
        get() = memberAt<CPointerVar<GtkMenuShellPrivate>>(40).value
        set(value) { memberAt<CPointerVar<GtkMenuShellPrivate>>(40).value = value }
}

class _GtkMenuShellClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1088, 8)
    
    val parent_class: GtkContainerClass
        get() = memberAt(0)
    
    var deactivate: CPointer<CFunction<(CPointer<GtkMenuShell>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkMenuShell>?) -> Unit>>>(984).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkMenuShell>?) -> Unit>>>(984).value = value }
    
    var selection_done: CPointer<CFunction<(CPointer<GtkMenuShell>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkMenuShell>?) -> Unit>>>(992).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkMenuShell>?) -> Unit>>>(992).value = value }
    
    var move_current: CPointer<CFunction<(CPointer<GtkMenuShell>?, GtkMenuDirectionType) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkMenuShell>?, GtkMenuDirectionType) -> Unit>>>(1000).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkMenuShell>?, GtkMenuDirectionType) -> Unit>>>(1000).value = value }
    
    var activate_current: CPointer<CFunction<(CPointer<GtkMenuShell>?, gboolean) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkMenuShell>?, gboolean) -> Unit>>>(1008).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkMenuShell>?, gboolean) -> Unit>>>(1008).value = value }
    
    var cancel: CPointer<CFunction<(CPointer<GtkMenuShell>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkMenuShell>?) -> Unit>>>(1016).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkMenuShell>?) -> Unit>>>(1016).value = value }
    
    var select_item: CPointer<CFunction<(CPointer<GtkMenuShell>?, CPointer<GtkWidget>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkMenuShell>?, CPointer<GtkWidget>?) -> Unit>>>(1024).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkMenuShell>?, CPointer<GtkWidget>?) -> Unit>>>(1024).value = value }
    
    var insert: CPointer<CFunction<(CPointer<GtkMenuShell>?, CPointer<GtkWidget>?, gint) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkMenuShell>?, CPointer<GtkWidget>?, gint) -> Unit>>>(1032).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkMenuShell>?, CPointer<GtkWidget>?, gint) -> Unit>>>(1032).value = value }
    
    var get_popup_delay: CPointer<CFunction<(CPointer<GtkMenuShell>?) -> gint>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkMenuShell>?) -> gint>>>(1040).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkMenuShell>?) -> gint>>>(1040).value = value }
    
    var move_selected: CPointer<CFunction<(CPointer<GtkMenuShell>?, gint) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkMenuShell>?, gint) -> gboolean>>>(1048).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkMenuShell>?, gint) -> gboolean>>>(1048).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1056).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1056).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1064).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1064).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1072).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1072).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1080).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1080).value = value }
    
    var submenu_placement: guint
        get() = readBits(this.rawPtr, 7808, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 7808, 1, value.toLong()) }
}

@CStruct("struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkMenu(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val menu_shell: GtkMenuShell
        get() = memberAt(0)
    
    var priv: CPointer<GtkMenuPrivate>?
        get() = memberAt<CPointerVar<GtkMenuPrivate>>(48).value
        set(value) { memberAt<CPointerVar<GtkMenuPrivate>>(48).value = value }
}

@CStruct("struct { null p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkMenuClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1120, 8)
    
    val parent_class: GtkMenuShellClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1088).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1088).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1096).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1096).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1104).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1104).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1112).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1112).value = value }
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkLabel(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val misc: GtkMisc
        get() = memberAt(0)
    
    var priv: CPointer<GtkLabelPrivate>?
        get() = memberAt<CPointerVar<GtkLabelPrivate>>(40).value
        set(value) { memberAt<CPointerVar<GtkLabelPrivate>>(40).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GtkMisc(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val widget: GtkWidget
        get() = memberAt(0)
    
    var priv: CPointer<GtkMiscPrivate>?
        get() = memberAt<CPointerVar<GtkMiscPrivate>>(32).value
        set(value) { memberAt<CPointerVar<GtkMiscPrivate>>(32).value = value }
}

@CStruct("struct { struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; unsigned int p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; void* p23; void* p24; void* p25; void* p26; void* p27; void* p28; void* p29; void* p30; void* p31; void* p32; void* p33; void* p34; void* p35; void* p36; void* p37; void* p38; void* p39; void* p40; void* p41; void* p42; void* p43; void* p44; void* p45; void* p46; void* p47; void* p48; void* p49; void* p50; void* p51; void* p52; void* p53; void* p54; void* p55; void* p56; void* p57; void* p58; void* p59; void* p60; void* p61; void* p62; void* p63; void* p64; void* p65; void* p66; void* p67; void* p68; void* p69; void* p70; void* p71; void* p72; void* p73; void* p74; void* p75; void* p76; void* p77; void* p78; void* p79; void* p80; void* p81; void* p82; void* p83; void* p84; void* p85; void* p86; } p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; }")
class _GtkLabelClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(952, 8)
    
    val parent_class: GtkMiscClass
        get() = memberAt(0)
    
    var move_cursor: CPointer<CFunction<(CPointer<GtkLabel>?, GtkMovementStep, gint, gboolean) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkLabel>?, GtkMovementStep, gint, gboolean) -> Unit>>>(856).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkLabel>?, GtkMovementStep, gint, gboolean) -> Unit>>>(856).value = value }
    
    var copy_clipboard: CPointer<CFunction<(CPointer<GtkLabel>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkLabel>?) -> Unit>>>(864).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkLabel>?) -> Unit>>>(864).value = value }
    
    var populate_popup: CPointer<CFunction<(CPointer<GtkLabel>?, CPointer<GtkMenu>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkLabel>?, CPointer<GtkMenu>?) -> Unit>>>(872).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkLabel>?, CPointer<GtkMenu>?) -> Unit>>>(872).value = value }
    
    var activate_link: CPointer<CFunction<(CPointer<GtkLabel>?, CPointer<gcharVar>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkLabel>?, CPointer<gcharVar>?) -> gboolean>>>(880).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkLabel>?, CPointer<gcharVar>?) -> gboolean>>>(880).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(888).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(888).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(896).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(896).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(904).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(904).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(912).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(912).value = value }
    
    var _gtk_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(920).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(920).value = value }
    
    var _gtk_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(928).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(928).value = value }
    
    var _gtk_reserved7: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(936).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(936).value = value }
    
    var _gtk_reserved8: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(944).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(944).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; unsigned int p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; void* p23; void* p24; void* p25; void* p26; void* p27; void* p28; void* p29; void* p30; void* p31; void* p32; void* p33; void* p34; void* p35; void* p36; void* p37; void* p38; void* p39; void* p40; void* p41; void* p42; void* p43; void* p44; void* p45; void* p46; void* p47; void* p48; void* p49; void* p50; void* p51; void* p52; void* p53; void* p54; void* p55; void* p56; void* p57; void* p58; void* p59; void* p60; void* p61; void* p62; void* p63; void* p64; void* p65; void* p66; void* p67; void* p68; void* p69; void* p70; void* p71; void* p72; void* p73; void* p74; void* p75; void* p76; void* p77; void* p78; void* p79; void* p80; void* p81; void* p82; void* p83; void* p84; void* p85; void* p86; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkMiscClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(856, 8)
    
    val parent_class: GtkWidgetClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(824).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(824).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(832).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(832).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(840).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(840).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(848).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(848).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkAccelLabel(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val label: GtkLabel
        get() = memberAt(0)
    
    var priv: CPointer<GtkAccelLabelPrivate>?
        get() = memberAt<CPointerVar<GtkAccelLabelPrivate>>(48).value
        set(value) { memberAt<CPointerVar<GtkAccelLabelPrivate>>(48).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; unsigned int p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; void* p23; void* p24; void* p25; void* p26; void* p27; void* p28; void* p29; void* p30; void* p31; void* p32; void* p33; void* p34; void* p35; void* p36; void* p37; void* p38; void* p39; void* p40; void* p41; void* p42; void* p43; void* p44; void* p45; void* p46; void* p47; void* p48; void* p49; void* p50; void* p51; void* p52; void* p53; void* p54; void* p55; void* p56; void* p57; void* p58; void* p59; void* p60; void* p61; void* p62; void* p63; void* p64; void* p65; void* p66; void* p67; void* p68; void* p69; void* p70; void* p71; void* p72; void* p73; void* p74; void* p75; void* p76; void* p77; void* p78; void* p79; void* p80; void* p81; void* p82; void* p83; void* p84; void* p85; void* p86; } p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; }")
class _GtkAccelLabelClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1032, 8)
    
    val parent_class: GtkLabelClass
        get() = memberAt(0)
    
    var signal_quote1: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(952).value
        set(value) { memberAt<CPointerVar<gcharVar>>(952).value = value }
    
    var signal_quote2: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(960).value
        set(value) { memberAt<CPointerVar<gcharVar>>(960).value = value }
    
    var mod_name_shift: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(968).value
        set(value) { memberAt<CPointerVar<gcharVar>>(968).value = value }
    
    var mod_name_control: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(976).value
        set(value) { memberAt<CPointerVar<gcharVar>>(976).value = value }
    
    var mod_name_alt: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(984).value
        set(value) { memberAt<CPointerVar<gcharVar>>(984).value = value }
    
    var mod_separator: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(992).value
        set(value) { memberAt<CPointerVar<gcharVar>>(992).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1000).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1000).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1008).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1008).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value = value }
}

@CStruct("struct { void* p0; unsigned int p1; unsigned int p2; void* p3; void* p4; void* p5; unsigned int p6; union { void* p0; void* p1; unsigned long p2; unsigned long p3; unsigned long p4; unsigned long p5; double p6; unsigned long p7; void* p8; void* p9; unsigned char p10; unsigned int p11; } p7; unsigned int p8; unsigned int p9; unsigned int p10; union { void* p0; void* p1; unsigned long p2; unsigned long p3; unsigned long p4; unsigned long p5; double p6; unsigned long p7; void* p8; void* p9; unsigned char p10; unsigned int p11; } p11; unsigned int p12; unsigned int p13; void* p14; int p15; void* p16; void* p17; void* p18; unsigned int p19; void* p20; }")
class _GScanner(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(144, 8)
    
    var user_data: gpointer?
        get() = memberAt<gpointerVar>(0).value
        set(value) { memberAt<gpointerVar>(0).value = value }
    
    var max_parse_errors: guint
        get() = memberAt<guintVar>(8).value
        set(value) { memberAt<guintVar>(8).value = value }
    
    var parse_errors: guint
        get() = memberAt<guintVar>(12).value
        set(value) { memberAt<guintVar>(12).value = value }
    
    var input_name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(16).value
        set(value) { memberAt<CPointerVar<gcharVar>>(16).value = value }
    
    var qdata: CPointer<GData>?
        get() = memberAt<CPointerVar<GData>>(24).value
        set(value) { memberAt<CPointerVar<GData>>(24).value = value }
    
    var config: CPointer<GScannerConfig>?
        get() = memberAt<CPointerVar<GScannerConfig>>(32).value
        set(value) { memberAt<CPointerVar<GScannerConfig>>(32).value = value }
    
    var token: GTokenType
        get() = memberAt<GTokenTypeVar>(40).value
        set(value) { memberAt<GTokenTypeVar>(40).value = value }
    
    val value: GTokenValue
        get() = memberAt(48)
    
    var line: guint
        get() = memberAt<guintVar>(56).value
        set(value) { memberAt<guintVar>(56).value = value }
    
    var position: guint
        get() = memberAt<guintVar>(60).value
        set(value) { memberAt<guintVar>(60).value = value }
    
    var next_token: GTokenType
        get() = memberAt<GTokenTypeVar>(64).value
        set(value) { memberAt<GTokenTypeVar>(64).value = value }
    
    val next_value: GTokenValue
        get() = memberAt(72)
    
    var next_line: guint
        get() = memberAt<guintVar>(80).value
        set(value) { memberAt<guintVar>(80).value = value }
    
    var next_position: guint
        get() = memberAt<guintVar>(84).value
        set(value) { memberAt<guintVar>(84).value = value }
    
    var symbol_table: CPointer<GHashTable>?
        get() = memberAt<CPointerVar<GHashTable>>(88).value
        set(value) { memberAt<CPointerVar<GHashTable>>(88).value = value }
    
    var input_fd: gint
        get() = memberAt<gintVar>(96).value
        set(value) { memberAt<gintVar>(96).value = value }
    
    var text: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(104).value
        set(value) { memberAt<CPointerVar<gcharVar>>(104).value = value }
    
    var text_end: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(112).value
        set(value) { memberAt<CPointerVar<gcharVar>>(112).value = value }
    
    var buffer: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(120).value
        set(value) { memberAt<CPointerVar<gcharVar>>(120).value = value }
    
    var scope_id: guint
        get() = memberAt<guintVar>(128).value
        set(value) { memberAt<guintVar>(128).value = value }
    
    var msg_handler: GScannerMsgFunc?
        get() = memberAt<GScannerMsgFuncVar>(136).value
        set(value) { memberAt<GScannerMsgFuncVar>(136).value = value }
}

class _GScannerConfig(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    var cset_skip_characters: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(0).value
        set(value) { memberAt<CPointerVar<gcharVar>>(0).value = value }
    
    var cset_identifier_first: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(8).value
        set(value) { memberAt<CPointerVar<gcharVar>>(8).value = value }
    
    var cset_identifier_nth: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(16).value
        set(value) { memberAt<CPointerVar<gcharVar>>(16).value = value }
    
    var cpair_comment_single: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(24).value
        set(value) { memberAt<CPointerVar<gcharVar>>(24).value = value }
    
    var padding_dummy: guint
        get() = memberAt<guintVar>(36).value
        set(value) { memberAt<guintVar>(36).value = value }
    
    var case_sensitive: guint
        get() = readBits(this.rawPtr, 256, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 256, 1, value.toLong()) }
    
    var skip_comment_multi: guint
        get() = readBits(this.rawPtr, 257, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 257, 1, value.toLong()) }
    
    var skip_comment_single: guint
        get() = readBits(this.rawPtr, 258, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 258, 1, value.toLong()) }
    
    var scan_comment_multi: guint
        get() = readBits(this.rawPtr, 259, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 259, 1, value.toLong()) }
    
    var scan_identifier: guint
        get() = readBits(this.rawPtr, 260, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 260, 1, value.toLong()) }
    
    var scan_identifier_1char: guint
        get() = readBits(this.rawPtr, 261, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 261, 1, value.toLong()) }
    
    var scan_identifier_NULL: guint
        get() = readBits(this.rawPtr, 262, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 262, 1, value.toLong()) }
    
    var scan_symbols: guint
        get() = readBits(this.rawPtr, 263, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 263, 1, value.toLong()) }
    
    var scan_binary: guint
        get() = readBits(this.rawPtr, 264, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 264, 1, value.toLong()) }
    
    var scan_octal: guint
        get() = readBits(this.rawPtr, 265, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 265, 1, value.toLong()) }
    
    var scan_float: guint
        get() = readBits(this.rawPtr, 266, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 266, 1, value.toLong()) }
    
    var scan_hex: guint
        get() = readBits(this.rawPtr, 267, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 267, 1, value.toLong()) }
    
    var scan_hex_dollar: guint
        get() = readBits(this.rawPtr, 268, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 268, 1, value.toLong()) }
    
    var scan_string_sq: guint
        get() = readBits(this.rawPtr, 269, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 269, 1, value.toLong()) }
    
    var scan_string_dq: guint
        get() = readBits(this.rawPtr, 270, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 270, 1, value.toLong()) }
    
    var numbers_2_int: guint
        get() = readBits(this.rawPtr, 271, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 271, 1, value.toLong()) }
    
    var int_2_float: guint
        get() = readBits(this.rawPtr, 272, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 272, 1, value.toLong()) }
    
    var identifier_2_string: guint
        get() = readBits(this.rawPtr, 273, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 273, 1, value.toLong()) }
    
    var char_2_token: guint
        get() = readBits(this.rawPtr, 274, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 274, 1, value.toLong()) }
    
    var symbol_2_token: guint
        get() = readBits(this.rawPtr, 275, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 275, 1, value.toLong()) }
    
    var scope_0_fallback: guint
        get() = readBits(this.rawPtr, 276, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 276, 1, value.toLong()) }
    
    var store_int64: guint
        get() = readBits(this.rawPtr, 277, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 277, 1, value.toLong()) }
}

@CStruct("union { void* p0; void* p1; unsigned long p2; unsigned long p3; unsigned long p4; unsigned long p5; double p6; unsigned long p7; void* p8; void* p9; unsigned char p10; unsigned int p11; }")
class _GTokenValue(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(8, 8)
    
    var v_symbol: gpointer?
        get() = memberAt<gpointerVar>(0).value
        set(value) { memberAt<gpointerVar>(0).value = value }
    
    var v_identifier: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(0).value
        set(value) { memberAt<CPointerVar<gcharVar>>(0).value = value }
    
    var v_binary: gulong
        get() = memberAt<gulongVar>(0).value
        set(value) { memberAt<gulongVar>(0).value = value }
    
    var v_octal: gulong
        get() = memberAt<gulongVar>(0).value
        set(value) { memberAt<gulongVar>(0).value = value }
    
    var v_int: gulong
        get() = memberAt<gulongVar>(0).value
        set(value) { memberAt<gulongVar>(0).value = value }
    
    var v_int64: guint64
        get() = memberAt<guint64Var>(0).value
        set(value) { memberAt<guint64Var>(0).value = value }
    
    var v_float: gdouble
        get() = memberAt<gdoubleVar>(0).value
        set(value) { memberAt<gdoubleVar>(0).value = value }
    
    var v_hex: gulong
        get() = memberAt<gulongVar>(0).value
        set(value) { memberAt<gulongVar>(0).value = value }
    
    var v_string: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(0).value
        set(value) { memberAt<CPointerVar<gcharVar>>(0).value = value }
    
    var v_comment: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(0).value
        set(value) { memberAt<CPointerVar<gcharVar>>(0).value = value }
    
    var v_char: guchar
        get() = memberAt<gucharVar>(0).value
        set(value) { memberAt<gucharVar>(0).value = value }
    
    var v_error: guint
        get() = memberAt<guintVar>(0).value
        set(value) { memberAt<guintVar>(0).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; void* p2; void* p3; unsigned int p4; void* p5; unsigned int p6; } p0; void* p1; }")
class _GtkAccessible(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(80, 8)
    
    val parent: AtkObject
        get() = memberAt(0)
    
    var priv: CPointer<GtkAccessiblePrivate>?
        get() = memberAt<CPointerVar<GtkAccessiblePrivate>>(72).value
        set(value) { memberAt<CPointerVar<GtkAccessiblePrivate>>(72).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; void* p23; void* p24; void* p25; void* p26; void* p27; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GtkAccessibleClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(392, 8)
    
    val parent_class: AtkObjectClass
        get() = memberAt(0)
    
    var connect_widget_destroyed: CPointer<CFunction<(CPointer<GtkAccessible>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkAccessible>?) -> Unit>>>(352).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkAccessible>?) -> Unit>>>(352).value = value }
    
    var widget_set: CPointer<CFunction<(CPointer<GtkAccessible>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkAccessible>?) -> Unit>>>(360).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkAccessible>?) -> Unit>>>(360).value = value }
    
    var widget_unset: CPointer<CFunction<(CPointer<GtkAccessible>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkAccessible>?) -> Unit>>>(368).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkAccessible>?) -> Unit>>>(368).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(376).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(376).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(384).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(384).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; void* p23; void* p24; void* p25; void* p26; void* p27; }")
class _AtkObjectClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(352, 8)
    
    val parent: GObjectClass
        get() = memberAt(0)
    
    var get_name: CPointer<CFunction<(CPointer<AtkObject>?) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?) -> CPointer<gcharVar>?>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?) -> CPointer<gcharVar>?>>>(136).value = value }
    
    var get_description: CPointer<CFunction<(CPointer<AtkObject>?) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?) -> CPointer<gcharVar>?>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?) -> CPointer<gcharVar>?>>>(144).value = value }
    
    var get_parent: CPointer<CFunction<(CPointer<AtkObject>?) -> CPointer<AtkObject>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?) -> CPointer<AtkObject>?>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?) -> CPointer<AtkObject>?>>>(152).value = value }
    
    var get_n_children: CPointer<CFunction<(CPointer<AtkObject>?) -> gint>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?) -> gint>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?) -> gint>>>(160).value = value }
    
    var ref_child: CPointer<CFunction<(CPointer<AtkObject>?, gint) -> CPointer<AtkObject>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?, gint) -> CPointer<AtkObject>?>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?, gint) -> CPointer<AtkObject>?>>>(168).value = value }
    
    var get_index_in_parent: CPointer<CFunction<(CPointer<AtkObject>?) -> gint>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?) -> gint>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?) -> gint>>>(176).value = value }
    
    var ref_relation_set: CPointer<CFunction<(CPointer<AtkObject>?) -> CPointer<AtkRelationSet>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?) -> CPointer<AtkRelationSet>?>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?) -> CPointer<AtkRelationSet>?>>>(184).value = value }
    
    var get_role: CPointer<CFunction<(CPointer<AtkObject>?) -> AtkRole>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?) -> AtkRole>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?) -> AtkRole>>>(192).value = value }
    
    var get_layer: CPointer<CFunction<(CPointer<AtkObject>?) -> AtkLayer>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?) -> AtkLayer>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?) -> AtkLayer>>>(200).value = value }
    
    var get_mdi_zorder: CPointer<CFunction<(CPointer<AtkObject>?) -> gint>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?) -> gint>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?) -> gint>>>(208).value = value }
    
    var ref_state_set: CPointer<CFunction<(CPointer<AtkObject>?) -> CPointer<AtkStateSet>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?) -> CPointer<AtkStateSet>?>>>(216).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?) -> CPointer<AtkStateSet>?>>>(216).value = value }
    
    var set_name: CPointer<CFunction<(CPointer<AtkObject>?, CPointer<gcharVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?, CPointer<gcharVar>?) -> Unit>>>(224).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?, CPointer<gcharVar>?) -> Unit>>>(224).value = value }
    
    var set_description: CPointer<CFunction<(CPointer<AtkObject>?, CPointer<gcharVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?, CPointer<gcharVar>?) -> Unit>>>(232).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?, CPointer<gcharVar>?) -> Unit>>>(232).value = value }
    
    var set_parent: CPointer<CFunction<(CPointer<AtkObject>?, CPointer<AtkObject>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?, CPointer<AtkObject>?) -> Unit>>>(240).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?, CPointer<AtkObject>?) -> Unit>>>(240).value = value }
    
    var set_role: CPointer<CFunction<(CPointer<AtkObject>?, AtkRole) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?, AtkRole) -> Unit>>>(248).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?, AtkRole) -> Unit>>>(248).value = value }
    
    var connect_property_change_handler: CPointer<CFunction<(CPointer<AtkObject>?, CPointer<AtkPropertyChangeHandlerVar>?) -> guint>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?, CPointer<AtkPropertyChangeHandlerVar>?) -> guint>>>(256).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?, CPointer<AtkPropertyChangeHandlerVar>?) -> guint>>>(256).value = value }
    
    var remove_property_change_handler: CPointer<CFunction<(CPointer<AtkObject>?, guint) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?, guint) -> Unit>>>(264).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?, guint) -> Unit>>>(264).value = value }
    
    var initialize: CPointer<CFunction<(CPointer<AtkObject>?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?, gpointer?) -> Unit>>>(272).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?, gpointer?) -> Unit>>>(272).value = value }
    
    var children_changed: CPointer<CFunction<(CPointer<AtkObject>?, guint, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?, guint, gpointer?) -> Unit>>>(280).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?, guint, gpointer?) -> Unit>>>(280).value = value }
    
    var focus_event: CPointer<CFunction<(CPointer<AtkObject>?, gboolean) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?, gboolean) -> Unit>>>(288).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?, gboolean) -> Unit>>>(288).value = value }
    
    var property_change: CPointer<CFunction<(CPointer<AtkObject>?, CPointer<AtkPropertyValues>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?, CPointer<AtkPropertyValues>?) -> Unit>>>(296).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?, CPointer<AtkPropertyValues>?) -> Unit>>>(296).value = value }
    
    var state_change: CPointer<CFunction<(CPointer<AtkObject>?, CPointer<gcharVar>?, gboolean) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?, CPointer<gcharVar>?, gboolean) -> Unit>>>(304).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?, CPointer<gcharVar>?, gboolean) -> Unit>>>(304).value = value }
    
    var visible_data_changed: CPointer<CFunction<(CPointer<AtkObject>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?) -> Unit>>>(312).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?) -> Unit>>>(312).value = value }
    
    var active_descendant_changed: CPointer<CFunction<(CPointer<AtkObject>?, CPointer<gpointerVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?, CPointer<gpointerVar>?) -> Unit>>>(320).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?, CPointer<gpointerVar>?) -> Unit>>>(320).value = value }
    
    var get_attributes: CPointer<CFunction<(CPointer<AtkObject>?) -> CPointer<AtkAttributeSet>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?) -> CPointer<AtkAttributeSet>?>>>(328).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?) -> CPointer<AtkAttributeSet>?>>>(328).value = value }
    
    var get_object_locale: CPointer<CFunction<(CPointer<AtkObject>?) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?) -> CPointer<gcharVar>?>>>(336).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<AtkObject>?) -> CPointer<gcharVar>?>>>(336).value = value }
    
    var pad1: AtkFunction?
        get() = memberAt<AtkFunctionVar>(344).value
        set(value) { memberAt<AtkFunctionVar>(344).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; }")
class _AtkStateSet(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    val parent: GObject
        get() = memberAt(0)
}

@CStruct("struct { void* p0; struct { unsigned long p0; union { int p0; unsigned int p1; long p2; unsigned long p3; long p4; unsigned long p5; float p6; double p7; void* p8; } p1[2]; } p1; struct { unsigned long p0; union { int p0; unsigned int p1; long p2; unsigned long p3; long p4; unsigned long p5; float p6; double p7; void* p8; } p1[2]; } p2; }")
class _AtkPropertyValues(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    var property_name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(0).value
        set(value) { memberAt<CPointerVar<gcharVar>>(0).value = value }
    
    val old_value: GValue
        get() = memberAt(8)
    
    val new_value: GValue
        get() = memberAt(32)
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkActionableInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var get_action_name: CPointer<CFunction<(CPointer<GtkActionable>?) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkActionable>?) -> CPointer<gcharVar>?>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkActionable>?) -> CPointer<gcharVar>?>>>(16).value = value }
    
    var set_action_name: CPointer<CFunction<(CPointer<GtkActionable>?, CPointer<gcharVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkActionable>?, CPointer<gcharVar>?) -> Unit>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkActionable>?, CPointer<gcharVar>?) -> Unit>>>(24).value = value }
    
    var get_action_target_value: CPointer<CFunction<(CPointer<GtkActionable>?) -> CPointer<GVariant>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkActionable>?) -> CPointer<GVariant>?>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkActionable>?) -> CPointer<GVariant>?>>>(32).value = value }
    
    var set_action_target_value: CPointer<CFunction<(CPointer<GtkActionable>?, CPointer<GVariant>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkActionable>?, CPointer<GVariant>?) -> Unit>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkActionable>?, CPointer<GVariant>?) -> Unit>>>(40).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; }")
class _GtkActionBar(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val bin: GtkBin
        get() = memberAt(0)
}

@CStruct("struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkActionBarClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1040, 8)
    
    val parent_class: GtkBinClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1008).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1008).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; }")
class _GtkAdjustmentClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(184, 8)
    
    val parent_class: GInitiallyUnownedClass
        get() = memberAt(0)
    
    var changed: CPointer<CFunction<(CPointer<GtkAdjustment>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkAdjustment>?) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkAdjustment>?) -> Unit>>>(136).value = value }
    
    var value_changed: CPointer<CFunction<(CPointer<GtkAdjustment>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkAdjustment>?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkAdjustment>?) -> Unit>>>(144).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkAppChooserDialog(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(72, 8)
    
    val parent: GtkDialog
        get() = memberAt(0)
    
    var priv: CPointer<GtkAppChooserDialogPrivate>?
        get() = memberAt<CPointerVar<GtkAppChooserDialogPrivate>>(64).value
        set(value) { memberAt<CPointerVar<GtkAppChooserDialogPrivate>>(64).value = value }
}

@CStruct("struct { struct { struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; } p0; void* p1[16]; }")
class _GtkAppChooserDialogClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1248, 8)
    
    val parent_class: GtkDialogClass
        get() = memberAt(0)
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(1120)
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkBox(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val container: GtkContainer
        get() = memberAt(0)
    
    var priv: CPointer<GtkBoxPrivate>?
        get() = memberAt<CPointerVar<GtkBoxPrivate>>(40).value
        set(value) { memberAt<CPointerVar<GtkBoxPrivate>>(40).value = value }
}

@CStruct("struct { null p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkBoxClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1008, 8)
    
    val parent_class: GtkContainerClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(976).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(976).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(984).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(984).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(992).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(992).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1000).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1000).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkAppChooserWidget(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val parent: GtkBox
        get() = memberAt(0)
    
    var priv: CPointer<GtkAppChooserWidgetPrivate>?
        get() = memberAt<CPointerVar<GtkAppChooserWidgetPrivate>>(48).value
        set(value) { memberAt<CPointerVar<GtkAppChooserWidgetPrivate>>(48).value = value }
}

@CStruct("struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4[16]; }")
class _GtkAppChooserWidgetClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1160, 8)
    
    val parent_class: GtkBoxClass
        get() = memberAt(0)
    
    var application_selected: CPointer<CFunction<(CPointer<GtkAppChooserWidget>?, CPointer<GAppInfo>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkAppChooserWidget>?, CPointer<GAppInfo>?) -> Unit>>>(1008).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkAppChooserWidget>?, CPointer<GAppInfo>?) -> Unit>>>(1008).value = value }
    
    var application_activated: CPointer<CFunction<(CPointer<GtkAppChooserWidget>?, CPointer<GAppInfo>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkAppChooserWidget>?, CPointer<GAppInfo>?) -> Unit>>>(1016).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkAppChooserWidget>?, CPointer<GAppInfo>?) -> Unit>>>(1016).value = value }
    
    var populate_popup: CPointer<CFunction<(CPointer<GtkAppChooserWidget>?, CPointer<GtkMenu>?, CPointer<GAppInfo>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkAppChooserWidget>?, CPointer<GtkMenu>?, CPointer<GAppInfo>?) -> Unit>>>(1024).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkAppChooserWidget>?, CPointer<GtkMenu>?, CPointer<GAppInfo>?) -> Unit>>>(1024).value = value }
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(1032)
}

@CStruct("struct { int p0; void* p1; void* p2; void* p3; }")
class _GtkTreeIter(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    var stamp: gint
        get() = memberAt<gintVar>(0).value
        set(value) { memberAt<gintVar>(0).value = value }
    
    var user_data: gpointer?
        get() = memberAt<gpointerVar>(8).value
        set(value) { memberAt<gpointerVar>(8).value = value }
    
    var user_data2: gpointer?
        get() = memberAt<gpointerVar>(16).value
        set(value) { memberAt<gpointerVar>(16).value = value }
    
    var user_data3: gpointer?
        get() = memberAt<gpointerVar>(24).value
        set(value) { memberAt<gpointerVar>(24).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; }")
class _GtkTreeModelIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(176, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var row_changed: CPointer<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreePath>?, CPointer<GtkTreeIter>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreePath>?, CPointer<GtkTreeIter>?) -> Unit>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreePath>?, CPointer<GtkTreeIter>?) -> Unit>>>(16).value = value }
    
    var row_inserted: CPointer<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreePath>?, CPointer<GtkTreeIter>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreePath>?, CPointer<GtkTreeIter>?) -> Unit>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreePath>?, CPointer<GtkTreeIter>?) -> Unit>>>(24).value = value }
    
    var row_has_child_toggled: CPointer<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreePath>?, CPointer<GtkTreeIter>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreePath>?, CPointer<GtkTreeIter>?) -> Unit>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreePath>?, CPointer<GtkTreeIter>?) -> Unit>>>(32).value = value }
    
    var row_deleted: CPointer<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreePath>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreePath>?) -> Unit>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreePath>?) -> Unit>>>(40).value = value }
    
    var rows_reordered: CPointer<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreePath>?, CPointer<GtkTreeIter>?, CPointer<gintVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreePath>?, CPointer<GtkTreeIter>?, CPointer<gintVar>?) -> Unit>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreePath>?, CPointer<GtkTreeIter>?, CPointer<gintVar>?) -> Unit>>>(48).value = value }
    
    var get_flags: CPointer<CFunction<(CPointer<GtkTreeModel>?) -> GtkTreeModelFlags>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?) -> GtkTreeModelFlags>>>(56).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?) -> GtkTreeModelFlags>>>(56).value = value }
    
    var get_n_columns: CPointer<CFunction<(CPointer<GtkTreeModel>?) -> gint>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?) -> gint>>>(64).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?) -> gint>>>(64).value = value }
    
    var get_column_type: CPointer<CFunction<(CPointer<GtkTreeModel>?, gint) -> GType>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?, gint) -> GType>>>(72).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?, gint) -> GType>>>(72).value = value }
    
    var get_iter: CPointer<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?, CPointer<GtkTreePath>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?, CPointer<GtkTreePath>?) -> gboolean>>>(80).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?, CPointer<GtkTreePath>?) -> gboolean>>>(80).value = value }
    
    var get_path: CPointer<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?) -> CPointer<GtkTreePath>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?) -> CPointer<GtkTreePath>?>>>(88).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?) -> CPointer<GtkTreePath>?>>>(88).value = value }
    
    var get_value: CPointer<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?, gint, CPointer<GValue>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?, gint, CPointer<GValue>?) -> Unit>>>(96).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?, gint, CPointer<GValue>?) -> Unit>>>(96).value = value }
    
    var iter_next: CPointer<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?) -> gboolean>>>(104).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?) -> gboolean>>>(104).value = value }
    
    var iter_previous: CPointer<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?) -> gboolean>>>(112).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?) -> gboolean>>>(112).value = value }
    
    var iter_children: CPointer<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?, CPointer<GtkTreeIter>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?, CPointer<GtkTreeIter>?) -> gboolean>>>(120).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?, CPointer<GtkTreeIter>?) -> gboolean>>>(120).value = value }
    
    var iter_has_child: CPointer<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?) -> gboolean>>>(128).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?) -> gboolean>>>(128).value = value }
    
    var iter_n_children: CPointer<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?) -> gint>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?) -> gint>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?) -> gint>>>(136).value = value }
    
    var iter_nth_child: CPointer<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?, CPointer<GtkTreeIter>?, gint) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?, CPointer<GtkTreeIter>?, gint) -> gboolean>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?, CPointer<GtkTreeIter>?, gint) -> gboolean>>>(144).value = value }
    
    var iter_parent: CPointer<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?, CPointer<GtkTreeIter>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?, CPointer<GtkTreeIter>?) -> gboolean>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?, CPointer<GtkTreeIter>?) -> gboolean>>>(152).value = value }
    
    var ref_node: CPointer<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?) -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?) -> Unit>>>(160).value = value }
    
    var unref_node: CPointer<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?) -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?) -> Unit>>>(168).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; }")
class _GtkCellEditableIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var editing_done: CPointer<CFunction<(CPointer<GtkCellEditable>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellEditable>?) -> Unit>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellEditable>?) -> Unit>>>(16).value = value }
    
    var remove_widget: CPointer<CFunction<(CPointer<GtkCellEditable>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellEditable>?) -> Unit>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellEditable>?) -> Unit>>>(24).value = value }
    
    var start_editing: CPointer<CFunction<(CPointer<GtkCellEditable>?, CPointer<GdkEvent>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellEditable>?, CPointer<GdkEvent>?) -> Unit>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellEditable>?, CPointer<GdkEvent>?) -> Unit>>>(32).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GtkCellRenderer(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GInitiallyUnowned
        get() = memberAt(0)
    
    var priv: CPointer<GtkCellRendererPrivate>?
        get() = memberAt<CPointerVar<GtkCellRendererPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GtkCellRendererPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; }")
class _GtkCellRendererClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(264, 8)
    
    val parent_class: GInitiallyUnownedClass
        get() = memberAt(0)
    
    var get_request_mode: CPointer<CFunction<(CPointer<GtkCellRenderer>?) -> GtkSizeRequestMode>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellRenderer>?) -> GtkSizeRequestMode>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellRenderer>?) -> GtkSizeRequestMode>>>(136).value = value }
    
    var get_preferred_width: CPointer<CFunction<(CPointer<GtkCellRenderer>?, CPointer<GtkWidget>?, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellRenderer>?, CPointer<GtkWidget>?, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellRenderer>?, CPointer<GtkWidget>?, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(144).value = value }
    
    var get_preferred_height_for_width: CPointer<CFunction<(CPointer<GtkCellRenderer>?, CPointer<GtkWidget>?, gint, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellRenderer>?, CPointer<GtkWidget>?, gint, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellRenderer>?, CPointer<GtkWidget>?, gint, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(152).value = value }
    
    var get_preferred_height: CPointer<CFunction<(CPointer<GtkCellRenderer>?, CPointer<GtkWidget>?, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellRenderer>?, CPointer<GtkWidget>?, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellRenderer>?, CPointer<GtkWidget>?, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(160).value = value }
    
    var get_preferred_width_for_height: CPointer<CFunction<(CPointer<GtkCellRenderer>?, CPointer<GtkWidget>?, gint, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellRenderer>?, CPointer<GtkWidget>?, gint, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellRenderer>?, CPointer<GtkWidget>?, gint, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(168).value = value }
    
    var get_aligned_area: CPointer<CFunction<(CPointer<GtkCellRenderer>?, CPointer<GtkWidget>?, GtkCellRendererState, CPointer<GdkRectangle>?, CPointer<GdkRectangle>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellRenderer>?, CPointer<GtkWidget>?, GtkCellRendererState, CPointer<GdkRectangle>?, CPointer<GdkRectangle>?) -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellRenderer>?, CPointer<GtkWidget>?, GtkCellRendererState, CPointer<GdkRectangle>?, CPointer<GdkRectangle>?) -> Unit>>>(176).value = value }
    
    var get_size: CPointer<CFunction<(CPointer<GtkCellRenderer>?, CPointer<GtkWidget>?, CPointer<GdkRectangle>?, CPointer<gintVar>?, CPointer<gintVar>?, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellRenderer>?, CPointer<GtkWidget>?, CPointer<GdkRectangle>?, CPointer<gintVar>?, CPointer<gintVar>?, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellRenderer>?, CPointer<GtkWidget>?, CPointer<GdkRectangle>?, CPointer<gintVar>?, CPointer<gintVar>?, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(184).value = value }
    
    var render: CPointer<CFunction<(CPointer<GtkCellRenderer>?, CPointer<cairo_t>?, CPointer<GtkWidget>?, CPointer<GdkRectangle>?, CPointer<GdkRectangle>?, GtkCellRendererState) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellRenderer>?, CPointer<cairo_t>?, CPointer<GtkWidget>?, CPointer<GdkRectangle>?, CPointer<GdkRectangle>?, GtkCellRendererState) -> Unit>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellRenderer>?, CPointer<cairo_t>?, CPointer<GtkWidget>?, CPointer<GdkRectangle>?, CPointer<GdkRectangle>?, GtkCellRendererState) -> Unit>>>(192).value = value }
    
    var activate: CPointer<CFunction<(CPointer<GtkCellRenderer>?, CPointer<GdkEvent>?, CPointer<GtkWidget>?, CPointer<gcharVar>?, CPointer<GdkRectangle>?, CPointer<GdkRectangle>?, GtkCellRendererState) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellRenderer>?, CPointer<GdkEvent>?, CPointer<GtkWidget>?, CPointer<gcharVar>?, CPointer<GdkRectangle>?, CPointer<GdkRectangle>?, GtkCellRendererState) -> gboolean>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellRenderer>?, CPointer<GdkEvent>?, CPointer<GtkWidget>?, CPointer<gcharVar>?, CPointer<GdkRectangle>?, CPointer<GdkRectangle>?, GtkCellRendererState) -> gboolean>>>(200).value = value }
    
    var start_editing: CPointer<CFunction<(CPointer<GtkCellRenderer>?, CPointer<GdkEvent>?, CPointer<GtkWidget>?, CPointer<gcharVar>?, CPointer<GdkRectangle>?, CPointer<GdkRectangle>?, GtkCellRendererState) -> CPointer<GtkCellEditable>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellRenderer>?, CPointer<GdkEvent>?, CPointer<GtkWidget>?, CPointer<gcharVar>?, CPointer<GdkRectangle>?, CPointer<GdkRectangle>?, GtkCellRendererState) -> CPointer<GtkCellEditable>?>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellRenderer>?, CPointer<GdkEvent>?, CPointer<GtkWidget>?, CPointer<gcharVar>?, CPointer<GdkRectangle>?, CPointer<GdkRectangle>?, GtkCellRendererState) -> CPointer<GtkCellEditable>?>>>(208).value = value }
    
    var editing_canceled: CPointer<CFunction<(CPointer<GtkCellRenderer>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellRenderer>?) -> Unit>>>(216).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellRenderer>?) -> Unit>>>(216).value = value }
    
    var editing_started: CPointer<CFunction<(CPointer<GtkCellRenderer>?, CPointer<GtkCellEditable>?, CPointer<gcharVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellRenderer>?, CPointer<GtkCellEditable>?, CPointer<gcharVar>?) -> Unit>>>(224).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellRenderer>?, CPointer<GtkCellEditable>?, CPointer<gcharVar>?) -> Unit>>>(224).value = value }
    
    var priv: CPointer<GtkCellRendererClassPrivate>?
        get() = memberAt<CPointerVar<GtkCellRendererClassPrivate>>(232).value
        set(value) { memberAt<CPointerVar<GtkCellRendererClassPrivate>>(232).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(240).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(240).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(248).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(248).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(256).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(256).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; }")
class _GtkTreeSortableIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(64, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var sort_column_changed: CPointer<CFunction<(CPointer<GtkTreeSortable>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeSortable>?) -> Unit>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeSortable>?) -> Unit>>>(16).value = value }
    
    var get_sort_column_id: CPointer<CFunction<(CPointer<GtkTreeSortable>?, CPointer<gintVar>?, CPointer<GtkSortType.Var>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeSortable>?, CPointer<gintVar>?, CPointer<GtkSortType.Var>?) -> gboolean>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeSortable>?, CPointer<gintVar>?, CPointer<GtkSortType.Var>?) -> gboolean>>>(24).value = value }
    
    var set_sort_column_id: CPointer<CFunction<(CPointer<GtkTreeSortable>?, gint, GtkSortType) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeSortable>?, gint, GtkSortType) -> Unit>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeSortable>?, gint, GtkSortType) -> Unit>>>(32).value = value }
    
    var set_sort_func: CPointer<CFunction<(CPointer<GtkTreeSortable>?, gint, GtkTreeIterCompareFunc?, gpointer?, GDestroyNotify?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeSortable>?, gint, GtkTreeIterCompareFunc?, gpointer?, GDestroyNotify?) -> Unit>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeSortable>?, gint, GtkTreeIterCompareFunc?, gpointer?, GDestroyNotify?) -> Unit>>>(40).value = value }
    
    var set_default_sort_func: CPointer<CFunction<(CPointer<GtkTreeSortable>?, GtkTreeIterCompareFunc?, gpointer?, GDestroyNotify?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeSortable>?, GtkTreeIterCompareFunc?, gpointer?, GDestroyNotify?) -> Unit>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeSortable>?, GtkTreeIterCompareFunc?, gpointer?, GDestroyNotify?) -> Unit>>>(48).value = value }
    
    var has_default_sort_func: CPointer<CFunction<(CPointer<GtkTreeSortable>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeSortable>?) -> gboolean>>>(56).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeSortable>?) -> gboolean>>>(56).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GtkCellArea(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GInitiallyUnowned
        get() = memberAt(0)
    
    var priv: CPointer<GtkCellAreaPrivate>?
        get() = memberAt<CPointerVar<GtkCellAreaPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GtkCellAreaPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; void* p23; void* p24; void* p25; void* p26; void* p27; }")
class _GtkCellAreaClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(352, 8)
    
    val parent_class: GInitiallyUnownedClass
        get() = memberAt(0)
    
    var add: CPointer<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkCellRenderer>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkCellRenderer>?) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkCellRenderer>?) -> Unit>>>(136).value = value }
    
    var remove: CPointer<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkCellRenderer>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkCellRenderer>?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkCellRenderer>?) -> Unit>>>(144).value = value }
    
    var foreach: CPointer<CFunction<(CPointer<GtkCellArea>?, GtkCellCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellArea>?, GtkCellCallback?, gpointer?) -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellArea>?, GtkCellCallback?, gpointer?) -> Unit>>>(152).value = value }
    
    var foreach_alloc: CPointer<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkCellAreaContext>?, CPointer<GtkWidget>?, CPointer<GdkRectangle>?, CPointer<GdkRectangle>?, GtkCellAllocCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkCellAreaContext>?, CPointer<GtkWidget>?, CPointer<GdkRectangle>?, CPointer<GdkRectangle>?, GtkCellAllocCallback?, gpointer?) -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkCellAreaContext>?, CPointer<GtkWidget>?, CPointer<GdkRectangle>?, CPointer<GdkRectangle>?, GtkCellAllocCallback?, gpointer?) -> Unit>>>(160).value = value }
    
    var event: CPointer<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkCellAreaContext>?, CPointer<GtkWidget>?, CPointer<GdkEvent>?, CPointer<GdkRectangle>?, GtkCellRendererState) -> gint>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkCellAreaContext>?, CPointer<GtkWidget>?, CPointer<GdkEvent>?, CPointer<GdkRectangle>?, GtkCellRendererState) -> gint>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkCellAreaContext>?, CPointer<GtkWidget>?, CPointer<GdkEvent>?, CPointer<GdkRectangle>?, GtkCellRendererState) -> gint>>>(168).value = value }
    
    var render: CPointer<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkCellAreaContext>?, CPointer<GtkWidget>?, CPointer<cairo_t>?, CPointer<GdkRectangle>?, CPointer<GdkRectangle>?, GtkCellRendererState, gboolean) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkCellAreaContext>?, CPointer<GtkWidget>?, CPointer<cairo_t>?, CPointer<GdkRectangle>?, CPointer<GdkRectangle>?, GtkCellRendererState, gboolean) -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkCellAreaContext>?, CPointer<GtkWidget>?, CPointer<cairo_t>?, CPointer<GdkRectangle>?, CPointer<GdkRectangle>?, GtkCellRendererState, gboolean) -> Unit>>>(176).value = value }
    
    var apply_attributes: CPointer<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?, gboolean, gboolean) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?, gboolean, gboolean) -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?, gboolean, gboolean) -> Unit>>>(184).value = value }
    
    var create_context: CPointer<CFunction<(CPointer<GtkCellArea>?) -> CPointer<GtkCellAreaContext>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellArea>?) -> CPointer<GtkCellAreaContext>?>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellArea>?) -> CPointer<GtkCellAreaContext>?>>>(192).value = value }
    
    var copy_context: CPointer<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkCellAreaContext>?) -> CPointer<GtkCellAreaContext>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkCellAreaContext>?) -> CPointer<GtkCellAreaContext>?>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkCellAreaContext>?) -> CPointer<GtkCellAreaContext>?>>>(200).value = value }
    
    var get_request_mode: CPointer<CFunction<(CPointer<GtkCellArea>?) -> GtkSizeRequestMode>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellArea>?) -> GtkSizeRequestMode>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellArea>?) -> GtkSizeRequestMode>>>(208).value = value }
    
    var get_preferred_width: CPointer<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkCellAreaContext>?, CPointer<GtkWidget>?, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkCellAreaContext>?, CPointer<GtkWidget>?, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(216).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkCellAreaContext>?, CPointer<GtkWidget>?, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(216).value = value }
    
    var get_preferred_height_for_width: CPointer<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkCellAreaContext>?, CPointer<GtkWidget>?, gint, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkCellAreaContext>?, CPointer<GtkWidget>?, gint, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(224).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkCellAreaContext>?, CPointer<GtkWidget>?, gint, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(224).value = value }
    
    var get_preferred_height: CPointer<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkCellAreaContext>?, CPointer<GtkWidget>?, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkCellAreaContext>?, CPointer<GtkWidget>?, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(232).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkCellAreaContext>?, CPointer<GtkWidget>?, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(232).value = value }
    
    var get_preferred_width_for_height: CPointer<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkCellAreaContext>?, CPointer<GtkWidget>?, gint, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkCellAreaContext>?, CPointer<GtkWidget>?, gint, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(240).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkCellAreaContext>?, CPointer<GtkWidget>?, gint, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(240).value = value }
    
    var set_cell_property: CPointer<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkCellRenderer>?, guint, CPointer<GValue>?, CPointer<GParamSpec>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkCellRenderer>?, guint, CPointer<GValue>?, CPointer<GParamSpec>?) -> Unit>>>(248).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkCellRenderer>?, guint, CPointer<GValue>?, CPointer<GParamSpec>?) -> Unit>>>(248).value = value }
    
    var get_cell_property: CPointer<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkCellRenderer>?, guint, CPointer<GValue>?, CPointer<GParamSpec>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkCellRenderer>?, guint, CPointer<GValue>?, CPointer<GParamSpec>?) -> Unit>>>(256).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkCellRenderer>?, guint, CPointer<GValue>?, CPointer<GParamSpec>?) -> Unit>>>(256).value = value }
    
    var focus: CPointer<CFunction<(CPointer<GtkCellArea>?, GtkDirectionType) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellArea>?, GtkDirectionType) -> gboolean>>>(264).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellArea>?, GtkDirectionType) -> gboolean>>>(264).value = value }
    
    var is_activatable: CPointer<CFunction<(CPointer<GtkCellArea>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellArea>?) -> gboolean>>>(272).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellArea>?) -> gboolean>>>(272).value = value }
    
    var activate: CPointer<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkCellAreaContext>?, CPointer<GtkWidget>?, CPointer<GdkRectangle>?, GtkCellRendererState, gboolean) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkCellAreaContext>?, CPointer<GtkWidget>?, CPointer<GdkRectangle>?, GtkCellRendererState, gboolean) -> gboolean>>>(280).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellArea>?, CPointer<GtkCellAreaContext>?, CPointer<GtkWidget>?, CPointer<GdkRectangle>?, GtkCellRendererState, gboolean) -> gboolean>>>(280).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(288).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(288).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(304).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(304).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(312).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(312).value = value }
    
    var _gtk_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(320).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(320).value = value }
    
    var _gtk_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value = value }
    
    var _gtk_reserved7: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(336).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(336).value = value }
    
    var _gtk_reserved8: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(344).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(344).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GtkCellAreaContext(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GtkCellAreaContextPrivate>?
        get() = memberAt<CPointerVar<GtkCellAreaContextPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GtkCellAreaContextPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GtkTreeViewColumn(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GInitiallyUnowned
        get() = memberAt(0)
    
    var priv: CPointer<GtkTreeViewColumnPrivate>?
        get() = memberAt<CPointerVar<GtkTreeViewColumnPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GtkTreeViewColumnPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GtkTreeViewColumnClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(176, 8)
    
    val parent_class: GInitiallyUnownedClass
        get() = memberAt(0)
    
    var clicked: CPointer<CFunction<(CPointer<GtkTreeViewColumn>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeViewColumn>?) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeViewColumn>?) -> Unit>>>(136).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value = value }
}

class _GtkTextAttributes(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(168, 8)
    
    var refcount: guint
        get() = memberAt<guintVar>(0).value
        set(value) { memberAt<guintVar>(0).value = value }
    
    val appearance: GtkTextAppearance
        get() = memberAt(8)
    
    var justification: GtkJustification
        get() = memberAt<GtkJustification.Var>(56).value
        set(value) { memberAt<GtkJustification.Var>(56).value = value }
    
    var direction: GtkTextDirection
        get() = memberAt<GtkTextDirection.Var>(60).value
        set(value) { memberAt<GtkTextDirection.Var>(60).value = value }
    
    var font: CPointer<PangoFontDescription>?
        get() = memberAt<CPointerVar<PangoFontDescription>>(64).value
        set(value) { memberAt<CPointerVar<PangoFontDescription>>(64).value = value }
    
    var font_scale: gdouble
        get() = memberAt<gdoubleVar>(72).value
        set(value) { memberAt<gdoubleVar>(72).value = value }
    
    var left_margin: gint
        get() = memberAt<gintVar>(80).value
        set(value) { memberAt<gintVar>(80).value = value }
    
    var right_margin: gint
        get() = memberAt<gintVar>(84).value
        set(value) { memberAt<gintVar>(84).value = value }
    
    var indent: gint
        get() = memberAt<gintVar>(88).value
        set(value) { memberAt<gintVar>(88).value = value }
    
    var pixels_above_lines: gint
        get() = memberAt<gintVar>(92).value
        set(value) { memberAt<gintVar>(92).value = value }
    
    var pixels_below_lines: gint
        get() = memberAt<gintVar>(96).value
        set(value) { memberAt<gintVar>(96).value = value }
    
    var pixels_inside_wrap: gint
        get() = memberAt<gintVar>(100).value
        set(value) { memberAt<gintVar>(100).value = value }
    
    var tabs: CPointer<PangoTabArray>?
        get() = memberAt<CPointerVar<PangoTabArray>>(104).value
        set(value) { memberAt<CPointerVar<PangoTabArray>>(104).value = value }
    
    var wrap_mode: GtkWrapMode
        get() = memberAt<GtkWrapMode.Var>(112).value
        set(value) { memberAt<GtkWrapMode.Var>(112).value = value }
    
    var language: CPointer<PangoLanguage>?
        get() = memberAt<CPointerVar<PangoLanguage>>(120).value
        set(value) { memberAt<CPointerVar<PangoLanguage>>(120).value = value }
    
    var pg_bg_color: CPointer<GdkColor>?
        get() = memberAt<CPointerVar<GdkColor>>(128).value
        set(value) { memberAt<CPointerVar<GdkColor>>(128).value = value }
    
    var pg_bg_rgba: CPointer<GdkRGBA>?
        get() = memberAt<CPointerVar<GdkRGBA>>(144).value
        set(value) { memberAt<CPointerVar<GdkRGBA>>(144).value = value }
    
    var letter_spacing: gint
        get() = memberAt<gintVar>(152).value
        set(value) { memberAt<gintVar>(152).value = value }
    
    var font_features: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(160).value
        set(value) { memberAt<CPointerVar<gcharVar>>(160).value = value }
    
    var invisible: guint
        get() = readBits(this.rawPtr, 1088, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 1088, 1, value.toLong()) }
    
    var bg_full_height: guint
        get() = readBits(this.rawPtr, 1089, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 1089, 1, value.toLong()) }
    
    var editable: guint
        get() = readBits(this.rawPtr, 1090, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 1090, 1, value.toLong()) }
    
    var no_fallback: guint
        get() = readBits(this.rawPtr, 1091, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 1091, 1, value.toLong()) }
}

class _GtkTextAppearance(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val bg_color: GdkColor
        get() = memberAt(0)
    
    val fg_color: GdkColor
        get() = memberAt(12)
    
    var rise: gint
        get() = memberAt<gintVar>(24).value
        set(value) { memberAt<gintVar>(24).value = value }
    
    val rgba: CArrayPointer<CPointerVar<GdkRGBA>>
        get() = arrayMemberAt(32)
    
    var underline: guint
        get() = readBits(this.rawPtr, 224, 4, false).toUInt()
        set(value) { writeBits(this.rawPtr, 224, 4, value.toLong()) }
    
    var strikethrough: guint
        get() = readBits(this.rawPtr, 228, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 228, 1, value.toLong()) }
    
    var draw_bg: guint
        get() = readBits(this.rawPtr, 229, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 229, 1, value.toLong()) }
    
    var inside_selection: guint
        get() = readBits(this.rawPtr, 230, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 230, 1, value.toLong()) }
    
    var is_text: guint
        get() = readBits(this.rawPtr, 231, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 231, 1, value.toLong()) }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GtkTextChildAnchor(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var segment: gpointer?
        get() = memberAt<gpointerVar>(24).value
        set(value) { memberAt<gpointerVar>(24).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkTextChildAnchorClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(168, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(136).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
}

@CStruct("struct { void* p0; void* p1; int p2; int p3; int p4; int p5; int p6; int p7; void* p8; void* p9; int p10; int p11; int p12; void* p13; }")
class _GtkTextIter(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(80, 8)
    
    var dummy1: gpointer?
        get() = memberAt<gpointerVar>(0).value
        set(value) { memberAt<gpointerVar>(0).value = value }
    
    var dummy2: gpointer?
        get() = memberAt<gpointerVar>(8).value
        set(value) { memberAt<gpointerVar>(8).value = value }
    
    var dummy3: gint
        get() = memberAt<gintVar>(16).value
        set(value) { memberAt<gintVar>(16).value = value }
    
    var dummy4: gint
        get() = memberAt<gintVar>(20).value
        set(value) { memberAt<gintVar>(20).value = value }
    
    var dummy5: gint
        get() = memberAt<gintVar>(24).value
        set(value) { memberAt<gintVar>(24).value = value }
    
    var dummy6: gint
        get() = memberAt<gintVar>(28).value
        set(value) { memberAt<gintVar>(28).value = value }
    
    var dummy7: gint
        get() = memberAt<gintVar>(32).value
        set(value) { memberAt<gintVar>(32).value = value }
    
    var dummy8: gint
        get() = memberAt<gintVar>(36).value
        set(value) { memberAt<gintVar>(36).value = value }
    
    var dummy9: gpointer?
        get() = memberAt<gpointerVar>(40).value
        set(value) { memberAt<gpointerVar>(40).value = value }
    
    var dummy10: gpointer?
        get() = memberAt<gpointerVar>(48).value
        set(value) { memberAt<gpointerVar>(48).value = value }
    
    var dummy11: gint
        get() = memberAt<gintVar>(56).value
        set(value) { memberAt<gintVar>(56).value = value }
    
    var dummy12: gint
        get() = memberAt<gintVar>(60).value
        set(value) { memberAt<gintVar>(60).value = value }
    
    var dummy13: gint
        get() = memberAt<gintVar>(64).value
        set(value) { memberAt<gintVar>(64).value = value }
    
    var dummy14: gpointer?
        get() = memberAt<gpointerVar>(72).value
        set(value) { memberAt<gpointerVar>(72).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GtkTextTagTable(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GtkTextTagTablePrivate>?
        get() = memberAt<CPointerVar<GtkTextTagTablePrivate>>(24).value
        set(value) { memberAt<CPointerVar<GtkTextTagTablePrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GtkTextTag(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GtkTextTagPrivate>?
        get() = memberAt<CPointerVar<GtkTextTagPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GtkTextTagPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GtkTextTagClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(176, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var event: CPointer<CFunction<(CPointer<GtkTextTag>?, CPointer<GObject>?, CPointer<GdkEvent>?, CPointer<GtkTextIter>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTextTag>?, CPointer<GObject>?, CPointer<GdkEvent>?, CPointer<GtkTextIter>?) -> gboolean>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTextTag>?, CPointer<GObject>?, CPointer<GdkEvent>?, CPointer<GtkTextIter>?) -> gboolean>>>(136).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GtkTextBuffer(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GtkTextBufferPrivate>?
        get() = memberAt<CPointerVar<GtkTextBufferPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GtkTextBufferPrivate>>(24).value = value }
}

@CStruct("struct { void* p0; unsigned int p1; unsigned int p2; }")
class _GtkTargetPair(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    var target: GdkAtom?
        get() = memberAt<GdkAtomVar>(0).value
        set(value) { memberAt<GdkAtomVar>(0).value = value }
    
    var flags: guint
        get() = memberAt<guintVar>(8).value
        set(value) { memberAt<guintVar>(8).value = value }
    
    var info: guint
        get() = memberAt<guintVar>(12).value
        set(value) { memberAt<guintVar>(12).value = value }
}

@CStruct("struct { void* p0; unsigned int p1; unsigned int p2; }")
class _GtkTargetEntry(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    var target: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(0).value
        set(value) { memberAt<CPointerVar<gcharVar>>(0).value = value }
    
    var flags: guint
        get() = memberAt<guintVar>(8).value
        set(value) { memberAt<guintVar>(8).value = value }
    
    var info: guint
        get() = memberAt<guintVar>(12).value
        set(value) { memberAt<guintVar>(12).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; }")
class _GtkEditableInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(96, 8)
    
    val base_iface: GTypeInterface
        get() = memberAt(0)
    
    var insert_text: CPointer<CFunction<(CPointer<GtkEditable>?, CPointer<gcharVar>?, gint, CPointer<gintVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkEditable>?, CPointer<gcharVar>?, gint, CPointer<gintVar>?) -> Unit>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkEditable>?, CPointer<gcharVar>?, gint, CPointer<gintVar>?) -> Unit>>>(16).value = value }
    
    var delete_text: CPointer<CFunction<(CPointer<GtkEditable>?, gint, gint) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkEditable>?, gint, gint) -> Unit>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkEditable>?, gint, gint) -> Unit>>>(24).value = value }
    
    var changed: CPointer<CFunction<(CPointer<GtkEditable>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkEditable>?) -> Unit>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkEditable>?) -> Unit>>>(32).value = value }
    
    var do_insert_text: CPointer<CFunction<(CPointer<GtkEditable>?, CPointer<gcharVar>?, gint, CPointer<gintVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkEditable>?, CPointer<gcharVar>?, gint, CPointer<gintVar>?) -> Unit>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkEditable>?, CPointer<gcharVar>?, gint, CPointer<gintVar>?) -> Unit>>>(40).value = value }
    
    var do_delete_text: CPointer<CFunction<(CPointer<GtkEditable>?, gint, gint) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkEditable>?, gint, gint) -> Unit>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkEditable>?, gint, gint) -> Unit>>>(48).value = value }
    
    var get_chars: CPointer<CFunction<(CPointer<GtkEditable>?, gint, gint) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkEditable>?, gint, gint) -> CPointer<gcharVar>?>>>(56).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkEditable>?, gint, gint) -> CPointer<gcharVar>?>>>(56).value = value }
    
    var set_selection_bounds: CPointer<CFunction<(CPointer<GtkEditable>?, gint, gint) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkEditable>?, gint, gint) -> Unit>>>(64).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkEditable>?, gint, gint) -> Unit>>>(64).value = value }
    
    var get_selection_bounds: CPointer<CFunction<(CPointer<GtkEditable>?, CPointer<gintVar>?, CPointer<gintVar>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkEditable>?, CPointer<gintVar>?, CPointer<gintVar>?) -> gboolean>>>(72).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkEditable>?, CPointer<gintVar>?, CPointer<gintVar>?) -> gboolean>>>(72).value = value }
    
    var set_position: CPointer<CFunction<(CPointer<GtkEditable>?, gint) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkEditable>?, gint) -> Unit>>>(80).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkEditable>?, gint) -> Unit>>>(80).value = value }
    
    var get_position: CPointer<CFunction<(CPointer<GtkEditable>?) -> gint>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkEditable>?) -> gint>>>(88).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkEditable>?) -> gint>>>(88).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; }")
class _GtkIMContext(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; }")
class _GtkIMContextClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(312, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var preedit_start: CPointer<CFunction<(CPointer<GtkIMContext>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkIMContext>?) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkIMContext>?) -> Unit>>>(136).value = value }
    
    var preedit_end: CPointer<CFunction<(CPointer<GtkIMContext>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkIMContext>?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkIMContext>?) -> Unit>>>(144).value = value }
    
    var preedit_changed: CPointer<CFunction<(CPointer<GtkIMContext>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkIMContext>?) -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkIMContext>?) -> Unit>>>(152).value = value }
    
    var commit: CPointer<CFunction<(CPointer<GtkIMContext>?, CPointer<gcharVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkIMContext>?, CPointer<gcharVar>?) -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkIMContext>?, CPointer<gcharVar>?) -> Unit>>>(160).value = value }
    
    var retrieve_surrounding: CPointer<CFunction<(CPointer<GtkIMContext>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkIMContext>?) -> gboolean>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkIMContext>?) -> gboolean>>>(168).value = value }
    
    var delete_surrounding: CPointer<CFunction<(CPointer<GtkIMContext>?, gint, gint) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkIMContext>?, gint, gint) -> gboolean>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkIMContext>?, gint, gint) -> gboolean>>>(176).value = value }
    
    var set_client_window: CPointer<CFunction<(CPointer<GtkIMContext>?, CPointer<GdkWindow>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkIMContext>?, CPointer<GdkWindow>?) -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkIMContext>?, CPointer<GdkWindow>?) -> Unit>>>(184).value = value }
    
    var get_preedit_string: CPointer<CFunction<(CPointer<GtkIMContext>?, CPointer<CPointerVar<gcharVar>>?, CPointer<CPointerVar<PangoAttrList>>?, CPointer<gintVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkIMContext>?, CPointer<CPointerVar<gcharVar>>?, CPointer<CPointerVar<PangoAttrList>>?, CPointer<gintVar>?) -> Unit>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkIMContext>?, CPointer<CPointerVar<gcharVar>>?, CPointer<CPointerVar<PangoAttrList>>?, CPointer<gintVar>?) -> Unit>>>(192).value = value }
    
    var filter_keypress: CPointer<CFunction<(CPointer<GtkIMContext>?, CPointer<GdkEventKey>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkIMContext>?, CPointer<GdkEventKey>?) -> gboolean>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkIMContext>?, CPointer<GdkEventKey>?) -> gboolean>>>(200).value = value }
    
    var focus_in: CPointer<CFunction<(CPointer<GtkIMContext>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkIMContext>?) -> Unit>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkIMContext>?) -> Unit>>>(208).value = value }
    
    var focus_out: CPointer<CFunction<(CPointer<GtkIMContext>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkIMContext>?) -> Unit>>>(216).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkIMContext>?) -> Unit>>>(216).value = value }
    
    var reset: CPointer<CFunction<(CPointer<GtkIMContext>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkIMContext>?) -> Unit>>>(224).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkIMContext>?) -> Unit>>>(224).value = value }
    
    var set_cursor_location: CPointer<CFunction<(CPointer<GtkIMContext>?, CPointer<GdkRectangle>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkIMContext>?, CPointer<GdkRectangle>?) -> Unit>>>(232).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkIMContext>?, CPointer<GdkRectangle>?) -> Unit>>>(232).value = value }
    
    var set_use_preedit: CPointer<CFunction<(CPointer<GtkIMContext>?, gboolean) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkIMContext>?, gboolean) -> Unit>>>(240).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkIMContext>?, gboolean) -> Unit>>>(240).value = value }
    
    var set_surrounding: CPointer<CFunction<(CPointer<GtkIMContext>?, CPointer<gcharVar>?, gint, gint) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkIMContext>?, CPointer<gcharVar>?, gint, gint) -> Unit>>>(248).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkIMContext>?, CPointer<gcharVar>?, gint, gint) -> Unit>>>(248).value = value }
    
    var get_surrounding: CPointer<CFunction<(CPointer<GtkIMContext>?, CPointer<CPointerVar<gcharVar>>?, CPointer<gintVar>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkIMContext>?, CPointer<CPointerVar<gcharVar>>?, CPointer<gintVar>?) -> gboolean>>>(256).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkIMContext>?, CPointer<CPointerVar<gcharVar>>?, CPointer<gintVar>?) -> gboolean>>>(256).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(280).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(280).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(288).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(288).value = value }
    
    var _gtk_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value = value }
    
    var _gtk_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(304).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(304).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GtkEntryBuffer(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GtkEntryBufferPrivate>?
        get() = memberAt<CPointerVar<GtkEntryBufferPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GtkEntryBufferPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; }")
class _GtkEntryBufferClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(248, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var inserted_text: CPointer<CFunction<(CPointer<GtkEntryBuffer>?, guint, CPointer<gcharVar>?, guint) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkEntryBuffer>?, guint, CPointer<gcharVar>?, guint) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkEntryBuffer>?, guint, CPointer<gcharVar>?, guint) -> Unit>>>(136).value = value }
    
    var deleted_text: CPointer<CFunction<(CPointer<GtkEntryBuffer>?, guint, guint) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkEntryBuffer>?, guint, guint) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkEntryBuffer>?, guint, guint) -> Unit>>>(144).value = value }
    
    var get_text: CPointer<CFunction<(CPointer<GtkEntryBuffer>?, CPointer<gsizeVar>?) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkEntryBuffer>?, CPointer<gsizeVar>?) -> CPointer<gcharVar>?>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkEntryBuffer>?, CPointer<gsizeVar>?) -> CPointer<gcharVar>?>>>(152).value = value }
    
    var get_length: CPointer<CFunction<(CPointer<GtkEntryBuffer>?) -> guint>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkEntryBuffer>?) -> guint>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkEntryBuffer>?) -> guint>>>(160).value = value }
    
    var insert_text: CPointer<CFunction<(CPointer<GtkEntryBuffer>?, guint, CPointer<gcharVar>?, guint) -> guint>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkEntryBuffer>?, guint, CPointer<gcharVar>?, guint) -> guint>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkEntryBuffer>?, guint, CPointer<gcharVar>?, guint) -> guint>>>(168).value = value }
    
    var delete_text: CPointer<CFunction<(CPointer<GtkEntryBuffer>?, guint, guint) -> guint>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkEntryBuffer>?, guint, guint) -> guint>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkEntryBuffer>?, guint, guint) -> guint>>>(176).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(192).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(200).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(208).value = value }
    
    var _gtk_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(216).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(216).value = value }
    
    var _gtk_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(224).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(224).value = value }
    
    var _gtk_reserved7: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(232).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(232).value = value }
    
    var _gtk_reserved8: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(240).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(240).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GtkListStore(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GtkListStorePrivate>?
        get() = memberAt<CPointerVar<GtkListStorePrivate>>(24).value
        set(value) { memberAt<CPointerVar<GtkListStorePrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkListStoreClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(168, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(136).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GtkTreeModelFilter(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GtkTreeModelFilterPrivate>?
        get() = memberAt<CPointerVar<GtkTreeModelFilterPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GtkTreeModelFilterPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; }")
class _GtkTreeModelFilterClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(184, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var visible: CPointer<CFunction<(CPointer<GtkTreeModelFilter>?, CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModelFilter>?, CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?) -> gboolean>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModelFilter>?, CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?) -> gboolean>>>(136).value = value }
    
    var modify: CPointer<CFunction<(CPointer<GtkTreeModelFilter>?, CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?, CPointer<GValue>?, gint) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModelFilter>?, CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?, CPointer<GValue>?, gint) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeModelFilter>?, CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?, CPointer<GValue>?, gint) -> Unit>>>(144).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GtkEntryCompletion(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GtkEntryCompletionPrivate>?
        get() = memberAt<CPointerVar<GtkEntryCompletionPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GtkEntryCompletionPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; }")
class _GtkEntryCompletionClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(200, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var match_selected: CPointer<CFunction<(CPointer<GtkEntryCompletion>?, CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkEntryCompletion>?, CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?) -> gboolean>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkEntryCompletion>?, CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?) -> gboolean>>>(136).value = value }
    
    var action_activated: CPointer<CFunction<(CPointer<GtkEntryCompletion>?, gint) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkEntryCompletion>?, gint) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkEntryCompletion>?, gint) -> Unit>>>(144).value = value }
    
    var insert_prefix: CPointer<CFunction<(CPointer<GtkEntryCompletion>?, CPointer<gcharVar>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkEntryCompletion>?, CPointer<gcharVar>?) -> gboolean>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkEntryCompletion>?, CPointer<gcharVar>?) -> gboolean>>>(152).value = value }
    
    var cursor_on_match: CPointer<CFunction<(CPointer<GtkEntryCompletion>?, CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkEntryCompletion>?, CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?) -> gboolean>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkEntryCompletion>?, CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?) -> gboolean>>>(160).value = value }
    
    var no_matches: CPointer<CFunction<(CPointer<GtkEntryCompletion>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkEntryCompletion>?) -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkEntryCompletion>?) -> Unit>>>(168).value = value }
    
    var _gtk_reserved0: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(192).value = value }
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkImage(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val misc: GtkMisc
        get() = memberAt(0)
    
    var priv: CPointer<GtkImagePrivate>?
        get() = memberAt<CPointerVar<GtkImagePrivate>>(40).value
        set(value) { memberAt<CPointerVar<GtkImagePrivate>>(40).value = value }
}

@CStruct("struct { struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; unsigned int p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; void* p23; void* p24; void* p25; void* p26; void* p27; void* p28; void* p29; void* p30; void* p31; void* p32; void* p33; void* p34; void* p35; void* p36; void* p37; void* p38; void* p39; void* p40; void* p41; void* p42; void* p43; void* p44; void* p45; void* p46; void* p47; void* p48; void* p49; void* p50; void* p51; void* p52; void* p53; void* p54; void* p55; void* p56; void* p57; void* p58; void* p59; void* p60; void* p61; void* p62; void* p63; void* p64; void* p65; void* p66; void* p67; void* p68; void* p69; void* p70; void* p71; void* p72; void* p73; void* p74; void* p75; void* p76; void* p77; void* p78; void* p79; void* p80; void* p81; void* p82; void* p83; void* p84; void* p85; void* p86; } p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkImageClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(888, 8)
    
    val parent_class: GtkMiscClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(856).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(856).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(864).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(864).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(872).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(872).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(880).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(880).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GtkEntry(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val parent_instance: GtkWidget
        get() = memberAt(0)
    
    var priv: CPointer<GtkEntryPrivate>?
        get() = memberAt<CPointerVar<GtkEntryPrivate>>(32).value
        set(value) { memberAt<CPointerVar<GtkEntryPrivate>>(32).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; unsigned int p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; void* p23; void* p24; void* p25; void* p26; void* p27; void* p28; void* p29; void* p30; void* p31; void* p32; void* p33; void* p34; void* p35; void* p36; void* p37; void* p38; void* p39; void* p40; void* p41; void* p42; void* p43; void* p44; void* p45; void* p46; void* p47; void* p48; void* p49; void* p50; void* p51; void* p52; void* p53; void* p54; void* p55; void* p56; void* p57; void* p58; void* p59; void* p60; void* p61; void* p62; void* p63; void* p64; void* p65; void* p66; void* p67; void* p68; void* p69; void* p70; void* p71; void* p72; void* p73; void* p74; void* p75; void* p76; void* p77; void* p78; void* p79; void* p80; void* p81; void* p82; void* p83; void* p84; void* p85; void* p86; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; }")
class _GtkEntryClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(976, 8)
    
    val parent_class: GtkWidgetClass
        get() = memberAt(0)
    
    var populate_popup: CPointer<CFunction<(CPointer<GtkEntry>?, CPointer<GtkWidget>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkEntry>?, CPointer<GtkWidget>?) -> Unit>>>(824).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkEntry>?, CPointer<GtkWidget>?) -> Unit>>>(824).value = value }
    
    var activate: CPointer<CFunction<(CPointer<GtkEntry>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkEntry>?) -> Unit>>>(832).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkEntry>?) -> Unit>>>(832).value = value }
    
    var move_cursor: CPointer<CFunction<(CPointer<GtkEntry>?, GtkMovementStep, gint, gboolean) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkEntry>?, GtkMovementStep, gint, gboolean) -> Unit>>>(840).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkEntry>?, GtkMovementStep, gint, gboolean) -> Unit>>>(840).value = value }
    
    var insert_at_cursor: CPointer<CFunction<(CPointer<GtkEntry>?, CPointer<gcharVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkEntry>?, CPointer<gcharVar>?) -> Unit>>>(848).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkEntry>?, CPointer<gcharVar>?) -> Unit>>>(848).value = value }
    
    var delete_from_cursor: CPointer<CFunction<(CPointer<GtkEntry>?, GtkDeleteType, gint) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkEntry>?, GtkDeleteType, gint) -> Unit>>>(856).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkEntry>?, GtkDeleteType, gint) -> Unit>>>(856).value = value }
    
    var backspace: CPointer<CFunction<(CPointer<GtkEntry>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkEntry>?) -> Unit>>>(864).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkEntry>?) -> Unit>>>(864).value = value }
    
    var cut_clipboard: CPointer<CFunction<(CPointer<GtkEntry>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkEntry>?) -> Unit>>>(872).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkEntry>?) -> Unit>>>(872).value = value }
    
    var copy_clipboard: CPointer<CFunction<(CPointer<GtkEntry>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkEntry>?) -> Unit>>>(880).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkEntry>?) -> Unit>>>(880).value = value }
    
    var paste_clipboard: CPointer<CFunction<(CPointer<GtkEntry>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkEntry>?) -> Unit>>>(888).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkEntry>?) -> Unit>>>(888).value = value }
    
    var toggle_overwrite: CPointer<CFunction<(CPointer<GtkEntry>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkEntry>?) -> Unit>>>(896).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkEntry>?) -> Unit>>>(896).value = value }
    
    var get_text_area_size: CPointer<CFunction<(CPointer<GtkEntry>?, CPointer<gintVar>?, CPointer<gintVar>?, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkEntry>?, CPointer<gintVar>?, CPointer<gintVar>?, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(904).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkEntry>?, CPointer<gintVar>?, CPointer<gintVar>?, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(904).value = value }
    
    var get_frame_size: CPointer<CFunction<(CPointer<GtkEntry>?, CPointer<gintVar>?, CPointer<gintVar>?, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkEntry>?, CPointer<gintVar>?, CPointer<gintVar>?, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(912).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkEntry>?, CPointer<gintVar>?, CPointer<gintVar>?, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(912).value = value }
    
    var insert_emoji: CPointer<CFunction<(CPointer<GtkEntry>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkEntry>?) -> Unit>>>(920).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkEntry>?) -> Unit>>>(920).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(928).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(928).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(936).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(936).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(944).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(944).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(952).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(952).value = value }
    
    var _gtk_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(960).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(960).value = value }
    
    var _gtk_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(968).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(968).value = value }
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkTreeView(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val parent: GtkContainer
        get() = memberAt(0)
    
    var priv: CPointer<GtkTreeViewPrivate>?
        get() = memberAt<CPointerVar<GtkTreeViewPrivate>>(40).value
        set(value) { memberAt<CPointerVar<GtkTreeViewPrivate>>(40).value = value }
}

@CStruct("struct { null p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; void* p23; }")
class _GtkTreeViewClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1160, 8)
    
    val parent_class: GtkContainerClass
        get() = memberAt(0)
    
    var row_activated: CPointer<CFunction<(CPointer<GtkTreeView>?, CPointer<GtkTreePath>?, CPointer<GtkTreeViewColumn>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeView>?, CPointer<GtkTreePath>?, CPointer<GtkTreeViewColumn>?) -> Unit>>>(976).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeView>?, CPointer<GtkTreePath>?, CPointer<GtkTreeViewColumn>?) -> Unit>>>(976).value = value }
    
    var test_expand_row: CPointer<CFunction<(CPointer<GtkTreeView>?, CPointer<GtkTreeIter>?, CPointer<GtkTreePath>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeView>?, CPointer<GtkTreeIter>?, CPointer<GtkTreePath>?) -> gboolean>>>(984).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeView>?, CPointer<GtkTreeIter>?, CPointer<GtkTreePath>?) -> gboolean>>>(984).value = value }
    
    var test_collapse_row: CPointer<CFunction<(CPointer<GtkTreeView>?, CPointer<GtkTreeIter>?, CPointer<GtkTreePath>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeView>?, CPointer<GtkTreeIter>?, CPointer<GtkTreePath>?) -> gboolean>>>(992).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeView>?, CPointer<GtkTreeIter>?, CPointer<GtkTreePath>?) -> gboolean>>>(992).value = value }
    
    var row_expanded: CPointer<CFunction<(CPointer<GtkTreeView>?, CPointer<GtkTreeIter>?, CPointer<GtkTreePath>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeView>?, CPointer<GtkTreeIter>?, CPointer<GtkTreePath>?) -> Unit>>>(1000).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeView>?, CPointer<GtkTreeIter>?, CPointer<GtkTreePath>?) -> Unit>>>(1000).value = value }
    
    var row_collapsed: CPointer<CFunction<(CPointer<GtkTreeView>?, CPointer<GtkTreeIter>?, CPointer<GtkTreePath>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeView>?, CPointer<GtkTreeIter>?, CPointer<GtkTreePath>?) -> Unit>>>(1008).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeView>?, CPointer<GtkTreeIter>?, CPointer<GtkTreePath>?) -> Unit>>>(1008).value = value }
    
    var columns_changed: CPointer<CFunction<(CPointer<GtkTreeView>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeView>?) -> Unit>>>(1016).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeView>?) -> Unit>>>(1016).value = value }
    
    var cursor_changed: CPointer<CFunction<(CPointer<GtkTreeView>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeView>?) -> Unit>>>(1024).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeView>?) -> Unit>>>(1024).value = value }
    
    var move_cursor: CPointer<CFunction<(CPointer<GtkTreeView>?, GtkMovementStep, gint) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeView>?, GtkMovementStep, gint) -> gboolean>>>(1032).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeView>?, GtkMovementStep, gint) -> gboolean>>>(1032).value = value }
    
    var select_all: CPointer<CFunction<(CPointer<GtkTreeView>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeView>?) -> gboolean>>>(1040).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeView>?) -> gboolean>>>(1040).value = value }
    
    var unselect_all: CPointer<CFunction<(CPointer<GtkTreeView>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeView>?) -> gboolean>>>(1048).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeView>?) -> gboolean>>>(1048).value = value }
    
    var select_cursor_row: CPointer<CFunction<(CPointer<GtkTreeView>?, gboolean) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeView>?, gboolean) -> gboolean>>>(1056).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeView>?, gboolean) -> gboolean>>>(1056).value = value }
    
    var toggle_cursor_row: CPointer<CFunction<(CPointer<GtkTreeView>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeView>?) -> gboolean>>>(1064).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeView>?) -> gboolean>>>(1064).value = value }
    
    var expand_collapse_cursor_row: CPointer<CFunction<(CPointer<GtkTreeView>?, gboolean, gboolean, gboolean) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeView>?, gboolean, gboolean, gboolean) -> gboolean>>>(1072).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeView>?, gboolean, gboolean, gboolean) -> gboolean>>>(1072).value = value }
    
    var select_cursor_parent: CPointer<CFunction<(CPointer<GtkTreeView>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeView>?) -> gboolean>>>(1080).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeView>?) -> gboolean>>>(1080).value = value }
    
    var start_interactive_search: CPointer<CFunction<(CPointer<GtkTreeView>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeView>?) -> gboolean>>>(1088).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeView>?) -> gboolean>>>(1088).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1096).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1096).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1104).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1104).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1112).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1112).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1120).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1120).value = value }
    
    var _gtk_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1128).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1128).value = value }
    
    var _gtk_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1136).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1136).value = value }
    
    var _gtk_reserved7: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1144).value = value }
    
    var _gtk_reserved8: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1152).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GtkTreeSelection(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GtkTreeSelectionPrivate>?
        get() = memberAt<CPointerVar<GtkTreeSelectionPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GtkTreeSelectionPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GtkTreeSelectionClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(176, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var changed: CPointer<CFunction<(CPointer<GtkTreeSelection>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeSelection>?) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeSelection>?) -> Unit>>>(136).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkComboBox(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val parent_instance: GtkBin
        get() = memberAt(0)
    
    var priv: CPointer<GtkComboBoxPrivate>?
        get() = memberAt<CPointerVar<GtkComboBoxPrivate>>(48).value
        set(value) { memberAt<CPointerVar<GtkComboBoxPrivate>>(48).value = value }
}

@CStruct("struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GtkComboBoxClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1048, 8)
    
    val parent_class: GtkBinClass
        get() = memberAt(0)
    
    var changed: CPointer<CFunction<(CPointer<GtkComboBox>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkComboBox>?) -> Unit>>>(1008).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkComboBox>?) -> Unit>>>(1008).value = value }
    
    var format_entry_text: CPointer<CFunction<(CPointer<GtkComboBox>?, CPointer<gcharVar>?) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkComboBox>?, CPointer<gcharVar>?) -> CPointer<gcharVar>?>>>(1016).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkComboBox>?, CPointer<gcharVar>?) -> CPointer<gcharVar>?>>>(1016).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1040).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1040).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkAppChooserButton(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(64, 8)
    
    val parent: GtkComboBox
        get() = memberAt(0)
    
    var priv: CPointer<GtkAppChooserButtonPrivate>?
        get() = memberAt<CPointerVar<GtkAppChooserButtonPrivate>>(56).value
        set(value) { memberAt<CPointerVar<GtkAppChooserButtonPrivate>>(56).value = value }
}

@CStruct("struct { struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; } p0; void* p1; void* p2[16]; }")
class _GtkAppChooserButtonClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1184, 8)
    
    val parent_class: GtkComboBoxClass
        get() = memberAt(0)
    
    var custom_item_activated: CPointer<CFunction<(CPointer<GtkAppChooserButton>?, CPointer<gcharVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkAppChooserButton>?, CPointer<gcharVar>?) -> Unit>>>(1048).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkAppChooserButton>?, CPointer<gcharVar>?) -> Unit>>>(1048).value = value }
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(1056)
}

@CStruct("struct { struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; }")
class _GtkShortcutsWindow(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val window: GtkWindow
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; } p0; void* p1; void* p2; }")
class _GtkShortcutsWindowClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1088, 8)
    
    val parent_class: GtkWindowClass
        get() = memberAt(0)
    
    var close: CPointer<CFunction<(CPointer<GtkShortcutsWindow>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkShortcutsWindow>?) -> Unit>>>(1072).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkShortcutsWindow>?) -> Unit>>>(1072).value = value }
    
    var search: CPointer<CFunction<(CPointer<GtkShortcutsWindow>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkShortcutsWindow>?) -> Unit>>>(1080).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkShortcutsWindow>?) -> Unit>>>(1080).value = value }
}

@CStruct("struct { struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; } p0; void* p1[14]; }")
class _GtkApplicationWindowClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1184, 8)
    
    val parent_class: GtkWindowClass
        get() = memberAt(0)
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(1072)
}

@CStruct("struct { struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkApplicationWindow(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(64, 8)
    
    val parent_instance: GtkWindow
        get() = memberAt(0)
    
    var priv: CPointer<GtkApplicationWindowPrivate>?
        get() = memberAt<CPointerVar<GtkApplicationWindowPrivate>>(56).value
        set(value) { memberAt<CPointerVar<GtkApplicationWindowPrivate>>(56).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkFrame(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val bin: GtkBin
        get() = memberAt(0)
    
    var priv: CPointer<GtkFramePrivate>?
        get() = memberAt<CPointerVar<GtkFramePrivate>>(48).value
        set(value) { memberAt<CPointerVar<GtkFramePrivate>>(48).value = value }
}

@CStruct("struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GtkFrameClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1048, 8)
    
    val parent_class: GtkBinClass
        get() = memberAt(0)
    
    var compute_child_allocation: CPointer<CFunction<(CPointer<GtkFrame>?, CPointer<GtkAllocation>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkFrame>?, CPointer<GtkAllocation>?) -> Unit>>>(1008).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkFrame>?, CPointer<GtkAllocation>?) -> Unit>>>(1008).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1040).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1040).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkAspectFrame(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(64, 8)
    
    val frame: GtkFrame
        get() = memberAt(0)
    
    var priv: CPointer<GtkAspectFramePrivate>?
        get() = memberAt<CPointerVar<GtkAspectFramePrivate>>(56).value
        set(value) { memberAt<CPointerVar<GtkAspectFramePrivate>>(56).value = value }
}

@CStruct("struct { struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkAspectFrameClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1080, 8)
    
    val parent_class: GtkFrameClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1048).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1048).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1056).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1056).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1064).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1064).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1072).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1072).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkAssistant(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(64, 8)
    
    val parent: GtkWindow
        get() = memberAt(0)
    
    var priv: CPointer<GtkAssistantPrivate>?
        get() = memberAt<CPointerVar<GtkAssistantPrivate>>(56).value
        set(value) { memberAt<CPointerVar<GtkAssistantPrivate>>(56).value = value }
}

@CStruct("struct { struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; }")
class _GtkAssistantClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1144, 8)
    
    val parent_class: GtkWindowClass
        get() = memberAt(0)
    
    var prepare: CPointer<CFunction<(CPointer<GtkAssistant>?, CPointer<GtkWidget>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkAssistant>?, CPointer<GtkWidget>?) -> Unit>>>(1072).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkAssistant>?, CPointer<GtkWidget>?) -> Unit>>>(1072).value = value }
    
    var apply: CPointer<CFunction<(CPointer<GtkAssistant>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkAssistant>?) -> Unit>>>(1080).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkAssistant>?) -> Unit>>>(1080).value = value }
    
    var close: CPointer<CFunction<(CPointer<GtkAssistant>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkAssistant>?) -> Unit>>>(1088).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkAssistant>?) -> Unit>>>(1088).value = value }
    
    var cancel: CPointer<CFunction<(CPointer<GtkAssistant>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkAssistant>?) -> Unit>>>(1096).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkAssistant>?) -> Unit>>>(1096).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1104).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1104).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1112).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1112).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1120).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1120).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1128).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1128).value = value }
    
    var _gtk_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1136).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1136).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkButtonBox(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val box: GtkBox
        get() = memberAt(0)
    
    var priv: CPointer<GtkButtonBoxPrivate>?
        get() = memberAt<CPointerVar<GtkButtonBoxPrivate>>(48).value
        set(value) { memberAt<CPointerVar<GtkButtonBoxPrivate>>(48).value = value }
}

@CStruct("struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkButtonBoxClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1040, 8)
    
    val parent_class: GtkBoxClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1008).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1008).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value = value }
}

class _GtkBindingSet(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(64, 8)
    
    var set_name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(0).value
        set(value) { memberAt<CPointerVar<gcharVar>>(0).value = value }
    
    var priority: gint
        get() = memberAt<gintVar>(8).value
        set(value) { memberAt<gintVar>(8).value = value }
    
    var widget_path_pspecs: CPointer<GSList>?
        get() = memberAt<CPointerVar<GSList>>(16).value
        set(value) { memberAt<CPointerVar<GSList>>(16).value = value }
    
    var widget_class_pspecs: CPointer<GSList>?
        get() = memberAt<CPointerVar<GSList>>(24).value
        set(value) { memberAt<CPointerVar<GSList>>(24).value = value }
    
    var class_branch_pspecs: CPointer<GSList>?
        get() = memberAt<CPointerVar<GSList>>(32).value
        set(value) { memberAt<CPointerVar<GSList>>(32).value = value }
    
    var entries: CPointer<GtkBindingEntry>?
        get() = memberAt<CPointerVar<GtkBindingEntry>>(40).value
        set(value) { memberAt<CPointerVar<GtkBindingEntry>>(40).value = value }
    
    var current: CPointer<GtkBindingEntry>?
        get() = memberAt<CPointerVar<GtkBindingEntry>>(48).value
        set(value) { memberAt<CPointerVar<GtkBindingEntry>>(48).value = value }
    
    var parsed: guint
        get() = readBits(this.rawPtr, 448, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 448, 1, value.toLong()) }
}

class _GtkBindingEntry(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    var keyval: guint
        get() = memberAt<guintVar>(0).value
        set(value) { memberAt<guintVar>(0).value = value }
    
    var modifiers: GdkModifierType
        get() = memberAt<GdkModifierTypeVar>(4).value
        set(value) { memberAt<GdkModifierTypeVar>(4).value = value }
    
    var binding_set: CPointer<GtkBindingSet>?
        get() = memberAt<CPointerVar<GtkBindingSet>>(8).value
        set(value) { memberAt<CPointerVar<GtkBindingSet>>(8).value = value }
    
    var set_next: CPointer<GtkBindingEntry>?
        get() = memberAt<CPointerVar<GtkBindingEntry>>(24).value
        set(value) { memberAt<CPointerVar<GtkBindingEntry>>(24).value = value }
    
    var hash_next: CPointer<GtkBindingEntry>?
        get() = memberAt<CPointerVar<GtkBindingEntry>>(32).value
        set(value) { memberAt<CPointerVar<GtkBindingEntry>>(32).value = value }
    
    var signals: CPointer<GtkBindingSignal>?
        get() = memberAt<CPointerVar<GtkBindingSignal>>(40).value
        set(value) { memberAt<CPointerVar<GtkBindingSignal>>(40).value = value }
    
    var destroyed: guint
        get() = readBits(this.rawPtr, 128, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 128, 1, value.toLong()) }
    
    var in_emission: guint
        get() = readBits(this.rawPtr, 129, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 129, 1, value.toLong()) }
    
    var marks_unbound: guint
        get() = readBits(this.rawPtr, 130, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 130, 1, value.toLong()) }
}

@CStruct("struct { void* p0; void* p1; unsigned int p2; void* p3; }")
class _GtkBindingSignal(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    var next: CPointer<GtkBindingSignal>?
        get() = memberAt<CPointerVar<GtkBindingSignal>>(0).value
        set(value) { memberAt<CPointerVar<GtkBindingSignal>>(0).value = value }
    
    var signal_name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(8).value
        set(value) { memberAt<CPointerVar<gcharVar>>(8).value = value }
    
    var n_args: guint
        get() = memberAt<guintVar>(16).value
        set(value) { memberAt<guintVar>(16).value = value }
    
    var args: CPointer<GtkBindingArg>?
        get() = memberAt<CPointerVar<GtkBindingArg>>(24).value
        set(value) { memberAt<CPointerVar<GtkBindingArg>>(24).value = value }
}

@CStruct("struct { unsigned long p0; union { long p0; double p1; void* p2; } p1; }")
class _GtkBindingArg(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    var arg_type: GType
        get() = memberAt<GTypeVar>(0).value
        set(value) { memberAt<GTypeVar>(0).value = value }
    
    val d: anonymousStruct7
        get() = memberAt(8)
}

@CStruct("union { long p0; double p1; void* p2; }")
class anonymousStruct7(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(8, 8)
    
    var long_data: glong
        get() = memberAt<glongVar>(0).value
        set(value) { memberAt<glongVar>(0).value = value }
    
    var double_data: gdouble
        get() = memberAt<gdoubleVar>(0).value
        set(value) { memberAt<gdoubleVar>(0).value = value }
    
    var string_data: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(0).value
        set(value) { memberAt<CPointerVar<gcharVar>>(0).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; }")
class _GtkBuilderClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(208, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var get_type_from_name: CPointer<CFunction<(CPointer<GtkBuilder>?, CPointer<ByteVar>?) -> GType>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkBuilder>?, CPointer<ByteVar>?) -> GType>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkBuilder>?, CPointer<ByteVar>?) -> GType>>>(136).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value = value }
    
    var _gtk_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value = value }
    
    var _gtk_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value = value }
    
    var _gtk_reserved7: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(192).value = value }
    
    var _gtk_reserved8: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(200).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; }")
class _GtkBuildableIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(96, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var set_name: CPointer<CFunction<(CPointer<GtkBuildable>?, CPointer<gcharVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkBuildable>?, CPointer<gcharVar>?) -> Unit>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkBuildable>?, CPointer<gcharVar>?) -> Unit>>>(16).value = value }
    
    var get_name: CPointer<CFunction<(CPointer<GtkBuildable>?) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkBuildable>?) -> CPointer<gcharVar>?>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkBuildable>?) -> CPointer<gcharVar>?>>>(24).value = value }
    
    var add_child: CPointer<CFunction<(CPointer<GtkBuildable>?, CPointer<GtkBuilder>?, CPointer<GObject>?, CPointer<gcharVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkBuildable>?, CPointer<GtkBuilder>?, CPointer<GObject>?, CPointer<gcharVar>?) -> Unit>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkBuildable>?, CPointer<GtkBuilder>?, CPointer<GObject>?, CPointer<gcharVar>?) -> Unit>>>(32).value = value }
    
    var set_buildable_property: CPointer<CFunction<(CPointer<GtkBuildable>?, CPointer<GtkBuilder>?, CPointer<gcharVar>?, CPointer<GValue>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkBuildable>?, CPointer<GtkBuilder>?, CPointer<gcharVar>?, CPointer<GValue>?) -> Unit>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkBuildable>?, CPointer<GtkBuilder>?, CPointer<gcharVar>?, CPointer<GValue>?) -> Unit>>>(40).value = value }
    
    var construct_child: CPointer<CFunction<(CPointer<GtkBuildable>?, CPointer<GtkBuilder>?, CPointer<gcharVar>?) -> CPointer<GObject>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkBuildable>?, CPointer<GtkBuilder>?, CPointer<gcharVar>?) -> CPointer<GObject>?>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkBuildable>?, CPointer<GtkBuilder>?, CPointer<gcharVar>?) -> CPointer<GObject>?>>>(48).value = value }
    
    var custom_tag_start: CPointer<CFunction<(CPointer<GtkBuildable>?, CPointer<GtkBuilder>?, CPointer<GObject>?, CPointer<gcharVar>?, CPointer<GMarkupParser>?, CPointer<gpointerVar>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkBuildable>?, CPointer<GtkBuilder>?, CPointer<GObject>?, CPointer<gcharVar>?, CPointer<GMarkupParser>?, CPointer<gpointerVar>?) -> gboolean>>>(56).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkBuildable>?, CPointer<GtkBuilder>?, CPointer<GObject>?, CPointer<gcharVar>?, CPointer<GMarkupParser>?, CPointer<gpointerVar>?) -> gboolean>>>(56).value = value }
    
    var custom_tag_end: CPointer<CFunction<(CPointer<GtkBuildable>?, CPointer<GtkBuilder>?, CPointer<GObject>?, CPointer<gcharVar>?, CPointer<gpointerVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkBuildable>?, CPointer<GtkBuilder>?, CPointer<GObject>?, CPointer<gcharVar>?, CPointer<gpointerVar>?) -> Unit>>>(64).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkBuildable>?, CPointer<GtkBuilder>?, CPointer<GObject>?, CPointer<gcharVar>?, CPointer<gpointerVar>?) -> Unit>>>(64).value = value }
    
    var custom_finished: CPointer<CFunction<(CPointer<GtkBuildable>?, CPointer<GtkBuilder>?, CPointer<GObject>?, CPointer<gcharVar>?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkBuildable>?, CPointer<GtkBuilder>?, CPointer<GObject>?, CPointer<gcharVar>?, gpointer?) -> Unit>>>(72).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkBuildable>?, CPointer<GtkBuilder>?, CPointer<GObject>?, CPointer<gcharVar>?, gpointer?) -> Unit>>>(72).value = value }
    
    var parser_finished: CPointer<CFunction<(CPointer<GtkBuildable>?, CPointer<GtkBuilder>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkBuildable>?, CPointer<GtkBuilder>?) -> Unit>>>(80).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkBuildable>?, CPointer<GtkBuilder>?) -> Unit>>>(80).value = value }
    
    var get_internal_child: CPointer<CFunction<(CPointer<GtkBuildable>?, CPointer<GtkBuilder>?, CPointer<gcharVar>?) -> CPointer<GObject>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkBuildable>?, CPointer<GtkBuilder>?, CPointer<gcharVar>?) -> CPointer<GObject>?>>>(88).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkBuildable>?, CPointer<GtkBuilder>?, CPointer<gcharVar>?) -> CPointer<GObject>?>>>(88).value = value }
}

@CStruct("struct { void* p0; void* p1; void* p2; void* p3; void* p4; }")
class _GMarkupParser(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    var start_element: CPointer<CFunction<(CPointer<GMarkupParseContext>?, CPointer<gcharVar>?, CPointer<CPointerVar<gcharVar>>?, CPointer<CPointerVar<gcharVar>>?, gpointer?, CPointer<CPointerVar<GError>>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMarkupParseContext>?, CPointer<gcharVar>?, CPointer<CPointerVar<gcharVar>>?, CPointer<CPointerVar<gcharVar>>?, gpointer?, CPointer<CPointerVar<GError>>?) -> Unit>>>(0).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMarkupParseContext>?, CPointer<gcharVar>?, CPointer<CPointerVar<gcharVar>>?, CPointer<CPointerVar<gcharVar>>?, gpointer?, CPointer<CPointerVar<GError>>?) -> Unit>>>(0).value = value }
    
    var end_element: CPointer<CFunction<(CPointer<GMarkupParseContext>?, CPointer<gcharVar>?, gpointer?, CPointer<CPointerVar<GError>>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMarkupParseContext>?, CPointer<gcharVar>?, gpointer?, CPointer<CPointerVar<GError>>?) -> Unit>>>(8).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMarkupParseContext>?, CPointer<gcharVar>?, gpointer?, CPointer<CPointerVar<GError>>?) -> Unit>>>(8).value = value }
    
    var text: CPointer<CFunction<(CPointer<GMarkupParseContext>?, CPointer<gcharVar>?, gsize, gpointer?, CPointer<CPointerVar<GError>>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMarkupParseContext>?, CPointer<gcharVar>?, gsize, gpointer?, CPointer<CPointerVar<GError>>?) -> Unit>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMarkupParseContext>?, CPointer<gcharVar>?, gsize, gpointer?, CPointer<CPointerVar<GError>>?) -> Unit>>>(16).value = value }
    
    var passthrough: CPointer<CFunction<(CPointer<GMarkupParseContext>?, CPointer<gcharVar>?, gsize, gpointer?, CPointer<CPointerVar<GError>>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMarkupParseContext>?, CPointer<gcharVar>?, gsize, gpointer?, CPointer<CPointerVar<GError>>?) -> Unit>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMarkupParseContext>?, CPointer<gcharVar>?, gsize, gpointer?, CPointer<CPointerVar<GError>>?) -> Unit>>>(24).value = value }
    
    var error: CPointer<CFunction<(CPointer<GMarkupParseContext>?, CPointer<GError>?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMarkupParseContext>?, CPointer<GError>?, gpointer?) -> Unit>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMarkupParseContext>?, CPointer<GError>?, gpointer?) -> Unit>>>(32).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkButton(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val bin: GtkBin
        get() = memberAt(0)
    
    var priv: CPointer<GtkButtonPrivate>?
        get() = memberAt<CPointerVar<GtkButtonPrivate>>(48).value
        set(value) { memberAt<CPointerVar<GtkButtonPrivate>>(48).value = value }
}

@CStruct("struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; }")
class _GtkButtonClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1088, 8)
    
    val parent_class: GtkBinClass
        get() = memberAt(0)
    
    var pressed: CPointer<CFunction<(CPointer<GtkButton>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkButton>?) -> Unit>>>(1008).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkButton>?) -> Unit>>>(1008).value = value }
    
    var released: CPointer<CFunction<(CPointer<GtkButton>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkButton>?) -> Unit>>>(1016).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkButton>?) -> Unit>>>(1016).value = value }
    
    var clicked: CPointer<CFunction<(CPointer<GtkButton>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkButton>?) -> Unit>>>(1024).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkButton>?) -> Unit>>>(1024).value = value }
    
    var enter: CPointer<CFunction<(CPointer<GtkButton>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkButton>?) -> Unit>>>(1032).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkButton>?) -> Unit>>>(1032).value = value }
    
    var leave: CPointer<CFunction<(CPointer<GtkButton>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkButton>?) -> Unit>>>(1040).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkButton>?) -> Unit>>>(1040).value = value }
    
    var activate: CPointer<CFunction<(CPointer<GtkButton>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkButton>?) -> Unit>>>(1048).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkButton>?) -> Unit>>>(1048).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1056).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1056).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1064).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1064).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1072).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1072).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1080).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1080).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GtkCalendar(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val widget: GtkWidget
        get() = memberAt(0)
    
    var priv: CPointer<GtkCalendarPrivate>?
        get() = memberAt<CPointerVar<GtkCalendarPrivate>>(32).value
        set(value) { memberAt<CPointerVar<GtkCalendarPrivate>>(32).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; unsigned int p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; void* p23; void* p24; void* p25; void* p26; void* p27; void* p28; void* p29; void* p30; void* p31; void* p32; void* p33; void* p34; void* p35; void* p36; void* p37; void* p38; void* p39; void* p40; void* p41; void* p42; void* p43; void* p44; void* p45; void* p46; void* p47; void* p48; void* p49; void* p50; void* p51; void* p52; void* p53; void* p54; void* p55; void* p56; void* p57; void* p58; void* p59; void* p60; void* p61; void* p62; void* p63; void* p64; void* p65; void* p66; void* p67; void* p68; void* p69; void* p70; void* p71; void* p72; void* p73; void* p74; void* p75; void* p76; void* p77; void* p78; void* p79; void* p80; void* p81; void* p82; void* p83; void* p84; void* p85; void* p86; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; }")
class _GtkCalendarClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(912, 8)
    
    val parent_class: GtkWidgetClass
        get() = memberAt(0)
    
    var month_changed: CPointer<CFunction<(CPointer<GtkCalendar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCalendar>?) -> Unit>>>(824).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCalendar>?) -> Unit>>>(824).value = value }
    
    var day_selected: CPointer<CFunction<(CPointer<GtkCalendar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCalendar>?) -> Unit>>>(832).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCalendar>?) -> Unit>>>(832).value = value }
    
    var day_selected_double_click: CPointer<CFunction<(CPointer<GtkCalendar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCalendar>?) -> Unit>>>(840).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCalendar>?) -> Unit>>>(840).value = value }
    
    var prev_month: CPointer<CFunction<(CPointer<GtkCalendar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCalendar>?) -> Unit>>>(848).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCalendar>?) -> Unit>>>(848).value = value }
    
    var next_month: CPointer<CFunction<(CPointer<GtkCalendar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCalendar>?) -> Unit>>>(856).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCalendar>?) -> Unit>>>(856).value = value }
    
    var prev_year: CPointer<CFunction<(CPointer<GtkCalendar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCalendar>?) -> Unit>>>(864).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCalendar>?) -> Unit>>>(864).value = value }
    
    var next_year: CPointer<CFunction<(CPointer<GtkCalendar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCalendar>?) -> Unit>>>(872).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCalendar>?) -> Unit>>>(872).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(880).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(880).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(888).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(888).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(896).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(896).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(904).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(904).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GtkCellAreaBox(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val parent_instance: GtkCellArea
        get() = memberAt(0)
    
    var priv: CPointer<GtkCellAreaBoxPrivate>?
        get() = memberAt<CPointerVar<GtkCellAreaBoxPrivate>>(32).value
        set(value) { memberAt<CPointerVar<GtkCellAreaBoxPrivate>>(32).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; void* p23; void* p24; void* p25; void* p26; void* p27; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkCellAreaBoxClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(384, 8)
    
    val parent_class: GtkCellAreaClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(352).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(352).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(360).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(360).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(368).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(368).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(376).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(376).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; }")
class _GtkCellAreaContextClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(216, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var allocate: CPointer<CFunction<(CPointer<GtkCellAreaContext>?, gint, gint) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellAreaContext>?, gint, gint) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellAreaContext>?, gint, gint) -> Unit>>>(136).value = value }
    
    var reset: CPointer<CFunction<(CPointer<GtkCellAreaContext>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellAreaContext>?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellAreaContext>?) -> Unit>>>(144).value = value }
    
    var get_preferred_height_for_width: CPointer<CFunction<(CPointer<GtkCellAreaContext>?, gint, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellAreaContext>?, gint, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellAreaContext>?, gint, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(152).value = value }
    
    var get_preferred_width_for_height: CPointer<CFunction<(CPointer<GtkCellAreaContext>?, gint, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellAreaContext>?, gint, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellAreaContext>?, gint, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(160).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(192).value = value }
    
    var _gtk_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(200).value = value }
    
    var _gtk_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(208).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; }")
class _GtkCellLayoutIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(88, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var pack_start: CPointer<CFunction<(CPointer<GtkCellLayout>?, CPointer<GtkCellRenderer>?, gboolean) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellLayout>?, CPointer<GtkCellRenderer>?, gboolean) -> Unit>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellLayout>?, CPointer<GtkCellRenderer>?, gboolean) -> Unit>>>(16).value = value }
    
    var pack_end: CPointer<CFunction<(CPointer<GtkCellLayout>?, CPointer<GtkCellRenderer>?, gboolean) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellLayout>?, CPointer<GtkCellRenderer>?, gboolean) -> Unit>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellLayout>?, CPointer<GtkCellRenderer>?, gboolean) -> Unit>>>(24).value = value }
    
    var clear: CPointer<CFunction<(CPointer<GtkCellLayout>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellLayout>?) -> Unit>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellLayout>?) -> Unit>>>(32).value = value }
    
    var add_attribute: CPointer<CFunction<(CPointer<GtkCellLayout>?, CPointer<GtkCellRenderer>?, CPointer<gcharVar>?, gint) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellLayout>?, CPointer<GtkCellRenderer>?, CPointer<gcharVar>?, gint) -> Unit>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellLayout>?, CPointer<GtkCellRenderer>?, CPointer<gcharVar>?, gint) -> Unit>>>(40).value = value }
    
    var set_cell_data_func: CPointer<CFunction<(CPointer<GtkCellLayout>?, CPointer<GtkCellRenderer>?, GtkCellLayoutDataFunc?, gpointer?, GDestroyNotify?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellLayout>?, CPointer<GtkCellRenderer>?, GtkCellLayoutDataFunc?, gpointer?, GDestroyNotify?) -> Unit>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellLayout>?, CPointer<GtkCellRenderer>?, GtkCellLayoutDataFunc?, gpointer?, GDestroyNotify?) -> Unit>>>(48).value = value }
    
    var clear_attributes: CPointer<CFunction<(CPointer<GtkCellLayout>?, CPointer<GtkCellRenderer>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellLayout>?, CPointer<GtkCellRenderer>?) -> Unit>>>(56).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellLayout>?, CPointer<GtkCellRenderer>?) -> Unit>>>(56).value = value }
    
    var reorder: CPointer<CFunction<(CPointer<GtkCellLayout>?, CPointer<GtkCellRenderer>?, gint) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellLayout>?, CPointer<GtkCellRenderer>?, gint) -> Unit>>>(64).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellLayout>?, CPointer<GtkCellRenderer>?, gint) -> Unit>>>(64).value = value }
    
    var get_cells: CPointer<CFunction<(CPointer<GtkCellLayout>?) -> CPointer<GList>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellLayout>?) -> CPointer<GList>?>>>(72).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellLayout>?) -> CPointer<GList>?>>>(72).value = value }
    
    var get_area: CPointer<CFunction<(CPointer<GtkCellLayout>?) -> CPointer<GtkCellArea>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellLayout>?) -> CPointer<GtkCellArea>?>>>(80).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellLayout>?) -> CPointer<GtkCellArea>?>>>(80).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GtkCellRendererText(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val parent: GtkCellRenderer
        get() = memberAt(0)
    
    var priv: CPointer<GtkCellRendererTextPrivate>?
        get() = memberAt<CPointerVar<GtkCellRendererTextPrivate>>(32).value
        set(value) { memberAt<CPointerVar<GtkCellRendererTextPrivate>>(32).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GtkCellRendererTextClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(304, 8)
    
    val parent_class: GtkCellRendererClass
        get() = memberAt(0)
    
    var edited: CPointer<CFunction<(CPointer<GtkCellRendererText>?, CPointer<gcharVar>?, CPointer<gcharVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellRendererText>?, CPointer<gcharVar>?, CPointer<gcharVar>?) -> Unit>>>(264).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellRendererText>?, CPointer<gcharVar>?, CPointer<gcharVar>?) -> Unit>>>(264).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(280).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(280).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(288).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(288).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value = value }
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkCellRendererAccel(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val parent: GtkCellRendererText
        get() = memberAt(0)
    
    var priv: CPointer<GtkCellRendererAccelPrivate>?
        get() = memberAt<CPointerVar<GtkCellRendererAccelPrivate>>(40).value
        set(value) { memberAt<CPointerVar<GtkCellRendererAccelPrivate>>(40).value = value }
}

@CStruct("struct { struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; }")
class _GtkCellRendererAccelClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(360, 8)
    
    val parent_class: GtkCellRendererTextClass
        get() = memberAt(0)
    
    var accel_edited: CPointer<CFunction<(CPointer<GtkCellRendererAccel>?, CPointer<gcharVar>?, guint, GdkModifierType, guint) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellRendererAccel>?, CPointer<gcharVar>?, guint, GdkModifierType, guint) -> Unit>>>(304).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellRendererAccel>?, CPointer<gcharVar>?, guint, GdkModifierType, guint) -> Unit>>>(304).value = value }
    
    var accel_cleared: CPointer<CFunction<(CPointer<GtkCellRendererAccel>?, CPointer<gcharVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellRendererAccel>?, CPointer<gcharVar>?) -> Unit>>>(312).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellRendererAccel>?, CPointer<gcharVar>?) -> Unit>>>(312).value = value }
    
    var _gtk_reserved0: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(320).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(320).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(336).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(336).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(344).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(344).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(352).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(352).value = value }
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkCellRendererCombo(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val parent: GtkCellRendererText
        get() = memberAt(0)
    
    var priv: CPointer<GtkCellRendererComboPrivate>?
        get() = memberAt<CPointerVar<GtkCellRendererComboPrivate>>(40).value
        set(value) { memberAt<CPointerVar<GtkCellRendererComboPrivate>>(40).value = value }
}

@CStruct("struct { struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkCellRendererComboClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(336, 8)
    
    val parent: GtkCellRendererTextClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(304).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(304).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(312).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(312).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(320).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(320).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GtkCellRendererPixbuf(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val parent: GtkCellRenderer
        get() = memberAt(0)
    
    var priv: CPointer<GtkCellRendererPixbufPrivate>?
        get() = memberAt<CPointerVar<GtkCellRendererPixbufPrivate>>(32).value
        set(value) { memberAt<CPointerVar<GtkCellRendererPixbufPrivate>>(32).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkCellRendererPixbufClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(296, 8)
    
    val parent_class: GtkCellRendererClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(280).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(280).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(288).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(288).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GtkCellRendererProgress(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val parent_instance: GtkCellRenderer
        get() = memberAt(0)
    
    var priv: CPointer<GtkCellRendererProgressPrivate>?
        get() = memberAt<CPointerVar<GtkCellRendererProgressPrivate>>(32).value
        set(value) { memberAt<CPointerVar<GtkCellRendererProgressPrivate>>(32).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkCellRendererProgressClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(296, 8)
    
    val parent_class: GtkCellRendererClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(280).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(280).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(288).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(288).value = value }
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkCellRendererSpin(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val parent: GtkCellRendererText
        get() = memberAt(0)
    
    var priv: CPointer<GtkCellRendererSpinPrivate>?
        get() = memberAt<CPointerVar<GtkCellRendererSpinPrivate>>(40).value
        set(value) { memberAt<CPointerVar<GtkCellRendererSpinPrivate>>(40).value = value }
}

@CStruct("struct { struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkCellRendererSpinClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(336, 8)
    
    val parent: GtkCellRendererTextClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(304).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(304).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(312).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(312).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(320).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(320).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GtkCellRendererSpinner(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val parent: GtkCellRenderer
        get() = memberAt(0)
    
    var priv: CPointer<GtkCellRendererSpinnerPrivate>?
        get() = memberAt<CPointerVar<GtkCellRendererSpinnerPrivate>>(32).value
        set(value) { memberAt<CPointerVar<GtkCellRendererSpinnerPrivate>>(32).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkCellRendererSpinnerClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(296, 8)
    
    val parent_class: GtkCellRendererClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(280).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(280).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(288).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(288).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GtkCellRendererToggle(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val parent: GtkCellRenderer
        get() = memberAt(0)
    
    var priv: CPointer<GtkCellRendererTogglePrivate>?
        get() = memberAt<CPointerVar<GtkCellRendererTogglePrivate>>(32).value
        set(value) { memberAt<CPointerVar<GtkCellRendererTogglePrivate>>(32).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GtkCellRendererToggleClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(304, 8)
    
    val parent_class: GtkCellRendererClass
        get() = memberAt(0)
    
    var toggled: CPointer<CFunction<(CPointer<GtkCellRendererToggle>?, CPointer<gcharVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCellRendererToggle>?, CPointer<gcharVar>?) -> Unit>>>(264).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCellRendererToggle>?, CPointer<gcharVar>?) -> Unit>>>(264).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(280).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(280).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(288).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(288).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GtkCellView(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val parent_instance: GtkWidget
        get() = memberAt(0)
    
    var priv: CPointer<GtkCellViewPrivate>?
        get() = memberAt<CPointerVar<GtkCellViewPrivate>>(32).value
        set(value) { memberAt<CPointerVar<GtkCellViewPrivate>>(32).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; unsigned int p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; void* p23; void* p24; void* p25; void* p26; void* p27; void* p28; void* p29; void* p30; void* p31; void* p32; void* p33; void* p34; void* p35; void* p36; void* p37; void* p38; void* p39; void* p40; void* p41; void* p42; void* p43; void* p44; void* p45; void* p46; void* p47; void* p48; void* p49; void* p50; void* p51; void* p52; void* p53; void* p54; void* p55; void* p56; void* p57; void* p58; void* p59; void* p60; void* p61; void* p62; void* p63; void* p64; void* p65; void* p66; void* p67; void* p68; void* p69; void* p70; void* p71; void* p72; void* p73; void* p74; void* p75; void* p76; void* p77; void* p78; void* p79; void* p80; void* p81; void* p82; void* p83; void* p84; void* p85; void* p86; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkCellViewClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(856, 8)
    
    val parent_class: GtkWidgetClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(824).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(824).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(832).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(832).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(840).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(840).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(848).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(848).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkToggleButton(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(64, 8)
    
    val button: GtkButton
        get() = memberAt(0)
    
    var priv: CPointer<GtkToggleButtonPrivate>?
        get() = memberAt<CPointerVar<GtkToggleButtonPrivate>>(56).value
        set(value) { memberAt<CPointerVar<GtkToggleButtonPrivate>>(56).value = value }
}

@CStruct("struct { struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GtkToggleButtonClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1128, 8)
    
    val parent_class: GtkButtonClass
        get() = memberAt(0)
    
    var toggled: CPointer<CFunction<(CPointer<GtkToggleButton>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkToggleButton>?) -> Unit>>>(1088).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkToggleButton>?) -> Unit>>>(1088).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1096).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1096).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1104).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1104).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1112).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1112).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1120).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1120).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; }")
class _GtkCheckButton(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(64, 8)
    
    val toggle_button: GtkToggleButton
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GtkCheckButtonClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1168, 8)
    
    val parent_class: GtkToggleButtonClass
        get() = memberAt(0)
    
    var draw_indicator: CPointer<CFunction<(CPointer<GtkCheckButton>?, CPointer<cairo_t>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCheckButton>?, CPointer<cairo_t>?) -> Unit>>>(1128).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCheckButton>?, CPointer<cairo_t>?) -> Unit>>>(1128).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1136).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1136).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1144).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1152).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1160).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkMenuItem(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val bin: GtkBin
        get() = memberAt(0)
    
    var priv: CPointer<GtkMenuItemPrivate>?
        get() = memberAt<CPointerVar<GtkMenuItemPrivate>>(48).value
        set(value) { memberAt<CPointerVar<GtkMenuItemPrivate>>(48).value = value }
}

class _GtkMenuItemClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1112, 8)
    
    val parent_class: GtkBinClass
        get() = memberAt(0)
    
    var activate: CPointer<CFunction<(CPointer<GtkMenuItem>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkMenuItem>?) -> Unit>>>(1016).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkMenuItem>?) -> Unit>>>(1016).value = value }
    
    var activate_item: CPointer<CFunction<(CPointer<GtkMenuItem>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkMenuItem>?) -> Unit>>>(1024).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkMenuItem>?) -> Unit>>>(1024).value = value }
    
    var toggle_size_request: CPointer<CFunction<(CPointer<GtkMenuItem>?, CPointer<gintVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkMenuItem>?, CPointer<gintVar>?) -> Unit>>>(1032).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkMenuItem>?, CPointer<gintVar>?) -> Unit>>>(1032).value = value }
    
    var toggle_size_allocate: CPointer<CFunction<(CPointer<GtkMenuItem>?, gint) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkMenuItem>?, gint) -> Unit>>>(1040).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkMenuItem>?, gint) -> Unit>>>(1040).value = value }
    
    var set_label: CPointer<CFunction<(CPointer<GtkMenuItem>?, CPointer<gcharVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkMenuItem>?, CPointer<gcharVar>?) -> Unit>>>(1048).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkMenuItem>?, CPointer<gcharVar>?) -> Unit>>>(1048).value = value }
    
    var get_label: CPointer<CFunction<(CPointer<GtkMenuItem>?) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkMenuItem>?) -> CPointer<gcharVar>?>>>(1056).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkMenuItem>?) -> CPointer<gcharVar>?>>>(1056).value = value }
    
    var select: CPointer<CFunction<(CPointer<GtkMenuItem>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkMenuItem>?) -> Unit>>>(1064).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkMenuItem>?) -> Unit>>>(1064).value = value }
    
    var deselect: CPointer<CFunction<(CPointer<GtkMenuItem>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkMenuItem>?) -> Unit>>>(1072).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkMenuItem>?) -> Unit>>>(1072).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1080).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1080).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1088).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1088).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1096).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1096).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1104).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1104).value = value }
    
    var hide_on_activate: guint
        get() = readBits(this.rawPtr, 8064, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 8064, 1, value.toLong()) }
}

@CStruct("struct { struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkCheckMenuItem(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(64, 8)
    
    val menu_item: GtkMenuItem
        get() = memberAt(0)
    
    var priv: CPointer<GtkCheckMenuItemPrivate>?
        get() = memberAt<CPointerVar<GtkCheckMenuItemPrivate>>(56).value
        set(value) { memberAt<CPointerVar<GtkCheckMenuItemPrivate>>(56).value = value }
}

@CStruct("struct { null p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; }")
class _GtkCheckMenuItemClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1160, 8)
    
    val parent_class: GtkMenuItemClass
        get() = memberAt(0)
    
    var toggled: CPointer<CFunction<(CPointer<GtkCheckMenuItem>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCheckMenuItem>?) -> Unit>>>(1112).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCheckMenuItem>?) -> Unit>>>(1112).value = value }
    
    var draw_indicator: CPointer<CFunction<(CPointer<GtkCheckMenuItem>?, CPointer<cairo_t>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCheckMenuItem>?, CPointer<cairo_t>?) -> Unit>>>(1120).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCheckMenuItem>?, CPointer<cairo_t>?) -> Unit>>>(1120).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1128).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1128).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1136).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1136).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1144).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1152).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkColorButton(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(64, 8)
    
    val button: GtkButton
        get() = memberAt(0)
    
    var priv: CPointer<GtkColorButtonPrivate>?
        get() = memberAt<CPointerVar<GtkColorButtonPrivate>>(56).value
        set(value) { memberAt<CPointerVar<GtkColorButtonPrivate>>(56).value = value }
}

@CStruct("struct { struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GtkColorButtonClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1128, 8)
    
    val parent_class: GtkButtonClass
        get() = memberAt(0)
    
    var color_set: CPointer<CFunction<(CPointer<GtkColorButton>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkColorButton>?) -> Unit>>>(1088).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkColorButton>?) -> Unit>>>(1088).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1096).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1096).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1104).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1104).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1112).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1112).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1120).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1120).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; void* p5[12]; }")
class _GtkColorChooserInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(144, 8)
    
    val base_interface: GTypeInterface
        get() = memberAt(0)
    
    var get_rgba: CPointer<CFunction<(CPointer<GtkColorChooser>?, CPointer<GdkRGBA>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkColorChooser>?, CPointer<GdkRGBA>?) -> Unit>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkColorChooser>?, CPointer<GdkRGBA>?) -> Unit>>>(16).value = value }
    
    var set_rgba: CPointer<CFunction<(CPointer<GtkColorChooser>?, CPointer<GdkRGBA>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkColorChooser>?, CPointer<GdkRGBA>?) -> Unit>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkColorChooser>?, CPointer<GdkRGBA>?) -> Unit>>>(24).value = value }
    
    var add_palette: CPointer<CFunction<(CPointer<GtkColorChooser>?, GtkOrientation, gint, gint, CPointer<GdkRGBA>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkColorChooser>?, GtkOrientation, gint, gint, CPointer<GdkRGBA>?) -> Unit>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkColorChooser>?, GtkOrientation, gint, gint, CPointer<GdkRGBA>?) -> Unit>>>(32).value = value }
    
    var color_activated: CPointer<CFunction<(CPointer<GtkColorChooser>?, CPointer<GdkRGBA>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkColorChooser>?, CPointer<GdkRGBA>?) -> Unit>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkColorChooser>?, CPointer<GdkRGBA>?) -> Unit>>>(40).value = value }
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(48)
}

@CStruct("struct { struct { struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkColorChooserDialog(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(72, 8)
    
    val parent_instance: GtkDialog
        get() = memberAt(0)
    
    var priv: CPointer<GtkColorChooserDialogPrivate>?
        get() = memberAt<CPointerVar<GtkColorChooserDialogPrivate>>(64).value
        set(value) { memberAt<CPointerVar<GtkColorChooserDialogPrivate>>(64).value = value }
}

@CStruct("struct { struct { struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkColorChooserDialogClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1152, 8)
    
    val parent_class: GtkDialogClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1120).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1120).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1128).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1128).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1136).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1136).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1144).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkColorChooserWidget(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val parent_instance: GtkBox
        get() = memberAt(0)
    
    var priv: CPointer<GtkColorChooserWidgetPrivate>?
        get() = memberAt<CPointerVar<GtkColorChooserWidgetPrivate>>(48).value
        set(value) { memberAt<CPointerVar<GtkColorChooserWidgetPrivate>>(48).value = value }
}

@CStruct("struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; }")
class _GtkColorChooserWidgetClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1072, 8)
    
    val parent_class: GtkBoxClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1008).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1008).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value = value }
    
    var _gtk_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1040).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1040).value = value }
    
    var _gtk_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1048).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1048).value = value }
    
    var _gtk_reserved7: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1056).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1056).value = value }
    
    var _gtk_reserved8: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1064).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1064).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkComboBoxText(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(64, 8)
    
    val parent_instance: GtkComboBox
        get() = memberAt(0)
    
    var priv: CPointer<GtkComboBoxTextPrivate>?
        get() = memberAt<CPointerVar<GtkComboBoxTextPrivate>>(56).value
        set(value) { memberAt<CPointerVar<GtkComboBoxTextPrivate>>(56).value = value }
}

@CStruct("struct { struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkComboBoxTextClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1080, 8)
    
    val parent_class: GtkComboBoxClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1048).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1048).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1056).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1056).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1064).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1064).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1072).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1072).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GtkCssProvider(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GtkCssProviderPrivate>?
        get() = memberAt<CPointerVar<GtkCssProviderPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GtkCssProviderPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkCssProviderClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(168, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var parsing_error: CPointer<CFunction<(CPointer<GtkCssProvider>?, CPointer<GtkCssSection>?, CPointer<GError>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkCssProvider>?, CPointer<GtkCssSection>?, CPointer<GError>?) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkCssProvider>?, CPointer<GtkCssSection>?, CPointer<GError>?) -> Unit>>>(136).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GtkDrawingArea(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val widget: GtkWidget
        get() = memberAt(0)
    
    var dummy: gpointer?
        get() = memberAt<gpointerVar>(32).value
        set(value) { memberAt<gpointerVar>(32).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; unsigned int p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; void* p23; void* p24; void* p25; void* p26; void* p27; void* p28; void* p29; void* p30; void* p31; void* p32; void* p33; void* p34; void* p35; void* p36; void* p37; void* p38; void* p39; void* p40; void* p41; void* p42; void* p43; void* p44; void* p45; void* p46; void* p47; void* p48; void* p49; void* p50; void* p51; void* p52; void* p53; void* p54; void* p55; void* p56; void* p57; void* p58; void* p59; void* p60; void* p61; void* p62; void* p63; void* p64; void* p65; void* p66; void* p67; void* p68; void* p69; void* p70; void* p71; void* p72; void* p73; void* p74; void* p75; void* p76; void* p77; void* p78; void* p79; void* p80; void* p81; void* p82; void* p83; void* p84; void* p85; void* p86; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkDrawingAreaClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(856, 8)
    
    val parent_class: GtkWidgetClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(824).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(824).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(832).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(832).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(840).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(840).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(848).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(848).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkEventBox(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val bin: GtkBin
        get() = memberAt(0)
    
    var priv: CPointer<GtkEventBoxPrivate>?
        get() = memberAt<CPointerVar<GtkEventBoxPrivate>>(48).value
        set(value) { memberAt<CPointerVar<GtkEventBoxPrivate>>(48).value = value }
}

@CStruct("struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkEventBoxClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1040, 8)
    
    val parent_class: GtkBinClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1008).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1008).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkExpander(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val bin: GtkBin
        get() = memberAt(0)
    
    var priv: CPointer<GtkExpanderPrivate>?
        get() = memberAt<CPointerVar<GtkExpanderPrivate>>(48).value
        set(value) { memberAt<CPointerVar<GtkExpanderPrivate>>(48).value = value }
}

@CStruct("struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GtkExpanderClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1048, 8)
    
    val parent_class: GtkBinClass
        get() = memberAt(0)
    
    var activate: CPointer<CFunction<(CPointer<GtkExpander>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkExpander>?) -> Unit>>>(1008).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkExpander>?) -> Unit>>>(1008).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1040).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1040).value = value }
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkFixed(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val container: GtkContainer
        get() = memberAt(0)
    
    var priv: CPointer<GtkFixedPrivate>?
        get() = memberAt<CPointerVar<GtkFixedPrivate>>(40).value
        set(value) { memberAt<CPointerVar<GtkFixedPrivate>>(40).value = value }
}

@CStruct("struct { null p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkFixedClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1008, 8)
    
    val parent_class: GtkContainerClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(976).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(976).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(984).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(984).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(992).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(992).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1000).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1000).value = value }
}

@CStruct("struct { void* p0; int p1; int p2; }")
class _GtkFixedChild(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    var widget: CPointer<GtkWidget>?
        get() = memberAt<CPointerVar<GtkWidget>>(0).value
        set(value) { memberAt<CPointerVar<GtkWidget>>(0).value = value }
    
    var x: gint
        get() = memberAt<gintVar>(8).value
        set(value) { memberAt<gintVar>(8).value = value }
    
    var y: gint
        get() = memberAt<gintVar>(12).value
        set(value) { memberAt<gintVar>(12).value = value }
}

@CStruct("struct { unsigned int p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkFileFilterInfo(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    var contains: GtkFileFilterFlags
        get() = memberAt<GtkFileFilterFlagsVar>(0).value
        set(value) { memberAt<GtkFileFilterFlagsVar>(0).value = value }
    
    var filename: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(8).value
        set(value) { memberAt<CPointerVar<gcharVar>>(8).value = value }
    
    var uri: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(16).value
        set(value) { memberAt<CPointerVar<gcharVar>>(16).value = value }
    
    var display_name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(24).value
        set(value) { memberAt<CPointerVar<gcharVar>>(24).value = value }
    
    var mime_type: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(32).value
        set(value) { memberAt<CPointerVar<gcharVar>>(32).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkFileChooserButton(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val parent: GtkBox
        get() = memberAt(0)
    
    var priv: CPointer<GtkFileChooserButtonPrivate>?
        get() = memberAt<CPointerVar<GtkFileChooserButtonPrivate>>(48).value
        set(value) { memberAt<CPointerVar<GtkFileChooserButtonPrivate>>(48).value = value }
}

@CStruct("struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GtkFileChooserButtonClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1048, 8)
    
    val parent_class: GtkBoxClass
        get() = memberAt(0)
    
    var file_set: CPointer<CFunction<(CPointer<GtkFileChooserButton>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkFileChooserButton>?) -> Unit>>>(1008).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkFileChooserButton>?) -> Unit>>>(1008).value = value }
    
    var __gtk_reserved1: COpaquePointer?
        get() = memberAt<COpaquePointerVar>(1016).value
        set(value) { memberAt<COpaquePointerVar>(1016).value = value }
    
    var __gtk_reserved2: COpaquePointer?
        get() = memberAt<COpaquePointerVar>(1024).value
        set(value) { memberAt<COpaquePointerVar>(1024).value = value }
    
    var __gtk_reserved3: COpaquePointer?
        get() = memberAt<COpaquePointerVar>(1032).value
        set(value) { memberAt<COpaquePointerVar>(1032).value = value }
    
    var __gtk_reserved4: COpaquePointer?
        get() = memberAt<COpaquePointerVar>(1040).value
        set(value) { memberAt<COpaquePointerVar>(1040).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkFileChooserDialog(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(72, 8)
    
    val parent_instance: GtkDialog
        get() = memberAt(0)
    
    var priv: CPointer<GtkFileChooserDialogPrivate>?
        get() = memberAt<CPointerVar<GtkFileChooserDialogPrivate>>(64).value
        set(value) { memberAt<CPointerVar<GtkFileChooserDialogPrivate>>(64).value = value }
}

@CStruct("struct { struct { struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkFileChooserDialogClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1152, 8)
    
    val parent_class: GtkDialogClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1120).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1120).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1128).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1128).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1136).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1136).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1144).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; }")
class _GtkNativeDialog(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; }")
class _GtkNativeDialogClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(192, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var response: CPointer<CFunction<(CPointer<GtkNativeDialog>?, gint) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkNativeDialog>?, gint) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkNativeDialog>?, gint) -> Unit>>>(136).value = value }
    
    var show: CPointer<CFunction<(CPointer<GtkNativeDialog>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkNativeDialog>?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkNativeDialog>?) -> Unit>>>(144).value = value }
    
    var hide: CPointer<CFunction<(CPointer<GtkNativeDialog>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkNativeDialog>?) -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkNativeDialog>?) -> Unit>>>(152).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; } p0; }")
class GtkFileChooserNativeClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(192, 8)
    
    val parent_class: GtkNativeDialogClass
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkFileChooserWidget(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val parent_instance: GtkBox
        get() = memberAt(0)
    
    var priv: CPointer<GtkFileChooserWidgetPrivate>?
        get() = memberAt<CPointerVar<GtkFileChooserWidgetPrivate>>(48).value
        set(value) { memberAt<CPointerVar<GtkFileChooserWidgetPrivate>>(48).value = value }
}

@CStruct("struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkFileChooserWidgetClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1040, 8)
    
    val parent_class: GtkBoxClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1008).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1008).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value = value }
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; }")
class _GtkFlowBox(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val container: GtkContainer
        get() = memberAt(0)
}

@CStruct("struct { null p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; }")
class _GtkFlowBoxClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1080, 8)
    
    val parent_class: GtkContainerClass
        get() = memberAt(0)
    
    var child_activated: CPointer<CFunction<(CPointer<GtkFlowBox>?, CPointer<GtkFlowBoxChild>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkFlowBox>?, CPointer<GtkFlowBoxChild>?) -> Unit>>>(976).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkFlowBox>?, CPointer<GtkFlowBoxChild>?) -> Unit>>>(976).value = value }
    
    var selected_children_changed: CPointer<CFunction<(CPointer<GtkFlowBox>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkFlowBox>?) -> Unit>>>(984).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkFlowBox>?) -> Unit>>>(984).value = value }
    
    var activate_cursor_child: CPointer<CFunction<(CPointer<GtkFlowBox>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkFlowBox>?) -> Unit>>>(992).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkFlowBox>?) -> Unit>>>(992).value = value }
    
    var toggle_cursor_child: CPointer<CFunction<(CPointer<GtkFlowBox>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkFlowBox>?) -> Unit>>>(1000).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkFlowBox>?) -> Unit>>>(1000).value = value }
    
    var move_cursor: CPointer<CFunction<(CPointer<GtkFlowBox>?, GtkMovementStep, gint) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkFlowBox>?, GtkMovementStep, gint) -> gboolean>>>(1008).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkFlowBox>?, GtkMovementStep, gint) -> gboolean>>>(1008).value = value }
    
    var select_all: CPointer<CFunction<(CPointer<GtkFlowBox>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkFlowBox>?) -> Unit>>>(1016).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkFlowBox>?) -> Unit>>>(1016).value = value }
    
    var unselect_all: CPointer<CFunction<(CPointer<GtkFlowBox>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkFlowBox>?) -> Unit>>>(1024).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkFlowBox>?) -> Unit>>>(1024).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1040).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1040).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1048).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1048).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1056).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1056).value = value }
    
    var _gtk_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1064).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1064).value = value }
    
    var _gtk_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1072).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1072).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; }")
class _GtkFlowBoxChild(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val parent_instance: GtkBin
        get() = memberAt(0)
}

@CStruct("struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; }")
class _GtkFlowBoxChildClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1032, 8)
    
    val parent_class: GtkBinClass
        get() = memberAt(0)
    
    var activate: CPointer<CFunction<(CPointer<GtkFlowBoxChild>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkFlowBoxChild>?) -> Unit>>>(1008).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkFlowBoxChild>?) -> Unit>>>(1008).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkFontButton(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(64, 8)
    
    val button: GtkButton
        get() = memberAt(0)
    
    var priv: CPointer<GtkFontButtonPrivate>?
        get() = memberAt<CPointerVar<GtkFontButtonPrivate>>(56).value
        set(value) { memberAt<CPointerVar<GtkFontButtonPrivate>>(56).value = value }
}

@CStruct("struct { struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GtkFontButtonClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1128, 8)
    
    val parent_class: GtkButtonClass
        get() = memberAt(0)
    
    var font_set: CPointer<CFunction<(CPointer<GtkFontButton>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkFontButton>?) -> Unit>>>(1088).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkFontButton>?) -> Unit>>>(1088).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1096).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1096).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1104).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1104).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1112).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1112).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1120).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1120).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8[10]; }")
class _GtkFontChooserIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(152, 8)
    
    val base_iface: GTypeInterface
        get() = memberAt(0)
    
    var get_font_family: CPointer<CFunction<(CPointer<GtkFontChooser>?) -> CPointer<PangoFontFamily>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkFontChooser>?) -> CPointer<PangoFontFamily>?>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkFontChooser>?) -> CPointer<PangoFontFamily>?>>>(16).value = value }
    
    var get_font_face: CPointer<CFunction<(CPointer<GtkFontChooser>?) -> CPointer<PangoFontFace>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkFontChooser>?) -> CPointer<PangoFontFace>?>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkFontChooser>?) -> CPointer<PangoFontFace>?>>>(24).value = value }
    
    var get_font_size: CPointer<CFunction<(CPointer<GtkFontChooser>?) -> gint>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkFontChooser>?) -> gint>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkFontChooser>?) -> gint>>>(32).value = value }
    
    var set_filter_func: CPointer<CFunction<(CPointer<GtkFontChooser>?, GtkFontFilterFunc?, gpointer?, GDestroyNotify?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkFontChooser>?, GtkFontFilterFunc?, gpointer?, GDestroyNotify?) -> Unit>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkFontChooser>?, GtkFontFilterFunc?, gpointer?, GDestroyNotify?) -> Unit>>>(40).value = value }
    
    var font_activated: CPointer<CFunction<(CPointer<GtkFontChooser>?, CPointer<gcharVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkFontChooser>?, CPointer<gcharVar>?) -> Unit>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkFontChooser>?, CPointer<gcharVar>?) -> Unit>>>(48).value = value }
    
    var set_font_map: CPointer<CFunction<(CPointer<GtkFontChooser>?, CPointer<PangoFontMap>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkFontChooser>?, CPointer<PangoFontMap>?) -> Unit>>>(56).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkFontChooser>?, CPointer<PangoFontMap>?) -> Unit>>>(56).value = value }
    
    var get_font_map: CPointer<CFunction<(CPointer<GtkFontChooser>?) -> CPointer<PangoFontMap>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkFontChooser>?) -> CPointer<PangoFontMap>?>>>(64).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkFontChooser>?) -> CPointer<PangoFontMap>?>>>(64).value = value }
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(72)
}

@CStruct("struct { struct { struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkFontChooserDialog(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(72, 8)
    
    val parent_instance: GtkDialog
        get() = memberAt(0)
    
    var priv: CPointer<GtkFontChooserDialogPrivate>?
        get() = memberAt<CPointerVar<GtkFontChooserDialogPrivate>>(64).value
        set(value) { memberAt<CPointerVar<GtkFontChooserDialogPrivate>>(64).value = value }
}

@CStruct("struct { struct { struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkFontChooserDialogClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1152, 8)
    
    val parent_class: GtkDialogClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1120).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1120).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1128).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1128).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1136).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1136).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1144).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkFontChooserWidget(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val parent_instance: GtkBox
        get() = memberAt(0)
    
    var priv: CPointer<GtkFontChooserWidgetPrivate>?
        get() = memberAt<CPointerVar<GtkFontChooserWidgetPrivate>>(48).value
        set(value) { memberAt<CPointerVar<GtkFontChooserWidgetPrivate>>(48).value = value }
}

@CStruct("struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; }")
class _GtkFontChooserWidgetClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1072, 8)
    
    val parent_class: GtkBoxClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1008).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1008).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value = value }
    
    var _gtk_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1040).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1040).value = value }
    
    var _gtk_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1048).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1048).value = value }
    
    var _gtk_reserved7: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1056).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1056).value = value }
    
    var _gtk_reserved8: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1064).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1064).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; }")
class _GtkGLArea(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GtkWidget
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; unsigned int p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; void* p23; void* p24; void* p25; void* p26; void* p27; void* p28; void* p29; void* p30; void* p31; void* p32; void* p33; void* p34; void* p35; void* p36; void* p37; void* p38; void* p39; void* p40; void* p41; void* p42; void* p43; void* p44; void* p45; void* p46; void* p47; void* p48; void* p49; void* p50; void* p51; void* p52; void* p53; void* p54; void* p55; void* p56; void* p57; void* p58; void* p59; void* p60; void* p61; void* p62; void* p63; void* p64; void* p65; void* p66; void* p67; void* p68; void* p69; void* p70; void* p71; void* p72; void* p73; void* p74; void* p75; void* p76; void* p77; void* p78; void* p79; void* p80; void* p81; void* p82; void* p83; void* p84; void* p85; void* p86; } p0; void* p1; void* p2; void* p3; void* p4[6]; }")
class _GtkGLAreaClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(896, 8)
    
    val parent_class: GtkWidgetClass
        get() = memberAt(0)
    
    var render: CPointer<CFunction<(CPointer<GtkGLArea>?, CPointer<GdkGLContext>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkGLArea>?, CPointer<GdkGLContext>?) -> gboolean>>>(824).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkGLArea>?, CPointer<GdkGLContext>?) -> gboolean>>>(824).value = value }
    
    var resize: CPointer<CFunction<(CPointer<GtkGLArea>?, Int, Int) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkGLArea>?, Int, Int) -> Unit>>>(832).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkGLArea>?, Int, Int) -> Unit>>>(832).value = value }
    
    var create_context: CPointer<CFunction<(CPointer<GtkGLArea>?) -> CPointer<GdkGLContext>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkGLArea>?) -> CPointer<GdkGLContext>?>>>(840).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkGLArea>?) -> CPointer<GdkGLContext>?>>>(840).value = value }
    
    val _padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(848)
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkGrid(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val container: GtkContainer
        get() = memberAt(0)
    
    var priv: CPointer<GtkGridPrivate>?
        get() = memberAt<CPointerVar<GtkGridPrivate>>(40).value
        set(value) { memberAt<CPointerVar<GtkGridPrivate>>(40).value = value }
}

@CStruct("struct { null p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; }")
class _GtkGridClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1040, 8)
    
    val parent_class: GtkContainerClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(976).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(976).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(984).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(984).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(992).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(992).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1000).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1000).value = value }
    
    var _gtk_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1008).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1008).value = value }
    
    var _gtk_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value = value }
    
    var _gtk_reserved7: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value = value }
    
    var _gtk_reserved8: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value = value }
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; }")
class _GtkHeaderBar(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val container: GtkContainer
        get() = memberAt(0)
}

@CStruct("struct { null p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkHeaderBarClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1008, 8)
    
    val parent_class: GtkContainerClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(976).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(976).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(984).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(984).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(992).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(992).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1000).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1000).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; }")
class _GtkStyleProviderIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var get_style: CPointer<CFunction<(CPointer<GtkStyleProvider>?, CPointer<GtkWidgetPath>?) -> CPointer<GtkStyleProperties>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkStyleProvider>?, CPointer<GtkWidgetPath>?) -> CPointer<GtkStyleProperties>?>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkStyleProvider>?, CPointer<GtkWidgetPath>?) -> CPointer<GtkStyleProperties>?>>>(16).value = value }
    
    var get_style_property: CPointer<CFunction<(CPointer<GtkStyleProvider>?, CPointer<GtkWidgetPath>?, GtkStateFlags, CPointer<GParamSpec>?, CPointer<GValue>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkStyleProvider>?, CPointer<GtkWidgetPath>?, GtkStateFlags, CPointer<GParamSpec>?, CPointer<GValue>?) -> gboolean>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkStyleProvider>?, CPointer<GtkWidgetPath>?, GtkStateFlags, CPointer<GParamSpec>?, CPointer<GValue>?) -> gboolean>>>(24).value = value }
    
    var get_icon_factory: CPointer<CFunction<(CPointer<GtkStyleProvider>?, CPointer<GtkWidgetPath>?) -> CPointer<GtkIconFactory>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkStyleProvider>?, CPointer<GtkWidgetPath>?) -> CPointer<GtkIconFactory>?>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkStyleProvider>?, CPointer<GtkWidgetPath>?) -> CPointer<GtkIconFactory>?>>>(32).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GtkStyleProperties(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_object: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GtkStylePropertiesPrivate>?
        get() = memberAt<CPointerVar<GtkStylePropertiesPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GtkStylePropertiesPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GtkIconFactory(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GtkIconFactoryPrivate>?
        get() = memberAt<CPointerVar<GtkIconFactoryPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GtkIconFactoryPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GtkStyleContextClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(176, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var changed: CPointer<CFunction<(CPointer<GtkStyleContext>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkStyleContext>?) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkStyleContext>?) -> Unit>>>(136).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GtkIconTheme(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GtkIconThemePrivate>?
        get() = memberAt<CPointerVar<GtkIconThemePrivate>>(24).value
        set(value) { memberAt<CPointerVar<GtkIconThemePrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GtkIconThemeClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(176, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var changed: CPointer<CFunction<(CPointer<GtkIconTheme>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkIconTheme>?) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkIconTheme>?) -> Unit>>>(136).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value = value }
}

@CStruct("struct { int p0; int p1; }")
class _GdkPoint(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(8, 4)
    
    var x: gint
        get() = memberAt<gintVar>(0).value
        set(value) { memberAt<gintVar>(0).value = value }
    
    var y: gint
        get() = memberAt<gintVar>(4).value
        set(value) { memberAt<gintVar>(4).value = value }
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkIconView(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val parent: GtkContainer
        get() = memberAt(0)
    
    var priv: CPointer<GtkIconViewPrivate>?
        get() = memberAt<CPointerVar<GtkIconViewPrivate>>(40).value
        set(value) { memberAt<CPointerVar<GtkIconViewPrivate>>(40).value = value }
}

@CStruct("struct { null p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; }")
class _GtkIconViewClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1072, 8)
    
    val parent_class: GtkContainerClass
        get() = memberAt(0)
    
    var item_activated: CPointer<CFunction<(CPointer<GtkIconView>?, CPointer<GtkTreePath>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkIconView>?, CPointer<GtkTreePath>?) -> Unit>>>(976).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkIconView>?, CPointer<GtkTreePath>?) -> Unit>>>(976).value = value }
    
    var selection_changed: CPointer<CFunction<(CPointer<GtkIconView>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkIconView>?) -> Unit>>>(984).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkIconView>?) -> Unit>>>(984).value = value }
    
    var select_all: CPointer<CFunction<(CPointer<GtkIconView>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkIconView>?) -> Unit>>>(992).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkIconView>?) -> Unit>>>(992).value = value }
    
    var unselect_all: CPointer<CFunction<(CPointer<GtkIconView>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkIconView>?) -> Unit>>>(1000).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkIconView>?) -> Unit>>>(1000).value = value }
    
    var select_cursor_item: CPointer<CFunction<(CPointer<GtkIconView>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkIconView>?) -> Unit>>>(1008).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkIconView>?) -> Unit>>>(1008).value = value }
    
    var toggle_cursor_item: CPointer<CFunction<(CPointer<GtkIconView>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkIconView>?) -> Unit>>>(1016).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkIconView>?) -> Unit>>>(1016).value = value }
    
    var move_cursor: CPointer<CFunction<(CPointer<GtkIconView>?, GtkMovementStep, gint) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkIconView>?, GtkMovementStep, gint) -> gboolean>>>(1024).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkIconView>?, GtkMovementStep, gint) -> gboolean>>>(1024).value = value }
    
    var activate_cursor_item: CPointer<CFunction<(CPointer<GtkIconView>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkIconView>?) -> gboolean>>>(1032).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkIconView>?) -> gboolean>>>(1032).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1040).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1040).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1048).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1048).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1056).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1056).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1064).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1064).value = value }
}

@CStruct("struct { void* p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkIMContextInfo(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    var context_id: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(0).value
        set(value) { memberAt<CPointerVar<gcharVar>>(0).value = value }
    
    var context_name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(8).value
        set(value) { memberAt<CPointerVar<gcharVar>>(8).value = value }
    
    var domain: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(16).value
        set(value) { memberAt<CPointerVar<gcharVar>>(16).value = value }
    
    var domain_dirname: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(24).value
        set(value) { memberAt<CPointerVar<gcharVar>>(24).value = value }
    
    var default_locales: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(32).value
        set(value) { memberAt<CPointerVar<gcharVar>>(32).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; } p0; void* p1; }")
class _GtkIMContextSimple(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val `object`: GtkIMContext
        get() = memberAt(0)
    
    var priv: CPointer<GtkIMContextSimplePrivate>?
        get() = memberAt<CPointerVar<GtkIMContextSimplePrivate>>(24).value
        set(value) { memberAt<CPointerVar<GtkIMContextSimplePrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; } p0; }")
class _GtkIMContextSimpleClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(312, 8)
    
    val parent_class: GtkIMContextClass
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; } p0; void* p1; }")
class _GtkIMMulticontext(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val `object`: GtkIMContext
        get() = memberAt(0)
    
    var priv: CPointer<GtkIMMulticontextPrivate>?
        get() = memberAt<CPointerVar<GtkIMMulticontextPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GtkIMMulticontextPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkIMMulticontextClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(344, 8)
    
    val parent_class: GtkIMContextClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(312).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(312).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(320).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(320).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(336).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(336).value = value }
}

@CStruct("struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; }")
class _GtkInfoBarClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1056, 8)
    
    val parent_class: GtkBoxClass
        get() = memberAt(0)
    
    var response: CPointer<CFunction<(CPointer<GtkInfoBar>?, gint) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkInfoBar>?, gint) -> Unit>>>(1008).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkInfoBar>?, gint) -> Unit>>>(1008).value = value }
    
    var close: CPointer<CFunction<(CPointer<GtkInfoBar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkInfoBar>?) -> Unit>>>(1016).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkInfoBar>?) -> Unit>>>(1016).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1040).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1040).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1048).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1048).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkInfoBar(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val parent: GtkBox
        get() = memberAt(0)
    
    var priv: CPointer<GtkInfoBarPrivate>?
        get() = memberAt<CPointerVar<GtkInfoBarPrivate>>(48).value
        set(value) { memberAt<CPointerVar<GtkInfoBarPrivate>>(48).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GtkInvisible(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val widget: GtkWidget
        get() = memberAt(0)
    
    var priv: CPointer<GtkInvisiblePrivate>?
        get() = memberAt<CPointerVar<GtkInvisiblePrivate>>(32).value
        set(value) { memberAt<CPointerVar<GtkInvisiblePrivate>>(32).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; unsigned int p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; void* p23; void* p24; void* p25; void* p26; void* p27; void* p28; void* p29; void* p30; void* p31; void* p32; void* p33; void* p34; void* p35; void* p36; void* p37; void* p38; void* p39; void* p40; void* p41; void* p42; void* p43; void* p44; void* p45; void* p46; void* p47; void* p48; void* p49; void* p50; void* p51; void* p52; void* p53; void* p54; void* p55; void* p56; void* p57; void* p58; void* p59; void* p60; void* p61; void* p62; void* p63; void* p64; void* p65; void* p66; void* p67; void* p68; void* p69; void* p70; void* p71; void* p72; void* p73; void* p74; void* p75; void* p76; void* p77; void* p78; void* p79; void* p80; void* p81; void* p82; void* p83; void* p84; void* p85; void* p86; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkInvisibleClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(856, 8)
    
    val parent_class: GtkWidgetClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(824).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(824).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(832).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(832).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(840).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(840).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(848).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(848).value = value }
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkLayout(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val container: GtkContainer
        get() = memberAt(0)
    
    var priv: CPointer<GtkLayoutPrivate>?
        get() = memberAt<CPointerVar<GtkLayoutPrivate>>(40).value
        set(value) { memberAt<CPointerVar<GtkLayoutPrivate>>(40).value = value }
}

@CStruct("struct { null p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkLayoutClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1008, 8)
    
    val parent_class: GtkContainerClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(976).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(976).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(984).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(984).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(992).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(992).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1000).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1000).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; unsigned int p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; void* p23; void* p24; void* p25; void* p26; void* p27; void* p28; void* p29; void* p30; void* p31; void* p32; void* p33; void* p34; void* p35; void* p36; void* p37; void* p38; void* p39; void* p40; void* p41; void* p42; void* p43; void* p44; void* p45; void* p46; void* p47; void* p48; void* p49; void* p50; void* p51; void* p52; void* p53; void* p54; void* p55; void* p56; void* p57; void* p58; void* p59; void* p60; void* p61; void* p62; void* p63; void* p64; void* p65; void* p66; void* p67; void* p68; void* p69; void* p70; void* p71; void* p72; void* p73; void* p74; void* p75; void* p76; void* p77; void* p78; void* p79; void* p80; void* p81; void* p82; void* p83; void* p84; void* p85; void* p86; } p0; void* p1; void* p2[16]; }")
class _GtkLevelBarClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(960, 8)
    
    val parent_class: GtkWidgetClass
        get() = memberAt(0)
    
    var offset_changed: CPointer<CFunction<(CPointer<GtkLevelBar>?, CPointer<gcharVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkLevelBar>?, CPointer<gcharVar>?) -> Unit>>>(824).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkLevelBar>?, CPointer<gcharVar>?) -> Unit>>>(824).value = value }
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(832)
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GtkLevelBar(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val parent: GtkWidget
        get() = memberAt(0)
    
    var priv: CPointer<GtkLevelBarPrivate>?
        get() = memberAt<CPointerVar<GtkLevelBarPrivate>>(32).value
        set(value) { memberAt<CPointerVar<GtkLevelBarPrivate>>(32).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkLinkButton(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(64, 8)
    
    val parent_instance: GtkButton
        get() = memberAt(0)
    
    var priv: CPointer<GtkLinkButtonPrivate>?
        get() = memberAt<CPointerVar<GtkLinkButtonPrivate>>(56).value
        set(value) { memberAt<CPointerVar<GtkLinkButtonPrivate>>(56).value = value }
}

@CStruct("struct { struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GtkLinkButtonClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1128, 8)
    
    val parent_class: GtkButtonClass
        get() = memberAt(0)
    
    var activate_link: CPointer<CFunction<(CPointer<GtkLinkButton>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkLinkButton>?) -> gboolean>>>(1088).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkLinkButton>?) -> gboolean>>>(1088).value = value }
    
    var _gtk_padding1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1096).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1096).value = value }
    
    var _gtk_padding2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1104).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1104).value = value }
    
    var _gtk_padding3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1112).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1112).value = value }
    
    var _gtk_padding4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1120).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1120).value = value }
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; }")
class _GtkListBox(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val parent_instance: GtkContainer
        get() = memberAt(0)
}

@CStruct("struct { null p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; }")
class _GtkListBoxClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1064, 8)
    
    val parent_class: GtkContainerClass
        get() = memberAt(0)
    
    var row_selected: CPointer<CFunction<(CPointer<GtkListBox>?, CPointer<GtkListBoxRow>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkListBox>?, CPointer<GtkListBoxRow>?) -> Unit>>>(976).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkListBox>?, CPointer<GtkListBoxRow>?) -> Unit>>>(976).value = value }
    
    var row_activated: CPointer<CFunction<(CPointer<GtkListBox>?, CPointer<GtkListBoxRow>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkListBox>?, CPointer<GtkListBoxRow>?) -> Unit>>>(984).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkListBox>?, CPointer<GtkListBoxRow>?) -> Unit>>>(984).value = value }
    
    var activate_cursor_row: CPointer<CFunction<(CPointer<GtkListBox>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkListBox>?) -> Unit>>>(992).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkListBox>?) -> Unit>>>(992).value = value }
    
    var toggle_cursor_row: CPointer<CFunction<(CPointer<GtkListBox>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkListBox>?) -> Unit>>>(1000).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkListBox>?) -> Unit>>>(1000).value = value }
    
    var move_cursor: CPointer<CFunction<(CPointer<GtkListBox>?, GtkMovementStep, gint) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkListBox>?, GtkMovementStep, gint) -> Unit>>>(1008).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkListBox>?, GtkMovementStep, gint) -> Unit>>>(1008).value = value }
    
    var selected_rows_changed: CPointer<CFunction<(CPointer<GtkListBox>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkListBox>?) -> Unit>>>(1016).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkListBox>?) -> Unit>>>(1016).value = value }
    
    var select_all: CPointer<CFunction<(CPointer<GtkListBox>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkListBox>?) -> Unit>>>(1024).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkListBox>?) -> Unit>>>(1024).value = value }
    
    var unselect_all: CPointer<CFunction<(CPointer<GtkListBox>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkListBox>?) -> Unit>>>(1032).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkListBox>?) -> Unit>>>(1032).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1040).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1040).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1048).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1048).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1056).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1056).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; }")
class _GtkListBoxRow(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val parent_instance: GtkBin
        get() = memberAt(0)
}

@CStruct("struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; }")
class _GtkListBoxRowClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1032, 8)
    
    val parent_class: GtkBinClass
        get() = memberAt(0)
    
    var activate: CPointer<CFunction<(CPointer<GtkListBoxRow>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkListBoxRow>?) -> Unit>>>(1008).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkListBoxRow>?) -> Unit>>>(1008).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkLockButton(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(64, 8)
    
    val parent: GtkButton
        get() = memberAt(0)
    
    var priv: CPointer<GtkLockButtonPrivate>?
        get() = memberAt<CPointerVar<GtkLockButtonPrivate>>(56).value
        set(value) { memberAt<CPointerVar<GtkLockButtonPrivate>>(56).value = value }
}

@CStruct("struct { struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; }")
class _GtkLockButtonClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1152, 8)
    
    val parent_class: GtkButtonClass
        get() = memberAt(0)
    
    var reserved0: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1088).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1088).value = value }
    
    var reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1096).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1096).value = value }
    
    var reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1104).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1104).value = value }
    
    var reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1112).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1112).value = value }
    
    var reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1120).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1120).value = value }
    
    var reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1128).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1128).value = value }
    
    var reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1136).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1136).value = value }
    
    var reserved7: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1144).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkMenuBar(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val menu_shell: GtkMenuShell
        get() = memberAt(0)
    
    var priv: CPointer<GtkMenuBarPrivate>?
        get() = memberAt<CPointerVar<GtkMenuBarPrivate>>(48).value
        set(value) { memberAt<CPointerVar<GtkMenuBarPrivate>>(48).value = value }
}

@CStruct("struct { null p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkMenuBarClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1120, 8)
    
    val parent_class: GtkMenuShellClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1088).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1088).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1096).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1096).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1104).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1104).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1112).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1112).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkPopover(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val parent_instance: GtkBin
        get() = memberAt(0)
    
    var priv: CPointer<GtkPopoverPrivate>?
        get() = memberAt<CPointerVar<GtkPopoverPrivate>>(48).value
        set(value) { memberAt<CPointerVar<GtkPopoverPrivate>>(48).value = value }
}

@CStruct("struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2[10]; }")
class _GtkPopoverClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1096, 8)
    
    val parent_class: GtkBinClass
        get() = memberAt(0)
    
    var closed: CPointer<CFunction<(CPointer<GtkPopover>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkPopover>?) -> Unit>>>(1008).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkPopover>?) -> Unit>>>(1008).value = value }
    
    val reserved: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(1016)
}

@CStruct("struct { struct { struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkMenuButton(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(72, 8)
    
    val parent: GtkToggleButton
        get() = memberAt(0)
    
    var priv: CPointer<GtkMenuButtonPrivate>?
        get() = memberAt<CPointerVar<GtkMenuButtonPrivate>>(64).value
        set(value) { memberAt<CPointerVar<GtkMenuButtonPrivate>>(64).value = value }
}

@CStruct("struct { struct { struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkMenuButtonClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1160, 8)
    
    val parent_class: GtkToggleButtonClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1128).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1128).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1136).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1136).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1144).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1152).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GtkSizeGroup(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GtkSizeGroupPrivate>?
        get() = memberAt<CPointerVar<GtkSizeGroupPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GtkSizeGroupPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkSizeGroupClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(168, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(136).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkToolItem(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val parent: GtkBin
        get() = memberAt(0)
    
    var priv: CPointer<GtkToolItemPrivate>?
        get() = memberAt<CPointerVar<GtkToolItemPrivate>>(48).value
        set(value) { memberAt<CPointerVar<GtkToolItemPrivate>>(48).value = value }
}

@CStruct("struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; }")
class _GtkToolItemClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1056, 8)
    
    val parent_class: GtkBinClass
        get() = memberAt(0)
    
    var create_menu_proxy: CPointer<CFunction<(CPointer<GtkToolItem>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkToolItem>?) -> gboolean>>>(1008).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkToolItem>?) -> gboolean>>>(1008).value = value }
    
    var toolbar_reconfigured: CPointer<CFunction<(CPointer<GtkToolItem>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkToolItem>?) -> Unit>>>(1016).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkToolItem>?) -> Unit>>>(1016).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1040).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1040).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1048).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1048).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkToolButton(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(64, 8)
    
    val parent: GtkToolItem
        get() = memberAt(0)
    
    var priv: CPointer<GtkToolButtonPrivate>?
        get() = memberAt<CPointerVar<GtkToolButtonPrivate>>(56).value
        set(value) { memberAt<CPointerVar<GtkToolButtonPrivate>>(56).value = value }
}

@CStruct("struct { struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; } p0; unsigned long p1; void* p2; void* p3; void* p4; void* p5; void* p6; }")
class _GtkToolButtonClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1104, 8)
    
    val parent_class: GtkToolItemClass
        get() = memberAt(0)
    
    var button_type: GType
        get() = memberAt<GTypeVar>(1056).value
        set(value) { memberAt<GTypeVar>(1056).value = value }
    
    var clicked: CPointer<CFunction<(CPointer<GtkToolButton>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkToolButton>?) -> Unit>>>(1064).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkToolButton>?) -> Unit>>>(1064).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1072).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1072).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1080).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1080).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1088).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1088).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1096).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1096).value = value }
}

@CStruct("struct { struct { struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; } p0; unsigned long p1; void* p2; void* p3; void* p4; void* p5; void* p6; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GtkMenuToolButtonClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1144, 8)
    
    val parent_class: GtkToolButtonClass
        get() = memberAt(0)
    
    var show_menu: CPointer<CFunction<(CPointer<GtkMenuToolButton>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkMenuToolButton>?) -> Unit>>>(1104).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkMenuToolButton>?) -> Unit>>>(1104).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1112).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1112).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1120).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1120).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1128).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1128).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1136).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1136).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkMenuToolButton(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(72, 8)
    
    val parent: GtkToolButton
        get() = memberAt(0)
    
    var priv: CPointer<GtkMenuToolButtonPrivate>?
        get() = memberAt<CPointerVar<GtkMenuToolButtonPrivate>>(64).value
        set(value) { memberAt<CPointerVar<GtkMenuToolButtonPrivate>>(64).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkMessageDialog(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(72, 8)
    
    val parent_instance: GtkDialog
        get() = memberAt(0)
    
    var priv: CPointer<GtkMessageDialogPrivate>?
        get() = memberAt<CPointerVar<GtkMessageDialogPrivate>>(64).value
        set(value) { memberAt<CPointerVar<GtkMessageDialogPrivate>>(64).value = value }
}

@CStruct("struct { struct { struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkMessageDialogClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1152, 8)
    
    val parent_class: GtkDialogClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1120).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1120).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1128).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1128).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1136).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1136).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1144).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GtkMountOperation(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val parent_instance: GMountOperation
        get() = memberAt(0)
    
    var priv: CPointer<GtkMountOperationPrivate>?
        get() = memberAt<CPointerVar<GtkMountOperationPrivate>>(32).value
        set(value) { memberAt<CPointerVar<GtkMountOperationPrivate>>(32).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkMountOperationClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(288, 8)
    
    val parent_class: GMountOperationClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(256).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(256).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(280).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(280).value = value }
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkNotebook(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val container: GtkContainer
        get() = memberAt(0)
    
    var priv: CPointer<GtkNotebookPrivate>?
        get() = memberAt<CPointerVar<GtkNotebookPrivate>>(40).value
        set(value) { memberAt<CPointerVar<GtkNotebookPrivate>>(40).value = value }
}

@CStruct("struct { null p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; }")
class _GtkNotebookClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1128, 8)
    
    val parent_class: GtkContainerClass
        get() = memberAt(0)
    
    var switch_page: CPointer<CFunction<(CPointer<GtkNotebook>?, CPointer<GtkWidget>?, guint) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkNotebook>?, CPointer<GtkWidget>?, guint) -> Unit>>>(976).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkNotebook>?, CPointer<GtkWidget>?, guint) -> Unit>>>(976).value = value }
    
    var select_page: CPointer<CFunction<(CPointer<GtkNotebook>?, gboolean) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkNotebook>?, gboolean) -> gboolean>>>(984).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkNotebook>?, gboolean) -> gboolean>>>(984).value = value }
    
    var focus_tab: CPointer<CFunction<(CPointer<GtkNotebook>?, GtkNotebookTab) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkNotebook>?, GtkNotebookTab) -> gboolean>>>(992).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkNotebook>?, GtkNotebookTab) -> gboolean>>>(992).value = value }
    
    var change_current_page: CPointer<CFunction<(CPointer<GtkNotebook>?, gint) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkNotebook>?, gint) -> gboolean>>>(1000).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkNotebook>?, gint) -> gboolean>>>(1000).value = value }
    
    var move_focus_out: CPointer<CFunction<(CPointer<GtkNotebook>?, GtkDirectionType) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkNotebook>?, GtkDirectionType) -> Unit>>>(1008).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkNotebook>?, GtkDirectionType) -> Unit>>>(1008).value = value }
    
    var reorder_tab: CPointer<CFunction<(CPointer<GtkNotebook>?, GtkDirectionType, gboolean) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkNotebook>?, GtkDirectionType, gboolean) -> gboolean>>>(1016).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkNotebook>?, GtkDirectionType, gboolean) -> gboolean>>>(1016).value = value }
    
    var insert_page: CPointer<CFunction<(CPointer<GtkNotebook>?, CPointer<GtkWidget>?, CPointer<GtkWidget>?, CPointer<GtkWidget>?, gint) -> gint>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkNotebook>?, CPointer<GtkWidget>?, CPointer<GtkWidget>?, CPointer<GtkWidget>?, gint) -> gint>>>(1024).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkNotebook>?, CPointer<GtkWidget>?, CPointer<GtkWidget>?, CPointer<GtkWidget>?, gint) -> gint>>>(1024).value = value }
    
    var create_window: CPointer<CFunction<(CPointer<GtkNotebook>?, CPointer<GtkWidget>?, gint, gint) -> CPointer<GtkNotebook>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkNotebook>?, CPointer<GtkWidget>?, gint, gint) -> CPointer<GtkNotebook>?>>>(1032).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkNotebook>?, CPointer<GtkWidget>?, gint, gint) -> CPointer<GtkNotebook>?>>>(1032).value = value }
    
    var page_reordered: CPointer<CFunction<(CPointer<GtkNotebook>?, CPointer<GtkWidget>?, guint) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkNotebook>?, CPointer<GtkWidget>?, guint) -> Unit>>>(1040).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkNotebook>?, CPointer<GtkWidget>?, guint) -> Unit>>>(1040).value = value }
    
    var page_removed: CPointer<CFunction<(CPointer<GtkNotebook>?, CPointer<GtkWidget>?, guint) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkNotebook>?, CPointer<GtkWidget>?, guint) -> Unit>>>(1048).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkNotebook>?, CPointer<GtkWidget>?, guint) -> Unit>>>(1048).value = value }
    
    var page_added: CPointer<CFunction<(CPointer<GtkNotebook>?, CPointer<GtkWidget>?, guint) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkNotebook>?, CPointer<GtkWidget>?, guint) -> Unit>>>(1056).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkNotebook>?, CPointer<GtkWidget>?, guint) -> Unit>>>(1056).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1064).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1064).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1072).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1072).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1080).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1080).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1088).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1088).value = value }
    
    var _gtk_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1096).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1096).value = value }
    
    var _gtk_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1104).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1104).value = value }
    
    var _gtk_reserved7: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1112).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1112).value = value }
    
    var _gtk_reserved8: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1120).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1120).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; }")
class _GtkOffscreenWindow(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val parent_object: GtkWindow
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkOffscreenWindowClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1104, 8)
    
    val parent_class: GtkWindowClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1072).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1072).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1080).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1080).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1088).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1088).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1096).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1096).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; }")
class _GtkOrientableIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    val base_iface: GTypeInterface
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkOverlay(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val parent: GtkBin
        get() = memberAt(0)
    
    var priv: CPointer<GtkOverlayPrivate>?
        get() = memberAt<CPointerVar<GtkOverlayPrivate>>(48).value
        set(value) { memberAt<CPointerVar<GtkOverlayPrivate>>(48).value = value }
}

@CStruct("struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; }")
class _GtkOverlayClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1080, 8)
    
    val parent_class: GtkBinClass
        get() = memberAt(0)
    
    var get_child_position: CPointer<CFunction<(CPointer<GtkOverlay>?, CPointer<GtkWidget>?, CPointer<GtkAllocation>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkOverlay>?, CPointer<GtkWidget>?, CPointer<GtkAllocation>?) -> gboolean>>>(1008).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkOverlay>?, CPointer<GtkWidget>?, CPointer<GtkAllocation>?) -> gboolean>>>(1008).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1040).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1040).value = value }
    
    var _gtk_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1048).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1048).value = value }
    
    var _gtk_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1056).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1056).value = value }
    
    var _gtk_reserved7: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1064).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1064).value = value }
    
    var _gtk_reserved8: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1072).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1072).value = value }
}

@CStruct("struct { unsigned int p0; int p1; int p2; void* p3; void* p4; }")
class _GtkPadActionEntry(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    var type: GtkPadActionType
        get() = memberAt<GtkPadActionType.Var>(0).value
        set(value) { memberAt<GtkPadActionType.Var>(0).value = value }
    
    var index: gint
        get() = memberAt<gintVar>(4).value
        set(value) { memberAt<gintVar>(4).value = value }
    
    var mode: gint
        get() = memberAt<gintVar>(8).value
        set(value) { memberAt<gintVar>(8).value = value }
    
    var label: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(16).value
        set(value) { memberAt<CPointerVar<gcharVar>>(16).value = value }
    
    var action_name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(24).value
        set(value) { memberAt<CPointerVar<gcharVar>>(24).value = value }
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkPaned(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val container: GtkContainer
        get() = memberAt(0)
    
    var priv: CPointer<GtkPanedPrivate>?
        get() = memberAt<CPointerVar<GtkPanedPrivate>>(40).value
        set(value) { memberAt<CPointerVar<GtkPanedPrivate>>(40).value = value }
}

@CStruct("struct { null p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; }")
class _GtkPanedClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1056, 8)
    
    val parent_class: GtkContainerClass
        get() = memberAt(0)
    
    var cycle_child_focus: CPointer<CFunction<(CPointer<GtkPaned>?, gboolean) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkPaned>?, gboolean) -> gboolean>>>(976).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkPaned>?, gboolean) -> gboolean>>>(976).value = value }
    
    var toggle_handle_focus: CPointer<CFunction<(CPointer<GtkPaned>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkPaned>?) -> gboolean>>>(984).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkPaned>?) -> gboolean>>>(984).value = value }
    
    var move_handle: CPointer<CFunction<(CPointer<GtkPaned>?, GtkScrollType) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkPaned>?, GtkScrollType) -> gboolean>>>(992).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkPaned>?, GtkScrollType) -> gboolean>>>(992).value = value }
    
    var cycle_handle_focus: CPointer<CFunction<(CPointer<GtkPaned>?, gboolean) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkPaned>?, gboolean) -> gboolean>>>(1000).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkPaned>?, gboolean) -> gboolean>>>(1000).value = value }
    
    var accept_position: CPointer<CFunction<(CPointer<GtkPaned>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkPaned>?) -> gboolean>>>(1008).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkPaned>?) -> gboolean>>>(1008).value = value }
    
    var cancel_position: CPointer<CFunction<(CPointer<GtkPaned>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkPaned>?) -> gboolean>>>(1016).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkPaned>?) -> gboolean>>>(1016).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1040).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1040).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1048).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1048).value = value }
}

@CStruct("struct { struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2[10]; } p0; void* p1[10]; }")
class _GtkPopoverMenuClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1176, 8)
    
    val parent_class: GtkPopoverClass
        get() = memberAt(0)
    
    val reserved: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(1096)
}

@CStruct("struct { int p0; int p1; }")
class _GtkPageRange(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(8, 4)
    
    var start: gint
        get() = memberAt<gintVar>(0).value
        set(value) { memberAt<gintVar>(0).value = value }
    
    var end: gint
        get() = memberAt<gintVar>(4).value
        set(value) { memberAt<gintVar>(4).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; }")
class _GtkPrintOperationPreviewIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(120, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var ready: CPointer<CFunction<(CPointer<GtkPrintOperationPreview>?, CPointer<GtkPrintContext>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkPrintOperationPreview>?, CPointer<GtkPrintContext>?) -> Unit>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkPrintOperationPreview>?, CPointer<GtkPrintContext>?) -> Unit>>>(16).value = value }
    
    var got_page_size: CPointer<CFunction<(CPointer<GtkPrintOperationPreview>?, CPointer<GtkPrintContext>?, CPointer<GtkPageSetup>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkPrintOperationPreview>?, CPointer<GtkPrintContext>?, CPointer<GtkPageSetup>?) -> Unit>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkPrintOperationPreview>?, CPointer<GtkPrintContext>?, CPointer<GtkPageSetup>?) -> Unit>>>(24).value = value }
    
    var render_page: CPointer<CFunction<(CPointer<GtkPrintOperationPreview>?, gint) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkPrintOperationPreview>?, gint) -> Unit>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkPrintOperationPreview>?, gint) -> Unit>>>(32).value = value }
    
    var is_selected: CPointer<CFunction<(CPointer<GtkPrintOperationPreview>?, gint) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkPrintOperationPreview>?, gint) -> gboolean>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkPrintOperationPreview>?, gint) -> gboolean>>>(40).value = value }
    
    var end_preview: CPointer<CFunction<(CPointer<GtkPrintOperationPreview>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkPrintOperationPreview>?) -> Unit>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkPrintOperationPreview>?) -> Unit>>>(48).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(56).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(56).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(64).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(64).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(72).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(72).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(80).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(80).value = value }
    
    var _gtk_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(88).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(88).value = value }
    
    var _gtk_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(96).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(96).value = value }
    
    var _gtk_reserved7: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(104).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(104).value = value }
    
    var _gtk_reserved8: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(112).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(112).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; }")
class _GtkPrintOperationClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(288, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var done: CPointer<CFunction<(CPointer<GtkPrintOperation>?, GtkPrintOperationResult) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkPrintOperation>?, GtkPrintOperationResult) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkPrintOperation>?, GtkPrintOperationResult) -> Unit>>>(136).value = value }
    
    var begin_print: CPointer<CFunction<(CPointer<GtkPrintOperation>?, CPointer<GtkPrintContext>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkPrintOperation>?, CPointer<GtkPrintContext>?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkPrintOperation>?, CPointer<GtkPrintContext>?) -> Unit>>>(144).value = value }
    
    var paginate: CPointer<CFunction<(CPointer<GtkPrintOperation>?, CPointer<GtkPrintContext>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkPrintOperation>?, CPointer<GtkPrintContext>?) -> gboolean>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkPrintOperation>?, CPointer<GtkPrintContext>?) -> gboolean>>>(152).value = value }
    
    var request_page_setup: CPointer<CFunction<(CPointer<GtkPrintOperation>?, CPointer<GtkPrintContext>?, gint, CPointer<GtkPageSetup>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkPrintOperation>?, CPointer<GtkPrintContext>?, gint, CPointer<GtkPageSetup>?) -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkPrintOperation>?, CPointer<GtkPrintContext>?, gint, CPointer<GtkPageSetup>?) -> Unit>>>(160).value = value }
    
    var draw_page: CPointer<CFunction<(CPointer<GtkPrintOperation>?, CPointer<GtkPrintContext>?, gint) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkPrintOperation>?, CPointer<GtkPrintContext>?, gint) -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkPrintOperation>?, CPointer<GtkPrintContext>?, gint) -> Unit>>>(168).value = value }
    
    var end_print: CPointer<CFunction<(CPointer<GtkPrintOperation>?, CPointer<GtkPrintContext>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkPrintOperation>?, CPointer<GtkPrintContext>?) -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkPrintOperation>?, CPointer<GtkPrintContext>?) -> Unit>>>(176).value = value }
    
    var status_changed: CPointer<CFunction<(CPointer<GtkPrintOperation>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkPrintOperation>?) -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkPrintOperation>?) -> Unit>>>(184).value = value }
    
    var create_custom_widget: CPointer<CFunction<(CPointer<GtkPrintOperation>?) -> CPointer<GtkWidget>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkPrintOperation>?) -> CPointer<GtkWidget>?>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkPrintOperation>?) -> CPointer<GtkWidget>?>>>(192).value = value }
    
    var custom_widget_apply: CPointer<CFunction<(CPointer<GtkPrintOperation>?, CPointer<GtkWidget>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkPrintOperation>?, CPointer<GtkWidget>?) -> Unit>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkPrintOperation>?, CPointer<GtkWidget>?) -> Unit>>>(200).value = value }
    
    var preview: CPointer<CFunction<(CPointer<GtkPrintOperation>?, CPointer<GtkPrintOperationPreview>?, CPointer<GtkPrintContext>?, CPointer<GtkWindow>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkPrintOperation>?, CPointer<GtkPrintOperationPreview>?, CPointer<GtkPrintContext>?, CPointer<GtkWindow>?) -> gboolean>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkPrintOperation>?, CPointer<GtkPrintOperationPreview>?, CPointer<GtkPrintContext>?, CPointer<GtkWindow>?) -> gboolean>>>(208).value = value }
    
    var update_custom_widget: CPointer<CFunction<(CPointer<GtkPrintOperation>?, CPointer<GtkWidget>?, CPointer<GtkPageSetup>?, CPointer<GtkPrintSettings>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkPrintOperation>?, CPointer<GtkWidget>?, CPointer<GtkPageSetup>?, CPointer<GtkPrintSettings>?) -> Unit>>>(216).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkPrintOperation>?, CPointer<GtkWidget>?, CPointer<GtkPageSetup>?, CPointer<GtkPrintSettings>?) -> Unit>>>(216).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(224).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(224).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(232).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(232).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(240).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(240).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(248).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(248).value = value }
    
    var _gtk_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(256).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(256).value = value }
    
    var _gtk_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value = value }
    
    var _gtk_reserved7: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value = value }
    
    var _gtk_reserved8: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(280).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(280).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GtkPrintOperation(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GtkPrintOperationPrivate>?
        get() = memberAt<CPointerVar<GtkPrintOperationPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GtkPrintOperationPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GtkProgressBar(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val parent: GtkWidget
        get() = memberAt(0)
    
    var priv: CPointer<GtkProgressBarPrivate>?
        get() = memberAt<CPointerVar<GtkProgressBarPrivate>>(32).value
        set(value) { memberAt<CPointerVar<GtkProgressBarPrivate>>(32).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; unsigned int p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; void* p23; void* p24; void* p25; void* p26; void* p27; void* p28; void* p29; void* p30; void* p31; void* p32; void* p33; void* p34; void* p35; void* p36; void* p37; void* p38; void* p39; void* p40; void* p41; void* p42; void* p43; void* p44; void* p45; void* p46; void* p47; void* p48; void* p49; void* p50; void* p51; void* p52; void* p53; void* p54; void* p55; void* p56; void* p57; void* p58; void* p59; void* p60; void* p61; void* p62; void* p63; void* p64; void* p65; void* p66; void* p67; void* p68; void* p69; void* p70; void* p71; void* p72; void* p73; void* p74; void* p75; void* p76; void* p77; void* p78; void* p79; void* p80; void* p81; void* p82; void* p83; void* p84; void* p85; void* p86; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkProgressBarClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(856, 8)
    
    val parent_class: GtkWidgetClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(824).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(824).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(832).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(832).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(840).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(840).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(848).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(848).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; } p0; void* p1; }")
class _GtkRadioButton(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(72, 8)
    
    val check_button: GtkCheckButton
        get() = memberAt(0)
    
    var priv: CPointer<GtkRadioButtonPrivate>?
        get() = memberAt<CPointerVar<GtkRadioButtonPrivate>>(64).value
        set(value) { memberAt<CPointerVar<GtkRadioButtonPrivate>>(64).value = value }
}

@CStruct("struct { struct { struct { struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GtkRadioButtonClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1208, 8)
    
    val parent_class: GtkCheckButtonClass
        get() = memberAt(0)
    
    var group_changed: CPointer<CFunction<(CPointer<GtkRadioButton>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkRadioButton>?) -> Unit>>>(1168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkRadioButton>?) -> Unit>>>(1168).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1176).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1176).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1184).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1184).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1192).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1192).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1200).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1200).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkRadioMenuItem(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(72, 8)
    
    val check_menu_item: GtkCheckMenuItem
        get() = memberAt(0)
    
    var priv: CPointer<GtkRadioMenuItemPrivate>?
        get() = memberAt<CPointerVar<GtkRadioMenuItemPrivate>>(64).value
        set(value) { memberAt<CPointerVar<GtkRadioMenuItemPrivate>>(64).value = value }
}

@CStruct("struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GtkRadioMenuItemClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1200, 8)
    
    val parent_class: GtkCheckMenuItemClass
        get() = memberAt(0)
    
    var group_changed: CPointer<CFunction<(CPointer<GtkRadioMenuItem>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkRadioMenuItem>?) -> Unit>>>(1160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkRadioMenuItem>?) -> Unit>>>(1160).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1168).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1168).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1176).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1176).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1184).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1184).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1192).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1192).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkToggleToolButton(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(72, 8)
    
    val parent: GtkToolButton
        get() = memberAt(0)
    
    var priv: CPointer<GtkToggleToolButtonPrivate>?
        get() = memberAt<CPointerVar<GtkToggleToolButtonPrivate>>(64).value
        set(value) { memberAt<CPointerVar<GtkToggleToolButtonPrivate>>(64).value = value }
}

@CStruct("struct { struct { struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; } p0; unsigned long p1; void* p2; void* p3; void* p4; void* p5; void* p6; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GtkToggleToolButtonClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1144, 8)
    
    val parent_class: GtkToolButtonClass
        get() = memberAt(0)
    
    var toggled: CPointer<CFunction<(CPointer<GtkToggleToolButton>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkToggleToolButton>?) -> Unit>>>(1104).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkToggleToolButton>?) -> Unit>>>(1104).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1112).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1112).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1120).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1120).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1128).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1128).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1136).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1136).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; }")
class _GtkRadioToolButton(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(72, 8)
    
    val parent: GtkToggleToolButton
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; } p0; unsigned long p1; void* p2; void* p3; void* p4; void* p5; void* p6; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkRadioToolButtonClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1176, 8)
    
    val parent_class: GtkToggleToolButtonClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1144).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1152).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1160).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1168).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1168).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GtkRange(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val widget: GtkWidget
        get() = memberAt(0)
    
    var priv: CPointer<GtkRangePrivate>?
        get() = memberAt<CPointerVar<GtkRangePrivate>>(32).value
        set(value) { memberAt<CPointerVar<GtkRangePrivate>>(32).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; unsigned int p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; void* p23; void* p24; void* p25; void* p26; void* p27; void* p28; void* p29; void* p30; void* p31; void* p32; void* p33; void* p34; void* p35; void* p36; void* p37; void* p38; void* p39; void* p40; void* p41; void* p42; void* p43; void* p44; void* p45; void* p46; void* p47; void* p48; void* p49; void* p50; void* p51; void* p52; void* p53; void* p54; void* p55; void* p56; void* p57; void* p58; void* p59; void* p60; void* p61; void* p62; void* p63; void* p64; void* p65; void* p66; void* p67; void* p68; void* p69; void* p70; void* p71; void* p72; void* p73; void* p74; void* p75; void* p76; void* p77; void* p78; void* p79; void* p80; void* p81; void* p82; void* p83; void* p84; void* p85; void* p86; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; }")
class _GtkRangeClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(912, 8)
    
    val parent_class: GtkWidgetClass
        get() = memberAt(0)
    
    var slider_detail: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(824).value
        set(value) { memberAt<CPointerVar<gcharVar>>(824).value = value }
    
    var stepper_detail: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(832).value
        set(value) { memberAt<CPointerVar<gcharVar>>(832).value = value }
    
    var value_changed: CPointer<CFunction<(CPointer<GtkRange>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkRange>?) -> Unit>>>(840).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkRange>?) -> Unit>>>(840).value = value }
    
    var adjust_bounds: CPointer<CFunction<(CPointer<GtkRange>?, gdouble) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkRange>?, gdouble) -> Unit>>>(848).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkRange>?, gdouble) -> Unit>>>(848).value = value }
    
    var move_slider: CPointer<CFunction<(CPointer<GtkRange>?, GtkScrollType) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkRange>?, GtkScrollType) -> Unit>>>(856).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkRange>?, GtkScrollType) -> Unit>>>(856).value = value }
    
    var get_range_border: CPointer<CFunction<(CPointer<GtkRange>?, CPointer<GtkBorder>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkRange>?, CPointer<GtkBorder>?) -> Unit>>>(864).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkRange>?, CPointer<GtkBorder>?) -> Unit>>>(864).value = value }
    
    var change_value: CPointer<CFunction<(CPointer<GtkRange>?, GtkScrollType, gdouble) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkRange>?, GtkScrollType, gdouble) -> gboolean>>>(872).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkRange>?, GtkScrollType, gdouble) -> gboolean>>>(872).value = value }
    
    var get_range_size_request: CPointer<CFunction<(CPointer<GtkRange>?, GtkOrientation, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkRange>?, GtkOrientation, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(880).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkRange>?, GtkOrientation, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(880).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(888).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(888).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(896).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(896).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(904).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(904).value = value }
}

@CStruct("struct { void* p0; void* p1; void* p2; void* p3; void* p4; void* p5; int p6; }")
class _GtkRecentData(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    var display_name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(0).value
        set(value) { memberAt<CPointerVar<gcharVar>>(0).value = value }
    
    var description: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(8).value
        set(value) { memberAt<CPointerVar<gcharVar>>(8).value = value }
    
    var mime_type: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(16).value
        set(value) { memberAt<CPointerVar<gcharVar>>(16).value = value }
    
    var app_name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(24).value
        set(value) { memberAt<CPointerVar<gcharVar>>(24).value = value }
    
    var app_exec: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(32).value
        set(value) { memberAt<CPointerVar<gcharVar>>(32).value = value }
    
    var groups: CPointer<CPointerVar<gcharVar>>?
        get() = memberAt<CPointerVar<CPointerVar<gcharVar>>>(40).value
        set(value) { memberAt<CPointerVar<CPointerVar<gcharVar>>>(40).value = value }
    
    var is_private: gboolean
        get() = memberAt<gbooleanVar>(48).value
        set(value) { memberAt<gbooleanVar>(48).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GtkRecentManager(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GtkRecentManagerPrivate>?
        get() = memberAt<CPointerVar<GtkRecentManagerPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GtkRecentManagerPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GtkRecentManagerClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(176, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var changed: CPointer<CFunction<(CPointer<GtkRecentManager>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkRecentManager>?) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkRecentManager>?) -> Unit>>>(136).value = value }
    
    var _gtk_recent1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value = value }
    
    var _gtk_recent2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value = value }
    
    var _gtk_recent3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
    
    var _gtk_recent4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value = value }
}

@CStruct("struct { unsigned int p0; void* p1; void* p2; void* p3; void* p4; void* p5; int p6; }")
class _GtkRecentFilterInfo(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    var contains: GtkRecentFilterFlags
        get() = memberAt<GtkRecentFilterFlagsVar>(0).value
        set(value) { memberAt<GtkRecentFilterFlagsVar>(0).value = value }
    
    var uri: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(8).value
        set(value) { memberAt<CPointerVar<gcharVar>>(8).value = value }
    
    var display_name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(16).value
        set(value) { memberAt<CPointerVar<gcharVar>>(16).value = value }
    
    var mime_type: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(24).value
        set(value) { memberAt<CPointerVar<gcharVar>>(24).value = value }
    
    var applications: CPointer<CPointerVar<gcharVar>>?
        get() = memberAt<CPointerVar<CPointerVar<gcharVar>>>(32).value
        set(value) { memberAt<CPointerVar<CPointerVar<gcharVar>>>(32).value = value }
    
    var groups: CPointer<CPointerVar<gcharVar>>?
        get() = memberAt<CPointerVar<CPointerVar<gcharVar>>>(40).value
        set(value) { memberAt<CPointerVar<CPointerVar<gcharVar>>>(40).value = value }
    
    var age: gint
        get() = memberAt<gintVar>(48).value
        set(value) { memberAt<gintVar>(48).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; }")
class _GtkRecentChooserIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(128, 8)
    
    val base_iface: GTypeInterface
        get() = memberAt(0)
    
    var set_current_uri: CPointer<CFunction<(CPointer<GtkRecentChooser>?, CPointer<gcharVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkRecentChooser>?, CPointer<gcharVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkRecentChooser>?, CPointer<gcharVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(16).value = value }
    
    var get_current_uri: CPointer<CFunction<(CPointer<GtkRecentChooser>?) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkRecentChooser>?) -> CPointer<gcharVar>?>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkRecentChooser>?) -> CPointer<gcharVar>?>>>(24).value = value }
    
    var select_uri: CPointer<CFunction<(CPointer<GtkRecentChooser>?, CPointer<gcharVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkRecentChooser>?, CPointer<gcharVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkRecentChooser>?, CPointer<gcharVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(32).value = value }
    
    var unselect_uri: CPointer<CFunction<(CPointer<GtkRecentChooser>?, CPointer<gcharVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkRecentChooser>?, CPointer<gcharVar>?) -> Unit>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkRecentChooser>?, CPointer<gcharVar>?) -> Unit>>>(40).value = value }
    
    var select_all: CPointer<CFunction<(CPointer<GtkRecentChooser>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkRecentChooser>?) -> Unit>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkRecentChooser>?) -> Unit>>>(48).value = value }
    
    var unselect_all: CPointer<CFunction<(CPointer<GtkRecentChooser>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkRecentChooser>?) -> Unit>>>(56).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkRecentChooser>?) -> Unit>>>(56).value = value }
    
    var get_items: CPointer<CFunction<(CPointer<GtkRecentChooser>?) -> CPointer<GList>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkRecentChooser>?) -> CPointer<GList>?>>>(64).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkRecentChooser>?) -> CPointer<GList>?>>>(64).value = value }
    
    var get_recent_manager: CPointer<CFunction<(CPointer<GtkRecentChooser>?) -> CPointer<GtkRecentManager>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkRecentChooser>?) -> CPointer<GtkRecentManager>?>>>(72).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkRecentChooser>?) -> CPointer<GtkRecentManager>?>>>(72).value = value }
    
    var add_filter: CPointer<CFunction<(CPointer<GtkRecentChooser>?, CPointer<GtkRecentFilter>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkRecentChooser>?, CPointer<GtkRecentFilter>?) -> Unit>>>(80).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkRecentChooser>?, CPointer<GtkRecentFilter>?) -> Unit>>>(80).value = value }
    
    var remove_filter: CPointer<CFunction<(CPointer<GtkRecentChooser>?, CPointer<GtkRecentFilter>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkRecentChooser>?, CPointer<GtkRecentFilter>?) -> Unit>>>(88).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkRecentChooser>?, CPointer<GtkRecentFilter>?) -> Unit>>>(88).value = value }
    
    var list_filters: CPointer<CFunction<(CPointer<GtkRecentChooser>?) -> CPointer<GSList>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkRecentChooser>?) -> CPointer<GSList>?>>>(96).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkRecentChooser>?) -> CPointer<GSList>?>>>(96).value = value }
    
    var set_sort_func: CPointer<CFunction<(CPointer<GtkRecentChooser>?, GtkRecentSortFunc?, gpointer?, GDestroyNotify?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkRecentChooser>?, GtkRecentSortFunc?, gpointer?, GDestroyNotify?) -> Unit>>>(104).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkRecentChooser>?, GtkRecentSortFunc?, gpointer?, GDestroyNotify?) -> Unit>>>(104).value = value }
    
    var item_activated: CPointer<CFunction<(CPointer<GtkRecentChooser>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkRecentChooser>?) -> Unit>>>(112).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkRecentChooser>?) -> Unit>>>(112).value = value }
    
    var selection_changed: CPointer<CFunction<(CPointer<GtkRecentChooser>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkRecentChooser>?) -> Unit>>>(120).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkRecentChooser>?) -> Unit>>>(120).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkRecentChooserDialog(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(72, 8)
    
    val parent_instance: GtkDialog
        get() = memberAt(0)
    
    var priv: CPointer<GtkRecentChooserDialogPrivate>?
        get() = memberAt<CPointerVar<GtkRecentChooserDialogPrivate>>(64).value
        set(value) { memberAt<CPointerVar<GtkRecentChooserDialogPrivate>>(64).value = value }
}

@CStruct("struct { struct { struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkRecentChooserDialogClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1152, 8)
    
    val parent_class: GtkDialogClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1120).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1120).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1128).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1128).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1136).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1136).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1144).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkRecentChooserMenu(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(64, 8)
    
    val parent_instance: GtkMenu
        get() = memberAt(0)
    
    var priv: CPointer<GtkRecentChooserMenuPrivate>?
        get() = memberAt<CPointerVar<GtkRecentChooserMenuPrivate>>(56).value
        set(value) { memberAt<CPointerVar<GtkRecentChooserMenuPrivate>>(56).value = value }
}

@CStruct("struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkRecentChooserMenuClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1152, 8)
    
    val parent_class: GtkMenuClass
        get() = memberAt(0)
    
    var gtk_recent1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1120).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1120).value = value }
    
    var gtk_recent2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1128).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1128).value = value }
    
    var gtk_recent3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1136).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1136).value = value }
    
    var gtk_recent4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1144).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkRecentChooserWidget(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val parent_instance: GtkBox
        get() = memberAt(0)
    
    var priv: CPointer<GtkRecentChooserWidgetPrivate>?
        get() = memberAt<CPointerVar<GtkRecentChooserWidgetPrivate>>(48).value
        set(value) { memberAt<CPointerVar<GtkRecentChooserWidgetPrivate>>(48).value = value }
}

@CStruct("struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkRecentChooserWidgetClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1040, 8)
    
    val parent_class: GtkBoxClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1008).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1008).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; }")
class _GtkRevealer(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val parent_instance: GtkBin
        get() = memberAt(0)
}

@CStruct("struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; }")
class _GtkRevealerClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1008, 8)
    
    val parent_class: GtkBinClass
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkScale(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val range: GtkRange
        get() = memberAt(0)
    
    var priv: CPointer<GtkScalePrivate>?
        get() = memberAt<CPointerVar<GtkScalePrivate>>(40).value
        set(value) { memberAt<CPointerVar<GtkScalePrivate>>(40).value = value }
}

@CStruct("struct { struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; unsigned int p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; void* p23; void* p24; void* p25; void* p26; void* p27; void* p28; void* p29; void* p30; void* p31; void* p32; void* p33; void* p34; void* p35; void* p36; void* p37; void* p38; void* p39; void* p40; void* p41; void* p42; void* p43; void* p44; void* p45; void* p46; void* p47; void* p48; void* p49; void* p50; void* p51; void* p52; void* p53; void* p54; void* p55; void* p56; void* p57; void* p58; void* p59; void* p60; void* p61; void* p62; void* p63; void* p64; void* p65; void* p66; void* p67; void* p68; void* p69; void* p70; void* p71; void* p72; void* p73; void* p74; void* p75; void* p76; void* p77; void* p78; void* p79; void* p80; void* p81; void* p82; void* p83; void* p84; void* p85; void* p86; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; }")
class _GtkScaleClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(968, 8)
    
    val parent_class: GtkRangeClass
        get() = memberAt(0)
    
    var format_value: CPointer<CFunction<(CPointer<GtkScale>?, gdouble) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkScale>?, gdouble) -> CPointer<gcharVar>?>>>(912).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkScale>?, gdouble) -> CPointer<gcharVar>?>>>(912).value = value }
    
    var draw_value: CPointer<CFunction<(CPointer<GtkScale>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkScale>?) -> Unit>>>(920).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkScale>?) -> Unit>>>(920).value = value }
    
    var get_layout_offsets: CPointer<CFunction<(CPointer<GtkScale>?, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkScale>?, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(928).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkScale>?, CPointer<gintVar>?, CPointer<gintVar>?) -> Unit>>>(928).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(936).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(936).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(944).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(944).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(952).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(952).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(960).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(960).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkScaleButton(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(64, 8)
    
    val parent: GtkButton
        get() = memberAt(0)
    
    var priv: CPointer<GtkScaleButtonPrivate>?
        get() = memberAt<CPointerVar<GtkScaleButtonPrivate>>(56).value
        set(value) { memberAt<CPointerVar<GtkScaleButtonPrivate>>(56).value = value }
}

@CStruct("struct { struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GtkScaleButtonClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1128, 8)
    
    val parent_class: GtkButtonClass
        get() = memberAt(0)
    
    var value_changed: CPointer<CFunction<(CPointer<GtkScaleButton>?, gdouble) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkScaleButton>?, gdouble) -> Unit>>>(1088).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkScaleButton>?, gdouble) -> Unit>>>(1088).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1096).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1096).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1104).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1104).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1112).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1112).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1120).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1120).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; }")
class _GtkScrollableInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    val base_iface: GTypeInterface
        get() = memberAt(0)
    
    var get_border: CPointer<CFunction<(CPointer<GtkScrollable>?, CPointer<GtkBorder>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkScrollable>?, CPointer<GtkBorder>?) -> gboolean>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkScrollable>?, CPointer<GtkBorder>?) -> gboolean>>>(16).value = value }
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; }")
class _GtkScrollbar(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val range: GtkRange
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; unsigned int p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; void* p23; void* p24; void* p25; void* p26; void* p27; void* p28; void* p29; void* p30; void* p31; void* p32; void* p33; void* p34; void* p35; void* p36; void* p37; void* p38; void* p39; void* p40; void* p41; void* p42; void* p43; void* p44; void* p45; void* p46; void* p47; void* p48; void* p49; void* p50; void* p51; void* p52; void* p53; void* p54; void* p55; void* p56; void* p57; void* p58; void* p59; void* p60; void* p61; void* p62; void* p63; void* p64; void* p65; void* p66; void* p67; void* p68; void* p69; void* p70; void* p71; void* p72; void* p73; void* p74; void* p75; void* p76; void* p77; void* p78; void* p79; void* p80; void* p81; void* p82; void* p83; void* p84; void* p85; void* p86; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkScrollbarClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(944, 8)
    
    val parent_class: GtkRangeClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(912).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(912).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(920).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(920).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(928).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(928).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(936).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(936).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkScrolledWindow(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val container: GtkBin
        get() = memberAt(0)
    
    var priv: CPointer<GtkScrolledWindowPrivate>?
        get() = memberAt<CPointerVar<GtkScrolledWindowPrivate>>(48).value
        set(value) { memberAt<CPointerVar<GtkScrolledWindowPrivate>>(48).value = value }
}

@CStruct("struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; int p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; }")
class _GtkScrolledWindowClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1064, 8)
    
    val parent_class: GtkBinClass
        get() = memberAt(0)
    
    var scrollbar_spacing: gint
        get() = memberAt<gintVar>(1008).value
        set(value) { memberAt<gintVar>(1008).value = value }
    
    var scroll_child: CPointer<CFunction<(CPointer<GtkScrolledWindow>?, GtkScrollType, gboolean) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkScrolledWindow>?, GtkScrollType, gboolean) -> gboolean>>>(1016).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkScrolledWindow>?, GtkScrollType, gboolean) -> gboolean>>>(1016).value = value }
    
    var move_focus_out: CPointer<CFunction<(CPointer<GtkScrolledWindow>?, GtkDirectionType) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkScrolledWindow>?, GtkDirectionType) -> Unit>>>(1024).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkScrolledWindow>?, GtkDirectionType) -> Unit>>>(1024).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1040).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1040).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1048).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1048).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1056).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1056).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; }")
class _GtkSearchBar(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val parent: GtkBin
        get() = memberAt(0)
}

@CStruct("struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkSearchBarClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1040, 8)
    
    val parent_class: GtkBinClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1008).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1008).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value = value }
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; }")
class _GtkSearchEntry(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val parent: GtkEntry
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; unsigned int p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; void* p23; void* p24; void* p25; void* p26; void* p27; void* p28; void* p29; void* p30; void* p31; void* p32; void* p33; void* p34; void* p35; void* p36; void* p37; void* p38; void* p39; void* p40; void* p41; void* p42; void* p43; void* p44; void* p45; void* p46; void* p47; void* p48; void* p49; void* p50; void* p51; void* p52; void* p53; void* p54; void* p55; void* p56; void* p57; void* p58; void* p59; void* p60; void* p61; void* p62; void* p63; void* p64; void* p65; void* p66; void* p67; void* p68; void* p69; void* p70; void* p71; void* p72; void* p73; void* p74; void* p75; void* p76; void* p77; void* p78; void* p79; void* p80; void* p81; void* p82; void* p83; void* p84; void* p85; void* p86; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkSearchEntryClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1008, 8)
    
    val parent_class: GtkEntryClass
        get() = memberAt(0)
    
    var search_changed: CPointer<CFunction<(CPointer<GtkSearchEntry>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkSearchEntry>?) -> Unit>>>(976).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkSearchEntry>?) -> Unit>>>(976).value = value }
    
    var next_match: CPointer<CFunction<(CPointer<GtkSearchEntry>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkSearchEntry>?) -> Unit>>>(984).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkSearchEntry>?) -> Unit>>>(984).value = value }
    
    var previous_match: CPointer<CFunction<(CPointer<GtkSearchEntry>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkSearchEntry>?) -> Unit>>>(992).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkSearchEntry>?) -> Unit>>>(992).value = value }
    
    var stop_search: CPointer<CFunction<(CPointer<GtkSearchEntry>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkSearchEntry>?) -> Unit>>>(1000).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkSearchEntry>?) -> Unit>>>(1000).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GtkSeparator(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val widget: GtkWidget
        get() = memberAt(0)
    
    var priv: CPointer<GtkSeparatorPrivate>?
        get() = memberAt<CPointerVar<GtkSeparatorPrivate>>(32).value
        set(value) { memberAt<CPointerVar<GtkSeparatorPrivate>>(32).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; unsigned int p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; void* p23; void* p24; void* p25; void* p26; void* p27; void* p28; void* p29; void* p30; void* p31; void* p32; void* p33; void* p34; void* p35; void* p36; void* p37; void* p38; void* p39; void* p40; void* p41; void* p42; void* p43; void* p44; void* p45; void* p46; void* p47; void* p48; void* p49; void* p50; void* p51; void* p52; void* p53; void* p54; void* p55; void* p56; void* p57; void* p58; void* p59; void* p60; void* p61; void* p62; void* p63; void* p64; void* p65; void* p66; void* p67; void* p68; void* p69; void* p70; void* p71; void* p72; void* p73; void* p74; void* p75; void* p76; void* p77; void* p78; void* p79; void* p80; void* p81; void* p82; void* p83; void* p84; void* p85; void* p86; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkSeparatorClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(856, 8)
    
    val parent_class: GtkWidgetClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(824).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(824).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(832).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(832).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(840).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(840).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(848).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(848).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; }")
class _GtkSeparatorMenuItem(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val menu_item: GtkMenuItem
        get() = memberAt(0)
}

@CStruct("struct { null p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkSeparatorMenuItemClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1144, 8)
    
    val parent_class: GtkMenuItemClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1112).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1112).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1120).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1120).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1128).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1128).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1136).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1136).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkSeparatorToolItem(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(64, 8)
    
    val parent: GtkToolItem
        get() = memberAt(0)
    
    var priv: CPointer<GtkSeparatorToolItemPrivate>?
        get() = memberAt<CPointerVar<GtkSeparatorToolItemPrivate>>(56).value
        set(value) { memberAt<CPointerVar<GtkSeparatorToolItemPrivate>>(56).value = value }
}

@CStruct("struct { struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkSeparatorToolItemClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1088, 8)
    
    val parent_class: GtkToolItemClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1056).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1056).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1064).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1064).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1072).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1072).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1080).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1080).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkSettingsClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(168, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(136).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
}

@CStruct("struct { void* p0; struct { unsigned long p0; union { int p0; unsigned int p1; long p2; unsigned long p3; long p4; unsigned long p5; float p6; double p7; void* p8; } p1[2]; } p1; }")
class _GtkSettingsValue(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    var origin: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(0).value
        set(value) { memberAt<CPointerVar<gcharVar>>(0).value = value }
    
    val value: GValue
        get() = memberAt(8)
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; }")
class _GtkStack(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val parent_instance: GtkContainer
        get() = memberAt(0)
}

@CStruct("struct { null p0; }")
class _GtkStackClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(976, 8)
    
    val parent_class: GtkContainerClass
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; }")
class _GtkStackSidebar(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val parent: GtkBin
        get() = memberAt(0)
}

@CStruct("struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkStackSidebarClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1040, 8)
    
    val parent_class: GtkBinClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1008).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1008).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value = value }
}

@CStruct("struct { void* p0; int p1; int p2; }")
class _GtkRequestedSize(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    var data: gpointer?
        get() = memberAt<gpointerVar>(0).value
        set(value) { memberAt<gpointerVar>(0).value = value }
    
    var minimum_size: gint
        get() = memberAt<gintVar>(8).value
        set(value) { memberAt<gintVar>(8).value = value }
    
    var natural_size: gint
        get() = memberAt<gintVar>(12).value
        set(value) { memberAt<gintVar>(12).value = value }
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkSpinButton(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val entry: GtkEntry
        get() = memberAt(0)
    
    var priv: CPointer<GtkSpinButtonPrivate>?
        get() = memberAt<CPointerVar<GtkSpinButtonPrivate>>(40).value
        set(value) { memberAt<CPointerVar<GtkSpinButtonPrivate>>(40).value = value }
}

@CStruct("struct { struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; unsigned int p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; void* p23; void* p24; void* p25; void* p26; void* p27; void* p28; void* p29; void* p30; void* p31; void* p32; void* p33; void* p34; void* p35; void* p36; void* p37; void* p38; void* p39; void* p40; void* p41; void* p42; void* p43; void* p44; void* p45; void* p46; void* p47; void* p48; void* p49; void* p50; void* p51; void* p52; void* p53; void* p54; void* p55; void* p56; void* p57; void* p58; void* p59; void* p60; void* p61; void* p62; void* p63; void* p64; void* p65; void* p66; void* p67; void* p68; void* p69; void* p70; void* p71; void* p72; void* p73; void* p74; void* p75; void* p76; void* p77; void* p78; void* p79; void* p80; void* p81; void* p82; void* p83; void* p84; void* p85; void* p86; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; }")
class _GtkSpinButtonClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1048, 8)
    
    val parent_class: GtkEntryClass
        get() = memberAt(0)
    
    var input: CPointer<CFunction<(CPointer<GtkSpinButton>?, CPointer<gdoubleVar>?) -> gint>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkSpinButton>?, CPointer<gdoubleVar>?) -> gint>>>(976).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkSpinButton>?, CPointer<gdoubleVar>?) -> gint>>>(976).value = value }
    
    var output: CPointer<CFunction<(CPointer<GtkSpinButton>?) -> gint>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkSpinButton>?) -> gint>>>(984).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkSpinButton>?) -> gint>>>(984).value = value }
    
    var value_changed: CPointer<CFunction<(CPointer<GtkSpinButton>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkSpinButton>?) -> Unit>>>(992).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkSpinButton>?) -> Unit>>>(992).value = value }
    
    var change_value: CPointer<CFunction<(CPointer<GtkSpinButton>?, GtkScrollType) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkSpinButton>?, GtkScrollType) -> Unit>>>(1000).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkSpinButton>?, GtkScrollType) -> Unit>>>(1000).value = value }
    
    var wrapped: CPointer<CFunction<(CPointer<GtkSpinButton>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkSpinButton>?) -> Unit>>>(1008).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkSpinButton>?) -> Unit>>>(1008).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1040).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1040).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GtkSpinner(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val parent: GtkWidget
        get() = memberAt(0)
    
    var priv: CPointer<GtkSpinnerPrivate>?
        get() = memberAt<CPointerVar<GtkSpinnerPrivate>>(32).value
        set(value) { memberAt<CPointerVar<GtkSpinnerPrivate>>(32).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; unsigned int p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; void* p23; void* p24; void* p25; void* p26; void* p27; void* p28; void* p29; void* p30; void* p31; void* p32; void* p33; void* p34; void* p35; void* p36; void* p37; void* p38; void* p39; void* p40; void* p41; void* p42; void* p43; void* p44; void* p45; void* p46; void* p47; void* p48; void* p49; void* p50; void* p51; void* p52; void* p53; void* p54; void* p55; void* p56; void* p57; void* p58; void* p59; void* p60; void* p61; void* p62; void* p63; void* p64; void* p65; void* p66; void* p67; void* p68; void* p69; void* p70; void* p71; void* p72; void* p73; void* p74; void* p75; void* p76; void* p77; void* p78; void* p79; void* p80; void* p81; void* p82; void* p83; void* p84; void* p85; void* p86; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkSpinnerClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(856, 8)
    
    val parent_class: GtkWidgetClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(824).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(824).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(832).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(832).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(840).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(840).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(848).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(848).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; }")
class _GtkStackSwitcher(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val widget: GtkBox
        get() = memberAt(0)
}

@CStruct("struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkStackSwitcherClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1040, 8)
    
    val parent_class: GtkBoxClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1008).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1008).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkStatusbar(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val parent_widget: GtkBox
        get() = memberAt(0)
    
    var priv: CPointer<GtkStatusbarPrivate>?
        get() = memberAt<CPointerVar<GtkStatusbarPrivate>>(48).value
        set(value) { memberAt<CPointerVar<GtkStatusbarPrivate>>(48).value = value }
}

@CStruct("struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; }")
class _GtkStatusbarClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1064, 8)
    
    val parent_class: GtkBoxClass
        get() = memberAt(0)
    
    var reserved: gpointer?
        get() = memberAt<gpointerVar>(1008).value
        set(value) { memberAt<gpointerVar>(1008).value = value }
    
    var text_pushed: CPointer<CFunction<(CPointer<GtkStatusbar>?, guint, CPointer<gcharVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkStatusbar>?, guint, CPointer<gcharVar>?) -> Unit>>>(1016).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkStatusbar>?, guint, CPointer<gcharVar>?) -> Unit>>>(1016).value = value }
    
    var text_popped: CPointer<CFunction<(CPointer<GtkStatusbar>?, guint, CPointer<gcharVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkStatusbar>?, guint, CPointer<gcharVar>?) -> Unit>>>(1024).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkStatusbar>?, guint, CPointer<gcharVar>?) -> Unit>>>(1024).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1040).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1040).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1048).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1048).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1056).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1056).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GtkSwitch(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val parent_instance: GtkWidget
        get() = memberAt(0)
    
    var priv: CPointer<GtkSwitchPrivate>?
        get() = memberAt<CPointerVar<GtkSwitchPrivate>>(32).value
        set(value) { memberAt<CPointerVar<GtkSwitchPrivate>>(32).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; unsigned int p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; void* p23; void* p24; void* p25; void* p26; void* p27; void* p28; void* p29; void* p30; void* p31; void* p32; void* p33; void* p34; void* p35; void* p36; void* p37; void* p38; void* p39; void* p40; void* p41; void* p42; void* p43; void* p44; void* p45; void* p46; void* p47; void* p48; void* p49; void* p50; void* p51; void* p52; void* p53; void* p54; void* p55; void* p56; void* p57; void* p58; void* p59; void* p60; void* p61; void* p62; void* p63; void* p64; void* p65; void* p66; void* p67; void* p68; void* p69; void* p70; void* p71; void* p72; void* p73; void* p74; void* p75; void* p76; void* p77; void* p78; void* p79; void* p80; void* p81; void* p82; void* p83; void* p84; void* p85; void* p86; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; }")
class _GtkSwitchClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(880, 8)
    
    val parent_class: GtkWidgetClass
        get() = memberAt(0)
    
    var activate: CPointer<CFunction<(CPointer<GtkSwitch>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkSwitch>?) -> Unit>>>(824).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkSwitch>?) -> Unit>>>(824).value = value }
    
    var state_set: CPointer<CFunction<(CPointer<GtkSwitch>?, gboolean) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkSwitch>?, gboolean) -> gboolean>>>(832).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkSwitch>?, gboolean) -> gboolean>>>(832).value = value }
    
    var _switch_padding_1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(840).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(840).value = value }
    
    var _switch_padding_2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(848).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(848).value = value }
    
    var _switch_padding_3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(856).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(856).value = value }
    
    var _switch_padding_4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(864).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(864).value = value }
    
    var _switch_padding_5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(872).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(872).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; }")
class _GtkTextTagTableClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(192, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var tag_changed: CPointer<CFunction<(CPointer<GtkTextTagTable>?, CPointer<GtkTextTag>?, gboolean) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTextTagTable>?, CPointer<GtkTextTag>?, gboolean) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTextTagTable>?, CPointer<GtkTextTag>?, gboolean) -> Unit>>>(136).value = value }
    
    var tag_added: CPointer<CFunction<(CPointer<GtkTextTagTable>?, CPointer<GtkTextTag>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTextTagTable>?, CPointer<GtkTextTag>?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTextTagTable>?, CPointer<GtkTextTag>?) -> Unit>>>(144).value = value }
    
    var tag_removed: CPointer<CFunction<(CPointer<GtkTextTagTable>?, CPointer<GtkTextTag>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTextTagTable>?, CPointer<GtkTextTag>?) -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTextTagTable>?, CPointer<GtkTextTag>?) -> Unit>>>(152).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GtkTextMark(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var segment: gpointer?
        get() = memberAt<gpointerVar>(24).value
        set(value) { memberAt<gpointerVar>(24).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkTextMarkClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(168, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(136).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; }")
class _GtkTextBufferClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(272, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var insert_text: CPointer<CFunction<(CPointer<GtkTextBuffer>?, CPointer<GtkTextIter>?, CPointer<gcharVar>?, gint) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTextBuffer>?, CPointer<GtkTextIter>?, CPointer<gcharVar>?, gint) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTextBuffer>?, CPointer<GtkTextIter>?, CPointer<gcharVar>?, gint) -> Unit>>>(136).value = value }
    
    var insert_pixbuf: CPointer<CFunction<(CPointer<GtkTextBuffer>?, CPointer<GtkTextIter>?, CPointer<GdkPixbuf>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTextBuffer>?, CPointer<GtkTextIter>?, CPointer<GdkPixbuf>?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTextBuffer>?, CPointer<GtkTextIter>?, CPointer<GdkPixbuf>?) -> Unit>>>(144).value = value }
    
    var insert_child_anchor: CPointer<CFunction<(CPointer<GtkTextBuffer>?, CPointer<GtkTextIter>?, CPointer<GtkTextChildAnchor>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTextBuffer>?, CPointer<GtkTextIter>?, CPointer<GtkTextChildAnchor>?) -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTextBuffer>?, CPointer<GtkTextIter>?, CPointer<GtkTextChildAnchor>?) -> Unit>>>(152).value = value }
    
    var delete_range: CPointer<CFunction<(CPointer<GtkTextBuffer>?, CPointer<GtkTextIter>?, CPointer<GtkTextIter>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTextBuffer>?, CPointer<GtkTextIter>?, CPointer<GtkTextIter>?) -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTextBuffer>?, CPointer<GtkTextIter>?, CPointer<GtkTextIter>?) -> Unit>>>(160).value = value }
    
    var changed: CPointer<CFunction<(CPointer<GtkTextBuffer>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTextBuffer>?) -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTextBuffer>?) -> Unit>>>(168).value = value }
    
    var modified_changed: CPointer<CFunction<(CPointer<GtkTextBuffer>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTextBuffer>?) -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTextBuffer>?) -> Unit>>>(176).value = value }
    
    var mark_set: CPointer<CFunction<(CPointer<GtkTextBuffer>?, CPointer<GtkTextIter>?, CPointer<GtkTextMark>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTextBuffer>?, CPointer<GtkTextIter>?, CPointer<GtkTextMark>?) -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTextBuffer>?, CPointer<GtkTextIter>?, CPointer<GtkTextMark>?) -> Unit>>>(184).value = value }
    
    var mark_deleted: CPointer<CFunction<(CPointer<GtkTextBuffer>?, CPointer<GtkTextMark>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTextBuffer>?, CPointer<GtkTextMark>?) -> Unit>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTextBuffer>?, CPointer<GtkTextMark>?) -> Unit>>>(192).value = value }
    
    var apply_tag: CPointer<CFunction<(CPointer<GtkTextBuffer>?, CPointer<GtkTextTag>?, CPointer<GtkTextIter>?, CPointer<GtkTextIter>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTextBuffer>?, CPointer<GtkTextTag>?, CPointer<GtkTextIter>?, CPointer<GtkTextIter>?) -> Unit>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTextBuffer>?, CPointer<GtkTextTag>?, CPointer<GtkTextIter>?, CPointer<GtkTextIter>?) -> Unit>>>(200).value = value }
    
    var remove_tag: CPointer<CFunction<(CPointer<GtkTextBuffer>?, CPointer<GtkTextTag>?, CPointer<GtkTextIter>?, CPointer<GtkTextIter>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTextBuffer>?, CPointer<GtkTextTag>?, CPointer<GtkTextIter>?, CPointer<GtkTextIter>?) -> Unit>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTextBuffer>?, CPointer<GtkTextTag>?, CPointer<GtkTextIter>?, CPointer<GtkTextIter>?) -> Unit>>>(208).value = value }
    
    var begin_user_action: CPointer<CFunction<(CPointer<GtkTextBuffer>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTextBuffer>?) -> Unit>>>(216).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTextBuffer>?) -> Unit>>>(216).value = value }
    
    var end_user_action: CPointer<CFunction<(CPointer<GtkTextBuffer>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTextBuffer>?) -> Unit>>>(224).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTextBuffer>?) -> Unit>>>(224).value = value }
    
    var paste_done: CPointer<CFunction<(CPointer<GtkTextBuffer>?, CPointer<GtkClipboard>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTextBuffer>?, CPointer<GtkClipboard>?) -> Unit>>>(232).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTextBuffer>?, CPointer<GtkClipboard>?) -> Unit>>>(232).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(240).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(240).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(248).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(248).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(256).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(256).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value = value }
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkTextView(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val parent_instance: GtkContainer
        get() = memberAt(0)
    
    var priv: CPointer<GtkTextViewPrivate>?
        get() = memberAt<CPointerVar<GtkTextViewPrivate>>(40).value
        set(value) { memberAt<CPointerVar<GtkTextViewPrivate>>(40).value = value }
}

@CStruct("struct { null p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; }")
class _GtkTextViewClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1120, 8)
    
    val parent_class: GtkContainerClass
        get() = memberAt(0)
    
    var populate_popup: CPointer<CFunction<(CPointer<GtkTextView>?, CPointer<GtkWidget>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTextView>?, CPointer<GtkWidget>?) -> Unit>>>(976).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTextView>?, CPointer<GtkWidget>?) -> Unit>>>(976).value = value }
    
    var move_cursor: CPointer<CFunction<(CPointer<GtkTextView>?, GtkMovementStep, gint, gboolean) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTextView>?, GtkMovementStep, gint, gboolean) -> Unit>>>(984).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTextView>?, GtkMovementStep, gint, gboolean) -> Unit>>>(984).value = value }
    
    var set_anchor: CPointer<CFunction<(CPointer<GtkTextView>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTextView>?) -> Unit>>>(992).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTextView>?) -> Unit>>>(992).value = value }
    
    var insert_at_cursor: CPointer<CFunction<(CPointer<GtkTextView>?, CPointer<gcharVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTextView>?, CPointer<gcharVar>?) -> Unit>>>(1000).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTextView>?, CPointer<gcharVar>?) -> Unit>>>(1000).value = value }
    
    var delete_from_cursor: CPointer<CFunction<(CPointer<GtkTextView>?, GtkDeleteType, gint) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTextView>?, GtkDeleteType, gint) -> Unit>>>(1008).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTextView>?, GtkDeleteType, gint) -> Unit>>>(1008).value = value }
    
    var backspace: CPointer<CFunction<(CPointer<GtkTextView>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTextView>?) -> Unit>>>(1016).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTextView>?) -> Unit>>>(1016).value = value }
    
    var cut_clipboard: CPointer<CFunction<(CPointer<GtkTextView>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTextView>?) -> Unit>>>(1024).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTextView>?) -> Unit>>>(1024).value = value }
    
    var copy_clipboard: CPointer<CFunction<(CPointer<GtkTextView>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTextView>?) -> Unit>>>(1032).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTextView>?) -> Unit>>>(1032).value = value }
    
    var paste_clipboard: CPointer<CFunction<(CPointer<GtkTextView>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTextView>?) -> Unit>>>(1040).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTextView>?) -> Unit>>>(1040).value = value }
    
    var toggle_overwrite: CPointer<CFunction<(CPointer<GtkTextView>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTextView>?) -> Unit>>>(1048).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTextView>?) -> Unit>>>(1048).value = value }
    
    var create_buffer: CPointer<CFunction<(CPointer<GtkTextView>?) -> CPointer<GtkTextBuffer>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTextView>?) -> CPointer<GtkTextBuffer>?>>>(1056).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTextView>?) -> CPointer<GtkTextBuffer>?>>>(1056).value = value }
    
    var draw_layer: CPointer<CFunction<(CPointer<GtkTextView>?, GtkTextViewLayer, CPointer<cairo_t>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTextView>?, GtkTextViewLayer, CPointer<cairo_t>?) -> Unit>>>(1064).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTextView>?, GtkTextViewLayer, CPointer<cairo_t>?) -> Unit>>>(1064).value = value }
    
    var extend_selection: CPointer<CFunction<(CPointer<GtkTextView>?, GtkTextExtendSelection, CPointer<GtkTextIter>?, CPointer<GtkTextIter>?, CPointer<GtkTextIter>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTextView>?, GtkTextExtendSelection, CPointer<GtkTextIter>?, CPointer<GtkTextIter>?, CPointer<GtkTextIter>?) -> gboolean>>>(1072).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTextView>?, GtkTextExtendSelection, CPointer<GtkTextIter>?, CPointer<GtkTextIter>?, CPointer<GtkTextIter>?) -> gboolean>>>(1072).value = value }
    
    var insert_emoji: CPointer<CFunction<(CPointer<GtkTextView>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTextView>?) -> Unit>>>(1080).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTextView>?) -> Unit>>>(1080).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1088).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1088).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1096).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1096).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1104).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1104).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1112).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1112).value = value }
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkToolbar(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val container: GtkContainer
        get() = memberAt(0)
    
    var priv: CPointer<GtkToolbarPrivate>?
        get() = memberAt<CPointerVar<GtkToolbarPrivate>>(40).value
        set(value) { memberAt<CPointerVar<GtkToolbarPrivate>>(40).value = value }
}

@CStruct("struct { null p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; }")
class _GtkToolbarClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1032, 8)
    
    val parent_class: GtkContainerClass
        get() = memberAt(0)
    
    var orientation_changed: CPointer<CFunction<(CPointer<GtkToolbar>?, GtkOrientation) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkToolbar>?, GtkOrientation) -> Unit>>>(976).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkToolbar>?, GtkOrientation) -> Unit>>>(976).value = value }
    
    var style_changed: CPointer<CFunction<(CPointer<GtkToolbar>?, GtkToolbarStyle) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkToolbar>?, GtkToolbarStyle) -> Unit>>>(984).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkToolbar>?, GtkToolbarStyle) -> Unit>>>(984).value = value }
    
    var popup_context_menu: CPointer<CFunction<(CPointer<GtkToolbar>?, gint, gint, gint) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkToolbar>?, gint, gint, gint) -> gboolean>>>(992).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkToolbar>?, gint, gint, gint) -> gboolean>>>(992).value = value }
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1000).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1000).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1008).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1008).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value = value }
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkToolItemGroup(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val parent_instance: GtkContainer
        get() = memberAt(0)
    
    var priv: CPointer<GtkToolItemGroupPrivate>?
        get() = memberAt<CPointerVar<GtkToolItemGroupPrivate>>(40).value
        set(value) { memberAt<CPointerVar<GtkToolItemGroupPrivate>>(40).value = value }
}

@CStruct("struct { null p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkToolItemGroupClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1008, 8)
    
    val parent_class: GtkContainerClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(976).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(976).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(984).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(984).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(992).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(992).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1000).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1000).value = value }
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkToolPalette(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val parent_instance: GtkContainer
        get() = memberAt(0)
    
    var priv: CPointer<GtkToolPalettePrivate>?
        get() = memberAt<CPointerVar<GtkToolPalettePrivate>>(40).value
        set(value) { memberAt<CPointerVar<GtkToolPalettePrivate>>(40).value = value }
}

@CStruct("struct { null p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkToolPaletteClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1008, 8)
    
    val parent_class: GtkContainerClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(976).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(976).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(984).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(984).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(992).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(992).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1000).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1000).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; }")
class _GtkToolShellIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(88, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var get_icon_size: CPointer<CFunction<(CPointer<GtkToolShell>?) -> GtkIconSize>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkToolShell>?) -> GtkIconSize>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkToolShell>?) -> GtkIconSize>>>(16).value = value }
    
    var get_orientation: CPointer<CFunction<(CPointer<GtkToolShell>?) -> GtkOrientation>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkToolShell>?) -> GtkOrientation>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkToolShell>?) -> GtkOrientation>>>(24).value = value }
    
    var get_style: CPointer<CFunction<(CPointer<GtkToolShell>?) -> GtkToolbarStyle>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkToolShell>?) -> GtkToolbarStyle>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkToolShell>?) -> GtkToolbarStyle>>>(32).value = value }
    
    var get_relief_style: CPointer<CFunction<(CPointer<GtkToolShell>?) -> GtkReliefStyle>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkToolShell>?) -> GtkReliefStyle>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkToolShell>?) -> GtkReliefStyle>>>(40).value = value }
    
    var rebuild_menu: CPointer<CFunction<(CPointer<GtkToolShell>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkToolShell>?) -> Unit>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkToolShell>?) -> Unit>>>(48).value = value }
    
    var get_text_orientation: CPointer<CFunction<(CPointer<GtkToolShell>?) -> GtkOrientation>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkToolShell>?) -> GtkOrientation>>>(56).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkToolShell>?) -> GtkOrientation>>>(56).value = value }
    
    var get_text_alignment: CPointer<CFunction<(CPointer<GtkToolShell>?) -> gfloat>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkToolShell>?) -> gfloat>>>(64).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkToolShell>?) -> gfloat>>>(64).value = value }
    
    var get_ellipsize_mode: CPointer<CFunction<(CPointer<GtkToolShell>?) -> PangoEllipsizeMode>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkToolShell>?) -> PangoEllipsizeMode>>>(72).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkToolShell>?) -> PangoEllipsizeMode>>>(72).value = value }
    
    var get_text_size_group: CPointer<CFunction<(CPointer<GtkToolShell>?) -> CPointer<GtkSizeGroup>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkToolShell>?) -> CPointer<GtkSizeGroup>?>>>(80).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkToolShell>?) -> CPointer<GtkSizeGroup>?>>>(80).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; }")
class _GtkTreeDragSourceIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var row_draggable: CPointer<CFunction<(CPointer<GtkTreeDragSource>?, CPointer<GtkTreePath>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeDragSource>?, CPointer<GtkTreePath>?) -> gboolean>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeDragSource>?, CPointer<GtkTreePath>?) -> gboolean>>>(16).value = value }
    
    var drag_data_get: CPointer<CFunction<(CPointer<GtkTreeDragSource>?, CPointer<GtkTreePath>?, CPointer<GtkSelectionData>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeDragSource>?, CPointer<GtkTreePath>?, CPointer<GtkSelectionData>?) -> gboolean>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeDragSource>?, CPointer<GtkTreePath>?, CPointer<GtkSelectionData>?) -> gboolean>>>(24).value = value }
    
    var drag_data_delete: CPointer<CFunction<(CPointer<GtkTreeDragSource>?, CPointer<GtkTreePath>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeDragSource>?, CPointer<GtkTreePath>?) -> gboolean>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeDragSource>?, CPointer<GtkTreePath>?) -> gboolean>>>(32).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; }")
class _GtkTreeDragDestIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var drag_data_received: CPointer<CFunction<(CPointer<GtkTreeDragDest>?, CPointer<GtkTreePath>?, CPointer<GtkSelectionData>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeDragDest>?, CPointer<GtkTreePath>?, CPointer<GtkSelectionData>?) -> gboolean>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeDragDest>?, CPointer<GtkTreePath>?, CPointer<GtkSelectionData>?) -> gboolean>>>(16).value = value }
    
    var row_drop_possible: CPointer<CFunction<(CPointer<GtkTreeDragDest>?, CPointer<GtkTreePath>?, CPointer<GtkSelectionData>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GtkTreeDragDest>?, CPointer<GtkTreePath>?, CPointer<GtkSelectionData>?) -> gboolean>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GtkTreeDragDest>?, CPointer<GtkTreePath>?, CPointer<GtkSelectionData>?) -> gboolean>>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GtkTreeModelSort(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GtkTreeModelSortPrivate>?
        get() = memberAt<CPointerVar<GtkTreeModelSortPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GtkTreeModelSortPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkTreeModelSortClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(168, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(136).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GtkTreeStore(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GtkTreeStorePrivate>?
        get() = memberAt<CPointerVar<GtkTreeStorePrivate>>(24).value
        set(value) { memberAt<CPointerVar<GtkTreeStorePrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkTreeStoreClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(168, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(136).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GtkViewport(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val bin: GtkBin
        get() = memberAt(0)
    
    var priv: CPointer<GtkViewportPrivate>?
        get() = memberAt<CPointerVar<GtkViewportPrivate>>(48).value
        set(value) { memberAt<CPointerVar<GtkViewportPrivate>>(48).value = value }
}

@CStruct("struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkViewportClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1040, 8)
    
    val parent_class: GtkBinClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1008).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1008).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1016).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1024).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1032).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; }")
class _GtkVolumeButton(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(64, 8)
    
    val parent: GtkScaleButton
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { struct { null p0; void* p1; void* p2; void* p3; void* p4; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GtkVolumeButtonClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(1160, 8)
    
    val parent_class: GtkScaleButtonClass
        get() = memberAt(0)
    
    var _gtk_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1128).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1128).value = value }
    
    var _gtk_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1136).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1136).value = value }
    
    var _gtk_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1144).value = value }
    
    var _gtk_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(1152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(1152).value = value }
}

enum class GDataStreamByteOrder(override val value: UInt) : CEnum {
    G_DATA_STREAM_BYTE_ORDER_BIG_ENDIAN(0u),
    G_DATA_STREAM_BYTE_ORDER_LITTLE_ENDIAN(1u),
    G_DATA_STREAM_BYTE_ORDER_HOST_ENDIAN(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GDataStreamByteOrder.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GDataStreamByteOrder
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GDataStreamNewlineType(override val value: UInt) : CEnum {
    G_DATA_STREAM_NEWLINE_TYPE_LF(0u),
    G_DATA_STREAM_NEWLINE_TYPE_CR(1u),
    G_DATA_STREAM_NEWLINE_TYPE_CR_LF(2u),
    G_DATA_STREAM_NEWLINE_TYPE_ANY(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GDataStreamNewlineType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GDataStreamNewlineType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GDriveStartStopType(override val value: UInt) : CEnum {
    G_DRIVE_START_STOP_TYPE_UNKNOWN(0u),
    G_DRIVE_START_STOP_TYPE_SHUTDOWN(1u),
    G_DRIVE_START_STOP_TYPE_NETWORK(2u),
    G_DRIVE_START_STOP_TYPE_MULTIDISK(3u),
    G_DRIVE_START_STOP_TYPE_PASSWORD(4u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GDriveStartStopType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GDriveStartStopType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GFileMonitorEvent(override val value: UInt) : CEnum {
    G_FILE_MONITOR_EVENT_CHANGED(0u),
    G_FILE_MONITOR_EVENT_CHANGES_DONE_HINT(1u),
    G_FILE_MONITOR_EVENT_DELETED(2u),
    G_FILE_MONITOR_EVENT_CREATED(3u),
    G_FILE_MONITOR_EVENT_ATTRIBUTE_CHANGED(4u),
    G_FILE_MONITOR_EVENT_PRE_UNMOUNT(5u),
    G_FILE_MONITOR_EVENT_UNMOUNTED(6u),
    G_FILE_MONITOR_EVENT_MOVED(7u),
    G_FILE_MONITOR_EVENT_RENAMED(8u),
    G_FILE_MONITOR_EVENT_MOVED_IN(9u),
    G_FILE_MONITOR_EVENT_MOVED_OUT(10u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GFileMonitorEvent.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GFileMonitorEvent
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GPasswordSave(override val value: UInt) : CEnum {
    G_PASSWORD_SAVE_NEVER(0u),
    G_PASSWORD_SAVE_FOR_SESSION(1u),
    G_PASSWORD_SAVE_PERMANENTLY(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GPasswordSave.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GPasswordSave
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GMountOperationResult(override val value: UInt) : CEnum {
    G_MOUNT_OPERATION_HANDLED(0u),
    G_MOUNT_OPERATION_ABORTED(1u),
    G_MOUNT_OPERATION_UNHANDLED(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GMountOperationResult.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GMountOperationResult
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GEmblemOrigin(override val value: UInt) : CEnum {
    G_EMBLEM_ORIGIN_UNKNOWN(0u),
    G_EMBLEM_ORIGIN_DEVICE(1u),
    G_EMBLEM_ORIGIN_LIVEMETADATA(2u),
    G_EMBLEM_ORIGIN_TAG(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GEmblemOrigin.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GEmblemOrigin
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GResolverError(override val value: UInt) : CEnum {
    G_RESOLVER_ERROR_NOT_FOUND(0u),
    G_RESOLVER_ERROR_TEMPORARY_FAILURE(1u),
    G_RESOLVER_ERROR_INTERNAL(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GResolverError.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GResolverError
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GResourceError(override val value: UInt) : CEnum {
    G_RESOURCE_ERROR_NOT_FOUND(0u),
    G_RESOURCE_ERROR_INTERNAL(1u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GResourceError.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GResourceError
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GSocketType(override val value: UInt) : CEnum {
    G_SOCKET_TYPE_INVALID(0u),
    G_SOCKET_TYPE_STREAM(1u),
    G_SOCKET_TYPE_DATAGRAM(2u),
    G_SOCKET_TYPE_SEQPACKET(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GSocketType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GSocketType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GZlibCompressorFormat(override val value: UInt) : CEnum {
    G_ZLIB_COMPRESSOR_FORMAT_ZLIB(0u),
    G_ZLIB_COMPRESSOR_FORMAT_GZIP(1u),
    G_ZLIB_COMPRESSOR_FORMAT_RAW(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GZlibCompressorFormat.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GZlibCompressorFormat
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GUnixSocketAddressType(override val value: UInt) : CEnum {
    G_UNIX_SOCKET_ADDRESS_INVALID(0u),
    G_UNIX_SOCKET_ADDRESS_ANONYMOUS(1u),
    G_UNIX_SOCKET_ADDRESS_PATH(2u),
    G_UNIX_SOCKET_ADDRESS_ABSTRACT(3u),
    G_UNIX_SOCKET_ADDRESS_ABSTRACT_PADDED(4u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GUnixSocketAddressType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GUnixSocketAddressType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GDBusError(override val value: UInt) : CEnum {
    G_DBUS_ERROR_FAILED(0u),
    G_DBUS_ERROR_NO_MEMORY(1u),
    G_DBUS_ERROR_SERVICE_UNKNOWN(2u),
    G_DBUS_ERROR_NAME_HAS_NO_OWNER(3u),
    G_DBUS_ERROR_NO_REPLY(4u),
    G_DBUS_ERROR_IO_ERROR(5u),
    G_DBUS_ERROR_BAD_ADDRESS(6u),
    G_DBUS_ERROR_NOT_SUPPORTED(7u),
    G_DBUS_ERROR_LIMITS_EXCEEDED(8u),
    G_DBUS_ERROR_ACCESS_DENIED(9u),
    G_DBUS_ERROR_AUTH_FAILED(10u),
    G_DBUS_ERROR_NO_SERVER(11u),
    G_DBUS_ERROR_TIMEOUT(12u),
    G_DBUS_ERROR_NO_NETWORK(13u),
    G_DBUS_ERROR_ADDRESS_IN_USE(14u),
    G_DBUS_ERROR_DISCONNECTED(15u),
    G_DBUS_ERROR_INVALID_ARGS(16u),
    G_DBUS_ERROR_FILE_NOT_FOUND(17u),
    G_DBUS_ERROR_FILE_EXISTS(18u),
    G_DBUS_ERROR_UNKNOWN_METHOD(19u),
    G_DBUS_ERROR_TIMED_OUT(20u),
    G_DBUS_ERROR_MATCH_RULE_NOT_FOUND(21u),
    G_DBUS_ERROR_MATCH_RULE_INVALID(22u),
    G_DBUS_ERROR_SPAWN_EXEC_FAILED(23u),
    G_DBUS_ERROR_SPAWN_FORK_FAILED(24u),
    G_DBUS_ERROR_SPAWN_CHILD_EXITED(25u),
    G_DBUS_ERROR_SPAWN_CHILD_SIGNALED(26u),
    G_DBUS_ERROR_SPAWN_FAILED(27u),
    G_DBUS_ERROR_SPAWN_SETUP_FAILED(28u),
    G_DBUS_ERROR_SPAWN_CONFIG_INVALID(29u),
    G_DBUS_ERROR_SPAWN_SERVICE_INVALID(30u),
    G_DBUS_ERROR_SPAWN_SERVICE_NOT_FOUND(31u),
    G_DBUS_ERROR_SPAWN_PERMISSIONS_INVALID(32u),
    G_DBUS_ERROR_SPAWN_FILE_INVALID(33u),
    G_DBUS_ERROR_SPAWN_NO_MEMORY(34u),
    G_DBUS_ERROR_UNIX_PROCESS_ID_UNKNOWN(35u),
    G_DBUS_ERROR_INVALID_SIGNATURE(36u),
    G_DBUS_ERROR_INVALID_FILE_CONTENT(37u),
    G_DBUS_ERROR_SELINUX_SECURITY_CONTEXT_UNKNOWN(38u),
    G_DBUS_ERROR_ADT_AUDIT_DATA_UNKNOWN(39u),
    G_DBUS_ERROR_OBJECT_PATH_IN_USE(40u),
    G_DBUS_ERROR_UNKNOWN_OBJECT(41u),
    G_DBUS_ERROR_UNKNOWN_INTERFACE(42u),
    G_DBUS_ERROR_UNKNOWN_PROPERTY(43u),
    G_DBUS_ERROR_PROPERTY_READ_ONLY(44u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GDBusError.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GDBusError
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GDBusMessageType(override val value: UInt) : CEnum {
    G_DBUS_MESSAGE_TYPE_INVALID(0u),
    G_DBUS_MESSAGE_TYPE_METHOD_CALL(1u),
    G_DBUS_MESSAGE_TYPE_METHOD_RETURN(2u),
    G_DBUS_MESSAGE_TYPE_ERROR(3u),
    G_DBUS_MESSAGE_TYPE_SIGNAL(4u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GDBusMessageType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GDBusMessageType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GDBusMessageHeaderField(override val value: UInt) : CEnum {
    G_DBUS_MESSAGE_HEADER_FIELD_INVALID(0u),
    G_DBUS_MESSAGE_HEADER_FIELD_PATH(1u),
    G_DBUS_MESSAGE_HEADER_FIELD_INTERFACE(2u),
    G_DBUS_MESSAGE_HEADER_FIELD_MEMBER(3u),
    G_DBUS_MESSAGE_HEADER_FIELD_ERROR_NAME(4u),
    G_DBUS_MESSAGE_HEADER_FIELD_REPLY_SERIAL(5u),
    G_DBUS_MESSAGE_HEADER_FIELD_DESTINATION(6u),
    G_DBUS_MESSAGE_HEADER_FIELD_SENDER(7u),
    G_DBUS_MESSAGE_HEADER_FIELD_SIGNATURE(8u),
    G_DBUS_MESSAGE_HEADER_FIELD_NUM_UNIX_FDS(9u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GDBusMessageHeaderField.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GDBusMessageHeaderField
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GCredentialsType(override val value: UInt) : CEnum {
    G_CREDENTIALS_TYPE_INVALID(0u),
    G_CREDENTIALS_TYPE_LINUX_UCRED(1u),
    G_CREDENTIALS_TYPE_FREEBSD_CMSGCRED(2u),
    G_CREDENTIALS_TYPE_OPENBSD_SOCKPEERCRED(3u),
    G_CREDENTIALS_TYPE_SOLARIS_UCRED(4u),
    G_CREDENTIALS_TYPE_NETBSD_UNPCBID(5u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GCredentialsType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GCredentialsType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GTlsError(override val value: UInt) : CEnum {
    G_TLS_ERROR_UNAVAILABLE(0u),
    G_TLS_ERROR_MISC(1u),
    G_TLS_ERROR_BAD_CERTIFICATE(2u),
    G_TLS_ERROR_NOT_TLS(3u),
    G_TLS_ERROR_HANDSHAKE(4u),
    G_TLS_ERROR_CERTIFICATE_REQUIRED(5u),
    G_TLS_ERROR_EOF(6u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GTlsError.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GTlsError
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GTlsAuthenticationMode(override val value: UInt) : CEnum {
    G_TLS_AUTHENTICATION_NONE(0u),
    G_TLS_AUTHENTICATION_REQUESTED(1u),
    G_TLS_AUTHENTICATION_REQUIRED(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GTlsAuthenticationMode.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GTlsAuthenticationMode
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GTlsRehandshakeMode(override val value: UInt) : CEnum {
    G_TLS_REHANDSHAKE_NEVER(0u),
    G_TLS_REHANDSHAKE_SAFELY(1u),
    G_TLS_REHANDSHAKE_UNSAFELY(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GTlsRehandshakeMode.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GTlsRehandshakeMode
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GTlsInteractionResult(override val value: UInt) : CEnum {
    G_TLS_INTERACTION_UNHANDLED(0u),
    G_TLS_INTERACTION_HANDLED(1u),
    G_TLS_INTERACTION_FAILED(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GTlsInteractionResult.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GTlsInteractionResult
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GIOModuleScopeFlags(override val value: UInt) : CEnum {
    G_IO_MODULE_SCOPE_NONE(0u),
    G_IO_MODULE_SCOPE_BLOCK_DUPLICATES(1u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GIOModuleScopeFlags.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GIOModuleScopeFlags
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GSocketClientEvent(override val value: UInt) : CEnum {
    G_SOCKET_CLIENT_RESOLVING(0u),
    G_SOCKET_CLIENT_RESOLVED(1u),
    G_SOCKET_CLIENT_CONNECTING(2u),
    G_SOCKET_CLIENT_CONNECTED(3u),
    G_SOCKET_CLIENT_PROXY_NEGOTIATING(4u),
    G_SOCKET_CLIENT_PROXY_NEGOTIATED(5u),
    G_SOCKET_CLIENT_TLS_HANDSHAKING(6u),
    G_SOCKET_CLIENT_TLS_HANDSHAKED(7u),
    G_SOCKET_CLIENT_COMPLETE(8u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GSocketClientEvent.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GSocketClientEvent
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GSocketListenerEvent(override val value: UInt) : CEnum {
    G_SOCKET_LISTENER_BINDING(0u),
    G_SOCKET_LISTENER_BOUND(1u),
    G_SOCKET_LISTENER_LISTENING(2u),
    G_SOCKET_LISTENER_LISTENED(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GSocketListenerEvent.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GSocketListenerEvent
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GNotificationPriority(override val value: UInt) : CEnum {
    G_NOTIFICATION_PRIORITY_NORMAL(0u),
    G_NOTIFICATION_PRIORITY_LOW(1u),
    G_NOTIFICATION_PRIORITY_HIGH(2u),
    G_NOTIFICATION_PRIORITY_URGENT(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GNotificationPriority.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GNotificationPriority
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GOptionArg(override val value: UInt) : CEnum {
    G_OPTION_ARG_NONE(0u),
    G_OPTION_ARG_STRING(1u),
    G_OPTION_ARG_INT(2u),
    G_OPTION_ARG_CALLBACK(3u),
    G_OPTION_ARG_FILENAME(4u),
    G_OPTION_ARG_STRING_ARRAY(5u),
    G_OPTION_ARG_FILENAME_ARRAY(6u),
    G_OPTION_ARG_DOUBLE(7u),
    G_OPTION_ARG_INT64(8u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GOptionArg.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GOptionArg
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GSeekType(override val value: UInt) : CEnum {
    G_SEEK_CUR(0u),
    G_SEEK_SET(1u),
    G_SEEK_END(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GSeekType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GSeekType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkAlign(override val value: UInt) : CEnum {
    GTK_ALIGN_FILL(0u),
    GTK_ALIGN_START(1u),
    GTK_ALIGN_END(2u),
    GTK_ALIGN_CENTER(3u),
    GTK_ALIGN_BASELINE(4u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkAlign.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkAlign
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkArrowType(override val value: UInt) : CEnum {
    GTK_ARROW_UP(0u),
    GTK_ARROW_DOWN(1u),
    GTK_ARROW_LEFT(2u),
    GTK_ARROW_RIGHT(3u),
    GTK_ARROW_NONE(4u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkArrowType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkArrowType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkBaselinePosition(override val value: UInt) : CEnum {
    GTK_BASELINE_POSITION_TOP(0u),
    GTK_BASELINE_POSITION_CENTER(1u),
    GTK_BASELINE_POSITION_BOTTOM(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkBaselinePosition.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkBaselinePosition
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkDeleteType(override val value: UInt) : CEnum {
    GTK_DELETE_CHARS(0u),
    GTK_DELETE_WORD_ENDS(1u),
    GTK_DELETE_WORDS(2u),
    GTK_DELETE_DISPLAY_LINES(3u),
    GTK_DELETE_DISPLAY_LINE_ENDS(4u),
    GTK_DELETE_PARAGRAPH_ENDS(5u),
    GTK_DELETE_PARAGRAPHS(6u),
    GTK_DELETE_WHITESPACE(7u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkDeleteType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkDeleteType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkDirectionType(override val value: UInt) : CEnum {
    GTK_DIR_TAB_FORWARD(0u),
    GTK_DIR_TAB_BACKWARD(1u),
    GTK_DIR_UP(2u),
    GTK_DIR_DOWN(3u),
    GTK_DIR_LEFT(4u),
    GTK_DIR_RIGHT(5u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkDirectionType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkDirectionType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkIconSize(override val value: UInt) : CEnum {
    GTK_ICON_SIZE_INVALID(0u),
    GTK_ICON_SIZE_MENU(1u),
    GTK_ICON_SIZE_SMALL_TOOLBAR(2u),
    GTK_ICON_SIZE_LARGE_TOOLBAR(3u),
    GTK_ICON_SIZE_BUTTON(4u),
    GTK_ICON_SIZE_DND(5u),
    GTK_ICON_SIZE_DIALOG(6u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkIconSize.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkIconSize
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkSensitivityType(override val value: UInt) : CEnum {
    GTK_SENSITIVITY_AUTO(0u),
    GTK_SENSITIVITY_ON(1u),
    GTK_SENSITIVITY_OFF(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkSensitivityType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkSensitivityType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkTextDirection(override val value: UInt) : CEnum {
    GTK_TEXT_DIR_NONE(0u),
    GTK_TEXT_DIR_LTR(1u),
    GTK_TEXT_DIR_RTL(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkTextDirection.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkTextDirection
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkJustification(override val value: UInt) : CEnum {
    GTK_JUSTIFY_LEFT(0u),
    GTK_JUSTIFY_RIGHT(1u),
    GTK_JUSTIFY_CENTER(2u),
    GTK_JUSTIFY_FILL(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkJustification.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkJustification
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkMenuDirectionType(override val value: UInt) : CEnum {
    GTK_MENU_DIR_PARENT(0u),
    GTK_MENU_DIR_CHILD(1u),
    GTK_MENU_DIR_NEXT(2u),
    GTK_MENU_DIR_PREV(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkMenuDirectionType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkMenuDirectionType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkMessageType(override val value: UInt) : CEnum {
    GTK_MESSAGE_INFO(0u),
    GTK_MESSAGE_WARNING(1u),
    GTK_MESSAGE_QUESTION(2u),
    GTK_MESSAGE_ERROR(3u),
    GTK_MESSAGE_OTHER(4u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkMessageType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkMessageType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkMovementStep(override val value: UInt) : CEnum {
    GTK_MOVEMENT_LOGICAL_POSITIONS(0u),
    GTK_MOVEMENT_VISUAL_POSITIONS(1u),
    GTK_MOVEMENT_WORDS(2u),
    GTK_MOVEMENT_DISPLAY_LINES(3u),
    GTK_MOVEMENT_DISPLAY_LINE_ENDS(4u),
    GTK_MOVEMENT_PARAGRAPHS(5u),
    GTK_MOVEMENT_PARAGRAPH_ENDS(6u),
    GTK_MOVEMENT_PAGES(7u),
    GTK_MOVEMENT_BUFFER_ENDS(8u),
    GTK_MOVEMENT_HORIZONTAL_PAGES(9u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkMovementStep.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkMovementStep
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkScrollStep(override val value: UInt) : CEnum {
    GTK_SCROLL_STEPS(0u),
    GTK_SCROLL_PAGES(1u),
    GTK_SCROLL_ENDS(2u),
    GTK_SCROLL_HORIZONTAL_STEPS(3u),
    GTK_SCROLL_HORIZONTAL_PAGES(4u),
    GTK_SCROLL_HORIZONTAL_ENDS(5u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkScrollStep.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkScrollStep
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkOrientation(override val value: UInt) : CEnum {
    GTK_ORIENTATION_HORIZONTAL(0u),
    GTK_ORIENTATION_VERTICAL(1u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkOrientation.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkOrientation
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkPackType(override val value: UInt) : CEnum {
    GTK_PACK_START(0u),
    GTK_PACK_END(1u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkPackType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkPackType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkPositionType(override val value: UInt) : CEnum {
    GTK_POS_LEFT(0u),
    GTK_POS_RIGHT(1u),
    GTK_POS_TOP(2u),
    GTK_POS_BOTTOM(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkPositionType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkPositionType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkReliefStyle(override val value: UInt) : CEnum {
    GTK_RELIEF_NORMAL(0u),
    GTK_RELIEF_HALF(1u),
    GTK_RELIEF_NONE(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkReliefStyle.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkReliefStyle
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkScrollType(override val value: UInt) : CEnum {
    GTK_SCROLL_NONE(0u),
    GTK_SCROLL_JUMP(1u),
    GTK_SCROLL_STEP_BACKWARD(2u),
    GTK_SCROLL_STEP_FORWARD(3u),
    GTK_SCROLL_PAGE_BACKWARD(4u),
    GTK_SCROLL_PAGE_FORWARD(5u),
    GTK_SCROLL_STEP_UP(6u),
    GTK_SCROLL_STEP_DOWN(7u),
    GTK_SCROLL_PAGE_UP(8u),
    GTK_SCROLL_PAGE_DOWN(9u),
    GTK_SCROLL_STEP_LEFT(10u),
    GTK_SCROLL_STEP_RIGHT(11u),
    GTK_SCROLL_PAGE_LEFT(12u),
    GTK_SCROLL_PAGE_RIGHT(13u),
    GTK_SCROLL_START(14u),
    GTK_SCROLL_END(15u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkScrollType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkScrollType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkSelectionMode(override val value: UInt) : CEnum {
    GTK_SELECTION_NONE(0u),
    GTK_SELECTION_SINGLE(1u),
    GTK_SELECTION_BROWSE(2u),
    GTK_SELECTION_MULTIPLE(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkSelectionMode.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkSelectionMode
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkShadowType(override val value: UInt) : CEnum {
    GTK_SHADOW_NONE(0u),
    GTK_SHADOW_IN(1u),
    GTK_SHADOW_OUT(2u),
    GTK_SHADOW_ETCHED_IN(3u),
    GTK_SHADOW_ETCHED_OUT(4u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkShadowType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkShadowType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkStateType(override val value: UInt) : CEnum {
    GTK_STATE_NORMAL(0u),
    GTK_STATE_ACTIVE(1u),
    GTK_STATE_PRELIGHT(2u),
    GTK_STATE_SELECTED(3u),
    GTK_STATE_INSENSITIVE(4u),
    GTK_STATE_INCONSISTENT(5u),
    GTK_STATE_FOCUSED(6u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkStateType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkStateType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkToolbarStyle(override val value: UInt) : CEnum {
    GTK_TOOLBAR_ICONS(0u),
    GTK_TOOLBAR_TEXT(1u),
    GTK_TOOLBAR_BOTH(2u),
    GTK_TOOLBAR_BOTH_HORIZ(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkToolbarStyle.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkToolbarStyle
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkWrapMode(override val value: UInt) : CEnum {
    GTK_WRAP_NONE(0u),
    GTK_WRAP_CHAR(1u),
    GTK_WRAP_WORD(2u),
    GTK_WRAP_WORD_CHAR(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkWrapMode.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkWrapMode
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkSortType(override val value: UInt) : CEnum {
    GTK_SORT_ASCENDING(0u),
    GTK_SORT_DESCENDING(1u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkSortType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkSortType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkIMPreeditStyle(override val value: UInt) : CEnum {
    GTK_IM_PREEDIT_NOTHING(0u),
    GTK_IM_PREEDIT_CALLBACK(1u),
    GTK_IM_PREEDIT_NONE(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkIMPreeditStyle.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkIMPreeditStyle
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkIMStatusStyle(override val value: UInt) : CEnum {
    GTK_IM_STATUS_NOTHING(0u),
    GTK_IM_STATUS_CALLBACK(1u),
    GTK_IM_STATUS_NONE(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkIMStatusStyle.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkIMStatusStyle
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkPackDirection(override val value: UInt) : CEnum {
    GTK_PACK_DIRECTION_LTR(0u),
    GTK_PACK_DIRECTION_RTL(1u),
    GTK_PACK_DIRECTION_TTB(2u),
    GTK_PACK_DIRECTION_BTT(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkPackDirection.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkPackDirection
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkPrintPages(override val value: UInt) : CEnum {
    GTK_PRINT_PAGES_ALL(0u),
    GTK_PRINT_PAGES_CURRENT(1u),
    GTK_PRINT_PAGES_RANGES(2u),
    GTK_PRINT_PAGES_SELECTION(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkPrintPages.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkPrintPages
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkPageSet(override val value: UInt) : CEnum {
    GTK_PAGE_SET_ALL(0u),
    GTK_PAGE_SET_EVEN(1u),
    GTK_PAGE_SET_ODD(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkPageSet.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkPageSet
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkNumberUpLayout(override val value: UInt) : CEnum {
    GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_TOP_TO_BOTTOM(0u),
    GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_BOTTOM_TO_TOP(1u),
    GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_TOP_TO_BOTTOM(2u),
    GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_BOTTOM_TO_TOP(3u),
    GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_LEFT_TO_RIGHT(4u),
    GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_RIGHT_TO_LEFT(5u),
    GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_LEFT_TO_RIGHT(6u),
    GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_RIGHT_TO_LEFT(7u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkNumberUpLayout.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkNumberUpLayout
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkPageOrientation(override val value: UInt) : CEnum {
    GTK_PAGE_ORIENTATION_PORTRAIT(0u),
    GTK_PAGE_ORIENTATION_LANDSCAPE(1u),
    GTK_PAGE_ORIENTATION_REVERSE_PORTRAIT(2u),
    GTK_PAGE_ORIENTATION_REVERSE_LANDSCAPE(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkPageOrientation.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkPageOrientation
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkPrintQuality(override val value: UInt) : CEnum {
    GTK_PRINT_QUALITY_LOW(0u),
    GTK_PRINT_QUALITY_NORMAL(1u),
    GTK_PRINT_QUALITY_HIGH(2u),
    GTK_PRINT_QUALITY_DRAFT(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkPrintQuality.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkPrintQuality
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkPrintDuplex(override val value: UInt) : CEnum {
    GTK_PRINT_DUPLEX_SIMPLEX(0u),
    GTK_PRINT_DUPLEX_HORIZONTAL(1u),
    GTK_PRINT_DUPLEX_VERTICAL(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkPrintDuplex.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkPrintDuplex
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkUnit(override val value: UInt) : CEnum {
    GTK_UNIT_NONE(0u),
    GTK_UNIT_POINTS(1u),
    GTK_UNIT_INCH(2u),
    GTK_UNIT_MM(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkUnit.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkUnit
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkTreeViewGridLines(override val value: UInt) : CEnum {
    GTK_TREE_VIEW_GRID_LINES_NONE(0u),
    GTK_TREE_VIEW_GRID_LINES_HORIZONTAL(1u),
    GTK_TREE_VIEW_GRID_LINES_VERTICAL(2u),
    GTK_TREE_VIEW_GRID_LINES_BOTH(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkTreeViewGridLines.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkTreeViewGridLines
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkDragResult(override val value: UInt) : CEnum {
    GTK_DRAG_RESULT_SUCCESS(0u),
    GTK_DRAG_RESULT_NO_TARGET(1u),
    GTK_DRAG_RESULT_USER_CANCELLED(2u),
    GTK_DRAG_RESULT_TIMEOUT_EXPIRED(3u),
    GTK_DRAG_RESULT_GRAB_BROKEN(4u),
    GTK_DRAG_RESULT_ERROR(5u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkDragResult.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkDragResult
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkSizeGroupMode(override val value: UInt) : CEnum {
    GTK_SIZE_GROUP_NONE(0u),
    GTK_SIZE_GROUP_HORIZONTAL(1u),
    GTK_SIZE_GROUP_VERTICAL(2u),
    GTK_SIZE_GROUP_BOTH(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkSizeGroupMode.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkSizeGroupMode
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkBorderStyle(override val value: UInt) : CEnum {
    GTK_BORDER_STYLE_NONE(0u),
    GTK_BORDER_STYLE_SOLID(1u),
    GTK_BORDER_STYLE_INSET(2u),
    GTK_BORDER_STYLE_OUTSET(3u),
    GTK_BORDER_STYLE_HIDDEN(4u),
    GTK_BORDER_STYLE_DOTTED(5u),
    GTK_BORDER_STYLE_DASHED(6u),
    GTK_BORDER_STYLE_DOUBLE(7u),
    GTK_BORDER_STYLE_GROOVE(8u),
    GTK_BORDER_STYLE_RIDGE(9u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkBorderStyle.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkBorderStyle
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkLevelBarMode(override val value: UInt) : CEnum {
    GTK_LEVEL_BAR_MODE_CONTINUOUS(0u),
    GTK_LEVEL_BAR_MODE_DISCRETE(1u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkLevelBarMode.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkLevelBarMode
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkInputPurpose(override val value: UInt) : CEnum {
    GTK_INPUT_PURPOSE_FREE_FORM(0u),
    GTK_INPUT_PURPOSE_ALPHA(1u),
    GTK_INPUT_PURPOSE_DIGITS(2u),
    GTK_INPUT_PURPOSE_NUMBER(3u),
    GTK_INPUT_PURPOSE_PHONE(4u),
    GTK_INPUT_PURPOSE_URL(5u),
    GTK_INPUT_PURPOSE_EMAIL(6u),
    GTK_INPUT_PURPOSE_NAME(7u),
    GTK_INPUT_PURPOSE_PASSWORD(8u),
    GTK_INPUT_PURPOSE_PIN(9u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkInputPurpose.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkInputPurpose
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkPropagationPhase(override val value: UInt) : CEnum {
    GTK_PHASE_NONE(0u),
    GTK_PHASE_CAPTURE(1u),
    GTK_PHASE_BUBBLE(2u),
    GTK_PHASE_TARGET(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkPropagationPhase.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkPropagationPhase
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkEventSequenceState(override val value: UInt) : CEnum {
    GTK_EVENT_SEQUENCE_NONE(0u),
    GTK_EVENT_SEQUENCE_CLAIMED(1u),
    GTK_EVENT_SEQUENCE_DENIED(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkEventSequenceState.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkEventSequenceState
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkPanDirection(override val value: UInt) : CEnum {
    GTK_PAN_DIRECTION_LEFT(0u),
    GTK_PAN_DIRECTION_RIGHT(1u),
    GTK_PAN_DIRECTION_UP(2u),
    GTK_PAN_DIRECTION_DOWN(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkPanDirection.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkPanDirection
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkPopoverConstraint(override val value: UInt) : CEnum {
    GTK_POPOVER_CONSTRAINT_NONE(0u),
    GTK_POPOVER_CONSTRAINT_WINDOW(1u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkPopoverConstraint.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkPopoverConstraint
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkWidgetHelpType(override val value: UInt) : CEnum {
    GTK_WIDGET_HELP_TOOLTIP(0u),
    GTK_WIDGET_HELP_WHATS_THIS(1u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkWidgetHelpType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkWidgetHelpType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GdkVisibilityState(override val value: UInt) : CEnum {
    GDK_VISIBILITY_UNOBSCURED(0u),
    GDK_VISIBILITY_PARTIAL(1u),
    GDK_VISIBILITY_FULLY_OBSCURED(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GdkVisibilityState.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GdkVisibilityState
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GdkScrollDirection(override val value: UInt) : CEnum {
    GDK_SCROLL_UP(0u),
    GDK_SCROLL_DOWN(1u),
    GDK_SCROLL_LEFT(2u),
    GDK_SCROLL_RIGHT(3u),
    GDK_SCROLL_SMOOTH(4u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GdkScrollDirection.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GdkScrollDirection
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GdkCrossingMode(override val value: UInt) : CEnum {
    GDK_CROSSING_NORMAL(0u),
    GDK_CROSSING_GRAB(1u),
    GDK_CROSSING_UNGRAB(2u),
    GDK_CROSSING_GTK_GRAB(3u),
    GDK_CROSSING_GTK_UNGRAB(4u),
    GDK_CROSSING_STATE_CHANGED(5u),
    GDK_CROSSING_TOUCH_BEGIN(6u),
    GDK_CROSSING_TOUCH_END(7u),
    GDK_CROSSING_DEVICE_SWITCH(8u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GdkCrossingMode.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GdkCrossingMode
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GdkOwnerChange(override val value: UInt) : CEnum {
    GDK_OWNER_CHANGE_NEW_OWNER(0u),
    GDK_OWNER_CHANGE_DESTROY(1u),
    GDK_OWNER_CHANGE_CLOSE(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GdkOwnerChange.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GdkOwnerChange
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GdkSettingAction(override val value: UInt) : CEnum {
    GDK_SETTING_ACTION_NEW(0u),
    GDK_SETTING_ACTION_CHANGED(1u),
    GDK_SETTING_ACTION_DELETED(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GdkSettingAction.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GdkSettingAction
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class AtkLayer(override val value: UInt) : CEnum {
    ATK_LAYER_INVALID(0u),
    ATK_LAYER_BACKGROUND(1u),
    ATK_LAYER_CANVAS(2u),
    ATK_LAYER_WIDGET(3u),
    ATK_LAYER_MDI(4u),
    ATK_LAYER_POPUP(5u),
    ATK_LAYER_OVERLAY(6u),
    ATK_LAYER_WINDOW(7u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = AtkLayer.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: AtkLayer
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GdkModifierIntent(override val value: UInt) : CEnum {
    GDK_MODIFIER_INTENT_PRIMARY_ACCELERATOR(0u),
    GDK_MODIFIER_INTENT_CONTEXT_MENU(1u),
    GDK_MODIFIER_INTENT_EXTEND_SELECTION(2u),
    GDK_MODIFIER_INTENT_MODIFY_SELECTION(3u),
    GDK_MODIFIER_INTENT_NO_TEXT_INPUT(4u),
    GDK_MODIFIER_INTENT_SHIFT_GROUP(5u),
    GDK_MODIFIER_INTENT_DEFAULT_MOD_MASK(6u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GdkModifierIntent.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GdkModifierIntent
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkResizeMode(override val value: UInt) : CEnum {
    GTK_RESIZE_PARENT(0u),
    GTK_RESIZE_QUEUE(1u),
    GTK_RESIZE_IMMEDIATE(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkResizeMode.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkResizeMode
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkWindowType(override val value: UInt) : CEnum {
    GTK_WINDOW_TOPLEVEL(0u),
    GTK_WINDOW_POPUP(1u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkWindowType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkWindowType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkWindowPosition(override val value: UInt) : CEnum {
    GTK_WIN_POS_NONE(0u),
    GTK_WIN_POS_CENTER(1u),
    GTK_WIN_POS_MOUSE(2u),
    GTK_WIN_POS_CENTER_ALWAYS(3u),
    GTK_WIN_POS_CENTER_ON_PARENT(4u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkWindowPosition.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkWindowPosition
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GdkWindowTypeHint(override val value: UInt) : CEnum {
    GDK_WINDOW_TYPE_HINT_NORMAL(0u),
    GDK_WINDOW_TYPE_HINT_DIALOG(1u),
    GDK_WINDOW_TYPE_HINT_MENU(2u),
    GDK_WINDOW_TYPE_HINT_TOOLBAR(3u),
    GDK_WINDOW_TYPE_HINT_SPLASHSCREEN(4u),
    GDK_WINDOW_TYPE_HINT_UTILITY(5u),
    GDK_WINDOW_TYPE_HINT_DOCK(6u),
    GDK_WINDOW_TYPE_HINT_DESKTOP(7u),
    GDK_WINDOW_TYPE_HINT_DROPDOWN_MENU(8u),
    GDK_WINDOW_TYPE_HINT_POPUP_MENU(9u),
    GDK_WINDOW_TYPE_HINT_TOOLTIP(10u),
    GDK_WINDOW_TYPE_HINT_NOTIFICATION(11u),
    GDK_WINDOW_TYPE_HINT_COMBO(12u),
    GDK_WINDOW_TYPE_HINT_DND(13u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GdkWindowTypeHint.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GdkWindowTypeHint
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GdkWindowEdge(override val value: UInt) : CEnum {
    GDK_WINDOW_EDGE_NORTH_WEST(0u),
    GDK_WINDOW_EDGE_NORTH(1u),
    GDK_WINDOW_EDGE_NORTH_EAST(2u),
    GDK_WINDOW_EDGE_WEST(3u),
    GDK_WINDOW_EDGE_EAST(4u),
    GDK_WINDOW_EDGE_SOUTH_WEST(5u),
    GDK_WINDOW_EDGE_SOUTH(6u),
    GDK_WINDOW_EDGE_SOUTH_EAST(7u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GdkWindowEdge.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GdkWindowEdge
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkLicense(override val value: UInt) : CEnum {
    GTK_LICENSE_UNKNOWN(0u),
    GTK_LICENSE_CUSTOM(1u),
    GTK_LICENSE_GPL_2_0(2u),
    GTK_LICENSE_GPL_3_0(3u),
    GTK_LICENSE_LGPL_2_1(4u),
    GTK_LICENSE_LGPL_3_0(5u),
    GTK_LICENSE_BSD(6u),
    GTK_LICENSE_MIT_X11(7u),
    GTK_LICENSE_ARTISTIC(8u),
    GTK_LICENSE_GPL_2_0_ONLY(9u),
    GTK_LICENSE_GPL_3_0_ONLY(10u),
    GTK_LICENSE_LGPL_2_1_ONLY(11u),
    GTK_LICENSE_LGPL_3_0_ONLY(12u),
    GTK_LICENSE_AGPL_3_0(13u),
    GTK_LICENSE_AGPL_3_0_ONLY(14u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkLicense.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkLicense
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkArrowPlacement(override val value: UInt) : CEnum {
    GTK_ARROWS_BOTH(0u),
    GTK_ARROWS_START(1u),
    GTK_ARROWS_END(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkArrowPlacement.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkArrowPlacement
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class PangoEllipsizeMode(override val value: UInt) : CEnum {
    PANGO_ELLIPSIZE_NONE(0u),
    PANGO_ELLIPSIZE_START(1u),
    PANGO_ELLIPSIZE_MIDDLE(2u),
    PANGO_ELLIPSIZE_END(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = PangoEllipsizeMode.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: PangoEllipsizeMode
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class PangoWrapMode(override val value: UInt) : CEnum {
    PANGO_WRAP_WORD(0u),
    PANGO_WRAP_CHAR(1u),
    PANGO_WRAP_WORD_CHAR(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = PangoWrapMode.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: PangoWrapMode
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkCellRendererMode(override val value: UInt) : CEnum {
    GTK_CELL_RENDERER_MODE_INERT(0u),
    GTK_CELL_RENDERER_MODE_ACTIVATABLE(1u),
    GTK_CELL_RENDERER_MODE_EDITABLE(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkCellRendererMode.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkCellRendererMode
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkTreeViewColumnSizing(override val value: UInt) : CEnum {
    GTK_TREE_VIEW_COLUMN_GROW_ONLY(0u),
    GTK_TREE_VIEW_COLUMN_AUTOSIZE(1u),
    GTK_TREE_VIEW_COLUMN_FIXED(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkTreeViewColumnSizing.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkTreeViewColumnSizing
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkImageType(override val value: UInt) : CEnum {
    GTK_IMAGE_EMPTY(0u),
    GTK_IMAGE_PIXBUF(1u),
    GTK_IMAGE_STOCK(2u),
    GTK_IMAGE_ICON_SET(3u),
    GTK_IMAGE_ANIMATION(4u),
    GTK_IMAGE_ICON_NAME(5u),
    GTK_IMAGE_GICON(6u),
    GTK_IMAGE_SURFACE(7u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkImageType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkImageType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkEntryIconPosition(override val value: UInt) : CEnum {
    GTK_ENTRY_ICON_PRIMARY(0u),
    GTK_ENTRY_ICON_SECONDARY(1u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkEntryIconPosition.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkEntryIconPosition
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkTreeViewDropPosition(override val value: UInt) : CEnum {
    GTK_TREE_VIEW_DROP_BEFORE(0u),
    GTK_TREE_VIEW_DROP_AFTER(1u),
    GTK_TREE_VIEW_DROP_INTO_OR_BEFORE(2u),
    GTK_TREE_VIEW_DROP_INTO_OR_AFTER(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkTreeViewDropPosition.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkTreeViewDropPosition
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkAssistantPageType(override val value: UInt) : CEnum {
    GTK_ASSISTANT_PAGE_CONTENT(0u),
    GTK_ASSISTANT_PAGE_INTRO(1u),
    GTK_ASSISTANT_PAGE_CONFIRM(2u),
    GTK_ASSISTANT_PAGE_SUMMARY(3u),
    GTK_ASSISTANT_PAGE_PROGRESS(4u),
    GTK_ASSISTANT_PAGE_CUSTOM(5u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkAssistantPageType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkAssistantPageType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkBuilderError(override val value: UInt) : CEnum {
    GTK_BUILDER_ERROR_INVALID_TYPE_FUNCTION(0u),
    GTK_BUILDER_ERROR_UNHANDLED_TAG(1u),
    GTK_BUILDER_ERROR_MISSING_ATTRIBUTE(2u),
    GTK_BUILDER_ERROR_INVALID_ATTRIBUTE(3u),
    GTK_BUILDER_ERROR_INVALID_TAG(4u),
    GTK_BUILDER_ERROR_MISSING_PROPERTY_VALUE(5u),
    GTK_BUILDER_ERROR_INVALID_VALUE(6u),
    GTK_BUILDER_ERROR_VERSION_MISMATCH(7u),
    GTK_BUILDER_ERROR_DUPLICATE_ID(8u),
    GTK_BUILDER_ERROR_OBJECT_TYPE_REFUSED(9u),
    GTK_BUILDER_ERROR_TEMPLATE_MISMATCH(10u),
    GTK_BUILDER_ERROR_INVALID_PROPERTY(11u),
    GTK_BUILDER_ERROR_INVALID_SIGNAL(12u),
    GTK_BUILDER_ERROR_INVALID_ID(13u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkBuilderError.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkBuilderError
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkCellRendererAccelMode(override val value: UInt) : CEnum {
    GTK_CELL_RENDERER_ACCEL_MODE_GTK(0u),
    GTK_CELL_RENDERER_ACCEL_MODE_OTHER(1u),
    GTK_CELL_RENDERER_ACCEL_MODE_MODIFIER_TAP(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkCellRendererAccelMode.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkCellRendererAccelMode
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkCssSectionType(override val value: UInt) : CEnum {
    GTK_CSS_SECTION_DOCUMENT(0u),
    GTK_CSS_SECTION_IMPORT(1u),
    GTK_CSS_SECTION_COLOR_DEFINITION(2u),
    GTK_CSS_SECTION_BINDING_SET(3u),
    GTK_CSS_SECTION_RULESET(4u),
    GTK_CSS_SECTION_SELECTOR(5u),
    GTK_CSS_SECTION_DECLARATION(6u),
    GTK_CSS_SECTION_VALUE(7u),
    GTK_CSS_SECTION_KEYFRAMES(8u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkCssSectionType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkCssSectionType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkCssProviderError(override val value: UInt) : CEnum {
    GTK_CSS_PROVIDER_ERROR_FAILED(0u),
    GTK_CSS_PROVIDER_ERROR_SYNTAX(1u),
    GTK_CSS_PROVIDER_ERROR_IMPORT(2u),
    GTK_CSS_PROVIDER_ERROR_NAME(3u),
    GTK_CSS_PROVIDER_ERROR_DEPRECATED(4u),
    GTK_CSS_PROVIDER_ERROR_UNKNOWN_VALUE(5u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkCssProviderError.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkCssProviderError
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkFileChooserAction(override val value: UInt) : CEnum {
    GTK_FILE_CHOOSER_ACTION_OPEN(0u),
    GTK_FILE_CHOOSER_ACTION_SAVE(1u),
    GTK_FILE_CHOOSER_ACTION_SELECT_FOLDER(2u),
    GTK_FILE_CHOOSER_ACTION_CREATE_FOLDER(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkFileChooserAction.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkFileChooserAction
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkFileChooserConfirmation(override val value: UInt) : CEnum {
    GTK_FILE_CHOOSER_CONFIRMATION_CONFIRM(0u),
    GTK_FILE_CHOOSER_CONFIRMATION_ACCEPT_FILENAME(1u),
    GTK_FILE_CHOOSER_CONFIRMATION_SELECT_AGAIN(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkFileChooserConfirmation.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkFileChooserConfirmation
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkFileChooserError(override val value: UInt) : CEnum {
    GTK_FILE_CHOOSER_ERROR_NONEXISTENT(0u),
    GTK_FILE_CHOOSER_ERROR_BAD_FILENAME(1u),
    GTK_FILE_CHOOSER_ERROR_ALREADY_EXISTS(2u),
    GTK_FILE_CHOOSER_ERROR_INCOMPLETE_HOSTNAME(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkFileChooserError.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkFileChooserError
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class PangoDirection(override val value: UInt) : CEnum {
    PANGO_DIRECTION_LTR(0u),
    PANGO_DIRECTION_RTL(1u),
    PANGO_DIRECTION_TTB_LTR(2u),
    PANGO_DIRECTION_TTB_RTL(3u),
    PANGO_DIRECTION_WEAK_LTR(4u),
    PANGO_DIRECTION_WEAK_RTL(5u),
    PANGO_DIRECTION_NEUTRAL(6u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = PangoDirection.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: PangoDirection
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkIconThemeError(override val value: UInt) : CEnum {
    GTK_ICON_THEME_NOT_FOUND(0u),
    GTK_ICON_THEME_FAILED(1u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkIconThemeError.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkIconThemeError
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkIconViewDropPosition(override val value: UInt) : CEnum {
    GTK_ICON_VIEW_NO_DROP(0u),
    GTK_ICON_VIEW_DROP_INTO(1u),
    GTK_ICON_VIEW_DROP_LEFT(2u),
    GTK_ICON_VIEW_DROP_RIGHT(3u),
    GTK_ICON_VIEW_DROP_ABOVE(4u),
    GTK_ICON_VIEW_DROP_BELOW(5u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkIconViewDropPosition.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkIconViewDropPosition
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkButtonsType(override val value: UInt) : CEnum {
    GTK_BUTTONS_NONE(0u),
    GTK_BUTTONS_OK(1u),
    GTK_BUTTONS_CLOSE(2u),
    GTK_BUTTONS_CANCEL(3u),
    GTK_BUTTONS_YES_NO(4u),
    GTK_BUTTONS_OK_CANCEL(5u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkButtonsType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkButtonsType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkButtonRole(override val value: UInt) : CEnum {
    GTK_BUTTON_ROLE_NORMAL(0u),
    GTK_BUTTON_ROLE_CHECK(1u),
    GTK_BUTTON_ROLE_RADIO(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkButtonRole.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkButtonRole
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkNotebookTab(override val value: UInt) : CEnum {
    GTK_NOTEBOOK_TAB_FIRST(0u),
    GTK_NOTEBOOK_TAB_LAST(1u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkNotebookTab.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkNotebookTab
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkPadActionType(override val value: UInt) : CEnum {
    GTK_PAD_ACTION_BUTTON(0u),
    GTK_PAD_ACTION_RING(1u),
    GTK_PAD_ACTION_STRIP(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkPadActionType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkPadActionType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkPrintOperationResult(override val value: UInt) : CEnum {
    GTK_PRINT_OPERATION_RESULT_ERROR(0u),
    GTK_PRINT_OPERATION_RESULT_APPLY(1u),
    GTK_PRINT_OPERATION_RESULT_CANCEL(2u),
    GTK_PRINT_OPERATION_RESULT_IN_PROGRESS(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkPrintOperationResult.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkPrintOperationResult
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkPrintStatus(override val value: UInt) : CEnum {
    GTK_PRINT_STATUS_INITIAL(0u),
    GTK_PRINT_STATUS_PREPARING(1u),
    GTK_PRINT_STATUS_GENERATING_DATA(2u),
    GTK_PRINT_STATUS_SENDING_DATA(3u),
    GTK_PRINT_STATUS_PENDING(4u),
    GTK_PRINT_STATUS_PENDING_ISSUE(5u),
    GTK_PRINT_STATUS_PRINTING(6u),
    GTK_PRINT_STATUS_FINISHED(7u),
    GTK_PRINT_STATUS_FINISHED_ABORTED(8u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkPrintStatus.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkPrintStatus
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkPrintOperationAction(override val value: UInt) : CEnum {
    GTK_PRINT_OPERATION_ACTION_PRINT_DIALOG(0u),
    GTK_PRINT_OPERATION_ACTION_PRINT(1u),
    GTK_PRINT_OPERATION_ACTION_PREVIEW(2u),
    GTK_PRINT_OPERATION_ACTION_EXPORT(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkPrintOperationAction.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkPrintOperationAction
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkPrintError(override val value: UInt) : CEnum {
    GTK_PRINT_ERROR_GENERAL(0u),
    GTK_PRINT_ERROR_INTERNAL_ERROR(1u),
    GTK_PRINT_ERROR_NOMEM(2u),
    GTK_PRINT_ERROR_INVALID_FILE(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkPrintError.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkPrintError
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkRecentManagerError(override val value: UInt) : CEnum {
    GTK_RECENT_MANAGER_ERROR_NOT_FOUND(0u),
    GTK_RECENT_MANAGER_ERROR_INVALID_URI(1u),
    GTK_RECENT_MANAGER_ERROR_INVALID_ENCODING(2u),
    GTK_RECENT_MANAGER_ERROR_NOT_REGISTERED(3u),
    GTK_RECENT_MANAGER_ERROR_READ(4u),
    GTK_RECENT_MANAGER_ERROR_WRITE(5u),
    GTK_RECENT_MANAGER_ERROR_UNKNOWN(6u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkRecentManagerError.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkRecentManagerError
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkRecentChooserError(override val value: UInt) : CEnum {
    GTK_RECENT_CHOOSER_ERROR_NOT_FOUND(0u),
    GTK_RECENT_CHOOSER_ERROR_INVALID_URI(1u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkRecentChooserError.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkRecentChooserError
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkRevealerTransitionType(override val value: UInt) : CEnum {
    GTK_REVEALER_TRANSITION_TYPE_NONE(0u),
    GTK_REVEALER_TRANSITION_TYPE_CROSSFADE(1u),
    GTK_REVEALER_TRANSITION_TYPE_SLIDE_RIGHT(2u),
    GTK_REVEALER_TRANSITION_TYPE_SLIDE_LEFT(3u),
    GTK_REVEALER_TRANSITION_TYPE_SLIDE_UP(4u),
    GTK_REVEALER_TRANSITION_TYPE_SLIDE_DOWN(5u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkRevealerTransitionType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkRevealerTransitionType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkCornerType(override val value: UInt) : CEnum {
    GTK_CORNER_TOP_LEFT(0u),
    GTK_CORNER_BOTTOM_LEFT(1u),
    GTK_CORNER_TOP_RIGHT(2u),
    GTK_CORNER_BOTTOM_RIGHT(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkCornerType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkCornerType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkPolicyType(override val value: UInt) : CEnum {
    GTK_POLICY_ALWAYS(0u),
    GTK_POLICY_AUTOMATIC(1u),
    GTK_POLICY_NEVER(2u),
    GTK_POLICY_EXTERNAL(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkPolicyType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkPolicyType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkShortcutType(override val value: UInt) : CEnum {
    GTK_SHORTCUT_ACCELERATOR(0u),
    GTK_SHORTCUT_GESTURE_PINCH(1u),
    GTK_SHORTCUT_GESTURE_STRETCH(2u),
    GTK_SHORTCUT_GESTURE_ROTATE_CLOCKWISE(3u),
    GTK_SHORTCUT_GESTURE_ROTATE_COUNTERCLOCKWISE(4u),
    GTK_SHORTCUT_GESTURE_TWO_FINGER_SWIPE_LEFT(5u),
    GTK_SHORTCUT_GESTURE_TWO_FINGER_SWIPE_RIGHT(6u),
    GTK_SHORTCUT_GESTURE(7u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkShortcutType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkShortcutType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkStackTransitionType(override val value: UInt) : CEnum {
    GTK_STACK_TRANSITION_TYPE_NONE(0u),
    GTK_STACK_TRANSITION_TYPE_CROSSFADE(1u),
    GTK_STACK_TRANSITION_TYPE_SLIDE_RIGHT(2u),
    GTK_STACK_TRANSITION_TYPE_SLIDE_LEFT(3u),
    GTK_STACK_TRANSITION_TYPE_SLIDE_UP(4u),
    GTK_STACK_TRANSITION_TYPE_SLIDE_DOWN(5u),
    GTK_STACK_TRANSITION_TYPE_SLIDE_LEFT_RIGHT(6u),
    GTK_STACK_TRANSITION_TYPE_SLIDE_UP_DOWN(7u),
    GTK_STACK_TRANSITION_TYPE_OVER_UP(8u),
    GTK_STACK_TRANSITION_TYPE_OVER_DOWN(9u),
    GTK_STACK_TRANSITION_TYPE_OVER_LEFT(10u),
    GTK_STACK_TRANSITION_TYPE_OVER_RIGHT(11u),
    GTK_STACK_TRANSITION_TYPE_UNDER_UP(12u),
    GTK_STACK_TRANSITION_TYPE_UNDER_DOWN(13u),
    GTK_STACK_TRANSITION_TYPE_UNDER_LEFT(14u),
    GTK_STACK_TRANSITION_TYPE_UNDER_RIGHT(15u),
    GTK_STACK_TRANSITION_TYPE_OVER_UP_DOWN(16u),
    GTK_STACK_TRANSITION_TYPE_OVER_DOWN_UP(17u),
    GTK_STACK_TRANSITION_TYPE_OVER_LEFT_RIGHT(18u),
    GTK_STACK_TRANSITION_TYPE_OVER_RIGHT_LEFT(19u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkStackTransitionType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkStackTransitionType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkSpinButtonUpdatePolicy(override val value: UInt) : CEnum {
    GTK_UPDATE_ALWAYS(0u),
    GTK_UPDATE_IF_VALID(1u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkSpinButtonUpdatePolicy.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkSpinButtonUpdatePolicy
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkSpinType(override val value: UInt) : CEnum {
    GTK_SPIN_STEP_FORWARD(0u),
    GTK_SPIN_STEP_BACKWARD(1u),
    GTK_SPIN_PAGE_FORWARD(2u),
    GTK_SPIN_PAGE_BACKWARD(3u),
    GTK_SPIN_HOME(4u),
    GTK_SPIN_END(5u),
    GTK_SPIN_USER_DEFINED(6u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkSpinType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkSpinType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkTextWindowType(override val value: UInt) : CEnum {
    GTK_TEXT_WINDOW_PRIVATE(0u),
    GTK_TEXT_WINDOW_WIDGET(1u),
    GTK_TEXT_WINDOW_TEXT(2u),
    GTK_TEXT_WINDOW_LEFT(3u),
    GTK_TEXT_WINDOW_RIGHT(4u),
    GTK_TEXT_WINDOW_TOP(5u),
    GTK_TEXT_WINDOW_BOTTOM(6u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkTextWindowType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkTextWindowType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkTextViewLayer(override val value: UInt) : CEnum {
    GTK_TEXT_VIEW_LAYER_BELOW(0u),
    GTK_TEXT_VIEW_LAYER_ABOVE(1u),
    GTK_TEXT_VIEW_LAYER_BELOW_TEXT(2u),
    GTK_TEXT_VIEW_LAYER_ABOVE_TEXT(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkTextViewLayer.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkTextViewLayer
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkTextExtendSelection(override val value: UInt) : CEnum {
    GTK_TEXT_EXTEND_SELECTION_WORD(0u),
    GTK_TEXT_EXTEND_SELECTION_LINE(1u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkTextExtendSelection.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkTextExtendSelection
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GtkToolbarSpaceStyle(override val value: UInt) : CEnum {
    GTK_TOOLBAR_SPACE_EMPTY(0u),
    GTK_TOOLBAR_SPACE_LINE(1u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GtkToolbarSpaceStyle.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GtkToolbarSpaceStyle
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

@CCall("knifunptr_libgtk30_g_type_init")
external fun g_type_init(): Unit

@CCall("knifunptr_libgtk31_g_type_init_with_debug_flags")
external fun g_type_init_with_debug_flags(debug_flags: GTypeDebugFlags): Unit

@CCall("knifunptr_libgtk32_g_type_name")
external fun g_type_name(type: GType): CPointer<gcharVar>?

@CCall("knifunptr_libgtk33_g_type_qname")
external fun g_type_qname(type: GType): GQuark

@CCall("knifunptr_libgtk34_g_type_from_name")
external fun g_type_from_name(@CCall.CString name: String?): GType

@CCall("knifunptr_libgtk35_g_type_parent")
external fun g_type_parent(type: GType): GType

@CCall("knifunptr_libgtk36_g_type_depth")
external fun g_type_depth(type: GType): guint

@CCall("knifunptr_libgtk37_g_type_next_base")
external fun g_type_next_base(leaf_type: GType, root_type: GType): GType

@CCall("knifunptr_libgtk38_g_type_is_a")
external fun g_type_is_a(type: GType, is_a_type: GType): gboolean

@CCall("knifunptr_libgtk39_g_type_class_ref")
external fun g_type_class_ref(type: GType): gpointer?

@CCall("knifunptr_libgtk310_g_type_class_peek")
external fun g_type_class_peek(type: GType): gpointer?

@CCall("knifunptr_libgtk311_g_type_class_peek_static")
external fun g_type_class_peek_static(type: GType): gpointer?

@CCall("knifunptr_libgtk312_g_type_class_unref")
external fun g_type_class_unref(g_class: gpointer?): Unit

@CCall("knifunptr_libgtk313_g_type_class_peek_parent")
external fun g_type_class_peek_parent(g_class: gpointer?): gpointer?

@CCall("knifunptr_libgtk314_g_type_interface_peek")
external fun g_type_interface_peek(instance_class: gpointer?, iface_type: GType): gpointer?

@CCall("knifunptr_libgtk315_g_type_interface_peek_parent")
external fun g_type_interface_peek_parent(g_iface: gpointer?): gpointer?

@CCall("knifunptr_libgtk316_g_type_default_interface_ref")
external fun g_type_default_interface_ref(g_type: GType): gpointer?

@CCall("knifunptr_libgtk317_g_type_default_interface_peek")
external fun g_type_default_interface_peek(g_type: GType): gpointer?

@CCall("knifunptr_libgtk318_g_type_default_interface_unref")
external fun g_type_default_interface_unref(g_iface: gpointer?): Unit

@CCall("knifunptr_libgtk319_g_type_children")
external fun g_type_children(type: GType, n_children: CValuesRef<guintVar>?): CPointer<GTypeVar>?

@CCall("knifunptr_libgtk320_g_type_interfaces")
external fun g_type_interfaces(type: GType, n_interfaces: CValuesRef<guintVar>?): CPointer<GTypeVar>?

@CCall("knifunptr_libgtk321_g_type_set_qdata")
external fun g_type_set_qdata(type: GType, quark: GQuark, data: gpointer?): Unit

@CCall("knifunptr_libgtk322_g_type_get_qdata")
external fun g_type_get_qdata(type: GType, quark: GQuark): gpointer?

@CCall("knifunptr_libgtk323_g_type_query")
external fun g_type_query(type: GType, query: CValuesRef<GTypeQuery>?): Unit

@CCall("knifunptr_libgtk324_g_type_get_instance_count")
external fun g_type_get_instance_count(type: GType): Int

@CCall("knifunptr_libgtk325_g_type_register_static")
external fun g_type_register_static(parent_type: GType, @CCall.CString type_name: String?, info: CValuesRef<GTypeInfo>?, flags: GTypeFlags): GType

@CCall("knifunptr_libgtk326_g_type_register_static_simple")
external fun g_type_register_static_simple(parent_type: GType, @CCall.CString type_name: String?, class_size: guint, class_init: GClassInitFunc?, instance_size: guint, instance_init: GInstanceInitFunc?, flags: GTypeFlags): GType

@CCall("knifunptr_libgtk327_g_type_register_dynamic")
external fun g_type_register_dynamic(parent_type: GType, @CCall.CString type_name: String?, plugin: CValuesRef<GTypePlugin>?, flags: GTypeFlags): GType

@CCall("knifunptr_libgtk328_g_type_register_fundamental")
external fun g_type_register_fundamental(type_id: GType, @CCall.CString type_name: String?, info: CValuesRef<GTypeInfo>?, finfo: CValuesRef<GTypeFundamentalInfo>?, flags: GTypeFlags): GType

@CCall("knifunptr_libgtk329_g_type_add_interface_static")
external fun g_type_add_interface_static(instance_type: GType, interface_type: GType, info: CValuesRef<GInterfaceInfo>?): Unit

@CCall("knifunptr_libgtk330_g_type_add_interface_dynamic")
external fun g_type_add_interface_dynamic(instance_type: GType, interface_type: GType, plugin: CValuesRef<GTypePlugin>?): Unit

@CCall("knifunptr_libgtk331_g_type_interface_add_prerequisite")
external fun g_type_interface_add_prerequisite(interface_type: GType, prerequisite_type: GType): Unit

@CCall("knifunptr_libgtk332_g_type_interface_prerequisites")
external fun g_type_interface_prerequisites(interface_type: GType, n_prerequisites: CValuesRef<guintVar>?): CPointer<GTypeVar>?

@CCall("knifunptr_libgtk333_g_type_class_add_private")
external fun g_type_class_add_private(g_class: gpointer?, private_size: gsize): Unit

@CCall("knifunptr_libgtk334_g_type_add_instance_private")
external fun g_type_add_instance_private(class_type: GType, private_size: gsize): gint

@CCall("knifunptr_libgtk335_g_type_instance_get_private")
external fun g_type_instance_get_private(instance: CValuesRef<GTypeInstance>?, private_type: GType): gpointer?

@CCall("knifunptr_libgtk336_g_type_class_adjust_private_offset")
external fun g_type_class_adjust_private_offset(g_class: gpointer?, private_size_or_offset: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk337_g_type_add_class_private")
external fun g_type_add_class_private(class_type: GType, private_size: gsize): Unit

@CCall("knifunptr_libgtk338_g_type_class_get_private")
external fun g_type_class_get_private(klass: CValuesRef<GTypeClass>?, private_type: GType): gpointer?

@CCall("knifunptr_libgtk339_g_type_class_get_instance_private_offset")
external fun g_type_class_get_instance_private_offset(g_class: gpointer?): gint

@CCall("knifunptr_libgtk340_g_type_ensure")
external fun g_type_ensure(type: GType): Unit

@CCall("knifunptr_libgtk341_g_type_get_type_registration_serial")
external fun g_type_get_type_registration_serial(): guint

@CCall("knifunptr_libgtk342_g_type_get_plugin")
external fun g_type_get_plugin(type: GType): CPointer<GTypePlugin>?

@CCall("knifunptr_libgtk343_g_type_interface_get_plugin")
external fun g_type_interface_get_plugin(instance_type: GType, interface_type: GType): CPointer<GTypePlugin>?

@CCall("knifunptr_libgtk344_g_type_fundamental_next")
external fun g_type_fundamental_next(): GType

@CCall("knifunptr_libgtk345_g_type_fundamental")
external fun g_type_fundamental(type_id: GType): GType

@CCall("knifunptr_libgtk346_g_type_create_instance")
external fun g_type_create_instance(type: GType): CPointer<GTypeInstance>?

@CCall("knifunptr_libgtk347_g_type_free_instance")
external fun g_type_free_instance(instance: CValuesRef<GTypeInstance>?): Unit

@CCall("knifunptr_libgtk348_g_type_add_class_cache_func")
external fun g_type_add_class_cache_func(cache_data: gpointer?, cache_func: GTypeClassCacheFunc?): Unit

@CCall("knifunptr_libgtk349_g_type_remove_class_cache_func")
external fun g_type_remove_class_cache_func(cache_data: gpointer?, cache_func: GTypeClassCacheFunc?): Unit

@CCall("knifunptr_libgtk350_g_type_class_unref_uncached")
external fun g_type_class_unref_uncached(g_class: gpointer?): Unit

@CCall("knifunptr_libgtk351_g_type_add_interface_check")
external fun g_type_add_interface_check(check_data: gpointer?, check_func: GTypeInterfaceCheckFunc?): Unit

@CCall("knifunptr_libgtk352_g_type_remove_interface_check")
external fun g_type_remove_interface_check(check_data: gpointer?, check_func: GTypeInterfaceCheckFunc?): Unit

@CCall("knifunptr_libgtk353_g_type_value_table_peek")
external fun g_type_value_table_peek(type: GType): CPointer<GTypeValueTable>?

@CCall("knifunptr_libgtk354_g_type_check_instance")
external fun g_type_check_instance(instance: CValuesRef<GTypeInstance>?): gboolean

@CCall("knifunptr_libgtk355_g_type_check_instance_cast")
external fun g_type_check_instance_cast(instance: CValuesRef<GTypeInstance>?, iface_type: GType): CPointer<GTypeInstance>?

@CCall("knifunptr_libgtk356_g_type_check_instance_is_a")
external fun g_type_check_instance_is_a(instance: CValuesRef<GTypeInstance>?, iface_type: GType): gboolean

@CCall("knifunptr_libgtk357_g_type_check_instance_is_fundamentally_a")
external fun g_type_check_instance_is_fundamentally_a(instance: CValuesRef<GTypeInstance>?, fundamental_type: GType): gboolean

@CCall("knifunptr_libgtk358_g_type_check_class_cast")
external fun g_type_check_class_cast(g_class: CValuesRef<GTypeClass>?, is_a_type: GType): CPointer<GTypeClass>?

@CCall("knifunptr_libgtk359_g_type_check_class_is_a")
external fun g_type_check_class_is_a(g_class: CValuesRef<GTypeClass>?, is_a_type: GType): gboolean

@CCall("knifunptr_libgtk360_g_type_check_is_value_type")
external fun g_type_check_is_value_type(type: GType): gboolean

@CCall("knifunptr_libgtk361_g_type_check_value")
external fun g_type_check_value(value: CValuesRef<GValue>?): gboolean

@CCall("knifunptr_libgtk362_g_type_check_value_holds")
external fun g_type_check_value_holds(value: CValuesRef<GValue>?, type: GType): gboolean

@CCall("knifunptr_libgtk363_g_type_test_flags")
external fun g_type_test_flags(type: GType, flags: guint): gboolean

@CCall("knifunptr_libgtk364_g_type_name_from_instance")
external fun g_type_name_from_instance(instance: CValuesRef<GTypeInstance>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk365_g_type_name_from_class")
external fun g_type_name_from_class(g_class: CValuesRef<GTypeClass>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk366_g_value_init")
external fun g_value_init(value: CValuesRef<GValue>?, g_type: GType): CPointer<GValue>?

@CCall("knifunptr_libgtk367_g_value_copy")
external fun g_value_copy(src_value: CValuesRef<GValue>?, dest_value: CValuesRef<GValue>?): Unit

@CCall("knifunptr_libgtk368_g_value_reset")
external fun g_value_reset(value: CValuesRef<GValue>?): CPointer<GValue>?

@CCall("knifunptr_libgtk369_g_value_unset")
external fun g_value_unset(value: CValuesRef<GValue>?): Unit

@CCall("knifunptr_libgtk370_g_value_set_instance")
external fun g_value_set_instance(value: CValuesRef<GValue>?, instance: gpointer?): Unit

@CCall("knifunptr_libgtk371_g_value_init_from_instance")
external fun g_value_init_from_instance(value: CValuesRef<GValue>?, instance: gpointer?): Unit

@CCall("knifunptr_libgtk372_g_value_fits_pointer")
external fun g_value_fits_pointer(value: CValuesRef<GValue>?): gboolean

@CCall("knifunptr_libgtk373_g_value_peek_pointer")
external fun g_value_peek_pointer(value: CValuesRef<GValue>?): gpointer?

@CCall("knifunptr_libgtk374_g_value_type_compatible")
external fun g_value_type_compatible(src_type: GType, dest_type: GType): gboolean

@CCall("knifunptr_libgtk375_g_value_type_transformable")
external fun g_value_type_transformable(src_type: GType, dest_type: GType): gboolean

@CCall("knifunptr_libgtk376_g_value_transform")
external fun g_value_transform(src_value: CValuesRef<GValue>?, dest_value: CValuesRef<GValue>?): gboolean

@CCall("knifunptr_libgtk377_g_value_register_transform_func")
external fun g_value_register_transform_func(src_type: GType, dest_type: GType, transform_func: GValueTransform?): Unit

@CCall("knifunptr_libgtk378_g_param_spec_ref")
external fun g_param_spec_ref(pspec: CValuesRef<GParamSpec>?): CPointer<GParamSpec>?

@CCall("knifunptr_libgtk379_g_param_spec_unref")
external fun g_param_spec_unref(pspec: CValuesRef<GParamSpec>?): Unit

@CCall("knifunptr_libgtk380_g_param_spec_sink")
external fun g_param_spec_sink(pspec: CValuesRef<GParamSpec>?): Unit

@CCall("knifunptr_libgtk381_g_param_spec_ref_sink")
external fun g_param_spec_ref_sink(pspec: CValuesRef<GParamSpec>?): CPointer<GParamSpec>?

@CCall("knifunptr_libgtk382_g_param_spec_get_qdata")
external fun g_param_spec_get_qdata(pspec: CValuesRef<GParamSpec>?, quark: GQuark): gpointer?

@CCall("knifunptr_libgtk383_g_param_spec_set_qdata")
external fun g_param_spec_set_qdata(pspec: CValuesRef<GParamSpec>?, quark: GQuark, data: gpointer?): Unit

@CCall("knifunptr_libgtk384_g_param_spec_set_qdata_full")
external fun g_param_spec_set_qdata_full(pspec: CValuesRef<GParamSpec>?, quark: GQuark, data: gpointer?, destroy: GDestroyNotify?): Unit

@CCall("knifunptr_libgtk385_g_param_spec_steal_qdata")
external fun g_param_spec_steal_qdata(pspec: CValuesRef<GParamSpec>?, quark: GQuark): gpointer?

@CCall("knifunptr_libgtk386_g_param_spec_get_redirect_target")
external fun g_param_spec_get_redirect_target(pspec: CValuesRef<GParamSpec>?): CPointer<GParamSpec>?

@CCall("knifunptr_libgtk387_g_param_value_set_default")
external fun g_param_value_set_default(pspec: CValuesRef<GParamSpec>?, value: CValuesRef<GValue>?): Unit

@CCall("knifunptr_libgtk388_g_param_value_defaults")
external fun g_param_value_defaults(pspec: CValuesRef<GParamSpec>?, value: CValuesRef<GValue>?): gboolean

@CCall("knifunptr_libgtk389_g_param_value_validate")
external fun g_param_value_validate(pspec: CValuesRef<GParamSpec>?, value: CValuesRef<GValue>?): gboolean

@CCall("knifunptr_libgtk390_g_param_value_convert")
external fun g_param_value_convert(pspec: CValuesRef<GParamSpec>?, src_value: CValuesRef<GValue>?, dest_value: CValuesRef<GValue>?, strict_validation: gboolean): gboolean

@CCall("knifunptr_libgtk391_g_param_values_cmp")
external fun g_param_values_cmp(pspec: CValuesRef<GParamSpec>?, value1: CValuesRef<GValue>?, value2: CValuesRef<GValue>?): gint

@CCall("knifunptr_libgtk392_g_param_spec_get_name")
external fun g_param_spec_get_name(pspec: CValuesRef<GParamSpec>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk393_g_param_spec_get_nick")
external fun g_param_spec_get_nick(pspec: CValuesRef<GParamSpec>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk394_g_param_spec_get_blurb")
external fun g_param_spec_get_blurb(pspec: CValuesRef<GParamSpec>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk395_g_value_set_param")
external fun g_value_set_param(value: CValuesRef<GValue>?, param: CValuesRef<GParamSpec>?): Unit

@CCall("knifunptr_libgtk396_g_value_get_param")
external fun g_value_get_param(value: CValuesRef<GValue>?): CPointer<GParamSpec>?

@CCall("knifunptr_libgtk397_g_value_dup_param")
external fun g_value_dup_param(value: CValuesRef<GValue>?): CPointer<GParamSpec>?

@CCall("knifunptr_libgtk398_g_value_take_param")
external fun g_value_take_param(value: CValuesRef<GValue>?, param: CValuesRef<GParamSpec>?): Unit

@CCall("knifunptr_libgtk399_g_value_set_param_take_ownership")
external fun g_value_set_param_take_ownership(value: CValuesRef<GValue>?, param: CValuesRef<GParamSpec>?): Unit

@CCall("knifunptr_libgtk3100_g_param_spec_get_default_value")
external fun g_param_spec_get_default_value(pspec: CValuesRef<GParamSpec>?): CPointer<GValue>?

@CCall("knifunptr_libgtk3101_g_param_spec_get_name_quark")
external fun g_param_spec_get_name_quark(pspec: CValuesRef<GParamSpec>?): GQuark

@CCall("knifunptr_libgtk3102_g_param_type_register_static")
external fun g_param_type_register_static(@CCall.CString name: String?, pspec_info: CValuesRef<GParamSpecTypeInfo>?): GType

@CCall("knifunptr_libgtk3103__g_param_type_register_static_constant")
external fun _g_param_type_register_static_constant(@CCall.CString name: String?, pspec_info: CValuesRef<GParamSpecTypeInfo>?, opt_type: GType): GType

@CCall("knifunptr_libgtk3104_g_param_spec_internal")
external fun g_param_spec_internal(param_type: GType, @CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, flags: GParamFlags): gpointer?

@CCall("knifunptr_libgtk3105_g_param_spec_pool_new")
external fun g_param_spec_pool_new(type_prefixing: gboolean): CPointer<GParamSpecPool>?

@CCall("knifunptr_libgtk3106_g_param_spec_pool_insert")
external fun g_param_spec_pool_insert(pool: CValuesRef<GParamSpecPool>?, pspec: CValuesRef<GParamSpec>?, owner_type: GType): Unit

@CCall("knifunptr_libgtk3107_g_param_spec_pool_remove")
external fun g_param_spec_pool_remove(pool: CValuesRef<GParamSpecPool>?, pspec: CValuesRef<GParamSpec>?): Unit

@CCall("knifunptr_libgtk3108_g_param_spec_pool_lookup")
external fun g_param_spec_pool_lookup(pool: CValuesRef<GParamSpecPool>?, @CCall.CString param_name: String?, owner_type: GType, walk_ancestors: gboolean): CPointer<GParamSpec>?

@CCall("knifunptr_libgtk3109_g_param_spec_pool_list_owned")
external fun g_param_spec_pool_list_owned(pool: CValuesRef<GParamSpecPool>?, owner_type: GType): CPointer<GList>?

@CCall("knifunptr_libgtk3110_g_param_spec_pool_list")
external fun g_param_spec_pool_list(pool: CValuesRef<GParamSpecPool>?, owner_type: GType, n_pspecs_p: CValuesRef<guintVar>?): CPointer<CPointerVar<GParamSpec>>?

@CCall("knifunptr_libgtk3111_g_cclosure_new")
external fun g_cclosure_new(callback_func: GCallback?, user_data: gpointer?, destroy_data: GClosureNotify?): CPointer<GClosure>?

@CCall("knifunptr_libgtk3112_g_cclosure_new_swap")
external fun g_cclosure_new_swap(callback_func: GCallback?, user_data: gpointer?, destroy_data: GClosureNotify?): CPointer<GClosure>?

@CCall("knifunptr_libgtk3113_g_signal_type_cclosure_new")
external fun g_signal_type_cclosure_new(itype: GType, struct_offset: guint): CPointer<GClosure>?

@CCall("knifunptr_libgtk3114_g_closure_ref")
external fun g_closure_ref(closure: CValuesRef<GClosure>?): CPointer<GClosure>?

@CCall("knifunptr_libgtk3115_g_closure_sink")
external fun g_closure_sink(closure: CValuesRef<GClosure>?): Unit

@CCall("knifunptr_libgtk3116_g_closure_unref")
external fun g_closure_unref(closure: CValuesRef<GClosure>?): Unit

@CCall("knifunptr_libgtk3117_g_closure_new_simple")
external fun g_closure_new_simple(sizeof_closure: guint, data: gpointer?): CPointer<GClosure>?

@CCall("knifunptr_libgtk3118_g_closure_add_finalize_notifier")
external fun g_closure_add_finalize_notifier(closure: CValuesRef<GClosure>?, notify_data: gpointer?, notify_func: GClosureNotify?): Unit

@CCall("knifunptr_libgtk3119_g_closure_remove_finalize_notifier")
external fun g_closure_remove_finalize_notifier(closure: CValuesRef<GClosure>?, notify_data: gpointer?, notify_func: GClosureNotify?): Unit

@CCall("knifunptr_libgtk3120_g_closure_add_invalidate_notifier")
external fun g_closure_add_invalidate_notifier(closure: CValuesRef<GClosure>?, notify_data: gpointer?, notify_func: GClosureNotify?): Unit

@CCall("knifunptr_libgtk3121_g_closure_remove_invalidate_notifier")
external fun g_closure_remove_invalidate_notifier(closure: CValuesRef<GClosure>?, notify_data: gpointer?, notify_func: GClosureNotify?): Unit

@CCall("knifunptr_libgtk3122_g_closure_add_marshal_guards")
external fun g_closure_add_marshal_guards(closure: CValuesRef<GClosure>?, pre_marshal_data: gpointer?, pre_marshal_notify: GClosureNotify?, post_marshal_data: gpointer?, post_marshal_notify: GClosureNotify?): Unit

@CCall("knifunptr_libgtk3123_g_closure_set_marshal")
external fun g_closure_set_marshal(closure: CValuesRef<GClosure>?, marshal: GClosureMarshal?): Unit

@CCall("knifunptr_libgtk3124_g_closure_set_meta_marshal")
external fun g_closure_set_meta_marshal(closure: CValuesRef<GClosure>?, marshal_data: gpointer?, meta_marshal: GClosureMarshal?): Unit

@CCall("knifunptr_libgtk3125_g_closure_invalidate")
external fun g_closure_invalidate(closure: CValuesRef<GClosure>?): Unit

@CCall("knifunptr_libgtk3126_g_closure_invoke")
external fun g_closure_invoke(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?): Unit

@CCall("knifunptr_libgtk3127_g_cclosure_marshal_generic")
external fun g_cclosure_marshal_generic(closure: CValuesRef<GClosure>?, return_gvalue: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_libgtk3128_g_cclosure_marshal_generic_va")
external fun g_cclosure_marshal_generic_va(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args_list: platform.posix.va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_libgtk3129_g_cclosure_marshal_VOID__VOID")
external fun g_cclosure_marshal_VOID__VOID(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_libgtk3130_g_cclosure_marshal_VOID__VOIDv")
external fun g_cclosure_marshal_VOID__VOIDv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: platform.posix.va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_libgtk3131_g_cclosure_marshal_VOID__BOOLEAN")
external fun g_cclosure_marshal_VOID__BOOLEAN(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_libgtk3132_g_cclosure_marshal_VOID__BOOLEANv")
external fun g_cclosure_marshal_VOID__BOOLEANv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: platform.posix.va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_libgtk3133_g_cclosure_marshal_VOID__CHAR")
external fun g_cclosure_marshal_VOID__CHAR(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_libgtk3134_g_cclosure_marshal_VOID__CHARv")
external fun g_cclosure_marshal_VOID__CHARv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: platform.posix.va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_libgtk3135_g_cclosure_marshal_VOID__UCHAR")
external fun g_cclosure_marshal_VOID__UCHAR(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_libgtk3136_g_cclosure_marshal_VOID__UCHARv")
external fun g_cclosure_marshal_VOID__UCHARv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: platform.posix.va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_libgtk3137_g_cclosure_marshal_VOID__INT")
external fun g_cclosure_marshal_VOID__INT(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_libgtk3138_g_cclosure_marshal_VOID__INTv")
external fun g_cclosure_marshal_VOID__INTv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: platform.posix.va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_libgtk3139_g_cclosure_marshal_VOID__UINT")
external fun g_cclosure_marshal_VOID__UINT(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_libgtk3140_g_cclosure_marshal_VOID__UINTv")
external fun g_cclosure_marshal_VOID__UINTv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: platform.posix.va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_libgtk3141_g_cclosure_marshal_VOID__LONG")
external fun g_cclosure_marshal_VOID__LONG(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_libgtk3142_g_cclosure_marshal_VOID__LONGv")
external fun g_cclosure_marshal_VOID__LONGv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: platform.posix.va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_libgtk3143_g_cclosure_marshal_VOID__ULONG")
external fun g_cclosure_marshal_VOID__ULONG(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_libgtk3144_g_cclosure_marshal_VOID__ULONGv")
external fun g_cclosure_marshal_VOID__ULONGv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: platform.posix.va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_libgtk3145_g_cclosure_marshal_VOID__ENUM")
external fun g_cclosure_marshal_VOID__ENUM(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_libgtk3146_g_cclosure_marshal_VOID__ENUMv")
external fun g_cclosure_marshal_VOID__ENUMv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: platform.posix.va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_libgtk3147_g_cclosure_marshal_VOID__FLAGS")
external fun g_cclosure_marshal_VOID__FLAGS(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_libgtk3148_g_cclosure_marshal_VOID__FLAGSv")
external fun g_cclosure_marshal_VOID__FLAGSv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: platform.posix.va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_libgtk3149_g_cclosure_marshal_VOID__FLOAT")
external fun g_cclosure_marshal_VOID__FLOAT(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_libgtk3150_g_cclosure_marshal_VOID__FLOATv")
external fun g_cclosure_marshal_VOID__FLOATv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: platform.posix.va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_libgtk3151_g_cclosure_marshal_VOID__DOUBLE")
external fun g_cclosure_marshal_VOID__DOUBLE(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_libgtk3152_g_cclosure_marshal_VOID__DOUBLEv")
external fun g_cclosure_marshal_VOID__DOUBLEv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: platform.posix.va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_libgtk3153_g_cclosure_marshal_VOID__STRING")
external fun g_cclosure_marshal_VOID__STRING(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_libgtk3154_g_cclosure_marshal_VOID__STRINGv")
external fun g_cclosure_marshal_VOID__STRINGv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: platform.posix.va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_libgtk3155_g_cclosure_marshal_VOID__PARAM")
external fun g_cclosure_marshal_VOID__PARAM(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_libgtk3156_g_cclosure_marshal_VOID__PARAMv")
external fun g_cclosure_marshal_VOID__PARAMv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: platform.posix.va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_libgtk3157_g_cclosure_marshal_VOID__BOXED")
external fun g_cclosure_marshal_VOID__BOXED(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_libgtk3158_g_cclosure_marshal_VOID__BOXEDv")
external fun g_cclosure_marshal_VOID__BOXEDv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: platform.posix.va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_libgtk3159_g_cclosure_marshal_VOID__POINTER")
external fun g_cclosure_marshal_VOID__POINTER(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_libgtk3160_g_cclosure_marshal_VOID__POINTERv")
external fun g_cclosure_marshal_VOID__POINTERv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: platform.posix.va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_libgtk3161_g_cclosure_marshal_VOID__OBJECT")
external fun g_cclosure_marshal_VOID__OBJECT(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_libgtk3162_g_cclosure_marshal_VOID__OBJECTv")
external fun g_cclosure_marshal_VOID__OBJECTv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: platform.posix.va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_libgtk3163_g_cclosure_marshal_VOID__VARIANT")
external fun g_cclosure_marshal_VOID__VARIANT(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_libgtk3164_g_cclosure_marshal_VOID__VARIANTv")
external fun g_cclosure_marshal_VOID__VARIANTv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: platform.posix.va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_libgtk3165_g_cclosure_marshal_VOID__UINT_POINTER")
external fun g_cclosure_marshal_VOID__UINT_POINTER(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_libgtk3166_g_cclosure_marshal_VOID__UINT_POINTERv")
external fun g_cclosure_marshal_VOID__UINT_POINTERv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: platform.posix.va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_libgtk3167_g_cclosure_marshal_BOOLEAN__FLAGS")
external fun g_cclosure_marshal_BOOLEAN__FLAGS(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_libgtk3168_g_cclosure_marshal_BOOLEAN__FLAGSv")
external fun g_cclosure_marshal_BOOLEAN__FLAGSv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: platform.posix.va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_libgtk3169_g_cclosure_marshal_STRING__OBJECT_POINTER")
external fun g_cclosure_marshal_STRING__OBJECT_POINTER(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_libgtk3170_g_cclosure_marshal_STRING__OBJECT_POINTERv")
external fun g_cclosure_marshal_STRING__OBJECT_POINTERv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: platform.posix.va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_libgtk3171_g_cclosure_marshal_BOOLEAN__BOXED_BOXED")
external fun g_cclosure_marshal_BOOLEAN__BOXED_BOXED(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_libgtk3172_g_cclosure_marshal_BOOLEAN__BOXED_BOXEDv")
external fun g_cclosure_marshal_BOOLEAN__BOXED_BOXEDv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: platform.posix.va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_libgtk3173_g_signal_newv")
external fun g_signal_newv(@CCall.CString signal_name: String?, itype: GType, signal_flags: GSignalFlags, class_closure: CValuesRef<GClosure>?, accumulator: GSignalAccumulator?, accu_data: gpointer?, c_marshaller: GSignalCMarshaller?, return_type: GType, n_params: guint, param_types: CValuesRef<GTypeVar>?): guint

@CCall("knifunptr_libgtk3174_g_signal_new_valist")
external fun g_signal_new_valist(@CCall.CString signal_name: String?, itype: GType, signal_flags: GSignalFlags, class_closure: CValuesRef<GClosure>?, accumulator: GSignalAccumulator?, accu_data: gpointer?, c_marshaller: GSignalCMarshaller?, return_type: GType, n_params: guint, args: platform.posix.va_list?): guint

@CCall("knifunptr_libgtk3175_g_signal_new")
external fun g_signal_new(@CCall.CString signal_name: String?, itype: GType, signal_flags: GSignalFlags, class_offset: guint, accumulator: GSignalAccumulator?, accu_data: gpointer?, c_marshaller: GSignalCMarshaller?, return_type: GType, n_params: guint, vararg variadicArguments: Any?): guint

@CCall("knifunptr_libgtk3176_g_signal_new_class_handler")
external fun g_signal_new_class_handler(@CCall.CString signal_name: String?, itype: GType, signal_flags: GSignalFlags, class_handler: GCallback?, accumulator: GSignalAccumulator?, accu_data: gpointer?, c_marshaller: GSignalCMarshaller?, return_type: GType, n_params: guint, vararg variadicArguments: Any?): guint

@CCall("knifunptr_libgtk3177_g_signal_set_va_marshaller")
external fun g_signal_set_va_marshaller(signal_id: guint, instance_type: GType, va_marshaller: GSignalCVaMarshaller?): Unit

@CCall("knifunptr_libgtk3178_g_signal_emitv")
external fun g_signal_emitv(instance_and_params: CValuesRef<GValue>?, signal_id: guint, detail: GQuark, return_value: CValuesRef<GValue>?): Unit

@CCall("knifunptr_libgtk3179_g_signal_emit_valist")
external fun g_signal_emit_valist(instance: gpointer?, signal_id: guint, detail: GQuark, var_args: platform.posix.va_list?): Unit

@CCall("knifunptr_libgtk3180_g_signal_emit")
external fun g_signal_emit(instance: gpointer?, signal_id: guint, detail: GQuark, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk3181_g_signal_emit_by_name")
external fun g_signal_emit_by_name(instance: gpointer?, @CCall.CString detailed_signal: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk3182_g_signal_lookup")
external fun g_signal_lookup(@CCall.CString name: String?, itype: GType): guint

@CCall("knifunptr_libgtk3183_g_signal_name")
external fun g_signal_name(signal_id: guint): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3184_g_signal_query")
external fun g_signal_query(signal_id: guint, query: CValuesRef<GSignalQuery>?): Unit

@CCall("knifunptr_libgtk3185_g_signal_list_ids")
external fun g_signal_list_ids(itype: GType, n_ids: CValuesRef<guintVar>?): CPointer<guintVar>?

@CCall("knifunptr_libgtk3186_g_signal_parse_name")
external fun g_signal_parse_name(@CCall.CString detailed_signal: String?, itype: GType, signal_id_p: CValuesRef<guintVar>?, detail_p: CValuesRef<GQuarkVar>?, force_detail_quark: gboolean): gboolean

@CCall("knifunptr_libgtk3187_g_signal_get_invocation_hint")
external fun g_signal_get_invocation_hint(instance: gpointer?): CPointer<GSignalInvocationHint>?

@CCall("knifunptr_libgtk3188_g_signal_stop_emission")
external fun g_signal_stop_emission(instance: gpointer?, signal_id: guint, detail: GQuark): Unit

@CCall("knifunptr_libgtk3189_g_signal_stop_emission_by_name")
external fun g_signal_stop_emission_by_name(instance: gpointer?, @CCall.CString detailed_signal: String?): Unit

@CCall("knifunptr_libgtk3190_g_signal_add_emission_hook")
external fun g_signal_add_emission_hook(signal_id: guint, detail: GQuark, hook_func: GSignalEmissionHook?, hook_data: gpointer?, data_destroy: GDestroyNotify?): gulong

@CCall("knifunptr_libgtk3191_g_signal_remove_emission_hook")
external fun g_signal_remove_emission_hook(signal_id: guint, hook_id: gulong): Unit

@CCall("knifunptr_libgtk3192_g_signal_has_handler_pending")
external fun g_signal_has_handler_pending(instance: gpointer?, signal_id: guint, detail: GQuark, may_be_blocked: gboolean): gboolean

@CCall("knifunptr_libgtk3193_g_signal_connect_closure_by_id")
external fun g_signal_connect_closure_by_id(instance: gpointer?, signal_id: guint, detail: GQuark, closure: CValuesRef<GClosure>?, after: gboolean): gulong

@CCall("knifunptr_libgtk3194_g_signal_connect_closure")
external fun g_signal_connect_closure(instance: gpointer?, @CCall.CString detailed_signal: String?, closure: CValuesRef<GClosure>?, after: gboolean): gulong

@CCall("knifunptr_libgtk3195_g_signal_connect_data")
external fun g_signal_connect_data(instance: gpointer?, @CCall.CString detailed_signal: String?, c_handler: GCallback?, data: gpointer?, destroy_data: GClosureNotify?, connect_flags: GConnectFlags): gulong

@CCall("knifunptr_libgtk3196_g_signal_handler_block")
external fun g_signal_handler_block(instance: gpointer?, handler_id: gulong): Unit

@CCall("knifunptr_libgtk3197_g_signal_handler_unblock")
external fun g_signal_handler_unblock(instance: gpointer?, handler_id: gulong): Unit

@CCall("knifunptr_libgtk3198_g_signal_handler_disconnect")
external fun g_signal_handler_disconnect(instance: gpointer?, handler_id: gulong): Unit

@CCall("knifunptr_libgtk3199_g_signal_handler_is_connected")
external fun g_signal_handler_is_connected(instance: gpointer?, handler_id: gulong): gboolean

@CCall("knifunptr_libgtk3200_g_signal_handler_find")
external fun g_signal_handler_find(instance: gpointer?, mask: GSignalMatchType, signal_id: guint, detail: GQuark, closure: CValuesRef<GClosure>?, func: gpointer?, data: gpointer?): gulong

@CCall("knifunptr_libgtk3201_g_signal_handlers_block_matched")
external fun g_signal_handlers_block_matched(instance: gpointer?, mask: GSignalMatchType, signal_id: guint, detail: GQuark, closure: CValuesRef<GClosure>?, func: gpointer?, data: gpointer?): guint

@CCall("knifunptr_libgtk3202_g_signal_handlers_unblock_matched")
external fun g_signal_handlers_unblock_matched(instance: gpointer?, mask: GSignalMatchType, signal_id: guint, detail: GQuark, closure: CValuesRef<GClosure>?, func: gpointer?, data: gpointer?): guint

@CCall("knifunptr_libgtk3203_g_signal_handlers_disconnect_matched")
external fun g_signal_handlers_disconnect_matched(instance: gpointer?, mask: GSignalMatchType, signal_id: guint, detail: GQuark, closure: CValuesRef<GClosure>?, func: gpointer?, data: gpointer?): guint

@CCall("knifunptr_libgtk3204_g_signal_override_class_closure")
external fun g_signal_override_class_closure(signal_id: guint, instance_type: GType, class_closure: CValuesRef<GClosure>?): Unit

@CCall("knifunptr_libgtk3205_g_signal_override_class_handler")
external fun g_signal_override_class_handler(@CCall.CString signal_name: String?, instance_type: GType, class_handler: GCallback?): Unit

@CCall("knifunptr_libgtk3206_g_signal_chain_from_overridden")
external fun g_signal_chain_from_overridden(instance_and_params: CValuesRef<GValue>?, return_value: CValuesRef<GValue>?): Unit

@CCall("knifunptr_libgtk3207_g_signal_chain_from_overridden_handler")
external fun g_signal_chain_from_overridden_handler(instance: gpointer?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk3208_g_signal_accumulator_true_handled")
external fun g_signal_accumulator_true_handled(ihint: CValuesRef<GSignalInvocationHint>?, return_accu: CValuesRef<GValue>?, handler_return: CValuesRef<GValue>?, dummy: gpointer?): gboolean

@CCall("knifunptr_libgtk3209_g_signal_accumulator_first_wins")
external fun g_signal_accumulator_first_wins(ihint: CValuesRef<GSignalInvocationHint>?, return_accu: CValuesRef<GValue>?, handler_return: CValuesRef<GValue>?, dummy: gpointer?): gboolean

@CCall("knifunptr_libgtk3210_g_signal_handlers_destroy")
external fun g_signal_handlers_destroy(instance: gpointer?): Unit

@CCall("knifunptr_libgtk3211__g_signals_destroy")
external fun _g_signals_destroy(itype: GType): Unit

@CCall("knifunptr_libgtk3212_g_date_get_type")
external fun g_date_get_type(): GType

@CCall("knifunptr_libgtk3213_g_strv_get_type")
external fun g_strv_get_type(): GType

@CCall("knifunptr_libgtk3214_g_gstring_get_type")
external fun g_gstring_get_type(): GType

@CCall("knifunptr_libgtk3215_g_hash_table_get_type")
external fun g_hash_table_get_type(): GType

@CCall("knifunptr_libgtk3216_g_array_get_type")
external fun g_array_get_type(): GType

@CCall("knifunptr_libgtk3217_g_byte_array_get_type")
external fun g_byte_array_get_type(): GType

@CCall("knifunptr_libgtk3218_g_ptr_array_get_type")
external fun g_ptr_array_get_type(): GType

@CCall("knifunptr_libgtk3219_g_bytes_get_type")
external fun g_bytes_get_type(): GType

@CCall("knifunptr_libgtk3220_g_variant_type_get_gtype")
external fun g_variant_type_get_gtype(): GType

@CCall("knifunptr_libgtk3221_g_regex_get_type")
external fun g_regex_get_type(): GType

@CCall("knifunptr_libgtk3222_g_match_info_get_type")
external fun g_match_info_get_type(): GType

@CCall("knifunptr_libgtk3223_g_error_get_type")
external fun g_error_get_type(): GType

@CCall("knifunptr_libgtk3224_g_date_time_get_type")
external fun g_date_time_get_type(): GType

@CCall("knifunptr_libgtk3225_g_time_zone_get_type")
external fun g_time_zone_get_type(): GType

@CCall("knifunptr_libgtk3226_g_io_channel_get_type")
external fun g_io_channel_get_type(): GType

@CCall("knifunptr_libgtk3227_g_io_condition_get_type")
external fun g_io_condition_get_type(): GType

@CCall("knifunptr_libgtk3228_g_variant_builder_get_type")
external fun g_variant_builder_get_type(): GType

@CCall("knifunptr_libgtk3229_g_variant_dict_get_type")
external fun g_variant_dict_get_type(): GType

@CCall("knifunptr_libgtk3230_g_key_file_get_type")
external fun g_key_file_get_type(): GType

@CCall("knifunptr_libgtk3231_g_main_loop_get_type")
external fun g_main_loop_get_type(): GType

@CCall("knifunptr_libgtk3232_g_main_context_get_type")
external fun g_main_context_get_type(): GType

@CCall("knifunptr_libgtk3233_g_source_get_type")
external fun g_source_get_type(): GType

@CCall("knifunptr_libgtk3234_g_pollfd_get_type")
external fun g_pollfd_get_type(): GType

@CCall("knifunptr_libgtk3235_g_thread_get_type")
external fun g_thread_get_type(): GType

@CCall("knifunptr_libgtk3236_g_checksum_get_type")
external fun g_checksum_get_type(): GType

@CCall("knifunptr_libgtk3237_g_markup_parse_context_get_type")
external fun g_markup_parse_context_get_type(): GType

@CCall("knifunptr_libgtk3238_g_mapped_file_get_type")
external fun g_mapped_file_get_type(): GType

@CCall("knifunptr_libgtk3239_g_option_group_get_type")
external fun g_option_group_get_type(): GType

@CCall("knifunptr_libgtk3240_g_variant_get_gtype")
external fun g_variant_get_gtype(): GType

@CCall("knifunptr_libgtk3241_g_boxed_copy")
external fun g_boxed_copy(boxed_type: GType, src_boxed: gconstpointer?): gpointer?

@CCall("knifunptr_libgtk3242_g_boxed_free")
external fun g_boxed_free(boxed_type: GType, boxed: gpointer?): Unit

@CCall("knifunptr_libgtk3243_g_value_set_boxed")
external fun g_value_set_boxed(value: CValuesRef<GValue>?, v_boxed: gconstpointer?): Unit

@CCall("knifunptr_libgtk3244_g_value_set_static_boxed")
external fun g_value_set_static_boxed(value: CValuesRef<GValue>?, v_boxed: gconstpointer?): Unit

@CCall("knifunptr_libgtk3245_g_value_take_boxed")
external fun g_value_take_boxed(value: CValuesRef<GValue>?, v_boxed: gconstpointer?): Unit

@CCall("knifunptr_libgtk3246_g_value_set_boxed_take_ownership")
external fun g_value_set_boxed_take_ownership(value: CValuesRef<GValue>?, v_boxed: gconstpointer?): Unit

@CCall("knifunptr_libgtk3247_g_value_get_boxed")
external fun g_value_get_boxed(value: CValuesRef<GValue>?): gpointer?

@CCall("knifunptr_libgtk3248_g_value_dup_boxed")
external fun g_value_dup_boxed(value: CValuesRef<GValue>?): gpointer?

@CCall("knifunptr_libgtk3249_g_boxed_type_register_static")
external fun g_boxed_type_register_static(@CCall.CString name: String?, boxed_copy: GBoxedCopyFunc?, boxed_free: GBoxedFreeFunc?): GType

@CCall("knifunptr_libgtk3250_g_closure_get_type")
external fun g_closure_get_type(): GType

@CCall("knifunptr_libgtk3251_g_value_get_type")
external fun g_value_get_type(): GType

@CCall("knifunptr_libgtk3252_g_initially_unowned_get_type")
external fun g_initially_unowned_get_type(): GType

@CCall("knifunptr_libgtk3253_g_object_class_install_property")
external fun g_object_class_install_property(oclass: CValuesRef<GObjectClass>?, property_id: guint, pspec: CValuesRef<GParamSpec>?): Unit

@CCall("knifunptr_libgtk3254_g_object_class_find_property")
external fun g_object_class_find_property(oclass: CValuesRef<GObjectClass>?, @CCall.CString property_name: String?): CPointer<GParamSpec>?

@CCall("knifunptr_libgtk3255_g_object_class_list_properties")
external fun g_object_class_list_properties(oclass: CValuesRef<GObjectClass>?, n_properties: CValuesRef<guintVar>?): CPointer<CPointerVar<GParamSpec>>?

@CCall("knifunptr_libgtk3256_g_object_class_override_property")
external fun g_object_class_override_property(oclass: CValuesRef<GObjectClass>?, property_id: guint, @CCall.CString name: String?): Unit

@CCall("knifunptr_libgtk3257_g_object_class_install_properties")
external fun g_object_class_install_properties(oclass: CValuesRef<GObjectClass>?, n_pspecs: guint, pspecs: CValuesRef<CPointerVar<GParamSpec>>?): Unit

@CCall("knifunptr_libgtk3258_g_object_interface_install_property")
external fun g_object_interface_install_property(g_iface: gpointer?, pspec: CValuesRef<GParamSpec>?): Unit

@CCall("knifunptr_libgtk3259_g_object_interface_find_property")
external fun g_object_interface_find_property(g_iface: gpointer?, @CCall.CString property_name: String?): CPointer<GParamSpec>?

@CCall("knifunptr_libgtk3260_g_object_interface_list_properties")
external fun g_object_interface_list_properties(g_iface: gpointer?, n_properties_p: CValuesRef<guintVar>?): CPointer<CPointerVar<GParamSpec>>?

@CCall("knifunptr_libgtk3261_g_object_get_type")
external fun g_object_get_type(): GType

@CCall("knifunptr_libgtk3262_g_object_new")
external fun g_object_new(object_type: GType, @CCall.CString first_property_name: String?, vararg variadicArguments: Any?): gpointer?

@CCall("knifunptr_libgtk3263_g_object_new_with_properties")
external fun g_object_new_with_properties(object_type: GType, n_properties: guint, names: CValuesRef<CPointerVar<ByteVar>>?, values: CValuesRef<GValue>?): CPointer<GObject>?

@CCall("knifunptr_libgtk3264_g_object_newv")
external fun g_object_newv(object_type: GType, n_parameters: guint, parameters: CValuesRef<GParameter>?): gpointer?

@CCall("knifunptr_libgtk3265_g_object_new_valist")
external fun g_object_new_valist(object_type: GType, @CCall.CString first_property_name: String?, var_args: platform.posix.va_list?): CPointer<GObject>?

@CCall("knifunptr_libgtk3266_g_object_set")
external fun g_object_set(`object`: gpointer?, @CCall.CString first_property_name: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk3267_g_object_get")
external fun g_object_get(`object`: gpointer?, @CCall.CString first_property_name: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk3268_g_object_connect")
external fun g_object_connect(`object`: gpointer?, @CCall.CString signal_spec: String?, vararg variadicArguments: Any?): gpointer?

@CCall("knifunptr_libgtk3269_g_object_disconnect")
external fun g_object_disconnect(`object`: gpointer?, @CCall.CString signal_spec: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk3270_g_object_setv")
external fun g_object_setv(`object`: CValuesRef<GObject>?, n_properties: guint, names: CValuesRef<CPointerVar<gcharVar>>?, values: CValuesRef<GValue>?): Unit

@CCall("knifunptr_libgtk3271_g_object_set_valist")
external fun g_object_set_valist(`object`: CValuesRef<GObject>?, @CCall.CString first_property_name: String?, var_args: platform.posix.va_list?): Unit

@CCall("knifunptr_libgtk3272_g_object_getv")
external fun g_object_getv(`object`: CValuesRef<GObject>?, n_properties: guint, names: CValuesRef<CPointerVar<gcharVar>>?, values: CValuesRef<GValue>?): Unit

@CCall("knifunptr_libgtk3273_g_object_get_valist")
external fun g_object_get_valist(`object`: CValuesRef<GObject>?, @CCall.CString first_property_name: String?, var_args: platform.posix.va_list?): Unit

@CCall("knifunptr_libgtk3274_g_object_set_property")
external fun g_object_set_property(`object`: CValuesRef<GObject>?, @CCall.CString property_name: String?, value: CValuesRef<GValue>?): Unit

@CCall("knifunptr_libgtk3275_g_object_get_property")
external fun g_object_get_property(`object`: CValuesRef<GObject>?, @CCall.CString property_name: String?, value: CValuesRef<GValue>?): Unit

@CCall("knifunptr_libgtk3276_g_object_freeze_notify")
external fun g_object_freeze_notify(`object`: CValuesRef<GObject>?): Unit

@CCall("knifunptr_libgtk3277_g_object_notify")
external fun g_object_notify(`object`: CValuesRef<GObject>?, @CCall.CString property_name: String?): Unit

@CCall("knifunptr_libgtk3278_g_object_notify_by_pspec")
external fun g_object_notify_by_pspec(`object`: CValuesRef<GObject>?, pspec: CValuesRef<GParamSpec>?): Unit

@CCall("knifunptr_libgtk3279_g_object_thaw_notify")
external fun g_object_thaw_notify(`object`: CValuesRef<GObject>?): Unit

@CCall("knifunptr_libgtk3280_g_object_is_floating")
external fun g_object_is_floating(`object`: gpointer?): gboolean

@CCall("knifunptr_libgtk3281_g_object_ref_sink")
external fun g_object_ref_sink(`object`: gpointer?): gpointer?

@CCall("knifunptr_libgtk3282_g_object_ref")
external fun g_object_ref(`object`: gpointer?): gpointer?

@CCall("knifunptr_libgtk3283_g_object_unref")
external fun g_object_unref(`object`: gpointer?): Unit

@CCall("knifunptr_libgtk3284_g_object_weak_ref")
external fun g_object_weak_ref(`object`: CValuesRef<GObject>?, notify: GWeakNotify?, data: gpointer?): Unit

@CCall("knifunptr_libgtk3285_g_object_weak_unref")
external fun g_object_weak_unref(`object`: CValuesRef<GObject>?, notify: GWeakNotify?, data: gpointer?): Unit

@CCall("knifunptr_libgtk3286_g_object_add_weak_pointer")
external fun g_object_add_weak_pointer(`object`: CValuesRef<GObject>?, weak_pointer_location: CValuesRef<gpointerVar>?): Unit

@CCall("knifunptr_libgtk3287_g_object_remove_weak_pointer")
external fun g_object_remove_weak_pointer(`object`: CValuesRef<GObject>?, weak_pointer_location: CValuesRef<gpointerVar>?): Unit

@CCall("knifunptr_libgtk3288_g_object_add_toggle_ref")
external fun g_object_add_toggle_ref(`object`: CValuesRef<GObject>?, notify: GToggleNotify?, data: gpointer?): Unit

@CCall("knifunptr_libgtk3289_g_object_remove_toggle_ref")
external fun g_object_remove_toggle_ref(`object`: CValuesRef<GObject>?, notify: GToggleNotify?, data: gpointer?): Unit

@CCall("knifunptr_libgtk3290_g_object_get_qdata")
external fun g_object_get_qdata(`object`: CValuesRef<GObject>?, quark: GQuark): gpointer?

@CCall("knifunptr_libgtk3291_g_object_set_qdata")
external fun g_object_set_qdata(`object`: CValuesRef<GObject>?, quark: GQuark, data: gpointer?): Unit

@CCall("knifunptr_libgtk3292_g_object_set_qdata_full")
external fun g_object_set_qdata_full(`object`: CValuesRef<GObject>?, quark: GQuark, data: gpointer?, destroy: GDestroyNotify?): Unit

@CCall("knifunptr_libgtk3293_g_object_steal_qdata")
external fun g_object_steal_qdata(`object`: CValuesRef<GObject>?, quark: GQuark): gpointer?

@CCall("knifunptr_libgtk3294_g_object_dup_qdata")
external fun g_object_dup_qdata(`object`: CValuesRef<GObject>?, quark: GQuark, dup_func: GDuplicateFunc?, user_data: gpointer?): gpointer?

@CCall("knifunptr_libgtk3295_g_object_replace_qdata")
external fun g_object_replace_qdata(`object`: CValuesRef<GObject>?, quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, old_destroy: CValuesRef<GDestroyNotifyVar>?): gboolean

@CCall("knifunptr_libgtk3296_g_object_get_data")
external fun g_object_get_data(`object`: CValuesRef<GObject>?, @CCall.CString key: String?): gpointer?

@CCall("knifunptr_libgtk3297_g_object_set_data")
external fun g_object_set_data(`object`: CValuesRef<GObject>?, @CCall.CString key: String?, data: gpointer?): Unit

@CCall("knifunptr_libgtk3298_g_object_set_data_full")
external fun g_object_set_data_full(`object`: CValuesRef<GObject>?, @CCall.CString key: String?, data: gpointer?, destroy: GDestroyNotify?): Unit

@CCall("knifunptr_libgtk3299_g_object_steal_data")
external fun g_object_steal_data(`object`: CValuesRef<GObject>?, @CCall.CString key: String?): gpointer?

@CCall("knifunptr_libgtk3300_g_object_dup_data")
external fun g_object_dup_data(`object`: CValuesRef<GObject>?, @CCall.CString key: String?, dup_func: GDuplicateFunc?, user_data: gpointer?): gpointer?

@CCall("knifunptr_libgtk3301_g_object_replace_data")
external fun g_object_replace_data(`object`: CValuesRef<GObject>?, @CCall.CString key: String?, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, old_destroy: CValuesRef<GDestroyNotifyVar>?): gboolean

@CCall("knifunptr_libgtk3302_g_object_watch_closure")
external fun g_object_watch_closure(`object`: CValuesRef<GObject>?, closure: CValuesRef<GClosure>?): Unit

@CCall("knifunptr_libgtk3303_g_cclosure_new_object")
external fun g_cclosure_new_object(callback_func: GCallback?, `object`: CValuesRef<GObject>?): CPointer<GClosure>?

@CCall("knifunptr_libgtk3304_g_cclosure_new_object_swap")
external fun g_cclosure_new_object_swap(callback_func: GCallback?, `object`: CValuesRef<GObject>?): CPointer<GClosure>?

@CCall("knifunptr_libgtk3305_g_closure_new_object")
external fun g_closure_new_object(sizeof_closure: guint, `object`: CValuesRef<GObject>?): CPointer<GClosure>?

@CCall("knifunptr_libgtk3306_g_value_set_object")
external fun g_value_set_object(value: CValuesRef<GValue>?, v_object: gpointer?): Unit

@CCall("knifunptr_libgtk3307_g_value_get_object")
external fun g_value_get_object(value: CValuesRef<GValue>?): gpointer?

@CCall("knifunptr_libgtk3308_g_value_dup_object")
external fun g_value_dup_object(value: CValuesRef<GValue>?): gpointer?

@CCall("knifunptr_libgtk3309_g_signal_connect_object")
external fun g_signal_connect_object(instance: gpointer?, @CCall.CString detailed_signal: String?, c_handler: GCallback?, gobject: gpointer?, connect_flags: GConnectFlags): gulong

@CCall("knifunptr_libgtk3310_g_object_force_floating")
external fun g_object_force_floating(`object`: CValuesRef<GObject>?): Unit

@CCall("knifunptr_libgtk3311_g_object_run_dispose")
external fun g_object_run_dispose(`object`: CValuesRef<GObject>?): Unit

@CCall("knifunptr_libgtk3312_g_value_take_object")
external fun g_value_take_object(value: CValuesRef<GValue>?, v_object: gpointer?): Unit

@CCall("knifunptr_libgtk3313_g_value_set_object_take_ownership")
external fun g_value_set_object_take_ownership(value: CValuesRef<GValue>?, v_object: gpointer?): Unit

@CCall("knifunptr_libgtk3314_g_object_compat_control")
external fun g_object_compat_control(what: gsize, data: gpointer?): gsize

@CCall("knifunptr_libgtk3315_g_clear_object")
external fun g_clear_object(object_ptr: CValuesRef<CPointerVar<GObject>>?): Unit

@CCall("knifunptr_libgtk3316_g_set_object")
external fun g_set_object(object_ptr: CValuesRef<CPointerVar<GObject>>?, new_object: CValuesRef<GObject>?): gboolean

@CCall("knifunptr_libgtk3317_g_clear_weak_pointer")
external fun g_clear_weak_pointer(weak_pointer_location: CValuesRef<gpointerVar>?): Unit

@Deprecated("Unable to import this declaration", level = DeprecationLevel.ERROR)
fun g_set_weak_pointer(weak_pointer_location: CValuesRef<gpointerVar>?, new_object: CValuesRef<GObject>?): gboolean = throw UnsupportedOperationException()

@CCall("knifunptr_libgtk3319_g_weak_ref_init")
external fun g_weak_ref_init(weak_ref: CValuesRef<GWeakRef>?, `object`: gpointer?): Unit

@CCall("knifunptr_libgtk3320_g_weak_ref_clear")
external fun g_weak_ref_clear(weak_ref: CValuesRef<GWeakRef>?): Unit

@CCall("knifunptr_libgtk3321_g_weak_ref_get")
external fun g_weak_ref_get(weak_ref: CValuesRef<GWeakRef>?): gpointer?

@CCall("knifunptr_libgtk3322_g_weak_ref_set")
external fun g_weak_ref_set(weak_ref: CValuesRef<GWeakRef>?, `object`: gpointer?): Unit

@CCall("knifunptr_libgtk3323_g_binding_flags_get_type")
external fun g_binding_flags_get_type(): GType

@CCall("knifunptr_libgtk3324_g_binding_get_type")
external fun g_binding_get_type(): GType

@CCall("knifunptr_libgtk3325_g_binding_get_flags")
external fun g_binding_get_flags(binding: CValuesRef<GBinding>?): GBindingFlags

@CCall("knifunptr_libgtk3326_g_binding_get_source")
external fun g_binding_get_source(binding: CValuesRef<GBinding>?): CPointer<GObject>?

@CCall("knifunptr_libgtk3327_g_binding_get_target")
external fun g_binding_get_target(binding: CValuesRef<GBinding>?): CPointer<GObject>?

@CCall("knifunptr_libgtk3328_g_binding_get_source_property")
external fun g_binding_get_source_property(binding: CValuesRef<GBinding>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3329_g_binding_get_target_property")
external fun g_binding_get_target_property(binding: CValuesRef<GBinding>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3330_g_binding_unbind")
external fun g_binding_unbind(binding: CValuesRef<GBinding>?): Unit

@CCall("knifunptr_libgtk3331_g_object_bind_property")
external fun g_object_bind_property(source: gpointer?, @CCall.CString source_property: String?, target: gpointer?, @CCall.CString target_property: String?, flags: GBindingFlags): CPointer<GBinding>?

@CCall("knifunptr_libgtk3332_g_object_bind_property_full")
external fun g_object_bind_property_full(source: gpointer?, @CCall.CString source_property: String?, target: gpointer?, @CCall.CString target_property: String?, flags: GBindingFlags, transform_to: GBindingTransformFunc?, transform_from: GBindingTransformFunc?, user_data: gpointer?, notify: GDestroyNotify?): CPointer<GBinding>?

@CCall("knifunptr_libgtk3333_g_object_bind_property_with_closures")
external fun g_object_bind_property_with_closures(source: gpointer?, @CCall.CString source_property: String?, target: gpointer?, @CCall.CString target_property: String?, flags: GBindingFlags, transform_to: CValuesRef<GClosure>?, transform_from: CValuesRef<GClosure>?): CPointer<GBinding>?

@CCall("knifunptr_libgtk3334_g_enum_get_value")
external fun g_enum_get_value(enum_class: CValuesRef<GEnumClass>?, value: gint): CPointer<GEnumValue>?

@CCall("knifunptr_libgtk3335_g_enum_get_value_by_name")
external fun g_enum_get_value_by_name(enum_class: CValuesRef<GEnumClass>?, @CCall.CString name: String?): CPointer<GEnumValue>?

@CCall("knifunptr_libgtk3336_g_enum_get_value_by_nick")
external fun g_enum_get_value_by_nick(enum_class: CValuesRef<GEnumClass>?, @CCall.CString nick: String?): CPointer<GEnumValue>?

@CCall("knifunptr_libgtk3337_g_flags_get_first_value")
external fun g_flags_get_first_value(flags_class: CValuesRef<GFlagsClass>?, value: guint): CPointer<GFlagsValue>?

@CCall("knifunptr_libgtk3338_g_flags_get_value_by_name")
external fun g_flags_get_value_by_name(flags_class: CValuesRef<GFlagsClass>?, @CCall.CString name: String?): CPointer<GFlagsValue>?

@CCall("knifunptr_libgtk3339_g_flags_get_value_by_nick")
external fun g_flags_get_value_by_nick(flags_class: CValuesRef<GFlagsClass>?, @CCall.CString nick: String?): CPointer<GFlagsValue>?

@CCall("knifunptr_libgtk3340_g_enum_to_string")
external fun g_enum_to_string(g_enum_type: GType, value: gint): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3341_g_flags_to_string")
external fun g_flags_to_string(flags_type: GType, value: guint): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3342_g_value_set_enum")
external fun g_value_set_enum(value: CValuesRef<GValue>?, v_enum: gint): Unit

@CCall("knifunptr_libgtk3343_g_value_get_enum")
external fun g_value_get_enum(value: CValuesRef<GValue>?): gint

@CCall("knifunptr_libgtk3344_g_value_set_flags")
external fun g_value_set_flags(value: CValuesRef<GValue>?, v_flags: guint): Unit

@CCall("knifunptr_libgtk3345_g_value_get_flags")
external fun g_value_get_flags(value: CValuesRef<GValue>?): guint

@CCall("knifunptr_libgtk3346_g_enum_register_static")
external fun g_enum_register_static(@CCall.CString name: String?, const_static_values: CValuesRef<GEnumValue>?): GType

@CCall("knifunptr_libgtk3347_g_flags_register_static")
external fun g_flags_register_static(@CCall.CString name: String?, const_static_values: CValuesRef<GFlagsValue>?): GType

@CCall("knifunptr_libgtk3348_g_enum_complete_type_info")
external fun g_enum_complete_type_info(g_enum_type: GType, info: CValuesRef<GTypeInfo>?, const_values: CValuesRef<GEnumValue>?): Unit

@CCall("knifunptr_libgtk3349_g_flags_complete_type_info")
external fun g_flags_complete_type_info(g_flags_type: GType, info: CValuesRef<GTypeInfo>?, const_values: CValuesRef<GFlagsValue>?): Unit

@CCall("knifunptr_libgtk3350_g_param_spec_char")
external fun g_param_spec_char(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, minimum: gint8, maximum: gint8, default_value: gint8, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_libgtk3351_g_param_spec_uchar")
external fun g_param_spec_uchar(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, minimum: guint8, maximum: guint8, default_value: guint8, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_libgtk3352_g_param_spec_boolean")
external fun g_param_spec_boolean(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, default_value: gboolean, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_libgtk3353_g_param_spec_int")
external fun g_param_spec_int(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, minimum: gint, maximum: gint, default_value: gint, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_libgtk3354_g_param_spec_uint")
external fun g_param_spec_uint(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, minimum: guint, maximum: guint, default_value: guint, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_libgtk3355_g_param_spec_long")
external fun g_param_spec_long(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, minimum: glong, maximum: glong, default_value: glong, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_libgtk3356_g_param_spec_ulong")
external fun g_param_spec_ulong(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, minimum: gulong, maximum: gulong, default_value: gulong, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_libgtk3357_g_param_spec_int64")
external fun g_param_spec_int64(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, minimum: gint64, maximum: gint64, default_value: gint64, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_libgtk3358_g_param_spec_uint64")
external fun g_param_spec_uint64(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, minimum: guint64, maximum: guint64, default_value: guint64, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_libgtk3359_g_param_spec_unichar")
external fun g_param_spec_unichar(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, default_value: gunichar, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_libgtk3360_g_param_spec_enum")
external fun g_param_spec_enum(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, enum_type: GType, default_value: gint, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_libgtk3361_g_param_spec_flags")
external fun g_param_spec_flags(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, flags_type: GType, default_value: guint, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_libgtk3362_g_param_spec_float")
external fun g_param_spec_float(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, minimum: gfloat, maximum: gfloat, default_value: gfloat, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_libgtk3363_g_param_spec_double")
external fun g_param_spec_double(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, minimum: gdouble, maximum: gdouble, default_value: gdouble, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_libgtk3364_g_param_spec_string")
external fun g_param_spec_string(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, @CCall.CString default_value: String?, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_libgtk3365_g_param_spec_param")
external fun g_param_spec_param(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, param_type: GType, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_libgtk3366_g_param_spec_boxed")
external fun g_param_spec_boxed(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, boxed_type: GType, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_libgtk3367_g_param_spec_pointer")
external fun g_param_spec_pointer(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_libgtk3368_g_param_spec_value_array")
external fun g_param_spec_value_array(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, element_spec: CValuesRef<GParamSpec>?, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_libgtk3369_g_param_spec_object")
external fun g_param_spec_object(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, object_type: GType, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_libgtk3370_g_param_spec_override")
external fun g_param_spec_override(@CCall.CString name: String?, overridden: CValuesRef<GParamSpec>?): CPointer<GParamSpec>?

@CCall("knifunptr_libgtk3371_g_param_spec_gtype")
external fun g_param_spec_gtype(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, is_a_type: GType, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_libgtk3372_g_param_spec_variant")
external fun g_param_spec_variant(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, type: CValuesRef<GVariantType>?, default_value: CValuesRef<GVariant>?, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_libgtk3373_g_source_set_closure")
external fun g_source_set_closure(source: CValuesRef<GSource>?, closure: CValuesRef<GClosure>?): Unit

@CCall("knifunptr_libgtk3374_g_source_set_dummy_callback")
external fun g_source_set_dummy_callback(source: CValuesRef<GSource>?): Unit

@CCall("knifunptr_libgtk3375_glib_autoptr_cleanup_GTypeModule")
external fun glib_autoptr_cleanup_GTypeModule(_ptr: CValuesRef<CPointerVar<GTypeModule>>?): Unit

@CCall("knifunptr_libgtk3376_glib_listautoptr_cleanup_GTypeModule")
external fun glib_listautoptr_cleanup_GTypeModule(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk3377_glib_slistautoptr_cleanup_GTypeModule")
external fun glib_slistautoptr_cleanup_GTypeModule(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk3378_g_type_module_get_type")
external fun g_type_module_get_type(): GType

@CCall("knifunptr_libgtk3379_g_type_module_use")
external fun g_type_module_use(module: CValuesRef<GTypeModule>?): gboolean

@CCall("knifunptr_libgtk3380_g_type_module_unuse")
external fun g_type_module_unuse(module: CValuesRef<GTypeModule>?): Unit

@CCall("knifunptr_libgtk3381_g_type_module_set_name")
external fun g_type_module_set_name(module: CValuesRef<GTypeModule>?, @CCall.CString name: String?): Unit

@CCall("knifunptr_libgtk3382_g_type_module_register_type")
external fun g_type_module_register_type(module: CValuesRef<GTypeModule>?, parent_type: GType, @CCall.CString type_name: String?, type_info: CValuesRef<GTypeInfo>?, flags: GTypeFlags): GType

@CCall("knifunptr_libgtk3383_g_type_module_add_interface")
external fun g_type_module_add_interface(module: CValuesRef<GTypeModule>?, instance_type: GType, interface_type: GType, interface_info: CValuesRef<GInterfaceInfo>?): Unit

@CCall("knifunptr_libgtk3384_g_type_module_register_enum")
external fun g_type_module_register_enum(module: CValuesRef<GTypeModule>?, @CCall.CString name: String?, const_static_values: CValuesRef<GEnumValue>?): GType

@CCall("knifunptr_libgtk3385_g_type_module_register_flags")
external fun g_type_module_register_flags(module: CValuesRef<GTypeModule>?, @CCall.CString name: String?, const_static_values: CValuesRef<GFlagsValue>?): GType

@CCall("knifunptr_libgtk3386_g_type_plugin_get_type")
external fun g_type_plugin_get_type(): GType

@CCall("knifunptr_libgtk3387_g_type_plugin_use")
external fun g_type_plugin_use(plugin: CValuesRef<GTypePlugin>?): Unit

@CCall("knifunptr_libgtk3388_g_type_plugin_unuse")
external fun g_type_plugin_unuse(plugin: CValuesRef<GTypePlugin>?): Unit

@CCall("knifunptr_libgtk3389_g_type_plugin_complete_type_info")
external fun g_type_plugin_complete_type_info(plugin: CValuesRef<GTypePlugin>?, g_type: GType, info: CValuesRef<GTypeInfo>?, value_table: CValuesRef<GTypeValueTable>?): Unit

@CCall("knifunptr_libgtk3390_g_type_plugin_complete_interface_info")
external fun g_type_plugin_complete_interface_info(plugin: CValuesRef<GTypePlugin>?, instance_type: GType, interface_type: GType, info: CValuesRef<GInterfaceInfo>?): Unit

@CCall("knifunptr_libgtk3391_g_value_array_get_type")
external fun g_value_array_get_type(): GType

@CCall("knifunptr_libgtk3392_g_value_array_get_nth")
external fun g_value_array_get_nth(value_array: CValuesRef<GValueArray>?, index_: guint): CPointer<GValue>?

@CCall("knifunptr_libgtk3393_g_value_array_new")
external fun g_value_array_new(n_prealloced: guint): CPointer<GValueArray>?

@CCall("knifunptr_libgtk3394_g_value_array_free")
external fun g_value_array_free(value_array: CValuesRef<GValueArray>?): Unit

@CCall("knifunptr_libgtk3395_g_value_array_copy")
external fun g_value_array_copy(value_array: CValuesRef<GValueArray>?): CPointer<GValueArray>?

@CCall("knifunptr_libgtk3396_g_value_array_prepend")
external fun g_value_array_prepend(value_array: CValuesRef<GValueArray>?, value: CValuesRef<GValue>?): CPointer<GValueArray>?

@CCall("knifunptr_libgtk3397_g_value_array_append")
external fun g_value_array_append(value_array: CValuesRef<GValueArray>?, value: CValuesRef<GValue>?): CPointer<GValueArray>?

@CCall("knifunptr_libgtk3398_g_value_array_insert")
external fun g_value_array_insert(value_array: CValuesRef<GValueArray>?, index_: guint, value: CValuesRef<GValue>?): CPointer<GValueArray>?

@CCall("knifunptr_libgtk3399_g_value_array_remove")
external fun g_value_array_remove(value_array: CValuesRef<GValueArray>?, index_: guint): CPointer<GValueArray>?

@CCall("knifunptr_libgtk3400_g_value_array_sort")
external fun g_value_array_sort(value_array: CValuesRef<GValueArray>?, compare_func: GCompareFunc?): CPointer<GValueArray>?

@CCall("knifunptr_libgtk3401_g_value_array_sort_with_data")
external fun g_value_array_sort_with_data(value_array: CValuesRef<GValueArray>?, compare_func: GCompareDataFunc?, user_data: gpointer?): CPointer<GValueArray>?

@CCall("knifunptr_libgtk3402_g_value_set_char")
external fun g_value_set_char(value: CValuesRef<GValue>?, v_char: gchar): Unit

@CCall("knifunptr_libgtk3403_g_value_get_char")
external fun g_value_get_char(value: CValuesRef<GValue>?): gchar

@CCall("knifunptr_libgtk3404_g_value_set_schar")
external fun g_value_set_schar(value: CValuesRef<GValue>?, v_char: gint8): Unit

@CCall("knifunptr_libgtk3405_g_value_get_schar")
external fun g_value_get_schar(value: CValuesRef<GValue>?): gint8

@CCall("knifunptr_libgtk3406_g_value_set_uchar")
external fun g_value_set_uchar(value: CValuesRef<GValue>?, v_uchar: guchar): Unit

@CCall("knifunptr_libgtk3407_g_value_get_uchar")
external fun g_value_get_uchar(value: CValuesRef<GValue>?): guchar

@CCall("knifunptr_libgtk3408_g_value_set_boolean")
external fun g_value_set_boolean(value: CValuesRef<GValue>?, v_boolean: gboolean): Unit

@CCall("knifunptr_libgtk3409_g_value_get_boolean")
external fun g_value_get_boolean(value: CValuesRef<GValue>?): gboolean

@CCall("knifunptr_libgtk3410_g_value_set_int")
external fun g_value_set_int(value: CValuesRef<GValue>?, v_int: gint): Unit

@CCall("knifunptr_libgtk3411_g_value_get_int")
external fun g_value_get_int(value: CValuesRef<GValue>?): gint

@CCall("knifunptr_libgtk3412_g_value_set_uint")
external fun g_value_set_uint(value: CValuesRef<GValue>?, v_uint: guint): Unit

@CCall("knifunptr_libgtk3413_g_value_get_uint")
external fun g_value_get_uint(value: CValuesRef<GValue>?): guint

@CCall("knifunptr_libgtk3414_g_value_set_long")
external fun g_value_set_long(value: CValuesRef<GValue>?, v_long: glong): Unit

@CCall("knifunptr_libgtk3415_g_value_get_long")
external fun g_value_get_long(value: CValuesRef<GValue>?): glong

@CCall("knifunptr_libgtk3416_g_value_set_ulong")
external fun g_value_set_ulong(value: CValuesRef<GValue>?, v_ulong: gulong): Unit

@CCall("knifunptr_libgtk3417_g_value_get_ulong")
external fun g_value_get_ulong(value: CValuesRef<GValue>?): gulong

@CCall("knifunptr_libgtk3418_g_value_set_int64")
external fun g_value_set_int64(value: CValuesRef<GValue>?, v_int64: gint64): Unit

@CCall("knifunptr_libgtk3419_g_value_get_int64")
external fun g_value_get_int64(value: CValuesRef<GValue>?): gint64

@CCall("knifunptr_libgtk3420_g_value_set_uint64")
external fun g_value_set_uint64(value: CValuesRef<GValue>?, v_uint64: guint64): Unit

@CCall("knifunptr_libgtk3421_g_value_get_uint64")
external fun g_value_get_uint64(value: CValuesRef<GValue>?): guint64

@CCall("knifunptr_libgtk3422_g_value_set_float")
external fun g_value_set_float(value: CValuesRef<GValue>?, v_float: gfloat): Unit

@CCall("knifunptr_libgtk3423_g_value_get_float")
external fun g_value_get_float(value: CValuesRef<GValue>?): gfloat

@CCall("knifunptr_libgtk3424_g_value_set_double")
external fun g_value_set_double(value: CValuesRef<GValue>?, v_double: gdouble): Unit

@CCall("knifunptr_libgtk3425_g_value_get_double")
external fun g_value_get_double(value: CValuesRef<GValue>?): gdouble

@CCall("knifunptr_libgtk3426_g_value_set_string")
external fun g_value_set_string(value: CValuesRef<GValue>?, @CCall.CString v_string: String?): Unit

@CCall("knifunptr_libgtk3427_g_value_set_static_string")
external fun g_value_set_static_string(value: CValuesRef<GValue>?, @CCall.CString v_string: String?): Unit

@CCall("knifunptr_libgtk3428_g_value_get_string")
external fun g_value_get_string(value: CValuesRef<GValue>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3429_g_value_dup_string")
external fun g_value_dup_string(value: CValuesRef<GValue>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3430_g_value_set_pointer")
external fun g_value_set_pointer(value: CValuesRef<GValue>?, v_pointer: gpointer?): Unit

@CCall("knifunptr_libgtk3431_g_value_get_pointer")
external fun g_value_get_pointer(value: CValuesRef<GValue>?): gpointer?

@CCall("knifunptr_libgtk3432_g_gtype_get_type")
external fun g_gtype_get_type(): GType

@CCall("knifunptr_libgtk3433_g_value_set_gtype")
external fun g_value_set_gtype(value: CValuesRef<GValue>?, v_gtype: GType): Unit

@CCall("knifunptr_libgtk3434_g_value_get_gtype")
external fun g_value_get_gtype(value: CValuesRef<GValue>?): GType

@CCall("knifunptr_libgtk3435_g_value_set_variant")
external fun g_value_set_variant(value: CValuesRef<GValue>?, variant: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_libgtk3436_g_value_take_variant")
external fun g_value_take_variant(value: CValuesRef<GValue>?, variant: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_libgtk3437_g_value_get_variant")
external fun g_value_get_variant(value: CValuesRef<GValue>?): CPointer<GVariant>?

@CCall("knifunptr_libgtk3438_g_value_dup_variant")
external fun g_value_dup_variant(value: CValuesRef<GValue>?): CPointer<GVariant>?

@CCall("knifunptr_libgtk3439_g_pointer_type_register_static")
external fun g_pointer_type_register_static(@CCall.CString name: String?): GType

@CCall("knifunptr_libgtk3440_g_strdup_value_contents")
external fun g_strdup_value_contents(value: CValuesRef<GValue>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3441_g_value_take_string")
external fun g_value_take_string(value: CValuesRef<GValue>?, v_string: CValuesRef<gcharVar>?): Unit

@CCall("knifunptr_libgtk3442_g_value_set_string_take_ownership")
external fun g_value_set_string_take_ownership(value: CValuesRef<GValue>?, v_string: CValuesRef<gcharVar>?): Unit

@CCall("knifunptr_libgtk3443_glib_autoptr_cleanup_GClosure")
external fun glib_autoptr_cleanup_GClosure(_ptr: CValuesRef<CPointerVar<GClosure>>?): Unit

@CCall("knifunptr_libgtk3444_glib_listautoptr_cleanup_GClosure")
external fun glib_listautoptr_cleanup_GClosure(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk3445_glib_slistautoptr_cleanup_GClosure")
external fun glib_slistautoptr_cleanup_GClosure(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk3446_glib_autoptr_cleanup_GObject")
external fun glib_autoptr_cleanup_GObject(_ptr: CValuesRef<CPointerVar<GObject>>?): Unit

@CCall("knifunptr_libgtk3447_glib_listautoptr_cleanup_GObject")
external fun glib_listautoptr_cleanup_GObject(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk3448_glib_slistautoptr_cleanup_GObject")
external fun glib_slistautoptr_cleanup_GObject(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk3449_glib_autoptr_cleanup_GInitiallyUnowned")
external fun glib_autoptr_cleanup_GInitiallyUnowned(_ptr: CValuesRef<CPointerVar<GInitiallyUnowned>>?): Unit

@CCall("knifunptr_libgtk3450_glib_listautoptr_cleanup_GInitiallyUnowned")
external fun glib_listautoptr_cleanup_GInitiallyUnowned(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk3451_glib_slistautoptr_cleanup_GInitiallyUnowned")
external fun glib_slistautoptr_cleanup_GInitiallyUnowned(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk3452_glib_auto_cleanup_GValue")
external fun glib_auto_cleanup_GValue(_ptr: CValuesRef<GValue>?): Unit

@CCall("knifunptr_libgtk3453_g_action_get_type")
external fun g_action_get_type(): GType

@CCall("knifunptr_libgtk3454_g_action_get_name")
external fun g_action_get_name(action: CValuesRef<GAction>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3455_g_action_get_parameter_type")
external fun g_action_get_parameter_type(action: CValuesRef<GAction>?): CPointer<GVariantType>?

@CCall("knifunptr_libgtk3456_g_action_get_state_type")
external fun g_action_get_state_type(action: CValuesRef<GAction>?): CPointer<GVariantType>?

@CCall("knifunptr_libgtk3457_g_action_get_state_hint")
external fun g_action_get_state_hint(action: CValuesRef<GAction>?): CPointer<GVariant>?

@CCall("knifunptr_libgtk3458_g_action_get_enabled")
external fun g_action_get_enabled(action: CValuesRef<GAction>?): gboolean

@CCall("knifunptr_libgtk3459_g_action_get_state")
external fun g_action_get_state(action: CValuesRef<GAction>?): CPointer<GVariant>?

@CCall("knifunptr_libgtk3460_g_action_change_state")
external fun g_action_change_state(action: CValuesRef<GAction>?, value: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_libgtk3461_g_action_activate")
external fun g_action_activate(action: CValuesRef<GAction>?, parameter: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_libgtk3462_g_action_name_is_valid")
external fun g_action_name_is_valid(@CCall.CString action_name: String?): gboolean

@CCall("knifunptr_libgtk3463_g_action_parse_detailed_name")
external fun g_action_parse_detailed_name(@CCall.CString detailed_name: String?, action_name: CValuesRef<CPointerVar<gcharVar>>?, target_value: CValuesRef<CPointerVar<GVariant>>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3464_g_action_print_detailed_name")
external fun g_action_print_detailed_name(@CCall.CString action_name: String?, target_value: CValuesRef<GVariant>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3465_g_action_group_get_type")
external fun g_action_group_get_type(): GType

@CCall("knifunptr_libgtk3466_g_action_group_has_action")
external fun g_action_group_has_action(action_group: CValuesRef<GActionGroup>?, @CCall.CString action_name: String?): gboolean

@CCall("knifunptr_libgtk3467_g_action_group_list_actions")
external fun g_action_group_list_actions(action_group: CValuesRef<GActionGroup>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_libgtk3468_g_action_group_get_action_parameter_type")
external fun g_action_group_get_action_parameter_type(action_group: CValuesRef<GActionGroup>?, @CCall.CString action_name: String?): CPointer<GVariantType>?

@CCall("knifunptr_libgtk3469_g_action_group_get_action_state_type")
external fun g_action_group_get_action_state_type(action_group: CValuesRef<GActionGroup>?, @CCall.CString action_name: String?): CPointer<GVariantType>?

@CCall("knifunptr_libgtk3470_g_action_group_get_action_state_hint")
external fun g_action_group_get_action_state_hint(action_group: CValuesRef<GActionGroup>?, @CCall.CString action_name: String?): CPointer<GVariant>?

@CCall("knifunptr_libgtk3471_g_action_group_get_action_enabled")
external fun g_action_group_get_action_enabled(action_group: CValuesRef<GActionGroup>?, @CCall.CString action_name: String?): gboolean

@CCall("knifunptr_libgtk3472_g_action_group_get_action_state")
external fun g_action_group_get_action_state(action_group: CValuesRef<GActionGroup>?, @CCall.CString action_name: String?): CPointer<GVariant>?

@CCall("knifunptr_libgtk3473_g_action_group_change_action_state")
external fun g_action_group_change_action_state(action_group: CValuesRef<GActionGroup>?, @CCall.CString action_name: String?, value: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_libgtk3474_g_action_group_activate_action")
external fun g_action_group_activate_action(action_group: CValuesRef<GActionGroup>?, @CCall.CString action_name: String?, parameter: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_libgtk3475_g_action_group_action_added")
external fun g_action_group_action_added(action_group: CValuesRef<GActionGroup>?, @CCall.CString action_name: String?): Unit

@CCall("knifunptr_libgtk3476_g_action_group_action_removed")
external fun g_action_group_action_removed(action_group: CValuesRef<GActionGroup>?, @CCall.CString action_name: String?): Unit

@CCall("knifunptr_libgtk3477_g_action_group_action_enabled_changed")
external fun g_action_group_action_enabled_changed(action_group: CValuesRef<GActionGroup>?, @CCall.CString action_name: String?, enabled: gboolean): Unit

@CCall("knifunptr_libgtk3478_g_action_group_action_state_changed")
external fun g_action_group_action_state_changed(action_group: CValuesRef<GActionGroup>?, @CCall.CString action_name: String?, state: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_libgtk3479_g_action_group_query_action")
external fun g_action_group_query_action(action_group: CValuesRef<GActionGroup>?, @CCall.CString action_name: String?, enabled: CValuesRef<gbooleanVar>?, parameter_type: CValuesRef<CPointerVar<GVariantType>>?, state_type: CValuesRef<CPointerVar<GVariantType>>?, state_hint: CValuesRef<CPointerVar<GVariant>>?, state: CValuesRef<CPointerVar<GVariant>>?): gboolean

@CCall("knifunptr_libgtk3480_g_dbus_connection_export_action_group")
external fun g_dbus_connection_export_action_group(connection: CValuesRef<GDBusConnection>?, @CCall.CString object_path: String?, action_group: CValuesRef<GActionGroup>?, error: CValuesRef<CPointerVar<GError>>?): guint

@CCall("knifunptr_libgtk3481_g_dbus_connection_unexport_action_group")
external fun g_dbus_connection_unexport_action_group(connection: CValuesRef<GDBusConnection>?, export_id: guint): Unit

@CCall("knifunptr_libgtk3482_g_action_map_get_type")
external fun g_action_map_get_type(): GType

@CCall("knifunptr_libgtk3483_g_action_map_lookup_action")
external fun g_action_map_lookup_action(action_map: CValuesRef<GActionMap>?, @CCall.CString action_name: String?): CPointer<GAction>?

@CCall("knifunptr_libgtk3484_g_action_map_add_action")
external fun g_action_map_add_action(action_map: CValuesRef<GActionMap>?, action: CValuesRef<GAction>?): Unit

@CCall("knifunptr_libgtk3485_g_action_map_remove_action")
external fun g_action_map_remove_action(action_map: CValuesRef<GActionMap>?, @CCall.CString action_name: String?): Unit

@CCall("knifunptr_libgtk3486_g_action_map_add_action_entries")
external fun g_action_map_add_action_entries(action_map: CValuesRef<GActionMap>?, entries: CValuesRef<GActionEntry>?, n_entries: gint, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk3487_g_app_info_get_type")
external fun g_app_info_get_type(): GType

@CCall("knifunptr_libgtk3488_g_app_info_create_from_commandline")
external fun g_app_info_create_from_commandline(@CCall.CString commandline: String?, @CCall.CString application_name: String?, flags: GAppInfoCreateFlags, error: CValuesRef<CPointerVar<GError>>?): CPointer<GAppInfo>?

@CCall("knifunptr_libgtk3489_g_app_info_dup")
external fun g_app_info_dup(appinfo: CValuesRef<GAppInfo>?): CPointer<GAppInfo>?

@CCall("knifunptr_libgtk3490_g_app_info_equal")
external fun g_app_info_equal(appinfo1: CValuesRef<GAppInfo>?, appinfo2: CValuesRef<GAppInfo>?): gboolean

@CCall("knifunptr_libgtk3491_g_app_info_get_id")
external fun g_app_info_get_id(appinfo: CValuesRef<GAppInfo>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk3492_g_app_info_get_name")
external fun g_app_info_get_name(appinfo: CValuesRef<GAppInfo>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk3493_g_app_info_get_display_name")
external fun g_app_info_get_display_name(appinfo: CValuesRef<GAppInfo>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk3494_g_app_info_get_description")
external fun g_app_info_get_description(appinfo: CValuesRef<GAppInfo>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk3495_g_app_info_get_executable")
external fun g_app_info_get_executable(appinfo: CValuesRef<GAppInfo>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk3496_g_app_info_get_commandline")
external fun g_app_info_get_commandline(appinfo: CValuesRef<GAppInfo>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk3497_g_app_info_get_icon")
external fun g_app_info_get_icon(appinfo: CValuesRef<GAppInfo>?): CPointer<GIcon>?

@CCall("knifunptr_libgtk3498_g_app_info_launch")
external fun g_app_info_launch(appinfo: CValuesRef<GAppInfo>?, files: CValuesRef<GList>?, context: CValuesRef<GAppLaunchContext>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3499_g_app_info_supports_uris")
external fun g_app_info_supports_uris(appinfo: CValuesRef<GAppInfo>?): gboolean

@CCall("knifunptr_libgtk3500_g_app_info_supports_files")
external fun g_app_info_supports_files(appinfo: CValuesRef<GAppInfo>?): gboolean

@CCall("knifunptr_libgtk3501_g_app_info_launch_uris")
external fun g_app_info_launch_uris(appinfo: CValuesRef<GAppInfo>?, uris: CValuesRef<GList>?, context: CValuesRef<GAppLaunchContext>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3502_g_app_info_should_show")
external fun g_app_info_should_show(appinfo: CValuesRef<GAppInfo>?): gboolean

@CCall("knifunptr_libgtk3503_g_app_info_set_as_default_for_type")
external fun g_app_info_set_as_default_for_type(appinfo: CValuesRef<GAppInfo>?, @CCall.CString content_type: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3504_g_app_info_set_as_default_for_extension")
external fun g_app_info_set_as_default_for_extension(appinfo: CValuesRef<GAppInfo>?, @CCall.CString extension: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3505_g_app_info_add_supports_type")
external fun g_app_info_add_supports_type(appinfo: CValuesRef<GAppInfo>?, @CCall.CString content_type: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3506_g_app_info_can_remove_supports_type")
external fun g_app_info_can_remove_supports_type(appinfo: CValuesRef<GAppInfo>?): gboolean

@CCall("knifunptr_libgtk3507_g_app_info_remove_supports_type")
external fun g_app_info_remove_supports_type(appinfo: CValuesRef<GAppInfo>?, @CCall.CString content_type: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3508_g_app_info_get_supported_types")
external fun g_app_info_get_supported_types(appinfo: CValuesRef<GAppInfo>?): CPointer<CPointerVar<ByteVar>>?

@CCall("knifunptr_libgtk3509_g_app_info_can_delete")
external fun g_app_info_can_delete(appinfo: CValuesRef<GAppInfo>?): gboolean

@CCall("knifunptr_libgtk3510_g_app_info_delete")
external fun g_app_info_delete(appinfo: CValuesRef<GAppInfo>?): gboolean

@CCall("knifunptr_libgtk3511_g_app_info_set_as_last_used_for_type")
external fun g_app_info_set_as_last_used_for_type(appinfo: CValuesRef<GAppInfo>?, @CCall.CString content_type: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3512_g_app_info_get_all")
external fun g_app_info_get_all(): CPointer<GList>?

@CCall("knifunptr_libgtk3513_g_app_info_get_all_for_type")
external fun g_app_info_get_all_for_type(@CCall.CString content_type: String?): CPointer<GList>?

@CCall("knifunptr_libgtk3514_g_app_info_get_recommended_for_type")
external fun g_app_info_get_recommended_for_type(@CCall.CString content_type: String?): CPointer<GList>?

@CCall("knifunptr_libgtk3515_g_app_info_get_fallback_for_type")
external fun g_app_info_get_fallback_for_type(@CCall.CString content_type: String?): CPointer<GList>?

@CCall("knifunptr_libgtk3516_g_app_info_reset_type_associations")
external fun g_app_info_reset_type_associations(@CCall.CString content_type: String?): Unit

@CCall("knifunptr_libgtk3517_g_app_info_get_default_for_type")
external fun g_app_info_get_default_for_type(@CCall.CString content_type: String?, must_support_uris: gboolean): CPointer<GAppInfo>?

@CCall("knifunptr_libgtk3518_g_app_info_get_default_for_uri_scheme")
external fun g_app_info_get_default_for_uri_scheme(@CCall.CString uri_scheme: String?): CPointer<GAppInfo>?

@CCall("knifunptr_libgtk3519_g_app_info_launch_default_for_uri")
external fun g_app_info_launch_default_for_uri(@CCall.CString uri: String?, context: CValuesRef<GAppLaunchContext>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3520_g_app_info_launch_default_for_uri_async")
external fun g_app_info_launch_default_for_uri_async(@CCall.CString uri: String?, context: CValuesRef<GAppLaunchContext>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk3521_g_app_info_launch_default_for_uri_finish")
external fun g_app_info_launch_default_for_uri_finish(result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3522_g_app_launch_context_get_type")
external fun g_app_launch_context_get_type(): GType

@CCall("knifunptr_libgtk3523_g_app_launch_context_new")
external fun g_app_launch_context_new(): CPointer<GAppLaunchContext>?

@CCall("knifunptr_libgtk3524_g_app_launch_context_setenv")
external fun g_app_launch_context_setenv(context: CValuesRef<GAppLaunchContext>?, @CCall.CString variable: String?, @CCall.CString value: String?): Unit

@CCall("knifunptr_libgtk3525_g_app_launch_context_unsetenv")
external fun g_app_launch_context_unsetenv(context: CValuesRef<GAppLaunchContext>?, @CCall.CString variable: String?): Unit

@CCall("knifunptr_libgtk3526_g_app_launch_context_get_environment")
external fun g_app_launch_context_get_environment(context: CValuesRef<GAppLaunchContext>?): CPointer<CPointerVar<ByteVar>>?

@CCall("knifunptr_libgtk3527_g_app_launch_context_get_display")
external fun g_app_launch_context_get_display(context: CValuesRef<GAppLaunchContext>?, info: CValuesRef<GAppInfo>?, files: CValuesRef<GList>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk3528_g_app_launch_context_get_startup_notify_id")
external fun g_app_launch_context_get_startup_notify_id(context: CValuesRef<GAppLaunchContext>?, info: CValuesRef<GAppInfo>?, files: CValuesRef<GList>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk3529_g_app_launch_context_launch_failed")
external fun g_app_launch_context_launch_failed(context: CValuesRef<GAppLaunchContext>?, @CCall.CString startup_notify_id: String?): Unit

@CCall("knifunptr_libgtk3530_g_app_info_monitor_get_type")
external fun g_app_info_monitor_get_type(): GType

@CCall("knifunptr_libgtk3531_g_app_info_monitor_get")
external fun g_app_info_monitor_get(): CPointer<GAppInfoMonitor>?

@CCall("knifunptr_libgtk3532_g_application_get_type")
external fun g_application_get_type(): GType

@CCall("knifunptr_libgtk3533_g_application_id_is_valid")
external fun g_application_id_is_valid(@CCall.CString application_id: String?): gboolean

@CCall("knifunptr_libgtk3534_g_application_new")
external fun g_application_new(@CCall.CString application_id: String?, flags: GApplicationFlags): CPointer<GApplication>?

@CCall("knifunptr_libgtk3535_g_application_get_application_id")
external fun g_application_get_application_id(application: CValuesRef<GApplication>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3536_g_application_set_application_id")
external fun g_application_set_application_id(application: CValuesRef<GApplication>?, @CCall.CString application_id: String?): Unit

@CCall("knifunptr_libgtk3537_g_application_get_dbus_connection")
external fun g_application_get_dbus_connection(application: CValuesRef<GApplication>?): CPointer<GDBusConnection>?

@CCall("knifunptr_libgtk3538_g_application_get_dbus_object_path")
external fun g_application_get_dbus_object_path(application: CValuesRef<GApplication>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3539_g_application_get_inactivity_timeout")
external fun g_application_get_inactivity_timeout(application: CValuesRef<GApplication>?): guint

@CCall("knifunptr_libgtk3540_g_application_set_inactivity_timeout")
external fun g_application_set_inactivity_timeout(application: CValuesRef<GApplication>?, inactivity_timeout: guint): Unit

@CCall("knifunptr_libgtk3541_g_application_get_flags")
external fun g_application_get_flags(application: CValuesRef<GApplication>?): GApplicationFlags

@CCall("knifunptr_libgtk3542_g_application_set_flags")
external fun g_application_set_flags(application: CValuesRef<GApplication>?, flags: GApplicationFlags): Unit

@CCall("knifunptr_libgtk3543_g_application_get_resource_base_path")
external fun g_application_get_resource_base_path(application: CValuesRef<GApplication>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3544_g_application_set_resource_base_path")
external fun g_application_set_resource_base_path(application: CValuesRef<GApplication>?, @CCall.CString resource_path: String?): Unit

@CCall("knifunptr_libgtk3545_g_application_set_action_group")
external fun g_application_set_action_group(application: CValuesRef<GApplication>?, action_group: CValuesRef<GActionGroup>?): Unit

@CCall("knifunptr_libgtk3546_g_application_add_main_option_entries")
external fun g_application_add_main_option_entries(application: CValuesRef<GApplication>?, entries: CValuesRef<GOptionEntry>?): Unit

@CCall("knifunptr_libgtk3547_g_application_add_main_option")
external fun g_application_add_main_option(application: CValuesRef<GApplication>?, @CCall.CString long_name: String?, short_name: Byte, flags: GOptionFlags, arg: GOptionArg, @CCall.CString description: String?, @CCall.CString arg_description: String?): Unit

@CCall("knifunptr_libgtk3548_g_application_add_option_group")
external fun g_application_add_option_group(application: CValuesRef<GApplication>?, group: CValuesRef<GOptionGroup>?): Unit

@CCall("knifunptr_libgtk3549_g_application_set_option_context_parameter_string")
external fun g_application_set_option_context_parameter_string(application: CValuesRef<GApplication>?, @CCall.CString parameter_string: String?): Unit

@CCall("knifunptr_libgtk3550_g_application_set_option_context_summary")
external fun g_application_set_option_context_summary(application: CValuesRef<GApplication>?, @CCall.CString summary: String?): Unit

@CCall("knifunptr_libgtk3551_g_application_set_option_context_description")
external fun g_application_set_option_context_description(application: CValuesRef<GApplication>?, @CCall.CString description: String?): Unit

@CCall("knifunptr_libgtk3552_g_application_get_is_registered")
external fun g_application_get_is_registered(application: CValuesRef<GApplication>?): gboolean

@CCall("knifunptr_libgtk3553_g_application_get_is_remote")
external fun g_application_get_is_remote(application: CValuesRef<GApplication>?): gboolean

@CCall("knifunptr_libgtk3554_g_application_register")
external fun g_application_register(application: CValuesRef<GApplication>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3555_g_application_hold")
external fun g_application_hold(application: CValuesRef<GApplication>?): Unit

@CCall("knifunptr_libgtk3556_g_application_release")
external fun g_application_release(application: CValuesRef<GApplication>?): Unit

@CCall("knifunptr_libgtk3557_g_application_activate")
external fun g_application_activate(application: CValuesRef<GApplication>?): Unit

@CCall("knifunptr_libgtk3558_g_application_open")
external fun g_application_open(application: CValuesRef<GApplication>?, files: CValuesRef<CPointerVar<GFile>>?, n_files: gint, @CCall.CString hint: String?): Unit

@CCall("knifunptr_libgtk3559_g_application_run")
external fun g_application_run(application: CValuesRef<GApplication>?, argc: Int, argv: CValuesRef<CPointerVar<ByteVar>>?): Int

@CCall("knifunptr_libgtk3560_g_application_quit")
external fun g_application_quit(application: CValuesRef<GApplication>?): Unit

@CCall("knifunptr_libgtk3561_g_application_get_default")
external fun g_application_get_default(): CPointer<GApplication>?

@CCall("knifunptr_libgtk3562_g_application_set_default")
external fun g_application_set_default(application: CValuesRef<GApplication>?): Unit

@CCall("knifunptr_libgtk3563_g_application_mark_busy")
external fun g_application_mark_busy(application: CValuesRef<GApplication>?): Unit

@CCall("knifunptr_libgtk3564_g_application_unmark_busy")
external fun g_application_unmark_busy(application: CValuesRef<GApplication>?): Unit

@CCall("knifunptr_libgtk3565_g_application_get_is_busy")
external fun g_application_get_is_busy(application: CValuesRef<GApplication>?): gboolean

@CCall("knifunptr_libgtk3566_g_application_send_notification")
external fun g_application_send_notification(application: CValuesRef<GApplication>?, @CCall.CString id: String?, notification: CValuesRef<GNotification>?): Unit

@CCall("knifunptr_libgtk3567_g_application_withdraw_notification")
external fun g_application_withdraw_notification(application: CValuesRef<GApplication>?, @CCall.CString id: String?): Unit

@CCall("knifunptr_libgtk3568_g_application_bind_busy_property")
external fun g_application_bind_busy_property(application: CValuesRef<GApplication>?, `object`: gpointer?, @CCall.CString property: String?): Unit

@CCall("knifunptr_libgtk3569_g_application_unbind_busy_property")
external fun g_application_unbind_busy_property(application: CValuesRef<GApplication>?, `object`: gpointer?, @CCall.CString property: String?): Unit

@CCall("knifunptr_libgtk3570_g_application_command_line_get_type")
external fun g_application_command_line_get_type(): GType

@CCall("knifunptr_libgtk3571_g_application_command_line_get_arguments")
external fun g_application_command_line_get_arguments(cmdline: CValuesRef<GApplicationCommandLine>?, argc: CValuesRef<IntVar>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_libgtk3572_g_application_command_line_get_options_dict")
external fun g_application_command_line_get_options_dict(cmdline: CValuesRef<GApplicationCommandLine>?): CPointer<GVariantDict>?

@CCall("knifunptr_libgtk3573_g_application_command_line_get_stdin")
external fun g_application_command_line_get_stdin(cmdline: CValuesRef<GApplicationCommandLine>?): CPointer<GInputStream>?

@CCall("knifunptr_libgtk3574_g_application_command_line_get_environ")
external fun g_application_command_line_get_environ(cmdline: CValuesRef<GApplicationCommandLine>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_libgtk3575_g_application_command_line_getenv")
external fun g_application_command_line_getenv(cmdline: CValuesRef<GApplicationCommandLine>?, @CCall.CString name: String?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3576_g_application_command_line_get_cwd")
external fun g_application_command_line_get_cwd(cmdline: CValuesRef<GApplicationCommandLine>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3577_g_application_command_line_get_is_remote")
external fun g_application_command_line_get_is_remote(cmdline: CValuesRef<GApplicationCommandLine>?): gboolean

@CCall("knifunptr_libgtk3578_g_application_command_line_print")
external fun g_application_command_line_print(cmdline: CValuesRef<GApplicationCommandLine>?, @CCall.CString format: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk3579_g_application_command_line_printerr")
external fun g_application_command_line_printerr(cmdline: CValuesRef<GApplicationCommandLine>?, @CCall.CString format: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk3580_g_application_command_line_get_exit_status")
external fun g_application_command_line_get_exit_status(cmdline: CValuesRef<GApplicationCommandLine>?): Int

@CCall("knifunptr_libgtk3581_g_application_command_line_set_exit_status")
external fun g_application_command_line_set_exit_status(cmdline: CValuesRef<GApplicationCommandLine>?, exit_status: Int): Unit

@CCall("knifunptr_libgtk3582_g_application_command_line_get_platform_data")
external fun g_application_command_line_get_platform_data(cmdline: CValuesRef<GApplicationCommandLine>?): CPointer<GVariant>?

@CCall("knifunptr_libgtk3583_g_application_command_line_create_file_for_arg")
external fun g_application_command_line_create_file_for_arg(cmdline: CValuesRef<GApplicationCommandLine>?, @CCall.CString arg: String?): CPointer<GFile>?

@CCall("knifunptr_libgtk3584_g_initable_get_type")
external fun g_initable_get_type(): GType

@CCall("knifunptr_libgtk3585_g_initable_init")
external fun g_initable_init(initable: CValuesRef<GInitable>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3586_g_initable_new")
external fun g_initable_new(object_type: GType, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?, @CCall.CString first_property_name: String?, vararg variadicArguments: Any?): gpointer?

@CCall("knifunptr_libgtk3587_g_initable_newv")
external fun g_initable_newv(object_type: GType, n_parameters: guint, parameters: CValuesRef<GParameter>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gpointer?

@CCall("knifunptr_libgtk3588_g_initable_new_valist")
external fun g_initable_new_valist(object_type: GType, @CCall.CString first_property_name: String?, var_args: platform.posix.va_list?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GObject>?

@CCall("knifunptr_libgtk3589_g_async_initable_get_type")
external fun g_async_initable_get_type(): GType

@CCall("knifunptr_libgtk3590_g_async_initable_init_async")
external fun g_async_initable_init_async(initable: CValuesRef<GAsyncInitable>?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk3591_g_async_initable_init_finish")
external fun g_async_initable_init_finish(initable: CValuesRef<GAsyncInitable>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3592_g_async_initable_new_async")
external fun g_async_initable_new_async(object_type: GType, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?, @CCall.CString first_property_name: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk3593_g_async_initable_newv_async")
external fun g_async_initable_newv_async(object_type: GType, n_parameters: guint, parameters: CValuesRef<GParameter>?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk3594_g_async_initable_new_valist_async")
external fun g_async_initable_new_valist_async(object_type: GType, @CCall.CString first_property_name: String?, var_args: platform.posix.va_list?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk3595_g_async_initable_new_finish")
external fun g_async_initable_new_finish(initable: CValuesRef<GAsyncInitable>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GObject>?

@CCall("knifunptr_libgtk3596_g_async_result_get_type")
external fun g_async_result_get_type(): GType

@CCall("knifunptr_libgtk3597_g_async_result_get_user_data")
external fun g_async_result_get_user_data(res: CValuesRef<GAsyncResult>?): gpointer?

@CCall("knifunptr_libgtk3598_g_async_result_get_source_object")
external fun g_async_result_get_source_object(res: CValuesRef<GAsyncResult>?): CPointer<GObject>?

@CCall("knifunptr_libgtk3599_g_async_result_legacy_propagate_error")
external fun g_async_result_legacy_propagate_error(res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3600_g_async_result_is_tagged")
external fun g_async_result_is_tagged(res: CValuesRef<GAsyncResult>?, source_tag: gpointer?): gboolean

@CCall("knifunptr_libgtk3601_g_input_stream_get_type")
external fun g_input_stream_get_type(): GType

@CCall("knifunptr_libgtk3602_g_input_stream_read")
external fun g_input_stream_read(stream: CValuesRef<GInputStream>?, buffer: CValuesRef<*>?, count: gsize, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_libgtk3603_g_input_stream_read_all")
external fun g_input_stream_read_all(stream: CValuesRef<GInputStream>?, buffer: CValuesRef<*>?, count: gsize, bytes_read: CValuesRef<gsizeVar>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3604_g_input_stream_read_bytes")
external fun g_input_stream_read_bytes(stream: CValuesRef<GInputStream>?, count: gsize, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GBytes>?

@CCall("knifunptr_libgtk3605_g_input_stream_skip")
external fun g_input_stream_skip(stream: CValuesRef<GInputStream>?, count: gsize, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_libgtk3606_g_input_stream_close")
external fun g_input_stream_close(stream: CValuesRef<GInputStream>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3607_g_input_stream_read_async")
external fun g_input_stream_read_async(stream: CValuesRef<GInputStream>?, buffer: CValuesRef<*>?, count: gsize, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk3608_g_input_stream_read_finish")
external fun g_input_stream_read_finish(stream: CValuesRef<GInputStream>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_libgtk3609_g_input_stream_read_all_async")
external fun g_input_stream_read_all_async(stream: CValuesRef<GInputStream>?, buffer: CValuesRef<*>?, count: gsize, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk3610_g_input_stream_read_all_finish")
external fun g_input_stream_read_all_finish(stream: CValuesRef<GInputStream>?, result: CValuesRef<GAsyncResult>?, bytes_read: CValuesRef<gsizeVar>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3611_g_input_stream_read_bytes_async")
external fun g_input_stream_read_bytes_async(stream: CValuesRef<GInputStream>?, count: gsize, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk3612_g_input_stream_read_bytes_finish")
external fun g_input_stream_read_bytes_finish(stream: CValuesRef<GInputStream>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GBytes>?

@CCall("knifunptr_libgtk3613_g_input_stream_skip_async")
external fun g_input_stream_skip_async(stream: CValuesRef<GInputStream>?, count: gsize, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk3614_g_input_stream_skip_finish")
external fun g_input_stream_skip_finish(stream: CValuesRef<GInputStream>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_libgtk3615_g_input_stream_close_async")
external fun g_input_stream_close_async(stream: CValuesRef<GInputStream>?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk3616_g_input_stream_close_finish")
external fun g_input_stream_close_finish(stream: CValuesRef<GInputStream>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3617_g_input_stream_is_closed")
external fun g_input_stream_is_closed(stream: CValuesRef<GInputStream>?): gboolean

@CCall("knifunptr_libgtk3618_g_input_stream_has_pending")
external fun g_input_stream_has_pending(stream: CValuesRef<GInputStream>?): gboolean

@CCall("knifunptr_libgtk3619_g_input_stream_set_pending")
external fun g_input_stream_set_pending(stream: CValuesRef<GInputStream>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3620_g_input_stream_clear_pending")
external fun g_input_stream_clear_pending(stream: CValuesRef<GInputStream>?): Unit

@CCall("knifunptr_libgtk3621_g_filter_input_stream_get_type")
external fun g_filter_input_stream_get_type(): GType

@CCall("knifunptr_libgtk3622_g_filter_input_stream_get_base_stream")
external fun g_filter_input_stream_get_base_stream(stream: CValuesRef<GFilterInputStream>?): CPointer<GInputStream>?

@CCall("knifunptr_libgtk3623_g_filter_input_stream_get_close_base_stream")
external fun g_filter_input_stream_get_close_base_stream(stream: CValuesRef<GFilterInputStream>?): gboolean

@CCall("knifunptr_libgtk3624_g_filter_input_stream_set_close_base_stream")
external fun g_filter_input_stream_set_close_base_stream(stream: CValuesRef<GFilterInputStream>?, close_base: gboolean): Unit

@CCall("knifunptr_libgtk3625_g_buffered_input_stream_get_type")
external fun g_buffered_input_stream_get_type(): GType

@CCall("knifunptr_libgtk3626_g_buffered_input_stream_new")
external fun g_buffered_input_stream_new(base_stream: CValuesRef<GInputStream>?): CPointer<GInputStream>?

@CCall("knifunptr_libgtk3627_g_buffered_input_stream_new_sized")
external fun g_buffered_input_stream_new_sized(base_stream: CValuesRef<GInputStream>?, size: gsize): CPointer<GInputStream>?

@CCall("knifunptr_libgtk3628_g_buffered_input_stream_get_buffer_size")
external fun g_buffered_input_stream_get_buffer_size(stream: CValuesRef<GBufferedInputStream>?): gsize

@CCall("knifunptr_libgtk3629_g_buffered_input_stream_set_buffer_size")
external fun g_buffered_input_stream_set_buffer_size(stream: CValuesRef<GBufferedInputStream>?, size: gsize): Unit

@CCall("knifunptr_libgtk3630_g_buffered_input_stream_get_available")
external fun g_buffered_input_stream_get_available(stream: CValuesRef<GBufferedInputStream>?): gsize

@CCall("knifunptr_libgtk3631_g_buffered_input_stream_peek")
external fun g_buffered_input_stream_peek(stream: CValuesRef<GBufferedInputStream>?, buffer: CValuesRef<*>?, offset: gsize, count: gsize): gsize

@CCall("knifunptr_libgtk3632_g_buffered_input_stream_peek_buffer")
external fun g_buffered_input_stream_peek_buffer(stream: CValuesRef<GBufferedInputStream>?, count: CValuesRef<gsizeVar>?): COpaquePointer?

@CCall("knifunptr_libgtk3633_g_buffered_input_stream_fill")
external fun g_buffered_input_stream_fill(stream: CValuesRef<GBufferedInputStream>?, count: gssize, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_libgtk3634_g_buffered_input_stream_fill_async")
external fun g_buffered_input_stream_fill_async(stream: CValuesRef<GBufferedInputStream>?, count: gssize, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk3635_g_buffered_input_stream_fill_finish")
external fun g_buffered_input_stream_fill_finish(stream: CValuesRef<GBufferedInputStream>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_libgtk3636_g_buffered_input_stream_read_byte")
external fun g_buffered_input_stream_read_byte(stream: CValuesRef<GBufferedInputStream>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): Int

@CCall("knifunptr_libgtk3637_g_output_stream_get_type")
external fun g_output_stream_get_type(): GType

@CCall("knifunptr_libgtk3638_g_output_stream_write")
external fun g_output_stream_write(stream: CValuesRef<GOutputStream>?, buffer: CValuesRef<*>?, count: gsize, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_libgtk3639_g_output_stream_write_all")
external fun g_output_stream_write_all(stream: CValuesRef<GOutputStream>?, buffer: CValuesRef<*>?, count: gsize, bytes_written: CValuesRef<gsizeVar>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3640_g_output_stream_printf")
external fun g_output_stream_printf(stream: CValuesRef<GOutputStream>?, bytes_written: CValuesRef<gsizeVar>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?, @CCall.CString format: String?, vararg variadicArguments: Any?): gboolean

@CCall("knifunptr_libgtk3641_g_output_stream_vprintf")
external fun g_output_stream_vprintf(stream: CValuesRef<GOutputStream>?, bytes_written: CValuesRef<gsizeVar>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?, @CCall.CString format: String?, args: platform.posix.va_list?): gboolean

@CCall("knifunptr_libgtk3642_g_output_stream_write_bytes")
external fun g_output_stream_write_bytes(stream: CValuesRef<GOutputStream>?, bytes: CValuesRef<GBytes>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_libgtk3643_g_output_stream_splice")
external fun g_output_stream_splice(stream: CValuesRef<GOutputStream>?, source: CValuesRef<GInputStream>?, flags: GOutputStreamSpliceFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_libgtk3644_g_output_stream_flush")
external fun g_output_stream_flush(stream: CValuesRef<GOutputStream>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3645_g_output_stream_close")
external fun g_output_stream_close(stream: CValuesRef<GOutputStream>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3646_g_output_stream_write_async")
external fun g_output_stream_write_async(stream: CValuesRef<GOutputStream>?, buffer: CValuesRef<*>?, count: gsize, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk3647_g_output_stream_write_finish")
external fun g_output_stream_write_finish(stream: CValuesRef<GOutputStream>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_libgtk3648_g_output_stream_write_all_async")
external fun g_output_stream_write_all_async(stream: CValuesRef<GOutputStream>?, buffer: CValuesRef<*>?, count: gsize, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk3649_g_output_stream_write_all_finish")
external fun g_output_stream_write_all_finish(stream: CValuesRef<GOutputStream>?, result: CValuesRef<GAsyncResult>?, bytes_written: CValuesRef<gsizeVar>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3650_g_output_stream_write_bytes_async")
external fun g_output_stream_write_bytes_async(stream: CValuesRef<GOutputStream>?, bytes: CValuesRef<GBytes>?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk3651_g_output_stream_write_bytes_finish")
external fun g_output_stream_write_bytes_finish(stream: CValuesRef<GOutputStream>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_libgtk3652_g_output_stream_splice_async")
external fun g_output_stream_splice_async(stream: CValuesRef<GOutputStream>?, source: CValuesRef<GInputStream>?, flags: GOutputStreamSpliceFlags, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk3653_g_output_stream_splice_finish")
external fun g_output_stream_splice_finish(stream: CValuesRef<GOutputStream>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_libgtk3654_g_output_stream_flush_async")
external fun g_output_stream_flush_async(stream: CValuesRef<GOutputStream>?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk3655_g_output_stream_flush_finish")
external fun g_output_stream_flush_finish(stream: CValuesRef<GOutputStream>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3656_g_output_stream_close_async")
external fun g_output_stream_close_async(stream: CValuesRef<GOutputStream>?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk3657_g_output_stream_close_finish")
external fun g_output_stream_close_finish(stream: CValuesRef<GOutputStream>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3658_g_output_stream_is_closed")
external fun g_output_stream_is_closed(stream: CValuesRef<GOutputStream>?): gboolean

@CCall("knifunptr_libgtk3659_g_output_stream_is_closing")
external fun g_output_stream_is_closing(stream: CValuesRef<GOutputStream>?): gboolean

@CCall("knifunptr_libgtk3660_g_output_stream_has_pending")
external fun g_output_stream_has_pending(stream: CValuesRef<GOutputStream>?): gboolean

@CCall("knifunptr_libgtk3661_g_output_stream_set_pending")
external fun g_output_stream_set_pending(stream: CValuesRef<GOutputStream>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3662_g_output_stream_clear_pending")
external fun g_output_stream_clear_pending(stream: CValuesRef<GOutputStream>?): Unit

@CCall("knifunptr_libgtk3663_g_filter_output_stream_get_type")
external fun g_filter_output_stream_get_type(): GType

@CCall("knifunptr_libgtk3664_g_filter_output_stream_get_base_stream")
external fun g_filter_output_stream_get_base_stream(stream: CValuesRef<GFilterOutputStream>?): CPointer<GOutputStream>?

@CCall("knifunptr_libgtk3665_g_filter_output_stream_get_close_base_stream")
external fun g_filter_output_stream_get_close_base_stream(stream: CValuesRef<GFilterOutputStream>?): gboolean

@CCall("knifunptr_libgtk3666_g_filter_output_stream_set_close_base_stream")
external fun g_filter_output_stream_set_close_base_stream(stream: CValuesRef<GFilterOutputStream>?, close_base: gboolean): Unit

@CCall("knifunptr_libgtk3667_g_buffered_output_stream_get_type")
external fun g_buffered_output_stream_get_type(): GType

@CCall("knifunptr_libgtk3668_g_buffered_output_stream_new")
external fun g_buffered_output_stream_new(base_stream: CValuesRef<GOutputStream>?): CPointer<GOutputStream>?

@CCall("knifunptr_libgtk3669_g_buffered_output_stream_new_sized")
external fun g_buffered_output_stream_new_sized(base_stream: CValuesRef<GOutputStream>?, size: gsize): CPointer<GOutputStream>?

@CCall("knifunptr_libgtk3670_g_buffered_output_stream_get_buffer_size")
external fun g_buffered_output_stream_get_buffer_size(stream: CValuesRef<GBufferedOutputStream>?): gsize

@CCall("knifunptr_libgtk3671_g_buffered_output_stream_set_buffer_size")
external fun g_buffered_output_stream_set_buffer_size(stream: CValuesRef<GBufferedOutputStream>?, size: gsize): Unit

@CCall("knifunptr_libgtk3672_g_buffered_output_stream_get_auto_grow")
external fun g_buffered_output_stream_get_auto_grow(stream: CValuesRef<GBufferedOutputStream>?): gboolean

@CCall("knifunptr_libgtk3673_g_buffered_output_stream_set_auto_grow")
external fun g_buffered_output_stream_set_auto_grow(stream: CValuesRef<GBufferedOutputStream>?, auto_grow: gboolean): Unit

@CCall("knifunptr_libgtk3674_g_bytes_icon_get_type")
external fun g_bytes_icon_get_type(): GType

@CCall("knifunptr_libgtk3675_g_bytes_icon_new")
external fun g_bytes_icon_new(bytes: CValuesRef<GBytes>?): CPointer<GIcon>?

@CCall("knifunptr_libgtk3676_g_bytes_icon_get_bytes")
external fun g_bytes_icon_get_bytes(icon: CValuesRef<GBytesIcon>?): CPointer<GBytes>?

@CCall("knifunptr_libgtk3677_g_cancellable_get_type")
external fun g_cancellable_get_type(): GType

@CCall("knifunptr_libgtk3678_g_cancellable_new")
external fun g_cancellable_new(): CPointer<GCancellable>?

@CCall("knifunptr_libgtk3679_g_cancellable_is_cancelled")
external fun g_cancellable_is_cancelled(cancellable: CValuesRef<GCancellable>?): gboolean

@CCall("knifunptr_libgtk3680_g_cancellable_set_error_if_cancelled")
external fun g_cancellable_set_error_if_cancelled(cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3681_g_cancellable_get_fd")
external fun g_cancellable_get_fd(cancellable: CValuesRef<GCancellable>?): Int

@CCall("knifunptr_libgtk3682_g_cancellable_make_pollfd")
external fun g_cancellable_make_pollfd(cancellable: CValuesRef<GCancellable>?, pollfd: CValuesRef<GPollFD>?): gboolean

@CCall("knifunptr_libgtk3683_g_cancellable_release_fd")
external fun g_cancellable_release_fd(cancellable: CValuesRef<GCancellable>?): Unit

@CCall("knifunptr_libgtk3684_g_cancellable_source_new")
external fun g_cancellable_source_new(cancellable: CValuesRef<GCancellable>?): CPointer<GSource>?

@CCall("knifunptr_libgtk3685_g_cancellable_get_current")
external fun g_cancellable_get_current(): CPointer<GCancellable>?

@CCall("knifunptr_libgtk3686_g_cancellable_push_current")
external fun g_cancellable_push_current(cancellable: CValuesRef<GCancellable>?): Unit

@CCall("knifunptr_libgtk3687_g_cancellable_pop_current")
external fun g_cancellable_pop_current(cancellable: CValuesRef<GCancellable>?): Unit

@CCall("knifunptr_libgtk3688_g_cancellable_reset")
external fun g_cancellable_reset(cancellable: CValuesRef<GCancellable>?): Unit

@CCall("knifunptr_libgtk3689_g_cancellable_connect")
external fun g_cancellable_connect(cancellable: CValuesRef<GCancellable>?, callback: GCallback?, data: gpointer?, data_destroy_func: GDestroyNotify?): gulong

@CCall("knifunptr_libgtk3690_g_cancellable_disconnect")
external fun g_cancellable_disconnect(cancellable: CValuesRef<GCancellable>?, handler_id: gulong): Unit

@CCall("knifunptr_libgtk3691_g_cancellable_cancel")
external fun g_cancellable_cancel(cancellable: CValuesRef<GCancellable>?): Unit

@CCall("knifunptr_libgtk3692_g_converter_get_type")
external fun g_converter_get_type(): GType

@CCall("knifunptr_libgtk3693_g_converter_convert")
external fun g_converter_convert(converter: CValuesRef<GConverter>?, inbuf: CValuesRef<*>?, inbuf_size: gsize, outbuf: CValuesRef<*>?, outbuf_size: gsize, flags: GConverterFlags, bytes_read: CValuesRef<gsizeVar>?, bytes_written: CValuesRef<gsizeVar>?, error: CValuesRef<CPointerVar<GError>>?): GConverterResult

@CCall("knifunptr_libgtk3694_g_converter_reset")
external fun g_converter_reset(converter: CValuesRef<GConverter>?): Unit

@CCall("knifunptr_libgtk3695_g_charset_converter_get_type")
external fun g_charset_converter_get_type(): GType

@CCall("knifunptr_libgtk3696_g_charset_converter_new")
external fun g_charset_converter_new(@CCall.CString to_charset: String?, @CCall.CString from_charset: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GCharsetConverter>?

@CCall("knifunptr_libgtk3697_g_charset_converter_set_use_fallback")
external fun g_charset_converter_set_use_fallback(converter: CValuesRef<GCharsetConverter>?, use_fallback: gboolean): Unit

@CCall("knifunptr_libgtk3698_g_charset_converter_get_use_fallback")
external fun g_charset_converter_get_use_fallback(converter: CValuesRef<GCharsetConverter>?): gboolean

@CCall("knifunptr_libgtk3699_g_charset_converter_get_num_fallbacks")
external fun g_charset_converter_get_num_fallbacks(converter: CValuesRef<GCharsetConverter>?): guint

@CCall("knifunptr_libgtk3700_g_content_type_equals")
external fun g_content_type_equals(@CCall.CString type1: String?, @CCall.CString type2: String?): gboolean

@CCall("knifunptr_libgtk3701_g_content_type_is_a")
external fun g_content_type_is_a(@CCall.CString type: String?, @CCall.CString supertype: String?): gboolean

@CCall("knifunptr_libgtk3702_g_content_type_is_mime_type")
external fun g_content_type_is_mime_type(@CCall.CString type: String?, @CCall.CString mime_type: String?): gboolean

@CCall("knifunptr_libgtk3703_g_content_type_is_unknown")
external fun g_content_type_is_unknown(@CCall.CString type: String?): gboolean

@CCall("knifunptr_libgtk3704_g_content_type_get_description")
external fun g_content_type_get_description(@CCall.CString type: String?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3705_g_content_type_get_mime_type")
external fun g_content_type_get_mime_type(@CCall.CString type: String?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3706_g_content_type_get_icon")
external fun g_content_type_get_icon(@CCall.CString type: String?): CPointer<GIcon>?

@CCall("knifunptr_libgtk3707_g_content_type_get_symbolic_icon")
external fun g_content_type_get_symbolic_icon(@CCall.CString type: String?): CPointer<GIcon>?

@CCall("knifunptr_libgtk3708_g_content_type_get_generic_icon_name")
external fun g_content_type_get_generic_icon_name(@CCall.CString type: String?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3709_g_content_type_can_be_executable")
external fun g_content_type_can_be_executable(@CCall.CString type: String?): gboolean

@CCall("knifunptr_libgtk3710_g_content_type_from_mime_type")
external fun g_content_type_from_mime_type(@CCall.CString mime_type: String?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3711_g_content_type_guess")
external fun g_content_type_guess(@CCall.CString filename: String?, data: CValuesRef<gucharVar>?, data_size: gsize, result_uncertain: CValuesRef<gbooleanVar>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3712_g_content_type_guess_for_tree")
external fun g_content_type_guess_for_tree(root: CValuesRef<GFile>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_libgtk3713_g_content_types_get_registered")
external fun g_content_types_get_registered(): CPointer<GList>?

@CCall("knifunptr_libgtk3714_g_converter_input_stream_get_type")
external fun g_converter_input_stream_get_type(): GType

@CCall("knifunptr_libgtk3715_g_converter_input_stream_new")
external fun g_converter_input_stream_new(base_stream: CValuesRef<GInputStream>?, converter: CValuesRef<GConverter>?): CPointer<GInputStream>?

@CCall("knifunptr_libgtk3716_g_converter_input_stream_get_converter")
external fun g_converter_input_stream_get_converter(converter_stream: CValuesRef<GConverterInputStream>?): CPointer<GConverter>?

@CCall("knifunptr_libgtk3717_g_converter_output_stream_get_type")
external fun g_converter_output_stream_get_type(): GType

@CCall("knifunptr_libgtk3718_g_converter_output_stream_new")
external fun g_converter_output_stream_new(base_stream: CValuesRef<GOutputStream>?, converter: CValuesRef<GConverter>?): CPointer<GOutputStream>?

@CCall("knifunptr_libgtk3719_g_converter_output_stream_get_converter")
external fun g_converter_output_stream_get_converter(converter_stream: CValuesRef<GConverterOutputStream>?): CPointer<GConverter>?

@CCall("knifunptr_libgtk3720_g_credentials_get_type")
external fun g_credentials_get_type(): GType

@CCall("knifunptr_libgtk3721_g_credentials_new")
external fun g_credentials_new(): CPointer<GCredentials>?

@CCall("knifunptr_libgtk3722_g_credentials_to_string")
external fun g_credentials_to_string(credentials: CValuesRef<GCredentials>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3723_g_credentials_get_native")
external fun g_credentials_get_native(credentials: CValuesRef<GCredentials>?, native_type: GCredentialsType): gpointer?

@CCall("knifunptr_libgtk3724_g_credentials_set_native")
external fun g_credentials_set_native(credentials: CValuesRef<GCredentials>?, native_type: GCredentialsType, native: gpointer?): Unit

@CCall("knifunptr_libgtk3725_g_credentials_is_same_user")
external fun g_credentials_is_same_user(credentials: CValuesRef<GCredentials>?, other_credentials: CValuesRef<GCredentials>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3726_g_credentials_get_unix_pid")
external fun g_credentials_get_unix_pid(credentials: CValuesRef<GCredentials>?, error: CValuesRef<CPointerVar<GError>>?): pid_t

@CCall("knifunptr_libgtk3727_g_credentials_get_unix_user")
external fun g_credentials_get_unix_user(credentials: CValuesRef<GCredentials>?, error: CValuesRef<CPointerVar<GError>>?): uid_t

@CCall("knifunptr_libgtk3728_g_credentials_set_unix_user")
external fun g_credentials_set_unix_user(credentials: CValuesRef<GCredentials>?, uid: uid_t, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3729_g_datagram_based_get_type")
external fun g_datagram_based_get_type(): GType

@CCall("knifunptr_libgtk3730_g_datagram_based_receive_messages")
external fun g_datagram_based_receive_messages(datagram_based: CValuesRef<GDatagramBased>?, messages: CValuesRef<GInputMessage>?, num_messages: guint, flags: gint, timeout: gint64, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gint

@CCall("knifunptr_libgtk3731_g_datagram_based_send_messages")
external fun g_datagram_based_send_messages(datagram_based: CValuesRef<GDatagramBased>?, messages: CValuesRef<GOutputMessage>?, num_messages: guint, flags: gint, timeout: gint64, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gint

@CCall("knifunptr_libgtk3732_g_datagram_based_create_source")
external fun g_datagram_based_create_source(datagram_based: CValuesRef<GDatagramBased>?, condition: GIOCondition, cancellable: CValuesRef<GCancellable>?): CPointer<GSource>?

@CCall("knifunptr_libgtk3733_g_datagram_based_condition_check")
external fun g_datagram_based_condition_check(datagram_based: CValuesRef<GDatagramBased>?, condition: GIOCondition): GIOCondition

@CCall("knifunptr_libgtk3734_g_datagram_based_condition_wait")
external fun g_datagram_based_condition_wait(datagram_based: CValuesRef<GDatagramBased>?, condition: GIOCondition, timeout: gint64, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3735_g_data_input_stream_get_type")
external fun g_data_input_stream_get_type(): GType

@CCall("knifunptr_libgtk3736_g_data_input_stream_new")
external fun g_data_input_stream_new(base_stream: CValuesRef<GInputStream>?): CPointer<GDataInputStream>?

@CCall("knifunptr_libgtk3737_g_data_input_stream_set_byte_order")
external fun g_data_input_stream_set_byte_order(stream: CValuesRef<GDataInputStream>?, order: GDataStreamByteOrder): Unit

@CCall("knifunptr_libgtk3738_g_data_input_stream_get_byte_order")
external fun g_data_input_stream_get_byte_order(stream: CValuesRef<GDataInputStream>?): GDataStreamByteOrder

@CCall("knifunptr_libgtk3739_g_data_input_stream_set_newline_type")
external fun g_data_input_stream_set_newline_type(stream: CValuesRef<GDataInputStream>?, type: GDataStreamNewlineType): Unit

@CCall("knifunptr_libgtk3740_g_data_input_stream_get_newline_type")
external fun g_data_input_stream_get_newline_type(stream: CValuesRef<GDataInputStream>?): GDataStreamNewlineType

@CCall("knifunptr_libgtk3741_g_data_input_stream_read_byte")
external fun g_data_input_stream_read_byte(stream: CValuesRef<GDataInputStream>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): guchar

@CCall("knifunptr_libgtk3742_g_data_input_stream_read_int16")
external fun g_data_input_stream_read_int16(stream: CValuesRef<GDataInputStream>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gint16

@CCall("knifunptr_libgtk3743_g_data_input_stream_read_uint16")
external fun g_data_input_stream_read_uint16(stream: CValuesRef<GDataInputStream>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): guint16

@CCall("knifunptr_libgtk3744_g_data_input_stream_read_int32")
external fun g_data_input_stream_read_int32(stream: CValuesRef<GDataInputStream>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gint32

@CCall("knifunptr_libgtk3745_g_data_input_stream_read_uint32")
external fun g_data_input_stream_read_uint32(stream: CValuesRef<GDataInputStream>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): guint32

@CCall("knifunptr_libgtk3746_g_data_input_stream_read_int64")
external fun g_data_input_stream_read_int64(stream: CValuesRef<GDataInputStream>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gint64

@CCall("knifunptr_libgtk3747_g_data_input_stream_read_uint64")
external fun g_data_input_stream_read_uint64(stream: CValuesRef<GDataInputStream>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): guint64

@CCall("knifunptr_libgtk3748_g_data_input_stream_read_line")
external fun g_data_input_stream_read_line(stream: CValuesRef<GDataInputStream>?, length: CValuesRef<gsizeVar>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk3749_g_data_input_stream_read_line_utf8")
external fun g_data_input_stream_read_line_utf8(stream: CValuesRef<GDataInputStream>?, length: CValuesRef<gsizeVar>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk3750_g_data_input_stream_read_line_async")
external fun g_data_input_stream_read_line_async(stream: CValuesRef<GDataInputStream>?, io_priority: gint, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk3751_g_data_input_stream_read_line_finish")
external fun g_data_input_stream_read_line_finish(stream: CValuesRef<GDataInputStream>?, result: CValuesRef<GAsyncResult>?, length: CValuesRef<gsizeVar>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk3752_g_data_input_stream_read_line_finish_utf8")
external fun g_data_input_stream_read_line_finish_utf8(stream: CValuesRef<GDataInputStream>?, result: CValuesRef<GAsyncResult>?, length: CValuesRef<gsizeVar>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk3753_g_data_input_stream_read_until")
external fun g_data_input_stream_read_until(stream: CValuesRef<GDataInputStream>?, @CCall.CString stop_chars: String?, length: CValuesRef<gsizeVar>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk3754_g_data_input_stream_read_until_async")
external fun g_data_input_stream_read_until_async(stream: CValuesRef<GDataInputStream>?, @CCall.CString stop_chars: String?, io_priority: gint, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk3755_g_data_input_stream_read_until_finish")
external fun g_data_input_stream_read_until_finish(stream: CValuesRef<GDataInputStream>?, result: CValuesRef<GAsyncResult>?, length: CValuesRef<gsizeVar>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk3756_g_data_input_stream_read_upto")
external fun g_data_input_stream_read_upto(stream: CValuesRef<GDataInputStream>?, @CCall.CString stop_chars: String?, stop_chars_len: gssize, length: CValuesRef<gsizeVar>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk3757_g_data_input_stream_read_upto_async")
external fun g_data_input_stream_read_upto_async(stream: CValuesRef<GDataInputStream>?, @CCall.CString stop_chars: String?, stop_chars_len: gssize, io_priority: gint, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk3758_g_data_input_stream_read_upto_finish")
external fun g_data_input_stream_read_upto_finish(stream: CValuesRef<GDataInputStream>?, result: CValuesRef<GAsyncResult>?, length: CValuesRef<gsizeVar>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk3759_g_data_output_stream_get_type")
external fun g_data_output_stream_get_type(): GType

@CCall("knifunptr_libgtk3760_g_data_output_stream_new")
external fun g_data_output_stream_new(base_stream: CValuesRef<GOutputStream>?): CPointer<GDataOutputStream>?

@CCall("knifunptr_libgtk3761_g_data_output_stream_set_byte_order")
external fun g_data_output_stream_set_byte_order(stream: CValuesRef<GDataOutputStream>?, order: GDataStreamByteOrder): Unit

@CCall("knifunptr_libgtk3762_g_data_output_stream_get_byte_order")
external fun g_data_output_stream_get_byte_order(stream: CValuesRef<GDataOutputStream>?): GDataStreamByteOrder

@CCall("knifunptr_libgtk3763_g_data_output_stream_put_byte")
external fun g_data_output_stream_put_byte(stream: CValuesRef<GDataOutputStream>?, data: guchar, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3764_g_data_output_stream_put_int16")
external fun g_data_output_stream_put_int16(stream: CValuesRef<GDataOutputStream>?, data: gint16, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3765_g_data_output_stream_put_uint16")
external fun g_data_output_stream_put_uint16(stream: CValuesRef<GDataOutputStream>?, data: guint16, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3766_g_data_output_stream_put_int32")
external fun g_data_output_stream_put_int32(stream: CValuesRef<GDataOutputStream>?, data: gint32, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3767_g_data_output_stream_put_uint32")
external fun g_data_output_stream_put_uint32(stream: CValuesRef<GDataOutputStream>?, data: guint32, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3768_g_data_output_stream_put_int64")
external fun g_data_output_stream_put_int64(stream: CValuesRef<GDataOutputStream>?, data: gint64, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3769_g_data_output_stream_put_uint64")
external fun g_data_output_stream_put_uint64(stream: CValuesRef<GDataOutputStream>?, data: guint64, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3770_g_data_output_stream_put_string")
external fun g_data_output_stream_put_string(stream: CValuesRef<GDataOutputStream>?, @CCall.CString str: String?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3771_g_dbus_address_escape_value")
external fun g_dbus_address_escape_value(@CCall.CString string: String?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3772_g_dbus_is_address")
external fun g_dbus_is_address(@CCall.CString string: String?): gboolean

@CCall("knifunptr_libgtk3773_g_dbus_is_supported_address")
external fun g_dbus_is_supported_address(@CCall.CString string: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3774_g_dbus_address_get_stream")
external fun g_dbus_address_get_stream(@CCall.CString address: String?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk3775_g_dbus_address_get_stream_finish")
external fun g_dbus_address_get_stream_finish(res: CValuesRef<GAsyncResult>?, out_guid: CValuesRef<CPointerVar<gcharVar>>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GIOStream>?

@CCall("knifunptr_libgtk3776_g_dbus_address_get_stream_sync")
external fun g_dbus_address_get_stream_sync(@CCall.CString address: String?, out_guid: CValuesRef<CPointerVar<gcharVar>>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GIOStream>?

@CCall("knifunptr_libgtk3777_g_dbus_address_get_for_bus_sync")
external fun g_dbus_address_get_for_bus_sync(bus_type: GBusType, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3778_g_dbus_auth_observer_get_type")
external fun g_dbus_auth_observer_get_type(): GType

@CCall("knifunptr_libgtk3779_g_dbus_auth_observer_new")
external fun g_dbus_auth_observer_new(): CPointer<GDBusAuthObserver>?

@CCall("knifunptr_libgtk3780_g_dbus_auth_observer_authorize_authenticated_peer")
external fun g_dbus_auth_observer_authorize_authenticated_peer(observer: CValuesRef<GDBusAuthObserver>?, stream: CValuesRef<GIOStream>?, credentials: CValuesRef<GCredentials>?): gboolean

@CCall("knifunptr_libgtk3781_g_dbus_auth_observer_allow_mechanism")
external fun g_dbus_auth_observer_allow_mechanism(observer: CValuesRef<GDBusAuthObserver>?, @CCall.CString mechanism: String?): gboolean

@CCall("knifunptr_libgtk3782_g_dbus_connection_get_type")
external fun g_dbus_connection_get_type(): GType

@CCall("knifunptr_libgtk3783_g_bus_get")
external fun g_bus_get(bus_type: GBusType, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk3784_g_bus_get_finish")
external fun g_bus_get_finish(res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusConnection>?

@CCall("knifunptr_libgtk3785_g_bus_get_sync")
external fun g_bus_get_sync(bus_type: GBusType, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusConnection>?

@CCall("knifunptr_libgtk3786_g_dbus_connection_new")
external fun g_dbus_connection_new(stream: CValuesRef<GIOStream>?, @CCall.CString guid: String?, flags: GDBusConnectionFlags, observer: CValuesRef<GDBusAuthObserver>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk3787_g_dbus_connection_new_finish")
external fun g_dbus_connection_new_finish(res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusConnection>?

@CCall("knifunptr_libgtk3788_g_dbus_connection_new_sync")
external fun g_dbus_connection_new_sync(stream: CValuesRef<GIOStream>?, @CCall.CString guid: String?, flags: GDBusConnectionFlags, observer: CValuesRef<GDBusAuthObserver>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusConnection>?

@CCall("knifunptr_libgtk3789_g_dbus_connection_new_for_address")
external fun g_dbus_connection_new_for_address(@CCall.CString address: String?, flags: GDBusConnectionFlags, observer: CValuesRef<GDBusAuthObserver>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk3790_g_dbus_connection_new_for_address_finish")
external fun g_dbus_connection_new_for_address_finish(res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusConnection>?

@CCall("knifunptr_libgtk3791_g_dbus_connection_new_for_address_sync")
external fun g_dbus_connection_new_for_address_sync(@CCall.CString address: String?, flags: GDBusConnectionFlags, observer: CValuesRef<GDBusAuthObserver>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusConnection>?

@CCall("knifunptr_libgtk3792_g_dbus_connection_start_message_processing")
external fun g_dbus_connection_start_message_processing(connection: CValuesRef<GDBusConnection>?): Unit

@CCall("knifunptr_libgtk3793_g_dbus_connection_is_closed")
external fun g_dbus_connection_is_closed(connection: CValuesRef<GDBusConnection>?): gboolean

@CCall("knifunptr_libgtk3794_g_dbus_connection_get_stream")
external fun g_dbus_connection_get_stream(connection: CValuesRef<GDBusConnection>?): CPointer<GIOStream>?

@CCall("knifunptr_libgtk3795_g_dbus_connection_get_guid")
external fun g_dbus_connection_get_guid(connection: CValuesRef<GDBusConnection>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3796_g_dbus_connection_get_unique_name")
external fun g_dbus_connection_get_unique_name(connection: CValuesRef<GDBusConnection>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3797_g_dbus_connection_get_peer_credentials")
external fun g_dbus_connection_get_peer_credentials(connection: CValuesRef<GDBusConnection>?): CPointer<GCredentials>?

@CCall("knifunptr_libgtk3798_g_dbus_connection_get_last_serial")
external fun g_dbus_connection_get_last_serial(connection: CValuesRef<GDBusConnection>?): guint32

@CCall("knifunptr_libgtk3799_g_dbus_connection_get_exit_on_close")
external fun g_dbus_connection_get_exit_on_close(connection: CValuesRef<GDBusConnection>?): gboolean

@CCall("knifunptr_libgtk3800_g_dbus_connection_set_exit_on_close")
external fun g_dbus_connection_set_exit_on_close(connection: CValuesRef<GDBusConnection>?, exit_on_close: gboolean): Unit

@CCall("knifunptr_libgtk3801_g_dbus_connection_get_capabilities")
external fun g_dbus_connection_get_capabilities(connection: CValuesRef<GDBusConnection>?): GDBusCapabilityFlags

@CCall("knifunptr_libgtk3802_g_dbus_connection_close")
external fun g_dbus_connection_close(connection: CValuesRef<GDBusConnection>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk3803_g_dbus_connection_close_finish")
external fun g_dbus_connection_close_finish(connection: CValuesRef<GDBusConnection>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3804_g_dbus_connection_close_sync")
external fun g_dbus_connection_close_sync(connection: CValuesRef<GDBusConnection>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3805_g_dbus_connection_flush")
external fun g_dbus_connection_flush(connection: CValuesRef<GDBusConnection>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk3806_g_dbus_connection_flush_finish")
external fun g_dbus_connection_flush_finish(connection: CValuesRef<GDBusConnection>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3807_g_dbus_connection_flush_sync")
external fun g_dbus_connection_flush_sync(connection: CValuesRef<GDBusConnection>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3808_g_dbus_connection_send_message")
external fun g_dbus_connection_send_message(connection: CValuesRef<GDBusConnection>?, message: CValuesRef<GDBusMessage>?, flags: GDBusSendMessageFlags, out_serial: CValuesRef<guint32Var>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3809_g_dbus_connection_send_message_with_reply")
external fun g_dbus_connection_send_message_with_reply(connection: CValuesRef<GDBusConnection>?, message: CValuesRef<GDBusMessage>?, flags: GDBusSendMessageFlags, timeout_msec: gint, out_serial: CValuesRef<guint32Var>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk3810_g_dbus_connection_send_message_with_reply_finish")
external fun g_dbus_connection_send_message_with_reply_finish(connection: CValuesRef<GDBusConnection>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusMessage>?

@CCall("knifunptr_libgtk3811_g_dbus_connection_send_message_with_reply_sync")
external fun g_dbus_connection_send_message_with_reply_sync(connection: CValuesRef<GDBusConnection>?, message: CValuesRef<GDBusMessage>?, flags: GDBusSendMessageFlags, timeout_msec: gint, out_serial: CValuesRef<guint32Var>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusMessage>?

@CCall("knifunptr_libgtk3812_g_dbus_connection_emit_signal")
external fun g_dbus_connection_emit_signal(connection: CValuesRef<GDBusConnection>?, @CCall.CString destination_bus_name: String?, @CCall.CString object_path: String?, @CCall.CString interface_name: String?, @CCall.CString signal_name: String?, parameters: CValuesRef<GVariant>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3813_g_dbus_connection_call")
external fun g_dbus_connection_call(connection: CValuesRef<GDBusConnection>?, @CCall.CString bus_name: String?, @CCall.CString object_path: String?, @CCall.CString interface_name: String?, @CCall.CString method_name: String?, parameters: CValuesRef<GVariant>?, reply_type: CValuesRef<GVariantType>?, flags: GDBusCallFlags, timeout_msec: gint, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk3814_g_dbus_connection_call_finish")
external fun g_dbus_connection_call_finish(connection: CValuesRef<GDBusConnection>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GVariant>?

@CCall("knifunptr_libgtk3815_g_dbus_connection_call_sync")
external fun g_dbus_connection_call_sync(connection: CValuesRef<GDBusConnection>?, @CCall.CString bus_name: String?, @CCall.CString object_path: String?, @CCall.CString interface_name: String?, @CCall.CString method_name: String?, parameters: CValuesRef<GVariant>?, reply_type: CValuesRef<GVariantType>?, flags: GDBusCallFlags, timeout_msec: gint, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GVariant>?

@CCall("knifunptr_libgtk3816_g_dbus_connection_call_with_unix_fd_list")
external fun g_dbus_connection_call_with_unix_fd_list(connection: CValuesRef<GDBusConnection>?, @CCall.CString bus_name: String?, @CCall.CString object_path: String?, @CCall.CString interface_name: String?, @CCall.CString method_name: String?, parameters: CValuesRef<GVariant>?, reply_type: CValuesRef<GVariantType>?, flags: GDBusCallFlags, timeout_msec: gint, fd_list: CValuesRef<GUnixFDList>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk3817_g_dbus_connection_call_with_unix_fd_list_finish")
external fun g_dbus_connection_call_with_unix_fd_list_finish(connection: CValuesRef<GDBusConnection>?, out_fd_list: CValuesRef<CPointerVar<GUnixFDList>>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GVariant>?

@CCall("knifunptr_libgtk3818_g_dbus_connection_call_with_unix_fd_list_sync")
external fun g_dbus_connection_call_with_unix_fd_list_sync(connection: CValuesRef<GDBusConnection>?, @CCall.CString bus_name: String?, @CCall.CString object_path: String?, @CCall.CString interface_name: String?, @CCall.CString method_name: String?, parameters: CValuesRef<GVariant>?, reply_type: CValuesRef<GVariantType>?, flags: GDBusCallFlags, timeout_msec: gint, fd_list: CValuesRef<GUnixFDList>?, out_fd_list: CValuesRef<CPointerVar<GUnixFDList>>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GVariant>?

@CCall("knifunptr_libgtk3819_g_dbus_connection_register_object")
external fun g_dbus_connection_register_object(connection: CValuesRef<GDBusConnection>?, @CCall.CString object_path: String?, interface_info: CValuesRef<GDBusInterfaceInfo>?, vtable: CValuesRef<GDBusInterfaceVTable>?, user_data: gpointer?, user_data_free_func: GDestroyNotify?, error: CValuesRef<CPointerVar<GError>>?): guint

@CCall("knifunptr_libgtk3820_g_dbus_connection_register_object_with_closures")
external fun g_dbus_connection_register_object_with_closures(connection: CValuesRef<GDBusConnection>?, @CCall.CString object_path: String?, interface_info: CValuesRef<GDBusInterfaceInfo>?, method_call_closure: CValuesRef<GClosure>?, get_property_closure: CValuesRef<GClosure>?, set_property_closure: CValuesRef<GClosure>?, error: CValuesRef<CPointerVar<GError>>?): guint

@CCall("knifunptr_libgtk3821_g_dbus_connection_unregister_object")
external fun g_dbus_connection_unregister_object(connection: CValuesRef<GDBusConnection>?, registration_id: guint): gboolean

@CCall("knifunptr_libgtk3822_g_dbus_connection_register_subtree")
external fun g_dbus_connection_register_subtree(connection: CValuesRef<GDBusConnection>?, @CCall.CString object_path: String?, vtable: CValuesRef<GDBusSubtreeVTable>?, flags: GDBusSubtreeFlags, user_data: gpointer?, user_data_free_func: GDestroyNotify?, error: CValuesRef<CPointerVar<GError>>?): guint

@CCall("knifunptr_libgtk3823_g_dbus_connection_unregister_subtree")
external fun g_dbus_connection_unregister_subtree(connection: CValuesRef<GDBusConnection>?, registration_id: guint): gboolean

@CCall("knifunptr_libgtk3824_g_dbus_connection_signal_subscribe")
external fun g_dbus_connection_signal_subscribe(connection: CValuesRef<GDBusConnection>?, @CCall.CString sender: String?, @CCall.CString interface_name: String?, @CCall.CString member: String?, @CCall.CString object_path: String?, @CCall.CString arg0: String?, flags: GDBusSignalFlags, callback: GDBusSignalCallback?, user_data: gpointer?, user_data_free_func: GDestroyNotify?): guint

@CCall("knifunptr_libgtk3825_g_dbus_connection_signal_unsubscribe")
external fun g_dbus_connection_signal_unsubscribe(connection: CValuesRef<GDBusConnection>?, subscription_id: guint): Unit

@CCall("knifunptr_libgtk3826_g_dbus_connection_add_filter")
external fun g_dbus_connection_add_filter(connection: CValuesRef<GDBusConnection>?, filter_function: GDBusMessageFilterFunction?, user_data: gpointer?, user_data_free_func: GDestroyNotify?): guint

@CCall("knifunptr_libgtk3827_g_dbus_connection_remove_filter")
external fun g_dbus_connection_remove_filter(connection: CValuesRef<GDBusConnection>?, filter_id: guint): Unit

@CCall("knifunptr_libgtk3828_g_dbus_error_quark")
external fun g_dbus_error_quark(): GQuark

@CCall("knifunptr_libgtk3829_g_dbus_error_is_remote_error")
external fun g_dbus_error_is_remote_error(error: CValuesRef<GError>?): gboolean

@CCall("knifunptr_libgtk3830_g_dbus_error_get_remote_error")
external fun g_dbus_error_get_remote_error(error: CValuesRef<GError>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3831_g_dbus_error_strip_remote_error")
external fun g_dbus_error_strip_remote_error(error: CValuesRef<GError>?): gboolean

@CCall("knifunptr_libgtk3832_g_dbus_error_register_error")
external fun g_dbus_error_register_error(error_domain: GQuark, error_code: gint, @CCall.CString dbus_error_name: String?): gboolean

@CCall("knifunptr_libgtk3833_g_dbus_error_unregister_error")
external fun g_dbus_error_unregister_error(error_domain: GQuark, error_code: gint, @CCall.CString dbus_error_name: String?): gboolean

@CCall("knifunptr_libgtk3834_g_dbus_error_register_error_domain")
external fun g_dbus_error_register_error_domain(@CCall.CString error_domain_quark_name: String?, quark_volatile: CValuesRef<gsizeVar>?, entries: CValuesRef<GDBusErrorEntry>?, num_entries: guint): Unit

@CCall("knifunptr_libgtk3835_g_dbus_error_new_for_dbus_error")
external fun g_dbus_error_new_for_dbus_error(@CCall.CString dbus_error_name: String?, @CCall.CString dbus_error_message: String?): CPointer<GError>?

@CCall("knifunptr_libgtk3836_g_dbus_error_set_dbus_error")
external fun g_dbus_error_set_dbus_error(error: CValuesRef<CPointerVar<GError>>?, @CCall.CString dbus_error_name: String?, @CCall.CString dbus_error_message: String?, @CCall.CString format: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk3837_g_dbus_error_set_dbus_error_valist")
external fun g_dbus_error_set_dbus_error_valist(error: CValuesRef<CPointerVar<GError>>?, @CCall.CString dbus_error_name: String?, @CCall.CString dbus_error_message: String?, @CCall.CString format: String?, var_args: platform.posix.va_list?): Unit

@CCall("knifunptr_libgtk3838_g_dbus_error_encode_gerror")
external fun g_dbus_error_encode_gerror(error: CValuesRef<GError>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3839_g_dbus_annotation_info_lookup")
external fun g_dbus_annotation_info_lookup(annotations: CValuesRef<CPointerVar<GDBusAnnotationInfo>>?, @CCall.CString name: String?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3840_g_dbus_interface_info_lookup_method")
external fun g_dbus_interface_info_lookup_method(info: CValuesRef<GDBusInterfaceInfo>?, @CCall.CString name: String?): CPointer<GDBusMethodInfo>?

@CCall("knifunptr_libgtk3841_g_dbus_interface_info_lookup_signal")
external fun g_dbus_interface_info_lookup_signal(info: CValuesRef<GDBusInterfaceInfo>?, @CCall.CString name: String?): CPointer<GDBusSignalInfo>?

@CCall("knifunptr_libgtk3842_g_dbus_interface_info_lookup_property")
external fun g_dbus_interface_info_lookup_property(info: CValuesRef<GDBusInterfaceInfo>?, @CCall.CString name: String?): CPointer<GDBusPropertyInfo>?

@CCall("knifunptr_libgtk3843_g_dbus_interface_info_cache_build")
external fun g_dbus_interface_info_cache_build(info: CValuesRef<GDBusInterfaceInfo>?): Unit

@CCall("knifunptr_libgtk3844_g_dbus_interface_info_cache_release")
external fun g_dbus_interface_info_cache_release(info: CValuesRef<GDBusInterfaceInfo>?): Unit

@CCall("knifunptr_libgtk3845_g_dbus_interface_info_generate_xml")
external fun g_dbus_interface_info_generate_xml(info: CValuesRef<GDBusInterfaceInfo>?, indent: guint, string_builder: CValuesRef<GString>?): Unit

@CCall("knifunptr_libgtk3846_g_dbus_node_info_new_for_xml")
external fun g_dbus_node_info_new_for_xml(@CCall.CString xml_data: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusNodeInfo>?

@CCall("knifunptr_libgtk3847_g_dbus_node_info_lookup_interface")
external fun g_dbus_node_info_lookup_interface(info: CValuesRef<GDBusNodeInfo>?, @CCall.CString name: String?): CPointer<GDBusInterfaceInfo>?

@CCall("knifunptr_libgtk3848_g_dbus_node_info_generate_xml")
external fun g_dbus_node_info_generate_xml(info: CValuesRef<GDBusNodeInfo>?, indent: guint, string_builder: CValuesRef<GString>?): Unit

@CCall("knifunptr_libgtk3849_g_dbus_node_info_ref")
external fun g_dbus_node_info_ref(info: CValuesRef<GDBusNodeInfo>?): CPointer<GDBusNodeInfo>?

@CCall("knifunptr_libgtk3850_g_dbus_interface_info_ref")
external fun g_dbus_interface_info_ref(info: CValuesRef<GDBusInterfaceInfo>?): CPointer<GDBusInterfaceInfo>?

@CCall("knifunptr_libgtk3851_g_dbus_method_info_ref")
external fun g_dbus_method_info_ref(info: CValuesRef<GDBusMethodInfo>?): CPointer<GDBusMethodInfo>?

@CCall("knifunptr_libgtk3852_g_dbus_signal_info_ref")
external fun g_dbus_signal_info_ref(info: CValuesRef<GDBusSignalInfo>?): CPointer<GDBusSignalInfo>?

@CCall("knifunptr_libgtk3853_g_dbus_property_info_ref")
external fun g_dbus_property_info_ref(info: CValuesRef<GDBusPropertyInfo>?): CPointer<GDBusPropertyInfo>?

@CCall("knifunptr_libgtk3854_g_dbus_arg_info_ref")
external fun g_dbus_arg_info_ref(info: CValuesRef<GDBusArgInfo>?): CPointer<GDBusArgInfo>?

@CCall("knifunptr_libgtk3855_g_dbus_annotation_info_ref")
external fun g_dbus_annotation_info_ref(info: CValuesRef<GDBusAnnotationInfo>?): CPointer<GDBusAnnotationInfo>?

@CCall("knifunptr_libgtk3856_g_dbus_node_info_unref")
external fun g_dbus_node_info_unref(info: CValuesRef<GDBusNodeInfo>?): Unit

@CCall("knifunptr_libgtk3857_g_dbus_interface_info_unref")
external fun g_dbus_interface_info_unref(info: CValuesRef<GDBusInterfaceInfo>?): Unit

@CCall("knifunptr_libgtk3858_g_dbus_method_info_unref")
external fun g_dbus_method_info_unref(info: CValuesRef<GDBusMethodInfo>?): Unit

@CCall("knifunptr_libgtk3859_g_dbus_signal_info_unref")
external fun g_dbus_signal_info_unref(info: CValuesRef<GDBusSignalInfo>?): Unit

@CCall("knifunptr_libgtk3860_g_dbus_property_info_unref")
external fun g_dbus_property_info_unref(info: CValuesRef<GDBusPropertyInfo>?): Unit

@CCall("knifunptr_libgtk3861_g_dbus_arg_info_unref")
external fun g_dbus_arg_info_unref(info: CValuesRef<GDBusArgInfo>?): Unit

@CCall("knifunptr_libgtk3862_g_dbus_annotation_info_unref")
external fun g_dbus_annotation_info_unref(info: CValuesRef<GDBusAnnotationInfo>?): Unit

@CCall("knifunptr_libgtk3863_g_dbus_node_info_get_type")
external fun g_dbus_node_info_get_type(): GType

@CCall("knifunptr_libgtk3864_g_dbus_interface_info_get_type")
external fun g_dbus_interface_info_get_type(): GType

@CCall("knifunptr_libgtk3865_g_dbus_method_info_get_type")
external fun g_dbus_method_info_get_type(): GType

@CCall("knifunptr_libgtk3866_g_dbus_signal_info_get_type")
external fun g_dbus_signal_info_get_type(): GType

@CCall("knifunptr_libgtk3867_g_dbus_property_info_get_type")
external fun g_dbus_property_info_get_type(): GType

@CCall("knifunptr_libgtk3868_g_dbus_arg_info_get_type")
external fun g_dbus_arg_info_get_type(): GType

@CCall("knifunptr_libgtk3869_g_dbus_annotation_info_get_type")
external fun g_dbus_annotation_info_get_type(): GType

@CCall("knifunptr_libgtk3870_g_dbus_message_get_type")
external fun g_dbus_message_get_type(): GType

@CCall("knifunptr_libgtk3871_g_dbus_message_new")
external fun g_dbus_message_new(): CPointer<GDBusMessage>?

@CCall("knifunptr_libgtk3872_g_dbus_message_new_signal")
external fun g_dbus_message_new_signal(@CCall.CString path: String?, @CCall.CString interface_: String?, @CCall.CString signal: String?): CPointer<GDBusMessage>?

@CCall("knifunptr_libgtk3873_g_dbus_message_new_method_call")
external fun g_dbus_message_new_method_call(@CCall.CString name: String?, @CCall.CString path: String?, @CCall.CString interface_: String?, @CCall.CString method: String?): CPointer<GDBusMessage>?

@CCall("knifunptr_libgtk3874_g_dbus_message_new_method_reply")
external fun g_dbus_message_new_method_reply(method_call_message: CValuesRef<GDBusMessage>?): CPointer<GDBusMessage>?

@CCall("knifunptr_libgtk3875_g_dbus_message_new_method_error")
external fun g_dbus_message_new_method_error(method_call_message: CValuesRef<GDBusMessage>?, @CCall.CString error_name: String?, @CCall.CString error_message_format: String?, vararg variadicArguments: Any?): CPointer<GDBusMessage>?

@CCall("knifunptr_libgtk3876_g_dbus_message_new_method_error_valist")
external fun g_dbus_message_new_method_error_valist(method_call_message: CValuesRef<GDBusMessage>?, @CCall.CString error_name: String?, @CCall.CString error_message_format: String?, var_args: platform.posix.va_list?): CPointer<GDBusMessage>?

@CCall("knifunptr_libgtk3877_g_dbus_message_new_method_error_literal")
external fun g_dbus_message_new_method_error_literal(method_call_message: CValuesRef<GDBusMessage>?, @CCall.CString error_name: String?, @CCall.CString error_message: String?): CPointer<GDBusMessage>?

@CCall("knifunptr_libgtk3878_g_dbus_message_print")
external fun g_dbus_message_print(message: CValuesRef<GDBusMessage>?, indent: guint): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3879_g_dbus_message_get_locked")
external fun g_dbus_message_get_locked(message: CValuesRef<GDBusMessage>?): gboolean

@CCall("knifunptr_libgtk3880_g_dbus_message_lock")
external fun g_dbus_message_lock(message: CValuesRef<GDBusMessage>?): Unit

@CCall("knifunptr_libgtk3881_g_dbus_message_copy")
external fun g_dbus_message_copy(message: CValuesRef<GDBusMessage>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusMessage>?

@CCall("knifunptr_libgtk3882_g_dbus_message_get_byte_order")
external fun g_dbus_message_get_byte_order(message: CValuesRef<GDBusMessage>?): GDBusMessageByteOrder

@CCall("knifunptr_libgtk3883_g_dbus_message_set_byte_order")
external fun g_dbus_message_set_byte_order(message: CValuesRef<GDBusMessage>?, byte_order: GDBusMessageByteOrder): Unit

@CCall("knifunptr_libgtk3884_g_dbus_message_get_message_type")
external fun g_dbus_message_get_message_type(message: CValuesRef<GDBusMessage>?): GDBusMessageType

@CCall("knifunptr_libgtk3885_g_dbus_message_set_message_type")
external fun g_dbus_message_set_message_type(message: CValuesRef<GDBusMessage>?, type: GDBusMessageType): Unit

@CCall("knifunptr_libgtk3886_g_dbus_message_get_flags")
external fun g_dbus_message_get_flags(message: CValuesRef<GDBusMessage>?): GDBusMessageFlags

@CCall("knifunptr_libgtk3887_g_dbus_message_set_flags")
external fun g_dbus_message_set_flags(message: CValuesRef<GDBusMessage>?, flags: GDBusMessageFlags): Unit

@CCall("knifunptr_libgtk3888_g_dbus_message_get_serial")
external fun g_dbus_message_get_serial(message: CValuesRef<GDBusMessage>?): guint32

@CCall("knifunptr_libgtk3889_g_dbus_message_set_serial")
external fun g_dbus_message_set_serial(message: CValuesRef<GDBusMessage>?, serial: guint32): Unit

@CCall("knifunptr_libgtk3890_g_dbus_message_get_header")
external fun g_dbus_message_get_header(message: CValuesRef<GDBusMessage>?, header_field: GDBusMessageHeaderField): CPointer<GVariant>?

@CCall("knifunptr_libgtk3891_g_dbus_message_set_header")
external fun g_dbus_message_set_header(message: CValuesRef<GDBusMessage>?, header_field: GDBusMessageHeaderField, value: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_libgtk3892_g_dbus_message_get_header_fields")
external fun g_dbus_message_get_header_fields(message: CValuesRef<GDBusMessage>?): CPointer<gucharVar>?

@CCall("knifunptr_libgtk3893_g_dbus_message_get_body")
external fun g_dbus_message_get_body(message: CValuesRef<GDBusMessage>?): CPointer<GVariant>?

@CCall("knifunptr_libgtk3894_g_dbus_message_set_body")
external fun g_dbus_message_set_body(message: CValuesRef<GDBusMessage>?, body: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_libgtk3895_g_dbus_message_get_unix_fd_list")
external fun g_dbus_message_get_unix_fd_list(message: CValuesRef<GDBusMessage>?): CPointer<GUnixFDList>?

@CCall("knifunptr_libgtk3896_g_dbus_message_set_unix_fd_list")
external fun g_dbus_message_set_unix_fd_list(message: CValuesRef<GDBusMessage>?, fd_list: CValuesRef<GUnixFDList>?): Unit

@CCall("knifunptr_libgtk3897_g_dbus_message_get_reply_serial")
external fun g_dbus_message_get_reply_serial(message: CValuesRef<GDBusMessage>?): guint32

@CCall("knifunptr_libgtk3898_g_dbus_message_set_reply_serial")
external fun g_dbus_message_set_reply_serial(message: CValuesRef<GDBusMessage>?, value: guint32): Unit

@CCall("knifunptr_libgtk3899_g_dbus_message_get_interface")
external fun g_dbus_message_get_interface(message: CValuesRef<GDBusMessage>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3900_g_dbus_message_set_interface")
external fun g_dbus_message_set_interface(message: CValuesRef<GDBusMessage>?, @CCall.CString value: String?): Unit

@CCall("knifunptr_libgtk3901_g_dbus_message_get_member")
external fun g_dbus_message_get_member(message: CValuesRef<GDBusMessage>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3902_g_dbus_message_set_member")
external fun g_dbus_message_set_member(message: CValuesRef<GDBusMessage>?, @CCall.CString value: String?): Unit

@CCall("knifunptr_libgtk3903_g_dbus_message_get_path")
external fun g_dbus_message_get_path(message: CValuesRef<GDBusMessage>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3904_g_dbus_message_set_path")
external fun g_dbus_message_set_path(message: CValuesRef<GDBusMessage>?, @CCall.CString value: String?): Unit

@CCall("knifunptr_libgtk3905_g_dbus_message_get_sender")
external fun g_dbus_message_get_sender(message: CValuesRef<GDBusMessage>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3906_g_dbus_message_set_sender")
external fun g_dbus_message_set_sender(message: CValuesRef<GDBusMessage>?, @CCall.CString value: String?): Unit

@CCall("knifunptr_libgtk3907_g_dbus_message_get_destination")
external fun g_dbus_message_get_destination(message: CValuesRef<GDBusMessage>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3908_g_dbus_message_set_destination")
external fun g_dbus_message_set_destination(message: CValuesRef<GDBusMessage>?, @CCall.CString value: String?): Unit

@CCall("knifunptr_libgtk3909_g_dbus_message_get_error_name")
external fun g_dbus_message_get_error_name(message: CValuesRef<GDBusMessage>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3910_g_dbus_message_set_error_name")
external fun g_dbus_message_set_error_name(message: CValuesRef<GDBusMessage>?, @CCall.CString value: String?): Unit

@CCall("knifunptr_libgtk3911_g_dbus_message_get_signature")
external fun g_dbus_message_get_signature(message: CValuesRef<GDBusMessage>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3912_g_dbus_message_set_signature")
external fun g_dbus_message_set_signature(message: CValuesRef<GDBusMessage>?, @CCall.CString value: String?): Unit

@CCall("knifunptr_libgtk3913_g_dbus_message_get_num_unix_fds")
external fun g_dbus_message_get_num_unix_fds(message: CValuesRef<GDBusMessage>?): guint32

@CCall("knifunptr_libgtk3914_g_dbus_message_set_num_unix_fds")
external fun g_dbus_message_set_num_unix_fds(message: CValuesRef<GDBusMessage>?, value: guint32): Unit

@CCall("knifunptr_libgtk3915_g_dbus_message_get_arg0")
external fun g_dbus_message_get_arg0(message: CValuesRef<GDBusMessage>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3916_g_dbus_message_new_from_blob")
external fun g_dbus_message_new_from_blob(blob: CValuesRef<gucharVar>?, blob_len: gsize, capabilities: GDBusCapabilityFlags, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusMessage>?

@CCall("knifunptr_libgtk3917_g_dbus_message_bytes_needed")
external fun g_dbus_message_bytes_needed(blob: CValuesRef<gucharVar>?, blob_len: gsize, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_libgtk3918_g_dbus_message_to_blob")
external fun g_dbus_message_to_blob(message: CValuesRef<GDBusMessage>?, out_size: CValuesRef<gsizeVar>?, capabilities: GDBusCapabilityFlags, error: CValuesRef<CPointerVar<GError>>?): CPointer<gucharVar>?

@CCall("knifunptr_libgtk3919_g_dbus_message_to_gerror")
external fun g_dbus_message_to_gerror(message: CValuesRef<GDBusMessage>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk3920_g_dbus_method_invocation_get_type")
external fun g_dbus_method_invocation_get_type(): GType

@CCall("knifunptr_libgtk3921_g_dbus_method_invocation_get_sender")
external fun g_dbus_method_invocation_get_sender(invocation: CValuesRef<GDBusMethodInvocation>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3922_g_dbus_method_invocation_get_object_path")
external fun g_dbus_method_invocation_get_object_path(invocation: CValuesRef<GDBusMethodInvocation>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3923_g_dbus_method_invocation_get_interface_name")
external fun g_dbus_method_invocation_get_interface_name(invocation: CValuesRef<GDBusMethodInvocation>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3924_g_dbus_method_invocation_get_method_name")
external fun g_dbus_method_invocation_get_method_name(invocation: CValuesRef<GDBusMethodInvocation>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3925_g_dbus_method_invocation_get_method_info")
external fun g_dbus_method_invocation_get_method_info(invocation: CValuesRef<GDBusMethodInvocation>?): CPointer<GDBusMethodInfo>?

@CCall("knifunptr_libgtk3926_g_dbus_method_invocation_get_property_info")
external fun g_dbus_method_invocation_get_property_info(invocation: CValuesRef<GDBusMethodInvocation>?): CPointer<GDBusPropertyInfo>?

@CCall("knifunptr_libgtk3927_g_dbus_method_invocation_get_connection")
external fun g_dbus_method_invocation_get_connection(invocation: CValuesRef<GDBusMethodInvocation>?): CPointer<GDBusConnection>?

@CCall("knifunptr_libgtk3928_g_dbus_method_invocation_get_message")
external fun g_dbus_method_invocation_get_message(invocation: CValuesRef<GDBusMethodInvocation>?): CPointer<GDBusMessage>?

@CCall("knifunptr_libgtk3929_g_dbus_method_invocation_get_parameters")
external fun g_dbus_method_invocation_get_parameters(invocation: CValuesRef<GDBusMethodInvocation>?): CPointer<GVariant>?

@CCall("knifunptr_libgtk3930_g_dbus_method_invocation_get_user_data")
external fun g_dbus_method_invocation_get_user_data(invocation: CValuesRef<GDBusMethodInvocation>?): gpointer?

@CCall("knifunptr_libgtk3931_g_dbus_method_invocation_return_value")
external fun g_dbus_method_invocation_return_value(invocation: CValuesRef<GDBusMethodInvocation>?, parameters: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_libgtk3932_g_dbus_method_invocation_return_value_with_unix_fd_list")
external fun g_dbus_method_invocation_return_value_with_unix_fd_list(invocation: CValuesRef<GDBusMethodInvocation>?, parameters: CValuesRef<GVariant>?, fd_list: CValuesRef<GUnixFDList>?): Unit

@CCall("knifunptr_libgtk3933_g_dbus_method_invocation_return_error")
external fun g_dbus_method_invocation_return_error(invocation: CValuesRef<GDBusMethodInvocation>?, domain: GQuark, code: gint, @CCall.CString format: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk3934_g_dbus_method_invocation_return_error_valist")
external fun g_dbus_method_invocation_return_error_valist(invocation: CValuesRef<GDBusMethodInvocation>?, domain: GQuark, code: gint, @CCall.CString format: String?, var_args: platform.posix.va_list?): Unit

@CCall("knifunptr_libgtk3935_g_dbus_method_invocation_return_error_literal")
external fun g_dbus_method_invocation_return_error_literal(invocation: CValuesRef<GDBusMethodInvocation>?, domain: GQuark, code: gint, @CCall.CString message: String?): Unit

@CCall("knifunptr_libgtk3936_g_dbus_method_invocation_return_gerror")
external fun g_dbus_method_invocation_return_gerror(invocation: CValuesRef<GDBusMethodInvocation>?, error: CValuesRef<GError>?): Unit

@CCall("knifunptr_libgtk3937_g_dbus_method_invocation_take_error")
external fun g_dbus_method_invocation_take_error(invocation: CValuesRef<GDBusMethodInvocation>?, error: CValuesRef<GError>?): Unit

@CCall("knifunptr_libgtk3938_g_dbus_method_invocation_return_dbus_error")
external fun g_dbus_method_invocation_return_dbus_error(invocation: CValuesRef<GDBusMethodInvocation>?, @CCall.CString error_name: String?, @CCall.CString error_message: String?): Unit

@CCall("knifunptr_libgtk3939_g_bus_own_name")
external fun g_bus_own_name(bus_type: GBusType, @CCall.CString name: String?, flags: GBusNameOwnerFlags, bus_acquired_handler: GBusAcquiredCallback?, name_acquired_handler: GBusNameAcquiredCallback?, name_lost_handler: GBusNameLostCallback?, user_data: gpointer?, user_data_free_func: GDestroyNotify?): guint

@CCall("knifunptr_libgtk3940_g_bus_own_name_on_connection")
external fun g_bus_own_name_on_connection(connection: CValuesRef<GDBusConnection>?, @CCall.CString name: String?, flags: GBusNameOwnerFlags, name_acquired_handler: GBusNameAcquiredCallback?, name_lost_handler: GBusNameLostCallback?, user_data: gpointer?, user_data_free_func: GDestroyNotify?): guint

@CCall("knifunptr_libgtk3941_g_bus_own_name_with_closures")
external fun g_bus_own_name_with_closures(bus_type: GBusType, @CCall.CString name: String?, flags: GBusNameOwnerFlags, bus_acquired_closure: CValuesRef<GClosure>?, name_acquired_closure: CValuesRef<GClosure>?, name_lost_closure: CValuesRef<GClosure>?): guint

@CCall("knifunptr_libgtk3942_g_bus_own_name_on_connection_with_closures")
external fun g_bus_own_name_on_connection_with_closures(connection: CValuesRef<GDBusConnection>?, @CCall.CString name: String?, flags: GBusNameOwnerFlags, name_acquired_closure: CValuesRef<GClosure>?, name_lost_closure: CValuesRef<GClosure>?): guint

@CCall("knifunptr_libgtk3943_g_bus_unown_name")
external fun g_bus_unown_name(owner_id: guint): Unit

@CCall("knifunptr_libgtk3944_g_bus_watch_name")
external fun g_bus_watch_name(bus_type: GBusType, @CCall.CString name: String?, flags: GBusNameWatcherFlags, name_appeared_handler: GBusNameAppearedCallback?, name_vanished_handler: GBusNameVanishedCallback?, user_data: gpointer?, user_data_free_func: GDestroyNotify?): guint

@CCall("knifunptr_libgtk3945_g_bus_watch_name_on_connection")
external fun g_bus_watch_name_on_connection(connection: CValuesRef<GDBusConnection>?, @CCall.CString name: String?, flags: GBusNameWatcherFlags, name_appeared_handler: GBusNameAppearedCallback?, name_vanished_handler: GBusNameVanishedCallback?, user_data: gpointer?, user_data_free_func: GDestroyNotify?): guint

@CCall("knifunptr_libgtk3946_g_bus_watch_name_with_closures")
external fun g_bus_watch_name_with_closures(bus_type: GBusType, @CCall.CString name: String?, flags: GBusNameWatcherFlags, name_appeared_closure: CValuesRef<GClosure>?, name_vanished_closure: CValuesRef<GClosure>?): guint

@CCall("knifunptr_libgtk3947_g_bus_watch_name_on_connection_with_closures")
external fun g_bus_watch_name_on_connection_with_closures(connection: CValuesRef<GDBusConnection>?, @CCall.CString name: String?, flags: GBusNameWatcherFlags, name_appeared_closure: CValuesRef<GClosure>?, name_vanished_closure: CValuesRef<GClosure>?): guint

@CCall("knifunptr_libgtk3948_g_bus_unwatch_name")
external fun g_bus_unwatch_name(watcher_id: guint): Unit

@CCall("knifunptr_libgtk3949_g_dbus_proxy_get_type")
external fun g_dbus_proxy_get_type(): GType

@CCall("knifunptr_libgtk3950_g_dbus_proxy_new")
external fun g_dbus_proxy_new(connection: CValuesRef<GDBusConnection>?, flags: GDBusProxyFlags, info: CValuesRef<GDBusInterfaceInfo>?, @CCall.CString name: String?, @CCall.CString object_path: String?, @CCall.CString interface_name: String?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk3951_g_dbus_proxy_new_finish")
external fun g_dbus_proxy_new_finish(res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusProxy>?

@CCall("knifunptr_libgtk3952_g_dbus_proxy_new_sync")
external fun g_dbus_proxy_new_sync(connection: CValuesRef<GDBusConnection>?, flags: GDBusProxyFlags, info: CValuesRef<GDBusInterfaceInfo>?, @CCall.CString name: String?, @CCall.CString object_path: String?, @CCall.CString interface_name: String?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusProxy>?

@CCall("knifunptr_libgtk3953_g_dbus_proxy_new_for_bus")
external fun g_dbus_proxy_new_for_bus(bus_type: GBusType, flags: GDBusProxyFlags, info: CValuesRef<GDBusInterfaceInfo>?, @CCall.CString name: String?, @CCall.CString object_path: String?, @CCall.CString interface_name: String?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk3954_g_dbus_proxy_new_for_bus_finish")
external fun g_dbus_proxy_new_for_bus_finish(res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusProxy>?

@CCall("knifunptr_libgtk3955_g_dbus_proxy_new_for_bus_sync")
external fun g_dbus_proxy_new_for_bus_sync(bus_type: GBusType, flags: GDBusProxyFlags, info: CValuesRef<GDBusInterfaceInfo>?, @CCall.CString name: String?, @CCall.CString object_path: String?, @CCall.CString interface_name: String?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusProxy>?

@CCall("knifunptr_libgtk3956_g_dbus_proxy_get_connection")
external fun g_dbus_proxy_get_connection(proxy: CValuesRef<GDBusProxy>?): CPointer<GDBusConnection>?

@CCall("knifunptr_libgtk3957_g_dbus_proxy_get_flags")
external fun g_dbus_proxy_get_flags(proxy: CValuesRef<GDBusProxy>?): GDBusProxyFlags

@CCall("knifunptr_libgtk3958_g_dbus_proxy_get_name")
external fun g_dbus_proxy_get_name(proxy: CValuesRef<GDBusProxy>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3959_g_dbus_proxy_get_name_owner")
external fun g_dbus_proxy_get_name_owner(proxy: CValuesRef<GDBusProxy>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3960_g_dbus_proxy_get_object_path")
external fun g_dbus_proxy_get_object_path(proxy: CValuesRef<GDBusProxy>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3961_g_dbus_proxy_get_interface_name")
external fun g_dbus_proxy_get_interface_name(proxy: CValuesRef<GDBusProxy>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3962_g_dbus_proxy_get_default_timeout")
external fun g_dbus_proxy_get_default_timeout(proxy: CValuesRef<GDBusProxy>?): gint

@CCall("knifunptr_libgtk3963_g_dbus_proxy_set_default_timeout")
external fun g_dbus_proxy_set_default_timeout(proxy: CValuesRef<GDBusProxy>?, timeout_msec: gint): Unit

@CCall("knifunptr_libgtk3964_g_dbus_proxy_get_interface_info")
external fun g_dbus_proxy_get_interface_info(proxy: CValuesRef<GDBusProxy>?): CPointer<GDBusInterfaceInfo>?

@CCall("knifunptr_libgtk3965_g_dbus_proxy_set_interface_info")
external fun g_dbus_proxy_set_interface_info(proxy: CValuesRef<GDBusProxy>?, info: CValuesRef<GDBusInterfaceInfo>?): Unit

@CCall("knifunptr_libgtk3966_g_dbus_proxy_get_cached_property")
external fun g_dbus_proxy_get_cached_property(proxy: CValuesRef<GDBusProxy>?, @CCall.CString property_name: String?): CPointer<GVariant>?

@CCall("knifunptr_libgtk3967_g_dbus_proxy_set_cached_property")
external fun g_dbus_proxy_set_cached_property(proxy: CValuesRef<GDBusProxy>?, @CCall.CString property_name: String?, value: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_libgtk3968_g_dbus_proxy_get_cached_property_names")
external fun g_dbus_proxy_get_cached_property_names(proxy: CValuesRef<GDBusProxy>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_libgtk3969_g_dbus_proxy_call")
external fun g_dbus_proxy_call(proxy: CValuesRef<GDBusProxy>?, @CCall.CString method_name: String?, parameters: CValuesRef<GVariant>?, flags: GDBusCallFlags, timeout_msec: gint, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk3970_g_dbus_proxy_call_finish")
external fun g_dbus_proxy_call_finish(proxy: CValuesRef<GDBusProxy>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GVariant>?

@CCall("knifunptr_libgtk3971_g_dbus_proxy_call_sync")
external fun g_dbus_proxy_call_sync(proxy: CValuesRef<GDBusProxy>?, @CCall.CString method_name: String?, parameters: CValuesRef<GVariant>?, flags: GDBusCallFlags, timeout_msec: gint, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GVariant>?

@CCall("knifunptr_libgtk3972_g_dbus_proxy_call_with_unix_fd_list")
external fun g_dbus_proxy_call_with_unix_fd_list(proxy: CValuesRef<GDBusProxy>?, @CCall.CString method_name: String?, parameters: CValuesRef<GVariant>?, flags: GDBusCallFlags, timeout_msec: gint, fd_list: CValuesRef<GUnixFDList>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk3973_g_dbus_proxy_call_with_unix_fd_list_finish")
external fun g_dbus_proxy_call_with_unix_fd_list_finish(proxy: CValuesRef<GDBusProxy>?, out_fd_list: CValuesRef<CPointerVar<GUnixFDList>>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GVariant>?

@CCall("knifunptr_libgtk3974_g_dbus_proxy_call_with_unix_fd_list_sync")
external fun g_dbus_proxy_call_with_unix_fd_list_sync(proxy: CValuesRef<GDBusProxy>?, @CCall.CString method_name: String?, parameters: CValuesRef<GVariant>?, flags: GDBusCallFlags, timeout_msec: gint, fd_list: CValuesRef<GUnixFDList>?, out_fd_list: CValuesRef<CPointerVar<GUnixFDList>>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GVariant>?

@CCall("knifunptr_libgtk3975_g_dbus_server_get_type")
external fun g_dbus_server_get_type(): GType

@CCall("knifunptr_libgtk3976_g_dbus_server_new_sync")
external fun g_dbus_server_new_sync(@CCall.CString address: String?, flags: GDBusServerFlags, @CCall.CString guid: String?, observer: CValuesRef<GDBusAuthObserver>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusServer>?

@CCall("knifunptr_libgtk3977_g_dbus_server_get_client_address")
external fun g_dbus_server_get_client_address(server: CValuesRef<GDBusServer>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3978_g_dbus_server_get_guid")
external fun g_dbus_server_get_guid(server: CValuesRef<GDBusServer>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3979_g_dbus_server_get_flags")
external fun g_dbus_server_get_flags(server: CValuesRef<GDBusServer>?): GDBusServerFlags

@CCall("knifunptr_libgtk3980_g_dbus_server_start")
external fun g_dbus_server_start(server: CValuesRef<GDBusServer>?): Unit

@CCall("knifunptr_libgtk3981_g_dbus_server_stop")
external fun g_dbus_server_stop(server: CValuesRef<GDBusServer>?): Unit

@CCall("knifunptr_libgtk3982_g_dbus_server_is_active")
external fun g_dbus_server_is_active(server: CValuesRef<GDBusServer>?): gboolean

@CCall("knifunptr_libgtk3983_g_dbus_is_guid")
external fun g_dbus_is_guid(@CCall.CString string: String?): gboolean

@CCall("knifunptr_libgtk3984_g_dbus_generate_guid")
external fun g_dbus_generate_guid(): CPointer<gcharVar>?

@CCall("knifunptr_libgtk3985_g_dbus_is_name")
external fun g_dbus_is_name(@CCall.CString string: String?): gboolean

@CCall("knifunptr_libgtk3986_g_dbus_is_unique_name")
external fun g_dbus_is_unique_name(@CCall.CString string: String?): gboolean

@CCall("knifunptr_libgtk3987_g_dbus_is_member_name")
external fun g_dbus_is_member_name(@CCall.CString string: String?): gboolean

@CCall("knifunptr_libgtk3988_g_dbus_is_interface_name")
external fun g_dbus_is_interface_name(@CCall.CString string: String?): gboolean

@CCall("knifunptr_libgtk3989_g_dbus_gvariant_to_gvalue")
external fun g_dbus_gvariant_to_gvalue(value: CValuesRef<GVariant>?, out_gvalue: CValuesRef<GValue>?): Unit

@CCall("knifunptr_libgtk3990_g_dbus_gvalue_to_gvariant")
external fun g_dbus_gvalue_to_gvariant(gvalue: CValuesRef<GValue>?, type: CValuesRef<GVariantType>?): CPointer<GVariant>?

@CCall("knifunptr_libgtk3991_g_drive_get_type")
external fun g_drive_get_type(): GType

@CCall("knifunptr_libgtk3992_g_drive_get_name")
external fun g_drive_get_name(drive: CValuesRef<GDrive>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk3993_g_drive_get_icon")
external fun g_drive_get_icon(drive: CValuesRef<GDrive>?): CPointer<GIcon>?

@CCall("knifunptr_libgtk3994_g_drive_get_symbolic_icon")
external fun g_drive_get_symbolic_icon(drive: CValuesRef<GDrive>?): CPointer<GIcon>?

@CCall("knifunptr_libgtk3995_g_drive_has_volumes")
external fun g_drive_has_volumes(drive: CValuesRef<GDrive>?): gboolean

@CCall("knifunptr_libgtk3996_g_drive_get_volumes")
external fun g_drive_get_volumes(drive: CValuesRef<GDrive>?): CPointer<GList>?

@CCall("knifunptr_libgtk3997_g_drive_is_removable")
external fun g_drive_is_removable(drive: CValuesRef<GDrive>?): gboolean

@CCall("knifunptr_libgtk3998_g_drive_is_media_removable")
external fun g_drive_is_media_removable(drive: CValuesRef<GDrive>?): gboolean

@CCall("knifunptr_libgtk3999_g_drive_has_media")
external fun g_drive_has_media(drive: CValuesRef<GDrive>?): gboolean

@CCall("knifunptr_libgtk31000_g_drive_is_media_check_automatic")
external fun g_drive_is_media_check_automatic(drive: CValuesRef<GDrive>?): gboolean

@CCall("knifunptr_libgtk31001_g_drive_can_poll_for_media")
external fun g_drive_can_poll_for_media(drive: CValuesRef<GDrive>?): gboolean

@CCall("knifunptr_libgtk31002_g_drive_can_eject")
external fun g_drive_can_eject(drive: CValuesRef<GDrive>?): gboolean

@CCall("knifunptr_libgtk31003_g_drive_eject")
external fun g_drive_eject(drive: CValuesRef<GDrive>?, flags: GMountUnmountFlags, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31004_g_drive_eject_finish")
external fun g_drive_eject_finish(drive: CValuesRef<GDrive>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31005_g_drive_poll_for_media")
external fun g_drive_poll_for_media(drive: CValuesRef<GDrive>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31006_g_drive_poll_for_media_finish")
external fun g_drive_poll_for_media_finish(drive: CValuesRef<GDrive>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31007_g_drive_get_identifier")
external fun g_drive_get_identifier(drive: CValuesRef<GDrive>?, @CCall.CString kind: String?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk31008_g_drive_enumerate_identifiers")
external fun g_drive_enumerate_identifiers(drive: CValuesRef<GDrive>?): CPointer<CPointerVar<ByteVar>>?

@CCall("knifunptr_libgtk31009_g_drive_get_start_stop_type")
external fun g_drive_get_start_stop_type(drive: CValuesRef<GDrive>?): GDriveStartStopType

@CCall("knifunptr_libgtk31010_g_drive_can_start")
external fun g_drive_can_start(drive: CValuesRef<GDrive>?): gboolean

@CCall("knifunptr_libgtk31011_g_drive_can_start_degraded")
external fun g_drive_can_start_degraded(drive: CValuesRef<GDrive>?): gboolean

@CCall("knifunptr_libgtk31012_g_drive_start")
external fun g_drive_start(drive: CValuesRef<GDrive>?, flags: GDriveStartFlags, mount_operation: CValuesRef<GMountOperation>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31013_g_drive_start_finish")
external fun g_drive_start_finish(drive: CValuesRef<GDrive>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31014_g_drive_can_stop")
external fun g_drive_can_stop(drive: CValuesRef<GDrive>?): gboolean

@CCall("knifunptr_libgtk31015_g_drive_stop")
external fun g_drive_stop(drive: CValuesRef<GDrive>?, flags: GMountUnmountFlags, mount_operation: CValuesRef<GMountOperation>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31016_g_drive_stop_finish")
external fun g_drive_stop_finish(drive: CValuesRef<GDrive>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31017_g_drive_eject_with_operation")
external fun g_drive_eject_with_operation(drive: CValuesRef<GDrive>?, flags: GMountUnmountFlags, mount_operation: CValuesRef<GMountOperation>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31018_g_drive_eject_with_operation_finish")
external fun g_drive_eject_with_operation_finish(drive: CValuesRef<GDrive>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31019_g_drive_get_sort_key")
external fun g_drive_get_sort_key(drive: CValuesRef<GDrive>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk31020_g_dtls_connection_get_type")
external fun g_dtls_connection_get_type(): GType

@CCall("knifunptr_libgtk31021_g_dtls_connection_set_database")
external fun g_dtls_connection_set_database(conn: CValuesRef<GDtlsConnection>?, database: CValuesRef<GTlsDatabase>?): Unit

@CCall("knifunptr_libgtk31022_g_dtls_connection_get_database")
external fun g_dtls_connection_get_database(conn: CValuesRef<GDtlsConnection>?): CPointer<GTlsDatabase>?

@CCall("knifunptr_libgtk31023_g_dtls_connection_set_certificate")
external fun g_dtls_connection_set_certificate(conn: CValuesRef<GDtlsConnection>?, certificate: CValuesRef<GTlsCertificate>?): Unit

@CCall("knifunptr_libgtk31024_g_dtls_connection_get_certificate")
external fun g_dtls_connection_get_certificate(conn: CValuesRef<GDtlsConnection>?): CPointer<GTlsCertificate>?

@CCall("knifunptr_libgtk31025_g_dtls_connection_set_interaction")
external fun g_dtls_connection_set_interaction(conn: CValuesRef<GDtlsConnection>?, interaction: CValuesRef<GTlsInteraction>?): Unit

@CCall("knifunptr_libgtk31026_g_dtls_connection_get_interaction")
external fun g_dtls_connection_get_interaction(conn: CValuesRef<GDtlsConnection>?): CPointer<GTlsInteraction>?

@CCall("knifunptr_libgtk31027_g_dtls_connection_get_peer_certificate")
external fun g_dtls_connection_get_peer_certificate(conn: CValuesRef<GDtlsConnection>?): CPointer<GTlsCertificate>?

@CCall("knifunptr_libgtk31028_g_dtls_connection_get_peer_certificate_errors")
external fun g_dtls_connection_get_peer_certificate_errors(conn: CValuesRef<GDtlsConnection>?): GTlsCertificateFlags

@CCall("knifunptr_libgtk31029_g_dtls_connection_set_require_close_notify")
external fun g_dtls_connection_set_require_close_notify(conn: CValuesRef<GDtlsConnection>?, require_close_notify: gboolean): Unit

@CCall("knifunptr_libgtk31030_g_dtls_connection_get_require_close_notify")
external fun g_dtls_connection_get_require_close_notify(conn: CValuesRef<GDtlsConnection>?): gboolean

@CCall("knifunptr_libgtk31031_g_dtls_connection_set_rehandshake_mode")
external fun g_dtls_connection_set_rehandshake_mode(conn: CValuesRef<GDtlsConnection>?, mode: GTlsRehandshakeMode): Unit

@CCall("knifunptr_libgtk31032_g_dtls_connection_get_rehandshake_mode")
external fun g_dtls_connection_get_rehandshake_mode(conn: CValuesRef<GDtlsConnection>?): GTlsRehandshakeMode

@CCall("knifunptr_libgtk31033_g_dtls_connection_handshake")
external fun g_dtls_connection_handshake(conn: CValuesRef<GDtlsConnection>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31034_g_dtls_connection_handshake_async")
external fun g_dtls_connection_handshake_async(conn: CValuesRef<GDtlsConnection>?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31035_g_dtls_connection_handshake_finish")
external fun g_dtls_connection_handshake_finish(conn: CValuesRef<GDtlsConnection>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31036_g_dtls_connection_shutdown")
external fun g_dtls_connection_shutdown(conn: CValuesRef<GDtlsConnection>?, shutdown_read: gboolean, shutdown_write: gboolean, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31037_g_dtls_connection_shutdown_async")
external fun g_dtls_connection_shutdown_async(conn: CValuesRef<GDtlsConnection>?, shutdown_read: gboolean, shutdown_write: gboolean, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31038_g_dtls_connection_shutdown_finish")
external fun g_dtls_connection_shutdown_finish(conn: CValuesRef<GDtlsConnection>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31039_g_dtls_connection_close")
external fun g_dtls_connection_close(conn: CValuesRef<GDtlsConnection>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31040_g_dtls_connection_close_async")
external fun g_dtls_connection_close_async(conn: CValuesRef<GDtlsConnection>?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31041_g_dtls_connection_close_finish")
external fun g_dtls_connection_close_finish(conn: CValuesRef<GDtlsConnection>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31042_g_dtls_connection_emit_accept_certificate")
external fun g_dtls_connection_emit_accept_certificate(conn: CValuesRef<GDtlsConnection>?, peer_cert: CValuesRef<GTlsCertificate>?, errors: GTlsCertificateFlags): gboolean

@CCall("knifunptr_libgtk31043_g_dtls_client_connection_get_type")
external fun g_dtls_client_connection_get_type(): GType

@CCall("knifunptr_libgtk31044_g_dtls_client_connection_new")
external fun g_dtls_client_connection_new(base_socket: CValuesRef<GDatagramBased>?, server_identity: CValuesRef<GSocketConnectable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDatagramBased>?

@CCall("knifunptr_libgtk31045_g_dtls_client_connection_get_validation_flags")
external fun g_dtls_client_connection_get_validation_flags(conn: CValuesRef<GDtlsClientConnection>?): GTlsCertificateFlags

@CCall("knifunptr_libgtk31046_g_dtls_client_connection_set_validation_flags")
external fun g_dtls_client_connection_set_validation_flags(conn: CValuesRef<GDtlsClientConnection>?, flags: GTlsCertificateFlags): Unit

@CCall("knifunptr_libgtk31047_g_dtls_client_connection_get_server_identity")
external fun g_dtls_client_connection_get_server_identity(conn: CValuesRef<GDtlsClientConnection>?): CPointer<GSocketConnectable>?

@CCall("knifunptr_libgtk31048_g_dtls_client_connection_set_server_identity")
external fun g_dtls_client_connection_set_server_identity(conn: CValuesRef<GDtlsClientConnection>?, identity: CValuesRef<GSocketConnectable>?): Unit

@CCall("knifunptr_libgtk31049_g_dtls_client_connection_get_accepted_cas")
external fun g_dtls_client_connection_get_accepted_cas(conn: CValuesRef<GDtlsClientConnection>?): CPointer<GList>?

@CCall("knifunptr_libgtk31050_g_dtls_server_connection_get_type")
external fun g_dtls_server_connection_get_type(): GType

@CCall("knifunptr_libgtk31051_g_dtls_server_connection_new")
external fun g_dtls_server_connection_new(base_socket: CValuesRef<GDatagramBased>?, certificate: CValuesRef<GTlsCertificate>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDatagramBased>?

@CCall("knifunptr_libgtk31052_g_icon_get_type")
external fun g_icon_get_type(): GType

@CCall("knifunptr_libgtk31053_g_icon_hash")
external fun g_icon_hash(icon: gconstpointer?): guint

@CCall("knifunptr_libgtk31054_g_icon_equal")
external fun g_icon_equal(icon1: CValuesRef<GIcon>?, icon2: CValuesRef<GIcon>?): gboolean

@CCall("knifunptr_libgtk31055_g_icon_to_string")
external fun g_icon_to_string(icon: CValuesRef<GIcon>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk31056_g_icon_new_for_string")
external fun g_icon_new_for_string(@CCall.CString str: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GIcon>?

@CCall("knifunptr_libgtk31057_g_icon_serialize")
external fun g_icon_serialize(icon: CValuesRef<GIcon>?): CPointer<GVariant>?

@CCall("knifunptr_libgtk31058_g_icon_deserialize")
external fun g_icon_deserialize(value: CValuesRef<GVariant>?): CPointer<GIcon>?

@CCall("knifunptr_libgtk31059_g_emblem_get_type")
external fun g_emblem_get_type(): GType

@CCall("knifunptr_libgtk31060_g_emblem_new")
external fun g_emblem_new(icon: CValuesRef<GIcon>?): CPointer<GEmblem>?

@CCall("knifunptr_libgtk31061_g_emblem_new_with_origin")
external fun g_emblem_new_with_origin(icon: CValuesRef<GIcon>?, origin: GEmblemOrigin): CPointer<GEmblem>?

@CCall("knifunptr_libgtk31062_g_emblem_get_icon")
external fun g_emblem_get_icon(emblem: CValuesRef<GEmblem>?): CPointer<GIcon>?

@CCall("knifunptr_libgtk31063_g_emblem_get_origin")
external fun g_emblem_get_origin(emblem: CValuesRef<GEmblem>?): GEmblemOrigin

@CCall("knifunptr_libgtk31064_g_emblemed_icon_get_type")
external fun g_emblemed_icon_get_type(): GType

@CCall("knifunptr_libgtk31065_g_emblemed_icon_new")
external fun g_emblemed_icon_new(icon: CValuesRef<GIcon>?, emblem: CValuesRef<GEmblem>?): CPointer<GIcon>?

@CCall("knifunptr_libgtk31066_g_emblemed_icon_get_icon")
external fun g_emblemed_icon_get_icon(emblemed: CValuesRef<GEmblemedIcon>?): CPointer<GIcon>?

@CCall("knifunptr_libgtk31067_g_emblemed_icon_get_emblems")
external fun g_emblemed_icon_get_emblems(emblemed: CValuesRef<GEmblemedIcon>?): CPointer<GList>?

@CCall("knifunptr_libgtk31068_g_emblemed_icon_add_emblem")
external fun g_emblemed_icon_add_emblem(emblemed: CValuesRef<GEmblemedIcon>?, emblem: CValuesRef<GEmblem>?): Unit

@CCall("knifunptr_libgtk31069_g_emblemed_icon_clear_emblems")
external fun g_emblemed_icon_clear_emblems(emblemed: CValuesRef<GEmblemedIcon>?): Unit

@CCall("knifunptr_libgtk31070_g_file_attribute_info_list_get_type")
external fun g_file_attribute_info_list_get_type(): GType

@CCall("knifunptr_libgtk31071_g_file_attribute_info_list_new")
external fun g_file_attribute_info_list_new(): CPointer<GFileAttributeInfoList>?

@CCall("knifunptr_libgtk31072_g_file_attribute_info_list_ref")
external fun g_file_attribute_info_list_ref(list: CValuesRef<GFileAttributeInfoList>?): CPointer<GFileAttributeInfoList>?

@CCall("knifunptr_libgtk31073_g_file_attribute_info_list_unref")
external fun g_file_attribute_info_list_unref(list: CValuesRef<GFileAttributeInfoList>?): Unit

@CCall("knifunptr_libgtk31074_g_file_attribute_info_list_dup")
external fun g_file_attribute_info_list_dup(list: CValuesRef<GFileAttributeInfoList>?): CPointer<GFileAttributeInfoList>?

@CCall("knifunptr_libgtk31075_g_file_attribute_info_list_lookup")
external fun g_file_attribute_info_list_lookup(list: CValuesRef<GFileAttributeInfoList>?, @CCall.CString name: String?): CPointer<GFileAttributeInfo>?

@CCall("knifunptr_libgtk31076_g_file_attribute_info_list_add")
external fun g_file_attribute_info_list_add(list: CValuesRef<GFileAttributeInfoList>?, @CCall.CString name: String?, type: GFileAttributeType, flags: GFileAttributeInfoFlags): Unit

@CCall("knifunptr_libgtk31077_g_file_enumerator_get_type")
external fun g_file_enumerator_get_type(): GType

@CCall("knifunptr_libgtk31078_g_file_enumerator_next_file")
external fun g_file_enumerator_next_file(enumerator: CValuesRef<GFileEnumerator>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileInfo>?

@CCall("knifunptr_libgtk31079_g_file_enumerator_close")
external fun g_file_enumerator_close(enumerator: CValuesRef<GFileEnumerator>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31080_g_file_enumerator_next_files_async")
external fun g_file_enumerator_next_files_async(enumerator: CValuesRef<GFileEnumerator>?, num_files: Int, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31081_g_file_enumerator_next_files_finish")
external fun g_file_enumerator_next_files_finish(enumerator: CValuesRef<GFileEnumerator>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GList>?

@CCall("knifunptr_libgtk31082_g_file_enumerator_close_async")
external fun g_file_enumerator_close_async(enumerator: CValuesRef<GFileEnumerator>?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31083_g_file_enumerator_close_finish")
external fun g_file_enumerator_close_finish(enumerator: CValuesRef<GFileEnumerator>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31084_g_file_enumerator_is_closed")
external fun g_file_enumerator_is_closed(enumerator: CValuesRef<GFileEnumerator>?): gboolean

@CCall("knifunptr_libgtk31085_g_file_enumerator_has_pending")
external fun g_file_enumerator_has_pending(enumerator: CValuesRef<GFileEnumerator>?): gboolean

@CCall("knifunptr_libgtk31086_g_file_enumerator_set_pending")
external fun g_file_enumerator_set_pending(enumerator: CValuesRef<GFileEnumerator>?, pending: gboolean): Unit

@CCall("knifunptr_libgtk31087_g_file_enumerator_get_container")
external fun g_file_enumerator_get_container(enumerator: CValuesRef<GFileEnumerator>?): CPointer<GFile>?

@CCall("knifunptr_libgtk31088_g_file_enumerator_get_child")
external fun g_file_enumerator_get_child(enumerator: CValuesRef<GFileEnumerator>?, info: CValuesRef<GFileInfo>?): CPointer<GFile>?

@CCall("knifunptr_libgtk31089_g_file_enumerator_iterate")
external fun g_file_enumerator_iterate(direnum: CValuesRef<GFileEnumerator>?, out_info: CValuesRef<CPointerVar<GFileInfo>>?, out_child: CValuesRef<CPointerVar<GFile>>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31090_g_file_get_type")
external fun g_file_get_type(): GType

@CCall("knifunptr_libgtk31091_g_file_new_for_path")
external fun g_file_new_for_path(@CCall.CString path: String?): CPointer<GFile>?

@CCall("knifunptr_libgtk31092_g_file_new_for_uri")
external fun g_file_new_for_uri(@CCall.CString uri: String?): CPointer<GFile>?

@CCall("knifunptr_libgtk31093_g_file_new_for_commandline_arg")
external fun g_file_new_for_commandline_arg(@CCall.CString arg: String?): CPointer<GFile>?

@CCall("knifunptr_libgtk31094_g_file_new_for_commandline_arg_and_cwd")
external fun g_file_new_for_commandline_arg_and_cwd(@CCall.CString arg: String?, @CCall.CString cwd: String?): CPointer<GFile>?

@CCall("knifunptr_libgtk31095_g_file_new_tmp")
external fun g_file_new_tmp(@CCall.CString tmpl: String?, iostream: CValuesRef<CPointerVar<GFileIOStream>>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFile>?

@CCall("knifunptr_libgtk31096_g_file_parse_name")
external fun g_file_parse_name(@CCall.CString parse_name: String?): CPointer<GFile>?

@CCall("knifunptr_libgtk31097_g_file_new_build_filename")
external fun g_file_new_build_filename(@CCall.CString first_element: String?, vararg variadicArguments: Any?): CPointer<GFile>?

@CCall("knifunptr_libgtk31098_g_file_dup")
external fun g_file_dup(file: CValuesRef<GFile>?): CPointer<GFile>?

@CCall("knifunptr_libgtk31099_g_file_hash")
external fun g_file_hash(file: gconstpointer?): guint

@CCall("knifunptr_libgtk31100_g_file_equal")
external fun g_file_equal(file1: CValuesRef<GFile>?, file2: CValuesRef<GFile>?): gboolean

@CCall("knifunptr_libgtk31101_g_file_get_basename")
external fun g_file_get_basename(file: CValuesRef<GFile>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk31102_g_file_get_path")
external fun g_file_get_path(file: CValuesRef<GFile>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk31103_g_file_peek_path")
external fun g_file_peek_path(file: CValuesRef<GFile>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk31104_g_file_get_uri")
external fun g_file_get_uri(file: CValuesRef<GFile>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk31105_g_file_get_parse_name")
external fun g_file_get_parse_name(file: CValuesRef<GFile>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk31106_g_file_get_parent")
external fun g_file_get_parent(file: CValuesRef<GFile>?): CPointer<GFile>?

@CCall("knifunptr_libgtk31107_g_file_has_parent")
external fun g_file_has_parent(file: CValuesRef<GFile>?, parent: CValuesRef<GFile>?): gboolean

@CCall("knifunptr_libgtk31108_g_file_get_child")
external fun g_file_get_child(file: CValuesRef<GFile>?, @CCall.CString name: String?): CPointer<GFile>?

@CCall("knifunptr_libgtk31109_g_file_get_child_for_display_name")
external fun g_file_get_child_for_display_name(file: CValuesRef<GFile>?, @CCall.CString display_name: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFile>?

@CCall("knifunptr_libgtk31110_g_file_has_prefix")
external fun g_file_has_prefix(file: CValuesRef<GFile>?, prefix: CValuesRef<GFile>?): gboolean

@CCall("knifunptr_libgtk31111_g_file_get_relative_path")
external fun g_file_get_relative_path(parent: CValuesRef<GFile>?, descendant: CValuesRef<GFile>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk31112_g_file_resolve_relative_path")
external fun g_file_resolve_relative_path(file: CValuesRef<GFile>?, @CCall.CString relative_path: String?): CPointer<GFile>?

@CCall("knifunptr_libgtk31113_g_file_is_native")
external fun g_file_is_native(file: CValuesRef<GFile>?): gboolean

@CCall("knifunptr_libgtk31114_g_file_has_uri_scheme")
external fun g_file_has_uri_scheme(file: CValuesRef<GFile>?, @CCall.CString uri_scheme: String?): gboolean

@CCall("knifunptr_libgtk31115_g_file_get_uri_scheme")
external fun g_file_get_uri_scheme(file: CValuesRef<GFile>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk31116_g_file_read")
external fun g_file_read(file: CValuesRef<GFile>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileInputStream>?

@CCall("knifunptr_libgtk31117_g_file_read_async")
external fun g_file_read_async(file: CValuesRef<GFile>?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31118_g_file_read_finish")
external fun g_file_read_finish(file: CValuesRef<GFile>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileInputStream>?

@CCall("knifunptr_libgtk31119_g_file_append_to")
external fun g_file_append_to(file: CValuesRef<GFile>?, flags: GFileCreateFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileOutputStream>?

@CCall("knifunptr_libgtk31120_g_file_create")
external fun g_file_create(file: CValuesRef<GFile>?, flags: GFileCreateFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileOutputStream>?

@CCall("knifunptr_libgtk31121_g_file_replace")
external fun g_file_replace(file: CValuesRef<GFile>?, @CCall.CString etag: String?, make_backup: gboolean, flags: GFileCreateFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileOutputStream>?

@CCall("knifunptr_libgtk31122_g_file_append_to_async")
external fun g_file_append_to_async(file: CValuesRef<GFile>?, flags: GFileCreateFlags, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31123_g_file_append_to_finish")
external fun g_file_append_to_finish(file: CValuesRef<GFile>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileOutputStream>?

@CCall("knifunptr_libgtk31124_g_file_create_async")
external fun g_file_create_async(file: CValuesRef<GFile>?, flags: GFileCreateFlags, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31125_g_file_create_finish")
external fun g_file_create_finish(file: CValuesRef<GFile>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileOutputStream>?

@CCall("knifunptr_libgtk31126_g_file_replace_async")
external fun g_file_replace_async(file: CValuesRef<GFile>?, @CCall.CString etag: String?, make_backup: gboolean, flags: GFileCreateFlags, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31127_g_file_replace_finish")
external fun g_file_replace_finish(file: CValuesRef<GFile>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileOutputStream>?

@CCall("knifunptr_libgtk31128_g_file_open_readwrite")
external fun g_file_open_readwrite(file: CValuesRef<GFile>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileIOStream>?

@CCall("knifunptr_libgtk31129_g_file_open_readwrite_async")
external fun g_file_open_readwrite_async(file: CValuesRef<GFile>?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31130_g_file_open_readwrite_finish")
external fun g_file_open_readwrite_finish(file: CValuesRef<GFile>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileIOStream>?

@CCall("knifunptr_libgtk31131_g_file_create_readwrite")
external fun g_file_create_readwrite(file: CValuesRef<GFile>?, flags: GFileCreateFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileIOStream>?

@CCall("knifunptr_libgtk31132_g_file_create_readwrite_async")
external fun g_file_create_readwrite_async(file: CValuesRef<GFile>?, flags: GFileCreateFlags, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31133_g_file_create_readwrite_finish")
external fun g_file_create_readwrite_finish(file: CValuesRef<GFile>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileIOStream>?

@CCall("knifunptr_libgtk31134_g_file_replace_readwrite")
external fun g_file_replace_readwrite(file: CValuesRef<GFile>?, @CCall.CString etag: String?, make_backup: gboolean, flags: GFileCreateFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileIOStream>?

@CCall("knifunptr_libgtk31135_g_file_replace_readwrite_async")
external fun g_file_replace_readwrite_async(file: CValuesRef<GFile>?, @CCall.CString etag: String?, make_backup: gboolean, flags: GFileCreateFlags, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31136_g_file_replace_readwrite_finish")
external fun g_file_replace_readwrite_finish(file: CValuesRef<GFile>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileIOStream>?

@CCall("knifunptr_libgtk31137_g_file_query_exists")
external fun g_file_query_exists(file: CValuesRef<GFile>?, cancellable: CValuesRef<GCancellable>?): gboolean

@CCall("knifunptr_libgtk31138_g_file_query_file_type")
external fun g_file_query_file_type(file: CValuesRef<GFile>?, flags: GFileQueryInfoFlags, cancellable: CValuesRef<GCancellable>?): GFileType

@CCall("knifunptr_libgtk31139_g_file_query_info")
external fun g_file_query_info(file: CValuesRef<GFile>?, @CCall.CString attributes: String?, flags: GFileQueryInfoFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileInfo>?

@CCall("knifunptr_libgtk31140_g_file_query_info_async")
external fun g_file_query_info_async(file: CValuesRef<GFile>?, @CCall.CString attributes: String?, flags: GFileQueryInfoFlags, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31141_g_file_query_info_finish")
external fun g_file_query_info_finish(file: CValuesRef<GFile>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileInfo>?

@CCall("knifunptr_libgtk31142_g_file_query_filesystem_info")
external fun g_file_query_filesystem_info(file: CValuesRef<GFile>?, @CCall.CString attributes: String?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileInfo>?

@CCall("knifunptr_libgtk31143_g_file_query_filesystem_info_async")
external fun g_file_query_filesystem_info_async(file: CValuesRef<GFile>?, @CCall.CString attributes: String?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31144_g_file_query_filesystem_info_finish")
external fun g_file_query_filesystem_info_finish(file: CValuesRef<GFile>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileInfo>?

@CCall("knifunptr_libgtk31145_g_file_find_enclosing_mount")
external fun g_file_find_enclosing_mount(file: CValuesRef<GFile>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GMount>?

@CCall("knifunptr_libgtk31146_g_file_find_enclosing_mount_async")
external fun g_file_find_enclosing_mount_async(file: CValuesRef<GFile>?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31147_g_file_find_enclosing_mount_finish")
external fun g_file_find_enclosing_mount_finish(file: CValuesRef<GFile>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GMount>?

@CCall("knifunptr_libgtk31148_g_file_enumerate_children")
external fun g_file_enumerate_children(file: CValuesRef<GFile>?, @CCall.CString attributes: String?, flags: GFileQueryInfoFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileEnumerator>?

@CCall("knifunptr_libgtk31149_g_file_enumerate_children_async")
external fun g_file_enumerate_children_async(file: CValuesRef<GFile>?, @CCall.CString attributes: String?, flags: GFileQueryInfoFlags, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31150_g_file_enumerate_children_finish")
external fun g_file_enumerate_children_finish(file: CValuesRef<GFile>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileEnumerator>?

@CCall("knifunptr_libgtk31151_g_file_set_display_name")
external fun g_file_set_display_name(file: CValuesRef<GFile>?, @CCall.CString display_name: String?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFile>?

@CCall("knifunptr_libgtk31152_g_file_set_display_name_async")
external fun g_file_set_display_name_async(file: CValuesRef<GFile>?, @CCall.CString display_name: String?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31153_g_file_set_display_name_finish")
external fun g_file_set_display_name_finish(file: CValuesRef<GFile>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFile>?

@CCall("knifunptr_libgtk31154_g_file_delete")
external fun g_file_delete(file: CValuesRef<GFile>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31155_g_file_delete_async")
external fun g_file_delete_async(file: CValuesRef<GFile>?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31156_g_file_delete_finish")
external fun g_file_delete_finish(file: CValuesRef<GFile>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31157_g_file_trash")
external fun g_file_trash(file: CValuesRef<GFile>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31158_g_file_trash_async")
external fun g_file_trash_async(file: CValuesRef<GFile>?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31159_g_file_trash_finish")
external fun g_file_trash_finish(file: CValuesRef<GFile>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31160_g_file_copy")
external fun g_file_copy(source: CValuesRef<GFile>?, destination: CValuesRef<GFile>?, flags: GFileCopyFlags, cancellable: CValuesRef<GCancellable>?, progress_callback: GFileProgressCallback?, progress_callback_data: gpointer?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31161_g_file_copy_async")
external fun g_file_copy_async(source: CValuesRef<GFile>?, destination: CValuesRef<GFile>?, flags: GFileCopyFlags, io_priority: Int, cancellable: CValuesRef<GCancellable>?, progress_callback: GFileProgressCallback?, progress_callback_data: gpointer?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31162_g_file_copy_finish")
external fun g_file_copy_finish(file: CValuesRef<GFile>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31163_g_file_move")
external fun g_file_move(source: CValuesRef<GFile>?, destination: CValuesRef<GFile>?, flags: GFileCopyFlags, cancellable: CValuesRef<GCancellable>?, progress_callback: GFileProgressCallback?, progress_callback_data: gpointer?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31164_g_file_make_directory")
external fun g_file_make_directory(file: CValuesRef<GFile>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31165_g_file_make_directory_async")
external fun g_file_make_directory_async(file: CValuesRef<GFile>?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31166_g_file_make_directory_finish")
external fun g_file_make_directory_finish(file: CValuesRef<GFile>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31167_g_file_make_directory_with_parents")
external fun g_file_make_directory_with_parents(file: CValuesRef<GFile>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31168_g_file_make_symbolic_link")
external fun g_file_make_symbolic_link(file: CValuesRef<GFile>?, @CCall.CString symlink_value: String?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31169_g_file_query_settable_attributes")
external fun g_file_query_settable_attributes(file: CValuesRef<GFile>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileAttributeInfoList>?

@CCall("knifunptr_libgtk31170_g_file_query_writable_namespaces")
external fun g_file_query_writable_namespaces(file: CValuesRef<GFile>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileAttributeInfoList>?

@CCall("knifunptr_libgtk31171_g_file_set_attribute")
external fun g_file_set_attribute(file: CValuesRef<GFile>?, @CCall.CString attribute: String?, type: GFileAttributeType, value_p: gpointer?, flags: GFileQueryInfoFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31172_g_file_set_attributes_from_info")
external fun g_file_set_attributes_from_info(file: CValuesRef<GFile>?, info: CValuesRef<GFileInfo>?, flags: GFileQueryInfoFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31173_g_file_set_attributes_async")
external fun g_file_set_attributes_async(file: CValuesRef<GFile>?, info: CValuesRef<GFileInfo>?, flags: GFileQueryInfoFlags, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31174_g_file_set_attributes_finish")
external fun g_file_set_attributes_finish(file: CValuesRef<GFile>?, result: CValuesRef<GAsyncResult>?, info: CValuesRef<CPointerVar<GFileInfo>>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31175_g_file_set_attribute_string")
external fun g_file_set_attribute_string(file: CValuesRef<GFile>?, @CCall.CString attribute: String?, @CCall.CString value: String?, flags: GFileQueryInfoFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31176_g_file_set_attribute_byte_string")
external fun g_file_set_attribute_byte_string(file: CValuesRef<GFile>?, @CCall.CString attribute: String?, @CCall.CString value: String?, flags: GFileQueryInfoFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31177_g_file_set_attribute_uint32")
external fun g_file_set_attribute_uint32(file: CValuesRef<GFile>?, @CCall.CString attribute: String?, value: guint32, flags: GFileQueryInfoFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31178_g_file_set_attribute_int32")
external fun g_file_set_attribute_int32(file: CValuesRef<GFile>?, @CCall.CString attribute: String?, value: gint32, flags: GFileQueryInfoFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31179_g_file_set_attribute_uint64")
external fun g_file_set_attribute_uint64(file: CValuesRef<GFile>?, @CCall.CString attribute: String?, value: guint64, flags: GFileQueryInfoFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31180_g_file_set_attribute_int64")
external fun g_file_set_attribute_int64(file: CValuesRef<GFile>?, @CCall.CString attribute: String?, value: gint64, flags: GFileQueryInfoFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31181_g_file_mount_enclosing_volume")
external fun g_file_mount_enclosing_volume(location: CValuesRef<GFile>?, flags: GMountMountFlags, mount_operation: CValuesRef<GMountOperation>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31182_g_file_mount_enclosing_volume_finish")
external fun g_file_mount_enclosing_volume_finish(location: CValuesRef<GFile>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31183_g_file_mount_mountable")
external fun g_file_mount_mountable(file: CValuesRef<GFile>?, flags: GMountMountFlags, mount_operation: CValuesRef<GMountOperation>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31184_g_file_mount_mountable_finish")
external fun g_file_mount_mountable_finish(file: CValuesRef<GFile>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFile>?

@CCall("knifunptr_libgtk31185_g_file_unmount_mountable")
external fun g_file_unmount_mountable(file: CValuesRef<GFile>?, flags: GMountUnmountFlags, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31186_g_file_unmount_mountable_finish")
external fun g_file_unmount_mountable_finish(file: CValuesRef<GFile>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31187_g_file_unmount_mountable_with_operation")
external fun g_file_unmount_mountable_with_operation(file: CValuesRef<GFile>?, flags: GMountUnmountFlags, mount_operation: CValuesRef<GMountOperation>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31188_g_file_unmount_mountable_with_operation_finish")
external fun g_file_unmount_mountable_with_operation_finish(file: CValuesRef<GFile>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31189_g_file_eject_mountable")
external fun g_file_eject_mountable(file: CValuesRef<GFile>?, flags: GMountUnmountFlags, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31190_g_file_eject_mountable_finish")
external fun g_file_eject_mountable_finish(file: CValuesRef<GFile>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31191_g_file_eject_mountable_with_operation")
external fun g_file_eject_mountable_with_operation(file: CValuesRef<GFile>?, flags: GMountUnmountFlags, mount_operation: CValuesRef<GMountOperation>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31192_g_file_eject_mountable_with_operation_finish")
external fun g_file_eject_mountable_with_operation_finish(file: CValuesRef<GFile>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31193_g_file_copy_attributes")
external fun g_file_copy_attributes(source: CValuesRef<GFile>?, destination: CValuesRef<GFile>?, flags: GFileCopyFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31194_g_file_monitor_directory")
external fun g_file_monitor_directory(file: CValuesRef<GFile>?, flags: GFileMonitorFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileMonitor>?

@CCall("knifunptr_libgtk31195_g_file_monitor_file")
external fun g_file_monitor_file(file: CValuesRef<GFile>?, flags: GFileMonitorFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileMonitor>?

@CCall("knifunptr_libgtk31196_g_file_monitor")
external fun g_file_monitor(file: CValuesRef<GFile>?, flags: GFileMonitorFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileMonitor>?

@CCall("knifunptr_libgtk31197_g_file_measure_disk_usage")
external fun g_file_measure_disk_usage(file: CValuesRef<GFile>?, flags: GFileMeasureFlags, cancellable: CValuesRef<GCancellable>?, progress_callback: GFileMeasureProgressCallback?, progress_data: gpointer?, disk_usage: CValuesRef<guint64Var>?, num_dirs: CValuesRef<guint64Var>?, num_files: CValuesRef<guint64Var>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31198_g_file_measure_disk_usage_async")
external fun g_file_measure_disk_usage_async(file: CValuesRef<GFile>?, flags: GFileMeasureFlags, io_priority: gint, cancellable: CValuesRef<GCancellable>?, progress_callback: GFileMeasureProgressCallback?, progress_data: gpointer?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31199_g_file_measure_disk_usage_finish")
external fun g_file_measure_disk_usage_finish(file: CValuesRef<GFile>?, result: CValuesRef<GAsyncResult>?, disk_usage: CValuesRef<guint64Var>?, num_dirs: CValuesRef<guint64Var>?, num_files: CValuesRef<guint64Var>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31200_g_file_start_mountable")
external fun g_file_start_mountable(file: CValuesRef<GFile>?, flags: GDriveStartFlags, start_operation: CValuesRef<GMountOperation>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31201_g_file_start_mountable_finish")
external fun g_file_start_mountable_finish(file: CValuesRef<GFile>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31202_g_file_stop_mountable")
external fun g_file_stop_mountable(file: CValuesRef<GFile>?, flags: GMountUnmountFlags, mount_operation: CValuesRef<GMountOperation>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31203_g_file_stop_mountable_finish")
external fun g_file_stop_mountable_finish(file: CValuesRef<GFile>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31204_g_file_poll_mountable")
external fun g_file_poll_mountable(file: CValuesRef<GFile>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31205_g_file_poll_mountable_finish")
external fun g_file_poll_mountable_finish(file: CValuesRef<GFile>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31206_g_file_query_default_handler")
external fun g_file_query_default_handler(file: CValuesRef<GFile>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GAppInfo>?

@CCall("knifunptr_libgtk31207_g_file_load_contents")
external fun g_file_load_contents(file: CValuesRef<GFile>?, cancellable: CValuesRef<GCancellable>?, contents: CValuesRef<CPointerVar<ByteVar>>?, length: CValuesRef<gsizeVar>?, etag_out: CValuesRef<CPointerVar<ByteVar>>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31208_g_file_load_contents_async")
external fun g_file_load_contents_async(file: CValuesRef<GFile>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31209_g_file_load_contents_finish")
external fun g_file_load_contents_finish(file: CValuesRef<GFile>?, res: CValuesRef<GAsyncResult>?, contents: CValuesRef<CPointerVar<ByteVar>>?, length: CValuesRef<gsizeVar>?, etag_out: CValuesRef<CPointerVar<ByteVar>>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31210_g_file_load_partial_contents_async")
external fun g_file_load_partial_contents_async(file: CValuesRef<GFile>?, cancellable: CValuesRef<GCancellable>?, read_more_callback: GFileReadMoreCallback?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31211_g_file_load_partial_contents_finish")
external fun g_file_load_partial_contents_finish(file: CValuesRef<GFile>?, res: CValuesRef<GAsyncResult>?, contents: CValuesRef<CPointerVar<ByteVar>>?, length: CValuesRef<gsizeVar>?, etag_out: CValuesRef<CPointerVar<ByteVar>>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31212_g_file_replace_contents")
external fun g_file_replace_contents(file: CValuesRef<GFile>?, @CCall.CString contents: String?, length: gsize, @CCall.CString etag: String?, make_backup: gboolean, flags: GFileCreateFlags, new_etag: CValuesRef<CPointerVar<ByteVar>>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31213_g_file_replace_contents_async")
external fun g_file_replace_contents_async(file: CValuesRef<GFile>?, @CCall.CString contents: String?, length: gsize, @CCall.CString etag: String?, make_backup: gboolean, flags: GFileCreateFlags, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31214_g_file_replace_contents_bytes_async")
external fun g_file_replace_contents_bytes_async(file: CValuesRef<GFile>?, contents: CValuesRef<GBytes>?, @CCall.CString etag: String?, make_backup: gboolean, flags: GFileCreateFlags, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31215_g_file_replace_contents_finish")
external fun g_file_replace_contents_finish(file: CValuesRef<GFile>?, res: CValuesRef<GAsyncResult>?, new_etag: CValuesRef<CPointerVar<ByteVar>>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31216_g_file_supports_thread_contexts")
external fun g_file_supports_thread_contexts(file: CValuesRef<GFile>?): gboolean

@CCall("knifunptr_libgtk31217_g_file_load_bytes")
external fun g_file_load_bytes(file: CValuesRef<GFile>?, cancellable: CValuesRef<GCancellable>?, etag_out: CValuesRef<CPointerVar<gcharVar>>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GBytes>?

@CCall("knifunptr_libgtk31218_g_file_load_bytes_async")
external fun g_file_load_bytes_async(file: CValuesRef<GFile>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31219_g_file_load_bytes_finish")
external fun g_file_load_bytes_finish(file: CValuesRef<GFile>?, result: CValuesRef<GAsyncResult>?, etag_out: CValuesRef<CPointerVar<gcharVar>>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GBytes>?

@CCall("knifunptr_libgtk31220_g_file_icon_get_type")
external fun g_file_icon_get_type(): GType

@CCall("knifunptr_libgtk31221_g_file_icon_new")
external fun g_file_icon_new(file: CValuesRef<GFile>?): CPointer<GIcon>?

@CCall("knifunptr_libgtk31222_g_file_icon_get_file")
external fun g_file_icon_get_file(icon: CValuesRef<GFileIcon>?): CPointer<GFile>?

@CCall("knifunptr_libgtk31223_g_file_info_get_type")
external fun g_file_info_get_type(): GType

@CCall("knifunptr_libgtk31224_g_file_info_new")
external fun g_file_info_new(): CPointer<GFileInfo>?

@CCall("knifunptr_libgtk31225_g_file_info_dup")
external fun g_file_info_dup(other: CValuesRef<GFileInfo>?): CPointer<GFileInfo>?

@CCall("knifunptr_libgtk31226_g_file_info_copy_into")
external fun g_file_info_copy_into(src_info: CValuesRef<GFileInfo>?, dest_info: CValuesRef<GFileInfo>?): Unit

@CCall("knifunptr_libgtk31227_g_file_info_has_attribute")
external fun g_file_info_has_attribute(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?): gboolean

@CCall("knifunptr_libgtk31228_g_file_info_has_namespace")
external fun g_file_info_has_namespace(info: CValuesRef<GFileInfo>?, @CCall.CString name_space: String?): gboolean

@CCall("knifunptr_libgtk31229_g_file_info_list_attributes")
external fun g_file_info_list_attributes(info: CValuesRef<GFileInfo>?, @CCall.CString name_space: String?): CPointer<CPointerVar<ByteVar>>?

@CCall("knifunptr_libgtk31230_g_file_info_get_attribute_data")
external fun g_file_info_get_attribute_data(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?, type: CValuesRef<GFileAttributeTypeVar>?, value_pp: CValuesRef<gpointerVar>?, status: CValuesRef<GFileAttributeStatusVar>?): gboolean

@CCall("knifunptr_libgtk31231_g_file_info_get_attribute_type")
external fun g_file_info_get_attribute_type(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?): GFileAttributeType

@CCall("knifunptr_libgtk31232_g_file_info_remove_attribute")
external fun g_file_info_remove_attribute(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?): Unit

@CCall("knifunptr_libgtk31233_g_file_info_get_attribute_status")
external fun g_file_info_get_attribute_status(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?): GFileAttributeStatus

@CCall("knifunptr_libgtk31234_g_file_info_set_attribute_status")
external fun g_file_info_set_attribute_status(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?, status: GFileAttributeStatus): gboolean

@CCall("knifunptr_libgtk31235_g_file_info_get_attribute_as_string")
external fun g_file_info_get_attribute_as_string(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk31236_g_file_info_get_attribute_string")
external fun g_file_info_get_attribute_string(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk31237_g_file_info_get_attribute_byte_string")
external fun g_file_info_get_attribute_byte_string(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk31238_g_file_info_get_attribute_boolean")
external fun g_file_info_get_attribute_boolean(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?): gboolean

@CCall("knifunptr_libgtk31239_g_file_info_get_attribute_uint32")
external fun g_file_info_get_attribute_uint32(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?): guint32

@CCall("knifunptr_libgtk31240_g_file_info_get_attribute_int32")
external fun g_file_info_get_attribute_int32(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?): gint32

@CCall("knifunptr_libgtk31241_g_file_info_get_attribute_uint64")
external fun g_file_info_get_attribute_uint64(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?): guint64

@CCall("knifunptr_libgtk31242_g_file_info_get_attribute_int64")
external fun g_file_info_get_attribute_int64(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?): gint64

@CCall("knifunptr_libgtk31243_g_file_info_get_attribute_object")
external fun g_file_info_get_attribute_object(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?): CPointer<GObject>?

@CCall("knifunptr_libgtk31244_g_file_info_get_attribute_stringv")
external fun g_file_info_get_attribute_stringv(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?): CPointer<CPointerVar<ByteVar>>?

@CCall("knifunptr_libgtk31245_g_file_info_set_attribute")
external fun g_file_info_set_attribute(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?, type: GFileAttributeType, value_p: gpointer?): Unit

@CCall("knifunptr_libgtk31246_g_file_info_set_attribute_string")
external fun g_file_info_set_attribute_string(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?, @CCall.CString attr_value: String?): Unit

@CCall("knifunptr_libgtk31247_g_file_info_set_attribute_byte_string")
external fun g_file_info_set_attribute_byte_string(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?, @CCall.CString attr_value: String?): Unit

@CCall("knifunptr_libgtk31248_g_file_info_set_attribute_boolean")
external fun g_file_info_set_attribute_boolean(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?, attr_value: gboolean): Unit

@CCall("knifunptr_libgtk31249_g_file_info_set_attribute_uint32")
external fun g_file_info_set_attribute_uint32(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?, attr_value: guint32): Unit

@CCall("knifunptr_libgtk31250_g_file_info_set_attribute_int32")
external fun g_file_info_set_attribute_int32(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?, attr_value: gint32): Unit

@CCall("knifunptr_libgtk31251_g_file_info_set_attribute_uint64")
external fun g_file_info_set_attribute_uint64(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?, attr_value: guint64): Unit

@CCall("knifunptr_libgtk31252_g_file_info_set_attribute_int64")
external fun g_file_info_set_attribute_int64(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?, attr_value: gint64): Unit

@CCall("knifunptr_libgtk31253_g_file_info_set_attribute_object")
external fun g_file_info_set_attribute_object(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?, attr_value: CValuesRef<GObject>?): Unit

@CCall("knifunptr_libgtk31254_g_file_info_set_attribute_stringv")
external fun g_file_info_set_attribute_stringv(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?, attr_value: CValuesRef<CPointerVar<ByteVar>>?): Unit

@CCall("knifunptr_libgtk31255_g_file_info_clear_status")
external fun g_file_info_clear_status(info: CValuesRef<GFileInfo>?): Unit

@CCall("knifunptr_libgtk31256_g_file_info_get_deletion_date")
external fun g_file_info_get_deletion_date(info: CValuesRef<GFileInfo>?): CPointer<GDateTime>?

@CCall("knifunptr_libgtk31257_g_file_info_get_file_type")
external fun g_file_info_get_file_type(info: CValuesRef<GFileInfo>?): GFileType

@CCall("knifunptr_libgtk31258_g_file_info_get_is_hidden")
external fun g_file_info_get_is_hidden(info: CValuesRef<GFileInfo>?): gboolean

@CCall("knifunptr_libgtk31259_g_file_info_get_is_backup")
external fun g_file_info_get_is_backup(info: CValuesRef<GFileInfo>?): gboolean

@CCall("knifunptr_libgtk31260_g_file_info_get_is_symlink")
external fun g_file_info_get_is_symlink(info: CValuesRef<GFileInfo>?): gboolean

@CCall("knifunptr_libgtk31261_g_file_info_get_name")
external fun g_file_info_get_name(info: CValuesRef<GFileInfo>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk31262_g_file_info_get_display_name")
external fun g_file_info_get_display_name(info: CValuesRef<GFileInfo>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk31263_g_file_info_get_edit_name")
external fun g_file_info_get_edit_name(info: CValuesRef<GFileInfo>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk31264_g_file_info_get_icon")
external fun g_file_info_get_icon(info: CValuesRef<GFileInfo>?): CPointer<GIcon>?

@CCall("knifunptr_libgtk31265_g_file_info_get_symbolic_icon")
external fun g_file_info_get_symbolic_icon(info: CValuesRef<GFileInfo>?): CPointer<GIcon>?

@CCall("knifunptr_libgtk31266_g_file_info_get_content_type")
external fun g_file_info_get_content_type(info: CValuesRef<GFileInfo>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk31267_g_file_info_get_size")
external fun g_file_info_get_size(info: CValuesRef<GFileInfo>?): goffset

@CCall("knifunptr_libgtk31268_g_file_info_get_modification_time")
external fun g_file_info_get_modification_time(info: CValuesRef<GFileInfo>?, result: CValuesRef<GTimeVal>?): Unit

@CCall("knifunptr_libgtk31269_g_file_info_get_symlink_target")
external fun g_file_info_get_symlink_target(info: CValuesRef<GFileInfo>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk31270_g_file_info_get_etag")
external fun g_file_info_get_etag(info: CValuesRef<GFileInfo>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk31271_g_file_info_get_sort_order")
external fun g_file_info_get_sort_order(info: CValuesRef<GFileInfo>?): gint32

@CCall("knifunptr_libgtk31272_g_file_info_set_attribute_mask")
external fun g_file_info_set_attribute_mask(info: CValuesRef<GFileInfo>?, mask: CValuesRef<GFileAttributeMatcher>?): Unit

@CCall("knifunptr_libgtk31273_g_file_info_unset_attribute_mask")
external fun g_file_info_unset_attribute_mask(info: CValuesRef<GFileInfo>?): Unit

@CCall("knifunptr_libgtk31274_g_file_info_set_file_type")
external fun g_file_info_set_file_type(info: CValuesRef<GFileInfo>?, type: GFileType): Unit

@CCall("knifunptr_libgtk31275_g_file_info_set_is_hidden")
external fun g_file_info_set_is_hidden(info: CValuesRef<GFileInfo>?, is_hidden: gboolean): Unit

@CCall("knifunptr_libgtk31276_g_file_info_set_is_symlink")
external fun g_file_info_set_is_symlink(info: CValuesRef<GFileInfo>?, is_symlink: gboolean): Unit

@CCall("knifunptr_libgtk31277_g_file_info_set_name")
external fun g_file_info_set_name(info: CValuesRef<GFileInfo>?, @CCall.CString name: String?): Unit

@CCall("knifunptr_libgtk31278_g_file_info_set_display_name")
external fun g_file_info_set_display_name(info: CValuesRef<GFileInfo>?, @CCall.CString display_name: String?): Unit

@CCall("knifunptr_libgtk31279_g_file_info_set_edit_name")
external fun g_file_info_set_edit_name(info: CValuesRef<GFileInfo>?, @CCall.CString edit_name: String?): Unit

@CCall("knifunptr_libgtk31280_g_file_info_set_icon")
external fun g_file_info_set_icon(info: CValuesRef<GFileInfo>?, icon: CValuesRef<GIcon>?): Unit

@CCall("knifunptr_libgtk31281_g_file_info_set_symbolic_icon")
external fun g_file_info_set_symbolic_icon(info: CValuesRef<GFileInfo>?, icon: CValuesRef<GIcon>?): Unit

@CCall("knifunptr_libgtk31282_g_file_info_set_content_type")
external fun g_file_info_set_content_type(info: CValuesRef<GFileInfo>?, @CCall.CString content_type: String?): Unit

@CCall("knifunptr_libgtk31283_g_file_info_set_size")
external fun g_file_info_set_size(info: CValuesRef<GFileInfo>?, size: goffset): Unit

@CCall("knifunptr_libgtk31284_g_file_info_set_modification_time")
external fun g_file_info_set_modification_time(info: CValuesRef<GFileInfo>?, mtime: CValuesRef<GTimeVal>?): Unit

@CCall("knifunptr_libgtk31285_g_file_info_set_symlink_target")
external fun g_file_info_set_symlink_target(info: CValuesRef<GFileInfo>?, @CCall.CString symlink_target: String?): Unit

@CCall("knifunptr_libgtk31286_g_file_info_set_sort_order")
external fun g_file_info_set_sort_order(info: CValuesRef<GFileInfo>?, sort_order: gint32): Unit

@CCall("knifunptr_libgtk31287_g_file_attribute_matcher_get_type")
external fun g_file_attribute_matcher_get_type(): GType

@CCall("knifunptr_libgtk31288_g_file_attribute_matcher_new")
external fun g_file_attribute_matcher_new(@CCall.CString attributes: String?): CPointer<GFileAttributeMatcher>?

@CCall("knifunptr_libgtk31289_g_file_attribute_matcher_ref")
external fun g_file_attribute_matcher_ref(matcher: CValuesRef<GFileAttributeMatcher>?): CPointer<GFileAttributeMatcher>?

@CCall("knifunptr_libgtk31290_g_file_attribute_matcher_unref")
external fun g_file_attribute_matcher_unref(matcher: CValuesRef<GFileAttributeMatcher>?): Unit

@CCall("knifunptr_libgtk31291_g_file_attribute_matcher_subtract")
external fun g_file_attribute_matcher_subtract(matcher: CValuesRef<GFileAttributeMatcher>?, subtract: CValuesRef<GFileAttributeMatcher>?): CPointer<GFileAttributeMatcher>?

@CCall("knifunptr_libgtk31292_g_file_attribute_matcher_matches")
external fun g_file_attribute_matcher_matches(matcher: CValuesRef<GFileAttributeMatcher>?, @CCall.CString attribute: String?): gboolean

@CCall("knifunptr_libgtk31293_g_file_attribute_matcher_matches_only")
external fun g_file_attribute_matcher_matches_only(matcher: CValuesRef<GFileAttributeMatcher>?, @CCall.CString attribute: String?): gboolean

@CCall("knifunptr_libgtk31294_g_file_attribute_matcher_enumerate_namespace")
external fun g_file_attribute_matcher_enumerate_namespace(matcher: CValuesRef<GFileAttributeMatcher>?, @CCall.CString ns: String?): gboolean

@CCall("knifunptr_libgtk31295_g_file_attribute_matcher_enumerate_next")
external fun g_file_attribute_matcher_enumerate_next(matcher: CValuesRef<GFileAttributeMatcher>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk31296_g_file_attribute_matcher_to_string")
external fun g_file_attribute_matcher_to_string(matcher: CValuesRef<GFileAttributeMatcher>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk31297_g_file_input_stream_get_type")
external fun g_file_input_stream_get_type(): GType

@CCall("knifunptr_libgtk31298_g_file_input_stream_query_info")
external fun g_file_input_stream_query_info(stream: CValuesRef<GFileInputStream>?, @CCall.CString attributes: String?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileInfo>?

@CCall("knifunptr_libgtk31299_g_file_input_stream_query_info_async")
external fun g_file_input_stream_query_info_async(stream: CValuesRef<GFileInputStream>?, @CCall.CString attributes: String?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31300_g_file_input_stream_query_info_finish")
external fun g_file_input_stream_query_info_finish(stream: CValuesRef<GFileInputStream>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileInfo>?

@CCall("knifunptr_libgtk31301_g_io_error_quark")
external fun g_io_error_quark(): GQuark

@CCall("knifunptr_libgtk31302_g_io_error_from_errno")
external fun g_io_error_from_errno(err_no: gint): GIOErrorEnum

@CCall("knifunptr_libgtk31303_g_io_stream_get_type")
external fun g_io_stream_get_type(): GType

@CCall("knifunptr_libgtk31304_g_io_stream_get_input_stream")
external fun g_io_stream_get_input_stream(stream: CValuesRef<GIOStream>?): CPointer<GInputStream>?

@CCall("knifunptr_libgtk31305_g_io_stream_get_output_stream")
external fun g_io_stream_get_output_stream(stream: CValuesRef<GIOStream>?): CPointer<GOutputStream>?

@CCall("knifunptr_libgtk31306_g_io_stream_splice_async")
external fun g_io_stream_splice_async(stream1: CValuesRef<GIOStream>?, stream2: CValuesRef<GIOStream>?, flags: GIOStreamSpliceFlags, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31307_g_io_stream_splice_finish")
external fun g_io_stream_splice_finish(result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31308_g_io_stream_close")
external fun g_io_stream_close(stream: CValuesRef<GIOStream>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31309_g_io_stream_close_async")
external fun g_io_stream_close_async(stream: CValuesRef<GIOStream>?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31310_g_io_stream_close_finish")
external fun g_io_stream_close_finish(stream: CValuesRef<GIOStream>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31311_g_io_stream_is_closed")
external fun g_io_stream_is_closed(stream: CValuesRef<GIOStream>?): gboolean

@CCall("knifunptr_libgtk31312_g_io_stream_has_pending")
external fun g_io_stream_has_pending(stream: CValuesRef<GIOStream>?): gboolean

@CCall("knifunptr_libgtk31313_g_io_stream_set_pending")
external fun g_io_stream_set_pending(stream: CValuesRef<GIOStream>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31314_g_io_stream_clear_pending")
external fun g_io_stream_clear_pending(stream: CValuesRef<GIOStream>?): Unit

@CCall("knifunptr_libgtk31315_g_file_io_stream_get_type")
external fun g_file_io_stream_get_type(): GType

@CCall("knifunptr_libgtk31316_g_file_io_stream_query_info")
external fun g_file_io_stream_query_info(stream: CValuesRef<GFileIOStream>?, @CCall.CString attributes: String?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileInfo>?

@CCall("knifunptr_libgtk31317_g_file_io_stream_query_info_async")
external fun g_file_io_stream_query_info_async(stream: CValuesRef<GFileIOStream>?, @CCall.CString attributes: String?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31318_g_file_io_stream_query_info_finish")
external fun g_file_io_stream_query_info_finish(stream: CValuesRef<GFileIOStream>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileInfo>?

@CCall("knifunptr_libgtk31319_g_file_io_stream_get_etag")
external fun g_file_io_stream_get_etag(stream: CValuesRef<GFileIOStream>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk31320_g_file_monitor_get_type")
external fun g_file_monitor_get_type(): GType

@CCall("knifunptr_libgtk31321_g_file_monitor_cancel")
external fun g_file_monitor_cancel(monitor: CValuesRef<GFileMonitor>?): gboolean

@CCall("knifunptr_libgtk31322_g_file_monitor_is_cancelled")
external fun g_file_monitor_is_cancelled(monitor: CValuesRef<GFileMonitor>?): gboolean

@CCall("knifunptr_libgtk31323_g_file_monitor_set_rate_limit")
external fun g_file_monitor_set_rate_limit(monitor: CValuesRef<GFileMonitor>?, limit_msecs: gint): Unit

@CCall("knifunptr_libgtk31324_g_file_monitor_emit_event")
external fun g_file_monitor_emit_event(monitor: CValuesRef<GFileMonitor>?, child: CValuesRef<GFile>?, other_file: CValuesRef<GFile>?, event_type: GFileMonitorEvent): Unit

@CCall("knifunptr_libgtk31325_g_filename_completer_get_type")
external fun g_filename_completer_get_type(): GType

@CCall("knifunptr_libgtk31326_g_filename_completer_new")
external fun g_filename_completer_new(): CPointer<GFilenameCompleter>?

@CCall("knifunptr_libgtk31327_g_filename_completer_get_completion_suffix")
external fun g_filename_completer_get_completion_suffix(completer: CValuesRef<GFilenameCompleter>?, @CCall.CString initial_text: String?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk31328_g_filename_completer_get_completions")
external fun g_filename_completer_get_completions(completer: CValuesRef<GFilenameCompleter>?, @CCall.CString initial_text: String?): CPointer<CPointerVar<ByteVar>>?

@CCall("knifunptr_libgtk31329_g_filename_completer_set_dirs_only")
external fun g_filename_completer_set_dirs_only(completer: CValuesRef<GFilenameCompleter>?, dirs_only: gboolean): Unit

@CCall("knifunptr_libgtk31330_g_file_output_stream_get_type")
external fun g_file_output_stream_get_type(): GType

@CCall("knifunptr_libgtk31331_g_file_output_stream_query_info")
external fun g_file_output_stream_query_info(stream: CValuesRef<GFileOutputStream>?, @CCall.CString attributes: String?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileInfo>?

@CCall("knifunptr_libgtk31332_g_file_output_stream_query_info_async")
external fun g_file_output_stream_query_info_async(stream: CValuesRef<GFileOutputStream>?, @CCall.CString attributes: String?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31333_g_file_output_stream_query_info_finish")
external fun g_file_output_stream_query_info_finish(stream: CValuesRef<GFileOutputStream>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileInfo>?

@CCall("knifunptr_libgtk31334_g_file_output_stream_get_etag")
external fun g_file_output_stream_get_etag(stream: CValuesRef<GFileOutputStream>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk31335_g_inet_address_get_type")
external fun g_inet_address_get_type(): GType

@CCall("knifunptr_libgtk31336_g_inet_address_new_from_string")
external fun g_inet_address_new_from_string(@CCall.CString string: String?): CPointer<GInetAddress>?

@CCall("knifunptr_libgtk31337_g_inet_address_new_from_bytes")
external fun g_inet_address_new_from_bytes(bytes: CValuesRef<guint8Var>?, family: GSocketFamily): CPointer<GInetAddress>?

@CCall("knifunptr_libgtk31338_g_inet_address_new_loopback")
external fun g_inet_address_new_loopback(family: GSocketFamily): CPointer<GInetAddress>?

@CCall("knifunptr_libgtk31339_g_inet_address_new_any")
external fun g_inet_address_new_any(family: GSocketFamily): CPointer<GInetAddress>?

@CCall("knifunptr_libgtk31340_g_inet_address_equal")
external fun g_inet_address_equal(address: CValuesRef<GInetAddress>?, other_address: CValuesRef<GInetAddress>?): gboolean

@CCall("knifunptr_libgtk31341_g_inet_address_to_string")
external fun g_inet_address_to_string(address: CValuesRef<GInetAddress>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk31342_g_inet_address_to_bytes")
external fun g_inet_address_to_bytes(address: CValuesRef<GInetAddress>?): CPointer<guint8Var>?

@CCall("knifunptr_libgtk31343_g_inet_address_get_native_size")
external fun g_inet_address_get_native_size(address: CValuesRef<GInetAddress>?): gsize

@CCall("knifunptr_libgtk31344_g_inet_address_get_family")
external fun g_inet_address_get_family(address: CValuesRef<GInetAddress>?): GSocketFamily

@CCall("knifunptr_libgtk31345_g_inet_address_get_is_any")
external fun g_inet_address_get_is_any(address: CValuesRef<GInetAddress>?): gboolean

@CCall("knifunptr_libgtk31346_g_inet_address_get_is_loopback")
external fun g_inet_address_get_is_loopback(address: CValuesRef<GInetAddress>?): gboolean

@CCall("knifunptr_libgtk31347_g_inet_address_get_is_link_local")
external fun g_inet_address_get_is_link_local(address: CValuesRef<GInetAddress>?): gboolean

@CCall("knifunptr_libgtk31348_g_inet_address_get_is_site_local")
external fun g_inet_address_get_is_site_local(address: CValuesRef<GInetAddress>?): gboolean

@CCall("knifunptr_libgtk31349_g_inet_address_get_is_multicast")
external fun g_inet_address_get_is_multicast(address: CValuesRef<GInetAddress>?): gboolean

@CCall("knifunptr_libgtk31350_g_inet_address_get_is_mc_global")
external fun g_inet_address_get_is_mc_global(address: CValuesRef<GInetAddress>?): gboolean

@CCall("knifunptr_libgtk31351_g_inet_address_get_is_mc_link_local")
external fun g_inet_address_get_is_mc_link_local(address: CValuesRef<GInetAddress>?): gboolean

@CCall("knifunptr_libgtk31352_g_inet_address_get_is_mc_node_local")
external fun g_inet_address_get_is_mc_node_local(address: CValuesRef<GInetAddress>?): gboolean

@CCall("knifunptr_libgtk31353_g_inet_address_get_is_mc_org_local")
external fun g_inet_address_get_is_mc_org_local(address: CValuesRef<GInetAddress>?): gboolean

@CCall("knifunptr_libgtk31354_g_inet_address_get_is_mc_site_local")
external fun g_inet_address_get_is_mc_site_local(address: CValuesRef<GInetAddress>?): gboolean

@CCall("knifunptr_libgtk31355_g_inet_address_mask_get_type")
external fun g_inet_address_mask_get_type(): GType

@CCall("knifunptr_libgtk31356_g_inet_address_mask_new")
external fun g_inet_address_mask_new(addr: CValuesRef<GInetAddress>?, length: guint, error: CValuesRef<CPointerVar<GError>>?): CPointer<GInetAddressMask>?

@CCall("knifunptr_libgtk31357_g_inet_address_mask_new_from_string")
external fun g_inet_address_mask_new_from_string(@CCall.CString mask_string: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GInetAddressMask>?

@CCall("knifunptr_libgtk31358_g_inet_address_mask_to_string")
external fun g_inet_address_mask_to_string(mask: CValuesRef<GInetAddressMask>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk31359_g_inet_address_mask_get_family")
external fun g_inet_address_mask_get_family(mask: CValuesRef<GInetAddressMask>?): GSocketFamily

@CCall("knifunptr_libgtk31360_g_inet_address_mask_get_address")
external fun g_inet_address_mask_get_address(mask: CValuesRef<GInetAddressMask>?): CPointer<GInetAddress>?

@CCall("knifunptr_libgtk31361_g_inet_address_mask_get_length")
external fun g_inet_address_mask_get_length(mask: CValuesRef<GInetAddressMask>?): guint

@CCall("knifunptr_libgtk31362_g_inet_address_mask_matches")
external fun g_inet_address_mask_matches(mask: CValuesRef<GInetAddressMask>?, address: CValuesRef<GInetAddress>?): gboolean

@CCall("knifunptr_libgtk31363_g_inet_address_mask_equal")
external fun g_inet_address_mask_equal(mask: CValuesRef<GInetAddressMask>?, mask2: CValuesRef<GInetAddressMask>?): gboolean

@CCall("knifunptr_libgtk31364_g_socket_address_get_type")
external fun g_socket_address_get_type(): GType

@CCall("knifunptr_libgtk31365_g_socket_address_get_family")
external fun g_socket_address_get_family(address: CValuesRef<GSocketAddress>?): GSocketFamily

@CCall("knifunptr_libgtk31366_g_socket_address_new_from_native")
external fun g_socket_address_new_from_native(native: gpointer?, len: gsize): CPointer<GSocketAddress>?

@CCall("knifunptr_libgtk31367_g_socket_address_to_native")
external fun g_socket_address_to_native(address: CValuesRef<GSocketAddress>?, dest: gpointer?, destlen: gsize, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31368_g_socket_address_get_native_size")
external fun g_socket_address_get_native_size(address: CValuesRef<GSocketAddress>?): gssize

@CCall("knifunptr_libgtk31369_g_inet_socket_address_get_type")
external fun g_inet_socket_address_get_type(): GType

@CCall("knifunptr_libgtk31370_g_inet_socket_address_new")
external fun g_inet_socket_address_new(address: CValuesRef<GInetAddress>?, port: guint16): CPointer<GSocketAddress>?

@CCall("knifunptr_libgtk31371_g_inet_socket_address_new_from_string")
external fun g_inet_socket_address_new_from_string(@CCall.CString address: String?, port: guint): CPointer<GSocketAddress>?

@CCall("knifunptr_libgtk31372_g_inet_socket_address_get_address")
external fun g_inet_socket_address_get_address(address: CValuesRef<GInetSocketAddress>?): CPointer<GInetAddress>?

@CCall("knifunptr_libgtk31373_g_inet_socket_address_get_port")
external fun g_inet_socket_address_get_port(address: CValuesRef<GInetSocketAddress>?): guint16

@CCall("knifunptr_libgtk31374_g_inet_socket_address_get_flowinfo")
external fun g_inet_socket_address_get_flowinfo(address: CValuesRef<GInetSocketAddress>?): guint32

@CCall("knifunptr_libgtk31375_g_inet_socket_address_get_scope_id")
external fun g_inet_socket_address_get_scope_id(address: CValuesRef<GInetSocketAddress>?): guint32

@CCall("knifunptr_libgtk31376_g_app_info_create_flags_get_type")
external fun g_app_info_create_flags_get_type(): GType

@CCall("knifunptr_libgtk31377_g_converter_flags_get_type")
external fun g_converter_flags_get_type(): GType

@CCall("knifunptr_libgtk31378_g_converter_result_get_type")
external fun g_converter_result_get_type(): GType

@CCall("knifunptr_libgtk31379_g_data_stream_byte_order_get_type")
external fun g_data_stream_byte_order_get_type(): GType

@CCall("knifunptr_libgtk31380_g_data_stream_newline_type_get_type")
external fun g_data_stream_newline_type_get_type(): GType

@CCall("knifunptr_libgtk31381_g_file_attribute_type_get_type")
external fun g_file_attribute_type_get_type(): GType

@CCall("knifunptr_libgtk31382_g_file_attribute_info_flags_get_type")
external fun g_file_attribute_info_flags_get_type(): GType

@CCall("knifunptr_libgtk31383_g_file_attribute_status_get_type")
external fun g_file_attribute_status_get_type(): GType

@CCall("knifunptr_libgtk31384_g_file_query_info_flags_get_type")
external fun g_file_query_info_flags_get_type(): GType

@CCall("knifunptr_libgtk31385_g_file_create_flags_get_type")
external fun g_file_create_flags_get_type(): GType

@CCall("knifunptr_libgtk31386_g_file_measure_flags_get_type")
external fun g_file_measure_flags_get_type(): GType

@CCall("knifunptr_libgtk31387_g_mount_mount_flags_get_type")
external fun g_mount_mount_flags_get_type(): GType

@CCall("knifunptr_libgtk31388_g_mount_unmount_flags_get_type")
external fun g_mount_unmount_flags_get_type(): GType

@CCall("knifunptr_libgtk31389_g_drive_start_flags_get_type")
external fun g_drive_start_flags_get_type(): GType

@CCall("knifunptr_libgtk31390_g_drive_start_stop_type_get_type")
external fun g_drive_start_stop_type_get_type(): GType

@CCall("knifunptr_libgtk31391_g_file_copy_flags_get_type")
external fun g_file_copy_flags_get_type(): GType

@CCall("knifunptr_libgtk31392_g_file_monitor_flags_get_type")
external fun g_file_monitor_flags_get_type(): GType

@CCall("knifunptr_libgtk31393_g_file_type_get_type")
external fun g_file_type_get_type(): GType

@CCall("knifunptr_libgtk31394_g_filesystem_preview_type_get_type")
external fun g_filesystem_preview_type_get_type(): GType

@CCall("knifunptr_libgtk31395_g_file_monitor_event_get_type")
external fun g_file_monitor_event_get_type(): GType

@CCall("knifunptr_libgtk31396_g_io_error_enum_get_type")
external fun g_io_error_enum_get_type(): GType

@CCall("knifunptr_libgtk31397_g_ask_password_flags_get_type")
external fun g_ask_password_flags_get_type(): GType

@CCall("knifunptr_libgtk31398_g_password_save_get_type")
external fun g_password_save_get_type(): GType

@CCall("knifunptr_libgtk31399_g_mount_operation_result_get_type")
external fun g_mount_operation_result_get_type(): GType

@CCall("knifunptr_libgtk31400_g_output_stream_splice_flags_get_type")
external fun g_output_stream_splice_flags_get_type(): GType

@CCall("knifunptr_libgtk31401_g_io_stream_splice_flags_get_type")
external fun g_io_stream_splice_flags_get_type(): GType

@CCall("knifunptr_libgtk31402_g_emblem_origin_get_type")
external fun g_emblem_origin_get_type(): GType

@CCall("knifunptr_libgtk31403_g_resolver_error_get_type")
external fun g_resolver_error_get_type(): GType

@CCall("knifunptr_libgtk31404_g_resolver_record_type_get_type")
external fun g_resolver_record_type_get_type(): GType

@CCall("knifunptr_libgtk31405_g_resource_error_get_type")
external fun g_resource_error_get_type(): GType

@CCall("knifunptr_libgtk31406_g_resource_flags_get_type")
external fun g_resource_flags_get_type(): GType

@CCall("knifunptr_libgtk31407_g_resource_lookup_flags_get_type")
external fun g_resource_lookup_flags_get_type(): GType

@CCall("knifunptr_libgtk31408_g_socket_family_get_type")
external fun g_socket_family_get_type(): GType

@CCall("knifunptr_libgtk31409_g_socket_type_get_type")
external fun g_socket_type_get_type(): GType

@CCall("knifunptr_libgtk31410_g_socket_msg_flags_get_type")
external fun g_socket_msg_flags_get_type(): GType

@CCall("knifunptr_libgtk31411_g_socket_protocol_get_type")
external fun g_socket_protocol_get_type(): GType

@CCall("knifunptr_libgtk31412_g_zlib_compressor_format_get_type")
external fun g_zlib_compressor_format_get_type(): GType

@CCall("knifunptr_libgtk31413_g_unix_socket_address_type_get_type")
external fun g_unix_socket_address_type_get_type(): GType

@CCall("knifunptr_libgtk31414_g_bus_type_get_type")
external fun g_bus_type_get_type(): GType

@CCall("knifunptr_libgtk31415_g_bus_name_owner_flags_get_type")
external fun g_bus_name_owner_flags_get_type(): GType

@CCall("knifunptr_libgtk31416_g_bus_name_watcher_flags_get_type")
external fun g_bus_name_watcher_flags_get_type(): GType

@CCall("knifunptr_libgtk31417_g_dbus_proxy_flags_get_type")
external fun g_dbus_proxy_flags_get_type(): GType

@CCall("knifunptr_libgtk31418_g_dbus_error_get_type")
external fun g_dbus_error_get_type(): GType

@CCall("knifunptr_libgtk31419_g_dbus_connection_flags_get_type")
external fun g_dbus_connection_flags_get_type(): GType

@CCall("knifunptr_libgtk31420_g_dbus_capability_flags_get_type")
external fun g_dbus_capability_flags_get_type(): GType

@CCall("knifunptr_libgtk31421_g_dbus_call_flags_get_type")
external fun g_dbus_call_flags_get_type(): GType

@CCall("knifunptr_libgtk31422_g_dbus_message_type_get_type")
external fun g_dbus_message_type_get_type(): GType

@CCall("knifunptr_libgtk31423_g_dbus_message_flags_get_type")
external fun g_dbus_message_flags_get_type(): GType

@CCall("knifunptr_libgtk31424_g_dbus_message_header_field_get_type")
external fun g_dbus_message_header_field_get_type(): GType

@CCall("knifunptr_libgtk31425_g_dbus_property_info_flags_get_type")
external fun g_dbus_property_info_flags_get_type(): GType

@CCall("knifunptr_libgtk31426_g_dbus_subtree_flags_get_type")
external fun g_dbus_subtree_flags_get_type(): GType

@CCall("knifunptr_libgtk31427_g_dbus_server_flags_get_type")
external fun g_dbus_server_flags_get_type(): GType

@CCall("knifunptr_libgtk31428_g_dbus_signal_flags_get_type")
external fun g_dbus_signal_flags_get_type(): GType

@CCall("knifunptr_libgtk31429_g_dbus_send_message_flags_get_type")
external fun g_dbus_send_message_flags_get_type(): GType

@CCall("knifunptr_libgtk31430_g_credentials_type_get_type")
external fun g_credentials_type_get_type(): GType

@CCall("knifunptr_libgtk31431_g_dbus_message_byte_order_get_type")
external fun g_dbus_message_byte_order_get_type(): GType

@CCall("knifunptr_libgtk31432_g_application_flags_get_type")
external fun g_application_flags_get_type(): GType

@CCall("knifunptr_libgtk31433_g_tls_error_get_type")
external fun g_tls_error_get_type(): GType

@CCall("knifunptr_libgtk31434_g_tls_certificate_flags_get_type")
external fun g_tls_certificate_flags_get_type(): GType

@CCall("knifunptr_libgtk31435_g_tls_authentication_mode_get_type")
external fun g_tls_authentication_mode_get_type(): GType

@CCall("knifunptr_libgtk31436_g_tls_rehandshake_mode_get_type")
external fun g_tls_rehandshake_mode_get_type(): GType

@CCall("knifunptr_libgtk31437_g_tls_password_flags_get_type")
external fun g_tls_password_flags_get_type(): GType

@CCall("knifunptr_libgtk31438_g_tls_interaction_result_get_type")
external fun g_tls_interaction_result_get_type(): GType

@CCall("knifunptr_libgtk31439_g_dbus_interface_skeleton_flags_get_type")
external fun g_dbus_interface_skeleton_flags_get_type(): GType

@CCall("knifunptr_libgtk31440_g_dbus_object_manager_client_flags_get_type")
external fun g_dbus_object_manager_client_flags_get_type(): GType

@CCall("knifunptr_libgtk31441_g_tls_database_verify_flags_get_type")
external fun g_tls_database_verify_flags_get_type(): GType

@CCall("knifunptr_libgtk31442_g_tls_database_lookup_flags_get_type")
external fun g_tls_database_lookup_flags_get_type(): GType

@CCall("knifunptr_libgtk31443_g_tls_certificate_request_flags_get_type")
external fun g_tls_certificate_request_flags_get_type(): GType

@CCall("knifunptr_libgtk31444_g_io_module_scope_flags_get_type")
external fun g_io_module_scope_flags_get_type(): GType

@CCall("knifunptr_libgtk31445_g_socket_client_event_get_type")
external fun g_socket_client_event_get_type(): GType

@CCall("knifunptr_libgtk31446_g_socket_listener_event_get_type")
external fun g_socket_listener_event_get_type(): GType

@CCall("knifunptr_libgtk31447_g_test_dbus_flags_get_type")
external fun g_test_dbus_flags_get_type(): GType

@CCall("knifunptr_libgtk31448_g_subprocess_flags_get_type")
external fun g_subprocess_flags_get_type(): GType

@CCall("knifunptr_libgtk31449_g_notification_priority_get_type")
external fun g_notification_priority_get_type(): GType

@CCall("knifunptr_libgtk31450_g_network_connectivity_get_type")
external fun g_network_connectivity_get_type(): GType

@CCall("knifunptr_libgtk31451_g_settings_bind_flags_get_type")
external fun g_settings_bind_flags_get_type(): GType

@CCall("knifunptr_libgtk31452_g_io_module_scope_new")
external fun g_io_module_scope_new(flags: GIOModuleScopeFlags): CPointer<GIOModuleScope>?

@CCall("knifunptr_libgtk31453_g_io_module_scope_free")
external fun g_io_module_scope_free(scope: CValuesRef<GIOModuleScope>?): Unit

@CCall("knifunptr_libgtk31454_g_io_module_scope_block")
external fun g_io_module_scope_block(scope: CValuesRef<GIOModuleScope>?, @CCall.CString basename: String?): Unit

@CCall("knifunptr_libgtk31455_g_io_module_get_type")
external fun g_io_module_get_type(): GType

@CCall("knifunptr_libgtk31456_g_io_module_new")
external fun g_io_module_new(@CCall.CString filename: String?): CPointer<GIOModule>?

@CCall("knifunptr_libgtk31457_g_io_modules_scan_all_in_directory")
external fun g_io_modules_scan_all_in_directory(@CCall.CString dirname: String?): Unit

@CCall("knifunptr_libgtk31458_g_io_modules_load_all_in_directory")
external fun g_io_modules_load_all_in_directory(@CCall.CString dirname: String?): CPointer<GList>?

@CCall("knifunptr_libgtk31459_g_io_modules_scan_all_in_directory_with_scope")
external fun g_io_modules_scan_all_in_directory_with_scope(@CCall.CString dirname: String?, scope: CValuesRef<GIOModuleScope>?): Unit

@CCall("knifunptr_libgtk31460_g_io_modules_load_all_in_directory_with_scope")
external fun g_io_modules_load_all_in_directory_with_scope(@CCall.CString dirname: String?, scope: CValuesRef<GIOModuleScope>?): CPointer<GList>?

@CCall("knifunptr_libgtk31461_g_io_extension_point_register")
external fun g_io_extension_point_register(@CCall.CString name: String?): CPointer<GIOExtensionPoint>?

@CCall("knifunptr_libgtk31462_g_io_extension_point_lookup")
external fun g_io_extension_point_lookup(@CCall.CString name: String?): CPointer<GIOExtensionPoint>?

@CCall("knifunptr_libgtk31463_g_io_extension_point_set_required_type")
external fun g_io_extension_point_set_required_type(extension_point: CValuesRef<GIOExtensionPoint>?, type: GType): Unit

@CCall("knifunptr_libgtk31464_g_io_extension_point_get_required_type")
external fun g_io_extension_point_get_required_type(extension_point: CValuesRef<GIOExtensionPoint>?): GType

@CCall("knifunptr_libgtk31465_g_io_extension_point_get_extensions")
external fun g_io_extension_point_get_extensions(extension_point: CValuesRef<GIOExtensionPoint>?): CPointer<GList>?

@CCall("knifunptr_libgtk31466_g_io_extension_point_get_extension_by_name")
external fun g_io_extension_point_get_extension_by_name(extension_point: CValuesRef<GIOExtensionPoint>?, @CCall.CString name: String?): CPointer<GIOExtension>?

@CCall("knifunptr_libgtk31467_g_io_extension_point_implement")
external fun g_io_extension_point_implement(@CCall.CString extension_point_name: String?, type: GType, @CCall.CString extension_name: String?, priority: gint): CPointer<GIOExtension>?

@CCall("knifunptr_libgtk31468_g_io_extension_get_type")
external fun g_io_extension_get_type(extension: CValuesRef<GIOExtension>?): GType

@CCall("knifunptr_libgtk31469_g_io_extension_get_name")
external fun g_io_extension_get_name(extension: CValuesRef<GIOExtension>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk31470_g_io_extension_get_priority")
external fun g_io_extension_get_priority(extension: CValuesRef<GIOExtension>?): gint

@CCall("knifunptr_libgtk31471_g_io_extension_ref_class")
external fun g_io_extension_ref_class(extension: CValuesRef<GIOExtension>?): CPointer<GTypeClass>?

@CCall("knifunptr_libgtk31472_g_io_module_load")
external fun g_io_module_load(module: CValuesRef<GIOModule>?): Unit

@CCall("knifunptr_libgtk31473_g_io_module_unload")
external fun g_io_module_unload(module: CValuesRef<GIOModule>?): Unit

@CCall("knifunptr_libgtk31474_g_io_module_query")
external fun g_io_module_query(): CPointer<CPointerVar<ByteVar>>?

@CCall("knifunptr_libgtk31475_g_io_scheduler_push_job")
external fun g_io_scheduler_push_job(job_func: GIOSchedulerJobFunc?, user_data: gpointer?, notify: GDestroyNotify?, io_priority: gint, cancellable: CValuesRef<GCancellable>?): Unit

@CCall("knifunptr_libgtk31476_g_io_scheduler_cancel_all_jobs")
external fun g_io_scheduler_cancel_all_jobs(): Unit

@CCall("knifunptr_libgtk31477_g_io_scheduler_job_send_to_mainloop")
external fun g_io_scheduler_job_send_to_mainloop(job: CValuesRef<GIOSchedulerJob>?, func: GSourceFunc?, user_data: gpointer?, notify: GDestroyNotify?): gboolean

@CCall("knifunptr_libgtk31478_g_io_scheduler_job_send_to_mainloop_async")
external fun g_io_scheduler_job_send_to_mainloop_async(job: CValuesRef<GIOSchedulerJob>?, func: GSourceFunc?, user_data: gpointer?, notify: GDestroyNotify?): Unit

@CCall("knifunptr_libgtk31479_g_loadable_icon_get_type")
external fun g_loadable_icon_get_type(): GType

@CCall("knifunptr_libgtk31480_g_loadable_icon_load")
external fun g_loadable_icon_load(icon: CValuesRef<GLoadableIcon>?, size: Int, type: CValuesRef<CPointerVar<ByteVar>>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GInputStream>?

@CCall("knifunptr_libgtk31481_g_loadable_icon_load_async")
external fun g_loadable_icon_load_async(icon: CValuesRef<GLoadableIcon>?, size: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31482_g_loadable_icon_load_finish")
external fun g_loadable_icon_load_finish(icon: CValuesRef<GLoadableIcon>?, res: CValuesRef<GAsyncResult>?, type: CValuesRef<CPointerVar<ByteVar>>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GInputStream>?

@CCall("knifunptr_libgtk31483_g_memory_input_stream_get_type")
external fun g_memory_input_stream_get_type(): GType

@CCall("knifunptr_libgtk31484_g_memory_input_stream_new")
external fun g_memory_input_stream_new(): CPointer<GInputStream>?

@CCall("knifunptr_libgtk31485_g_memory_input_stream_new_from_data")
external fun g_memory_input_stream_new_from_data(data: CValuesRef<*>?, len: gssize, destroy: GDestroyNotify?): CPointer<GInputStream>?

@CCall("knifunptr_libgtk31486_g_memory_input_stream_new_from_bytes")
external fun g_memory_input_stream_new_from_bytes(bytes: CValuesRef<GBytes>?): CPointer<GInputStream>?

@CCall("knifunptr_libgtk31487_g_memory_input_stream_add_data")
external fun g_memory_input_stream_add_data(stream: CValuesRef<GMemoryInputStream>?, data: CValuesRef<*>?, len: gssize, destroy: GDestroyNotify?): Unit

@CCall("knifunptr_libgtk31488_g_memory_input_stream_add_bytes")
external fun g_memory_input_stream_add_bytes(stream: CValuesRef<GMemoryInputStream>?, bytes: CValuesRef<GBytes>?): Unit

@CCall("knifunptr_libgtk31489_g_memory_output_stream_get_type")
external fun g_memory_output_stream_get_type(): GType

@CCall("knifunptr_libgtk31490_g_memory_output_stream_new")
external fun g_memory_output_stream_new(data: gpointer?, size: gsize, realloc_function: GReallocFunc?, destroy_function: GDestroyNotify?): CPointer<GOutputStream>?

@CCall("knifunptr_libgtk31491_g_memory_output_stream_new_resizable")
external fun g_memory_output_stream_new_resizable(): CPointer<GOutputStream>?

@CCall("knifunptr_libgtk31492_g_memory_output_stream_get_data")
external fun g_memory_output_stream_get_data(ostream: CValuesRef<GMemoryOutputStream>?): gpointer?

@CCall("knifunptr_libgtk31493_g_memory_output_stream_get_size")
external fun g_memory_output_stream_get_size(ostream: CValuesRef<GMemoryOutputStream>?): gsize

@CCall("knifunptr_libgtk31494_g_memory_output_stream_get_data_size")
external fun g_memory_output_stream_get_data_size(ostream: CValuesRef<GMemoryOutputStream>?): gsize

@CCall("knifunptr_libgtk31495_g_memory_output_stream_steal_data")
external fun g_memory_output_stream_steal_data(ostream: CValuesRef<GMemoryOutputStream>?): gpointer?

@CCall("knifunptr_libgtk31496_g_memory_output_stream_steal_as_bytes")
external fun g_memory_output_stream_steal_as_bytes(ostream: CValuesRef<GMemoryOutputStream>?): CPointer<GBytes>?

@CCall("knifunptr_libgtk31497_g_mount_get_type")
external fun g_mount_get_type(): GType

@CCall("knifunptr_libgtk31498_g_mount_get_root")
external fun g_mount_get_root(mount: CValuesRef<GMount>?): CPointer<GFile>?

@CCall("knifunptr_libgtk31499_g_mount_get_default_location")
external fun g_mount_get_default_location(mount: CValuesRef<GMount>?): CPointer<GFile>?

@CCall("knifunptr_libgtk31500_g_mount_get_name")
external fun g_mount_get_name(mount: CValuesRef<GMount>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk31501_g_mount_get_icon")
external fun g_mount_get_icon(mount: CValuesRef<GMount>?): CPointer<GIcon>?

@CCall("knifunptr_libgtk31502_g_mount_get_symbolic_icon")
external fun g_mount_get_symbolic_icon(mount: CValuesRef<GMount>?): CPointer<GIcon>?

@CCall("knifunptr_libgtk31503_g_mount_get_uuid")
external fun g_mount_get_uuid(mount: CValuesRef<GMount>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk31504_g_mount_get_volume")
external fun g_mount_get_volume(mount: CValuesRef<GMount>?): CPointer<GVolume>?

@CCall("knifunptr_libgtk31505_g_mount_get_drive")
external fun g_mount_get_drive(mount: CValuesRef<GMount>?): CPointer<GDrive>?

@CCall("knifunptr_libgtk31506_g_mount_can_unmount")
external fun g_mount_can_unmount(mount: CValuesRef<GMount>?): gboolean

@CCall("knifunptr_libgtk31507_g_mount_can_eject")
external fun g_mount_can_eject(mount: CValuesRef<GMount>?): gboolean

@CCall("knifunptr_libgtk31508_g_mount_unmount")
external fun g_mount_unmount(mount: CValuesRef<GMount>?, flags: GMountUnmountFlags, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31509_g_mount_unmount_finish")
external fun g_mount_unmount_finish(mount: CValuesRef<GMount>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31510_g_mount_eject")
external fun g_mount_eject(mount: CValuesRef<GMount>?, flags: GMountUnmountFlags, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31511_g_mount_eject_finish")
external fun g_mount_eject_finish(mount: CValuesRef<GMount>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31512_g_mount_remount")
external fun g_mount_remount(mount: CValuesRef<GMount>?, flags: GMountMountFlags, mount_operation: CValuesRef<GMountOperation>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31513_g_mount_remount_finish")
external fun g_mount_remount_finish(mount: CValuesRef<GMount>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31514_g_mount_guess_content_type")
external fun g_mount_guess_content_type(mount: CValuesRef<GMount>?, force_rescan: gboolean, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31515_g_mount_guess_content_type_finish")
external fun g_mount_guess_content_type_finish(mount: CValuesRef<GMount>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_libgtk31516_g_mount_guess_content_type_sync")
external fun g_mount_guess_content_type_sync(mount: CValuesRef<GMount>?, force_rescan: gboolean, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_libgtk31517_g_mount_is_shadowed")
external fun g_mount_is_shadowed(mount: CValuesRef<GMount>?): gboolean

@CCall("knifunptr_libgtk31518_g_mount_shadow")
external fun g_mount_shadow(mount: CValuesRef<GMount>?): Unit

@CCall("knifunptr_libgtk31519_g_mount_unshadow")
external fun g_mount_unshadow(mount: CValuesRef<GMount>?): Unit

@CCall("knifunptr_libgtk31520_g_mount_unmount_with_operation")
external fun g_mount_unmount_with_operation(mount: CValuesRef<GMount>?, flags: GMountUnmountFlags, mount_operation: CValuesRef<GMountOperation>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31521_g_mount_unmount_with_operation_finish")
external fun g_mount_unmount_with_operation_finish(mount: CValuesRef<GMount>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31522_g_mount_eject_with_operation")
external fun g_mount_eject_with_operation(mount: CValuesRef<GMount>?, flags: GMountUnmountFlags, mount_operation: CValuesRef<GMountOperation>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31523_g_mount_eject_with_operation_finish")
external fun g_mount_eject_with_operation_finish(mount: CValuesRef<GMount>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31524_g_mount_get_sort_key")
external fun g_mount_get_sort_key(mount: CValuesRef<GMount>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk31525_g_mount_operation_get_type")
external fun g_mount_operation_get_type(): GType

@CCall("knifunptr_libgtk31526_g_mount_operation_new")
external fun g_mount_operation_new(): CPointer<GMountOperation>?

@CCall("knifunptr_libgtk31527_g_mount_operation_get_username")
external fun g_mount_operation_get_username(op: CValuesRef<GMountOperation>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk31528_g_mount_operation_set_username")
external fun g_mount_operation_set_username(op: CValuesRef<GMountOperation>?, @CCall.CString username: String?): Unit

@CCall("knifunptr_libgtk31529_g_mount_operation_get_password")
external fun g_mount_operation_get_password(op: CValuesRef<GMountOperation>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk31530_g_mount_operation_set_password")
external fun g_mount_operation_set_password(op: CValuesRef<GMountOperation>?, @CCall.CString password: String?): Unit

@CCall("knifunptr_libgtk31531_g_mount_operation_get_anonymous")
external fun g_mount_operation_get_anonymous(op: CValuesRef<GMountOperation>?): gboolean

@CCall("knifunptr_libgtk31532_g_mount_operation_set_anonymous")
external fun g_mount_operation_set_anonymous(op: CValuesRef<GMountOperation>?, anonymous: gboolean): Unit

@CCall("knifunptr_libgtk31533_g_mount_operation_get_domain")
external fun g_mount_operation_get_domain(op: CValuesRef<GMountOperation>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk31534_g_mount_operation_set_domain")
external fun g_mount_operation_set_domain(op: CValuesRef<GMountOperation>?, @CCall.CString domain: String?): Unit

@CCall("knifunptr_libgtk31535_g_mount_operation_get_password_save")
external fun g_mount_operation_get_password_save(op: CValuesRef<GMountOperation>?): GPasswordSave

@CCall("knifunptr_libgtk31536_g_mount_operation_set_password_save")
external fun g_mount_operation_set_password_save(op: CValuesRef<GMountOperation>?, save: GPasswordSave): Unit

@CCall("knifunptr_libgtk31537_g_mount_operation_get_choice")
external fun g_mount_operation_get_choice(op: CValuesRef<GMountOperation>?): Int

@CCall("knifunptr_libgtk31538_g_mount_operation_set_choice")
external fun g_mount_operation_set_choice(op: CValuesRef<GMountOperation>?, choice: Int): Unit

@CCall("knifunptr_libgtk31539_g_mount_operation_reply")
external fun g_mount_operation_reply(op: CValuesRef<GMountOperation>?, result: GMountOperationResult): Unit

@CCall("knifunptr_libgtk31540_g_volume_monitor_get_type")
external fun g_volume_monitor_get_type(): GType

@CCall("knifunptr_libgtk31541_g_volume_monitor_get")
external fun g_volume_monitor_get(): CPointer<GVolumeMonitor>?

@CCall("knifunptr_libgtk31542_g_volume_monitor_get_connected_drives")
external fun g_volume_monitor_get_connected_drives(volume_monitor: CValuesRef<GVolumeMonitor>?): CPointer<GList>?

@CCall("knifunptr_libgtk31543_g_volume_monitor_get_volumes")
external fun g_volume_monitor_get_volumes(volume_monitor: CValuesRef<GVolumeMonitor>?): CPointer<GList>?

@CCall("knifunptr_libgtk31544_g_volume_monitor_get_mounts")
external fun g_volume_monitor_get_mounts(volume_monitor: CValuesRef<GVolumeMonitor>?): CPointer<GList>?

@CCall("knifunptr_libgtk31545_g_volume_monitor_get_volume_for_uuid")
external fun g_volume_monitor_get_volume_for_uuid(volume_monitor: CValuesRef<GVolumeMonitor>?, @CCall.CString uuid: String?): CPointer<GVolume>?

@CCall("knifunptr_libgtk31546_g_volume_monitor_get_mount_for_uuid")
external fun g_volume_monitor_get_mount_for_uuid(volume_monitor: CValuesRef<GVolumeMonitor>?, @CCall.CString uuid: String?): CPointer<GMount>?

@CCall("knifunptr_libgtk31547_g_volume_monitor_adopt_orphan_mount")
external fun g_volume_monitor_adopt_orphan_mount(mount: CValuesRef<GMount>?): CPointer<GVolume>?

@CCall("knifunptr_libgtk31548_g_native_volume_monitor_get_type")
external fun g_native_volume_monitor_get_type(): GType

@CCall("knifunptr_libgtk31549_g_network_address_get_type")
external fun g_network_address_get_type(): GType

@CCall("knifunptr_libgtk31550_g_network_address_new")
external fun g_network_address_new(@CCall.CString hostname: String?, port: guint16): CPointer<GSocketConnectable>?

@CCall("knifunptr_libgtk31551_g_network_address_new_loopback")
external fun g_network_address_new_loopback(port: guint16): CPointer<GSocketConnectable>?

@CCall("knifunptr_libgtk31552_g_network_address_parse")
external fun g_network_address_parse(@CCall.CString host_and_port: String?, default_port: guint16, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocketConnectable>?

@CCall("knifunptr_libgtk31553_g_network_address_parse_uri")
external fun g_network_address_parse_uri(@CCall.CString uri: String?, default_port: guint16, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocketConnectable>?

@CCall("knifunptr_libgtk31554_g_network_address_get_hostname")
external fun g_network_address_get_hostname(addr: CValuesRef<GNetworkAddress>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk31555_g_network_address_get_port")
external fun g_network_address_get_port(addr: CValuesRef<GNetworkAddress>?): guint16

@CCall("knifunptr_libgtk31556_g_network_address_get_scheme")
external fun g_network_address_get_scheme(addr: CValuesRef<GNetworkAddress>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk31557_g_network_monitor_get_type")
external fun g_network_monitor_get_type(): GType

@CCall("knifunptr_libgtk31558_g_network_monitor_get_default")
external fun g_network_monitor_get_default(): CPointer<GNetworkMonitor>?

@CCall("knifunptr_libgtk31559_g_network_monitor_get_network_available")
external fun g_network_monitor_get_network_available(monitor: CValuesRef<GNetworkMonitor>?): gboolean

@CCall("knifunptr_libgtk31560_g_network_monitor_get_network_metered")
external fun g_network_monitor_get_network_metered(monitor: CValuesRef<GNetworkMonitor>?): gboolean

@CCall("knifunptr_libgtk31561_g_network_monitor_get_connectivity")
external fun g_network_monitor_get_connectivity(monitor: CValuesRef<GNetworkMonitor>?): GNetworkConnectivity

@CCall("knifunptr_libgtk31562_g_network_monitor_can_reach")
external fun g_network_monitor_can_reach(monitor: CValuesRef<GNetworkMonitor>?, connectable: CValuesRef<GSocketConnectable>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31563_g_network_monitor_can_reach_async")
external fun g_network_monitor_can_reach_async(monitor: CValuesRef<GNetworkMonitor>?, connectable: CValuesRef<GSocketConnectable>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31564_g_network_monitor_can_reach_finish")
external fun g_network_monitor_can_reach_finish(monitor: CValuesRef<GNetworkMonitor>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31565_g_network_service_get_type")
external fun g_network_service_get_type(): GType

@CCall("knifunptr_libgtk31566_g_network_service_new")
external fun g_network_service_new(@CCall.CString service: String?, @CCall.CString protocol: String?, @CCall.CString domain: String?): CPointer<GSocketConnectable>?

@CCall("knifunptr_libgtk31567_g_network_service_get_service")
external fun g_network_service_get_service(srv: CValuesRef<GNetworkService>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk31568_g_network_service_get_protocol")
external fun g_network_service_get_protocol(srv: CValuesRef<GNetworkService>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk31569_g_network_service_get_domain")
external fun g_network_service_get_domain(srv: CValuesRef<GNetworkService>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk31570_g_network_service_get_scheme")
external fun g_network_service_get_scheme(srv: CValuesRef<GNetworkService>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk31571_g_network_service_set_scheme")
external fun g_network_service_set_scheme(srv: CValuesRef<GNetworkService>?, @CCall.CString scheme: String?): Unit

@CCall("knifunptr_libgtk31572_g_permission_get_type")
external fun g_permission_get_type(): GType

@CCall("knifunptr_libgtk31573_g_permission_acquire")
external fun g_permission_acquire(permission: CValuesRef<GPermission>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31574_g_permission_acquire_async")
external fun g_permission_acquire_async(permission: CValuesRef<GPermission>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31575_g_permission_acquire_finish")
external fun g_permission_acquire_finish(permission: CValuesRef<GPermission>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31576_g_permission_release")
external fun g_permission_release(permission: CValuesRef<GPermission>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31577_g_permission_release_async")
external fun g_permission_release_async(permission: CValuesRef<GPermission>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31578_g_permission_release_finish")
external fun g_permission_release_finish(permission: CValuesRef<GPermission>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31579_g_permission_get_allowed")
external fun g_permission_get_allowed(permission: CValuesRef<GPermission>?): gboolean

@CCall("knifunptr_libgtk31580_g_permission_get_can_acquire")
external fun g_permission_get_can_acquire(permission: CValuesRef<GPermission>?): gboolean

@CCall("knifunptr_libgtk31581_g_permission_get_can_release")
external fun g_permission_get_can_release(permission: CValuesRef<GPermission>?): gboolean

@CCall("knifunptr_libgtk31582_g_permission_impl_update")
external fun g_permission_impl_update(permission: CValuesRef<GPermission>?, allowed: gboolean, can_acquire: gboolean, can_release: gboolean): Unit

@CCall("knifunptr_libgtk31583_g_pollable_input_stream_get_type")
external fun g_pollable_input_stream_get_type(): GType

@CCall("knifunptr_libgtk31584_g_pollable_input_stream_can_poll")
external fun g_pollable_input_stream_can_poll(stream: CValuesRef<GPollableInputStream>?): gboolean

@CCall("knifunptr_libgtk31585_g_pollable_input_stream_is_readable")
external fun g_pollable_input_stream_is_readable(stream: CValuesRef<GPollableInputStream>?): gboolean

@CCall("knifunptr_libgtk31586_g_pollable_input_stream_create_source")
external fun g_pollable_input_stream_create_source(stream: CValuesRef<GPollableInputStream>?, cancellable: CValuesRef<GCancellable>?): CPointer<GSource>?

@CCall("knifunptr_libgtk31587_g_pollable_input_stream_read_nonblocking")
external fun g_pollable_input_stream_read_nonblocking(stream: CValuesRef<GPollableInputStream>?, buffer: CValuesRef<*>?, count: gsize, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_libgtk31588_g_pollable_output_stream_get_type")
external fun g_pollable_output_stream_get_type(): GType

@CCall("knifunptr_libgtk31589_g_pollable_output_stream_can_poll")
external fun g_pollable_output_stream_can_poll(stream: CValuesRef<GPollableOutputStream>?): gboolean

@CCall("knifunptr_libgtk31590_g_pollable_output_stream_is_writable")
external fun g_pollable_output_stream_is_writable(stream: CValuesRef<GPollableOutputStream>?): gboolean

@CCall("knifunptr_libgtk31591_g_pollable_output_stream_create_source")
external fun g_pollable_output_stream_create_source(stream: CValuesRef<GPollableOutputStream>?, cancellable: CValuesRef<GCancellable>?): CPointer<GSource>?

@CCall("knifunptr_libgtk31592_g_pollable_output_stream_write_nonblocking")
external fun g_pollable_output_stream_write_nonblocking(stream: CValuesRef<GPollableOutputStream>?, buffer: CValuesRef<*>?, count: gsize, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_libgtk31593_g_pollable_source_new")
external fun g_pollable_source_new(pollable_stream: CValuesRef<GObject>?): CPointer<GSource>?

@CCall("knifunptr_libgtk31594_g_pollable_source_new_full")
external fun g_pollable_source_new_full(pollable_stream: gpointer?, child_source: CValuesRef<GSource>?, cancellable: CValuesRef<GCancellable>?): CPointer<GSource>?

@CCall("knifunptr_libgtk31595_g_pollable_stream_read")
external fun g_pollable_stream_read(stream: CValuesRef<GInputStream>?, buffer: CValuesRef<*>?, count: gsize, blocking: gboolean, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_libgtk31596_g_pollable_stream_write")
external fun g_pollable_stream_write(stream: CValuesRef<GOutputStream>?, buffer: CValuesRef<*>?, count: gsize, blocking: gboolean, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_libgtk31597_g_pollable_stream_write_all")
external fun g_pollable_stream_write_all(stream: CValuesRef<GOutputStream>?, buffer: CValuesRef<*>?, count: gsize, blocking: gboolean, bytes_written: CValuesRef<gsizeVar>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31598_g_property_action_get_type")
external fun g_property_action_get_type(): GType

@CCall("knifunptr_libgtk31599_g_property_action_new")
external fun g_property_action_new(@CCall.CString name: String?, `object`: gpointer?, @CCall.CString property_name: String?): CPointer<GPropertyAction>?

@CCall("knifunptr_libgtk31600_g_proxy_get_type")
external fun g_proxy_get_type(): GType

@CCall("knifunptr_libgtk31601_g_proxy_get_default_for_protocol")
external fun g_proxy_get_default_for_protocol(@CCall.CString protocol: String?): CPointer<GProxy>?

@CCall("knifunptr_libgtk31602_g_proxy_connect")
external fun g_proxy_connect(proxy: CValuesRef<GProxy>?, connection: CValuesRef<GIOStream>?, proxy_address: CValuesRef<GProxyAddress>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GIOStream>?

@CCall("knifunptr_libgtk31603_g_proxy_connect_async")
external fun g_proxy_connect_async(proxy: CValuesRef<GProxy>?, connection: CValuesRef<GIOStream>?, proxy_address: CValuesRef<GProxyAddress>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31604_g_proxy_connect_finish")
external fun g_proxy_connect_finish(proxy: CValuesRef<GProxy>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GIOStream>?

@CCall("knifunptr_libgtk31605_g_proxy_supports_hostname")
external fun g_proxy_supports_hostname(proxy: CValuesRef<GProxy>?): gboolean

@CCall("knifunptr_libgtk31606_g_proxy_address_get_type")
external fun g_proxy_address_get_type(): GType

@CCall("knifunptr_libgtk31607_g_proxy_address_new")
external fun g_proxy_address_new(inetaddr: CValuesRef<GInetAddress>?, port: guint16, @CCall.CString protocol: String?, @CCall.CString dest_hostname: String?, dest_port: guint16, @CCall.CString username: String?, @CCall.CString password: String?): CPointer<GSocketAddress>?

@CCall("knifunptr_libgtk31608_g_proxy_address_get_protocol")
external fun g_proxy_address_get_protocol(proxy: CValuesRef<GProxyAddress>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk31609_g_proxy_address_get_destination_protocol")
external fun g_proxy_address_get_destination_protocol(proxy: CValuesRef<GProxyAddress>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk31610_g_proxy_address_get_destination_hostname")
external fun g_proxy_address_get_destination_hostname(proxy: CValuesRef<GProxyAddress>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk31611_g_proxy_address_get_destination_port")
external fun g_proxy_address_get_destination_port(proxy: CValuesRef<GProxyAddress>?): guint16

@CCall("knifunptr_libgtk31612_g_proxy_address_get_username")
external fun g_proxy_address_get_username(proxy: CValuesRef<GProxyAddress>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk31613_g_proxy_address_get_password")
external fun g_proxy_address_get_password(proxy: CValuesRef<GProxyAddress>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk31614_g_proxy_address_get_uri")
external fun g_proxy_address_get_uri(proxy: CValuesRef<GProxyAddress>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk31615_g_socket_address_enumerator_get_type")
external fun g_socket_address_enumerator_get_type(): GType

@CCall("knifunptr_libgtk31616_g_socket_address_enumerator_next")
external fun g_socket_address_enumerator_next(enumerator: CValuesRef<GSocketAddressEnumerator>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocketAddress>?

@CCall("knifunptr_libgtk31617_g_socket_address_enumerator_next_async")
external fun g_socket_address_enumerator_next_async(enumerator: CValuesRef<GSocketAddressEnumerator>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31618_g_socket_address_enumerator_next_finish")
external fun g_socket_address_enumerator_next_finish(enumerator: CValuesRef<GSocketAddressEnumerator>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocketAddress>?

@CCall("knifunptr_libgtk31619_g_proxy_address_enumerator_get_type")
external fun g_proxy_address_enumerator_get_type(): GType

@CCall("knifunptr_libgtk31620_g_proxy_resolver_get_type")
external fun g_proxy_resolver_get_type(): GType

@CCall("knifunptr_libgtk31621_g_proxy_resolver_get_default")
external fun g_proxy_resolver_get_default(): CPointer<GProxyResolver>?

@CCall("knifunptr_libgtk31622_g_proxy_resolver_is_supported")
external fun g_proxy_resolver_is_supported(resolver: CValuesRef<GProxyResolver>?): gboolean

@CCall("knifunptr_libgtk31623_g_proxy_resolver_lookup")
external fun g_proxy_resolver_lookup(resolver: CValuesRef<GProxyResolver>?, @CCall.CString uri: String?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_libgtk31624_g_proxy_resolver_lookup_async")
external fun g_proxy_resolver_lookup_async(resolver: CValuesRef<GProxyResolver>?, @CCall.CString uri: String?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31625_g_proxy_resolver_lookup_finish")
external fun g_proxy_resolver_lookup_finish(resolver: CValuesRef<GProxyResolver>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_libgtk31626_g_resolver_get_type")
external fun g_resolver_get_type(): GType

@CCall("knifunptr_libgtk31627_g_resolver_get_default")
external fun g_resolver_get_default(): CPointer<GResolver>?

@CCall("knifunptr_libgtk31628_g_resolver_set_default")
external fun g_resolver_set_default(resolver: CValuesRef<GResolver>?): Unit

@CCall("knifunptr_libgtk31629_g_resolver_lookup_by_name")
external fun g_resolver_lookup_by_name(resolver: CValuesRef<GResolver>?, @CCall.CString hostname: String?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GList>?

@CCall("knifunptr_libgtk31630_g_resolver_lookup_by_name_async")
external fun g_resolver_lookup_by_name_async(resolver: CValuesRef<GResolver>?, @CCall.CString hostname: String?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31631_g_resolver_lookup_by_name_finish")
external fun g_resolver_lookup_by_name_finish(resolver: CValuesRef<GResolver>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GList>?

@CCall("knifunptr_libgtk31632_g_resolver_free_addresses")
external fun g_resolver_free_addresses(addresses: CValuesRef<GList>?): Unit

@CCall("knifunptr_libgtk31633_g_resolver_lookup_by_address")
external fun g_resolver_lookup_by_address(resolver: CValuesRef<GResolver>?, address: CValuesRef<GInetAddress>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk31634_g_resolver_lookup_by_address_async")
external fun g_resolver_lookup_by_address_async(resolver: CValuesRef<GResolver>?, address: CValuesRef<GInetAddress>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31635_g_resolver_lookup_by_address_finish")
external fun g_resolver_lookup_by_address_finish(resolver: CValuesRef<GResolver>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk31636_g_resolver_lookup_service")
external fun g_resolver_lookup_service(resolver: CValuesRef<GResolver>?, @CCall.CString service: String?, @CCall.CString protocol: String?, @CCall.CString domain: String?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GList>?

@CCall("knifunptr_libgtk31637_g_resolver_lookup_service_async")
external fun g_resolver_lookup_service_async(resolver: CValuesRef<GResolver>?, @CCall.CString service: String?, @CCall.CString protocol: String?, @CCall.CString domain: String?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31638_g_resolver_lookup_service_finish")
external fun g_resolver_lookup_service_finish(resolver: CValuesRef<GResolver>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GList>?

@CCall("knifunptr_libgtk31639_g_resolver_lookup_records")
external fun g_resolver_lookup_records(resolver: CValuesRef<GResolver>?, @CCall.CString rrname: String?, record_type: GResolverRecordType, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GList>?

@CCall("knifunptr_libgtk31640_g_resolver_lookup_records_async")
external fun g_resolver_lookup_records_async(resolver: CValuesRef<GResolver>?, @CCall.CString rrname: String?, record_type: GResolverRecordType, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31641_g_resolver_lookup_records_finish")
external fun g_resolver_lookup_records_finish(resolver: CValuesRef<GResolver>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GList>?

@CCall("knifunptr_libgtk31642_g_resolver_free_targets")
external fun g_resolver_free_targets(targets: CValuesRef<GList>?): Unit

@CCall("knifunptr_libgtk31643_g_resolver_error_quark")
external fun g_resolver_error_quark(): GQuark

@CCall("knifunptr_libgtk31644_g_resource_error_quark")
external fun g_resource_error_quark(): GQuark

@CCall("knifunptr_libgtk31645_g_resource_get_type")
external fun g_resource_get_type(): GType

@CCall("knifunptr_libgtk31646_g_resource_new_from_data")
external fun g_resource_new_from_data(data: CValuesRef<GBytes>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GResource>?

@CCall("knifunptr_libgtk31647_g_resource_ref")
external fun g_resource_ref(resource: CValuesRef<GResource>?): CPointer<GResource>?

@CCall("knifunptr_libgtk31648_g_resource_unref")
external fun g_resource_unref(resource: CValuesRef<GResource>?): Unit

@CCall("knifunptr_libgtk31649_g_resource_load")
external fun g_resource_load(@CCall.CString filename: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GResource>?

@CCall("knifunptr_libgtk31650_g_resource_open_stream")
external fun g_resource_open_stream(resource: CValuesRef<GResource>?, @CCall.CString path: String?, lookup_flags: GResourceLookupFlags, error: CValuesRef<CPointerVar<GError>>?): CPointer<GInputStream>?

@CCall("knifunptr_libgtk31651_g_resource_lookup_data")
external fun g_resource_lookup_data(resource: CValuesRef<GResource>?, @CCall.CString path: String?, lookup_flags: GResourceLookupFlags, error: CValuesRef<CPointerVar<GError>>?): CPointer<GBytes>?

@CCall("knifunptr_libgtk31652_g_resource_enumerate_children")
external fun g_resource_enumerate_children(resource: CValuesRef<GResource>?, @CCall.CString path: String?, lookup_flags: GResourceLookupFlags, error: CValuesRef<CPointerVar<GError>>?): CPointer<CPointerVar<ByteVar>>?

@CCall("knifunptr_libgtk31653_g_resource_get_info")
external fun g_resource_get_info(resource: CValuesRef<GResource>?, @CCall.CString path: String?, lookup_flags: GResourceLookupFlags, size: CValuesRef<gsizeVar>?, flags: CValuesRef<guint32Var>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31654_g_resources_register")
external fun g_resources_register(resource: CValuesRef<GResource>?): Unit

@CCall("knifunptr_libgtk31655_g_resources_unregister")
external fun g_resources_unregister(resource: CValuesRef<GResource>?): Unit

@CCall("knifunptr_libgtk31656_g_resources_open_stream")
external fun g_resources_open_stream(@CCall.CString path: String?, lookup_flags: GResourceLookupFlags, error: CValuesRef<CPointerVar<GError>>?): CPointer<GInputStream>?

@CCall("knifunptr_libgtk31657_g_resources_lookup_data")
external fun g_resources_lookup_data(@CCall.CString path: String?, lookup_flags: GResourceLookupFlags, error: CValuesRef<CPointerVar<GError>>?): CPointer<GBytes>?

@CCall("knifunptr_libgtk31658_g_resources_enumerate_children")
external fun g_resources_enumerate_children(@CCall.CString path: String?, lookup_flags: GResourceLookupFlags, error: CValuesRef<CPointerVar<GError>>?): CPointer<CPointerVar<ByteVar>>?

@CCall("knifunptr_libgtk31659_g_resources_get_info")
external fun g_resources_get_info(@CCall.CString path: String?, lookup_flags: GResourceLookupFlags, size: CValuesRef<gsizeVar>?, flags: CValuesRef<guint32Var>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31660_g_static_resource_init")
external fun g_static_resource_init(static_resource: CValuesRef<GStaticResource>?): Unit

@CCall("knifunptr_libgtk31661_g_static_resource_fini")
external fun g_static_resource_fini(static_resource: CValuesRef<GStaticResource>?): Unit

@CCall("knifunptr_libgtk31662_g_static_resource_get_resource")
external fun g_static_resource_get_resource(static_resource: CValuesRef<GStaticResource>?): CPointer<GResource>?

@CCall("knifunptr_libgtk31663_g_seekable_get_type")
external fun g_seekable_get_type(): GType

@CCall("knifunptr_libgtk31664_g_seekable_tell")
external fun g_seekable_tell(seekable: CValuesRef<GSeekable>?): goffset

@CCall("knifunptr_libgtk31665_g_seekable_can_seek")
external fun g_seekable_can_seek(seekable: CValuesRef<GSeekable>?): gboolean

@CCall("knifunptr_libgtk31666_g_seekable_seek")
external fun g_seekable_seek(seekable: CValuesRef<GSeekable>?, offset: goffset, type: GSeekType, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31667_g_seekable_can_truncate")
external fun g_seekable_can_truncate(seekable: CValuesRef<GSeekable>?): gboolean

@CCall("knifunptr_libgtk31668_g_seekable_truncate")
external fun g_seekable_truncate(seekable: CValuesRef<GSeekable>?, offset: goffset, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31669_g_settings_schema_source_get_type")
external fun g_settings_schema_source_get_type(): GType

@CCall("knifunptr_libgtk31670_g_settings_schema_source_get_default")
external fun g_settings_schema_source_get_default(): CPointer<GSettingsSchemaSource>?

@CCall("knifunptr_libgtk31671_g_settings_schema_source_ref")
external fun g_settings_schema_source_ref(source: CValuesRef<GSettingsSchemaSource>?): CPointer<GSettingsSchemaSource>?

@CCall("knifunptr_libgtk31672_g_settings_schema_source_unref")
external fun g_settings_schema_source_unref(source: CValuesRef<GSettingsSchemaSource>?): Unit

@CCall("knifunptr_libgtk31673_g_settings_schema_source_new_from_directory")
external fun g_settings_schema_source_new_from_directory(@CCall.CString directory: String?, parent: CValuesRef<GSettingsSchemaSource>?, trusted: gboolean, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSettingsSchemaSource>?

@CCall("knifunptr_libgtk31674_g_settings_schema_source_lookup")
external fun g_settings_schema_source_lookup(source: CValuesRef<GSettingsSchemaSource>?, @CCall.CString schema_id: String?, recursive: gboolean): CPointer<GSettingsSchema>?

@CCall("knifunptr_libgtk31675_g_settings_schema_source_list_schemas")
external fun g_settings_schema_source_list_schemas(source: CValuesRef<GSettingsSchemaSource>?, recursive: gboolean, non_relocatable: CValuesRef<CPointerVar<CPointerVar<gcharVar>>>?, relocatable: CValuesRef<CPointerVar<CPointerVar<gcharVar>>>?): Unit

@CCall("knifunptr_libgtk31676_g_settings_schema_get_type")
external fun g_settings_schema_get_type(): GType

@CCall("knifunptr_libgtk31677_g_settings_schema_ref")
external fun g_settings_schema_ref(schema: CValuesRef<GSettingsSchema>?): CPointer<GSettingsSchema>?

@CCall("knifunptr_libgtk31678_g_settings_schema_unref")
external fun g_settings_schema_unref(schema: CValuesRef<GSettingsSchema>?): Unit

@CCall("knifunptr_libgtk31679_g_settings_schema_get_id")
external fun g_settings_schema_get_id(schema: CValuesRef<GSettingsSchema>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk31680_g_settings_schema_get_path")
external fun g_settings_schema_get_path(schema: CValuesRef<GSettingsSchema>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk31681_g_settings_schema_get_key")
external fun g_settings_schema_get_key(schema: CValuesRef<GSettingsSchema>?, @CCall.CString name: String?): CPointer<GSettingsSchemaKey>?

@CCall("knifunptr_libgtk31682_g_settings_schema_has_key")
external fun g_settings_schema_has_key(schema: CValuesRef<GSettingsSchema>?, @CCall.CString name: String?): gboolean

@CCall("knifunptr_libgtk31683_g_settings_schema_list_keys")
external fun g_settings_schema_list_keys(schema: CValuesRef<GSettingsSchema>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_libgtk31684_g_settings_schema_list_children")
external fun g_settings_schema_list_children(schema: CValuesRef<GSettingsSchema>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_libgtk31685_g_settings_schema_key_get_type")
external fun g_settings_schema_key_get_type(): GType

@CCall("knifunptr_libgtk31686_g_settings_schema_key_ref")
external fun g_settings_schema_key_ref(key: CValuesRef<GSettingsSchemaKey>?): CPointer<GSettingsSchemaKey>?

@CCall("knifunptr_libgtk31687_g_settings_schema_key_unref")
external fun g_settings_schema_key_unref(key: CValuesRef<GSettingsSchemaKey>?): Unit

@CCall("knifunptr_libgtk31688_g_settings_schema_key_get_value_type")
external fun g_settings_schema_key_get_value_type(key: CValuesRef<GSettingsSchemaKey>?): CPointer<GVariantType>?

@CCall("knifunptr_libgtk31689_g_settings_schema_key_get_default_value")
external fun g_settings_schema_key_get_default_value(key: CValuesRef<GSettingsSchemaKey>?): CPointer<GVariant>?

@CCall("knifunptr_libgtk31690_g_settings_schema_key_get_range")
external fun g_settings_schema_key_get_range(key: CValuesRef<GSettingsSchemaKey>?): CPointer<GVariant>?

@CCall("knifunptr_libgtk31691_g_settings_schema_key_range_check")
external fun g_settings_schema_key_range_check(key: CValuesRef<GSettingsSchemaKey>?, value: CValuesRef<GVariant>?): gboolean

@CCall("knifunptr_libgtk31692_g_settings_schema_key_get_name")
external fun g_settings_schema_key_get_name(key: CValuesRef<GSettingsSchemaKey>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk31693_g_settings_schema_key_get_summary")
external fun g_settings_schema_key_get_summary(key: CValuesRef<GSettingsSchemaKey>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk31694_g_settings_schema_key_get_description")
external fun g_settings_schema_key_get_description(key: CValuesRef<GSettingsSchemaKey>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk31695_g_settings_get_type")
external fun g_settings_get_type(): GType

@CCall("knifunptr_libgtk31696_g_settings_list_schemas")
external fun g_settings_list_schemas(): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_libgtk31697_g_settings_list_relocatable_schemas")
external fun g_settings_list_relocatable_schemas(): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_libgtk31698_g_settings_new")
external fun g_settings_new(@CCall.CString schema_id: String?): CPointer<GSettings>?

@CCall("knifunptr_libgtk31699_g_settings_new_with_path")
external fun g_settings_new_with_path(@CCall.CString schema_id: String?, @CCall.CString path: String?): CPointer<GSettings>?

@CCall("knifunptr_libgtk31700_g_settings_new_with_backend")
external fun g_settings_new_with_backend(@CCall.CString schema_id: String?, backend: CValuesRef<GSettingsBackend>?): CPointer<GSettings>?

@CCall("knifunptr_libgtk31701_g_settings_new_with_backend_and_path")
external fun g_settings_new_with_backend_and_path(@CCall.CString schema_id: String?, backend: CValuesRef<GSettingsBackend>?, @CCall.CString path: String?): CPointer<GSettings>?

@CCall("knifunptr_libgtk31702_g_settings_new_full")
external fun g_settings_new_full(schema: CValuesRef<GSettingsSchema>?, backend: CValuesRef<GSettingsBackend>?, @CCall.CString path: String?): CPointer<GSettings>?

@CCall("knifunptr_libgtk31703_g_settings_list_children")
external fun g_settings_list_children(settings: CValuesRef<GSettings>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_libgtk31704_g_settings_list_keys")
external fun g_settings_list_keys(settings: CValuesRef<GSettings>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_libgtk31705_g_settings_get_range")
external fun g_settings_get_range(settings: CValuesRef<GSettings>?, @CCall.CString key: String?): CPointer<GVariant>?

@CCall("knifunptr_libgtk31706_g_settings_range_check")
external fun g_settings_range_check(settings: CValuesRef<GSettings>?, @CCall.CString key: String?, value: CValuesRef<GVariant>?): gboolean

@CCall("knifunptr_libgtk31707_g_settings_set_value")
external fun g_settings_set_value(settings: CValuesRef<GSettings>?, @CCall.CString key: String?, value: CValuesRef<GVariant>?): gboolean

@CCall("knifunptr_libgtk31708_g_settings_get_value")
external fun g_settings_get_value(settings: CValuesRef<GSettings>?, @CCall.CString key: String?): CPointer<GVariant>?

@CCall("knifunptr_libgtk31709_g_settings_get_user_value")
external fun g_settings_get_user_value(settings: CValuesRef<GSettings>?, @CCall.CString key: String?): CPointer<GVariant>?

@CCall("knifunptr_libgtk31710_g_settings_get_default_value")
external fun g_settings_get_default_value(settings: CValuesRef<GSettings>?, @CCall.CString key: String?): CPointer<GVariant>?

@CCall("knifunptr_libgtk31711_g_settings_set")
external fun g_settings_set(settings: CValuesRef<GSettings>?, @CCall.CString key: String?, @CCall.CString format: String?, vararg variadicArguments: Any?): gboolean

@CCall("knifunptr_libgtk31712_g_settings_get")
external fun g_settings_get(settings: CValuesRef<GSettings>?, @CCall.CString key: String?, @CCall.CString format: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk31713_g_settings_reset")
external fun g_settings_reset(settings: CValuesRef<GSettings>?, @CCall.CString key: String?): Unit

@CCall("knifunptr_libgtk31714_g_settings_get_int")
external fun g_settings_get_int(settings: CValuesRef<GSettings>?, @CCall.CString key: String?): gint

@CCall("knifunptr_libgtk31715_g_settings_set_int")
external fun g_settings_set_int(settings: CValuesRef<GSettings>?, @CCall.CString key: String?, value: gint): gboolean

@CCall("knifunptr_libgtk31716_g_settings_get_int64")
external fun g_settings_get_int64(settings: CValuesRef<GSettings>?, @CCall.CString key: String?): gint64

@CCall("knifunptr_libgtk31717_g_settings_set_int64")
external fun g_settings_set_int64(settings: CValuesRef<GSettings>?, @CCall.CString key: String?, value: gint64): gboolean

@CCall("knifunptr_libgtk31718_g_settings_get_uint")
external fun g_settings_get_uint(settings: CValuesRef<GSettings>?, @CCall.CString key: String?): guint

@CCall("knifunptr_libgtk31719_g_settings_set_uint")
external fun g_settings_set_uint(settings: CValuesRef<GSettings>?, @CCall.CString key: String?, value: guint): gboolean

@CCall("knifunptr_libgtk31720_g_settings_get_uint64")
external fun g_settings_get_uint64(settings: CValuesRef<GSettings>?, @CCall.CString key: String?): guint64

@CCall("knifunptr_libgtk31721_g_settings_set_uint64")
external fun g_settings_set_uint64(settings: CValuesRef<GSettings>?, @CCall.CString key: String?, value: guint64): gboolean

@CCall("knifunptr_libgtk31722_g_settings_get_string")
external fun g_settings_get_string(settings: CValuesRef<GSettings>?, @CCall.CString key: String?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk31723_g_settings_set_string")
external fun g_settings_set_string(settings: CValuesRef<GSettings>?, @CCall.CString key: String?, @CCall.CString value: String?): gboolean

@CCall("knifunptr_libgtk31724_g_settings_get_boolean")
external fun g_settings_get_boolean(settings: CValuesRef<GSettings>?, @CCall.CString key: String?): gboolean

@CCall("knifunptr_libgtk31725_g_settings_set_boolean")
external fun g_settings_set_boolean(settings: CValuesRef<GSettings>?, @CCall.CString key: String?, value: gboolean): gboolean

@CCall("knifunptr_libgtk31726_g_settings_get_double")
external fun g_settings_get_double(settings: CValuesRef<GSettings>?, @CCall.CString key: String?): gdouble

@CCall("knifunptr_libgtk31727_g_settings_set_double")
external fun g_settings_set_double(settings: CValuesRef<GSettings>?, @CCall.CString key: String?, value: gdouble): gboolean

@CCall("knifunptr_libgtk31728_g_settings_get_strv")
external fun g_settings_get_strv(settings: CValuesRef<GSettings>?, @CCall.CString key: String?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_libgtk31729_g_settings_set_strv")
external fun g_settings_set_strv(settings: CValuesRef<GSettings>?, @CCall.CString key: String?, value: CValuesRef<CPointerVar<gcharVar>>?): gboolean

@CCall("knifunptr_libgtk31730_g_settings_get_enum")
external fun g_settings_get_enum(settings: CValuesRef<GSettings>?, @CCall.CString key: String?): gint

@CCall("knifunptr_libgtk31731_g_settings_set_enum")
external fun g_settings_set_enum(settings: CValuesRef<GSettings>?, @CCall.CString key: String?, value: gint): gboolean

@CCall("knifunptr_libgtk31732_g_settings_get_flags")
external fun g_settings_get_flags(settings: CValuesRef<GSettings>?, @CCall.CString key: String?): guint

@CCall("knifunptr_libgtk31733_g_settings_set_flags")
external fun g_settings_set_flags(settings: CValuesRef<GSettings>?, @CCall.CString key: String?, value: guint): gboolean

@CCall("knifunptr_libgtk31734_g_settings_get_child")
external fun g_settings_get_child(settings: CValuesRef<GSettings>?, @CCall.CString name: String?): CPointer<GSettings>?

@CCall("knifunptr_libgtk31735_g_settings_is_writable")
external fun g_settings_is_writable(settings: CValuesRef<GSettings>?, @CCall.CString name: String?): gboolean

@CCall("knifunptr_libgtk31736_g_settings_delay")
external fun g_settings_delay(settings: CValuesRef<GSettings>?): Unit

@CCall("knifunptr_libgtk31737_g_settings_apply")
external fun g_settings_apply(settings: CValuesRef<GSettings>?): Unit

@CCall("knifunptr_libgtk31738_g_settings_revert")
external fun g_settings_revert(settings: CValuesRef<GSettings>?): Unit

@CCall("knifunptr_libgtk31739_g_settings_get_has_unapplied")
external fun g_settings_get_has_unapplied(settings: CValuesRef<GSettings>?): gboolean

@CCall("knifunptr_libgtk31740_g_settings_sync")
external fun g_settings_sync(): Unit

@CCall("knifunptr_libgtk31741_g_settings_bind")
external fun g_settings_bind(settings: CValuesRef<GSettings>?, @CCall.CString key: String?, `object`: gpointer?, @CCall.CString property: String?, flags: GSettingsBindFlags): Unit

@CCall("knifunptr_libgtk31742_g_settings_bind_with_mapping")
external fun g_settings_bind_with_mapping(settings: CValuesRef<GSettings>?, @CCall.CString key: String?, `object`: gpointer?, @CCall.CString property: String?, flags: GSettingsBindFlags, get_mapping: GSettingsBindGetMapping?, set_mapping: GSettingsBindSetMapping?, user_data: gpointer?, destroy: GDestroyNotify?): Unit

@CCall("knifunptr_libgtk31743_g_settings_bind_writable")
external fun g_settings_bind_writable(settings: CValuesRef<GSettings>?, @CCall.CString key: String?, `object`: gpointer?, @CCall.CString property: String?, inverted: gboolean): Unit

@CCall("knifunptr_libgtk31744_g_settings_unbind")
external fun g_settings_unbind(`object`: gpointer?, @CCall.CString property: String?): Unit

@CCall("knifunptr_libgtk31745_g_settings_create_action")
external fun g_settings_create_action(settings: CValuesRef<GSettings>?, @CCall.CString key: String?): CPointer<GAction>?

@CCall("knifunptr_libgtk31746_g_settings_get_mapped")
external fun g_settings_get_mapped(settings: CValuesRef<GSettings>?, @CCall.CString key: String?, mapping: GSettingsGetMapping?, user_data: gpointer?): gpointer?

@CCall("knifunptr_libgtk31747_g_simple_action_get_type")
external fun g_simple_action_get_type(): GType

@CCall("knifunptr_libgtk31748_g_simple_action_new")
external fun g_simple_action_new(@CCall.CString name: String?, parameter_type: CValuesRef<GVariantType>?): CPointer<GSimpleAction>?

@CCall("knifunptr_libgtk31749_g_simple_action_new_stateful")
external fun g_simple_action_new_stateful(@CCall.CString name: String?, parameter_type: CValuesRef<GVariantType>?, state: CValuesRef<GVariant>?): CPointer<GSimpleAction>?

@CCall("knifunptr_libgtk31750_g_simple_action_set_enabled")
external fun g_simple_action_set_enabled(simple: CValuesRef<GSimpleAction>?, enabled: gboolean): Unit

@CCall("knifunptr_libgtk31751_g_simple_action_set_state")
external fun g_simple_action_set_state(simple: CValuesRef<GSimpleAction>?, value: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_libgtk31752_g_simple_action_set_state_hint")
external fun g_simple_action_set_state_hint(simple: CValuesRef<GSimpleAction>?, state_hint: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_libgtk31753_g_simple_action_group_get_type")
external fun g_simple_action_group_get_type(): GType

@CCall("knifunptr_libgtk31754_g_simple_action_group_new")
external fun g_simple_action_group_new(): CPointer<GSimpleActionGroup>?

@CCall("knifunptr_libgtk31755_g_simple_action_group_lookup")
external fun g_simple_action_group_lookup(simple: CValuesRef<GSimpleActionGroup>?, @CCall.CString action_name: String?): CPointer<GAction>?

@CCall("knifunptr_libgtk31756_g_simple_action_group_insert")
external fun g_simple_action_group_insert(simple: CValuesRef<GSimpleActionGroup>?, action: CValuesRef<GAction>?): Unit

@CCall("knifunptr_libgtk31757_g_simple_action_group_remove")
external fun g_simple_action_group_remove(simple: CValuesRef<GSimpleActionGroup>?, @CCall.CString action_name: String?): Unit

@CCall("knifunptr_libgtk31758_g_simple_action_group_add_entries")
external fun g_simple_action_group_add_entries(simple: CValuesRef<GSimpleActionGroup>?, entries: CValuesRef<GActionEntry>?, n_entries: gint, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31759_g_simple_async_result_get_type")
external fun g_simple_async_result_get_type(): GType

@CCall("knifunptr_libgtk31760_g_simple_async_result_new")
external fun g_simple_async_result_new(source_object: CValuesRef<GObject>?, callback: GAsyncReadyCallback?, user_data: gpointer?, source_tag: gpointer?): CPointer<GSimpleAsyncResult>?

@CCall("knifunptr_libgtk31761_g_simple_async_result_new_error")
external fun g_simple_async_result_new_error(source_object: CValuesRef<GObject>?, callback: GAsyncReadyCallback?, user_data: gpointer?, domain: GQuark, code: gint, @CCall.CString format: String?, vararg variadicArguments: Any?): CPointer<GSimpleAsyncResult>?

@CCall("knifunptr_libgtk31762_g_simple_async_result_new_from_error")
external fun g_simple_async_result_new_from_error(source_object: CValuesRef<GObject>?, callback: GAsyncReadyCallback?, user_data: gpointer?, error: CValuesRef<GError>?): CPointer<GSimpleAsyncResult>?

@CCall("knifunptr_libgtk31763_g_simple_async_result_new_take_error")
external fun g_simple_async_result_new_take_error(source_object: CValuesRef<GObject>?, callback: GAsyncReadyCallback?, user_data: gpointer?, error: CValuesRef<GError>?): CPointer<GSimpleAsyncResult>?

@CCall("knifunptr_libgtk31764_g_simple_async_result_set_op_res_gpointer")
external fun g_simple_async_result_set_op_res_gpointer(simple: CValuesRef<GSimpleAsyncResult>?, op_res: gpointer?, destroy_op_res: GDestroyNotify?): Unit

@CCall("knifunptr_libgtk31765_g_simple_async_result_get_op_res_gpointer")
external fun g_simple_async_result_get_op_res_gpointer(simple: CValuesRef<GSimpleAsyncResult>?): gpointer?

@CCall("knifunptr_libgtk31766_g_simple_async_result_set_op_res_gssize")
external fun g_simple_async_result_set_op_res_gssize(simple: CValuesRef<GSimpleAsyncResult>?, op_res: gssize): Unit

@CCall("knifunptr_libgtk31767_g_simple_async_result_get_op_res_gssize")
external fun g_simple_async_result_get_op_res_gssize(simple: CValuesRef<GSimpleAsyncResult>?): gssize

@CCall("knifunptr_libgtk31768_g_simple_async_result_set_op_res_gboolean")
external fun g_simple_async_result_set_op_res_gboolean(simple: CValuesRef<GSimpleAsyncResult>?, op_res: gboolean): Unit

@CCall("knifunptr_libgtk31769_g_simple_async_result_get_op_res_gboolean")
external fun g_simple_async_result_get_op_res_gboolean(simple: CValuesRef<GSimpleAsyncResult>?): gboolean

@CCall("knifunptr_libgtk31770_g_simple_async_result_set_check_cancellable")
external fun g_simple_async_result_set_check_cancellable(simple: CValuesRef<GSimpleAsyncResult>?, check_cancellable: CValuesRef<GCancellable>?): Unit

@CCall("knifunptr_libgtk31771_g_simple_async_result_get_source_tag")
external fun g_simple_async_result_get_source_tag(simple: CValuesRef<GSimpleAsyncResult>?): gpointer?

@CCall("knifunptr_libgtk31772_g_simple_async_result_set_handle_cancellation")
external fun g_simple_async_result_set_handle_cancellation(simple: CValuesRef<GSimpleAsyncResult>?, handle_cancellation: gboolean): Unit

@CCall("knifunptr_libgtk31773_g_simple_async_result_complete")
external fun g_simple_async_result_complete(simple: CValuesRef<GSimpleAsyncResult>?): Unit

@CCall("knifunptr_libgtk31774_g_simple_async_result_complete_in_idle")
external fun g_simple_async_result_complete_in_idle(simple: CValuesRef<GSimpleAsyncResult>?): Unit

@CCall("knifunptr_libgtk31775_g_simple_async_result_run_in_thread")
external fun g_simple_async_result_run_in_thread(simple: CValuesRef<GSimpleAsyncResult>?, func: GSimpleAsyncThreadFunc?, io_priority: Int, cancellable: CValuesRef<GCancellable>?): Unit

@CCall("knifunptr_libgtk31776_g_simple_async_result_set_from_error")
external fun g_simple_async_result_set_from_error(simple: CValuesRef<GSimpleAsyncResult>?, error: CValuesRef<GError>?): Unit

@CCall("knifunptr_libgtk31777_g_simple_async_result_take_error")
external fun g_simple_async_result_take_error(simple: CValuesRef<GSimpleAsyncResult>?, error: CValuesRef<GError>?): Unit

@CCall("knifunptr_libgtk31778_g_simple_async_result_propagate_error")
external fun g_simple_async_result_propagate_error(simple: CValuesRef<GSimpleAsyncResult>?, dest: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31779_g_simple_async_result_set_error")
external fun g_simple_async_result_set_error(simple: CValuesRef<GSimpleAsyncResult>?, domain: GQuark, code: gint, @CCall.CString format: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk31780_g_simple_async_result_set_error_va")
external fun g_simple_async_result_set_error_va(simple: CValuesRef<GSimpleAsyncResult>?, domain: GQuark, code: gint, @CCall.CString format: String?, args: platform.posix.va_list?): Unit

@CCall("knifunptr_libgtk31781_g_simple_async_result_is_valid")
external fun g_simple_async_result_is_valid(result: CValuesRef<GAsyncResult>?, source: CValuesRef<GObject>?, source_tag: gpointer?): gboolean

@CCall("knifunptr_libgtk31782_g_simple_async_report_error_in_idle")
external fun g_simple_async_report_error_in_idle(`object`: CValuesRef<GObject>?, callback: GAsyncReadyCallback?, user_data: gpointer?, domain: GQuark, code: gint, @CCall.CString format: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk31783_g_simple_async_report_gerror_in_idle")
external fun g_simple_async_report_gerror_in_idle(`object`: CValuesRef<GObject>?, callback: GAsyncReadyCallback?, user_data: gpointer?, error: CValuesRef<GError>?): Unit

@CCall("knifunptr_libgtk31784_g_simple_async_report_take_gerror_in_idle")
external fun g_simple_async_report_take_gerror_in_idle(`object`: CValuesRef<GObject>?, callback: GAsyncReadyCallback?, user_data: gpointer?, error: CValuesRef<GError>?): Unit

@CCall("knifunptr_libgtk31785_g_simple_io_stream_get_type")
external fun g_simple_io_stream_get_type(): GType

@CCall("knifunptr_libgtk31786_g_simple_io_stream_new")
external fun g_simple_io_stream_new(input_stream: CValuesRef<GInputStream>?, output_stream: CValuesRef<GOutputStream>?): CPointer<GIOStream>?

@CCall("knifunptr_libgtk31787_g_simple_permission_get_type")
external fun g_simple_permission_get_type(): GType

@CCall("knifunptr_libgtk31788_g_simple_permission_new")
external fun g_simple_permission_new(allowed: gboolean): CPointer<GPermission>?

@CCall("knifunptr_libgtk31789_g_socket_client_get_type")
external fun g_socket_client_get_type(): GType

@CCall("knifunptr_libgtk31790_g_socket_client_new")
external fun g_socket_client_new(): CPointer<GSocketClient>?

@CCall("knifunptr_libgtk31791_g_socket_client_get_family")
external fun g_socket_client_get_family(client: CValuesRef<GSocketClient>?): GSocketFamily

@CCall("knifunptr_libgtk31792_g_socket_client_set_family")
external fun g_socket_client_set_family(client: CValuesRef<GSocketClient>?, family: GSocketFamily): Unit

@CCall("knifunptr_libgtk31793_g_socket_client_get_socket_type")
external fun g_socket_client_get_socket_type(client: CValuesRef<GSocketClient>?): GSocketType

@CCall("knifunptr_libgtk31794_g_socket_client_set_socket_type")
external fun g_socket_client_set_socket_type(client: CValuesRef<GSocketClient>?, type: GSocketType): Unit

@CCall("knifunptr_libgtk31795_g_socket_client_get_protocol")
external fun g_socket_client_get_protocol(client: CValuesRef<GSocketClient>?): GSocketProtocol

@CCall("knifunptr_libgtk31796_g_socket_client_set_protocol")
external fun g_socket_client_set_protocol(client: CValuesRef<GSocketClient>?, protocol: GSocketProtocol): Unit

@CCall("knifunptr_libgtk31797_g_socket_client_get_local_address")
external fun g_socket_client_get_local_address(client: CValuesRef<GSocketClient>?): CPointer<GSocketAddress>?

@CCall("knifunptr_libgtk31798_g_socket_client_set_local_address")
external fun g_socket_client_set_local_address(client: CValuesRef<GSocketClient>?, address: CValuesRef<GSocketAddress>?): Unit

@CCall("knifunptr_libgtk31799_g_socket_client_get_timeout")
external fun g_socket_client_get_timeout(client: CValuesRef<GSocketClient>?): guint

@CCall("knifunptr_libgtk31800_g_socket_client_set_timeout")
external fun g_socket_client_set_timeout(client: CValuesRef<GSocketClient>?, timeout: guint): Unit

@CCall("knifunptr_libgtk31801_g_socket_client_get_enable_proxy")
external fun g_socket_client_get_enable_proxy(client: CValuesRef<GSocketClient>?): gboolean

@CCall("knifunptr_libgtk31802_g_socket_client_set_enable_proxy")
external fun g_socket_client_set_enable_proxy(client: CValuesRef<GSocketClient>?, enable: gboolean): Unit

@CCall("knifunptr_libgtk31803_g_socket_client_get_tls")
external fun g_socket_client_get_tls(client: CValuesRef<GSocketClient>?): gboolean

@CCall("knifunptr_libgtk31804_g_socket_client_set_tls")
external fun g_socket_client_set_tls(client: CValuesRef<GSocketClient>?, tls: gboolean): Unit

@CCall("knifunptr_libgtk31805_g_socket_client_get_tls_validation_flags")
external fun g_socket_client_get_tls_validation_flags(client: CValuesRef<GSocketClient>?): GTlsCertificateFlags

@CCall("knifunptr_libgtk31806_g_socket_client_set_tls_validation_flags")
external fun g_socket_client_set_tls_validation_flags(client: CValuesRef<GSocketClient>?, flags: GTlsCertificateFlags): Unit

@CCall("knifunptr_libgtk31807_g_socket_client_get_proxy_resolver")
external fun g_socket_client_get_proxy_resolver(client: CValuesRef<GSocketClient>?): CPointer<GProxyResolver>?

@CCall("knifunptr_libgtk31808_g_socket_client_set_proxy_resolver")
external fun g_socket_client_set_proxy_resolver(client: CValuesRef<GSocketClient>?, proxy_resolver: CValuesRef<GProxyResolver>?): Unit

@CCall("knifunptr_libgtk31809_g_socket_client_connect")
external fun g_socket_client_connect(client: CValuesRef<GSocketClient>?, connectable: CValuesRef<GSocketConnectable>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocketConnection>?

@CCall("knifunptr_libgtk31810_g_socket_client_connect_to_host")
external fun g_socket_client_connect_to_host(client: CValuesRef<GSocketClient>?, @CCall.CString host_and_port: String?, default_port: guint16, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocketConnection>?

@CCall("knifunptr_libgtk31811_g_socket_client_connect_to_service")
external fun g_socket_client_connect_to_service(client: CValuesRef<GSocketClient>?, @CCall.CString domain: String?, @CCall.CString service: String?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocketConnection>?

@CCall("knifunptr_libgtk31812_g_socket_client_connect_to_uri")
external fun g_socket_client_connect_to_uri(client: CValuesRef<GSocketClient>?, @CCall.CString uri: String?, default_port: guint16, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocketConnection>?

@CCall("knifunptr_libgtk31813_g_socket_client_connect_async")
external fun g_socket_client_connect_async(client: CValuesRef<GSocketClient>?, connectable: CValuesRef<GSocketConnectable>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31814_g_socket_client_connect_finish")
external fun g_socket_client_connect_finish(client: CValuesRef<GSocketClient>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocketConnection>?

@CCall("knifunptr_libgtk31815_g_socket_client_connect_to_host_async")
external fun g_socket_client_connect_to_host_async(client: CValuesRef<GSocketClient>?, @CCall.CString host_and_port: String?, default_port: guint16, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31816_g_socket_client_connect_to_host_finish")
external fun g_socket_client_connect_to_host_finish(client: CValuesRef<GSocketClient>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocketConnection>?

@CCall("knifunptr_libgtk31817_g_socket_client_connect_to_service_async")
external fun g_socket_client_connect_to_service_async(client: CValuesRef<GSocketClient>?, @CCall.CString domain: String?, @CCall.CString service: String?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31818_g_socket_client_connect_to_service_finish")
external fun g_socket_client_connect_to_service_finish(client: CValuesRef<GSocketClient>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocketConnection>?

@CCall("knifunptr_libgtk31819_g_socket_client_connect_to_uri_async")
external fun g_socket_client_connect_to_uri_async(client: CValuesRef<GSocketClient>?, @CCall.CString uri: String?, default_port: guint16, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31820_g_socket_client_connect_to_uri_finish")
external fun g_socket_client_connect_to_uri_finish(client: CValuesRef<GSocketClient>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocketConnection>?

@CCall("knifunptr_libgtk31821_g_socket_client_add_application_proxy")
external fun g_socket_client_add_application_proxy(client: CValuesRef<GSocketClient>?, @CCall.CString protocol: String?): Unit

@CCall("knifunptr_libgtk31822_g_socket_connectable_get_type")
external fun g_socket_connectable_get_type(): GType

@CCall("knifunptr_libgtk31823_g_socket_connectable_enumerate")
external fun g_socket_connectable_enumerate(connectable: CValuesRef<GSocketConnectable>?): CPointer<GSocketAddressEnumerator>?

@CCall("knifunptr_libgtk31824_g_socket_connectable_proxy_enumerate")
external fun g_socket_connectable_proxy_enumerate(connectable: CValuesRef<GSocketConnectable>?): CPointer<GSocketAddressEnumerator>?

@CCall("knifunptr_libgtk31825_g_socket_connectable_to_string")
external fun g_socket_connectable_to_string(connectable: CValuesRef<GSocketConnectable>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk31826_g_socket_get_type")
external fun g_socket_get_type(): GType

@CCall("knifunptr_libgtk31827_g_socket_new")
external fun g_socket_new(family: GSocketFamily, type: GSocketType, protocol: GSocketProtocol, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocket>?

@CCall("knifunptr_libgtk31828_g_socket_new_from_fd")
external fun g_socket_new_from_fd(fd: gint, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocket>?

@CCall("knifunptr_libgtk31829_g_socket_get_fd")
external fun g_socket_get_fd(socket: CValuesRef<GSocket>?): Int

@CCall("knifunptr_libgtk31830_g_socket_get_family")
external fun g_socket_get_family(socket: CValuesRef<GSocket>?): GSocketFamily

@CCall("knifunptr_libgtk31831_g_socket_get_socket_type")
external fun g_socket_get_socket_type(socket: CValuesRef<GSocket>?): GSocketType

@CCall("knifunptr_libgtk31832_g_socket_get_protocol")
external fun g_socket_get_protocol(socket: CValuesRef<GSocket>?): GSocketProtocol

@CCall("knifunptr_libgtk31833_g_socket_get_local_address")
external fun g_socket_get_local_address(socket: CValuesRef<GSocket>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocketAddress>?

@CCall("knifunptr_libgtk31834_g_socket_get_remote_address")
external fun g_socket_get_remote_address(socket: CValuesRef<GSocket>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocketAddress>?

@CCall("knifunptr_libgtk31835_g_socket_set_blocking")
external fun g_socket_set_blocking(socket: CValuesRef<GSocket>?, blocking: gboolean): Unit

@CCall("knifunptr_libgtk31836_g_socket_get_blocking")
external fun g_socket_get_blocking(socket: CValuesRef<GSocket>?): gboolean

@CCall("knifunptr_libgtk31837_g_socket_set_keepalive")
external fun g_socket_set_keepalive(socket: CValuesRef<GSocket>?, keepalive: gboolean): Unit

@CCall("knifunptr_libgtk31838_g_socket_get_keepalive")
external fun g_socket_get_keepalive(socket: CValuesRef<GSocket>?): gboolean

@CCall("knifunptr_libgtk31839_g_socket_get_listen_backlog")
external fun g_socket_get_listen_backlog(socket: CValuesRef<GSocket>?): gint

@CCall("knifunptr_libgtk31840_g_socket_set_listen_backlog")
external fun g_socket_set_listen_backlog(socket: CValuesRef<GSocket>?, backlog: gint): Unit

@CCall("knifunptr_libgtk31841_g_socket_get_timeout")
external fun g_socket_get_timeout(socket: CValuesRef<GSocket>?): guint

@CCall("knifunptr_libgtk31842_g_socket_set_timeout")
external fun g_socket_set_timeout(socket: CValuesRef<GSocket>?, timeout: guint): Unit

@CCall("knifunptr_libgtk31843_g_socket_get_ttl")
external fun g_socket_get_ttl(socket: CValuesRef<GSocket>?): guint

@CCall("knifunptr_libgtk31844_g_socket_set_ttl")
external fun g_socket_set_ttl(socket: CValuesRef<GSocket>?, ttl: guint): Unit

@CCall("knifunptr_libgtk31845_g_socket_get_broadcast")
external fun g_socket_get_broadcast(socket: CValuesRef<GSocket>?): gboolean

@CCall("knifunptr_libgtk31846_g_socket_set_broadcast")
external fun g_socket_set_broadcast(socket: CValuesRef<GSocket>?, broadcast: gboolean): Unit

@CCall("knifunptr_libgtk31847_g_socket_get_multicast_loopback")
external fun g_socket_get_multicast_loopback(socket: CValuesRef<GSocket>?): gboolean

@CCall("knifunptr_libgtk31848_g_socket_set_multicast_loopback")
external fun g_socket_set_multicast_loopback(socket: CValuesRef<GSocket>?, loopback: gboolean): Unit

@CCall("knifunptr_libgtk31849_g_socket_get_multicast_ttl")
external fun g_socket_get_multicast_ttl(socket: CValuesRef<GSocket>?): guint

@CCall("knifunptr_libgtk31850_g_socket_set_multicast_ttl")
external fun g_socket_set_multicast_ttl(socket: CValuesRef<GSocket>?, ttl: guint): Unit

@CCall("knifunptr_libgtk31851_g_socket_is_connected")
external fun g_socket_is_connected(socket: CValuesRef<GSocket>?): gboolean

@CCall("knifunptr_libgtk31852_g_socket_bind")
external fun g_socket_bind(socket: CValuesRef<GSocket>?, address: CValuesRef<GSocketAddress>?, allow_reuse: gboolean, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31853_g_socket_join_multicast_group")
external fun g_socket_join_multicast_group(socket: CValuesRef<GSocket>?, group: CValuesRef<GInetAddress>?, source_specific: gboolean, @CCall.CString iface: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31854_g_socket_leave_multicast_group")
external fun g_socket_leave_multicast_group(socket: CValuesRef<GSocket>?, group: CValuesRef<GInetAddress>?, source_specific: gboolean, @CCall.CString iface: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31855_g_socket_join_multicast_group_ssm")
external fun g_socket_join_multicast_group_ssm(socket: CValuesRef<GSocket>?, group: CValuesRef<GInetAddress>?, source_specific: CValuesRef<GInetAddress>?, @CCall.CString iface: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31856_g_socket_leave_multicast_group_ssm")
external fun g_socket_leave_multicast_group_ssm(socket: CValuesRef<GSocket>?, group: CValuesRef<GInetAddress>?, source_specific: CValuesRef<GInetAddress>?, @CCall.CString iface: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31857_g_socket_connect")
external fun g_socket_connect(socket: CValuesRef<GSocket>?, address: CValuesRef<GSocketAddress>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31858_g_socket_check_connect_result")
external fun g_socket_check_connect_result(socket: CValuesRef<GSocket>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31859_g_socket_get_available_bytes")
external fun g_socket_get_available_bytes(socket: CValuesRef<GSocket>?): gssize

@CCall("knifunptr_libgtk31860_g_socket_condition_check")
external fun g_socket_condition_check(socket: CValuesRef<GSocket>?, condition: GIOCondition): GIOCondition

@CCall("knifunptr_libgtk31861_g_socket_condition_wait")
external fun g_socket_condition_wait(socket: CValuesRef<GSocket>?, condition: GIOCondition, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31862_g_socket_condition_timed_wait")
external fun g_socket_condition_timed_wait(socket: CValuesRef<GSocket>?, condition: GIOCondition, timeout: gint64, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31863_g_socket_accept")
external fun g_socket_accept(socket: CValuesRef<GSocket>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocket>?

@CCall("knifunptr_libgtk31864_g_socket_listen")
external fun g_socket_listen(socket: CValuesRef<GSocket>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31865_g_socket_receive")
external fun g_socket_receive(socket: CValuesRef<GSocket>?, buffer: CValuesRef<gcharVar>?, size: gsize, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_libgtk31866_g_socket_receive_from")
external fun g_socket_receive_from(socket: CValuesRef<GSocket>?, address: CValuesRef<CPointerVar<GSocketAddress>>?, buffer: CValuesRef<gcharVar>?, size: gsize, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_libgtk31867_g_socket_send")
external fun g_socket_send(socket: CValuesRef<GSocket>?, @CCall.CString buffer: String?, size: gsize, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_libgtk31868_g_socket_send_to")
external fun g_socket_send_to(socket: CValuesRef<GSocket>?, address: CValuesRef<GSocketAddress>?, @CCall.CString buffer: String?, size: gsize, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_libgtk31869_g_socket_receive_message")
external fun g_socket_receive_message(socket: CValuesRef<GSocket>?, address: CValuesRef<CPointerVar<GSocketAddress>>?, vectors: CValuesRef<GInputVector>?, num_vectors: gint, messages: CValuesRef<CPointerVar<CPointerVar<GSocketControlMessage>>>?, num_messages: CValuesRef<gintVar>?, flags: CValuesRef<gintVar>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_libgtk31870_g_socket_send_message")
external fun g_socket_send_message(socket: CValuesRef<GSocket>?, address: CValuesRef<GSocketAddress>?, vectors: CValuesRef<GOutputVector>?, num_vectors: gint, messages: CValuesRef<CPointerVar<GSocketControlMessage>>?, num_messages: gint, flags: gint, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_libgtk31871_g_socket_receive_messages")
external fun g_socket_receive_messages(socket: CValuesRef<GSocket>?, messages: CValuesRef<GInputMessage>?, num_messages: guint, flags: gint, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gint

@CCall("knifunptr_libgtk31872_g_socket_send_messages")
external fun g_socket_send_messages(socket: CValuesRef<GSocket>?, messages: CValuesRef<GOutputMessage>?, num_messages: guint, flags: gint, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gint

@CCall("knifunptr_libgtk31873_g_socket_close")
external fun g_socket_close(socket: CValuesRef<GSocket>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31874_g_socket_shutdown")
external fun g_socket_shutdown(socket: CValuesRef<GSocket>?, shutdown_read: gboolean, shutdown_write: gboolean, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31875_g_socket_is_closed")
external fun g_socket_is_closed(socket: CValuesRef<GSocket>?): gboolean

@CCall("knifunptr_libgtk31876_g_socket_create_source")
external fun g_socket_create_source(socket: CValuesRef<GSocket>?, condition: GIOCondition, cancellable: CValuesRef<GCancellable>?): CPointer<GSource>?

@CCall("knifunptr_libgtk31877_g_socket_speaks_ipv4")
external fun g_socket_speaks_ipv4(socket: CValuesRef<GSocket>?): gboolean

@CCall("knifunptr_libgtk31878_g_socket_get_credentials")
external fun g_socket_get_credentials(socket: CValuesRef<GSocket>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GCredentials>?

@CCall("knifunptr_libgtk31879_g_socket_receive_with_blocking")
external fun g_socket_receive_with_blocking(socket: CValuesRef<GSocket>?, buffer: CValuesRef<gcharVar>?, size: gsize, blocking: gboolean, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_libgtk31880_g_socket_send_with_blocking")
external fun g_socket_send_with_blocking(socket: CValuesRef<GSocket>?, @CCall.CString buffer: String?, size: gsize, blocking: gboolean, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_libgtk31881_g_socket_get_option")
external fun g_socket_get_option(socket: CValuesRef<GSocket>?, level: gint, optname: gint, value: CValuesRef<gintVar>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31882_g_socket_set_option")
external fun g_socket_set_option(socket: CValuesRef<GSocket>?, level: gint, optname: gint, value: gint, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31883_g_socket_connection_get_type")
external fun g_socket_connection_get_type(): GType

@CCall("knifunptr_libgtk31884_g_socket_connection_is_connected")
external fun g_socket_connection_is_connected(connection: CValuesRef<GSocketConnection>?): gboolean

@CCall("knifunptr_libgtk31885_g_socket_connection_connect")
external fun g_socket_connection_connect(connection: CValuesRef<GSocketConnection>?, address: CValuesRef<GSocketAddress>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31886_g_socket_connection_connect_async")
external fun g_socket_connection_connect_async(connection: CValuesRef<GSocketConnection>?, address: CValuesRef<GSocketAddress>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31887_g_socket_connection_connect_finish")
external fun g_socket_connection_connect_finish(connection: CValuesRef<GSocketConnection>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31888_g_socket_connection_get_socket")
external fun g_socket_connection_get_socket(connection: CValuesRef<GSocketConnection>?): CPointer<GSocket>?

@CCall("knifunptr_libgtk31889_g_socket_connection_get_local_address")
external fun g_socket_connection_get_local_address(connection: CValuesRef<GSocketConnection>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocketAddress>?

@CCall("knifunptr_libgtk31890_g_socket_connection_get_remote_address")
external fun g_socket_connection_get_remote_address(connection: CValuesRef<GSocketConnection>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocketAddress>?

@CCall("knifunptr_libgtk31891_g_socket_connection_factory_register_type")
external fun g_socket_connection_factory_register_type(g_type: GType, family: GSocketFamily, type: GSocketType, protocol: gint): Unit

@CCall("knifunptr_libgtk31892_g_socket_connection_factory_lookup_type")
external fun g_socket_connection_factory_lookup_type(family: GSocketFamily, type: GSocketType, protocol_id: gint): GType

@CCall("knifunptr_libgtk31893_g_socket_connection_factory_create_connection")
external fun g_socket_connection_factory_create_connection(socket: CValuesRef<GSocket>?): CPointer<GSocketConnection>?

@CCall("knifunptr_libgtk31894_g_socket_control_message_get_type")
external fun g_socket_control_message_get_type(): GType

@CCall("knifunptr_libgtk31895_g_socket_control_message_get_size")
external fun g_socket_control_message_get_size(message: CValuesRef<GSocketControlMessage>?): gsize

@CCall("knifunptr_libgtk31896_g_socket_control_message_get_level")
external fun g_socket_control_message_get_level(message: CValuesRef<GSocketControlMessage>?): Int

@CCall("knifunptr_libgtk31897_g_socket_control_message_get_msg_type")
external fun g_socket_control_message_get_msg_type(message: CValuesRef<GSocketControlMessage>?): Int

@CCall("knifunptr_libgtk31898_g_socket_control_message_serialize")
external fun g_socket_control_message_serialize(message: CValuesRef<GSocketControlMessage>?, data: gpointer?): Unit

@CCall("knifunptr_libgtk31899_g_socket_control_message_deserialize")
external fun g_socket_control_message_deserialize(level: Int, type: Int, size: gsize, data: gpointer?): CPointer<GSocketControlMessage>?

@CCall("knifunptr_libgtk31900_g_socket_listener_get_type")
external fun g_socket_listener_get_type(): GType

@CCall("knifunptr_libgtk31901_g_socket_listener_new")
external fun g_socket_listener_new(): CPointer<GSocketListener>?

@CCall("knifunptr_libgtk31902_g_socket_listener_set_backlog")
external fun g_socket_listener_set_backlog(listener: CValuesRef<GSocketListener>?, listen_backlog: Int): Unit

@CCall("knifunptr_libgtk31903_g_socket_listener_add_socket")
external fun g_socket_listener_add_socket(listener: CValuesRef<GSocketListener>?, socket: CValuesRef<GSocket>?, source_object: CValuesRef<GObject>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31904_g_socket_listener_add_address")
external fun g_socket_listener_add_address(listener: CValuesRef<GSocketListener>?, address: CValuesRef<GSocketAddress>?, type: GSocketType, protocol: GSocketProtocol, source_object: CValuesRef<GObject>?, effective_address: CValuesRef<CPointerVar<GSocketAddress>>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31905_g_socket_listener_add_inet_port")
external fun g_socket_listener_add_inet_port(listener: CValuesRef<GSocketListener>?, port: guint16, source_object: CValuesRef<GObject>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31906_g_socket_listener_add_any_inet_port")
external fun g_socket_listener_add_any_inet_port(listener: CValuesRef<GSocketListener>?, source_object: CValuesRef<GObject>?, error: CValuesRef<CPointerVar<GError>>?): guint16

@CCall("knifunptr_libgtk31907_g_socket_listener_accept_socket")
external fun g_socket_listener_accept_socket(listener: CValuesRef<GSocketListener>?, source_object: CValuesRef<CPointerVar<GObject>>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocket>?

@CCall("knifunptr_libgtk31908_g_socket_listener_accept_socket_async")
external fun g_socket_listener_accept_socket_async(listener: CValuesRef<GSocketListener>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31909_g_socket_listener_accept_socket_finish")
external fun g_socket_listener_accept_socket_finish(listener: CValuesRef<GSocketListener>?, result: CValuesRef<GAsyncResult>?, source_object: CValuesRef<CPointerVar<GObject>>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocket>?

@CCall("knifunptr_libgtk31910_g_socket_listener_accept")
external fun g_socket_listener_accept(listener: CValuesRef<GSocketListener>?, source_object: CValuesRef<CPointerVar<GObject>>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocketConnection>?

@CCall("knifunptr_libgtk31911_g_socket_listener_accept_async")
external fun g_socket_listener_accept_async(listener: CValuesRef<GSocketListener>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31912_g_socket_listener_accept_finish")
external fun g_socket_listener_accept_finish(listener: CValuesRef<GSocketListener>?, result: CValuesRef<GAsyncResult>?, source_object: CValuesRef<CPointerVar<GObject>>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocketConnection>?

@CCall("knifunptr_libgtk31913_g_socket_listener_close")
external fun g_socket_listener_close(listener: CValuesRef<GSocketListener>?): Unit

@CCall("knifunptr_libgtk31914_g_socket_service_get_type")
external fun g_socket_service_get_type(): GType

@CCall("knifunptr_libgtk31915_g_socket_service_new")
external fun g_socket_service_new(): CPointer<GSocketService>?

@CCall("knifunptr_libgtk31916_g_socket_service_start")
external fun g_socket_service_start(service: CValuesRef<GSocketService>?): Unit

@CCall("knifunptr_libgtk31917_g_socket_service_stop")
external fun g_socket_service_stop(service: CValuesRef<GSocketService>?): Unit

@CCall("knifunptr_libgtk31918_g_socket_service_is_active")
external fun g_socket_service_is_active(service: CValuesRef<GSocketService>?): gboolean

@CCall("knifunptr_libgtk31919_g_srv_target_get_type")
external fun g_srv_target_get_type(): GType

@CCall("knifunptr_libgtk31920_g_srv_target_new")
external fun g_srv_target_new(@CCall.CString hostname: String?, port: guint16, priority: guint16, weight: guint16): CPointer<GSrvTarget>?

@CCall("knifunptr_libgtk31921_g_srv_target_copy")
external fun g_srv_target_copy(target: CValuesRef<GSrvTarget>?): CPointer<GSrvTarget>?

@CCall("knifunptr_libgtk31922_g_srv_target_free")
external fun g_srv_target_free(target: CValuesRef<GSrvTarget>?): Unit

@CCall("knifunptr_libgtk31923_g_srv_target_get_hostname")
external fun g_srv_target_get_hostname(target: CValuesRef<GSrvTarget>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk31924_g_srv_target_get_port")
external fun g_srv_target_get_port(target: CValuesRef<GSrvTarget>?): guint16

@CCall("knifunptr_libgtk31925_g_srv_target_get_priority")
external fun g_srv_target_get_priority(target: CValuesRef<GSrvTarget>?): guint16

@CCall("knifunptr_libgtk31926_g_srv_target_get_weight")
external fun g_srv_target_get_weight(target: CValuesRef<GSrvTarget>?): guint16

@CCall("knifunptr_libgtk31927_g_srv_target_list_sort")
external fun g_srv_target_list_sort(targets: CValuesRef<GList>?): CPointer<GList>?

@CCall("knifunptr_libgtk31928_g_simple_proxy_resolver_get_type")
external fun g_simple_proxy_resolver_get_type(): GType

@CCall("knifunptr_libgtk31929_g_simple_proxy_resolver_new")
external fun g_simple_proxy_resolver_new(@CCall.CString default_proxy: String?, ignore_hosts: CValuesRef<CPointerVar<gcharVar>>?): CPointer<GProxyResolver>?

@CCall("knifunptr_libgtk31930_g_simple_proxy_resolver_set_default_proxy")
external fun g_simple_proxy_resolver_set_default_proxy(resolver: CValuesRef<GSimpleProxyResolver>?, @CCall.CString default_proxy: String?): Unit

@CCall("knifunptr_libgtk31931_g_simple_proxy_resolver_set_ignore_hosts")
external fun g_simple_proxy_resolver_set_ignore_hosts(resolver: CValuesRef<GSimpleProxyResolver>?, ignore_hosts: CValuesRef<CPointerVar<gcharVar>>?): Unit

@CCall("knifunptr_libgtk31932_g_simple_proxy_resolver_set_uri_proxy")
external fun g_simple_proxy_resolver_set_uri_proxy(resolver: CValuesRef<GSimpleProxyResolver>?, @CCall.CString uri_scheme: String?, @CCall.CString proxy: String?): Unit

@CCall("knifunptr_libgtk31933_g_task_get_type")
external fun g_task_get_type(): GType

@CCall("knifunptr_libgtk31934_g_task_new")
external fun g_task_new(source_object: gpointer?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, callback_data: gpointer?): CPointer<GTask>?

@CCall("knifunptr_libgtk31935_g_task_report_error")
external fun g_task_report_error(source_object: gpointer?, callback: GAsyncReadyCallback?, callback_data: gpointer?, source_tag: gpointer?, error: CValuesRef<GError>?): Unit

@CCall("knifunptr_libgtk31936_g_task_report_new_error")
external fun g_task_report_new_error(source_object: gpointer?, callback: GAsyncReadyCallback?, callback_data: gpointer?, source_tag: gpointer?, domain: GQuark, code: gint, @CCall.CString format: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk31937_g_task_set_task_data")
external fun g_task_set_task_data(task: CValuesRef<GTask>?, task_data: gpointer?, task_data_destroy: GDestroyNotify?): Unit

@CCall("knifunptr_libgtk31938_g_task_set_priority")
external fun g_task_set_priority(task: CValuesRef<GTask>?, priority: gint): Unit

@CCall("knifunptr_libgtk31939_g_task_set_check_cancellable")
external fun g_task_set_check_cancellable(task: CValuesRef<GTask>?, check_cancellable: gboolean): Unit

@CCall("knifunptr_libgtk31940_g_task_set_source_tag")
external fun g_task_set_source_tag(task: CValuesRef<GTask>?, source_tag: gpointer?): Unit

@CCall("knifunptr_libgtk31941_g_task_get_source_object")
external fun g_task_get_source_object(task: CValuesRef<GTask>?): gpointer?

@CCall("knifunptr_libgtk31942_g_task_get_task_data")
external fun g_task_get_task_data(task: CValuesRef<GTask>?): gpointer?

@CCall("knifunptr_libgtk31943_g_task_get_priority")
external fun g_task_get_priority(task: CValuesRef<GTask>?): gint

@CCall("knifunptr_libgtk31944_g_task_get_context")
external fun g_task_get_context(task: CValuesRef<GTask>?): CPointer<GMainContext>?

@CCall("knifunptr_libgtk31945_g_task_get_cancellable")
external fun g_task_get_cancellable(task: CValuesRef<GTask>?): CPointer<GCancellable>?

@CCall("knifunptr_libgtk31946_g_task_get_check_cancellable")
external fun g_task_get_check_cancellable(task: CValuesRef<GTask>?): gboolean

@CCall("knifunptr_libgtk31947_g_task_get_source_tag")
external fun g_task_get_source_tag(task: CValuesRef<GTask>?): gpointer?

@CCall("knifunptr_libgtk31948_g_task_is_valid")
external fun g_task_is_valid(result: gpointer?, source_object: gpointer?): gboolean

@CCall("knifunptr_libgtk31949_g_task_run_in_thread")
external fun g_task_run_in_thread(task: CValuesRef<GTask>?, task_func: GTaskThreadFunc?): Unit

@CCall("knifunptr_libgtk31950_g_task_run_in_thread_sync")
external fun g_task_run_in_thread_sync(task: CValuesRef<GTask>?, task_func: GTaskThreadFunc?): Unit

@CCall("knifunptr_libgtk31951_g_task_set_return_on_cancel")
external fun g_task_set_return_on_cancel(task: CValuesRef<GTask>?, return_on_cancel: gboolean): gboolean

@CCall("knifunptr_libgtk31952_g_task_get_return_on_cancel")
external fun g_task_get_return_on_cancel(task: CValuesRef<GTask>?): gboolean

@CCall("knifunptr_libgtk31953_g_task_attach_source")
external fun g_task_attach_source(task: CValuesRef<GTask>?, source: CValuesRef<GSource>?, callback: GSourceFunc?): Unit

@CCall("knifunptr_libgtk31954_g_task_return_pointer")
external fun g_task_return_pointer(task: CValuesRef<GTask>?, result: gpointer?, result_destroy: GDestroyNotify?): Unit

@CCall("knifunptr_libgtk31955_g_task_return_boolean")
external fun g_task_return_boolean(task: CValuesRef<GTask>?, result: gboolean): Unit

@CCall("knifunptr_libgtk31956_g_task_return_int")
external fun g_task_return_int(task: CValuesRef<GTask>?, result: gssize): Unit

@CCall("knifunptr_libgtk31957_g_task_return_error")
external fun g_task_return_error(task: CValuesRef<GTask>?, error: CValuesRef<GError>?): Unit

@CCall("knifunptr_libgtk31958_g_task_return_new_error")
external fun g_task_return_new_error(task: CValuesRef<GTask>?, domain: GQuark, code: gint, @CCall.CString format: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk31959_g_task_return_error_if_cancelled")
external fun g_task_return_error_if_cancelled(task: CValuesRef<GTask>?): gboolean

@CCall("knifunptr_libgtk31960_g_task_propagate_pointer")
external fun g_task_propagate_pointer(task: CValuesRef<GTask>?, error: CValuesRef<CPointerVar<GError>>?): gpointer?

@CCall("knifunptr_libgtk31961_g_task_propagate_boolean")
external fun g_task_propagate_boolean(task: CValuesRef<GTask>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31962_g_task_propagate_int")
external fun g_task_propagate_int(task: CValuesRef<GTask>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_libgtk31963_g_task_had_error")
external fun g_task_had_error(task: CValuesRef<GTask>?): gboolean

@CCall("knifunptr_libgtk31964_g_task_get_completed")
external fun g_task_get_completed(task: CValuesRef<GTask>?): gboolean

@CCall("knifunptr_libgtk31965_g_subprocess_get_type")
external fun g_subprocess_get_type(): GType

@CCall("knifunptr_libgtk31966_g_subprocess_new")
external fun g_subprocess_new(flags: GSubprocessFlags, error: CValuesRef<CPointerVar<GError>>?, @CCall.CString argv0: String?, vararg variadicArguments: Any?): CPointer<GSubprocess>?

@CCall("knifunptr_libgtk31967_g_subprocess_newv")
external fun g_subprocess_newv(argv: CValuesRef<CPointerVar<gcharVar>>?, flags: GSubprocessFlags, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSubprocess>?

@CCall("knifunptr_libgtk31968_g_subprocess_get_stdin_pipe")
external fun g_subprocess_get_stdin_pipe(subprocess: CValuesRef<GSubprocess>?): CPointer<GOutputStream>?

@CCall("knifunptr_libgtk31969_g_subprocess_get_stdout_pipe")
external fun g_subprocess_get_stdout_pipe(subprocess: CValuesRef<GSubprocess>?): CPointer<GInputStream>?

@CCall("knifunptr_libgtk31970_g_subprocess_get_stderr_pipe")
external fun g_subprocess_get_stderr_pipe(subprocess: CValuesRef<GSubprocess>?): CPointer<GInputStream>?

@CCall("knifunptr_libgtk31971_g_subprocess_get_identifier")
external fun g_subprocess_get_identifier(subprocess: CValuesRef<GSubprocess>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk31972_g_subprocess_send_signal")
external fun g_subprocess_send_signal(subprocess: CValuesRef<GSubprocess>?, signal_num: gint): Unit

@CCall("knifunptr_libgtk31973_g_subprocess_force_exit")
external fun g_subprocess_force_exit(subprocess: CValuesRef<GSubprocess>?): Unit

@CCall("knifunptr_libgtk31974_g_subprocess_wait")
external fun g_subprocess_wait(subprocess: CValuesRef<GSubprocess>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31975_g_subprocess_wait_async")
external fun g_subprocess_wait_async(subprocess: CValuesRef<GSubprocess>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31976_g_subprocess_wait_finish")
external fun g_subprocess_wait_finish(subprocess: CValuesRef<GSubprocess>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31977_g_subprocess_wait_check")
external fun g_subprocess_wait_check(subprocess: CValuesRef<GSubprocess>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31978_g_subprocess_wait_check_async")
external fun g_subprocess_wait_check_async(subprocess: CValuesRef<GSubprocess>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31979_g_subprocess_wait_check_finish")
external fun g_subprocess_wait_check_finish(subprocess: CValuesRef<GSubprocess>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31980_g_subprocess_get_status")
external fun g_subprocess_get_status(subprocess: CValuesRef<GSubprocess>?): gint

@CCall("knifunptr_libgtk31981_g_subprocess_get_successful")
external fun g_subprocess_get_successful(subprocess: CValuesRef<GSubprocess>?): gboolean

@CCall("knifunptr_libgtk31982_g_subprocess_get_if_exited")
external fun g_subprocess_get_if_exited(subprocess: CValuesRef<GSubprocess>?): gboolean

@CCall("knifunptr_libgtk31983_g_subprocess_get_exit_status")
external fun g_subprocess_get_exit_status(subprocess: CValuesRef<GSubprocess>?): gint

@CCall("knifunptr_libgtk31984_g_subprocess_get_if_signaled")
external fun g_subprocess_get_if_signaled(subprocess: CValuesRef<GSubprocess>?): gboolean

@CCall("knifunptr_libgtk31985_g_subprocess_get_term_sig")
external fun g_subprocess_get_term_sig(subprocess: CValuesRef<GSubprocess>?): gint

@CCall("knifunptr_libgtk31986_g_subprocess_communicate")
external fun g_subprocess_communicate(subprocess: CValuesRef<GSubprocess>?, stdin_buf: CValuesRef<GBytes>?, cancellable: CValuesRef<GCancellable>?, stdout_buf: CValuesRef<CPointerVar<GBytes>>?, stderr_buf: CValuesRef<CPointerVar<GBytes>>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31987_g_subprocess_communicate_async")
external fun g_subprocess_communicate_async(subprocess: CValuesRef<GSubprocess>?, stdin_buf: CValuesRef<GBytes>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31988_g_subprocess_communicate_finish")
external fun g_subprocess_communicate_finish(subprocess: CValuesRef<GSubprocess>?, result: CValuesRef<GAsyncResult>?, stdout_buf: CValuesRef<CPointerVar<GBytes>>?, stderr_buf: CValuesRef<CPointerVar<GBytes>>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31989_g_subprocess_communicate_utf8")
external fun g_subprocess_communicate_utf8(subprocess: CValuesRef<GSubprocess>?, @CCall.CString stdin_buf: String?, cancellable: CValuesRef<GCancellable>?, stdout_buf: CValuesRef<CPointerVar<ByteVar>>?, stderr_buf: CValuesRef<CPointerVar<ByteVar>>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31990_g_subprocess_communicate_utf8_async")
external fun g_subprocess_communicate_utf8_async(subprocess: CValuesRef<GSubprocess>?, @CCall.CString stdin_buf: String?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk31991_g_subprocess_communicate_utf8_finish")
external fun g_subprocess_communicate_utf8_finish(subprocess: CValuesRef<GSubprocess>?, result: CValuesRef<GAsyncResult>?, stdout_buf: CValuesRef<CPointerVar<ByteVar>>?, stderr_buf: CValuesRef<CPointerVar<ByteVar>>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk31992_g_subprocess_launcher_get_type")
external fun g_subprocess_launcher_get_type(): GType

@CCall("knifunptr_libgtk31993_g_subprocess_launcher_new")
external fun g_subprocess_launcher_new(flags: GSubprocessFlags): CPointer<GSubprocessLauncher>?

@CCall("knifunptr_libgtk31994_g_subprocess_launcher_spawn")
external fun g_subprocess_launcher_spawn(self: CValuesRef<GSubprocessLauncher>?, error: CValuesRef<CPointerVar<GError>>?, @CCall.CString argv0: String?, vararg variadicArguments: Any?): CPointer<GSubprocess>?

@CCall("knifunptr_libgtk31995_g_subprocess_launcher_spawnv")
external fun g_subprocess_launcher_spawnv(self: CValuesRef<GSubprocessLauncher>?, argv: CValuesRef<CPointerVar<gcharVar>>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSubprocess>?

@CCall("knifunptr_libgtk31996_g_subprocess_launcher_set_environ")
external fun g_subprocess_launcher_set_environ(self: CValuesRef<GSubprocessLauncher>?, env: CValuesRef<CPointerVar<gcharVar>>?): Unit

@CCall("knifunptr_libgtk31997_g_subprocess_launcher_setenv")
external fun g_subprocess_launcher_setenv(self: CValuesRef<GSubprocessLauncher>?, @CCall.CString variable: String?, @CCall.CString value: String?, overwrite: gboolean): Unit

@CCall("knifunptr_libgtk31998_g_subprocess_launcher_unsetenv")
external fun g_subprocess_launcher_unsetenv(self: CValuesRef<GSubprocessLauncher>?, @CCall.CString variable: String?): Unit

@CCall("knifunptr_libgtk31999_g_subprocess_launcher_getenv")
external fun g_subprocess_launcher_getenv(self: CValuesRef<GSubprocessLauncher>?, @CCall.CString variable: String?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk32000_g_subprocess_launcher_set_cwd")
external fun g_subprocess_launcher_set_cwd(self: CValuesRef<GSubprocessLauncher>?, @CCall.CString cwd: String?): Unit

@CCall("knifunptr_libgtk32001_g_subprocess_launcher_set_flags")
external fun g_subprocess_launcher_set_flags(self: CValuesRef<GSubprocessLauncher>?, flags: GSubprocessFlags): Unit

@CCall("knifunptr_libgtk32002_g_subprocess_launcher_set_stdin_file_path")
external fun g_subprocess_launcher_set_stdin_file_path(self: CValuesRef<GSubprocessLauncher>?, @CCall.CString path: String?): Unit

@CCall("knifunptr_libgtk32003_g_subprocess_launcher_take_stdin_fd")
external fun g_subprocess_launcher_take_stdin_fd(self: CValuesRef<GSubprocessLauncher>?, fd: gint): Unit

@CCall("knifunptr_libgtk32004_g_subprocess_launcher_set_stdout_file_path")
external fun g_subprocess_launcher_set_stdout_file_path(self: CValuesRef<GSubprocessLauncher>?, @CCall.CString path: String?): Unit

@CCall("knifunptr_libgtk32005_g_subprocess_launcher_take_stdout_fd")
external fun g_subprocess_launcher_take_stdout_fd(self: CValuesRef<GSubprocessLauncher>?, fd: gint): Unit

@CCall("knifunptr_libgtk32006_g_subprocess_launcher_set_stderr_file_path")
external fun g_subprocess_launcher_set_stderr_file_path(self: CValuesRef<GSubprocessLauncher>?, @CCall.CString path: String?): Unit

@CCall("knifunptr_libgtk32007_g_subprocess_launcher_take_stderr_fd")
external fun g_subprocess_launcher_take_stderr_fd(self: CValuesRef<GSubprocessLauncher>?, fd: gint): Unit

@CCall("knifunptr_libgtk32008_g_subprocess_launcher_take_fd")
external fun g_subprocess_launcher_take_fd(self: CValuesRef<GSubprocessLauncher>?, source_fd: gint, target_fd: gint): Unit

@CCall("knifunptr_libgtk32009_g_subprocess_launcher_set_child_setup")
external fun g_subprocess_launcher_set_child_setup(self: CValuesRef<GSubprocessLauncher>?, child_setup: GSpawnChildSetupFunc?, user_data: gpointer?, destroy_notify: GDestroyNotify?): Unit

@CCall("knifunptr_libgtk32010_g_tcp_connection_get_type")
external fun g_tcp_connection_get_type(): GType

@CCall("knifunptr_libgtk32011_g_tcp_connection_set_graceful_disconnect")
external fun g_tcp_connection_set_graceful_disconnect(connection: CValuesRef<GTcpConnection>?, graceful_disconnect: gboolean): Unit

@CCall("knifunptr_libgtk32012_g_tcp_connection_get_graceful_disconnect")
external fun g_tcp_connection_get_graceful_disconnect(connection: CValuesRef<GTcpConnection>?): gboolean

@CCall("knifunptr_libgtk32013_g_tcp_wrapper_connection_get_type")
external fun g_tcp_wrapper_connection_get_type(): GType

@CCall("knifunptr_libgtk32014_g_tcp_wrapper_connection_new")
external fun g_tcp_wrapper_connection_new(base_io_stream: CValuesRef<GIOStream>?, socket: CValuesRef<GSocket>?): CPointer<GSocketConnection>?

@CCall("knifunptr_libgtk32015_g_tcp_wrapper_connection_get_base_io_stream")
external fun g_tcp_wrapper_connection_get_base_io_stream(conn: CValuesRef<GTcpWrapperConnection>?): CPointer<GIOStream>?

@CCall("knifunptr_libgtk32016_g_test_dbus_get_type")
external fun g_test_dbus_get_type(): GType

@CCall("knifunptr_libgtk32017_g_test_dbus_new")
external fun g_test_dbus_new(flags: GTestDBusFlags): CPointer<GTestDBus>?

@CCall("knifunptr_libgtk32018_g_test_dbus_get_flags")
external fun g_test_dbus_get_flags(self: CValuesRef<GTestDBus>?): GTestDBusFlags

@CCall("knifunptr_libgtk32019_g_test_dbus_get_bus_address")
external fun g_test_dbus_get_bus_address(self: CValuesRef<GTestDBus>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk32020_g_test_dbus_add_service_dir")
external fun g_test_dbus_add_service_dir(self: CValuesRef<GTestDBus>?, @CCall.CString path: String?): Unit

@CCall("knifunptr_libgtk32021_g_test_dbus_up")
external fun g_test_dbus_up(self: CValuesRef<GTestDBus>?): Unit

@CCall("knifunptr_libgtk32022_g_test_dbus_stop")
external fun g_test_dbus_stop(self: CValuesRef<GTestDBus>?): Unit

@CCall("knifunptr_libgtk32023_g_test_dbus_down")
external fun g_test_dbus_down(self: CValuesRef<GTestDBus>?): Unit

@CCall("knifunptr_libgtk32024_g_test_dbus_unset")
external fun g_test_dbus_unset(): Unit

@CCall("knifunptr_libgtk32025_g_themed_icon_get_type")
external fun g_themed_icon_get_type(): GType

@CCall("knifunptr_libgtk32026_g_themed_icon_new")
external fun g_themed_icon_new(@CCall.CString iconname: String?): CPointer<GIcon>?

@CCall("knifunptr_libgtk32027_g_themed_icon_new_with_default_fallbacks")
external fun g_themed_icon_new_with_default_fallbacks(@CCall.CString iconname: String?): CPointer<GIcon>?

@CCall("knifunptr_libgtk32028_g_themed_icon_new_from_names")
external fun g_themed_icon_new_from_names(iconnames: CValuesRef<CPointerVar<ByteVar>>?, len: Int): CPointer<GIcon>?

@CCall("knifunptr_libgtk32029_g_themed_icon_prepend_name")
external fun g_themed_icon_prepend_name(icon: CValuesRef<GThemedIcon>?, @CCall.CString iconname: String?): Unit

@CCall("knifunptr_libgtk32030_g_themed_icon_append_name")
external fun g_themed_icon_append_name(icon: CValuesRef<GThemedIcon>?, @CCall.CString iconname: String?): Unit

@CCall("knifunptr_libgtk32031_g_themed_icon_get_names")
external fun g_themed_icon_get_names(icon: CValuesRef<GThemedIcon>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_libgtk32032_g_threaded_socket_service_get_type")
external fun g_threaded_socket_service_get_type(): GType

@CCall("knifunptr_libgtk32033_g_threaded_socket_service_new")
external fun g_threaded_socket_service_new(max_threads: Int): CPointer<GSocketService>?

@CCall("knifunptr_libgtk32034_g_tls_backend_get_type")
external fun g_tls_backend_get_type(): GType

@CCall("knifunptr_libgtk32035_g_tls_backend_get_default")
external fun g_tls_backend_get_default(): CPointer<GTlsBackend>?

@CCall("knifunptr_libgtk32036_g_tls_backend_get_default_database")
external fun g_tls_backend_get_default_database(backend: CValuesRef<GTlsBackend>?): CPointer<GTlsDatabase>?

@CCall("knifunptr_libgtk32037_g_tls_backend_supports_tls")
external fun g_tls_backend_supports_tls(backend: CValuesRef<GTlsBackend>?): gboolean

@CCall("knifunptr_libgtk32038_g_tls_backend_supports_dtls")
external fun g_tls_backend_supports_dtls(backend: CValuesRef<GTlsBackend>?): gboolean

@CCall("knifunptr_libgtk32039_g_tls_backend_get_certificate_type")
external fun g_tls_backend_get_certificate_type(backend: CValuesRef<GTlsBackend>?): GType

@CCall("knifunptr_libgtk32040_g_tls_backend_get_client_connection_type")
external fun g_tls_backend_get_client_connection_type(backend: CValuesRef<GTlsBackend>?): GType

@CCall("knifunptr_libgtk32041_g_tls_backend_get_server_connection_type")
external fun g_tls_backend_get_server_connection_type(backend: CValuesRef<GTlsBackend>?): GType

@CCall("knifunptr_libgtk32042_g_tls_backend_get_file_database_type")
external fun g_tls_backend_get_file_database_type(backend: CValuesRef<GTlsBackend>?): GType

@CCall("knifunptr_libgtk32043_g_tls_backend_get_dtls_client_connection_type")
external fun g_tls_backend_get_dtls_client_connection_type(backend: CValuesRef<GTlsBackend>?): GType

@CCall("knifunptr_libgtk32044_g_tls_backend_get_dtls_server_connection_type")
external fun g_tls_backend_get_dtls_server_connection_type(backend: CValuesRef<GTlsBackend>?): GType

@CCall("knifunptr_libgtk32045_g_tls_certificate_get_type")
external fun g_tls_certificate_get_type(): GType

@CCall("knifunptr_libgtk32046_g_tls_certificate_new_from_pem")
external fun g_tls_certificate_new_from_pem(@CCall.CString data: String?, length: gssize, error: CValuesRef<CPointerVar<GError>>?): CPointer<GTlsCertificate>?

@CCall("knifunptr_libgtk32047_g_tls_certificate_new_from_file")
external fun g_tls_certificate_new_from_file(@CCall.CString file: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GTlsCertificate>?

@CCall("knifunptr_libgtk32048_g_tls_certificate_new_from_files")
external fun g_tls_certificate_new_from_files(@CCall.CString cert_file: String?, @CCall.CString key_file: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GTlsCertificate>?

@CCall("knifunptr_libgtk32049_g_tls_certificate_list_new_from_file")
external fun g_tls_certificate_list_new_from_file(@CCall.CString file: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GList>?

@CCall("knifunptr_libgtk32050_g_tls_certificate_get_issuer")
external fun g_tls_certificate_get_issuer(cert: CValuesRef<GTlsCertificate>?): CPointer<GTlsCertificate>?

@CCall("knifunptr_libgtk32051_g_tls_certificate_verify")
external fun g_tls_certificate_verify(cert: CValuesRef<GTlsCertificate>?, identity: CValuesRef<GSocketConnectable>?, trusted_ca: CValuesRef<GTlsCertificate>?): GTlsCertificateFlags

@CCall("knifunptr_libgtk32052_g_tls_certificate_is_same")
external fun g_tls_certificate_is_same(cert_one: CValuesRef<GTlsCertificate>?, cert_two: CValuesRef<GTlsCertificate>?): gboolean

@CCall("knifunptr_libgtk32053_g_tls_connection_get_type")
external fun g_tls_connection_get_type(): GType

@CCall("knifunptr_libgtk32054_g_tls_connection_set_use_system_certdb")
external fun g_tls_connection_set_use_system_certdb(conn: CValuesRef<GTlsConnection>?, use_system_certdb: gboolean): Unit

@CCall("knifunptr_libgtk32055_g_tls_connection_get_use_system_certdb")
external fun g_tls_connection_get_use_system_certdb(conn: CValuesRef<GTlsConnection>?): gboolean

@CCall("knifunptr_libgtk32056_g_tls_connection_set_database")
external fun g_tls_connection_set_database(conn: CValuesRef<GTlsConnection>?, database: CValuesRef<GTlsDatabase>?): Unit

@CCall("knifunptr_libgtk32057_g_tls_connection_get_database")
external fun g_tls_connection_get_database(conn: CValuesRef<GTlsConnection>?): CPointer<GTlsDatabase>?

@CCall("knifunptr_libgtk32058_g_tls_connection_set_certificate")
external fun g_tls_connection_set_certificate(conn: CValuesRef<GTlsConnection>?, certificate: CValuesRef<GTlsCertificate>?): Unit

@CCall("knifunptr_libgtk32059_g_tls_connection_get_certificate")
external fun g_tls_connection_get_certificate(conn: CValuesRef<GTlsConnection>?): CPointer<GTlsCertificate>?

@CCall("knifunptr_libgtk32060_g_tls_connection_set_interaction")
external fun g_tls_connection_set_interaction(conn: CValuesRef<GTlsConnection>?, interaction: CValuesRef<GTlsInteraction>?): Unit

@CCall("knifunptr_libgtk32061_g_tls_connection_get_interaction")
external fun g_tls_connection_get_interaction(conn: CValuesRef<GTlsConnection>?): CPointer<GTlsInteraction>?

@CCall("knifunptr_libgtk32062_g_tls_connection_get_peer_certificate")
external fun g_tls_connection_get_peer_certificate(conn: CValuesRef<GTlsConnection>?): CPointer<GTlsCertificate>?

@CCall("knifunptr_libgtk32063_g_tls_connection_get_peer_certificate_errors")
external fun g_tls_connection_get_peer_certificate_errors(conn: CValuesRef<GTlsConnection>?): GTlsCertificateFlags

@CCall("knifunptr_libgtk32064_g_tls_connection_set_require_close_notify")
external fun g_tls_connection_set_require_close_notify(conn: CValuesRef<GTlsConnection>?, require_close_notify: gboolean): Unit

@CCall("knifunptr_libgtk32065_g_tls_connection_get_require_close_notify")
external fun g_tls_connection_get_require_close_notify(conn: CValuesRef<GTlsConnection>?): gboolean

@CCall("knifunptr_libgtk32066_g_tls_connection_set_rehandshake_mode")
external fun g_tls_connection_set_rehandshake_mode(conn: CValuesRef<GTlsConnection>?, mode: GTlsRehandshakeMode): Unit

@CCall("knifunptr_libgtk32067_g_tls_connection_get_rehandshake_mode")
external fun g_tls_connection_get_rehandshake_mode(conn: CValuesRef<GTlsConnection>?): GTlsRehandshakeMode

@CCall("knifunptr_libgtk32068_g_tls_connection_handshake")
external fun g_tls_connection_handshake(conn: CValuesRef<GTlsConnection>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk32069_g_tls_connection_handshake_async")
external fun g_tls_connection_handshake_async(conn: CValuesRef<GTlsConnection>?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk32070_g_tls_connection_handshake_finish")
external fun g_tls_connection_handshake_finish(conn: CValuesRef<GTlsConnection>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk32071_g_tls_error_quark")
external fun g_tls_error_quark(): GQuark

@CCall("knifunptr_libgtk32072_g_tls_connection_emit_accept_certificate")
external fun g_tls_connection_emit_accept_certificate(conn: CValuesRef<GTlsConnection>?, peer_cert: CValuesRef<GTlsCertificate>?, errors: GTlsCertificateFlags): gboolean

@CCall("knifunptr_libgtk32073_g_tls_client_connection_get_type")
external fun g_tls_client_connection_get_type(): GType

@CCall("knifunptr_libgtk32074_g_tls_client_connection_new")
external fun g_tls_client_connection_new(base_io_stream: CValuesRef<GIOStream>?, server_identity: CValuesRef<GSocketConnectable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GIOStream>?

@CCall("knifunptr_libgtk32075_g_tls_client_connection_get_validation_flags")
external fun g_tls_client_connection_get_validation_flags(conn: CValuesRef<GTlsClientConnection>?): GTlsCertificateFlags

@CCall("knifunptr_libgtk32076_g_tls_client_connection_set_validation_flags")
external fun g_tls_client_connection_set_validation_flags(conn: CValuesRef<GTlsClientConnection>?, flags: GTlsCertificateFlags): Unit

@CCall("knifunptr_libgtk32077_g_tls_client_connection_get_server_identity")
external fun g_tls_client_connection_get_server_identity(conn: CValuesRef<GTlsClientConnection>?): CPointer<GSocketConnectable>?

@CCall("knifunptr_libgtk32078_g_tls_client_connection_set_server_identity")
external fun g_tls_client_connection_set_server_identity(conn: CValuesRef<GTlsClientConnection>?, identity: CValuesRef<GSocketConnectable>?): Unit

@CCall("knifunptr_libgtk32079_g_tls_client_connection_get_use_ssl3")
external fun g_tls_client_connection_get_use_ssl3(conn: CValuesRef<GTlsClientConnection>?): gboolean

@CCall("knifunptr_libgtk32080_g_tls_client_connection_set_use_ssl3")
external fun g_tls_client_connection_set_use_ssl3(conn: CValuesRef<GTlsClientConnection>?, use_ssl3: gboolean): Unit

@CCall("knifunptr_libgtk32081_g_tls_client_connection_get_accepted_cas")
external fun g_tls_client_connection_get_accepted_cas(conn: CValuesRef<GTlsClientConnection>?): CPointer<GList>?

@CCall("knifunptr_libgtk32082_g_tls_client_connection_copy_session_state")
external fun g_tls_client_connection_copy_session_state(conn: CValuesRef<GTlsClientConnection>?, source: CValuesRef<GTlsClientConnection>?): Unit

@CCall("knifunptr_libgtk32083_g_tls_database_get_type")
external fun g_tls_database_get_type(): GType

@CCall("knifunptr_libgtk32084_g_tls_database_verify_chain")
external fun g_tls_database_verify_chain(self: CValuesRef<GTlsDatabase>?, chain: CValuesRef<GTlsCertificate>?, @CCall.CString purpose: String?, identity: CValuesRef<GSocketConnectable>?, interaction: CValuesRef<GTlsInteraction>?, flags: GTlsDatabaseVerifyFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): GTlsCertificateFlags

@CCall("knifunptr_libgtk32085_g_tls_database_verify_chain_async")
external fun g_tls_database_verify_chain_async(self: CValuesRef<GTlsDatabase>?, chain: CValuesRef<GTlsCertificate>?, @CCall.CString purpose: String?, identity: CValuesRef<GSocketConnectable>?, interaction: CValuesRef<GTlsInteraction>?, flags: GTlsDatabaseVerifyFlags, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk32086_g_tls_database_verify_chain_finish")
external fun g_tls_database_verify_chain_finish(self: CValuesRef<GTlsDatabase>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): GTlsCertificateFlags

@CCall("knifunptr_libgtk32087_g_tls_database_create_certificate_handle")
external fun g_tls_database_create_certificate_handle(self: CValuesRef<GTlsDatabase>?, certificate: CValuesRef<GTlsCertificate>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk32088_g_tls_database_lookup_certificate_for_handle")
external fun g_tls_database_lookup_certificate_for_handle(self: CValuesRef<GTlsDatabase>?, @CCall.CString handle: String?, interaction: CValuesRef<GTlsInteraction>?, flags: GTlsDatabaseLookupFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GTlsCertificate>?

@CCall("knifunptr_libgtk32089_g_tls_database_lookup_certificate_for_handle_async")
external fun g_tls_database_lookup_certificate_for_handle_async(self: CValuesRef<GTlsDatabase>?, @CCall.CString handle: String?, interaction: CValuesRef<GTlsInteraction>?, flags: GTlsDatabaseLookupFlags, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk32090_g_tls_database_lookup_certificate_for_handle_finish")
external fun g_tls_database_lookup_certificate_for_handle_finish(self: CValuesRef<GTlsDatabase>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GTlsCertificate>?

@CCall("knifunptr_libgtk32091_g_tls_database_lookup_certificate_issuer")
external fun g_tls_database_lookup_certificate_issuer(self: CValuesRef<GTlsDatabase>?, certificate: CValuesRef<GTlsCertificate>?, interaction: CValuesRef<GTlsInteraction>?, flags: GTlsDatabaseLookupFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GTlsCertificate>?

@CCall("knifunptr_libgtk32092_g_tls_database_lookup_certificate_issuer_async")
external fun g_tls_database_lookup_certificate_issuer_async(self: CValuesRef<GTlsDatabase>?, certificate: CValuesRef<GTlsCertificate>?, interaction: CValuesRef<GTlsInteraction>?, flags: GTlsDatabaseLookupFlags, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk32093_g_tls_database_lookup_certificate_issuer_finish")
external fun g_tls_database_lookup_certificate_issuer_finish(self: CValuesRef<GTlsDatabase>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GTlsCertificate>?

@CCall("knifunptr_libgtk32094_g_tls_database_lookup_certificates_issued_by")
external fun g_tls_database_lookup_certificates_issued_by(self: CValuesRef<GTlsDatabase>?, issuer_raw_dn: CValuesRef<GByteArray>?, interaction: CValuesRef<GTlsInteraction>?, flags: GTlsDatabaseLookupFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GList>?

@CCall("knifunptr_libgtk32095_g_tls_database_lookup_certificates_issued_by_async")
external fun g_tls_database_lookup_certificates_issued_by_async(self: CValuesRef<GTlsDatabase>?, issuer_raw_dn: CValuesRef<GByteArray>?, interaction: CValuesRef<GTlsInteraction>?, flags: GTlsDatabaseLookupFlags, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk32096_g_tls_database_lookup_certificates_issued_by_finish")
external fun g_tls_database_lookup_certificates_issued_by_finish(self: CValuesRef<GTlsDatabase>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GList>?

@CCall("knifunptr_libgtk32097_g_tls_file_database_get_type")
external fun g_tls_file_database_get_type(): GType

@CCall("knifunptr_libgtk32098_g_tls_file_database_new")
external fun g_tls_file_database_new(@CCall.CString anchors: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GTlsDatabase>?

@CCall("knifunptr_libgtk32099_g_tls_interaction_get_type")
external fun g_tls_interaction_get_type(): GType

@CCall("knifunptr_libgtk32100_g_tls_interaction_invoke_ask_password")
external fun g_tls_interaction_invoke_ask_password(interaction: CValuesRef<GTlsInteraction>?, password: CValuesRef<GTlsPassword>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): GTlsInteractionResult

@CCall("knifunptr_libgtk32101_g_tls_interaction_ask_password")
external fun g_tls_interaction_ask_password(interaction: CValuesRef<GTlsInteraction>?, password: CValuesRef<GTlsPassword>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): GTlsInteractionResult

@CCall("knifunptr_libgtk32102_g_tls_interaction_ask_password_async")
external fun g_tls_interaction_ask_password_async(interaction: CValuesRef<GTlsInteraction>?, password: CValuesRef<GTlsPassword>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk32103_g_tls_interaction_ask_password_finish")
external fun g_tls_interaction_ask_password_finish(interaction: CValuesRef<GTlsInteraction>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): GTlsInteractionResult

@CCall("knifunptr_libgtk32104_g_tls_interaction_invoke_request_certificate")
external fun g_tls_interaction_invoke_request_certificate(interaction: CValuesRef<GTlsInteraction>?, connection: CValuesRef<GTlsConnection>?, flags: GTlsCertificateRequestFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): GTlsInteractionResult

@CCall("knifunptr_libgtk32105_g_tls_interaction_request_certificate")
external fun g_tls_interaction_request_certificate(interaction: CValuesRef<GTlsInteraction>?, connection: CValuesRef<GTlsConnection>?, flags: GTlsCertificateRequestFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): GTlsInteractionResult

@CCall("knifunptr_libgtk32106_g_tls_interaction_request_certificate_async")
external fun g_tls_interaction_request_certificate_async(interaction: CValuesRef<GTlsInteraction>?, connection: CValuesRef<GTlsConnection>?, flags: GTlsCertificateRequestFlags, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk32107_g_tls_interaction_request_certificate_finish")
external fun g_tls_interaction_request_certificate_finish(interaction: CValuesRef<GTlsInteraction>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): GTlsInteractionResult

@CCall("knifunptr_libgtk32108_g_tls_server_connection_get_type")
external fun g_tls_server_connection_get_type(): GType

@CCall("knifunptr_libgtk32109_g_tls_server_connection_new")
external fun g_tls_server_connection_new(base_io_stream: CValuesRef<GIOStream>?, certificate: CValuesRef<GTlsCertificate>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GIOStream>?

@CCall("knifunptr_libgtk32110_g_tls_password_get_type")
external fun g_tls_password_get_type(): GType

@CCall("knifunptr_libgtk32111_g_tls_password_new")
external fun g_tls_password_new(flags: GTlsPasswordFlags, @CCall.CString description: String?): CPointer<GTlsPassword>?

@CCall("knifunptr_libgtk32112_g_tls_password_get_value")
external fun g_tls_password_get_value(password: CValuesRef<GTlsPassword>?, length: CValuesRef<gsizeVar>?): CPointer<gucharVar>?

@CCall("knifunptr_libgtk32113_g_tls_password_set_value")
external fun g_tls_password_set_value(password: CValuesRef<GTlsPassword>?, value: CValuesRef<gucharVar>?, length: gssize): Unit

@CCall("knifunptr_libgtk32114_g_tls_password_set_value_full")
external fun g_tls_password_set_value_full(password: CValuesRef<GTlsPassword>?, value: CValuesRef<gucharVar>?, length: gssize, destroy: GDestroyNotify?): Unit

@CCall("knifunptr_libgtk32115_g_tls_password_get_flags")
external fun g_tls_password_get_flags(password: CValuesRef<GTlsPassword>?): GTlsPasswordFlags

@CCall("knifunptr_libgtk32116_g_tls_password_set_flags")
external fun g_tls_password_set_flags(password: CValuesRef<GTlsPassword>?, flags: GTlsPasswordFlags): Unit

@CCall("knifunptr_libgtk32117_g_tls_password_get_description")
external fun g_tls_password_get_description(password: CValuesRef<GTlsPassword>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk32118_g_tls_password_set_description")
external fun g_tls_password_set_description(password: CValuesRef<GTlsPassword>?, @CCall.CString description: String?): Unit

@CCall("knifunptr_libgtk32119_g_tls_password_get_warning")
external fun g_tls_password_get_warning(password: CValuesRef<GTlsPassword>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk32120_g_tls_password_set_warning")
external fun g_tls_password_set_warning(password: CValuesRef<GTlsPassword>?, @CCall.CString warning: String?): Unit

@CCall("knifunptr_libgtk32121_g_vfs_get_type")
external fun g_vfs_get_type(): GType

@CCall("knifunptr_libgtk32122_g_vfs_is_active")
external fun g_vfs_is_active(vfs: CValuesRef<GVfs>?): gboolean

@CCall("knifunptr_libgtk32123_g_vfs_get_file_for_path")
external fun g_vfs_get_file_for_path(vfs: CValuesRef<GVfs>?, @CCall.CString path: String?): CPointer<GFile>?

@CCall("knifunptr_libgtk32124_g_vfs_get_file_for_uri")
external fun g_vfs_get_file_for_uri(vfs: CValuesRef<GVfs>?, @CCall.CString uri: String?): CPointer<GFile>?

@CCall("knifunptr_libgtk32125_g_vfs_get_supported_uri_schemes")
external fun g_vfs_get_supported_uri_schemes(vfs: CValuesRef<GVfs>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_libgtk32126_g_vfs_parse_name")
external fun g_vfs_parse_name(vfs: CValuesRef<GVfs>?, @CCall.CString parse_name: String?): CPointer<GFile>?

@CCall("knifunptr_libgtk32127_g_vfs_get_default")
external fun g_vfs_get_default(): CPointer<GVfs>?

@CCall("knifunptr_libgtk32128_g_vfs_get_local")
external fun g_vfs_get_local(): CPointer<GVfs>?

@CCall("knifunptr_libgtk32129_g_vfs_register_uri_scheme")
external fun g_vfs_register_uri_scheme(vfs: CValuesRef<GVfs>?, @CCall.CString scheme: String?, uri_func: GVfsFileLookupFunc?, uri_data: gpointer?, uri_destroy: GDestroyNotify?, parse_name_func: GVfsFileLookupFunc?, parse_name_data: gpointer?, parse_name_destroy: GDestroyNotify?): gboolean

@CCall("knifunptr_libgtk32130_g_vfs_unregister_uri_scheme")
external fun g_vfs_unregister_uri_scheme(vfs: CValuesRef<GVfs>?, @CCall.CString scheme: String?): gboolean

@CCall("knifunptr_libgtk32131_g_volume_get_type")
external fun g_volume_get_type(): GType

@CCall("knifunptr_libgtk32132_g_volume_get_name")
external fun g_volume_get_name(volume: CValuesRef<GVolume>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk32133_g_volume_get_icon")
external fun g_volume_get_icon(volume: CValuesRef<GVolume>?): CPointer<GIcon>?

@CCall("knifunptr_libgtk32134_g_volume_get_symbolic_icon")
external fun g_volume_get_symbolic_icon(volume: CValuesRef<GVolume>?): CPointer<GIcon>?

@CCall("knifunptr_libgtk32135_g_volume_get_uuid")
external fun g_volume_get_uuid(volume: CValuesRef<GVolume>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk32136_g_volume_get_drive")
external fun g_volume_get_drive(volume: CValuesRef<GVolume>?): CPointer<GDrive>?

@CCall("knifunptr_libgtk32137_g_volume_get_mount")
external fun g_volume_get_mount(volume: CValuesRef<GVolume>?): CPointer<GMount>?

@CCall("knifunptr_libgtk32138_g_volume_can_mount")
external fun g_volume_can_mount(volume: CValuesRef<GVolume>?): gboolean

@CCall("knifunptr_libgtk32139_g_volume_can_eject")
external fun g_volume_can_eject(volume: CValuesRef<GVolume>?): gboolean

@CCall("knifunptr_libgtk32140_g_volume_should_automount")
external fun g_volume_should_automount(volume: CValuesRef<GVolume>?): gboolean

@CCall("knifunptr_libgtk32141_g_volume_mount")
external fun g_volume_mount(volume: CValuesRef<GVolume>?, flags: GMountMountFlags, mount_operation: CValuesRef<GMountOperation>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk32142_g_volume_mount_finish")
external fun g_volume_mount_finish(volume: CValuesRef<GVolume>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk32143_g_volume_eject")
external fun g_volume_eject(volume: CValuesRef<GVolume>?, flags: GMountUnmountFlags, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk32144_g_volume_eject_finish")
external fun g_volume_eject_finish(volume: CValuesRef<GVolume>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk32145_g_volume_get_identifier")
external fun g_volume_get_identifier(volume: CValuesRef<GVolume>?, @CCall.CString kind: String?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk32146_g_volume_enumerate_identifiers")
external fun g_volume_enumerate_identifiers(volume: CValuesRef<GVolume>?): CPointer<CPointerVar<ByteVar>>?

@CCall("knifunptr_libgtk32147_g_volume_get_activation_root")
external fun g_volume_get_activation_root(volume: CValuesRef<GVolume>?): CPointer<GFile>?

@CCall("knifunptr_libgtk32148_g_volume_eject_with_operation")
external fun g_volume_eject_with_operation(volume: CValuesRef<GVolume>?, flags: GMountUnmountFlags, mount_operation: CValuesRef<GMountOperation>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk32149_g_volume_eject_with_operation_finish")
external fun g_volume_eject_with_operation_finish(volume: CValuesRef<GVolume>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk32150_g_volume_get_sort_key")
external fun g_volume_get_sort_key(volume: CValuesRef<GVolume>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk32151_g_zlib_compressor_get_type")
external fun g_zlib_compressor_get_type(): GType

@CCall("knifunptr_libgtk32152_g_zlib_compressor_new")
external fun g_zlib_compressor_new(format: GZlibCompressorFormat, level: Int): CPointer<GZlibCompressor>?

@CCall("knifunptr_libgtk32153_g_zlib_compressor_get_file_info")
external fun g_zlib_compressor_get_file_info(compressor: CValuesRef<GZlibCompressor>?): CPointer<GFileInfo>?

@CCall("knifunptr_libgtk32154_g_zlib_compressor_set_file_info")
external fun g_zlib_compressor_set_file_info(compressor: CValuesRef<GZlibCompressor>?, file_info: CValuesRef<GFileInfo>?): Unit

@CCall("knifunptr_libgtk32155_g_zlib_decompressor_get_type")
external fun g_zlib_decompressor_get_type(): GType

@CCall("knifunptr_libgtk32156_g_zlib_decompressor_new")
external fun g_zlib_decompressor_new(format: GZlibCompressorFormat): CPointer<GZlibDecompressor>?

@CCall("knifunptr_libgtk32157_g_zlib_decompressor_get_file_info")
external fun g_zlib_decompressor_get_file_info(decompressor: CValuesRef<GZlibDecompressor>?): CPointer<GFileInfo>?

@CCall("knifunptr_libgtk32158_g_dbus_interface_get_type")
external fun g_dbus_interface_get_type(): GType

@CCall("knifunptr_libgtk32159_g_dbus_interface_get_info")
external fun g_dbus_interface_get_info(interface_: CValuesRef<GDBusInterface>?): CPointer<GDBusInterfaceInfo>?

@CCall("knifunptr_libgtk32160_g_dbus_interface_get_object")
external fun g_dbus_interface_get_object(interface_: CValuesRef<GDBusInterface>?): CPointer<GDBusObject>?

@CCall("knifunptr_libgtk32161_g_dbus_interface_set_object")
external fun g_dbus_interface_set_object(interface_: CValuesRef<GDBusInterface>?, `object`: CValuesRef<GDBusObject>?): Unit

@CCall("knifunptr_libgtk32162_g_dbus_interface_dup_object")
external fun g_dbus_interface_dup_object(interface_: CValuesRef<GDBusInterface>?): CPointer<GDBusObject>?

@CCall("knifunptr_libgtk32163_g_dbus_interface_skeleton_get_type")
external fun g_dbus_interface_skeleton_get_type(): GType

@CCall("knifunptr_libgtk32164_g_dbus_interface_skeleton_get_flags")
external fun g_dbus_interface_skeleton_get_flags(interface_: CValuesRef<GDBusInterfaceSkeleton>?): GDBusInterfaceSkeletonFlags

@CCall("knifunptr_libgtk32165_g_dbus_interface_skeleton_set_flags")
external fun g_dbus_interface_skeleton_set_flags(interface_: CValuesRef<GDBusInterfaceSkeleton>?, flags: GDBusInterfaceSkeletonFlags): Unit

@CCall("knifunptr_libgtk32166_g_dbus_interface_skeleton_get_info")
external fun g_dbus_interface_skeleton_get_info(interface_: CValuesRef<GDBusInterfaceSkeleton>?): CPointer<GDBusInterfaceInfo>?

@CCall("knifunptr_libgtk32167_g_dbus_interface_skeleton_get_vtable")
external fun g_dbus_interface_skeleton_get_vtable(interface_: CValuesRef<GDBusInterfaceSkeleton>?): CPointer<GDBusInterfaceVTable>?

@CCall("knifunptr_libgtk32168_g_dbus_interface_skeleton_get_properties")
external fun g_dbus_interface_skeleton_get_properties(interface_: CValuesRef<GDBusInterfaceSkeleton>?): CPointer<GVariant>?

@CCall("knifunptr_libgtk32169_g_dbus_interface_skeleton_flush")
external fun g_dbus_interface_skeleton_flush(interface_: CValuesRef<GDBusInterfaceSkeleton>?): Unit

@CCall("knifunptr_libgtk32170_g_dbus_interface_skeleton_export")
external fun g_dbus_interface_skeleton_export(interface_: CValuesRef<GDBusInterfaceSkeleton>?, connection: CValuesRef<GDBusConnection>?, @CCall.CString object_path: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk32171_g_dbus_interface_skeleton_unexport")
external fun g_dbus_interface_skeleton_unexport(interface_: CValuesRef<GDBusInterfaceSkeleton>?): Unit

@CCall("knifunptr_libgtk32172_g_dbus_interface_skeleton_unexport_from_connection")
external fun g_dbus_interface_skeleton_unexport_from_connection(interface_: CValuesRef<GDBusInterfaceSkeleton>?, connection: CValuesRef<GDBusConnection>?): Unit

@CCall("knifunptr_libgtk32173_g_dbus_interface_skeleton_get_connection")
external fun g_dbus_interface_skeleton_get_connection(interface_: CValuesRef<GDBusInterfaceSkeleton>?): CPointer<GDBusConnection>?

@CCall("knifunptr_libgtk32174_g_dbus_interface_skeleton_get_connections")
external fun g_dbus_interface_skeleton_get_connections(interface_: CValuesRef<GDBusInterfaceSkeleton>?): CPointer<GList>?

@CCall("knifunptr_libgtk32175_g_dbus_interface_skeleton_has_connection")
external fun g_dbus_interface_skeleton_has_connection(interface_: CValuesRef<GDBusInterfaceSkeleton>?, connection: CValuesRef<GDBusConnection>?): gboolean

@CCall("knifunptr_libgtk32176_g_dbus_interface_skeleton_get_object_path")
external fun g_dbus_interface_skeleton_get_object_path(interface_: CValuesRef<GDBusInterfaceSkeleton>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk32177_g_dbus_object_get_type")
external fun g_dbus_object_get_type(): GType

@CCall("knifunptr_libgtk32178_g_dbus_object_get_object_path")
external fun g_dbus_object_get_object_path(`object`: CValuesRef<GDBusObject>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk32179_g_dbus_object_get_interfaces")
external fun g_dbus_object_get_interfaces(`object`: CValuesRef<GDBusObject>?): CPointer<GList>?

@CCall("knifunptr_libgtk32180_g_dbus_object_get_interface")
external fun g_dbus_object_get_interface(`object`: CValuesRef<GDBusObject>?, @CCall.CString interface_name: String?): CPointer<GDBusInterface>?

@CCall("knifunptr_libgtk32181_g_dbus_object_skeleton_get_type")
external fun g_dbus_object_skeleton_get_type(): GType

@CCall("knifunptr_libgtk32182_g_dbus_object_skeleton_new")
external fun g_dbus_object_skeleton_new(@CCall.CString object_path: String?): CPointer<GDBusObjectSkeleton>?

@CCall("knifunptr_libgtk32183_g_dbus_object_skeleton_flush")
external fun g_dbus_object_skeleton_flush(`object`: CValuesRef<GDBusObjectSkeleton>?): Unit

@CCall("knifunptr_libgtk32184_g_dbus_object_skeleton_add_interface")
external fun g_dbus_object_skeleton_add_interface(`object`: CValuesRef<GDBusObjectSkeleton>?, interface_: CValuesRef<GDBusInterfaceSkeleton>?): Unit

@CCall("knifunptr_libgtk32185_g_dbus_object_skeleton_remove_interface")
external fun g_dbus_object_skeleton_remove_interface(`object`: CValuesRef<GDBusObjectSkeleton>?, interface_: CValuesRef<GDBusInterfaceSkeleton>?): Unit

@CCall("knifunptr_libgtk32186_g_dbus_object_skeleton_remove_interface_by_name")
external fun g_dbus_object_skeleton_remove_interface_by_name(`object`: CValuesRef<GDBusObjectSkeleton>?, @CCall.CString interface_name: String?): Unit

@CCall("knifunptr_libgtk32187_g_dbus_object_skeleton_set_object_path")
external fun g_dbus_object_skeleton_set_object_path(`object`: CValuesRef<GDBusObjectSkeleton>?, @CCall.CString object_path: String?): Unit

@CCall("knifunptr_libgtk32188_g_dbus_object_proxy_get_type")
external fun g_dbus_object_proxy_get_type(): GType

@CCall("knifunptr_libgtk32189_g_dbus_object_proxy_new")
external fun g_dbus_object_proxy_new(connection: CValuesRef<GDBusConnection>?, @CCall.CString object_path: String?): CPointer<GDBusObjectProxy>?

@CCall("knifunptr_libgtk32190_g_dbus_object_proxy_get_connection")
external fun g_dbus_object_proxy_get_connection(proxy: CValuesRef<GDBusObjectProxy>?): CPointer<GDBusConnection>?

@CCall("knifunptr_libgtk32191_g_dbus_object_manager_get_type")
external fun g_dbus_object_manager_get_type(): GType

@CCall("knifunptr_libgtk32192_g_dbus_object_manager_get_object_path")
external fun g_dbus_object_manager_get_object_path(manager: CValuesRef<GDBusObjectManager>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk32193_g_dbus_object_manager_get_objects")
external fun g_dbus_object_manager_get_objects(manager: CValuesRef<GDBusObjectManager>?): CPointer<GList>?

@CCall("knifunptr_libgtk32194_g_dbus_object_manager_get_object")
external fun g_dbus_object_manager_get_object(manager: CValuesRef<GDBusObjectManager>?, @CCall.CString object_path: String?): CPointer<GDBusObject>?

@CCall("knifunptr_libgtk32195_g_dbus_object_manager_get_interface")
external fun g_dbus_object_manager_get_interface(manager: CValuesRef<GDBusObjectManager>?, @CCall.CString object_path: String?, @CCall.CString interface_name: String?): CPointer<GDBusInterface>?

@CCall("knifunptr_libgtk32196_g_dbus_object_manager_client_get_type")
external fun g_dbus_object_manager_client_get_type(): GType

@CCall("knifunptr_libgtk32197_g_dbus_object_manager_client_new")
external fun g_dbus_object_manager_client_new(connection: CValuesRef<GDBusConnection>?, flags: GDBusObjectManagerClientFlags, @CCall.CString name: String?, @CCall.CString object_path: String?, get_proxy_type_func: GDBusProxyTypeFunc?, get_proxy_type_user_data: gpointer?, get_proxy_type_destroy_notify: GDestroyNotify?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk32198_g_dbus_object_manager_client_new_finish")
external fun g_dbus_object_manager_client_new_finish(res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusObjectManager>?

@CCall("knifunptr_libgtk32199_g_dbus_object_manager_client_new_sync")
external fun g_dbus_object_manager_client_new_sync(connection: CValuesRef<GDBusConnection>?, flags: GDBusObjectManagerClientFlags, @CCall.CString name: String?, @CCall.CString object_path: String?, get_proxy_type_func: GDBusProxyTypeFunc?, get_proxy_type_user_data: gpointer?, get_proxy_type_destroy_notify: GDestroyNotify?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusObjectManager>?

@CCall("knifunptr_libgtk32200_g_dbus_object_manager_client_new_for_bus")
external fun g_dbus_object_manager_client_new_for_bus(bus_type: GBusType, flags: GDBusObjectManagerClientFlags, @CCall.CString name: String?, @CCall.CString object_path: String?, get_proxy_type_func: GDBusProxyTypeFunc?, get_proxy_type_user_data: gpointer?, get_proxy_type_destroy_notify: GDestroyNotify?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk32201_g_dbus_object_manager_client_new_for_bus_finish")
external fun g_dbus_object_manager_client_new_for_bus_finish(res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusObjectManager>?

@CCall("knifunptr_libgtk32202_g_dbus_object_manager_client_new_for_bus_sync")
external fun g_dbus_object_manager_client_new_for_bus_sync(bus_type: GBusType, flags: GDBusObjectManagerClientFlags, @CCall.CString name: String?, @CCall.CString object_path: String?, get_proxy_type_func: GDBusProxyTypeFunc?, get_proxy_type_user_data: gpointer?, get_proxy_type_destroy_notify: GDestroyNotify?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusObjectManager>?

@CCall("knifunptr_libgtk32203_g_dbus_object_manager_client_get_connection")
external fun g_dbus_object_manager_client_get_connection(manager: CValuesRef<GDBusObjectManagerClient>?): CPointer<GDBusConnection>?

@CCall("knifunptr_libgtk32204_g_dbus_object_manager_client_get_flags")
external fun g_dbus_object_manager_client_get_flags(manager: CValuesRef<GDBusObjectManagerClient>?): GDBusObjectManagerClientFlags

@CCall("knifunptr_libgtk32205_g_dbus_object_manager_client_get_name")
external fun g_dbus_object_manager_client_get_name(manager: CValuesRef<GDBusObjectManagerClient>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk32206_g_dbus_object_manager_client_get_name_owner")
external fun g_dbus_object_manager_client_get_name_owner(manager: CValuesRef<GDBusObjectManagerClient>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk32207_g_dbus_object_manager_server_get_type")
external fun g_dbus_object_manager_server_get_type(): GType

@CCall("knifunptr_libgtk32208_g_dbus_object_manager_server_new")
external fun g_dbus_object_manager_server_new(@CCall.CString object_path: String?): CPointer<GDBusObjectManagerServer>?

@CCall("knifunptr_libgtk32209_g_dbus_object_manager_server_get_connection")
external fun g_dbus_object_manager_server_get_connection(manager: CValuesRef<GDBusObjectManagerServer>?): CPointer<GDBusConnection>?

@CCall("knifunptr_libgtk32210_g_dbus_object_manager_server_set_connection")
external fun g_dbus_object_manager_server_set_connection(manager: CValuesRef<GDBusObjectManagerServer>?, connection: CValuesRef<GDBusConnection>?): Unit

@CCall("knifunptr_libgtk32211_g_dbus_object_manager_server_export")
external fun g_dbus_object_manager_server_export(manager: CValuesRef<GDBusObjectManagerServer>?, `object`: CValuesRef<GDBusObjectSkeleton>?): Unit

@CCall("knifunptr_libgtk32212_g_dbus_object_manager_server_export_uniquely")
external fun g_dbus_object_manager_server_export_uniquely(manager: CValuesRef<GDBusObjectManagerServer>?, `object`: CValuesRef<GDBusObjectSkeleton>?): Unit

@CCall("knifunptr_libgtk32213_g_dbus_object_manager_server_is_exported")
external fun g_dbus_object_manager_server_is_exported(manager: CValuesRef<GDBusObjectManagerServer>?, `object`: CValuesRef<GDBusObjectSkeleton>?): gboolean

@CCall("knifunptr_libgtk32214_g_dbus_object_manager_server_unexport")
external fun g_dbus_object_manager_server_unexport(manager: CValuesRef<GDBusObjectManagerServer>?, @CCall.CString object_path: String?): gboolean

@CCall("knifunptr_libgtk32215_g_dbus_action_group_get_type")
external fun g_dbus_action_group_get_type(): GType

@CCall("knifunptr_libgtk32216_g_dbus_action_group_get")
external fun g_dbus_action_group_get(connection: CValuesRef<GDBusConnection>?, @CCall.CString bus_name: String?, @CCall.CString object_path: String?): CPointer<GDBusActionGroup>?

@CCall("knifunptr_libgtk32217_g_remote_action_group_get_type")
external fun g_remote_action_group_get_type(): GType

@CCall("knifunptr_libgtk32218_g_remote_action_group_activate_action_full")
external fun g_remote_action_group_activate_action_full(remote: CValuesRef<GRemoteActionGroup>?, @CCall.CString action_name: String?, parameter: CValuesRef<GVariant>?, platform_data: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_libgtk32219_g_remote_action_group_change_action_state_full")
external fun g_remote_action_group_change_action_state_full(remote: CValuesRef<GRemoteActionGroup>?, @CCall.CString action_name: String?, value: CValuesRef<GVariant>?, platform_data: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_libgtk32220_g_menu_model_get_type")
external fun g_menu_model_get_type(): GType

@CCall("knifunptr_libgtk32221_g_menu_model_is_mutable")
external fun g_menu_model_is_mutable(model: CValuesRef<GMenuModel>?): gboolean

@CCall("knifunptr_libgtk32222_g_menu_model_get_n_items")
external fun g_menu_model_get_n_items(model: CValuesRef<GMenuModel>?): gint

@CCall("knifunptr_libgtk32223_g_menu_model_iterate_item_attributes")
external fun g_menu_model_iterate_item_attributes(model: CValuesRef<GMenuModel>?, item_index: gint): CPointer<GMenuAttributeIter>?

@CCall("knifunptr_libgtk32224_g_menu_model_get_item_attribute_value")
external fun g_menu_model_get_item_attribute_value(model: CValuesRef<GMenuModel>?, item_index: gint, @CCall.CString attribute: String?, expected_type: CValuesRef<GVariantType>?): CPointer<GVariant>?

@CCall("knifunptr_libgtk32225_g_menu_model_get_item_attribute")
external fun g_menu_model_get_item_attribute(model: CValuesRef<GMenuModel>?, item_index: gint, @CCall.CString attribute: String?, @CCall.CString format_string: String?, vararg variadicArguments: Any?): gboolean

@CCall("knifunptr_libgtk32226_g_menu_model_iterate_item_links")
external fun g_menu_model_iterate_item_links(model: CValuesRef<GMenuModel>?, item_index: gint): CPointer<GMenuLinkIter>?

@CCall("knifunptr_libgtk32227_g_menu_model_get_item_link")
external fun g_menu_model_get_item_link(model: CValuesRef<GMenuModel>?, item_index: gint, @CCall.CString link: String?): CPointer<GMenuModel>?

@CCall("knifunptr_libgtk32228_g_menu_model_items_changed")
external fun g_menu_model_items_changed(model: CValuesRef<GMenuModel>?, position: gint, removed: gint, added: gint): Unit

@CCall("knifunptr_libgtk32229_g_menu_attribute_iter_get_type")
external fun g_menu_attribute_iter_get_type(): GType

@CCall("knifunptr_libgtk32230_g_menu_attribute_iter_get_next")
external fun g_menu_attribute_iter_get_next(iter: CValuesRef<GMenuAttributeIter>?, out_name: CValuesRef<CPointerVar<gcharVar>>?, value: CValuesRef<CPointerVar<GVariant>>?): gboolean

@CCall("knifunptr_libgtk32231_g_menu_attribute_iter_next")
external fun g_menu_attribute_iter_next(iter: CValuesRef<GMenuAttributeIter>?): gboolean

@CCall("knifunptr_libgtk32232_g_menu_attribute_iter_get_name")
external fun g_menu_attribute_iter_get_name(iter: CValuesRef<GMenuAttributeIter>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk32233_g_menu_attribute_iter_get_value")
external fun g_menu_attribute_iter_get_value(iter: CValuesRef<GMenuAttributeIter>?): CPointer<GVariant>?

@CCall("knifunptr_libgtk32234_g_menu_link_iter_get_type")
external fun g_menu_link_iter_get_type(): GType

@CCall("knifunptr_libgtk32235_g_menu_link_iter_get_next")
external fun g_menu_link_iter_get_next(iter: CValuesRef<GMenuLinkIter>?, out_link: CValuesRef<CPointerVar<gcharVar>>?, value: CValuesRef<CPointerVar<GMenuModel>>?): gboolean

@CCall("knifunptr_libgtk32236_g_menu_link_iter_next")
external fun g_menu_link_iter_next(iter: CValuesRef<GMenuLinkIter>?): gboolean

@CCall("knifunptr_libgtk32237_g_menu_link_iter_get_name")
external fun g_menu_link_iter_get_name(iter: CValuesRef<GMenuLinkIter>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk32238_g_menu_link_iter_get_value")
external fun g_menu_link_iter_get_value(iter: CValuesRef<GMenuLinkIter>?): CPointer<GMenuModel>?

@CCall("knifunptr_libgtk32239_g_menu_get_type")
external fun g_menu_get_type(): GType

@CCall("knifunptr_libgtk32240_g_menu_new")
external fun g_menu_new(): CPointer<GMenu>?

@CCall("knifunptr_libgtk32241_g_menu_freeze")
external fun g_menu_freeze(menu: CValuesRef<GMenu>?): Unit

@CCall("knifunptr_libgtk32242_g_menu_insert_item")
external fun g_menu_insert_item(menu: CValuesRef<GMenu>?, position: gint, item: CValuesRef<GMenuItem>?): Unit

@CCall("knifunptr_libgtk32243_g_menu_prepend_item")
external fun g_menu_prepend_item(menu: CValuesRef<GMenu>?, item: CValuesRef<GMenuItem>?): Unit

@CCall("knifunptr_libgtk32244_g_menu_append_item")
external fun g_menu_append_item(menu: CValuesRef<GMenu>?, item: CValuesRef<GMenuItem>?): Unit

@CCall("knifunptr_libgtk32245_g_menu_remove")
external fun g_menu_remove(menu: CValuesRef<GMenu>?, position: gint): Unit

@CCall("knifunptr_libgtk32246_g_menu_remove_all")
external fun g_menu_remove_all(menu: CValuesRef<GMenu>?): Unit

@CCall("knifunptr_libgtk32247_g_menu_insert")
external fun g_menu_insert(menu: CValuesRef<GMenu>?, position: gint, @CCall.CString label: String?, @CCall.CString detailed_action: String?): Unit

@CCall("knifunptr_libgtk32248_g_menu_prepend")
external fun g_menu_prepend(menu: CValuesRef<GMenu>?, @CCall.CString label: String?, @CCall.CString detailed_action: String?): Unit

@CCall("knifunptr_libgtk32249_g_menu_append")
external fun g_menu_append(menu: CValuesRef<GMenu>?, @CCall.CString label: String?, @CCall.CString detailed_action: String?): Unit

@CCall("knifunptr_libgtk32250_g_menu_insert_section")
external fun g_menu_insert_section(menu: CValuesRef<GMenu>?, position: gint, @CCall.CString label: String?, section: CValuesRef<GMenuModel>?): Unit

@CCall("knifunptr_libgtk32251_g_menu_prepend_section")
external fun g_menu_prepend_section(menu: CValuesRef<GMenu>?, @CCall.CString label: String?, section: CValuesRef<GMenuModel>?): Unit

@CCall("knifunptr_libgtk32252_g_menu_append_section")
external fun g_menu_append_section(menu: CValuesRef<GMenu>?, @CCall.CString label: String?, section: CValuesRef<GMenuModel>?): Unit

@CCall("knifunptr_libgtk32253_g_menu_insert_submenu")
external fun g_menu_insert_submenu(menu: CValuesRef<GMenu>?, position: gint, @CCall.CString label: String?, submenu: CValuesRef<GMenuModel>?): Unit

@CCall("knifunptr_libgtk32254_g_menu_prepend_submenu")
external fun g_menu_prepend_submenu(menu: CValuesRef<GMenu>?, @CCall.CString label: String?, submenu: CValuesRef<GMenuModel>?): Unit

@CCall("knifunptr_libgtk32255_g_menu_append_submenu")
external fun g_menu_append_submenu(menu: CValuesRef<GMenu>?, @CCall.CString label: String?, submenu: CValuesRef<GMenuModel>?): Unit

@CCall("knifunptr_libgtk32256_g_menu_item_get_type")
external fun g_menu_item_get_type(): GType

@CCall("knifunptr_libgtk32257_g_menu_item_new")
external fun g_menu_item_new(@CCall.CString label: String?, @CCall.CString detailed_action: String?): CPointer<GMenuItem>?

@CCall("knifunptr_libgtk32258_g_menu_item_new_from_model")
external fun g_menu_item_new_from_model(model: CValuesRef<GMenuModel>?, item_index: gint): CPointer<GMenuItem>?

@CCall("knifunptr_libgtk32259_g_menu_item_new_submenu")
external fun g_menu_item_new_submenu(@CCall.CString label: String?, submenu: CValuesRef<GMenuModel>?): CPointer<GMenuItem>?

@CCall("knifunptr_libgtk32260_g_menu_item_new_section")
external fun g_menu_item_new_section(@CCall.CString label: String?, section: CValuesRef<GMenuModel>?): CPointer<GMenuItem>?

@CCall("knifunptr_libgtk32261_g_menu_item_get_attribute_value")
external fun g_menu_item_get_attribute_value(menu_item: CValuesRef<GMenuItem>?, @CCall.CString attribute: String?, expected_type: CValuesRef<GVariantType>?): CPointer<GVariant>?

@CCall("knifunptr_libgtk32262_g_menu_item_get_attribute")
external fun g_menu_item_get_attribute(menu_item: CValuesRef<GMenuItem>?, @CCall.CString attribute: String?, @CCall.CString format_string: String?, vararg variadicArguments: Any?): gboolean

@CCall("knifunptr_libgtk32263_g_menu_item_get_link")
external fun g_menu_item_get_link(menu_item: CValuesRef<GMenuItem>?, @CCall.CString link: String?): CPointer<GMenuModel>?

@CCall("knifunptr_libgtk32264_g_menu_item_set_attribute_value")
external fun g_menu_item_set_attribute_value(menu_item: CValuesRef<GMenuItem>?, @CCall.CString attribute: String?, value: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_libgtk32265_g_menu_item_set_attribute")
external fun g_menu_item_set_attribute(menu_item: CValuesRef<GMenuItem>?, @CCall.CString attribute: String?, @CCall.CString format_string: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk32266_g_menu_item_set_link")
external fun g_menu_item_set_link(menu_item: CValuesRef<GMenuItem>?, @CCall.CString link: String?, model: CValuesRef<GMenuModel>?): Unit

@CCall("knifunptr_libgtk32267_g_menu_item_set_label")
external fun g_menu_item_set_label(menu_item: CValuesRef<GMenuItem>?, @CCall.CString label: String?): Unit

@CCall("knifunptr_libgtk32268_g_menu_item_set_submenu")
external fun g_menu_item_set_submenu(menu_item: CValuesRef<GMenuItem>?, submenu: CValuesRef<GMenuModel>?): Unit

@CCall("knifunptr_libgtk32269_g_menu_item_set_section")
external fun g_menu_item_set_section(menu_item: CValuesRef<GMenuItem>?, section: CValuesRef<GMenuModel>?): Unit

@CCall("knifunptr_libgtk32270_g_menu_item_set_action_and_target_value")
external fun g_menu_item_set_action_and_target_value(menu_item: CValuesRef<GMenuItem>?, @CCall.CString action: String?, target_value: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_libgtk32271_g_menu_item_set_action_and_target")
external fun g_menu_item_set_action_and_target(menu_item: CValuesRef<GMenuItem>?, @CCall.CString action: String?, @CCall.CString format_string: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk32272_g_menu_item_set_detailed_action")
external fun g_menu_item_set_detailed_action(menu_item: CValuesRef<GMenuItem>?, @CCall.CString detailed_action: String?): Unit

@CCall("knifunptr_libgtk32273_g_menu_item_set_icon")
external fun g_menu_item_set_icon(menu_item: CValuesRef<GMenuItem>?, icon: CValuesRef<GIcon>?): Unit

@CCall("knifunptr_libgtk32274_g_dbus_connection_export_menu_model")
external fun g_dbus_connection_export_menu_model(connection: CValuesRef<GDBusConnection>?, @CCall.CString object_path: String?, menu: CValuesRef<GMenuModel>?, error: CValuesRef<CPointerVar<GError>>?): guint

@CCall("knifunptr_libgtk32275_g_dbus_connection_unexport_menu_model")
external fun g_dbus_connection_unexport_menu_model(connection: CValuesRef<GDBusConnection>?, export_id: guint): Unit

@CCall("knifunptr_libgtk32276_g_dbus_menu_model_get_type")
external fun g_dbus_menu_model_get_type(): GType

@CCall("knifunptr_libgtk32277_g_dbus_menu_model_get")
external fun g_dbus_menu_model_get(connection: CValuesRef<GDBusConnection>?, @CCall.CString bus_name: String?, @CCall.CString object_path: String?): CPointer<GDBusMenuModel>?

@CCall("knifunptr_libgtk32278_g_notification_get_type")
external fun g_notification_get_type(): GType

@CCall("knifunptr_libgtk32279_g_notification_new")
external fun g_notification_new(@CCall.CString title: String?): CPointer<GNotification>?

@CCall("knifunptr_libgtk32280_g_notification_set_title")
external fun g_notification_set_title(notification: CValuesRef<GNotification>?, @CCall.CString title: String?): Unit

@CCall("knifunptr_libgtk32281_g_notification_set_body")
external fun g_notification_set_body(notification: CValuesRef<GNotification>?, @CCall.CString body: String?): Unit

@CCall("knifunptr_libgtk32282_g_notification_set_icon")
external fun g_notification_set_icon(notification: CValuesRef<GNotification>?, icon: CValuesRef<GIcon>?): Unit

@CCall("knifunptr_libgtk32283_g_notification_set_urgent")
external fun g_notification_set_urgent(notification: CValuesRef<GNotification>?, urgent: gboolean): Unit

@CCall("knifunptr_libgtk32284_g_notification_set_priority")
external fun g_notification_set_priority(notification: CValuesRef<GNotification>?, priority: GNotificationPriority): Unit

@CCall("knifunptr_libgtk32285_g_notification_add_button")
external fun g_notification_add_button(notification: CValuesRef<GNotification>?, @CCall.CString label: String?, @CCall.CString detailed_action: String?): Unit

@CCall("knifunptr_libgtk32286_g_notification_add_button_with_target")
external fun g_notification_add_button_with_target(notification: CValuesRef<GNotification>?, @CCall.CString label: String?, @CCall.CString action: String?, @CCall.CString target_format: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk32287_g_notification_add_button_with_target_value")
external fun g_notification_add_button_with_target_value(notification: CValuesRef<GNotification>?, @CCall.CString label: String?, @CCall.CString action: String?, target: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_libgtk32288_g_notification_set_default_action")
external fun g_notification_set_default_action(notification: CValuesRef<GNotification>?, @CCall.CString detailed_action: String?): Unit

@CCall("knifunptr_libgtk32289_g_notification_set_default_action_and_target")
external fun g_notification_set_default_action_and_target(notification: CValuesRef<GNotification>?, @CCall.CString action: String?, @CCall.CString target_format: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk32290_g_notification_set_default_action_and_target_value")
external fun g_notification_set_default_action_and_target_value(notification: CValuesRef<GNotification>?, @CCall.CString action: String?, target: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_libgtk32291_g_list_model_get_type")
external fun g_list_model_get_type(): GType

@CCall("knifunptr_libgtk32292_glib_autoptr_cleanup_GListModel")
external fun glib_autoptr_cleanup_GListModel(_ptr: CValuesRef<CPointerVar<GListModel>>?): Unit

@CCall("knifunptr_libgtk32293_G_LIST_MODEL")
external fun G_LIST_MODEL(ptr: gpointer?): CPointer<GListModel>?

@CCall("knifunptr_libgtk32294_G_IS_LIST_MODEL")
external fun G_IS_LIST_MODEL(ptr: gpointer?): gboolean

@CCall("knifunptr_libgtk32295_G_LIST_MODEL_GET_IFACE")
external fun G_LIST_MODEL_GET_IFACE(ptr: gpointer?): CPointer<GListModelInterface>?

@CCall("knifunptr_libgtk32296_g_list_model_get_item_type")
external fun g_list_model_get_item_type(list: CValuesRef<GListModel>?): GType

@CCall("knifunptr_libgtk32297_g_list_model_get_n_items")
external fun g_list_model_get_n_items(list: CValuesRef<GListModel>?): guint

@CCall("knifunptr_libgtk32298_g_list_model_get_item")
external fun g_list_model_get_item(list: CValuesRef<GListModel>?, position: guint): gpointer?

@CCall("knifunptr_libgtk32299_g_list_model_get_object")
external fun g_list_model_get_object(list: CValuesRef<GListModel>?, position: guint): CPointer<GObject>?

@CCall("knifunptr_libgtk32300_g_list_model_items_changed")
external fun g_list_model_items_changed(list: CValuesRef<GListModel>?, position: guint, removed: guint, added: guint): Unit

@CCall("knifunptr_libgtk32301_g_list_store_get_type")
external fun g_list_store_get_type(): GType

@CCall("knifunptr_libgtk32302_glib_autoptr_cleanup_GListStore")
external fun glib_autoptr_cleanup_GListStore(_ptr: CValuesRef<CPointerVar<GListStore>>?): Unit

@CCall("knifunptr_libgtk32303_G_LIST_STORE")
external fun G_LIST_STORE(ptr: gpointer?): CPointer<GListStore>?

@CCall("knifunptr_libgtk32304_G_IS_LIST_STORE")
external fun G_IS_LIST_STORE(ptr: gpointer?): gboolean

@CCall("knifunptr_libgtk32305_g_list_store_new")
external fun g_list_store_new(item_type: GType): CPointer<GListStore>?

@CCall("knifunptr_libgtk32306_g_list_store_insert")
external fun g_list_store_insert(store: CValuesRef<GListStore>?, position: guint, item: gpointer?): Unit

@CCall("knifunptr_libgtk32307_g_list_store_insert_sorted")
external fun g_list_store_insert_sorted(store: CValuesRef<GListStore>?, item: gpointer?, compare_func: GCompareDataFunc?, user_data: gpointer?): guint

@CCall("knifunptr_libgtk32308_g_list_store_sort")
external fun g_list_store_sort(store: CValuesRef<GListStore>?, compare_func: GCompareDataFunc?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk32309_g_list_store_append")
external fun g_list_store_append(store: CValuesRef<GListStore>?, item: gpointer?): Unit

@CCall("knifunptr_libgtk32310_g_list_store_remove")
external fun g_list_store_remove(store: CValuesRef<GListStore>?, position: guint): Unit

@CCall("knifunptr_libgtk32311_g_list_store_remove_all")
external fun g_list_store_remove_all(store: CValuesRef<GListStore>?): Unit

@CCall("knifunptr_libgtk32312_g_list_store_splice")
external fun g_list_store_splice(store: CValuesRef<GListStore>?, position: guint, n_removals: guint, additions: CValuesRef<gpointerVar>?, n_additions: guint): Unit

@CCall("knifunptr_libgtk32313_glib_autoptr_cleanup_GAction")
external fun glib_autoptr_cleanup_GAction(_ptr: CValuesRef<CPointerVar<GAction>>?): Unit

@CCall("knifunptr_libgtk32314_glib_listautoptr_cleanup_GAction")
external fun glib_listautoptr_cleanup_GAction(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32315_glib_slistautoptr_cleanup_GAction")
external fun glib_slistautoptr_cleanup_GAction(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32316_glib_autoptr_cleanup_GActionMap")
external fun glib_autoptr_cleanup_GActionMap(_ptr: CValuesRef<CPointerVar<GActionMap>>?): Unit

@CCall("knifunptr_libgtk32317_glib_listautoptr_cleanup_GActionMap")
external fun glib_listautoptr_cleanup_GActionMap(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32318_glib_slistautoptr_cleanup_GActionMap")
external fun glib_slistautoptr_cleanup_GActionMap(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32319_glib_autoptr_cleanup_GAppInfo")
external fun glib_autoptr_cleanup_GAppInfo(_ptr: CValuesRef<CPointerVar<GAppInfo>>?): Unit

@CCall("knifunptr_libgtk32320_glib_listautoptr_cleanup_GAppInfo")
external fun glib_listautoptr_cleanup_GAppInfo(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32321_glib_slistautoptr_cleanup_GAppInfo")
external fun glib_slistautoptr_cleanup_GAppInfo(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32322_glib_autoptr_cleanup_GAppLaunchContext")
external fun glib_autoptr_cleanup_GAppLaunchContext(_ptr: CValuesRef<CPointerVar<GAppLaunchContext>>?): Unit

@CCall("knifunptr_libgtk32323_glib_listautoptr_cleanup_GAppLaunchContext")
external fun glib_listautoptr_cleanup_GAppLaunchContext(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32324_glib_slistautoptr_cleanup_GAppLaunchContext")
external fun glib_slistautoptr_cleanup_GAppLaunchContext(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32325_glib_autoptr_cleanup_GAppInfoMonitor")
external fun glib_autoptr_cleanup_GAppInfoMonitor(_ptr: CValuesRef<CPointerVar<GAppInfoMonitor>>?): Unit

@CCall("knifunptr_libgtk32326_glib_listautoptr_cleanup_GAppInfoMonitor")
external fun glib_listautoptr_cleanup_GAppInfoMonitor(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32327_glib_slistautoptr_cleanup_GAppInfoMonitor")
external fun glib_slistautoptr_cleanup_GAppInfoMonitor(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32328_glib_autoptr_cleanup_GApplicationCommandLine")
external fun glib_autoptr_cleanup_GApplicationCommandLine(_ptr: CValuesRef<CPointerVar<GApplicationCommandLine>>?): Unit

@CCall("knifunptr_libgtk32329_glib_listautoptr_cleanup_GApplicationCommandLine")
external fun glib_listautoptr_cleanup_GApplicationCommandLine(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32330_glib_slistautoptr_cleanup_GApplicationCommandLine")
external fun glib_slistautoptr_cleanup_GApplicationCommandLine(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32331_glib_autoptr_cleanup_GApplication")
external fun glib_autoptr_cleanup_GApplication(_ptr: CValuesRef<CPointerVar<GApplication>>?): Unit

@CCall("knifunptr_libgtk32332_glib_listautoptr_cleanup_GApplication")
external fun glib_listautoptr_cleanup_GApplication(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32333_glib_slistautoptr_cleanup_GApplication")
external fun glib_slistautoptr_cleanup_GApplication(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32334_glib_autoptr_cleanup_GAsyncInitable")
external fun glib_autoptr_cleanup_GAsyncInitable(_ptr: CValuesRef<CPointerVar<GAsyncInitable>>?): Unit

@CCall("knifunptr_libgtk32335_glib_listautoptr_cleanup_GAsyncInitable")
external fun glib_listautoptr_cleanup_GAsyncInitable(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32336_glib_slistautoptr_cleanup_GAsyncInitable")
external fun glib_slistautoptr_cleanup_GAsyncInitable(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32337_glib_autoptr_cleanup_GAsyncResult")
external fun glib_autoptr_cleanup_GAsyncResult(_ptr: CValuesRef<CPointerVar<GAsyncResult>>?): Unit

@CCall("knifunptr_libgtk32338_glib_listautoptr_cleanup_GAsyncResult")
external fun glib_listautoptr_cleanup_GAsyncResult(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32339_glib_slistautoptr_cleanup_GAsyncResult")
external fun glib_slistautoptr_cleanup_GAsyncResult(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32340_glib_autoptr_cleanup_GBufferedInputStream")
external fun glib_autoptr_cleanup_GBufferedInputStream(_ptr: CValuesRef<CPointerVar<GBufferedInputStream>>?): Unit

@CCall("knifunptr_libgtk32341_glib_listautoptr_cleanup_GBufferedInputStream")
external fun glib_listautoptr_cleanup_GBufferedInputStream(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32342_glib_slistautoptr_cleanup_GBufferedInputStream")
external fun glib_slistautoptr_cleanup_GBufferedInputStream(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32343_glib_autoptr_cleanup_GBufferedOutputStream")
external fun glib_autoptr_cleanup_GBufferedOutputStream(_ptr: CValuesRef<CPointerVar<GBufferedOutputStream>>?): Unit

@CCall("knifunptr_libgtk32344_glib_listautoptr_cleanup_GBufferedOutputStream")
external fun glib_listautoptr_cleanup_GBufferedOutputStream(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32345_glib_slistautoptr_cleanup_GBufferedOutputStream")
external fun glib_slistautoptr_cleanup_GBufferedOutputStream(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32346_glib_autoptr_cleanup_GBytesIcon")
external fun glib_autoptr_cleanup_GBytesIcon(_ptr: CValuesRef<CPointerVar<GBytesIcon>>?): Unit

@CCall("knifunptr_libgtk32347_glib_listautoptr_cleanup_GBytesIcon")
external fun glib_listautoptr_cleanup_GBytesIcon(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32348_glib_slistautoptr_cleanup_GBytesIcon")
external fun glib_slistautoptr_cleanup_GBytesIcon(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32349_glib_autoptr_cleanup_GCancellable")
external fun glib_autoptr_cleanup_GCancellable(_ptr: CValuesRef<CPointerVar<GCancellable>>?): Unit

@CCall("knifunptr_libgtk32350_glib_listautoptr_cleanup_GCancellable")
external fun glib_listautoptr_cleanup_GCancellable(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32351_glib_slistautoptr_cleanup_GCancellable")
external fun glib_slistautoptr_cleanup_GCancellable(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32352_glib_autoptr_cleanup_GCharsetConverter")
external fun glib_autoptr_cleanup_GCharsetConverter(_ptr: CValuesRef<CPointerVar<GCharsetConverter>>?): Unit

@CCall("knifunptr_libgtk32353_glib_listautoptr_cleanup_GCharsetConverter")
external fun glib_listautoptr_cleanup_GCharsetConverter(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32354_glib_slistautoptr_cleanup_GCharsetConverter")
external fun glib_slistautoptr_cleanup_GCharsetConverter(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32355_glib_autoptr_cleanup_GConverter")
external fun glib_autoptr_cleanup_GConverter(_ptr: CValuesRef<CPointerVar<GConverter>>?): Unit

@CCall("knifunptr_libgtk32356_glib_listautoptr_cleanup_GConverter")
external fun glib_listautoptr_cleanup_GConverter(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32357_glib_slistautoptr_cleanup_GConverter")
external fun glib_slistautoptr_cleanup_GConverter(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32358_glib_autoptr_cleanup_GConverterInputStream")
external fun glib_autoptr_cleanup_GConverterInputStream(_ptr: CValuesRef<CPointerVar<GConverterInputStream>>?): Unit

@CCall("knifunptr_libgtk32359_glib_listautoptr_cleanup_GConverterInputStream")
external fun glib_listautoptr_cleanup_GConverterInputStream(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32360_glib_slistautoptr_cleanup_GConverterInputStream")
external fun glib_slistautoptr_cleanup_GConverterInputStream(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32361_glib_autoptr_cleanup_GConverterOutputStream")
external fun glib_autoptr_cleanup_GConverterOutputStream(_ptr: CValuesRef<CPointerVar<GConverterOutputStream>>?): Unit

@CCall("knifunptr_libgtk32362_glib_listautoptr_cleanup_GConverterOutputStream")
external fun glib_listautoptr_cleanup_GConverterOutputStream(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32363_glib_slistautoptr_cleanup_GConverterOutputStream")
external fun glib_slistautoptr_cleanup_GConverterOutputStream(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32364_glib_autoptr_cleanup_GCredentials")
external fun glib_autoptr_cleanup_GCredentials(_ptr: CValuesRef<CPointerVar<GCredentials>>?): Unit

@CCall("knifunptr_libgtk32365_glib_listautoptr_cleanup_GCredentials")
external fun glib_listautoptr_cleanup_GCredentials(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32366_glib_slistautoptr_cleanup_GCredentials")
external fun glib_slistautoptr_cleanup_GCredentials(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32367_glib_autoptr_cleanup_GDatagramBased")
external fun glib_autoptr_cleanup_GDatagramBased(_ptr: CValuesRef<CPointerVar<GDatagramBased>>?): Unit

@CCall("knifunptr_libgtk32368_glib_listautoptr_cleanup_GDatagramBased")
external fun glib_listautoptr_cleanup_GDatagramBased(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32369_glib_slistautoptr_cleanup_GDatagramBased")
external fun glib_slistautoptr_cleanup_GDatagramBased(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32370_glib_autoptr_cleanup_GDataInputStream")
external fun glib_autoptr_cleanup_GDataInputStream(_ptr: CValuesRef<CPointerVar<GDataInputStream>>?): Unit

@CCall("knifunptr_libgtk32371_glib_listautoptr_cleanup_GDataInputStream")
external fun glib_listautoptr_cleanup_GDataInputStream(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32372_glib_slistautoptr_cleanup_GDataInputStream")
external fun glib_slistautoptr_cleanup_GDataInputStream(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32373_glib_autoptr_cleanup_GDataOutputStream")
external fun glib_autoptr_cleanup_GDataOutputStream(_ptr: CValuesRef<CPointerVar<GDataOutputStream>>?): Unit

@CCall("knifunptr_libgtk32374_glib_listautoptr_cleanup_GDataOutputStream")
external fun glib_listautoptr_cleanup_GDataOutputStream(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32375_glib_slistautoptr_cleanup_GDataOutputStream")
external fun glib_slistautoptr_cleanup_GDataOutputStream(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32376_glib_autoptr_cleanup_GDBusActionGroup")
external fun glib_autoptr_cleanup_GDBusActionGroup(_ptr: CValuesRef<CPointerVar<GDBusActionGroup>>?): Unit

@CCall("knifunptr_libgtk32377_glib_listautoptr_cleanup_GDBusActionGroup")
external fun glib_listautoptr_cleanup_GDBusActionGroup(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32378_glib_slistautoptr_cleanup_GDBusActionGroup")
external fun glib_slistautoptr_cleanup_GDBusActionGroup(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32379_glib_autoptr_cleanup_GDBusAuthObserver")
external fun glib_autoptr_cleanup_GDBusAuthObserver(_ptr: CValuesRef<CPointerVar<GDBusAuthObserver>>?): Unit

@CCall("knifunptr_libgtk32380_glib_listautoptr_cleanup_GDBusAuthObserver")
external fun glib_listautoptr_cleanup_GDBusAuthObserver(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32381_glib_slistautoptr_cleanup_GDBusAuthObserver")
external fun glib_slistautoptr_cleanup_GDBusAuthObserver(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32382_glib_autoptr_cleanup_GDBusConnection")
external fun glib_autoptr_cleanup_GDBusConnection(_ptr: CValuesRef<CPointerVar<GDBusConnection>>?): Unit

@CCall("knifunptr_libgtk32383_glib_listautoptr_cleanup_GDBusConnection")
external fun glib_listautoptr_cleanup_GDBusConnection(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32384_glib_slistautoptr_cleanup_GDBusConnection")
external fun glib_slistautoptr_cleanup_GDBusConnection(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32385_glib_autoptr_cleanup_GDBusInterface")
external fun glib_autoptr_cleanup_GDBusInterface(_ptr: CValuesRef<CPointerVar<GDBusInterface>>?): Unit

@CCall("knifunptr_libgtk32386_glib_listautoptr_cleanup_GDBusInterface")
external fun glib_listautoptr_cleanup_GDBusInterface(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32387_glib_slistautoptr_cleanup_GDBusInterface")
external fun glib_slistautoptr_cleanup_GDBusInterface(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32388_glib_autoptr_cleanup_GDBusInterfaceSkeleton")
external fun glib_autoptr_cleanup_GDBusInterfaceSkeleton(_ptr: CValuesRef<CPointerVar<GDBusInterfaceSkeleton>>?): Unit

@CCall("knifunptr_libgtk32389_glib_listautoptr_cleanup_GDBusInterfaceSkeleton")
external fun glib_listautoptr_cleanup_GDBusInterfaceSkeleton(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32390_glib_slistautoptr_cleanup_GDBusInterfaceSkeleton")
external fun glib_slistautoptr_cleanup_GDBusInterfaceSkeleton(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32391_glib_autoptr_cleanup_GDBusMenuModel")
external fun glib_autoptr_cleanup_GDBusMenuModel(_ptr: CValuesRef<CPointerVar<GDBusMenuModel>>?): Unit

@CCall("knifunptr_libgtk32392_glib_listautoptr_cleanup_GDBusMenuModel")
external fun glib_listautoptr_cleanup_GDBusMenuModel(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32393_glib_slistautoptr_cleanup_GDBusMenuModel")
external fun glib_slistautoptr_cleanup_GDBusMenuModel(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32394_glib_autoptr_cleanup_GDBusMessage")
external fun glib_autoptr_cleanup_GDBusMessage(_ptr: CValuesRef<CPointerVar<GDBusMessage>>?): Unit

@CCall("knifunptr_libgtk32395_glib_listautoptr_cleanup_GDBusMessage")
external fun glib_listautoptr_cleanup_GDBusMessage(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32396_glib_slistautoptr_cleanup_GDBusMessage")
external fun glib_slistautoptr_cleanup_GDBusMessage(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32397_glib_autoptr_cleanup_GDBusMethodInvocation")
external fun glib_autoptr_cleanup_GDBusMethodInvocation(_ptr: CValuesRef<CPointerVar<GDBusMethodInvocation>>?): Unit

@CCall("knifunptr_libgtk32398_glib_listautoptr_cleanup_GDBusMethodInvocation")
external fun glib_listautoptr_cleanup_GDBusMethodInvocation(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32399_glib_slistautoptr_cleanup_GDBusMethodInvocation")
external fun glib_slistautoptr_cleanup_GDBusMethodInvocation(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32400_glib_autoptr_cleanup_GDBusNodeInfo")
external fun glib_autoptr_cleanup_GDBusNodeInfo(_ptr: CValuesRef<CPointerVar<GDBusNodeInfo>>?): Unit

@CCall("knifunptr_libgtk32401_glib_listautoptr_cleanup_GDBusNodeInfo")
external fun glib_listautoptr_cleanup_GDBusNodeInfo(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32402_glib_slistautoptr_cleanup_GDBusNodeInfo")
external fun glib_slistautoptr_cleanup_GDBusNodeInfo(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32403_glib_autoptr_cleanup_GDBusObject")
external fun glib_autoptr_cleanup_GDBusObject(_ptr: CValuesRef<CPointerVar<GDBusObject>>?): Unit

@CCall("knifunptr_libgtk32404_glib_listautoptr_cleanup_GDBusObject")
external fun glib_listautoptr_cleanup_GDBusObject(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32405_glib_slistautoptr_cleanup_GDBusObject")
external fun glib_slistautoptr_cleanup_GDBusObject(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32406_glib_autoptr_cleanup_GDBusObjectManagerClient")
external fun glib_autoptr_cleanup_GDBusObjectManagerClient(_ptr: CValuesRef<CPointerVar<GDBusObjectManagerClient>>?): Unit

@CCall("knifunptr_libgtk32407_glib_listautoptr_cleanup_GDBusObjectManagerClient")
external fun glib_listautoptr_cleanup_GDBusObjectManagerClient(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32408_glib_slistautoptr_cleanup_GDBusObjectManagerClient")
external fun glib_slistautoptr_cleanup_GDBusObjectManagerClient(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32409_glib_autoptr_cleanup_GDBusObjectManager")
external fun glib_autoptr_cleanup_GDBusObjectManager(_ptr: CValuesRef<CPointerVar<GDBusObjectManager>>?): Unit

@CCall("knifunptr_libgtk32410_glib_listautoptr_cleanup_GDBusObjectManager")
external fun glib_listautoptr_cleanup_GDBusObjectManager(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32411_glib_slistautoptr_cleanup_GDBusObjectManager")
external fun glib_slistautoptr_cleanup_GDBusObjectManager(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32412_glib_autoptr_cleanup_GDBusObjectManagerServer")
external fun glib_autoptr_cleanup_GDBusObjectManagerServer(_ptr: CValuesRef<CPointerVar<GDBusObjectManagerServer>>?): Unit

@CCall("knifunptr_libgtk32413_glib_listautoptr_cleanup_GDBusObjectManagerServer")
external fun glib_listautoptr_cleanup_GDBusObjectManagerServer(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32414_glib_slistautoptr_cleanup_GDBusObjectManagerServer")
external fun glib_slistautoptr_cleanup_GDBusObjectManagerServer(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32415_glib_autoptr_cleanup_GDBusObjectProxy")
external fun glib_autoptr_cleanup_GDBusObjectProxy(_ptr: CValuesRef<CPointerVar<GDBusObjectProxy>>?): Unit

@CCall("knifunptr_libgtk32416_glib_listautoptr_cleanup_GDBusObjectProxy")
external fun glib_listautoptr_cleanup_GDBusObjectProxy(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32417_glib_slistautoptr_cleanup_GDBusObjectProxy")
external fun glib_slistautoptr_cleanup_GDBusObjectProxy(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32418_glib_autoptr_cleanup_GDBusObjectSkeleton")
external fun glib_autoptr_cleanup_GDBusObjectSkeleton(_ptr: CValuesRef<CPointerVar<GDBusObjectSkeleton>>?): Unit

@CCall("knifunptr_libgtk32419_glib_listautoptr_cleanup_GDBusObjectSkeleton")
external fun glib_listautoptr_cleanup_GDBusObjectSkeleton(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32420_glib_slistautoptr_cleanup_GDBusObjectSkeleton")
external fun glib_slistautoptr_cleanup_GDBusObjectSkeleton(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32421_glib_autoptr_cleanup_GDBusProxy")
external fun glib_autoptr_cleanup_GDBusProxy(_ptr: CValuesRef<CPointerVar<GDBusProxy>>?): Unit

@CCall("knifunptr_libgtk32422_glib_listautoptr_cleanup_GDBusProxy")
external fun glib_listautoptr_cleanup_GDBusProxy(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32423_glib_slistautoptr_cleanup_GDBusProxy")
external fun glib_slistautoptr_cleanup_GDBusProxy(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32424_glib_autoptr_cleanup_GDBusServer")
external fun glib_autoptr_cleanup_GDBusServer(_ptr: CValuesRef<CPointerVar<GDBusServer>>?): Unit

@CCall("knifunptr_libgtk32425_glib_listautoptr_cleanup_GDBusServer")
external fun glib_listautoptr_cleanup_GDBusServer(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32426_glib_slistautoptr_cleanup_GDBusServer")
external fun glib_slistautoptr_cleanup_GDBusServer(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32427_glib_autoptr_cleanup_GDrive")
external fun glib_autoptr_cleanup_GDrive(_ptr: CValuesRef<CPointerVar<GDrive>>?): Unit

@CCall("knifunptr_libgtk32428_glib_listautoptr_cleanup_GDrive")
external fun glib_listautoptr_cleanup_GDrive(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32429_glib_slistautoptr_cleanup_GDrive")
external fun glib_slistautoptr_cleanup_GDrive(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32430_glib_autoptr_cleanup_GEmblemedIcon")
external fun glib_autoptr_cleanup_GEmblemedIcon(_ptr: CValuesRef<CPointerVar<GEmblemedIcon>>?): Unit

@CCall("knifunptr_libgtk32431_glib_listautoptr_cleanup_GEmblemedIcon")
external fun glib_listautoptr_cleanup_GEmblemedIcon(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32432_glib_slistautoptr_cleanup_GEmblemedIcon")
external fun glib_slistautoptr_cleanup_GEmblemedIcon(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32433_glib_autoptr_cleanup_GEmblem")
external fun glib_autoptr_cleanup_GEmblem(_ptr: CValuesRef<CPointerVar<GEmblem>>?): Unit

@CCall("knifunptr_libgtk32434_glib_listautoptr_cleanup_GEmblem")
external fun glib_listautoptr_cleanup_GEmblem(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32435_glib_slistautoptr_cleanup_GEmblem")
external fun glib_slistautoptr_cleanup_GEmblem(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32436_glib_autoptr_cleanup_GFileEnumerator")
external fun glib_autoptr_cleanup_GFileEnumerator(_ptr: CValuesRef<CPointerVar<GFileEnumerator>>?): Unit

@CCall("knifunptr_libgtk32437_glib_listautoptr_cleanup_GFileEnumerator")
external fun glib_listautoptr_cleanup_GFileEnumerator(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32438_glib_slistautoptr_cleanup_GFileEnumerator")
external fun glib_slistautoptr_cleanup_GFileEnumerator(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32439_glib_autoptr_cleanup_GFile")
external fun glib_autoptr_cleanup_GFile(_ptr: CValuesRef<CPointerVar<GFile>>?): Unit

@CCall("knifunptr_libgtk32440_glib_listautoptr_cleanup_GFile")
external fun glib_listautoptr_cleanup_GFile(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32441_glib_slistautoptr_cleanup_GFile")
external fun glib_slistautoptr_cleanup_GFile(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32442_glib_autoptr_cleanup_GFileAttributeInfoList")
external fun glib_autoptr_cleanup_GFileAttributeInfoList(_ptr: CValuesRef<CPointerVar<GFileAttributeInfoList>>?): Unit

@CCall("knifunptr_libgtk32443_glib_listautoptr_cleanup_GFileAttributeInfoList")
external fun glib_listautoptr_cleanup_GFileAttributeInfoList(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32444_glib_slistautoptr_cleanup_GFileAttributeInfoList")
external fun glib_slistautoptr_cleanup_GFileAttributeInfoList(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32445_glib_autoptr_cleanup_GFileIcon")
external fun glib_autoptr_cleanup_GFileIcon(_ptr: CValuesRef<CPointerVar<GFileIcon>>?): Unit

@CCall("knifunptr_libgtk32446_glib_listautoptr_cleanup_GFileIcon")
external fun glib_listautoptr_cleanup_GFileIcon(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32447_glib_slistautoptr_cleanup_GFileIcon")
external fun glib_slistautoptr_cleanup_GFileIcon(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32448_glib_autoptr_cleanup_GFileInfo")
external fun glib_autoptr_cleanup_GFileInfo(_ptr: CValuesRef<CPointerVar<GFileInfo>>?): Unit

@CCall("knifunptr_libgtk32449_glib_listautoptr_cleanup_GFileInfo")
external fun glib_listautoptr_cleanup_GFileInfo(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32450_glib_slistautoptr_cleanup_GFileInfo")
external fun glib_slistautoptr_cleanup_GFileInfo(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32451_glib_autoptr_cleanup_GFileInputStream")
external fun glib_autoptr_cleanup_GFileInputStream(_ptr: CValuesRef<CPointerVar<GFileInputStream>>?): Unit

@CCall("knifunptr_libgtk32452_glib_listautoptr_cleanup_GFileInputStream")
external fun glib_listautoptr_cleanup_GFileInputStream(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32453_glib_slistautoptr_cleanup_GFileInputStream")
external fun glib_slistautoptr_cleanup_GFileInputStream(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32454_glib_autoptr_cleanup_GFileIOStream")
external fun glib_autoptr_cleanup_GFileIOStream(_ptr: CValuesRef<CPointerVar<GFileIOStream>>?): Unit

@CCall("knifunptr_libgtk32455_glib_listautoptr_cleanup_GFileIOStream")
external fun glib_listautoptr_cleanup_GFileIOStream(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32456_glib_slistautoptr_cleanup_GFileIOStream")
external fun glib_slistautoptr_cleanup_GFileIOStream(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32457_glib_autoptr_cleanup_GFileMonitor")
external fun glib_autoptr_cleanup_GFileMonitor(_ptr: CValuesRef<CPointerVar<GFileMonitor>>?): Unit

@CCall("knifunptr_libgtk32458_glib_listautoptr_cleanup_GFileMonitor")
external fun glib_listautoptr_cleanup_GFileMonitor(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32459_glib_slistautoptr_cleanup_GFileMonitor")
external fun glib_slistautoptr_cleanup_GFileMonitor(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32460_glib_autoptr_cleanup_GFilenameCompleter")
external fun glib_autoptr_cleanup_GFilenameCompleter(_ptr: CValuesRef<CPointerVar<GFilenameCompleter>>?): Unit

@CCall("knifunptr_libgtk32461_glib_listautoptr_cleanup_GFilenameCompleter")
external fun glib_listautoptr_cleanup_GFilenameCompleter(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32462_glib_slistautoptr_cleanup_GFilenameCompleter")
external fun glib_slistautoptr_cleanup_GFilenameCompleter(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32463_glib_autoptr_cleanup_GFileOutputStream")
external fun glib_autoptr_cleanup_GFileOutputStream(_ptr: CValuesRef<CPointerVar<GFileOutputStream>>?): Unit

@CCall("knifunptr_libgtk32464_glib_listautoptr_cleanup_GFileOutputStream")
external fun glib_listautoptr_cleanup_GFileOutputStream(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32465_glib_slistautoptr_cleanup_GFileOutputStream")
external fun glib_slistautoptr_cleanup_GFileOutputStream(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32466_glib_autoptr_cleanup_GFilterInputStream")
external fun glib_autoptr_cleanup_GFilterInputStream(_ptr: CValuesRef<CPointerVar<GFilterInputStream>>?): Unit

@CCall("knifunptr_libgtk32467_glib_listautoptr_cleanup_GFilterInputStream")
external fun glib_listautoptr_cleanup_GFilterInputStream(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32468_glib_slistautoptr_cleanup_GFilterInputStream")
external fun glib_slistautoptr_cleanup_GFilterInputStream(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32469_glib_autoptr_cleanup_GFilterOutputStream")
external fun glib_autoptr_cleanup_GFilterOutputStream(_ptr: CValuesRef<CPointerVar<GFilterOutputStream>>?): Unit

@CCall("knifunptr_libgtk32470_glib_listautoptr_cleanup_GFilterOutputStream")
external fun glib_listautoptr_cleanup_GFilterOutputStream(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32471_glib_slistautoptr_cleanup_GFilterOutputStream")
external fun glib_slistautoptr_cleanup_GFilterOutputStream(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32472_glib_autoptr_cleanup_GIcon")
external fun glib_autoptr_cleanup_GIcon(_ptr: CValuesRef<CPointerVar<GIcon>>?): Unit

@CCall("knifunptr_libgtk32473_glib_listautoptr_cleanup_GIcon")
external fun glib_listautoptr_cleanup_GIcon(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32474_glib_slistautoptr_cleanup_GIcon")
external fun glib_slistautoptr_cleanup_GIcon(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32475_glib_autoptr_cleanup_GInetAddress")
external fun glib_autoptr_cleanup_GInetAddress(_ptr: CValuesRef<CPointerVar<GInetAddress>>?): Unit

@CCall("knifunptr_libgtk32476_glib_listautoptr_cleanup_GInetAddress")
external fun glib_listautoptr_cleanup_GInetAddress(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32477_glib_slistautoptr_cleanup_GInetAddress")
external fun glib_slistautoptr_cleanup_GInetAddress(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32478_glib_autoptr_cleanup_GInetAddressMask")
external fun glib_autoptr_cleanup_GInetAddressMask(_ptr: CValuesRef<CPointerVar<GInetAddressMask>>?): Unit

@CCall("knifunptr_libgtk32479_glib_listautoptr_cleanup_GInetAddressMask")
external fun glib_listautoptr_cleanup_GInetAddressMask(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32480_glib_slistautoptr_cleanup_GInetAddressMask")
external fun glib_slistautoptr_cleanup_GInetAddressMask(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32481_glib_autoptr_cleanup_GInetSocketAddress")
external fun glib_autoptr_cleanup_GInetSocketAddress(_ptr: CValuesRef<CPointerVar<GInetSocketAddress>>?): Unit

@CCall("knifunptr_libgtk32482_glib_listautoptr_cleanup_GInetSocketAddress")
external fun glib_listautoptr_cleanup_GInetSocketAddress(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32483_glib_slistautoptr_cleanup_GInetSocketAddress")
external fun glib_slistautoptr_cleanup_GInetSocketAddress(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32484_glib_autoptr_cleanup_GInitable")
external fun glib_autoptr_cleanup_GInitable(_ptr: CValuesRef<CPointerVar<GInitable>>?): Unit

@CCall("knifunptr_libgtk32485_glib_listautoptr_cleanup_GInitable")
external fun glib_listautoptr_cleanup_GInitable(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32486_glib_slistautoptr_cleanup_GInitable")
external fun glib_slistautoptr_cleanup_GInitable(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32487_glib_autoptr_cleanup_GInputStream")
external fun glib_autoptr_cleanup_GInputStream(_ptr: CValuesRef<CPointerVar<GInputStream>>?): Unit

@CCall("knifunptr_libgtk32488_glib_listautoptr_cleanup_GInputStream")
external fun glib_listautoptr_cleanup_GInputStream(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32489_glib_slistautoptr_cleanup_GInputStream")
external fun glib_slistautoptr_cleanup_GInputStream(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32490_glib_autoptr_cleanup_GIOModule")
external fun glib_autoptr_cleanup_GIOModule(_ptr: CValuesRef<CPointerVar<GIOModule>>?): Unit

@CCall("knifunptr_libgtk32491_glib_listautoptr_cleanup_GIOModule")
external fun glib_listautoptr_cleanup_GIOModule(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32492_glib_slistautoptr_cleanup_GIOModule")
external fun glib_slistautoptr_cleanup_GIOModule(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32493_glib_autoptr_cleanup_GIOStream")
external fun glib_autoptr_cleanup_GIOStream(_ptr: CValuesRef<CPointerVar<GIOStream>>?): Unit

@CCall("knifunptr_libgtk32494_glib_listautoptr_cleanup_GIOStream")
external fun glib_listautoptr_cleanup_GIOStream(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32495_glib_slistautoptr_cleanup_GIOStream")
external fun glib_slistautoptr_cleanup_GIOStream(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32496_glib_autoptr_cleanup_GLoadableIcon")
external fun glib_autoptr_cleanup_GLoadableIcon(_ptr: CValuesRef<CPointerVar<GLoadableIcon>>?): Unit

@CCall("knifunptr_libgtk32497_glib_listautoptr_cleanup_GLoadableIcon")
external fun glib_listautoptr_cleanup_GLoadableIcon(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32498_glib_slistautoptr_cleanup_GLoadableIcon")
external fun glib_slistautoptr_cleanup_GLoadableIcon(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32499_glib_autoptr_cleanup_GMemoryInputStream")
external fun glib_autoptr_cleanup_GMemoryInputStream(_ptr: CValuesRef<CPointerVar<GMemoryInputStream>>?): Unit

@CCall("knifunptr_libgtk32500_glib_listautoptr_cleanup_GMemoryInputStream")
external fun glib_listautoptr_cleanup_GMemoryInputStream(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32501_glib_slistautoptr_cleanup_GMemoryInputStream")
external fun glib_slistautoptr_cleanup_GMemoryInputStream(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32502_glib_autoptr_cleanup_GMemoryOutputStream")
external fun glib_autoptr_cleanup_GMemoryOutputStream(_ptr: CValuesRef<CPointerVar<GMemoryOutputStream>>?): Unit

@CCall("knifunptr_libgtk32503_glib_listautoptr_cleanup_GMemoryOutputStream")
external fun glib_listautoptr_cleanup_GMemoryOutputStream(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32504_glib_slistautoptr_cleanup_GMemoryOutputStream")
external fun glib_slistautoptr_cleanup_GMemoryOutputStream(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32505_glib_autoptr_cleanup_GMenu")
external fun glib_autoptr_cleanup_GMenu(_ptr: CValuesRef<CPointerVar<GMenu>>?): Unit

@CCall("knifunptr_libgtk32506_glib_listautoptr_cleanup_GMenu")
external fun glib_listautoptr_cleanup_GMenu(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32507_glib_slistautoptr_cleanup_GMenu")
external fun glib_slistautoptr_cleanup_GMenu(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32508_glib_autoptr_cleanup_GMenuItem")
external fun glib_autoptr_cleanup_GMenuItem(_ptr: CValuesRef<CPointerVar<GMenuItem>>?): Unit

@CCall("knifunptr_libgtk32509_glib_listautoptr_cleanup_GMenuItem")
external fun glib_listautoptr_cleanup_GMenuItem(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32510_glib_slistautoptr_cleanup_GMenuItem")
external fun glib_slistautoptr_cleanup_GMenuItem(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32511_glib_autoptr_cleanup_GMenuModel")
external fun glib_autoptr_cleanup_GMenuModel(_ptr: CValuesRef<CPointerVar<GMenuModel>>?): Unit

@CCall("knifunptr_libgtk32512_glib_listautoptr_cleanup_GMenuModel")
external fun glib_listautoptr_cleanup_GMenuModel(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32513_glib_slistautoptr_cleanup_GMenuModel")
external fun glib_slistautoptr_cleanup_GMenuModel(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32514_glib_autoptr_cleanup_GMenuAttributeIter")
external fun glib_autoptr_cleanup_GMenuAttributeIter(_ptr: CValuesRef<CPointerVar<GMenuAttributeIter>>?): Unit

@CCall("knifunptr_libgtk32515_glib_listautoptr_cleanup_GMenuAttributeIter")
external fun glib_listautoptr_cleanup_GMenuAttributeIter(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32516_glib_slistautoptr_cleanup_GMenuAttributeIter")
external fun glib_slistautoptr_cleanup_GMenuAttributeIter(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32517_glib_autoptr_cleanup_GMenuLinkIter")
external fun glib_autoptr_cleanup_GMenuLinkIter(_ptr: CValuesRef<CPointerVar<GMenuLinkIter>>?): Unit

@CCall("knifunptr_libgtk32518_glib_listautoptr_cleanup_GMenuLinkIter")
external fun glib_listautoptr_cleanup_GMenuLinkIter(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32519_glib_slistautoptr_cleanup_GMenuLinkIter")
external fun glib_slistautoptr_cleanup_GMenuLinkIter(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32520_glib_autoptr_cleanup_GMount")
external fun glib_autoptr_cleanup_GMount(_ptr: CValuesRef<CPointerVar<GMount>>?): Unit

@CCall("knifunptr_libgtk32521_glib_listautoptr_cleanup_GMount")
external fun glib_listautoptr_cleanup_GMount(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32522_glib_slistautoptr_cleanup_GMount")
external fun glib_slistautoptr_cleanup_GMount(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32523_glib_autoptr_cleanup_GMountOperation")
external fun glib_autoptr_cleanup_GMountOperation(_ptr: CValuesRef<CPointerVar<GMountOperation>>?): Unit

@CCall("knifunptr_libgtk32524_glib_listautoptr_cleanup_GMountOperation")
external fun glib_listautoptr_cleanup_GMountOperation(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32525_glib_slistautoptr_cleanup_GMountOperation")
external fun glib_slistautoptr_cleanup_GMountOperation(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32526_glib_autoptr_cleanup_GNativeVolumeMonitor")
external fun glib_autoptr_cleanup_GNativeVolumeMonitor(_ptr: CValuesRef<CPointerVar<GNativeVolumeMonitor>>?): Unit

@CCall("knifunptr_libgtk32527_glib_listautoptr_cleanup_GNativeVolumeMonitor")
external fun glib_listautoptr_cleanup_GNativeVolumeMonitor(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32528_glib_slistautoptr_cleanup_GNativeVolumeMonitor")
external fun glib_slistautoptr_cleanup_GNativeVolumeMonitor(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32529_glib_autoptr_cleanup_GNetworkAddress")
external fun glib_autoptr_cleanup_GNetworkAddress(_ptr: CValuesRef<CPointerVar<GNetworkAddress>>?): Unit

@CCall("knifunptr_libgtk32530_glib_listautoptr_cleanup_GNetworkAddress")
external fun glib_listautoptr_cleanup_GNetworkAddress(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32531_glib_slistautoptr_cleanup_GNetworkAddress")
external fun glib_slistautoptr_cleanup_GNetworkAddress(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32532_glib_autoptr_cleanup_GNetworkMonitor")
external fun glib_autoptr_cleanup_GNetworkMonitor(_ptr: CValuesRef<CPointerVar<GNetworkMonitor>>?): Unit

@CCall("knifunptr_libgtk32533_glib_listautoptr_cleanup_GNetworkMonitor")
external fun glib_listautoptr_cleanup_GNetworkMonitor(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32534_glib_slistautoptr_cleanup_GNetworkMonitor")
external fun glib_slistautoptr_cleanup_GNetworkMonitor(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32535_glib_autoptr_cleanup_GNetworkService")
external fun glib_autoptr_cleanup_GNetworkService(_ptr: CValuesRef<CPointerVar<GNetworkService>>?): Unit

@CCall("knifunptr_libgtk32536_glib_listautoptr_cleanup_GNetworkService")
external fun glib_listautoptr_cleanup_GNetworkService(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32537_glib_slistautoptr_cleanup_GNetworkService")
external fun glib_slistautoptr_cleanup_GNetworkService(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32538_glib_autoptr_cleanup_GNotification")
external fun glib_autoptr_cleanup_GNotification(_ptr: CValuesRef<CPointerVar<GNotification>>?): Unit

@CCall("knifunptr_libgtk32539_glib_listautoptr_cleanup_GNotification")
external fun glib_listautoptr_cleanup_GNotification(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32540_glib_slistautoptr_cleanup_GNotification")
external fun glib_slistautoptr_cleanup_GNotification(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32541_glib_autoptr_cleanup_GOutputStream")
external fun glib_autoptr_cleanup_GOutputStream(_ptr: CValuesRef<CPointerVar<GOutputStream>>?): Unit

@CCall("knifunptr_libgtk32542_glib_listautoptr_cleanup_GOutputStream")
external fun glib_listautoptr_cleanup_GOutputStream(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32543_glib_slistautoptr_cleanup_GOutputStream")
external fun glib_slistautoptr_cleanup_GOutputStream(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32544_glib_autoptr_cleanup_GPermission")
external fun glib_autoptr_cleanup_GPermission(_ptr: CValuesRef<CPointerVar<GPermission>>?): Unit

@CCall("knifunptr_libgtk32545_glib_listautoptr_cleanup_GPermission")
external fun glib_listautoptr_cleanup_GPermission(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32546_glib_slistautoptr_cleanup_GPermission")
external fun glib_slistautoptr_cleanup_GPermission(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32547_glib_autoptr_cleanup_GPollableInputStream")
external fun glib_autoptr_cleanup_GPollableInputStream(_ptr: CValuesRef<CPointerVar<GPollableInputStream>>?): Unit

@CCall("knifunptr_libgtk32548_glib_listautoptr_cleanup_GPollableInputStream")
external fun glib_listautoptr_cleanup_GPollableInputStream(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32549_glib_slistautoptr_cleanup_GPollableInputStream")
external fun glib_slistautoptr_cleanup_GPollableInputStream(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32550_glib_autoptr_cleanup_GPollableOutputStream")
external fun glib_autoptr_cleanup_GPollableOutputStream(_ptr: CValuesRef<CPointerVar<GPollableOutputStream>>?): Unit

@CCall("knifunptr_libgtk32551_glib_listautoptr_cleanup_GPollableOutputStream")
external fun glib_listautoptr_cleanup_GPollableOutputStream(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32552_glib_slistautoptr_cleanup_GPollableOutputStream")
external fun glib_slistautoptr_cleanup_GPollableOutputStream(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32553_glib_autoptr_cleanup_GPropertyAction")
external fun glib_autoptr_cleanup_GPropertyAction(_ptr: CValuesRef<CPointerVar<GPropertyAction>>?): Unit

@CCall("knifunptr_libgtk32554_glib_listautoptr_cleanup_GPropertyAction")
external fun glib_listautoptr_cleanup_GPropertyAction(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32555_glib_slistautoptr_cleanup_GPropertyAction")
external fun glib_slistautoptr_cleanup_GPropertyAction(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32556_glib_autoptr_cleanup_GProxyAddressEnumerator")
external fun glib_autoptr_cleanup_GProxyAddressEnumerator(_ptr: CValuesRef<CPointerVar<GProxyAddressEnumerator>>?): Unit

@CCall("knifunptr_libgtk32557_glib_listautoptr_cleanup_GProxyAddressEnumerator")
external fun glib_listautoptr_cleanup_GProxyAddressEnumerator(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32558_glib_slistautoptr_cleanup_GProxyAddressEnumerator")
external fun glib_slistautoptr_cleanup_GProxyAddressEnumerator(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32559_glib_autoptr_cleanup_GProxyAddress")
external fun glib_autoptr_cleanup_GProxyAddress(_ptr: CValuesRef<CPointerVar<GProxyAddress>>?): Unit

@CCall("knifunptr_libgtk32560_glib_listautoptr_cleanup_GProxyAddress")
external fun glib_listautoptr_cleanup_GProxyAddress(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32561_glib_slistautoptr_cleanup_GProxyAddress")
external fun glib_slistautoptr_cleanup_GProxyAddress(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32562_glib_autoptr_cleanup_GProxy")
external fun glib_autoptr_cleanup_GProxy(_ptr: CValuesRef<CPointerVar<GProxy>>?): Unit

@CCall("knifunptr_libgtk32563_glib_listautoptr_cleanup_GProxy")
external fun glib_listautoptr_cleanup_GProxy(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32564_glib_slistautoptr_cleanup_GProxy")
external fun glib_slistautoptr_cleanup_GProxy(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32565_glib_autoptr_cleanup_GProxyResolver")
external fun glib_autoptr_cleanup_GProxyResolver(_ptr: CValuesRef<CPointerVar<GProxyResolver>>?): Unit

@CCall("knifunptr_libgtk32566_glib_listautoptr_cleanup_GProxyResolver")
external fun glib_listautoptr_cleanup_GProxyResolver(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32567_glib_slistautoptr_cleanup_GProxyResolver")
external fun glib_slistautoptr_cleanup_GProxyResolver(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32568_glib_autoptr_cleanup_GRemoteActionGroup")
external fun glib_autoptr_cleanup_GRemoteActionGroup(_ptr: CValuesRef<CPointerVar<GRemoteActionGroup>>?): Unit

@CCall("knifunptr_libgtk32569_glib_listautoptr_cleanup_GRemoteActionGroup")
external fun glib_listautoptr_cleanup_GRemoteActionGroup(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32570_glib_slistautoptr_cleanup_GRemoteActionGroup")
external fun glib_slistautoptr_cleanup_GRemoteActionGroup(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32571_glib_autoptr_cleanup_GResolver")
external fun glib_autoptr_cleanup_GResolver(_ptr: CValuesRef<CPointerVar<GResolver>>?): Unit

@CCall("knifunptr_libgtk32572_glib_listautoptr_cleanup_GResolver")
external fun glib_listautoptr_cleanup_GResolver(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32573_glib_slistautoptr_cleanup_GResolver")
external fun glib_slistautoptr_cleanup_GResolver(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32574_glib_autoptr_cleanup_GSeekable")
external fun glib_autoptr_cleanup_GSeekable(_ptr: CValuesRef<CPointerVar<GSeekable>>?): Unit

@CCall("knifunptr_libgtk32575_glib_listautoptr_cleanup_GSeekable")
external fun glib_listautoptr_cleanup_GSeekable(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32576_glib_slistautoptr_cleanup_GSeekable")
external fun glib_slistautoptr_cleanup_GSeekable(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32577_glib_autoptr_cleanup_GSettingsBackend")
external fun glib_autoptr_cleanup_GSettingsBackend(_ptr: CValuesRef<CPointerVar<GSettingsBackend>>?): Unit

@CCall("knifunptr_libgtk32578_glib_listautoptr_cleanup_GSettingsBackend")
external fun glib_listautoptr_cleanup_GSettingsBackend(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32579_glib_slistautoptr_cleanup_GSettingsBackend")
external fun glib_slistautoptr_cleanup_GSettingsBackend(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32580_glib_autoptr_cleanup_GSettingsSchema")
external fun glib_autoptr_cleanup_GSettingsSchema(_ptr: CValuesRef<CPointerVar<GSettingsSchema>>?): Unit

@CCall("knifunptr_libgtk32581_glib_listautoptr_cleanup_GSettingsSchema")
external fun glib_listautoptr_cleanup_GSettingsSchema(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32582_glib_slistautoptr_cleanup_GSettingsSchema")
external fun glib_slistautoptr_cleanup_GSettingsSchema(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32583_glib_autoptr_cleanup_GSettings")
external fun glib_autoptr_cleanup_GSettings(_ptr: CValuesRef<CPointerVar<GSettings>>?): Unit

@CCall("knifunptr_libgtk32584_glib_listautoptr_cleanup_GSettings")
external fun glib_listautoptr_cleanup_GSettings(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32585_glib_slistautoptr_cleanup_GSettings")
external fun glib_slistautoptr_cleanup_GSettings(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32586_glib_autoptr_cleanup_GSimpleActionGroup")
external fun glib_autoptr_cleanup_GSimpleActionGroup(_ptr: CValuesRef<CPointerVar<GSimpleActionGroup>>?): Unit

@CCall("knifunptr_libgtk32587_glib_listautoptr_cleanup_GSimpleActionGroup")
external fun glib_listautoptr_cleanup_GSimpleActionGroup(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32588_glib_slistautoptr_cleanup_GSimpleActionGroup")
external fun glib_slistautoptr_cleanup_GSimpleActionGroup(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32589_glib_autoptr_cleanup_GSimpleAction")
external fun glib_autoptr_cleanup_GSimpleAction(_ptr: CValuesRef<CPointerVar<GSimpleAction>>?): Unit

@CCall("knifunptr_libgtk32590_glib_listautoptr_cleanup_GSimpleAction")
external fun glib_listautoptr_cleanup_GSimpleAction(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32591_glib_slistautoptr_cleanup_GSimpleAction")
external fun glib_slistautoptr_cleanup_GSimpleAction(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32592_glib_autoptr_cleanup_GSimpleAsyncResult")
external fun glib_autoptr_cleanup_GSimpleAsyncResult(_ptr: CValuesRef<CPointerVar<GSimpleAsyncResult>>?): Unit

@CCall("knifunptr_libgtk32593_glib_listautoptr_cleanup_GSimpleAsyncResult")
external fun glib_listautoptr_cleanup_GSimpleAsyncResult(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32594_glib_slistautoptr_cleanup_GSimpleAsyncResult")
external fun glib_slistautoptr_cleanup_GSimpleAsyncResult(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32595_glib_autoptr_cleanup_GSimplePermission")
external fun glib_autoptr_cleanup_GSimplePermission(_ptr: CValuesRef<CPointerVar<GSimplePermission>>?): Unit

@CCall("knifunptr_libgtk32596_glib_listautoptr_cleanup_GSimplePermission")
external fun glib_listautoptr_cleanup_GSimplePermission(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32597_glib_slistautoptr_cleanup_GSimplePermission")
external fun glib_slistautoptr_cleanup_GSimplePermission(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32598_glib_autoptr_cleanup_GSimpleProxyResolver")
external fun glib_autoptr_cleanup_GSimpleProxyResolver(_ptr: CValuesRef<CPointerVar<GSimpleProxyResolver>>?): Unit

@CCall("knifunptr_libgtk32599_glib_listautoptr_cleanup_GSimpleProxyResolver")
external fun glib_listautoptr_cleanup_GSimpleProxyResolver(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32600_glib_slistautoptr_cleanup_GSimpleProxyResolver")
external fun glib_slistautoptr_cleanup_GSimpleProxyResolver(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32601_glib_autoptr_cleanup_GSocketAddressEnumerator")
external fun glib_autoptr_cleanup_GSocketAddressEnumerator(_ptr: CValuesRef<CPointerVar<GSocketAddressEnumerator>>?): Unit

@CCall("knifunptr_libgtk32602_glib_listautoptr_cleanup_GSocketAddressEnumerator")
external fun glib_listautoptr_cleanup_GSocketAddressEnumerator(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32603_glib_slistautoptr_cleanup_GSocketAddressEnumerator")
external fun glib_slistautoptr_cleanup_GSocketAddressEnumerator(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32604_glib_autoptr_cleanup_GSocketAddress")
external fun glib_autoptr_cleanup_GSocketAddress(_ptr: CValuesRef<CPointerVar<GSocketAddress>>?): Unit

@CCall("knifunptr_libgtk32605_glib_listautoptr_cleanup_GSocketAddress")
external fun glib_listautoptr_cleanup_GSocketAddress(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32606_glib_slistautoptr_cleanup_GSocketAddress")
external fun glib_slistautoptr_cleanup_GSocketAddress(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32607_glib_autoptr_cleanup_GSocketClient")
external fun glib_autoptr_cleanup_GSocketClient(_ptr: CValuesRef<CPointerVar<GSocketClient>>?): Unit

@CCall("knifunptr_libgtk32608_glib_listautoptr_cleanup_GSocketClient")
external fun glib_listautoptr_cleanup_GSocketClient(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32609_glib_slistautoptr_cleanup_GSocketClient")
external fun glib_slistautoptr_cleanup_GSocketClient(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32610_glib_autoptr_cleanup_GSocketConnectable")
external fun glib_autoptr_cleanup_GSocketConnectable(_ptr: CValuesRef<CPointerVar<GSocketConnectable>>?): Unit

@CCall("knifunptr_libgtk32611_glib_listautoptr_cleanup_GSocketConnectable")
external fun glib_listautoptr_cleanup_GSocketConnectable(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32612_glib_slistautoptr_cleanup_GSocketConnectable")
external fun glib_slistautoptr_cleanup_GSocketConnectable(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32613_glib_autoptr_cleanup_GSocketConnection")
external fun glib_autoptr_cleanup_GSocketConnection(_ptr: CValuesRef<CPointerVar<GSocketConnection>>?): Unit

@CCall("knifunptr_libgtk32614_glib_listautoptr_cleanup_GSocketConnection")
external fun glib_listautoptr_cleanup_GSocketConnection(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32615_glib_slistautoptr_cleanup_GSocketConnection")
external fun glib_slistautoptr_cleanup_GSocketConnection(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32616_glib_autoptr_cleanup_GSocketControlMessage")
external fun glib_autoptr_cleanup_GSocketControlMessage(_ptr: CValuesRef<CPointerVar<GSocketControlMessage>>?): Unit

@CCall("knifunptr_libgtk32617_glib_listautoptr_cleanup_GSocketControlMessage")
external fun glib_listautoptr_cleanup_GSocketControlMessage(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32618_glib_slistautoptr_cleanup_GSocketControlMessage")
external fun glib_slistautoptr_cleanup_GSocketControlMessage(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32619_glib_autoptr_cleanup_GSocket")
external fun glib_autoptr_cleanup_GSocket(_ptr: CValuesRef<CPointerVar<GSocket>>?): Unit

@CCall("knifunptr_libgtk32620_glib_listautoptr_cleanup_GSocket")
external fun glib_listautoptr_cleanup_GSocket(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32621_glib_slistautoptr_cleanup_GSocket")
external fun glib_slistautoptr_cleanup_GSocket(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32622_glib_autoptr_cleanup_GSocketListener")
external fun glib_autoptr_cleanup_GSocketListener(_ptr: CValuesRef<CPointerVar<GSocketListener>>?): Unit

@CCall("knifunptr_libgtk32623_glib_listautoptr_cleanup_GSocketListener")
external fun glib_listautoptr_cleanup_GSocketListener(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32624_glib_slistautoptr_cleanup_GSocketListener")
external fun glib_slistautoptr_cleanup_GSocketListener(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32625_glib_autoptr_cleanup_GSocketService")
external fun glib_autoptr_cleanup_GSocketService(_ptr: CValuesRef<CPointerVar<GSocketService>>?): Unit

@CCall("knifunptr_libgtk32626_glib_listautoptr_cleanup_GSocketService")
external fun glib_listautoptr_cleanup_GSocketService(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32627_glib_slistautoptr_cleanup_GSocketService")
external fun glib_slistautoptr_cleanup_GSocketService(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32628_glib_autoptr_cleanup_GSubprocess")
external fun glib_autoptr_cleanup_GSubprocess(_ptr: CValuesRef<CPointerVar<GSubprocess>>?): Unit

@CCall("knifunptr_libgtk32629_glib_listautoptr_cleanup_GSubprocess")
external fun glib_listautoptr_cleanup_GSubprocess(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32630_glib_slistautoptr_cleanup_GSubprocess")
external fun glib_slistautoptr_cleanup_GSubprocess(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32631_glib_autoptr_cleanup_GSubprocessLauncher")
external fun glib_autoptr_cleanup_GSubprocessLauncher(_ptr: CValuesRef<CPointerVar<GSubprocessLauncher>>?): Unit

@CCall("knifunptr_libgtk32632_glib_listautoptr_cleanup_GSubprocessLauncher")
external fun glib_listautoptr_cleanup_GSubprocessLauncher(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32633_glib_slistautoptr_cleanup_GSubprocessLauncher")
external fun glib_slistautoptr_cleanup_GSubprocessLauncher(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32634_glib_autoptr_cleanup_GTask")
external fun glib_autoptr_cleanup_GTask(_ptr: CValuesRef<CPointerVar<GTask>>?): Unit

@CCall("knifunptr_libgtk32635_glib_listautoptr_cleanup_GTask")
external fun glib_listautoptr_cleanup_GTask(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32636_glib_slistautoptr_cleanup_GTask")
external fun glib_slistautoptr_cleanup_GTask(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32637_glib_autoptr_cleanup_GTcpConnection")
external fun glib_autoptr_cleanup_GTcpConnection(_ptr: CValuesRef<CPointerVar<GTcpConnection>>?): Unit

@CCall("knifunptr_libgtk32638_glib_listautoptr_cleanup_GTcpConnection")
external fun glib_listautoptr_cleanup_GTcpConnection(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32639_glib_slistautoptr_cleanup_GTcpConnection")
external fun glib_slistautoptr_cleanup_GTcpConnection(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32640_glib_autoptr_cleanup_GTcpWrapperConnection")
external fun glib_autoptr_cleanup_GTcpWrapperConnection(_ptr: CValuesRef<CPointerVar<GTcpWrapperConnection>>?): Unit

@CCall("knifunptr_libgtk32641_glib_listautoptr_cleanup_GTcpWrapperConnection")
external fun glib_listautoptr_cleanup_GTcpWrapperConnection(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32642_glib_slistautoptr_cleanup_GTcpWrapperConnection")
external fun glib_slistautoptr_cleanup_GTcpWrapperConnection(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32643_glib_autoptr_cleanup_GTestDBus")
external fun glib_autoptr_cleanup_GTestDBus(_ptr: CValuesRef<CPointerVar<GTestDBus>>?): Unit

@CCall("knifunptr_libgtk32644_glib_listautoptr_cleanup_GTestDBus")
external fun glib_listautoptr_cleanup_GTestDBus(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32645_glib_slistautoptr_cleanup_GTestDBus")
external fun glib_slistautoptr_cleanup_GTestDBus(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32646_glib_autoptr_cleanup_GThemedIcon")
external fun glib_autoptr_cleanup_GThemedIcon(_ptr: CValuesRef<CPointerVar<GThemedIcon>>?): Unit

@CCall("knifunptr_libgtk32647_glib_listautoptr_cleanup_GThemedIcon")
external fun glib_listautoptr_cleanup_GThemedIcon(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32648_glib_slistautoptr_cleanup_GThemedIcon")
external fun glib_slistautoptr_cleanup_GThemedIcon(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32649_glib_autoptr_cleanup_GThreadedSocketService")
external fun glib_autoptr_cleanup_GThreadedSocketService(_ptr: CValuesRef<CPointerVar<GThreadedSocketService>>?): Unit

@CCall("knifunptr_libgtk32650_glib_listautoptr_cleanup_GThreadedSocketService")
external fun glib_listautoptr_cleanup_GThreadedSocketService(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32651_glib_slistautoptr_cleanup_GThreadedSocketService")
external fun glib_slistautoptr_cleanup_GThreadedSocketService(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32652_glib_autoptr_cleanup_GTlsBackend")
external fun glib_autoptr_cleanup_GTlsBackend(_ptr: CValuesRef<CPointerVar<GTlsBackend>>?): Unit

@CCall("knifunptr_libgtk32653_glib_listautoptr_cleanup_GTlsBackend")
external fun glib_listautoptr_cleanup_GTlsBackend(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32654_glib_slistautoptr_cleanup_GTlsBackend")
external fun glib_slistautoptr_cleanup_GTlsBackend(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32655_glib_autoptr_cleanup_GTlsCertificate")
external fun glib_autoptr_cleanup_GTlsCertificate(_ptr: CValuesRef<CPointerVar<GTlsCertificate>>?): Unit

@CCall("knifunptr_libgtk32656_glib_listautoptr_cleanup_GTlsCertificate")
external fun glib_listautoptr_cleanup_GTlsCertificate(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32657_glib_slistautoptr_cleanup_GTlsCertificate")
external fun glib_slistautoptr_cleanup_GTlsCertificate(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32658_glib_autoptr_cleanup_GTlsClientConnection")
external fun glib_autoptr_cleanup_GTlsClientConnection(_ptr: CValuesRef<CPointerVar<GTlsClientConnection>>?): Unit

@CCall("knifunptr_libgtk32659_glib_listautoptr_cleanup_GTlsClientConnection")
external fun glib_listautoptr_cleanup_GTlsClientConnection(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32660_glib_slistautoptr_cleanup_GTlsClientConnection")
external fun glib_slistautoptr_cleanup_GTlsClientConnection(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32661_glib_autoptr_cleanup_GTlsConnection")
external fun glib_autoptr_cleanup_GTlsConnection(_ptr: CValuesRef<CPointerVar<GTlsConnection>>?): Unit

@CCall("knifunptr_libgtk32662_glib_listautoptr_cleanup_GTlsConnection")
external fun glib_listautoptr_cleanup_GTlsConnection(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32663_glib_slistautoptr_cleanup_GTlsConnection")
external fun glib_slistautoptr_cleanup_GTlsConnection(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32664_glib_autoptr_cleanup_GTlsDatabase")
external fun glib_autoptr_cleanup_GTlsDatabase(_ptr: CValuesRef<CPointerVar<GTlsDatabase>>?): Unit

@CCall("knifunptr_libgtk32665_glib_listautoptr_cleanup_GTlsDatabase")
external fun glib_listautoptr_cleanup_GTlsDatabase(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32666_glib_slistautoptr_cleanup_GTlsDatabase")
external fun glib_slistautoptr_cleanup_GTlsDatabase(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32667_glib_autoptr_cleanup_GTlsFileDatabase")
external fun glib_autoptr_cleanup_GTlsFileDatabase(_ptr: CValuesRef<CPointerVar<GTlsFileDatabase>>?): Unit

@CCall("knifunptr_libgtk32668_glib_listautoptr_cleanup_GTlsFileDatabase")
external fun glib_listautoptr_cleanup_GTlsFileDatabase(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32669_glib_slistautoptr_cleanup_GTlsFileDatabase")
external fun glib_slistautoptr_cleanup_GTlsFileDatabase(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32670_glib_autoptr_cleanup_GTlsInteraction")
external fun glib_autoptr_cleanup_GTlsInteraction(_ptr: CValuesRef<CPointerVar<GTlsInteraction>>?): Unit

@CCall("knifunptr_libgtk32671_glib_listautoptr_cleanup_GTlsInteraction")
external fun glib_listautoptr_cleanup_GTlsInteraction(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32672_glib_slistautoptr_cleanup_GTlsInteraction")
external fun glib_slistautoptr_cleanup_GTlsInteraction(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32673_glib_autoptr_cleanup_GTlsPassword")
external fun glib_autoptr_cleanup_GTlsPassword(_ptr: CValuesRef<CPointerVar<GTlsPassword>>?): Unit

@CCall("knifunptr_libgtk32674_glib_listautoptr_cleanup_GTlsPassword")
external fun glib_listautoptr_cleanup_GTlsPassword(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32675_glib_slistautoptr_cleanup_GTlsPassword")
external fun glib_slistautoptr_cleanup_GTlsPassword(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32676_glib_autoptr_cleanup_GTlsServerConnection")
external fun glib_autoptr_cleanup_GTlsServerConnection(_ptr: CValuesRef<CPointerVar<GTlsServerConnection>>?): Unit

@CCall("knifunptr_libgtk32677_glib_listautoptr_cleanup_GTlsServerConnection")
external fun glib_listautoptr_cleanup_GTlsServerConnection(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32678_glib_slistautoptr_cleanup_GTlsServerConnection")
external fun glib_slistautoptr_cleanup_GTlsServerConnection(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32679_glib_autoptr_cleanup_GVfs")
external fun glib_autoptr_cleanup_GVfs(_ptr: CValuesRef<CPointerVar<GVfs>>?): Unit

@CCall("knifunptr_libgtk32680_glib_listautoptr_cleanup_GVfs")
external fun glib_listautoptr_cleanup_GVfs(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32681_glib_slistautoptr_cleanup_GVfs")
external fun glib_slistautoptr_cleanup_GVfs(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32682_glib_autoptr_cleanup_GVolume")
external fun glib_autoptr_cleanup_GVolume(_ptr: CValuesRef<CPointerVar<GVolume>>?): Unit

@CCall("knifunptr_libgtk32683_glib_listautoptr_cleanup_GVolume")
external fun glib_listautoptr_cleanup_GVolume(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32684_glib_slistautoptr_cleanup_GVolume")
external fun glib_slistautoptr_cleanup_GVolume(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32685_glib_autoptr_cleanup_GVolumeMonitor")
external fun glib_autoptr_cleanup_GVolumeMonitor(_ptr: CValuesRef<CPointerVar<GVolumeMonitor>>?): Unit

@CCall("knifunptr_libgtk32686_glib_listautoptr_cleanup_GVolumeMonitor")
external fun glib_listautoptr_cleanup_GVolumeMonitor(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32687_glib_slistautoptr_cleanup_GVolumeMonitor")
external fun glib_slistautoptr_cleanup_GVolumeMonitor(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32688_glib_autoptr_cleanup_GZlibCompressor")
external fun glib_autoptr_cleanup_GZlibCompressor(_ptr: CValuesRef<CPointerVar<GZlibCompressor>>?): Unit

@CCall("knifunptr_libgtk32689_glib_listautoptr_cleanup_GZlibCompressor")
external fun glib_listautoptr_cleanup_GZlibCompressor(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32690_glib_slistautoptr_cleanup_GZlibCompressor")
external fun glib_slistautoptr_cleanup_GZlibCompressor(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32691_glib_autoptr_cleanup_GZlibDecompressor")
external fun glib_autoptr_cleanup_GZlibDecompressor(_ptr: CValuesRef<CPointerVar<GZlibDecompressor>>?): Unit

@CCall("knifunptr_libgtk32692_glib_listautoptr_cleanup_GZlibDecompressor")
external fun glib_listautoptr_cleanup_GZlibDecompressor(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32693_glib_slistautoptr_cleanup_GZlibDecompressor")
external fun glib_slistautoptr_cleanup_GZlibDecompressor(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32694_gtk_accel_group_get_type")
external fun gtk_accel_group_get_type(): GType

@CCall("knifunptr_libgtk32695_gtk_accel_group_new")
external fun gtk_accel_group_new(): CPointer<GtkAccelGroup>?

@CCall("knifunptr_libgtk32696_gtk_accel_group_get_is_locked")
external fun gtk_accel_group_get_is_locked(accel_group: CValuesRef<GtkAccelGroup>?): gboolean

@CCall("knifunptr_libgtk32697_gtk_accel_group_get_modifier_mask")
external fun gtk_accel_group_get_modifier_mask(accel_group: CValuesRef<GtkAccelGroup>?): GdkModifierType

@CCall("knifunptr_libgtk32698_gtk_accel_group_lock")
external fun gtk_accel_group_lock(accel_group: CValuesRef<GtkAccelGroup>?): Unit

@CCall("knifunptr_libgtk32699_gtk_accel_group_unlock")
external fun gtk_accel_group_unlock(accel_group: CValuesRef<GtkAccelGroup>?): Unit

@CCall("knifunptr_libgtk32700_gtk_accel_group_connect")
external fun gtk_accel_group_connect(accel_group: CValuesRef<GtkAccelGroup>?, accel_key: guint, accel_mods: GdkModifierType, accel_flags: GtkAccelFlags, closure: CValuesRef<GClosure>?): Unit

@CCall("knifunptr_libgtk32701_gtk_accel_group_connect_by_path")
external fun gtk_accel_group_connect_by_path(accel_group: CValuesRef<GtkAccelGroup>?, @CCall.CString accel_path: String?, closure: CValuesRef<GClosure>?): Unit

@CCall("knifunptr_libgtk32702_gtk_accel_group_disconnect")
external fun gtk_accel_group_disconnect(accel_group: CValuesRef<GtkAccelGroup>?, closure: CValuesRef<GClosure>?): gboolean

@CCall("knifunptr_libgtk32703_gtk_accel_group_disconnect_key")
external fun gtk_accel_group_disconnect_key(accel_group: CValuesRef<GtkAccelGroup>?, accel_key: guint, accel_mods: GdkModifierType): gboolean

@CCall("knifunptr_libgtk32704_gtk_accel_group_activate")
external fun gtk_accel_group_activate(accel_group: CValuesRef<GtkAccelGroup>?, accel_quark: GQuark, acceleratable: CValuesRef<GObject>?, accel_key: guint, accel_mods: GdkModifierType): gboolean

@CCall("knifunptr_libgtk32705__gtk_accel_group_attach")
external fun _gtk_accel_group_attach(accel_group: CValuesRef<GtkAccelGroup>?, `object`: CValuesRef<GObject>?): Unit

@CCall("knifunptr_libgtk32706__gtk_accel_group_detach")
external fun _gtk_accel_group_detach(accel_group: CValuesRef<GtkAccelGroup>?, `object`: CValuesRef<GObject>?): Unit

@CCall("knifunptr_libgtk32707_gtk_accel_groups_activate")
external fun gtk_accel_groups_activate(`object`: CValuesRef<GObject>?, accel_key: guint, accel_mods: GdkModifierType): gboolean

@CCall("knifunptr_libgtk32708_gtk_accel_groups_from_object")
external fun gtk_accel_groups_from_object(`object`: CValuesRef<GObject>?): CPointer<GSList>?

@CCall("knifunptr_libgtk32709_gtk_accel_group_find")
external fun gtk_accel_group_find(accel_group: CValuesRef<GtkAccelGroup>?, find_func: GtkAccelGroupFindFunc?, data: gpointer?): CPointer<GtkAccelKey>?

@CCall("knifunptr_libgtk32710_gtk_accel_group_from_accel_closure")
external fun gtk_accel_group_from_accel_closure(closure: CValuesRef<GClosure>?): CPointer<GtkAccelGroup>?

@CCall("knifunptr_libgtk32711_gtk_accelerator_valid")
external fun gtk_accelerator_valid(keyval: guint, modifiers: GdkModifierType): gboolean

@CCall("knifunptr_libgtk32712_gtk_accelerator_parse")
external fun gtk_accelerator_parse(@CCall.CString accelerator: String?, accelerator_key: CValuesRef<guintVar>?, accelerator_mods: CValuesRef<GdkModifierTypeVar>?): Unit

@CCall("knifunptr_libgtk32713_gtk_accelerator_parse_with_keycode")
external fun gtk_accelerator_parse_with_keycode(@CCall.CString accelerator: String?, accelerator_key: CValuesRef<guintVar>?, accelerator_codes: CValuesRef<CPointerVar<guintVar>>?, accelerator_mods: CValuesRef<GdkModifierTypeVar>?): Unit

@CCall("knifunptr_libgtk32714_gtk_accelerator_name")
external fun gtk_accelerator_name(accelerator_key: guint, accelerator_mods: GdkModifierType): CPointer<gcharVar>?

@CCall("knifunptr_libgtk32715_gtk_accelerator_name_with_keycode")
external fun gtk_accelerator_name_with_keycode(display: CValuesRef<GdkDisplay>?, accelerator_key: guint, keycode: guint, accelerator_mods: GdkModifierType): CPointer<gcharVar>?

@CCall("knifunptr_libgtk32716_gtk_accelerator_get_label")
external fun gtk_accelerator_get_label(accelerator_key: guint, accelerator_mods: GdkModifierType): CPointer<gcharVar>?

@CCall("knifunptr_libgtk32717_gtk_accelerator_get_label_with_keycode")
external fun gtk_accelerator_get_label_with_keycode(display: CValuesRef<GdkDisplay>?, accelerator_key: guint, keycode: guint, accelerator_mods: GdkModifierType): CPointer<gcharVar>?

@CCall("knifunptr_libgtk32718_gtk_accelerator_set_default_mod_mask")
external fun gtk_accelerator_set_default_mod_mask(default_mod_mask: GdkModifierType): Unit

@CCall("knifunptr_libgtk32719_gtk_accelerator_get_default_mod_mask")
external fun gtk_accelerator_get_default_mod_mask(): GdkModifierType

@CCall("knifunptr_libgtk32720_gtk_accel_group_query")
external fun gtk_accel_group_query(accel_group: CValuesRef<GtkAccelGroup>?, accel_key: guint, accel_mods: GdkModifierType, n_entries: CValuesRef<guintVar>?): CPointer<GtkAccelGroupEntry>?

@CCall("knifunptr_libgtk32721_glib_autoptr_cleanup_GtkAccelGroup")
external fun glib_autoptr_cleanup_GtkAccelGroup(_ptr: CValuesRef<CPointerVar<GtkAccelGroup>>?): Unit

@CCall("knifunptr_libgtk32722_glib_listautoptr_cleanup_GtkAccelGroup")
external fun glib_listautoptr_cleanup_GtkAccelGroup(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32723_glib_slistautoptr_cleanup_GtkAccelGroup")
external fun glib_slistautoptr_cleanup_GtkAccelGroup(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32724_gtk_border_get_type")
external fun gtk_border_get_type(): GType

@CCall("knifunptr_libgtk32725_gtk_border_new")
external fun gtk_border_new(): CPointer<GtkBorder>?

@CCall("knifunptr_libgtk32726_gtk_border_copy")
external fun gtk_border_copy(border_: CValuesRef<GtkBorder>?): CPointer<GtkBorder>?

@CCall("knifunptr_libgtk32727_gtk_border_free")
external fun gtk_border_free(border_: CValuesRef<GtkBorder>?): Unit

@CCall("knifunptr_libgtk32728_glib_autoptr_cleanup_GtkBorder")
external fun glib_autoptr_cleanup_GtkBorder(_ptr: CValuesRef<CPointerVar<GtkBorder>>?): Unit

@CCall("knifunptr_libgtk32729_glib_listautoptr_cleanup_GtkBorder")
external fun glib_listautoptr_cleanup_GtkBorder(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32730_glib_slistautoptr_cleanup_GtkBorder")
external fun glib_slistautoptr_cleanup_GtkBorder(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32731_gtk_widget_get_type")
external fun gtk_widget_get_type(): GType

@CCall("knifunptr_libgtk32732_gtk_widget_new")
external fun gtk_widget_new(type: GType, @CCall.CString first_property_name: String?, vararg variadicArguments: Any?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk32733_gtk_widget_destroy")
external fun gtk_widget_destroy(widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk32734_gtk_widget_destroyed")
external fun gtk_widget_destroyed(widget: CValuesRef<GtkWidget>?, widget_pointer: CValuesRef<CPointerVar<GtkWidget>>?): Unit

@CCall("knifunptr_libgtk32735_gtk_widget_unparent")
external fun gtk_widget_unparent(widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk32736_gtk_widget_show")
external fun gtk_widget_show(widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk32737_gtk_widget_hide")
external fun gtk_widget_hide(widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk32738_gtk_widget_show_now")
external fun gtk_widget_show_now(widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk32739_gtk_widget_show_all")
external fun gtk_widget_show_all(widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk32740_gtk_widget_set_no_show_all")
external fun gtk_widget_set_no_show_all(widget: CValuesRef<GtkWidget>?, no_show_all: gboolean): Unit

@CCall("knifunptr_libgtk32741_gtk_widget_get_no_show_all")
external fun gtk_widget_get_no_show_all(widget: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk32742_gtk_widget_map")
external fun gtk_widget_map(widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk32743_gtk_widget_unmap")
external fun gtk_widget_unmap(widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk32744_gtk_widget_realize")
external fun gtk_widget_realize(widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk32745_gtk_widget_unrealize")
external fun gtk_widget_unrealize(widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk32746_gtk_widget_draw")
external fun gtk_widget_draw(widget: CValuesRef<GtkWidget>?, cr: CValuesRef<cairo_t>?): Unit

@CCall("knifunptr_libgtk32747_gtk_widget_queue_draw")
external fun gtk_widget_queue_draw(widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk32748_gtk_widget_queue_draw_area")
external fun gtk_widget_queue_draw_area(widget: CValuesRef<GtkWidget>?, x: gint, y: gint, width: gint, height: gint): Unit

@CCall("knifunptr_libgtk32749_gtk_widget_queue_draw_region")
external fun gtk_widget_queue_draw_region(widget: CValuesRef<GtkWidget>?, region: CValuesRef<cairo_region_t>?): Unit

@CCall("knifunptr_libgtk32750_gtk_widget_queue_resize")
external fun gtk_widget_queue_resize(widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk32751_gtk_widget_queue_resize_no_redraw")
external fun gtk_widget_queue_resize_no_redraw(widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk32752_gtk_widget_queue_allocate")
external fun gtk_widget_queue_allocate(widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk32753_gtk_widget_get_frame_clock")
external fun gtk_widget_get_frame_clock(widget: CValuesRef<GtkWidget>?): CPointer<GdkFrameClock>?

@CCall("knifunptr_libgtk32754_gtk_widget_size_request")
external fun gtk_widget_size_request(widget: CValuesRef<GtkWidget>?, requisition: CValuesRef<GtkRequisition>?): Unit

@CCall("knifunptr_libgtk32755_gtk_widget_size_allocate")
external fun gtk_widget_size_allocate(widget: CValuesRef<GtkWidget>?, allocation: CValuesRef<GtkAllocation>?): Unit

@CCall("knifunptr_libgtk32756_gtk_widget_size_allocate_with_baseline")
external fun gtk_widget_size_allocate_with_baseline(widget: CValuesRef<GtkWidget>?, allocation: CValuesRef<GtkAllocation>?, baseline: gint): Unit

@CCall("knifunptr_libgtk32757_gtk_widget_get_request_mode")
external fun gtk_widget_get_request_mode(widget: CValuesRef<GtkWidget>?): GtkSizeRequestMode

@CCall("knifunptr_libgtk32758_gtk_widget_get_preferred_width")
external fun gtk_widget_get_preferred_width(widget: CValuesRef<GtkWidget>?, minimum_width: CValuesRef<gintVar>?, natural_width: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk32759_gtk_widget_get_preferred_height_for_width")
external fun gtk_widget_get_preferred_height_for_width(widget: CValuesRef<GtkWidget>?, width: gint, minimum_height: CValuesRef<gintVar>?, natural_height: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk32760_gtk_widget_get_preferred_height")
external fun gtk_widget_get_preferred_height(widget: CValuesRef<GtkWidget>?, minimum_height: CValuesRef<gintVar>?, natural_height: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk32761_gtk_widget_get_preferred_width_for_height")
external fun gtk_widget_get_preferred_width_for_height(widget: CValuesRef<GtkWidget>?, height: gint, minimum_width: CValuesRef<gintVar>?, natural_width: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk32762_gtk_widget_get_preferred_height_and_baseline_for_width")
external fun gtk_widget_get_preferred_height_and_baseline_for_width(widget: CValuesRef<GtkWidget>?, width: gint, minimum_height: CValuesRef<gintVar>?, natural_height: CValuesRef<gintVar>?, minimum_baseline: CValuesRef<gintVar>?, natural_baseline: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk32763_gtk_widget_get_preferred_size")
external fun gtk_widget_get_preferred_size(widget: CValuesRef<GtkWidget>?, minimum_size: CValuesRef<GtkRequisition>?, natural_size: CValuesRef<GtkRequisition>?): Unit

@CCall("knifunptr_libgtk32764_gtk_widget_get_child_requisition")
external fun gtk_widget_get_child_requisition(widget: CValuesRef<GtkWidget>?, requisition: CValuesRef<GtkRequisition>?): Unit

@CCall("knifunptr_libgtk32765_gtk_widget_add_accelerator")
external fun gtk_widget_add_accelerator(widget: CValuesRef<GtkWidget>?, @CCall.CString accel_signal: String?, accel_group: CValuesRef<GtkAccelGroup>?, accel_key: guint, accel_mods: GdkModifierType, accel_flags: GtkAccelFlags): Unit

@CCall("knifunptr_libgtk32766_gtk_widget_remove_accelerator")
external fun gtk_widget_remove_accelerator(widget: CValuesRef<GtkWidget>?, accel_group: CValuesRef<GtkAccelGroup>?, accel_key: guint, accel_mods: GdkModifierType): gboolean

@CCall("knifunptr_libgtk32767_gtk_widget_set_accel_path")
external fun gtk_widget_set_accel_path(widget: CValuesRef<GtkWidget>?, @CCall.CString accel_path: String?, accel_group: CValuesRef<GtkAccelGroup>?): Unit

@CCall("knifunptr_libgtk32768_gtk_widget_list_accel_closures")
external fun gtk_widget_list_accel_closures(widget: CValuesRef<GtkWidget>?): CPointer<GList>?

@CCall("knifunptr_libgtk32769_gtk_widget_can_activate_accel")
external fun gtk_widget_can_activate_accel(widget: CValuesRef<GtkWidget>?, signal_id: guint): gboolean

@CCall("knifunptr_libgtk32770_gtk_widget_mnemonic_activate")
external fun gtk_widget_mnemonic_activate(widget: CValuesRef<GtkWidget>?, group_cycling: gboolean): gboolean

@CCall("knifunptr_libgtk32771_gtk_widget_event")
external fun gtk_widget_event(widget: CValuesRef<GtkWidget>?, event: CValuesRef<GdkEvent>?): gboolean

@CCall("knifunptr_libgtk32772_gtk_widget_send_expose")
external fun gtk_widget_send_expose(widget: CValuesRef<GtkWidget>?, event: CValuesRef<GdkEvent>?): gint

@CCall("knifunptr_libgtk32773_gtk_widget_send_focus_change")
external fun gtk_widget_send_focus_change(widget: CValuesRef<GtkWidget>?, event: CValuesRef<GdkEvent>?): gboolean

@CCall("knifunptr_libgtk32774_gtk_widget_activate")
external fun gtk_widget_activate(widget: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk32775_gtk_widget_reparent")
external fun gtk_widget_reparent(widget: CValuesRef<GtkWidget>?, new_parent: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk32776_gtk_widget_intersect")
external fun gtk_widget_intersect(widget: CValuesRef<GtkWidget>?, area: CValuesRef<GdkRectangle>?, intersection: CValuesRef<GdkRectangle>?): gboolean

@CCall("knifunptr_libgtk32777_gtk_widget_region_intersect")
external fun gtk_widget_region_intersect(widget: CValuesRef<GtkWidget>?, region: CValuesRef<cairo_region_t>?): CPointer<cairo_region_t>?

@CCall("knifunptr_libgtk32778_gtk_widget_freeze_child_notify")
external fun gtk_widget_freeze_child_notify(widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk32779_gtk_widget_child_notify")
external fun gtk_widget_child_notify(widget: CValuesRef<GtkWidget>?, @CCall.CString child_property: String?): Unit

@CCall("knifunptr_libgtk32780_gtk_widget_thaw_child_notify")
external fun gtk_widget_thaw_child_notify(widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk32781_gtk_widget_set_can_focus")
external fun gtk_widget_set_can_focus(widget: CValuesRef<GtkWidget>?, can_focus: gboolean): Unit

@CCall("knifunptr_libgtk32782_gtk_widget_get_can_focus")
external fun gtk_widget_get_can_focus(widget: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk32783_gtk_widget_has_focus")
external fun gtk_widget_has_focus(widget: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk32784_gtk_widget_is_focus")
external fun gtk_widget_is_focus(widget: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk32785_gtk_widget_has_visible_focus")
external fun gtk_widget_has_visible_focus(widget: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk32786_gtk_widget_grab_focus")
external fun gtk_widget_grab_focus(widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk32787_gtk_widget_set_focus_on_click")
external fun gtk_widget_set_focus_on_click(widget: CValuesRef<GtkWidget>?, focus_on_click: gboolean): Unit

@CCall("knifunptr_libgtk32788_gtk_widget_get_focus_on_click")
external fun gtk_widget_get_focus_on_click(widget: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk32789_gtk_widget_set_can_default")
external fun gtk_widget_set_can_default(widget: CValuesRef<GtkWidget>?, can_default: gboolean): Unit

@CCall("knifunptr_libgtk32790_gtk_widget_get_can_default")
external fun gtk_widget_get_can_default(widget: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk32791_gtk_widget_has_default")
external fun gtk_widget_has_default(widget: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk32792_gtk_widget_grab_default")
external fun gtk_widget_grab_default(widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk32793_gtk_widget_set_receives_default")
external fun gtk_widget_set_receives_default(widget: CValuesRef<GtkWidget>?, receives_default: gboolean): Unit

@CCall("knifunptr_libgtk32794_gtk_widget_get_receives_default")
external fun gtk_widget_get_receives_default(widget: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk32795_gtk_widget_has_grab")
external fun gtk_widget_has_grab(widget: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk32796_gtk_widget_device_is_shadowed")
external fun gtk_widget_device_is_shadowed(widget: CValuesRef<GtkWidget>?, device: CValuesRef<GdkDevice>?): gboolean

@CCall("knifunptr_libgtk32797_gtk_widget_set_name")
external fun gtk_widget_set_name(widget: CValuesRef<GtkWidget>?, @CCall.CString name: String?): Unit

@CCall("knifunptr_libgtk32798_gtk_widget_get_name")
external fun gtk_widget_get_name(widget: CValuesRef<GtkWidget>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk32799_gtk_widget_set_state")
external fun gtk_widget_set_state(widget: CValuesRef<GtkWidget>?, state: GtkStateType): Unit

@CCall("knifunptr_libgtk32800_gtk_widget_get_state")
external fun gtk_widget_get_state(widget: CValuesRef<GtkWidget>?): GtkStateType

@CCall("knifunptr_libgtk32801_gtk_widget_set_state_flags")
external fun gtk_widget_set_state_flags(widget: CValuesRef<GtkWidget>?, flags: GtkStateFlags, clear: gboolean): Unit

@CCall("knifunptr_libgtk32802_gtk_widget_unset_state_flags")
external fun gtk_widget_unset_state_flags(widget: CValuesRef<GtkWidget>?, flags: GtkStateFlags): Unit

@CCall("knifunptr_libgtk32803_gtk_widget_get_state_flags")
external fun gtk_widget_get_state_flags(widget: CValuesRef<GtkWidget>?): GtkStateFlags

@CCall("knifunptr_libgtk32804_gtk_widget_set_sensitive")
external fun gtk_widget_set_sensitive(widget: CValuesRef<GtkWidget>?, sensitive: gboolean): Unit

@CCall("knifunptr_libgtk32805_gtk_widget_get_sensitive")
external fun gtk_widget_get_sensitive(widget: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk32806_gtk_widget_is_sensitive")
external fun gtk_widget_is_sensitive(widget: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk32807_gtk_widget_set_visible")
external fun gtk_widget_set_visible(widget: CValuesRef<GtkWidget>?, visible: gboolean): Unit

@CCall("knifunptr_libgtk32808_gtk_widget_get_visible")
external fun gtk_widget_get_visible(widget: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk32809_gtk_widget_is_visible")
external fun gtk_widget_is_visible(widget: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk32810_gtk_widget_set_has_window")
external fun gtk_widget_set_has_window(widget: CValuesRef<GtkWidget>?, has_window: gboolean): Unit

@CCall("knifunptr_libgtk32811_gtk_widget_get_has_window")
external fun gtk_widget_get_has_window(widget: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk32812_gtk_widget_is_toplevel")
external fun gtk_widget_is_toplevel(widget: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk32813_gtk_widget_is_drawable")
external fun gtk_widget_is_drawable(widget: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk32814_gtk_widget_set_realized")
external fun gtk_widget_set_realized(widget: CValuesRef<GtkWidget>?, realized: gboolean): Unit

@CCall("knifunptr_libgtk32815_gtk_widget_get_realized")
external fun gtk_widget_get_realized(widget: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk32816_gtk_widget_set_mapped")
external fun gtk_widget_set_mapped(widget: CValuesRef<GtkWidget>?, mapped: gboolean): Unit

@CCall("knifunptr_libgtk32817_gtk_widget_get_mapped")
external fun gtk_widget_get_mapped(widget: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk32818_gtk_widget_set_app_paintable")
external fun gtk_widget_set_app_paintable(widget: CValuesRef<GtkWidget>?, app_paintable: gboolean): Unit

@CCall("knifunptr_libgtk32819_gtk_widget_get_app_paintable")
external fun gtk_widget_get_app_paintable(widget: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk32820_gtk_widget_set_double_buffered")
external fun gtk_widget_set_double_buffered(widget: CValuesRef<GtkWidget>?, double_buffered: gboolean): Unit

@CCall("knifunptr_libgtk32821_gtk_widget_get_double_buffered")
external fun gtk_widget_get_double_buffered(widget: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk32822_gtk_widget_set_redraw_on_allocate")
external fun gtk_widget_set_redraw_on_allocate(widget: CValuesRef<GtkWidget>?, redraw_on_allocate: gboolean): Unit

@CCall("knifunptr_libgtk32823_gtk_widget_set_parent")
external fun gtk_widget_set_parent(widget: CValuesRef<GtkWidget>?, parent: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk32824_gtk_widget_get_parent")
external fun gtk_widget_get_parent(widget: CValuesRef<GtkWidget>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk32825_gtk_widget_set_parent_window")
external fun gtk_widget_set_parent_window(widget: CValuesRef<GtkWidget>?, parent_window: CValuesRef<GdkWindow>?): Unit

@CCall("knifunptr_libgtk32826_gtk_widget_get_parent_window")
external fun gtk_widget_get_parent_window(widget: CValuesRef<GtkWidget>?): CPointer<GdkWindow>?

@CCall("knifunptr_libgtk32827_gtk_widget_set_child_visible")
external fun gtk_widget_set_child_visible(widget: CValuesRef<GtkWidget>?, is_visible: gboolean): Unit

@CCall("knifunptr_libgtk32828_gtk_widget_get_child_visible")
external fun gtk_widget_get_child_visible(widget: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk32829_gtk_widget_set_window")
external fun gtk_widget_set_window(widget: CValuesRef<GtkWidget>?, window: CValuesRef<GdkWindow>?): Unit

@CCall("knifunptr_libgtk32830_gtk_widget_get_window")
external fun gtk_widget_get_window(widget: CValuesRef<GtkWidget>?): CPointer<GdkWindow>?

@CCall("knifunptr_libgtk32831_gtk_widget_register_window")
external fun gtk_widget_register_window(widget: CValuesRef<GtkWidget>?, window: CValuesRef<GdkWindow>?): Unit

@CCall("knifunptr_libgtk32832_gtk_widget_unregister_window")
external fun gtk_widget_unregister_window(widget: CValuesRef<GtkWidget>?, window: CValuesRef<GdkWindow>?): Unit

@CCall("knifunptr_libgtk32833_gtk_widget_get_allocated_width")
external fun gtk_widget_get_allocated_width(widget: CValuesRef<GtkWidget>?): Int

@CCall("knifunptr_libgtk32834_gtk_widget_get_allocated_height")
external fun gtk_widget_get_allocated_height(widget: CValuesRef<GtkWidget>?): Int

@CCall("knifunptr_libgtk32835_gtk_widget_get_allocated_baseline")
external fun gtk_widget_get_allocated_baseline(widget: CValuesRef<GtkWidget>?): Int

@CCall("knifunptr_libgtk32836_gtk_widget_get_allocated_size")
external fun gtk_widget_get_allocated_size(widget: CValuesRef<GtkWidget>?, allocation: CValuesRef<GtkAllocation>?, baseline: CValuesRef<IntVar>?): Unit

@CCall("knifunptr_libgtk32837_gtk_widget_get_allocation")
external fun gtk_widget_get_allocation(widget: CValuesRef<GtkWidget>?, allocation: CValuesRef<GtkAllocation>?): Unit

@CCall("knifunptr_libgtk32838_gtk_widget_set_allocation")
external fun gtk_widget_set_allocation(widget: CValuesRef<GtkWidget>?, allocation: CValuesRef<GtkAllocation>?): Unit

@CCall("knifunptr_libgtk32839_gtk_widget_set_clip")
external fun gtk_widget_set_clip(widget: CValuesRef<GtkWidget>?, clip: CValuesRef<GtkAllocation>?): Unit

@CCall("knifunptr_libgtk32840_gtk_widget_get_clip")
external fun gtk_widget_get_clip(widget: CValuesRef<GtkWidget>?, clip: CValuesRef<GtkAllocation>?): Unit

@CCall("knifunptr_libgtk32841_gtk_widget_get_requisition")
external fun gtk_widget_get_requisition(widget: CValuesRef<GtkWidget>?, requisition: CValuesRef<GtkRequisition>?): Unit

@CCall("knifunptr_libgtk32842_gtk_widget_child_focus")
external fun gtk_widget_child_focus(widget: CValuesRef<GtkWidget>?, direction: GtkDirectionType): gboolean

@CCall("knifunptr_libgtk32843_gtk_widget_keynav_failed")
external fun gtk_widget_keynav_failed(widget: CValuesRef<GtkWidget>?, direction: GtkDirectionType): gboolean

@CCall("knifunptr_libgtk32844_gtk_widget_error_bell")
external fun gtk_widget_error_bell(widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk32845_gtk_widget_set_size_request")
external fun gtk_widget_set_size_request(widget: CValuesRef<GtkWidget>?, width: gint, height: gint): Unit

@CCall("knifunptr_libgtk32846_gtk_widget_get_size_request")
external fun gtk_widget_get_size_request(widget: CValuesRef<GtkWidget>?, width: CValuesRef<gintVar>?, height: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk32847_gtk_widget_set_events")
external fun gtk_widget_set_events(widget: CValuesRef<GtkWidget>?, events: gint): Unit

@CCall("knifunptr_libgtk32848_gtk_widget_add_events")
external fun gtk_widget_add_events(widget: CValuesRef<GtkWidget>?, events: gint): Unit

@CCall("knifunptr_libgtk32849_gtk_widget_set_device_events")
external fun gtk_widget_set_device_events(widget: CValuesRef<GtkWidget>?, device: CValuesRef<GdkDevice>?, events: GdkEventMask): Unit

@CCall("knifunptr_libgtk32850_gtk_widget_add_device_events")
external fun gtk_widget_add_device_events(widget: CValuesRef<GtkWidget>?, device: CValuesRef<GdkDevice>?, events: GdkEventMask): Unit

@CCall("knifunptr_libgtk32851_gtk_widget_set_opacity")
external fun gtk_widget_set_opacity(widget: CValuesRef<GtkWidget>?, opacity: Double): Unit

@CCall("knifunptr_libgtk32852_gtk_widget_get_opacity")
external fun gtk_widget_get_opacity(widget: CValuesRef<GtkWidget>?): Double

@CCall("knifunptr_libgtk32853_gtk_widget_set_device_enabled")
external fun gtk_widget_set_device_enabled(widget: CValuesRef<GtkWidget>?, device: CValuesRef<GdkDevice>?, enabled: gboolean): Unit

@CCall("knifunptr_libgtk32854_gtk_widget_get_device_enabled")
external fun gtk_widget_get_device_enabled(widget: CValuesRef<GtkWidget>?, device: CValuesRef<GdkDevice>?): gboolean

@CCall("knifunptr_libgtk32855_gtk_widget_get_toplevel")
external fun gtk_widget_get_toplevel(widget: CValuesRef<GtkWidget>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk32856_gtk_widget_get_ancestor")
external fun gtk_widget_get_ancestor(widget: CValuesRef<GtkWidget>?, widget_type: GType): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk32857_gtk_widget_get_visual")
external fun gtk_widget_get_visual(widget: CValuesRef<GtkWidget>?): CPointer<GdkVisual>?

@CCall("knifunptr_libgtk32858_gtk_widget_set_visual")
external fun gtk_widget_set_visual(widget: CValuesRef<GtkWidget>?, visual: CValuesRef<GdkVisual>?): Unit

@CCall("knifunptr_libgtk32859_gtk_widget_get_screen")
external fun gtk_widget_get_screen(widget: CValuesRef<GtkWidget>?): CPointer<GdkScreen>?

@CCall("knifunptr_libgtk32860_gtk_widget_has_screen")
external fun gtk_widget_has_screen(widget: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk32861_gtk_widget_get_scale_factor")
external fun gtk_widget_get_scale_factor(widget: CValuesRef<GtkWidget>?): gint

@CCall("knifunptr_libgtk32862_gtk_widget_get_display")
external fun gtk_widget_get_display(widget: CValuesRef<GtkWidget>?): CPointer<GdkDisplay>?

@CCall("knifunptr_libgtk32863_gtk_widget_get_root_window")
external fun gtk_widget_get_root_window(widget: CValuesRef<GtkWidget>?): CPointer<GdkWindow>?

@CCall("knifunptr_libgtk32864_gtk_widget_get_settings")
external fun gtk_widget_get_settings(widget: CValuesRef<GtkWidget>?): CPointer<GtkSettings>?

@CCall("knifunptr_libgtk32865_gtk_widget_get_clipboard")
external fun gtk_widget_get_clipboard(widget: CValuesRef<GtkWidget>?, selection: GdkAtom?): CPointer<GtkClipboard>?

@CCall("knifunptr_libgtk32866_gtk_widget_get_hexpand")
external fun gtk_widget_get_hexpand(widget: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk32867_gtk_widget_set_hexpand")
external fun gtk_widget_set_hexpand(widget: CValuesRef<GtkWidget>?, expand: gboolean): Unit

@CCall("knifunptr_libgtk32868_gtk_widget_get_hexpand_set")
external fun gtk_widget_get_hexpand_set(widget: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk32869_gtk_widget_set_hexpand_set")
external fun gtk_widget_set_hexpand_set(widget: CValuesRef<GtkWidget>?, set: gboolean): Unit

@CCall("knifunptr_libgtk32870_gtk_widget_get_vexpand")
external fun gtk_widget_get_vexpand(widget: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk32871_gtk_widget_set_vexpand")
external fun gtk_widget_set_vexpand(widget: CValuesRef<GtkWidget>?, expand: gboolean): Unit

@CCall("knifunptr_libgtk32872_gtk_widget_get_vexpand_set")
external fun gtk_widget_get_vexpand_set(widget: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk32873_gtk_widget_set_vexpand_set")
external fun gtk_widget_set_vexpand_set(widget: CValuesRef<GtkWidget>?, set: gboolean): Unit

@CCall("knifunptr_libgtk32874_gtk_widget_queue_compute_expand")
external fun gtk_widget_queue_compute_expand(widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk32875_gtk_widget_compute_expand")
external fun gtk_widget_compute_expand(widget: CValuesRef<GtkWidget>?, orientation: GtkOrientation): gboolean

@CCall("knifunptr_libgtk32876_gtk_widget_get_support_multidevice")
external fun gtk_widget_get_support_multidevice(widget: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk32877_gtk_widget_set_support_multidevice")
external fun gtk_widget_set_support_multidevice(widget: CValuesRef<GtkWidget>?, support_multidevice: gboolean): Unit

@CCall("knifunptr_libgtk32878_gtk_widget_class_set_accessible_type")
external fun gtk_widget_class_set_accessible_type(widget_class: CValuesRef<GtkWidgetClass>?, type: GType): Unit

@CCall("knifunptr_libgtk32879_gtk_widget_class_set_accessible_role")
external fun gtk_widget_class_set_accessible_role(widget_class: CValuesRef<GtkWidgetClass>?, role: AtkRole): Unit

@CCall("knifunptr_libgtk32880_gtk_widget_get_accessible")
external fun gtk_widget_get_accessible(widget: CValuesRef<GtkWidget>?): CPointer<AtkObject>?

@CCall("knifunptr_libgtk32881_gtk_widget_get_halign")
external fun gtk_widget_get_halign(widget: CValuesRef<GtkWidget>?): GtkAlign

@CCall("knifunptr_libgtk32882_gtk_widget_set_halign")
external fun gtk_widget_set_halign(widget: CValuesRef<GtkWidget>?, align: GtkAlign): Unit

@CCall("knifunptr_libgtk32883_gtk_widget_get_valign")
external fun gtk_widget_get_valign(widget: CValuesRef<GtkWidget>?): GtkAlign

@CCall("knifunptr_libgtk32884_gtk_widget_get_valign_with_baseline")
external fun gtk_widget_get_valign_with_baseline(widget: CValuesRef<GtkWidget>?): GtkAlign

@CCall("knifunptr_libgtk32885_gtk_widget_set_valign")
external fun gtk_widget_set_valign(widget: CValuesRef<GtkWidget>?, align: GtkAlign): Unit

@CCall("knifunptr_libgtk32886_gtk_widget_get_margin_left")
external fun gtk_widget_get_margin_left(widget: CValuesRef<GtkWidget>?): gint

@CCall("knifunptr_libgtk32887_gtk_widget_set_margin_left")
external fun gtk_widget_set_margin_left(widget: CValuesRef<GtkWidget>?, margin: gint): Unit

@CCall("knifunptr_libgtk32888_gtk_widget_get_margin_right")
external fun gtk_widget_get_margin_right(widget: CValuesRef<GtkWidget>?): gint

@CCall("knifunptr_libgtk32889_gtk_widget_set_margin_right")
external fun gtk_widget_set_margin_right(widget: CValuesRef<GtkWidget>?, margin: gint): Unit

@CCall("knifunptr_libgtk32890_gtk_widget_get_margin_start")
external fun gtk_widget_get_margin_start(widget: CValuesRef<GtkWidget>?): gint

@CCall("knifunptr_libgtk32891_gtk_widget_set_margin_start")
external fun gtk_widget_set_margin_start(widget: CValuesRef<GtkWidget>?, margin: gint): Unit

@CCall("knifunptr_libgtk32892_gtk_widget_get_margin_end")
external fun gtk_widget_get_margin_end(widget: CValuesRef<GtkWidget>?): gint

@CCall("knifunptr_libgtk32893_gtk_widget_set_margin_end")
external fun gtk_widget_set_margin_end(widget: CValuesRef<GtkWidget>?, margin: gint): Unit

@CCall("knifunptr_libgtk32894_gtk_widget_get_margin_top")
external fun gtk_widget_get_margin_top(widget: CValuesRef<GtkWidget>?): gint

@CCall("knifunptr_libgtk32895_gtk_widget_set_margin_top")
external fun gtk_widget_set_margin_top(widget: CValuesRef<GtkWidget>?, margin: gint): Unit

@CCall("knifunptr_libgtk32896_gtk_widget_get_margin_bottom")
external fun gtk_widget_get_margin_bottom(widget: CValuesRef<GtkWidget>?): gint

@CCall("knifunptr_libgtk32897_gtk_widget_set_margin_bottom")
external fun gtk_widget_set_margin_bottom(widget: CValuesRef<GtkWidget>?, margin: gint): Unit

@CCall("knifunptr_libgtk32898_gtk_widget_get_events")
external fun gtk_widget_get_events(widget: CValuesRef<GtkWidget>?): gint

@CCall("knifunptr_libgtk32899_gtk_widget_get_device_events")
external fun gtk_widget_get_device_events(widget: CValuesRef<GtkWidget>?, device: CValuesRef<GdkDevice>?): GdkEventMask

@CCall("knifunptr_libgtk32900_gtk_widget_get_pointer")
external fun gtk_widget_get_pointer(widget: CValuesRef<GtkWidget>?, x: CValuesRef<gintVar>?, y: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk32901_gtk_widget_is_ancestor")
external fun gtk_widget_is_ancestor(widget: CValuesRef<GtkWidget>?, ancestor: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk32902_gtk_widget_translate_coordinates")
external fun gtk_widget_translate_coordinates(src_widget: CValuesRef<GtkWidget>?, dest_widget: CValuesRef<GtkWidget>?, src_x: gint, src_y: gint, dest_x: CValuesRef<gintVar>?, dest_y: CValuesRef<gintVar>?): gboolean

@CCall("knifunptr_libgtk32903_gtk_widget_hide_on_delete")
external fun gtk_widget_hide_on_delete(widget: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk32904_gtk_widget_override_color")
external fun gtk_widget_override_color(widget: CValuesRef<GtkWidget>?, state: GtkStateFlags, color: CValuesRef<GdkRGBA>?): Unit

@CCall("knifunptr_libgtk32905_gtk_widget_override_background_color")
external fun gtk_widget_override_background_color(widget: CValuesRef<GtkWidget>?, state: GtkStateFlags, color: CValuesRef<GdkRGBA>?): Unit

@CCall("knifunptr_libgtk32906_gtk_widget_override_font")
external fun gtk_widget_override_font(widget: CValuesRef<GtkWidget>?, font_desc: CValuesRef<PangoFontDescription>?): Unit

@CCall("knifunptr_libgtk32907_gtk_widget_override_symbolic_color")
external fun gtk_widget_override_symbolic_color(widget: CValuesRef<GtkWidget>?, @CCall.CString name: String?, color: CValuesRef<GdkRGBA>?): Unit

@CCall("knifunptr_libgtk32908_gtk_widget_override_cursor")
external fun gtk_widget_override_cursor(widget: CValuesRef<GtkWidget>?, cursor: CValuesRef<GdkRGBA>?, secondary_cursor: CValuesRef<GdkRGBA>?): Unit

@CCall("knifunptr_libgtk32909_gtk_widget_reset_style")
external fun gtk_widget_reset_style(widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk32910_gtk_widget_create_pango_context")
external fun gtk_widget_create_pango_context(widget: CValuesRef<GtkWidget>?): CPointer<PangoContext>?

@CCall("knifunptr_libgtk32911_gtk_widget_get_pango_context")
external fun gtk_widget_get_pango_context(widget: CValuesRef<GtkWidget>?): CPointer<PangoContext>?

@CCall("knifunptr_libgtk32912_gtk_widget_set_font_options")
external fun gtk_widget_set_font_options(widget: CValuesRef<GtkWidget>?, options: CValuesRef<cairo_font_options_t>?): Unit

@CCall("knifunptr_libgtk32913_gtk_widget_get_font_options")
external fun gtk_widget_get_font_options(widget: CValuesRef<GtkWidget>?): CPointer<cairo_font_options_t>?

@CCall("knifunptr_libgtk32914_gtk_widget_create_pango_layout")
external fun gtk_widget_create_pango_layout(widget: CValuesRef<GtkWidget>?, @CCall.CString text: String?): CPointer<PangoLayout>?

@CCall("knifunptr_libgtk32915_gtk_widget_render_icon_pixbuf")
external fun gtk_widget_render_icon_pixbuf(widget: CValuesRef<GtkWidget>?, @CCall.CString stock_id: String?, size: GtkIconSize): CPointer<GdkPixbuf>?

@CCall("knifunptr_libgtk32916_gtk_widget_set_composite_name")
external fun gtk_widget_set_composite_name(widget: CValuesRef<GtkWidget>?, @CCall.CString name: String?): Unit

@CCall("knifunptr_libgtk32917_gtk_widget_get_composite_name")
external fun gtk_widget_get_composite_name(widget: CValuesRef<GtkWidget>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk32918_gtk_widget_push_composite_child")
external fun gtk_widget_push_composite_child(): Unit

@CCall("knifunptr_libgtk32919_gtk_widget_pop_composite_child")
external fun gtk_widget_pop_composite_child(): Unit

@CCall("knifunptr_libgtk32920_gtk_widget_class_install_style_property")
external fun gtk_widget_class_install_style_property(klass: CValuesRef<GtkWidgetClass>?, pspec: CValuesRef<GParamSpec>?): Unit

@CCall("knifunptr_libgtk32921_gtk_widget_class_install_style_property_parser")
external fun gtk_widget_class_install_style_property_parser(klass: CValuesRef<GtkWidgetClass>?, pspec: CValuesRef<GParamSpec>?, parser: GtkRcPropertyParser?): Unit

@CCall("knifunptr_libgtk32922_gtk_widget_class_find_style_property")
external fun gtk_widget_class_find_style_property(klass: CValuesRef<GtkWidgetClass>?, @CCall.CString property_name: String?): CPointer<GParamSpec>?

@CCall("knifunptr_libgtk32923_gtk_widget_class_list_style_properties")
external fun gtk_widget_class_list_style_properties(klass: CValuesRef<GtkWidgetClass>?, n_properties: CValuesRef<guintVar>?): CPointer<CPointerVar<GParamSpec>>?

@CCall("knifunptr_libgtk32924_gtk_widget_style_get_property")
external fun gtk_widget_style_get_property(widget: CValuesRef<GtkWidget>?, @CCall.CString property_name: String?, value: CValuesRef<GValue>?): Unit

@CCall("knifunptr_libgtk32925_gtk_widget_style_get_valist")
external fun gtk_widget_style_get_valist(widget: CValuesRef<GtkWidget>?, @CCall.CString first_property_name: String?, var_args: va_list?): Unit

@CCall("knifunptr_libgtk32926_gtk_widget_style_get")
external fun gtk_widget_style_get(widget: CValuesRef<GtkWidget>?, @CCall.CString first_property_name: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk32927_gtk_widget_set_direction")
external fun gtk_widget_set_direction(widget: CValuesRef<GtkWidget>?, dir: GtkTextDirection): Unit

@CCall("knifunptr_libgtk32928_gtk_widget_get_direction")
external fun gtk_widget_get_direction(widget: CValuesRef<GtkWidget>?): GtkTextDirection

@CCall("knifunptr_libgtk32929_gtk_widget_set_default_direction")
external fun gtk_widget_set_default_direction(dir: GtkTextDirection): Unit

@CCall("knifunptr_libgtk32930_gtk_widget_get_default_direction")
external fun gtk_widget_get_default_direction(): GtkTextDirection

@CCall("knifunptr_libgtk32931_gtk_widget_is_composited")
external fun gtk_widget_is_composited(widget: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk32932_gtk_widget_shape_combine_region")
external fun gtk_widget_shape_combine_region(widget: CValuesRef<GtkWidget>?, region: CValuesRef<cairo_region_t>?): Unit

@CCall("knifunptr_libgtk32933_gtk_widget_input_shape_combine_region")
external fun gtk_widget_input_shape_combine_region(widget: CValuesRef<GtkWidget>?, region: CValuesRef<cairo_region_t>?): Unit

@CCall("knifunptr_libgtk32934_gtk_widget_list_mnemonic_labels")
external fun gtk_widget_list_mnemonic_labels(widget: CValuesRef<GtkWidget>?): CPointer<GList>?

@CCall("knifunptr_libgtk32935_gtk_widget_add_mnemonic_label")
external fun gtk_widget_add_mnemonic_label(widget: CValuesRef<GtkWidget>?, label: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk32936_gtk_widget_remove_mnemonic_label")
external fun gtk_widget_remove_mnemonic_label(widget: CValuesRef<GtkWidget>?, label: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk32937_gtk_widget_set_tooltip_window")
external fun gtk_widget_set_tooltip_window(widget: CValuesRef<GtkWidget>?, custom_window: CValuesRef<GtkWindow>?): Unit

@CCall("knifunptr_libgtk32938_gtk_widget_get_tooltip_window")
external fun gtk_widget_get_tooltip_window(widget: CValuesRef<GtkWidget>?): CPointer<GtkWindow>?

@CCall("knifunptr_libgtk32939_gtk_widget_trigger_tooltip_query")
external fun gtk_widget_trigger_tooltip_query(widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk32940_gtk_widget_set_tooltip_text")
external fun gtk_widget_set_tooltip_text(widget: CValuesRef<GtkWidget>?, @CCall.CString text: String?): Unit

@CCall("knifunptr_libgtk32941_gtk_widget_get_tooltip_text")
external fun gtk_widget_get_tooltip_text(widget: CValuesRef<GtkWidget>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk32942_gtk_widget_set_tooltip_markup")
external fun gtk_widget_set_tooltip_markup(widget: CValuesRef<GtkWidget>?, @CCall.CString markup: String?): Unit

@CCall("knifunptr_libgtk32943_gtk_widget_get_tooltip_markup")
external fun gtk_widget_get_tooltip_markup(widget: CValuesRef<GtkWidget>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk32944_gtk_widget_set_has_tooltip")
external fun gtk_widget_set_has_tooltip(widget: CValuesRef<GtkWidget>?, has_tooltip: gboolean): Unit

@CCall("knifunptr_libgtk32945_gtk_widget_get_has_tooltip")
external fun gtk_widget_get_has_tooltip(widget: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk32946_gtk_cairo_should_draw_window")
external fun gtk_cairo_should_draw_window(cr: CValuesRef<cairo_t>?, window: CValuesRef<GdkWindow>?): gboolean

@CCall("knifunptr_libgtk32947_gtk_cairo_transform_to_window")
external fun gtk_cairo_transform_to_window(cr: CValuesRef<cairo_t>?, widget: CValuesRef<GtkWidget>?, window: CValuesRef<GdkWindow>?): Unit

@CCall("knifunptr_libgtk32948_gtk_requisition_get_type")
external fun gtk_requisition_get_type(): GType

@CCall("knifunptr_libgtk32949_gtk_requisition_new")
external fun gtk_requisition_new(): CPointer<GtkRequisition>?

@CCall("knifunptr_libgtk32950_gtk_requisition_copy")
external fun gtk_requisition_copy(requisition: CValuesRef<GtkRequisition>?): CPointer<GtkRequisition>?

@CCall("knifunptr_libgtk32951_gtk_requisition_free")
external fun gtk_requisition_free(requisition: CValuesRef<GtkRequisition>?): Unit

@CCall("knifunptr_libgtk32952_gtk_widget_in_destruction")
external fun gtk_widget_in_destruction(widget: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk32953_gtk_widget_get_style_context")
external fun gtk_widget_get_style_context(widget: CValuesRef<GtkWidget>?): CPointer<GtkStyleContext>?

@CCall("knifunptr_libgtk32954_gtk_widget_get_path")
external fun gtk_widget_get_path(widget: CValuesRef<GtkWidget>?): CPointer<GtkWidgetPath>?

@CCall("knifunptr_libgtk32955_gtk_widget_class_set_css_name")
external fun gtk_widget_class_set_css_name(widget_class: CValuesRef<GtkWidgetClass>?, @CCall.CString name: String?): Unit

@CCall("knifunptr_libgtk32956_gtk_widget_class_get_css_name")
external fun gtk_widget_class_get_css_name(widget_class: CValuesRef<GtkWidgetClass>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk32957_gtk_widget_get_modifier_mask")
external fun gtk_widget_get_modifier_mask(widget: CValuesRef<GtkWidget>?, intent: GdkModifierIntent): GdkModifierType

@CCall("knifunptr_libgtk32958_gtk_widget_insert_action_group")
external fun gtk_widget_insert_action_group(widget: CValuesRef<GtkWidget>?, @CCall.CString name: String?, group: CValuesRef<GActionGroup>?): Unit

@CCall("knifunptr_libgtk32959_gtk_widget_add_tick_callback")
external fun gtk_widget_add_tick_callback(widget: CValuesRef<GtkWidget>?, callback: GtkTickCallback?, user_data: gpointer?, notify: GDestroyNotify?): guint

@CCall("knifunptr_libgtk32960_gtk_widget_remove_tick_callback")
external fun gtk_widget_remove_tick_callback(widget: CValuesRef<GtkWidget>?, id: guint): Unit

@CCall("knifunptr_libgtk32961_gtk_widget_init_template")
external fun gtk_widget_init_template(widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk32962_gtk_widget_get_template_child")
external fun gtk_widget_get_template_child(widget: CValuesRef<GtkWidget>?, widget_type: GType, @CCall.CString name: String?): CPointer<GObject>?

@CCall("knifunptr_libgtk32963_gtk_widget_class_set_template")
external fun gtk_widget_class_set_template(widget_class: CValuesRef<GtkWidgetClass>?, template_bytes: CValuesRef<GBytes>?): Unit

@CCall("knifunptr_libgtk32964_gtk_widget_class_set_template_from_resource")
external fun gtk_widget_class_set_template_from_resource(widget_class: CValuesRef<GtkWidgetClass>?, @CCall.CString resource_name: String?): Unit

@CCall("knifunptr_libgtk32965_gtk_widget_class_bind_template_callback_full")
external fun gtk_widget_class_bind_template_callback_full(widget_class: CValuesRef<GtkWidgetClass>?, @CCall.CString callback_name: String?, callback_symbol: GCallback?): Unit

@CCall("knifunptr_libgtk32966_gtk_widget_class_set_connect_func")
external fun gtk_widget_class_set_connect_func(widget_class: CValuesRef<GtkWidgetClass>?, connect_func: GtkBuilderConnectFunc?, connect_data: gpointer?, connect_data_destroy: GDestroyNotify?): Unit

@CCall("knifunptr_libgtk32967_gtk_widget_class_bind_template_child_full")
external fun gtk_widget_class_bind_template_child_full(widget_class: CValuesRef<GtkWidgetClass>?, @CCall.CString name: String?, internal_child: gboolean, struct_offset: gssize): Unit

@CCall("knifunptr_libgtk32968_gtk_widget_get_action_group")
external fun gtk_widget_get_action_group(widget: CValuesRef<GtkWidget>?, @CCall.CString prefix: String?): CPointer<GActionGroup>?

@CCall("knifunptr_libgtk32969_gtk_widget_list_action_prefixes")
external fun gtk_widget_list_action_prefixes(widget: CValuesRef<GtkWidget>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_libgtk32970_gtk_widget_set_font_map")
external fun gtk_widget_set_font_map(widget: CValuesRef<GtkWidget>?, font_map: CValuesRef<PangoFontMap>?): Unit

@CCall("knifunptr_libgtk32971_gtk_widget_get_font_map")
external fun gtk_widget_get_font_map(widget: CValuesRef<GtkWidget>?): CPointer<PangoFontMap>?

@CCall("knifunptr_libgtk32972_glib_autoptr_cleanup_GtkWidget")
external fun glib_autoptr_cleanup_GtkWidget(_ptr: CValuesRef<CPointerVar<GtkWidget>>?): Unit

@CCall("knifunptr_libgtk32973_glib_listautoptr_cleanup_GtkWidget")
external fun glib_listautoptr_cleanup_GtkWidget(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32974_glib_slistautoptr_cleanup_GtkWidget")
external fun glib_slistautoptr_cleanup_GtkWidget(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32975_glib_autoptr_cleanup_GtkRequisition")
external fun glib_autoptr_cleanup_GtkRequisition(_ptr: CValuesRef<CPointerVar<GtkRequisition>>?): Unit

@CCall("knifunptr_libgtk32976_glib_listautoptr_cleanup_GtkRequisition")
external fun glib_listautoptr_cleanup_GtkRequisition(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk32977_glib_slistautoptr_cleanup_GtkRequisition")
external fun glib_slistautoptr_cleanup_GtkRequisition(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk32978_gtk_application_get_type")
external fun gtk_application_get_type(): GType

@CCall("knifunptr_libgtk32979_gtk_application_new")
external fun gtk_application_new(@CCall.CString application_id: String?, flags: GApplicationFlags): CPointer<GtkApplication>?

@CCall("knifunptr_libgtk32980_gtk_application_add_window")
external fun gtk_application_add_window(application: CValuesRef<GtkApplication>?, window: CValuesRef<GtkWindow>?): Unit

@CCall("knifunptr_libgtk32981_gtk_application_remove_window")
external fun gtk_application_remove_window(application: CValuesRef<GtkApplication>?, window: CValuesRef<GtkWindow>?): Unit

@CCall("knifunptr_libgtk32982_gtk_application_get_windows")
external fun gtk_application_get_windows(application: CValuesRef<GtkApplication>?): CPointer<GList>?

@CCall("knifunptr_libgtk32983_gtk_application_get_app_menu")
external fun gtk_application_get_app_menu(application: CValuesRef<GtkApplication>?): CPointer<GMenuModel>?

@CCall("knifunptr_libgtk32984_gtk_application_set_app_menu")
external fun gtk_application_set_app_menu(application: CValuesRef<GtkApplication>?, app_menu: CValuesRef<GMenuModel>?): Unit

@CCall("knifunptr_libgtk32985_gtk_application_get_menubar")
external fun gtk_application_get_menubar(application: CValuesRef<GtkApplication>?): CPointer<GMenuModel>?

@CCall("knifunptr_libgtk32986_gtk_application_set_menubar")
external fun gtk_application_set_menubar(application: CValuesRef<GtkApplication>?, menubar: CValuesRef<GMenuModel>?): Unit

@CCall("knifunptr_libgtk32987_gtk_application_add_accelerator")
external fun gtk_application_add_accelerator(application: CValuesRef<GtkApplication>?, @CCall.CString accelerator: String?, @CCall.CString action_name: String?, parameter: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_libgtk32988_gtk_application_remove_accelerator")
external fun gtk_application_remove_accelerator(application: CValuesRef<GtkApplication>?, @CCall.CString action_name: String?, parameter: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_libgtk32989_gtk_application_inhibit")
external fun gtk_application_inhibit(application: CValuesRef<GtkApplication>?, window: CValuesRef<GtkWindow>?, flags: GtkApplicationInhibitFlags, @CCall.CString reason: String?): guint

@CCall("knifunptr_libgtk32990_gtk_application_uninhibit")
external fun gtk_application_uninhibit(application: CValuesRef<GtkApplication>?, cookie: guint): Unit

@CCall("knifunptr_libgtk32991_gtk_application_is_inhibited")
external fun gtk_application_is_inhibited(application: CValuesRef<GtkApplication>?, flags: GtkApplicationInhibitFlags): gboolean

@CCall("knifunptr_libgtk32992_gtk_application_get_window_by_id")
external fun gtk_application_get_window_by_id(application: CValuesRef<GtkApplication>?, id: guint): CPointer<GtkWindow>?

@CCall("knifunptr_libgtk32993_gtk_application_get_active_window")
external fun gtk_application_get_active_window(application: CValuesRef<GtkApplication>?): CPointer<GtkWindow>?

@CCall("knifunptr_libgtk32994_gtk_application_list_action_descriptions")
external fun gtk_application_list_action_descriptions(application: CValuesRef<GtkApplication>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_libgtk32995_gtk_application_get_accels_for_action")
external fun gtk_application_get_accels_for_action(application: CValuesRef<GtkApplication>?, @CCall.CString detailed_action_name: String?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_libgtk32996_gtk_application_get_actions_for_accel")
external fun gtk_application_get_actions_for_accel(application: CValuesRef<GtkApplication>?, @CCall.CString accel: String?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_libgtk32997_gtk_application_set_accels_for_action")
external fun gtk_application_set_accels_for_action(application: CValuesRef<GtkApplication>?, @CCall.CString detailed_action_name: String?, accels: CValuesRef<CPointerVar<gcharVar>>?): Unit

@CCall("knifunptr_libgtk32998_gtk_application_prefers_app_menu")
external fun gtk_application_prefers_app_menu(application: CValuesRef<GtkApplication>?): gboolean

@CCall("knifunptr_libgtk32999_gtk_application_get_menu_by_id")
external fun gtk_application_get_menu_by_id(application: CValuesRef<GtkApplication>?, @CCall.CString id: String?): CPointer<GMenu>?

@CCall("knifunptr_libgtk33000_glib_autoptr_cleanup_GtkApplication")
external fun glib_autoptr_cleanup_GtkApplication(_ptr: CValuesRef<CPointerVar<GtkApplication>>?): Unit

@CCall("knifunptr_libgtk33001_glib_listautoptr_cleanup_GtkApplication")
external fun glib_listautoptr_cleanup_GtkApplication(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk33002_glib_slistautoptr_cleanup_GtkApplication")
external fun glib_slistautoptr_cleanup_GtkApplication(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk33003_gtk_container_get_type")
external fun gtk_container_get_type(): GType

@CCall("knifunptr_libgtk33004_gtk_container_set_border_width")
external fun gtk_container_set_border_width(container: CValuesRef<GtkContainer>?, border_width: guint): Unit

@CCall("knifunptr_libgtk33005_gtk_container_get_border_width")
external fun gtk_container_get_border_width(container: CValuesRef<GtkContainer>?): guint

@CCall("knifunptr_libgtk33006_gtk_container_add")
external fun gtk_container_add(container: CValuesRef<GtkContainer>?, widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk33007_gtk_container_remove")
external fun gtk_container_remove(container: CValuesRef<GtkContainer>?, widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk33008_gtk_container_set_resize_mode")
external fun gtk_container_set_resize_mode(container: CValuesRef<GtkContainer>?, resize_mode: GtkResizeMode): Unit

@CCall("knifunptr_libgtk33009_gtk_container_get_resize_mode")
external fun gtk_container_get_resize_mode(container: CValuesRef<GtkContainer>?): GtkResizeMode

@CCall("knifunptr_libgtk33010_gtk_container_check_resize")
external fun gtk_container_check_resize(container: CValuesRef<GtkContainer>?): Unit

@CCall("knifunptr_libgtk33011_gtk_container_foreach")
external fun gtk_container_foreach(container: CValuesRef<GtkContainer>?, callback: GtkCallback?, callback_data: gpointer?): Unit

@CCall("knifunptr_libgtk33012_gtk_container_get_children")
external fun gtk_container_get_children(container: CValuesRef<GtkContainer>?): CPointer<GList>?

@CCall("knifunptr_libgtk33013_gtk_container_propagate_draw")
external fun gtk_container_propagate_draw(container: CValuesRef<GtkContainer>?, child: CValuesRef<GtkWidget>?, cr: CValuesRef<cairo_t>?): Unit

@CCall("knifunptr_libgtk33014_gtk_container_set_focus_chain")
external fun gtk_container_set_focus_chain(container: CValuesRef<GtkContainer>?, focusable_widgets: CValuesRef<GList>?): Unit

@CCall("knifunptr_libgtk33015_gtk_container_get_focus_chain")
external fun gtk_container_get_focus_chain(container: CValuesRef<GtkContainer>?, focusable_widgets: CValuesRef<CPointerVar<GList>>?): gboolean

@CCall("knifunptr_libgtk33016_gtk_container_unset_focus_chain")
external fun gtk_container_unset_focus_chain(container: CValuesRef<GtkContainer>?): Unit

@CCall("knifunptr_libgtk33017_gtk_container_set_reallocate_redraws")
external fun gtk_container_set_reallocate_redraws(container: CValuesRef<GtkContainer>?, needs_redraws: gboolean): Unit

@CCall("knifunptr_libgtk33018_gtk_container_set_focus_child")
external fun gtk_container_set_focus_child(container: CValuesRef<GtkContainer>?, child: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk33019_gtk_container_get_focus_child")
external fun gtk_container_get_focus_child(container: CValuesRef<GtkContainer>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33020_gtk_container_set_focus_vadjustment")
external fun gtk_container_set_focus_vadjustment(container: CValuesRef<GtkContainer>?, adjustment: CValuesRef<GtkAdjustment>?): Unit

@CCall("knifunptr_libgtk33021_gtk_container_get_focus_vadjustment")
external fun gtk_container_get_focus_vadjustment(container: CValuesRef<GtkContainer>?): CPointer<GtkAdjustment>?

@CCall("knifunptr_libgtk33022_gtk_container_set_focus_hadjustment")
external fun gtk_container_set_focus_hadjustment(container: CValuesRef<GtkContainer>?, adjustment: CValuesRef<GtkAdjustment>?): Unit

@CCall("knifunptr_libgtk33023_gtk_container_get_focus_hadjustment")
external fun gtk_container_get_focus_hadjustment(container: CValuesRef<GtkContainer>?): CPointer<GtkAdjustment>?

@CCall("knifunptr_libgtk33024_gtk_container_resize_children")
external fun gtk_container_resize_children(container: CValuesRef<GtkContainer>?): Unit

@CCall("knifunptr_libgtk33025_gtk_container_child_type")
external fun gtk_container_child_type(container: CValuesRef<GtkContainer>?): GType

@CCall("knifunptr_libgtk33026_gtk_container_class_install_child_property")
external fun gtk_container_class_install_child_property(cclass: CValuesRef<GtkContainerClass>?, property_id: guint, pspec: CValuesRef<GParamSpec>?): Unit

@CCall("knifunptr_libgtk33027_gtk_container_class_install_child_properties")
external fun gtk_container_class_install_child_properties(cclass: CValuesRef<GtkContainerClass>?, n_pspecs: guint, pspecs: CValuesRef<CPointerVar<GParamSpec>>?): Unit

@CCall("knifunptr_libgtk33028_gtk_container_class_find_child_property")
external fun gtk_container_class_find_child_property(cclass: CValuesRef<GObjectClass>?, @CCall.CString property_name: String?): CPointer<GParamSpec>?

@CCall("knifunptr_libgtk33029_gtk_container_class_list_child_properties")
external fun gtk_container_class_list_child_properties(cclass: CValuesRef<GObjectClass>?, n_properties: CValuesRef<guintVar>?): CPointer<CPointerVar<GParamSpec>>?

@CCall("knifunptr_libgtk33030_gtk_container_add_with_properties")
external fun gtk_container_add_with_properties(container: CValuesRef<GtkContainer>?, widget: CValuesRef<GtkWidget>?, @CCall.CString first_prop_name: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk33031_gtk_container_child_set")
external fun gtk_container_child_set(container: CValuesRef<GtkContainer>?, child: CValuesRef<GtkWidget>?, @CCall.CString first_prop_name: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk33032_gtk_container_child_get")
external fun gtk_container_child_get(container: CValuesRef<GtkContainer>?, child: CValuesRef<GtkWidget>?, @CCall.CString first_prop_name: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk33033_gtk_container_child_set_valist")
external fun gtk_container_child_set_valist(container: CValuesRef<GtkContainer>?, child: CValuesRef<GtkWidget>?, @CCall.CString first_property_name: String?, var_args: va_list?): Unit

@CCall("knifunptr_libgtk33034_gtk_container_child_get_valist")
external fun gtk_container_child_get_valist(container: CValuesRef<GtkContainer>?, child: CValuesRef<GtkWidget>?, @CCall.CString first_property_name: String?, var_args: va_list?): Unit

@CCall("knifunptr_libgtk33035_gtk_container_child_set_property")
external fun gtk_container_child_set_property(container: CValuesRef<GtkContainer>?, child: CValuesRef<GtkWidget>?, @CCall.CString property_name: String?, value: CValuesRef<GValue>?): Unit

@CCall("knifunptr_libgtk33036_gtk_container_child_get_property")
external fun gtk_container_child_get_property(container: CValuesRef<GtkContainer>?, child: CValuesRef<GtkWidget>?, @CCall.CString property_name: String?, value: CValuesRef<GValue>?): Unit

@CCall("knifunptr_libgtk33037_gtk_container_child_notify")
external fun gtk_container_child_notify(container: CValuesRef<GtkContainer>?, child: CValuesRef<GtkWidget>?, @CCall.CString child_property: String?): Unit

@CCall("knifunptr_libgtk33038_gtk_container_child_notify_by_pspec")
external fun gtk_container_child_notify_by_pspec(container: CValuesRef<GtkContainer>?, child: CValuesRef<GtkWidget>?, pspec: CValuesRef<GParamSpec>?): Unit

@CCall("knifunptr_libgtk33039_gtk_container_forall")
external fun gtk_container_forall(container: CValuesRef<GtkContainer>?, callback: GtkCallback?, callback_data: gpointer?): Unit

@CCall("knifunptr_libgtk33040_gtk_container_class_handle_border_width")
external fun gtk_container_class_handle_border_width(klass: CValuesRef<GtkContainerClass>?): Unit

@CCall("knifunptr_libgtk33041_gtk_container_get_path_for_child")
external fun gtk_container_get_path_for_child(container: CValuesRef<GtkContainer>?, child: CValuesRef<GtkWidget>?): CPointer<GtkWidgetPath>?

@CCall("knifunptr_libgtk33042_glib_autoptr_cleanup_GtkContainer")
external fun glib_autoptr_cleanup_GtkContainer(_ptr: CValuesRef<CPointerVar<GtkContainer>>?): Unit

@CCall("knifunptr_libgtk33043_glib_listautoptr_cleanup_GtkContainer")
external fun glib_listautoptr_cleanup_GtkContainer(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk33044_glib_slistautoptr_cleanup_GtkContainer")
external fun glib_slistautoptr_cleanup_GtkContainer(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk33045_gtk_bin_get_type")
external fun gtk_bin_get_type(): GType

@CCall("knifunptr_libgtk33046_gtk_bin_get_child")
external fun gtk_bin_get_child(bin: CValuesRef<GtkBin>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33047__gtk_bin_set_child")
external fun _gtk_bin_set_child(bin: CValuesRef<GtkBin>?, widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk33048_glib_autoptr_cleanup_GtkBin")
external fun glib_autoptr_cleanup_GtkBin(_ptr: CValuesRef<CPointerVar<GtkBin>>?): Unit

@CCall("knifunptr_libgtk33049_glib_listautoptr_cleanup_GtkBin")
external fun glib_listautoptr_cleanup_GtkBin(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk33050_glib_slistautoptr_cleanup_GtkBin")
external fun glib_slistautoptr_cleanup_GtkBin(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk33051_gtk_window_get_type")
external fun gtk_window_get_type(): GType

@CCall("knifunptr_libgtk33052_gtk_window_new")
external fun gtk_window_new(type: GtkWindowType): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33053_gtk_window_set_title")
external fun gtk_window_set_title(window: CValuesRef<GtkWindow>?, @CCall.CString title: String?): Unit

@CCall("knifunptr_libgtk33054_gtk_window_get_title")
external fun gtk_window_get_title(window: CValuesRef<GtkWindow>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk33055_gtk_window_set_wmclass")
external fun gtk_window_set_wmclass(window: CValuesRef<GtkWindow>?, @CCall.CString wmclass_name: String?, @CCall.CString wmclass_class: String?): Unit

@CCall("knifunptr_libgtk33056_gtk_window_set_role")
external fun gtk_window_set_role(window: CValuesRef<GtkWindow>?, @CCall.CString role: String?): Unit

@CCall("knifunptr_libgtk33057_gtk_window_set_startup_id")
external fun gtk_window_set_startup_id(window: CValuesRef<GtkWindow>?, @CCall.CString startup_id: String?): Unit

@CCall("knifunptr_libgtk33058_gtk_window_get_role")
external fun gtk_window_get_role(window: CValuesRef<GtkWindow>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk33059_gtk_window_add_accel_group")
external fun gtk_window_add_accel_group(window: CValuesRef<GtkWindow>?, accel_group: CValuesRef<GtkAccelGroup>?): Unit

@CCall("knifunptr_libgtk33060_gtk_window_remove_accel_group")
external fun gtk_window_remove_accel_group(window: CValuesRef<GtkWindow>?, accel_group: CValuesRef<GtkAccelGroup>?): Unit

@CCall("knifunptr_libgtk33061_gtk_window_set_position")
external fun gtk_window_set_position(window: CValuesRef<GtkWindow>?, position: GtkWindowPosition): Unit

@CCall("knifunptr_libgtk33062_gtk_window_activate_focus")
external fun gtk_window_activate_focus(window: CValuesRef<GtkWindow>?): gboolean

@CCall("knifunptr_libgtk33063_gtk_window_set_focus")
external fun gtk_window_set_focus(window: CValuesRef<GtkWindow>?, focus: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk33064_gtk_window_get_focus")
external fun gtk_window_get_focus(window: CValuesRef<GtkWindow>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33065_gtk_window_set_default")
external fun gtk_window_set_default(window: CValuesRef<GtkWindow>?, default_widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk33066_gtk_window_get_default_widget")
external fun gtk_window_get_default_widget(window: CValuesRef<GtkWindow>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33067_gtk_window_activate_default")
external fun gtk_window_activate_default(window: CValuesRef<GtkWindow>?): gboolean

@CCall("knifunptr_libgtk33068_gtk_window_set_transient_for")
external fun gtk_window_set_transient_for(window: CValuesRef<GtkWindow>?, parent: CValuesRef<GtkWindow>?): Unit

@CCall("knifunptr_libgtk33069_gtk_window_get_transient_for")
external fun gtk_window_get_transient_for(window: CValuesRef<GtkWindow>?): CPointer<GtkWindow>?

@CCall("knifunptr_libgtk33070_gtk_window_set_attached_to")
external fun gtk_window_set_attached_to(window: CValuesRef<GtkWindow>?, attach_widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk33071_gtk_window_get_attached_to")
external fun gtk_window_get_attached_to(window: CValuesRef<GtkWindow>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33072_gtk_window_set_opacity")
external fun gtk_window_set_opacity(window: CValuesRef<GtkWindow>?, opacity: gdouble): Unit

@CCall("knifunptr_libgtk33073_gtk_window_get_opacity")
external fun gtk_window_get_opacity(window: CValuesRef<GtkWindow>?): gdouble

@CCall("knifunptr_libgtk33074_gtk_window_set_type_hint")
external fun gtk_window_set_type_hint(window: CValuesRef<GtkWindow>?, hint: GdkWindowTypeHint): Unit

@CCall("knifunptr_libgtk33075_gtk_window_get_type_hint")
external fun gtk_window_get_type_hint(window: CValuesRef<GtkWindow>?): GdkWindowTypeHint

@CCall("knifunptr_libgtk33076_gtk_window_set_skip_taskbar_hint")
external fun gtk_window_set_skip_taskbar_hint(window: CValuesRef<GtkWindow>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk33077_gtk_window_get_skip_taskbar_hint")
external fun gtk_window_get_skip_taskbar_hint(window: CValuesRef<GtkWindow>?): gboolean

@CCall("knifunptr_libgtk33078_gtk_window_set_skip_pager_hint")
external fun gtk_window_set_skip_pager_hint(window: CValuesRef<GtkWindow>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk33079_gtk_window_get_skip_pager_hint")
external fun gtk_window_get_skip_pager_hint(window: CValuesRef<GtkWindow>?): gboolean

@CCall("knifunptr_libgtk33080_gtk_window_set_urgency_hint")
external fun gtk_window_set_urgency_hint(window: CValuesRef<GtkWindow>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk33081_gtk_window_get_urgency_hint")
external fun gtk_window_get_urgency_hint(window: CValuesRef<GtkWindow>?): gboolean

@CCall("knifunptr_libgtk33082_gtk_window_set_accept_focus")
external fun gtk_window_set_accept_focus(window: CValuesRef<GtkWindow>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk33083_gtk_window_get_accept_focus")
external fun gtk_window_get_accept_focus(window: CValuesRef<GtkWindow>?): gboolean

@CCall("knifunptr_libgtk33084_gtk_window_set_focus_on_map")
external fun gtk_window_set_focus_on_map(window: CValuesRef<GtkWindow>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk33085_gtk_window_get_focus_on_map")
external fun gtk_window_get_focus_on_map(window: CValuesRef<GtkWindow>?): gboolean

@CCall("knifunptr_libgtk33086_gtk_window_set_destroy_with_parent")
external fun gtk_window_set_destroy_with_parent(window: CValuesRef<GtkWindow>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk33087_gtk_window_get_destroy_with_parent")
external fun gtk_window_get_destroy_with_parent(window: CValuesRef<GtkWindow>?): gboolean

@CCall("knifunptr_libgtk33088_gtk_window_set_hide_titlebar_when_maximized")
external fun gtk_window_set_hide_titlebar_when_maximized(window: CValuesRef<GtkWindow>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk33089_gtk_window_get_hide_titlebar_when_maximized")
external fun gtk_window_get_hide_titlebar_when_maximized(window: CValuesRef<GtkWindow>?): gboolean

@CCall("knifunptr_libgtk33090_gtk_window_set_mnemonics_visible")
external fun gtk_window_set_mnemonics_visible(window: CValuesRef<GtkWindow>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk33091_gtk_window_get_mnemonics_visible")
external fun gtk_window_get_mnemonics_visible(window: CValuesRef<GtkWindow>?): gboolean

@CCall("knifunptr_libgtk33092_gtk_window_set_focus_visible")
external fun gtk_window_set_focus_visible(window: CValuesRef<GtkWindow>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk33093_gtk_window_get_focus_visible")
external fun gtk_window_get_focus_visible(window: CValuesRef<GtkWindow>?): gboolean

@CCall("knifunptr_libgtk33094_gtk_window_set_resizable")
external fun gtk_window_set_resizable(window: CValuesRef<GtkWindow>?, resizable: gboolean): Unit

@CCall("knifunptr_libgtk33095_gtk_window_get_resizable")
external fun gtk_window_get_resizable(window: CValuesRef<GtkWindow>?): gboolean

@CCall("knifunptr_libgtk33096_gtk_window_set_gravity")
external fun gtk_window_set_gravity(window: CValuesRef<GtkWindow>?, gravity: GdkGravity): Unit

@CCall("knifunptr_libgtk33097_gtk_window_get_gravity")
external fun gtk_window_get_gravity(window: CValuesRef<GtkWindow>?): GdkGravity

@CCall("knifunptr_libgtk33098_gtk_window_set_geometry_hints")
external fun gtk_window_set_geometry_hints(window: CValuesRef<GtkWindow>?, geometry_widget: CValuesRef<GtkWidget>?, geometry: CValuesRef<GdkGeometry>?, geom_mask: GdkWindowHints): Unit

@CCall("knifunptr_libgtk33099_gtk_window_set_screen")
external fun gtk_window_set_screen(window: CValuesRef<GtkWindow>?, screen: CValuesRef<GdkScreen>?): Unit

@CCall("knifunptr_libgtk33100_gtk_window_get_screen")
external fun gtk_window_get_screen(window: CValuesRef<GtkWindow>?): CPointer<GdkScreen>?

@CCall("knifunptr_libgtk33101_gtk_window_is_active")
external fun gtk_window_is_active(window: CValuesRef<GtkWindow>?): gboolean

@CCall("knifunptr_libgtk33102_gtk_window_has_toplevel_focus")
external fun gtk_window_has_toplevel_focus(window: CValuesRef<GtkWindow>?): gboolean

@CCall("knifunptr_libgtk33103_gtk_window_set_decorated")
external fun gtk_window_set_decorated(window: CValuesRef<GtkWindow>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk33104_gtk_window_get_decorated")
external fun gtk_window_get_decorated(window: CValuesRef<GtkWindow>?): gboolean

@CCall("knifunptr_libgtk33105_gtk_window_set_deletable")
external fun gtk_window_set_deletable(window: CValuesRef<GtkWindow>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk33106_gtk_window_get_deletable")
external fun gtk_window_get_deletable(window: CValuesRef<GtkWindow>?): gboolean

@CCall("knifunptr_libgtk33107_gtk_window_set_icon_list")
external fun gtk_window_set_icon_list(window: CValuesRef<GtkWindow>?, list: CValuesRef<GList>?): Unit

@CCall("knifunptr_libgtk33108_gtk_window_get_icon_list")
external fun gtk_window_get_icon_list(window: CValuesRef<GtkWindow>?): CPointer<GList>?

@CCall("knifunptr_libgtk33109_gtk_window_set_icon")
external fun gtk_window_set_icon(window: CValuesRef<GtkWindow>?, icon: CValuesRef<GdkPixbuf>?): Unit

@CCall("knifunptr_libgtk33110_gtk_window_set_icon_name")
external fun gtk_window_set_icon_name(window: CValuesRef<GtkWindow>?, @CCall.CString name: String?): Unit

@CCall("knifunptr_libgtk33111_gtk_window_set_icon_from_file")
external fun gtk_window_set_icon_from_file(window: CValuesRef<GtkWindow>?, @CCall.CString filename: String?, err: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk33112_gtk_window_get_icon")
external fun gtk_window_get_icon(window: CValuesRef<GtkWindow>?): CPointer<GdkPixbuf>?

@CCall("knifunptr_libgtk33113_gtk_window_get_icon_name")
external fun gtk_window_get_icon_name(window: CValuesRef<GtkWindow>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk33114_gtk_window_set_default_icon_list")
external fun gtk_window_set_default_icon_list(list: CValuesRef<GList>?): Unit

@CCall("knifunptr_libgtk33115_gtk_window_get_default_icon_list")
external fun gtk_window_get_default_icon_list(): CPointer<GList>?

@CCall("knifunptr_libgtk33116_gtk_window_set_default_icon")
external fun gtk_window_set_default_icon(icon: CValuesRef<GdkPixbuf>?): Unit

@CCall("knifunptr_libgtk33117_gtk_window_set_default_icon_name")
external fun gtk_window_set_default_icon_name(@CCall.CString name: String?): Unit

@CCall("knifunptr_libgtk33118_gtk_window_get_default_icon_name")
external fun gtk_window_get_default_icon_name(): CPointer<gcharVar>?

@CCall("knifunptr_libgtk33119_gtk_window_set_default_icon_from_file")
external fun gtk_window_set_default_icon_from_file(@CCall.CString filename: String?, err: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk33120_gtk_window_set_auto_startup_notification")
external fun gtk_window_set_auto_startup_notification(setting: gboolean): Unit

@CCall("knifunptr_libgtk33121_gtk_window_set_modal")
external fun gtk_window_set_modal(window: CValuesRef<GtkWindow>?, modal: gboolean): Unit

@CCall("knifunptr_libgtk33122_gtk_window_get_modal")
external fun gtk_window_get_modal(window: CValuesRef<GtkWindow>?): gboolean

@CCall("knifunptr_libgtk33123_gtk_window_list_toplevels")
external fun gtk_window_list_toplevels(): CPointer<GList>?

@CCall("knifunptr_libgtk33124_gtk_window_set_has_user_ref_count")
external fun gtk_window_set_has_user_ref_count(window: CValuesRef<GtkWindow>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk33125_gtk_window_add_mnemonic")
external fun gtk_window_add_mnemonic(window: CValuesRef<GtkWindow>?, keyval: guint, target: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk33126_gtk_window_remove_mnemonic")
external fun gtk_window_remove_mnemonic(window: CValuesRef<GtkWindow>?, keyval: guint, target: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk33127_gtk_window_mnemonic_activate")
external fun gtk_window_mnemonic_activate(window: CValuesRef<GtkWindow>?, keyval: guint, modifier: GdkModifierType): gboolean

@CCall("knifunptr_libgtk33128_gtk_window_set_mnemonic_modifier")
external fun gtk_window_set_mnemonic_modifier(window: CValuesRef<GtkWindow>?, modifier: GdkModifierType): Unit

@CCall("knifunptr_libgtk33129_gtk_window_get_mnemonic_modifier")
external fun gtk_window_get_mnemonic_modifier(window: CValuesRef<GtkWindow>?): GdkModifierType

@CCall("knifunptr_libgtk33130_gtk_window_activate_key")
external fun gtk_window_activate_key(window: CValuesRef<GtkWindow>?, event: CValuesRef<GdkEventKey>?): gboolean

@CCall("knifunptr_libgtk33131_gtk_window_propagate_key_event")
external fun gtk_window_propagate_key_event(window: CValuesRef<GtkWindow>?, event: CValuesRef<GdkEventKey>?): gboolean

@CCall("knifunptr_libgtk33132_gtk_window_present")
external fun gtk_window_present(window: CValuesRef<GtkWindow>?): Unit

@CCall("knifunptr_libgtk33133_gtk_window_present_with_time")
external fun gtk_window_present_with_time(window: CValuesRef<GtkWindow>?, timestamp: guint32): Unit

@CCall("knifunptr_libgtk33134_gtk_window_iconify")
external fun gtk_window_iconify(window: CValuesRef<GtkWindow>?): Unit

@CCall("knifunptr_libgtk33135_gtk_window_deiconify")
external fun gtk_window_deiconify(window: CValuesRef<GtkWindow>?): Unit

@CCall("knifunptr_libgtk33136_gtk_window_stick")
external fun gtk_window_stick(window: CValuesRef<GtkWindow>?): Unit

@CCall("knifunptr_libgtk33137_gtk_window_unstick")
external fun gtk_window_unstick(window: CValuesRef<GtkWindow>?): Unit

@CCall("knifunptr_libgtk33138_gtk_window_maximize")
external fun gtk_window_maximize(window: CValuesRef<GtkWindow>?): Unit

@CCall("knifunptr_libgtk33139_gtk_window_unmaximize")
external fun gtk_window_unmaximize(window: CValuesRef<GtkWindow>?): Unit

@CCall("knifunptr_libgtk33140_gtk_window_fullscreen")
external fun gtk_window_fullscreen(window: CValuesRef<GtkWindow>?): Unit

@CCall("knifunptr_libgtk33141_gtk_window_unfullscreen")
external fun gtk_window_unfullscreen(window: CValuesRef<GtkWindow>?): Unit

@CCall("knifunptr_libgtk33142_gtk_window_fullscreen_on_monitor")
external fun gtk_window_fullscreen_on_monitor(window: CValuesRef<GtkWindow>?, screen: CValuesRef<GdkScreen>?, monitor: gint): Unit

@CCall("knifunptr_libgtk33143_gtk_window_close")
external fun gtk_window_close(window: CValuesRef<GtkWindow>?): Unit

@CCall("knifunptr_libgtk33144_gtk_window_set_keep_above")
external fun gtk_window_set_keep_above(window: CValuesRef<GtkWindow>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk33145_gtk_window_set_keep_below")
external fun gtk_window_set_keep_below(window: CValuesRef<GtkWindow>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk33146_gtk_window_begin_resize_drag")
external fun gtk_window_begin_resize_drag(window: CValuesRef<GtkWindow>?, edge: GdkWindowEdge, button: gint, root_x: gint, root_y: gint, timestamp: guint32): Unit

@CCall("knifunptr_libgtk33147_gtk_window_begin_move_drag")
external fun gtk_window_begin_move_drag(window: CValuesRef<GtkWindow>?, button: gint, root_x: gint, root_y: gint, timestamp: guint32): Unit

@CCall("knifunptr_libgtk33148_gtk_window_set_default_size")
external fun gtk_window_set_default_size(window: CValuesRef<GtkWindow>?, width: gint, height: gint): Unit

@CCall("knifunptr_libgtk33149_gtk_window_get_default_size")
external fun gtk_window_get_default_size(window: CValuesRef<GtkWindow>?, width: CValuesRef<gintVar>?, height: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk33150_gtk_window_resize")
external fun gtk_window_resize(window: CValuesRef<GtkWindow>?, width: gint, height: gint): Unit

@CCall("knifunptr_libgtk33151_gtk_window_get_size")
external fun gtk_window_get_size(window: CValuesRef<GtkWindow>?, width: CValuesRef<gintVar>?, height: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk33152_gtk_window_move")
external fun gtk_window_move(window: CValuesRef<GtkWindow>?, x: gint, y: gint): Unit

@CCall("knifunptr_libgtk33153_gtk_window_get_position")
external fun gtk_window_get_position(window: CValuesRef<GtkWindow>?, root_x: CValuesRef<gintVar>?, root_y: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk33154_gtk_window_parse_geometry")
external fun gtk_window_parse_geometry(window: CValuesRef<GtkWindow>?, @CCall.CString geometry: String?): gboolean

@CCall("knifunptr_libgtk33155_gtk_window_set_default_geometry")
external fun gtk_window_set_default_geometry(window: CValuesRef<GtkWindow>?, width: gint, height: gint): Unit

@CCall("knifunptr_libgtk33156_gtk_window_resize_to_geometry")
external fun gtk_window_resize_to_geometry(window: CValuesRef<GtkWindow>?, width: gint, height: gint): Unit

@CCall("knifunptr_libgtk33157_gtk_window_get_group")
external fun gtk_window_get_group(window: CValuesRef<GtkWindow>?): CPointer<GtkWindowGroup>?

@CCall("knifunptr_libgtk33158_gtk_window_has_group")
external fun gtk_window_has_group(window: CValuesRef<GtkWindow>?): gboolean

@CCall("knifunptr_libgtk33159_gtk_window_reshow_with_initial_size")
external fun gtk_window_reshow_with_initial_size(window: CValuesRef<GtkWindow>?): Unit

@CCall("knifunptr_libgtk33160_gtk_window_get_window_type")
external fun gtk_window_get_window_type(window: CValuesRef<GtkWindow>?): GtkWindowType

@CCall("knifunptr_libgtk33161_gtk_window_get_application")
external fun gtk_window_get_application(window: CValuesRef<GtkWindow>?): CPointer<GtkApplication>?

@CCall("knifunptr_libgtk33162_gtk_window_set_application")
external fun gtk_window_set_application(window: CValuesRef<GtkWindow>?, application: CValuesRef<GtkApplication>?): Unit

@CCall("knifunptr_libgtk33163_gtk_window_set_has_resize_grip")
external fun gtk_window_set_has_resize_grip(window: CValuesRef<GtkWindow>?, value: gboolean): Unit

@CCall("knifunptr_libgtk33164_gtk_window_get_has_resize_grip")
external fun gtk_window_get_has_resize_grip(window: CValuesRef<GtkWindow>?): gboolean

@CCall("knifunptr_libgtk33165_gtk_window_resize_grip_is_visible")
external fun gtk_window_resize_grip_is_visible(window: CValuesRef<GtkWindow>?): gboolean

@CCall("knifunptr_libgtk33166_gtk_window_get_resize_grip_area")
external fun gtk_window_get_resize_grip_area(window: CValuesRef<GtkWindow>?, rect: CValuesRef<GdkRectangle>?): gboolean

@CCall("knifunptr_libgtk33167_gtk_window_set_titlebar")
external fun gtk_window_set_titlebar(window: CValuesRef<GtkWindow>?, titlebar: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk33168_gtk_window_get_titlebar")
external fun gtk_window_get_titlebar(window: CValuesRef<GtkWindow>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33169_gtk_window_is_maximized")
external fun gtk_window_is_maximized(window: CValuesRef<GtkWindow>?): gboolean

@CCall("knifunptr_libgtk33170_gtk_window_set_interactive_debugging")
external fun gtk_window_set_interactive_debugging(enable: gboolean): Unit

@CCall("knifunptr_libgtk33171_glib_autoptr_cleanup_GtkWindow")
external fun glib_autoptr_cleanup_GtkWindow(_ptr: CValuesRef<CPointerVar<GtkWindow>>?): Unit

@CCall("knifunptr_libgtk33172_glib_listautoptr_cleanup_GtkWindow")
external fun glib_listautoptr_cleanup_GtkWindow(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk33173_glib_slistautoptr_cleanup_GtkWindow")
external fun glib_slistautoptr_cleanup_GtkWindow(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk33174_glib_autoptr_cleanup_GtkWindowGroup")
external fun glib_autoptr_cleanup_GtkWindowGroup(_ptr: CValuesRef<CPointerVar<GtkWindowGroup>>?): Unit

@CCall("knifunptr_libgtk33175_glib_listautoptr_cleanup_GtkWindowGroup")
external fun glib_listautoptr_cleanup_GtkWindowGroup(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk33176_glib_slistautoptr_cleanup_GtkWindowGroup")
external fun glib_slistautoptr_cleanup_GtkWindowGroup(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk33177_gtk_dialog_get_type")
external fun gtk_dialog_get_type(): GType

@CCall("knifunptr_libgtk33178_gtk_dialog_new")
external fun gtk_dialog_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33179_gtk_dialog_new_with_buttons")
external fun gtk_dialog_new_with_buttons(@CCall.CString title: String?, parent: CValuesRef<GtkWindow>?, flags: GtkDialogFlags, @CCall.CString first_button_text: String?, vararg variadicArguments: Any?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33180_gtk_dialog_add_action_widget")
external fun gtk_dialog_add_action_widget(dialog: CValuesRef<GtkDialog>?, child: CValuesRef<GtkWidget>?, response_id: gint): Unit

@CCall("knifunptr_libgtk33181_gtk_dialog_add_button")
external fun gtk_dialog_add_button(dialog: CValuesRef<GtkDialog>?, @CCall.CString button_text: String?, response_id: gint): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33182_gtk_dialog_add_buttons")
external fun gtk_dialog_add_buttons(dialog: CValuesRef<GtkDialog>?, @CCall.CString first_button_text: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk33183_gtk_dialog_set_response_sensitive")
external fun gtk_dialog_set_response_sensitive(dialog: CValuesRef<GtkDialog>?, response_id: gint, setting: gboolean): Unit

@CCall("knifunptr_libgtk33184_gtk_dialog_set_default_response")
external fun gtk_dialog_set_default_response(dialog: CValuesRef<GtkDialog>?, response_id: gint): Unit

@CCall("knifunptr_libgtk33185_gtk_dialog_get_widget_for_response")
external fun gtk_dialog_get_widget_for_response(dialog: CValuesRef<GtkDialog>?, response_id: gint): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33186_gtk_dialog_get_response_for_widget")
external fun gtk_dialog_get_response_for_widget(dialog: CValuesRef<GtkDialog>?, widget: CValuesRef<GtkWidget>?): gint

@CCall("knifunptr_libgtk33187_gtk_alternative_dialog_button_order")
external fun gtk_alternative_dialog_button_order(screen: CValuesRef<GdkScreen>?): gboolean

@CCall("knifunptr_libgtk33188_gtk_dialog_set_alternative_button_order")
external fun gtk_dialog_set_alternative_button_order(dialog: CValuesRef<GtkDialog>?, first_response_id: gint, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk33189_gtk_dialog_set_alternative_button_order_from_array")
external fun gtk_dialog_set_alternative_button_order_from_array(dialog: CValuesRef<GtkDialog>?, n_params: gint, new_order: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk33190_gtk_dialog_response")
external fun gtk_dialog_response(dialog: CValuesRef<GtkDialog>?, response_id: gint): Unit

@CCall("knifunptr_libgtk33191_gtk_dialog_run")
external fun gtk_dialog_run(dialog: CValuesRef<GtkDialog>?): gint

@CCall("knifunptr_libgtk33192_gtk_dialog_get_action_area")
external fun gtk_dialog_get_action_area(dialog: CValuesRef<GtkDialog>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33193_gtk_dialog_get_content_area")
external fun gtk_dialog_get_content_area(dialog: CValuesRef<GtkDialog>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33194_gtk_dialog_get_header_bar")
external fun gtk_dialog_get_header_bar(dialog: CValuesRef<GtkDialog>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33195_glib_autoptr_cleanup_GtkDialog")
external fun glib_autoptr_cleanup_GtkDialog(_ptr: CValuesRef<CPointerVar<GtkDialog>>?): Unit

@CCall("knifunptr_libgtk33196_glib_listautoptr_cleanup_GtkDialog")
external fun glib_listautoptr_cleanup_GtkDialog(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk33197_glib_slistautoptr_cleanup_GtkDialog")
external fun glib_slistautoptr_cleanup_GtkDialog(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk33198_gtk_about_dialog_get_type")
external fun gtk_about_dialog_get_type(): GType

@CCall("knifunptr_libgtk33199_gtk_about_dialog_new")
external fun gtk_about_dialog_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33200_gtk_show_about_dialog")
external fun gtk_show_about_dialog(parent: CValuesRef<GtkWindow>?, @CCall.CString first_property_name: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk33201_gtk_about_dialog_get_program_name")
external fun gtk_about_dialog_get_program_name(about: CValuesRef<GtkAboutDialog>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk33202_gtk_about_dialog_set_program_name")
external fun gtk_about_dialog_set_program_name(about: CValuesRef<GtkAboutDialog>?, @CCall.CString name: String?): Unit

@CCall("knifunptr_libgtk33203_gtk_about_dialog_get_version")
external fun gtk_about_dialog_get_version(about: CValuesRef<GtkAboutDialog>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk33204_gtk_about_dialog_set_version")
external fun gtk_about_dialog_set_version(about: CValuesRef<GtkAboutDialog>?, @CCall.CString version: String?): Unit

@CCall("knifunptr_libgtk33205_gtk_about_dialog_get_copyright")
external fun gtk_about_dialog_get_copyright(about: CValuesRef<GtkAboutDialog>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk33206_gtk_about_dialog_set_copyright")
external fun gtk_about_dialog_set_copyright(about: CValuesRef<GtkAboutDialog>?, @CCall.CString copyright: String?): Unit

@CCall("knifunptr_libgtk33207_gtk_about_dialog_get_comments")
external fun gtk_about_dialog_get_comments(about: CValuesRef<GtkAboutDialog>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk33208_gtk_about_dialog_set_comments")
external fun gtk_about_dialog_set_comments(about: CValuesRef<GtkAboutDialog>?, @CCall.CString comments: String?): Unit

@CCall("knifunptr_libgtk33209_gtk_about_dialog_get_license")
external fun gtk_about_dialog_get_license(about: CValuesRef<GtkAboutDialog>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk33210_gtk_about_dialog_set_license")
external fun gtk_about_dialog_set_license(about: CValuesRef<GtkAboutDialog>?, @CCall.CString license: String?): Unit

@CCall("knifunptr_libgtk33211_gtk_about_dialog_set_license_type")
external fun gtk_about_dialog_set_license_type(about: CValuesRef<GtkAboutDialog>?, license_type: GtkLicense): Unit

@CCall("knifunptr_libgtk33212_gtk_about_dialog_get_license_type")
external fun gtk_about_dialog_get_license_type(about: CValuesRef<GtkAboutDialog>?): GtkLicense

@CCall("knifunptr_libgtk33213_gtk_about_dialog_get_wrap_license")
external fun gtk_about_dialog_get_wrap_license(about: CValuesRef<GtkAboutDialog>?): gboolean

@CCall("knifunptr_libgtk33214_gtk_about_dialog_set_wrap_license")
external fun gtk_about_dialog_set_wrap_license(about: CValuesRef<GtkAboutDialog>?, wrap_license: gboolean): Unit

@CCall("knifunptr_libgtk33215_gtk_about_dialog_get_website")
external fun gtk_about_dialog_get_website(about: CValuesRef<GtkAboutDialog>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk33216_gtk_about_dialog_set_website")
external fun gtk_about_dialog_set_website(about: CValuesRef<GtkAboutDialog>?, @CCall.CString website: String?): Unit

@CCall("knifunptr_libgtk33217_gtk_about_dialog_get_website_label")
external fun gtk_about_dialog_get_website_label(about: CValuesRef<GtkAboutDialog>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk33218_gtk_about_dialog_set_website_label")
external fun gtk_about_dialog_set_website_label(about: CValuesRef<GtkAboutDialog>?, @CCall.CString website_label: String?): Unit

@CCall("knifunptr_libgtk33219_gtk_about_dialog_get_authors")
external fun gtk_about_dialog_get_authors(about: CValuesRef<GtkAboutDialog>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_libgtk33220_gtk_about_dialog_set_authors")
external fun gtk_about_dialog_set_authors(about: CValuesRef<GtkAboutDialog>?, authors: CValuesRef<CPointerVar<gcharVar>>?): Unit

@CCall("knifunptr_libgtk33221_gtk_about_dialog_get_documenters")
external fun gtk_about_dialog_get_documenters(about: CValuesRef<GtkAboutDialog>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_libgtk33222_gtk_about_dialog_set_documenters")
external fun gtk_about_dialog_set_documenters(about: CValuesRef<GtkAboutDialog>?, documenters: CValuesRef<CPointerVar<gcharVar>>?): Unit

@CCall("knifunptr_libgtk33223_gtk_about_dialog_get_artists")
external fun gtk_about_dialog_get_artists(about: CValuesRef<GtkAboutDialog>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_libgtk33224_gtk_about_dialog_set_artists")
external fun gtk_about_dialog_set_artists(about: CValuesRef<GtkAboutDialog>?, artists: CValuesRef<CPointerVar<gcharVar>>?): Unit

@CCall("knifunptr_libgtk33225_gtk_about_dialog_get_translator_credits")
external fun gtk_about_dialog_get_translator_credits(about: CValuesRef<GtkAboutDialog>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk33226_gtk_about_dialog_set_translator_credits")
external fun gtk_about_dialog_set_translator_credits(about: CValuesRef<GtkAboutDialog>?, @CCall.CString translator_credits: String?): Unit

@CCall("knifunptr_libgtk33227_gtk_about_dialog_get_logo")
external fun gtk_about_dialog_get_logo(about: CValuesRef<GtkAboutDialog>?): CPointer<GdkPixbuf>?

@CCall("knifunptr_libgtk33228_gtk_about_dialog_set_logo")
external fun gtk_about_dialog_set_logo(about: CValuesRef<GtkAboutDialog>?, logo: CValuesRef<GdkPixbuf>?): Unit

@CCall("knifunptr_libgtk33229_gtk_about_dialog_get_logo_icon_name")
external fun gtk_about_dialog_get_logo_icon_name(about: CValuesRef<GtkAboutDialog>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk33230_gtk_about_dialog_set_logo_icon_name")
external fun gtk_about_dialog_set_logo_icon_name(about: CValuesRef<GtkAboutDialog>?, @CCall.CString icon_name: String?): Unit

@CCall("knifunptr_libgtk33231_gtk_about_dialog_add_credit_section")
external fun gtk_about_dialog_add_credit_section(about: CValuesRef<GtkAboutDialog>?, @CCall.CString section_name: String?, people: CValuesRef<CPointerVar<gcharVar>>?): Unit

@CCall("knifunptr_libgtk33232_glib_autoptr_cleanup_GtkAboutDialog")
external fun glib_autoptr_cleanup_GtkAboutDialog(_ptr: CValuesRef<CPointerVar<GtkAboutDialog>>?): Unit

@CCall("knifunptr_libgtk33233_glib_listautoptr_cleanup_GtkAboutDialog")
external fun glib_listautoptr_cleanup_GtkAboutDialog(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk33234_glib_slistautoptr_cleanup_GtkAboutDialog")
external fun glib_slistautoptr_cleanup_GtkAboutDialog(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk33235_gtk_menu_shell_get_type")
external fun gtk_menu_shell_get_type(): GType

@CCall("knifunptr_libgtk33236_gtk_menu_shell_append")
external fun gtk_menu_shell_append(menu_shell: CValuesRef<GtkMenuShell>?, child: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk33237_gtk_menu_shell_prepend")
external fun gtk_menu_shell_prepend(menu_shell: CValuesRef<GtkMenuShell>?, child: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk33238_gtk_menu_shell_insert")
external fun gtk_menu_shell_insert(menu_shell: CValuesRef<GtkMenuShell>?, child: CValuesRef<GtkWidget>?, position: gint): Unit

@CCall("knifunptr_libgtk33239_gtk_menu_shell_deactivate")
external fun gtk_menu_shell_deactivate(menu_shell: CValuesRef<GtkMenuShell>?): Unit

@CCall("knifunptr_libgtk33240_gtk_menu_shell_select_item")
external fun gtk_menu_shell_select_item(menu_shell: CValuesRef<GtkMenuShell>?, menu_item: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk33241_gtk_menu_shell_deselect")
external fun gtk_menu_shell_deselect(menu_shell: CValuesRef<GtkMenuShell>?): Unit

@CCall("knifunptr_libgtk33242_gtk_menu_shell_activate_item")
external fun gtk_menu_shell_activate_item(menu_shell: CValuesRef<GtkMenuShell>?, menu_item: CValuesRef<GtkWidget>?, force_deactivate: gboolean): Unit

@CCall("knifunptr_libgtk33243_gtk_menu_shell_select_first")
external fun gtk_menu_shell_select_first(menu_shell: CValuesRef<GtkMenuShell>?, search_sensitive: gboolean): Unit

@CCall("knifunptr_libgtk33244_gtk_menu_shell_cancel")
external fun gtk_menu_shell_cancel(menu_shell: CValuesRef<GtkMenuShell>?): Unit

@CCall("knifunptr_libgtk33245_gtk_menu_shell_get_take_focus")
external fun gtk_menu_shell_get_take_focus(menu_shell: CValuesRef<GtkMenuShell>?): gboolean

@CCall("knifunptr_libgtk33246_gtk_menu_shell_set_take_focus")
external fun gtk_menu_shell_set_take_focus(menu_shell: CValuesRef<GtkMenuShell>?, take_focus: gboolean): Unit

@CCall("knifunptr_libgtk33247_gtk_menu_shell_get_selected_item")
external fun gtk_menu_shell_get_selected_item(menu_shell: CValuesRef<GtkMenuShell>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33248_gtk_menu_shell_get_parent_shell")
external fun gtk_menu_shell_get_parent_shell(menu_shell: CValuesRef<GtkMenuShell>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33249_gtk_menu_shell_bind_model")
external fun gtk_menu_shell_bind_model(menu_shell: CValuesRef<GtkMenuShell>?, model: CValuesRef<GMenuModel>?, @CCall.CString action_namespace: String?, with_separators: gboolean): Unit

@CCall("knifunptr_libgtk33250_glib_autoptr_cleanup_GtkMenuShell")
external fun glib_autoptr_cleanup_GtkMenuShell(_ptr: CValuesRef<CPointerVar<GtkMenuShell>>?): Unit

@CCall("knifunptr_libgtk33251_glib_listautoptr_cleanup_GtkMenuShell")
external fun glib_listautoptr_cleanup_GtkMenuShell(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk33252_glib_slistautoptr_cleanup_GtkMenuShell")
external fun glib_slistautoptr_cleanup_GtkMenuShell(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk33253_gtk_menu_get_type")
external fun gtk_menu_get_type(): GType

@CCall("knifunptr_libgtk33254_gtk_menu_new")
external fun gtk_menu_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33255_gtk_menu_new_from_model")
external fun gtk_menu_new_from_model(model: CValuesRef<GMenuModel>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33256_gtk_menu_popup")
external fun gtk_menu_popup(menu: CValuesRef<GtkMenu>?, parent_menu_shell: CValuesRef<GtkWidget>?, parent_menu_item: CValuesRef<GtkWidget>?, func: GtkMenuPositionFunc?, data: gpointer?, button: guint, activate_time: guint32): Unit

@CCall("knifunptr_libgtk33257_gtk_menu_popup_for_device")
external fun gtk_menu_popup_for_device(menu: CValuesRef<GtkMenu>?, device: CValuesRef<GdkDevice>?, parent_menu_shell: CValuesRef<GtkWidget>?, parent_menu_item: CValuesRef<GtkWidget>?, func: GtkMenuPositionFunc?, data: gpointer?, destroy: GDestroyNotify?, button: guint, activate_time: guint32): Unit

@CCall("knifunptr_libgtk33258_gtk_menu_popup_at_rect")
external fun gtk_menu_popup_at_rect(menu: CValuesRef<GtkMenu>?, rect_window: CValuesRef<GdkWindow>?, rect: CValuesRef<GdkRectangle>?, rect_anchor: GdkGravity, menu_anchor: GdkGravity, trigger_event: CValuesRef<GdkEvent>?): Unit

@CCall("knifunptr_libgtk33259_gtk_menu_popup_at_widget")
external fun gtk_menu_popup_at_widget(menu: CValuesRef<GtkMenu>?, widget: CValuesRef<GtkWidget>?, widget_anchor: GdkGravity, menu_anchor: GdkGravity, trigger_event: CValuesRef<GdkEvent>?): Unit

@CCall("knifunptr_libgtk33260_gtk_menu_popup_at_pointer")
external fun gtk_menu_popup_at_pointer(menu: CValuesRef<GtkMenu>?, trigger_event: CValuesRef<GdkEvent>?): Unit

@CCall("knifunptr_libgtk33261_gtk_menu_reposition")
external fun gtk_menu_reposition(menu: CValuesRef<GtkMenu>?): Unit

@CCall("knifunptr_libgtk33262_gtk_menu_popdown")
external fun gtk_menu_popdown(menu: CValuesRef<GtkMenu>?): Unit

@CCall("knifunptr_libgtk33263_gtk_menu_get_active")
external fun gtk_menu_get_active(menu: CValuesRef<GtkMenu>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33264_gtk_menu_set_active")
external fun gtk_menu_set_active(menu: CValuesRef<GtkMenu>?, index: guint): Unit

@CCall("knifunptr_libgtk33265_gtk_menu_set_accel_group")
external fun gtk_menu_set_accel_group(menu: CValuesRef<GtkMenu>?, accel_group: CValuesRef<GtkAccelGroup>?): Unit

@CCall("knifunptr_libgtk33266_gtk_menu_get_accel_group")
external fun gtk_menu_get_accel_group(menu: CValuesRef<GtkMenu>?): CPointer<GtkAccelGroup>?

@CCall("knifunptr_libgtk33267_gtk_menu_set_accel_path")
external fun gtk_menu_set_accel_path(menu: CValuesRef<GtkMenu>?, @CCall.CString accel_path: String?): Unit

@CCall("knifunptr_libgtk33268_gtk_menu_get_accel_path")
external fun gtk_menu_get_accel_path(menu: CValuesRef<GtkMenu>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk33269_gtk_menu_attach_to_widget")
external fun gtk_menu_attach_to_widget(menu: CValuesRef<GtkMenu>?, attach_widget: CValuesRef<GtkWidget>?, detacher: GtkMenuDetachFunc?): Unit

@CCall("knifunptr_libgtk33270_gtk_menu_detach")
external fun gtk_menu_detach(menu: CValuesRef<GtkMenu>?): Unit

@CCall("knifunptr_libgtk33271_gtk_menu_get_attach_widget")
external fun gtk_menu_get_attach_widget(menu: CValuesRef<GtkMenu>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33272_gtk_menu_set_tearoff_state")
external fun gtk_menu_set_tearoff_state(menu: CValuesRef<GtkMenu>?, torn_off: gboolean): Unit

@CCall("knifunptr_libgtk33273_gtk_menu_get_tearoff_state")
external fun gtk_menu_get_tearoff_state(menu: CValuesRef<GtkMenu>?): gboolean

@CCall("knifunptr_libgtk33274_gtk_menu_set_title")
external fun gtk_menu_set_title(menu: CValuesRef<GtkMenu>?, @CCall.CString title: String?): Unit

@CCall("knifunptr_libgtk33275_gtk_menu_get_title")
external fun gtk_menu_get_title(menu: CValuesRef<GtkMenu>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk33276_gtk_menu_reorder_child")
external fun gtk_menu_reorder_child(menu: CValuesRef<GtkMenu>?, child: CValuesRef<GtkWidget>?, position: gint): Unit

@CCall("knifunptr_libgtk33277_gtk_menu_set_screen")
external fun gtk_menu_set_screen(menu: CValuesRef<GtkMenu>?, screen: CValuesRef<GdkScreen>?): Unit

@CCall("knifunptr_libgtk33278_gtk_menu_attach")
external fun gtk_menu_attach(menu: CValuesRef<GtkMenu>?, child: CValuesRef<GtkWidget>?, left_attach: guint, right_attach: guint, top_attach: guint, bottom_attach: guint): Unit

@CCall("knifunptr_libgtk33279_gtk_menu_set_monitor")
external fun gtk_menu_set_monitor(menu: CValuesRef<GtkMenu>?, monitor_num: gint): Unit

@CCall("knifunptr_libgtk33280_gtk_menu_get_monitor")
external fun gtk_menu_get_monitor(menu: CValuesRef<GtkMenu>?): gint

@CCall("knifunptr_libgtk33281_gtk_menu_place_on_monitor")
external fun gtk_menu_place_on_monitor(menu: CValuesRef<GtkMenu>?, monitor: CValuesRef<GdkMonitor>?): Unit

@CCall("knifunptr_libgtk33282_gtk_menu_get_for_attach_widget")
external fun gtk_menu_get_for_attach_widget(widget: CValuesRef<GtkWidget>?): CPointer<GList>?

@CCall("knifunptr_libgtk33283_gtk_menu_set_reserve_toggle_size")
external fun gtk_menu_set_reserve_toggle_size(menu: CValuesRef<GtkMenu>?, reserve_toggle_size: gboolean): Unit

@CCall("knifunptr_libgtk33284_gtk_menu_get_reserve_toggle_size")
external fun gtk_menu_get_reserve_toggle_size(menu: CValuesRef<GtkMenu>?): gboolean

@CCall("knifunptr_libgtk33285_glib_autoptr_cleanup_GtkMenu")
external fun glib_autoptr_cleanup_GtkMenu(_ptr: CValuesRef<CPointerVar<GtkMenu>>?): Unit

@CCall("knifunptr_libgtk33286_glib_listautoptr_cleanup_GtkMenu")
external fun glib_listautoptr_cleanup_GtkMenu(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk33287_glib_slistautoptr_cleanup_GtkMenu")
external fun glib_slistautoptr_cleanup_GtkMenu(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk33288_gtk_label_get_type")
external fun gtk_label_get_type(): GType

@CCall("knifunptr_libgtk33289_gtk_label_new")
external fun gtk_label_new(@CCall.CString str: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33290_gtk_label_new_with_mnemonic")
external fun gtk_label_new_with_mnemonic(@CCall.CString str: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33291_gtk_label_set_text")
external fun gtk_label_set_text(label: CValuesRef<GtkLabel>?, @CCall.CString str: String?): Unit

@CCall("knifunptr_libgtk33292_gtk_label_get_text")
external fun gtk_label_get_text(label: CValuesRef<GtkLabel>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk33293_gtk_label_set_attributes")
external fun gtk_label_set_attributes(label: CValuesRef<GtkLabel>?, attrs: CValuesRef<PangoAttrList>?): Unit

@CCall("knifunptr_libgtk33294_gtk_label_get_attributes")
external fun gtk_label_get_attributes(label: CValuesRef<GtkLabel>?): CPointer<PangoAttrList>?

@CCall("knifunptr_libgtk33295_gtk_label_set_label")
external fun gtk_label_set_label(label: CValuesRef<GtkLabel>?, @CCall.CString str: String?): Unit

@CCall("knifunptr_libgtk33296_gtk_label_get_label")
external fun gtk_label_get_label(label: CValuesRef<GtkLabel>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk33297_gtk_label_set_markup")
external fun gtk_label_set_markup(label: CValuesRef<GtkLabel>?, @CCall.CString str: String?): Unit

@CCall("knifunptr_libgtk33298_gtk_label_set_use_markup")
external fun gtk_label_set_use_markup(label: CValuesRef<GtkLabel>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk33299_gtk_label_get_use_markup")
external fun gtk_label_get_use_markup(label: CValuesRef<GtkLabel>?): gboolean

@CCall("knifunptr_libgtk33300_gtk_label_set_use_underline")
external fun gtk_label_set_use_underline(label: CValuesRef<GtkLabel>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk33301_gtk_label_get_use_underline")
external fun gtk_label_get_use_underline(label: CValuesRef<GtkLabel>?): gboolean

@CCall("knifunptr_libgtk33302_gtk_label_set_markup_with_mnemonic")
external fun gtk_label_set_markup_with_mnemonic(label: CValuesRef<GtkLabel>?, @CCall.CString str: String?): Unit

@CCall("knifunptr_libgtk33303_gtk_label_get_mnemonic_keyval")
external fun gtk_label_get_mnemonic_keyval(label: CValuesRef<GtkLabel>?): guint

@CCall("knifunptr_libgtk33304_gtk_label_set_mnemonic_widget")
external fun gtk_label_set_mnemonic_widget(label: CValuesRef<GtkLabel>?, widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk33305_gtk_label_get_mnemonic_widget")
external fun gtk_label_get_mnemonic_widget(label: CValuesRef<GtkLabel>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33306_gtk_label_set_text_with_mnemonic")
external fun gtk_label_set_text_with_mnemonic(label: CValuesRef<GtkLabel>?, @CCall.CString str: String?): Unit

@CCall("knifunptr_libgtk33307_gtk_label_set_justify")
external fun gtk_label_set_justify(label: CValuesRef<GtkLabel>?, jtype: GtkJustification): Unit

@CCall("knifunptr_libgtk33308_gtk_label_get_justify")
external fun gtk_label_get_justify(label: CValuesRef<GtkLabel>?): GtkJustification

@CCall("knifunptr_libgtk33309_gtk_label_set_ellipsize")
external fun gtk_label_set_ellipsize(label: CValuesRef<GtkLabel>?, mode: PangoEllipsizeMode): Unit

@CCall("knifunptr_libgtk33310_gtk_label_get_ellipsize")
external fun gtk_label_get_ellipsize(label: CValuesRef<GtkLabel>?): PangoEllipsizeMode

@CCall("knifunptr_libgtk33311_gtk_label_set_width_chars")
external fun gtk_label_set_width_chars(label: CValuesRef<GtkLabel>?, n_chars: gint): Unit

@CCall("knifunptr_libgtk33312_gtk_label_get_width_chars")
external fun gtk_label_get_width_chars(label: CValuesRef<GtkLabel>?): gint

@CCall("knifunptr_libgtk33313_gtk_label_set_max_width_chars")
external fun gtk_label_set_max_width_chars(label: CValuesRef<GtkLabel>?, n_chars: gint): Unit

@CCall("knifunptr_libgtk33314_gtk_label_get_max_width_chars")
external fun gtk_label_get_max_width_chars(label: CValuesRef<GtkLabel>?): gint

@CCall("knifunptr_libgtk33315_gtk_label_set_lines")
external fun gtk_label_set_lines(label: CValuesRef<GtkLabel>?, lines: gint): Unit

@CCall("knifunptr_libgtk33316_gtk_label_get_lines")
external fun gtk_label_get_lines(label: CValuesRef<GtkLabel>?): gint

@CCall("knifunptr_libgtk33317_gtk_label_set_pattern")
external fun gtk_label_set_pattern(label: CValuesRef<GtkLabel>?, @CCall.CString pattern: String?): Unit

@CCall("knifunptr_libgtk33318_gtk_label_set_line_wrap")
external fun gtk_label_set_line_wrap(label: CValuesRef<GtkLabel>?, wrap: gboolean): Unit

@CCall("knifunptr_libgtk33319_gtk_label_get_line_wrap")
external fun gtk_label_get_line_wrap(label: CValuesRef<GtkLabel>?): gboolean

@CCall("knifunptr_libgtk33320_gtk_label_set_line_wrap_mode")
external fun gtk_label_set_line_wrap_mode(label: CValuesRef<GtkLabel>?, wrap_mode: PangoWrapMode): Unit

@CCall("knifunptr_libgtk33321_gtk_label_get_line_wrap_mode")
external fun gtk_label_get_line_wrap_mode(label: CValuesRef<GtkLabel>?): PangoWrapMode

@CCall("knifunptr_libgtk33322_gtk_label_set_selectable")
external fun gtk_label_set_selectable(label: CValuesRef<GtkLabel>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk33323_gtk_label_get_selectable")
external fun gtk_label_get_selectable(label: CValuesRef<GtkLabel>?): gboolean

@CCall("knifunptr_libgtk33324_gtk_label_set_angle")
external fun gtk_label_set_angle(label: CValuesRef<GtkLabel>?, angle: gdouble): Unit

@CCall("knifunptr_libgtk33325_gtk_label_get_angle")
external fun gtk_label_get_angle(label: CValuesRef<GtkLabel>?): gdouble

@CCall("knifunptr_libgtk33326_gtk_label_select_region")
external fun gtk_label_select_region(label: CValuesRef<GtkLabel>?, start_offset: gint, end_offset: gint): Unit

@CCall("knifunptr_libgtk33327_gtk_label_get_selection_bounds")
external fun gtk_label_get_selection_bounds(label: CValuesRef<GtkLabel>?, start: CValuesRef<gintVar>?, end: CValuesRef<gintVar>?): gboolean

@CCall("knifunptr_libgtk33328_gtk_label_get_layout")
external fun gtk_label_get_layout(label: CValuesRef<GtkLabel>?): CPointer<PangoLayout>?

@CCall("knifunptr_libgtk33329_gtk_label_get_layout_offsets")
external fun gtk_label_get_layout_offsets(label: CValuesRef<GtkLabel>?, x: CValuesRef<gintVar>?, y: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk33330_gtk_label_set_single_line_mode")
external fun gtk_label_set_single_line_mode(label: CValuesRef<GtkLabel>?, single_line_mode: gboolean): Unit

@CCall("knifunptr_libgtk33331_gtk_label_get_single_line_mode")
external fun gtk_label_get_single_line_mode(label: CValuesRef<GtkLabel>?): gboolean

@CCall("knifunptr_libgtk33332_gtk_label_get_current_uri")
external fun gtk_label_get_current_uri(label: CValuesRef<GtkLabel>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk33333_gtk_label_set_track_visited_links")
external fun gtk_label_set_track_visited_links(label: CValuesRef<GtkLabel>?, track_links: gboolean): Unit

@CCall("knifunptr_libgtk33334_gtk_label_get_track_visited_links")
external fun gtk_label_get_track_visited_links(label: CValuesRef<GtkLabel>?): gboolean

@CCall("knifunptr_libgtk33335_gtk_label_set_xalign")
external fun gtk_label_set_xalign(label: CValuesRef<GtkLabel>?, xalign: gfloat): Unit

@CCall("knifunptr_libgtk33336_gtk_label_get_xalign")
external fun gtk_label_get_xalign(label: CValuesRef<GtkLabel>?): gfloat

@CCall("knifunptr_libgtk33337_gtk_label_set_yalign")
external fun gtk_label_set_yalign(label: CValuesRef<GtkLabel>?, yalign: gfloat): Unit

@CCall("knifunptr_libgtk33338_gtk_label_get_yalign")
external fun gtk_label_get_yalign(label: CValuesRef<GtkLabel>?): gfloat

@CCall("knifunptr_libgtk33339_glib_autoptr_cleanup_GtkLabel")
external fun glib_autoptr_cleanup_GtkLabel(_ptr: CValuesRef<CPointerVar<GtkLabel>>?): Unit

@CCall("knifunptr_libgtk33340_glib_listautoptr_cleanup_GtkLabel")
external fun glib_listautoptr_cleanup_GtkLabel(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk33341_glib_slistautoptr_cleanup_GtkLabel")
external fun glib_slistautoptr_cleanup_GtkLabel(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk33342_gtk_accel_label_get_type")
external fun gtk_accel_label_get_type(): GType

@CCall("knifunptr_libgtk33343_gtk_accel_label_new")
external fun gtk_accel_label_new(@CCall.CString string: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33344_gtk_accel_label_get_accel_widget")
external fun gtk_accel_label_get_accel_widget(accel_label: CValuesRef<GtkAccelLabel>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33345_gtk_accel_label_get_accel_width")
external fun gtk_accel_label_get_accel_width(accel_label: CValuesRef<GtkAccelLabel>?): guint

@CCall("knifunptr_libgtk33346_gtk_accel_label_set_accel_widget")
external fun gtk_accel_label_set_accel_widget(accel_label: CValuesRef<GtkAccelLabel>?, accel_widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk33347_gtk_accel_label_set_accel_closure")
external fun gtk_accel_label_set_accel_closure(accel_label: CValuesRef<GtkAccelLabel>?, accel_closure: CValuesRef<GClosure>?): Unit

@CCall("knifunptr_libgtk33348_gtk_accel_label_refetch")
external fun gtk_accel_label_refetch(accel_label: CValuesRef<GtkAccelLabel>?): gboolean

@CCall("knifunptr_libgtk33349_gtk_accel_label_set_accel")
external fun gtk_accel_label_set_accel(accel_label: CValuesRef<GtkAccelLabel>?, accelerator_key: guint, accelerator_mods: GdkModifierType): Unit

@CCall("knifunptr_libgtk33350_gtk_accel_label_get_accel")
external fun gtk_accel_label_get_accel(accel_label: CValuesRef<GtkAccelLabel>?, accelerator_key: CValuesRef<guintVar>?, accelerator_mods: CValuesRef<GdkModifierTypeVar>?): Unit

@CCall("knifunptr_libgtk33351__gtk_accel_label_class_get_accelerator_label")
external fun _gtk_accel_label_class_get_accelerator_label(klass: CValuesRef<GtkAccelLabelClass>?, accelerator_key: guint, accelerator_mods: GdkModifierType): CPointer<gcharVar>?

@CCall("knifunptr_libgtk33352_glib_autoptr_cleanup_GtkAccelLabel")
external fun glib_autoptr_cleanup_GtkAccelLabel(_ptr: CValuesRef<CPointerVar<GtkAccelLabel>>?): Unit

@CCall("knifunptr_libgtk33353_glib_listautoptr_cleanup_GtkAccelLabel")
external fun glib_listautoptr_cleanup_GtkAccelLabel(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk33354_glib_slistautoptr_cleanup_GtkAccelLabel")
external fun glib_slistautoptr_cleanup_GtkAccelLabel(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk33355_gtk_accel_map_add_entry")
external fun gtk_accel_map_add_entry(@CCall.CString accel_path: String?, accel_key: guint, accel_mods: GdkModifierType): Unit

@CCall("knifunptr_libgtk33356_gtk_accel_map_lookup_entry")
external fun gtk_accel_map_lookup_entry(@CCall.CString accel_path: String?, key: CValuesRef<GtkAccelKey>?): gboolean

@CCall("knifunptr_libgtk33357_gtk_accel_map_change_entry")
external fun gtk_accel_map_change_entry(@CCall.CString accel_path: String?, accel_key: guint, accel_mods: GdkModifierType, replace: gboolean): gboolean

@CCall("knifunptr_libgtk33358_gtk_accel_map_load")
external fun gtk_accel_map_load(@CCall.CString file_name: String?): Unit

@CCall("knifunptr_libgtk33359_gtk_accel_map_save")
external fun gtk_accel_map_save(@CCall.CString file_name: String?): Unit

@CCall("knifunptr_libgtk33360_gtk_accel_map_foreach")
external fun gtk_accel_map_foreach(data: gpointer?, foreach_func: GtkAccelMapForeach?): Unit

@CCall("knifunptr_libgtk33361_gtk_accel_map_load_fd")
external fun gtk_accel_map_load_fd(fd: gint): Unit

@CCall("knifunptr_libgtk33362_gtk_accel_map_load_scanner")
external fun gtk_accel_map_load_scanner(scanner: CValuesRef<GScanner>?): Unit

@CCall("knifunptr_libgtk33363_gtk_accel_map_save_fd")
external fun gtk_accel_map_save_fd(fd: gint): Unit

@CCall("knifunptr_libgtk33364_gtk_accel_map_lock_path")
external fun gtk_accel_map_lock_path(@CCall.CString accel_path: String?): Unit

@CCall("knifunptr_libgtk33365_gtk_accel_map_unlock_path")
external fun gtk_accel_map_unlock_path(@CCall.CString accel_path: String?): Unit

@CCall("knifunptr_libgtk33366_gtk_accel_map_add_filter")
external fun gtk_accel_map_add_filter(@CCall.CString filter_pattern: String?): Unit

@CCall("knifunptr_libgtk33367_gtk_accel_map_foreach_unfiltered")
external fun gtk_accel_map_foreach_unfiltered(data: gpointer?, foreach_func: GtkAccelMapForeach?): Unit

@CCall("knifunptr_libgtk33368_gtk_accel_map_get_type")
external fun gtk_accel_map_get_type(): GType

@CCall("knifunptr_libgtk33369_gtk_accel_map_get")
external fun gtk_accel_map_get(): CPointer<GtkAccelMap>?

@CCall("knifunptr_libgtk33370_glib_autoptr_cleanup_GtkAccelMap")
external fun glib_autoptr_cleanup_GtkAccelMap(_ptr: CValuesRef<CPointerVar<GtkAccelMap>>?): Unit

@CCall("knifunptr_libgtk33371_glib_listautoptr_cleanup_GtkAccelMap")
external fun glib_listautoptr_cleanup_GtkAccelMap(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk33372_glib_slistautoptr_cleanup_GtkAccelMap")
external fun glib_slistautoptr_cleanup_GtkAccelMap(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk33373_gtk_accessible_get_type")
external fun gtk_accessible_get_type(): GType

@CCall("knifunptr_libgtk33374_gtk_accessible_set_widget")
external fun gtk_accessible_set_widget(accessible: CValuesRef<GtkAccessible>?, widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk33375_gtk_accessible_get_widget")
external fun gtk_accessible_get_widget(accessible: CValuesRef<GtkAccessible>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33376_gtk_accessible_connect_widget_destroyed")
external fun gtk_accessible_connect_widget_destroyed(accessible: CValuesRef<GtkAccessible>?): Unit

@CCall("knifunptr_libgtk33377_gtk_actionable_get_type")
external fun gtk_actionable_get_type(): GType

@CCall("knifunptr_libgtk33378_gtk_actionable_get_action_name")
external fun gtk_actionable_get_action_name(actionable: CValuesRef<GtkActionable>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk33379_gtk_actionable_set_action_name")
external fun gtk_actionable_set_action_name(actionable: CValuesRef<GtkActionable>?, @CCall.CString action_name: String?): Unit

@CCall("knifunptr_libgtk33380_gtk_actionable_get_action_target_value")
external fun gtk_actionable_get_action_target_value(actionable: CValuesRef<GtkActionable>?): CPointer<GVariant>?

@CCall("knifunptr_libgtk33381_gtk_actionable_set_action_target_value")
external fun gtk_actionable_set_action_target_value(actionable: CValuesRef<GtkActionable>?, target_value: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_libgtk33382_gtk_actionable_set_action_target")
external fun gtk_actionable_set_action_target(actionable: CValuesRef<GtkActionable>?, @CCall.CString format_string: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk33383_gtk_actionable_set_detailed_action_name")
external fun gtk_actionable_set_detailed_action_name(actionable: CValuesRef<GtkActionable>?, @CCall.CString detailed_action_name: String?): Unit

@CCall("knifunptr_libgtk33384_gtk_action_bar_get_type")
external fun gtk_action_bar_get_type(): GType

@CCall("knifunptr_libgtk33385_gtk_action_bar_new")
external fun gtk_action_bar_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33386_gtk_action_bar_get_center_widget")
external fun gtk_action_bar_get_center_widget(action_bar: CValuesRef<GtkActionBar>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33387_gtk_action_bar_set_center_widget")
external fun gtk_action_bar_set_center_widget(action_bar: CValuesRef<GtkActionBar>?, center_widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk33388_gtk_action_bar_pack_start")
external fun gtk_action_bar_pack_start(action_bar: CValuesRef<GtkActionBar>?, child: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk33389_gtk_action_bar_pack_end")
external fun gtk_action_bar_pack_end(action_bar: CValuesRef<GtkActionBar>?, child: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk33390_gtk_adjustment_get_type")
external fun gtk_adjustment_get_type(): GType

@CCall("knifunptr_libgtk33391_gtk_adjustment_new")
external fun gtk_adjustment_new(value: gdouble, lower: gdouble, upper: gdouble, step_increment: gdouble, page_increment: gdouble, page_size: gdouble): CPointer<GtkAdjustment>?

@CCall("knifunptr_libgtk33392_gtk_adjustment_changed")
external fun gtk_adjustment_changed(adjustment: CValuesRef<GtkAdjustment>?): Unit

@CCall("knifunptr_libgtk33393_gtk_adjustment_value_changed")
external fun gtk_adjustment_value_changed(adjustment: CValuesRef<GtkAdjustment>?): Unit

@CCall("knifunptr_libgtk33394_gtk_adjustment_clamp_page")
external fun gtk_adjustment_clamp_page(adjustment: CValuesRef<GtkAdjustment>?, lower: gdouble, upper: gdouble): Unit

@CCall("knifunptr_libgtk33395_gtk_adjustment_get_value")
external fun gtk_adjustment_get_value(adjustment: CValuesRef<GtkAdjustment>?): gdouble

@CCall("knifunptr_libgtk33396_gtk_adjustment_set_value")
external fun gtk_adjustment_set_value(adjustment: CValuesRef<GtkAdjustment>?, value: gdouble): Unit

@CCall("knifunptr_libgtk33397_gtk_adjustment_get_lower")
external fun gtk_adjustment_get_lower(adjustment: CValuesRef<GtkAdjustment>?): gdouble

@CCall("knifunptr_libgtk33398_gtk_adjustment_set_lower")
external fun gtk_adjustment_set_lower(adjustment: CValuesRef<GtkAdjustment>?, lower: gdouble): Unit

@CCall("knifunptr_libgtk33399_gtk_adjustment_get_upper")
external fun gtk_adjustment_get_upper(adjustment: CValuesRef<GtkAdjustment>?): gdouble

@CCall("knifunptr_libgtk33400_gtk_adjustment_set_upper")
external fun gtk_adjustment_set_upper(adjustment: CValuesRef<GtkAdjustment>?, upper: gdouble): Unit

@CCall("knifunptr_libgtk33401_gtk_adjustment_get_step_increment")
external fun gtk_adjustment_get_step_increment(adjustment: CValuesRef<GtkAdjustment>?): gdouble

@CCall("knifunptr_libgtk33402_gtk_adjustment_set_step_increment")
external fun gtk_adjustment_set_step_increment(adjustment: CValuesRef<GtkAdjustment>?, step_increment: gdouble): Unit

@CCall("knifunptr_libgtk33403_gtk_adjustment_get_page_increment")
external fun gtk_adjustment_get_page_increment(adjustment: CValuesRef<GtkAdjustment>?): gdouble

@CCall("knifunptr_libgtk33404_gtk_adjustment_set_page_increment")
external fun gtk_adjustment_set_page_increment(adjustment: CValuesRef<GtkAdjustment>?, page_increment: gdouble): Unit

@CCall("knifunptr_libgtk33405_gtk_adjustment_get_page_size")
external fun gtk_adjustment_get_page_size(adjustment: CValuesRef<GtkAdjustment>?): gdouble

@CCall("knifunptr_libgtk33406_gtk_adjustment_set_page_size")
external fun gtk_adjustment_set_page_size(adjustment: CValuesRef<GtkAdjustment>?, page_size: gdouble): Unit

@CCall("knifunptr_libgtk33407_gtk_adjustment_configure")
external fun gtk_adjustment_configure(adjustment: CValuesRef<GtkAdjustment>?, value: gdouble, lower: gdouble, upper: gdouble, step_increment: gdouble, page_increment: gdouble, page_size: gdouble): Unit

@CCall("knifunptr_libgtk33408_gtk_adjustment_get_minimum_increment")
external fun gtk_adjustment_get_minimum_increment(adjustment: CValuesRef<GtkAdjustment>?): gdouble

@CCall("knifunptr_libgtk33409_gtk_app_chooser_get_type")
external fun gtk_app_chooser_get_type(): GType

@CCall("knifunptr_libgtk33410_gtk_app_chooser_get_app_info")
external fun gtk_app_chooser_get_app_info(self: CValuesRef<GtkAppChooser>?): CPointer<GAppInfo>?

@CCall("knifunptr_libgtk33411_gtk_app_chooser_get_content_type")
external fun gtk_app_chooser_get_content_type(self: CValuesRef<GtkAppChooser>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk33412_gtk_app_chooser_refresh")
external fun gtk_app_chooser_refresh(self: CValuesRef<GtkAppChooser>?): Unit

@CCall("knifunptr_libgtk33413_gtk_app_chooser_dialog_get_type")
external fun gtk_app_chooser_dialog_get_type(): GType

@CCall("knifunptr_libgtk33414_gtk_app_chooser_dialog_new")
external fun gtk_app_chooser_dialog_new(parent: CValuesRef<GtkWindow>?, flags: GtkDialogFlags, file: CValuesRef<GFile>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33415_gtk_app_chooser_dialog_new_for_content_type")
external fun gtk_app_chooser_dialog_new_for_content_type(parent: CValuesRef<GtkWindow>?, flags: GtkDialogFlags, @CCall.CString content_type: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33416_gtk_app_chooser_dialog_get_widget")
external fun gtk_app_chooser_dialog_get_widget(self: CValuesRef<GtkAppChooserDialog>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33417_gtk_app_chooser_dialog_set_heading")
external fun gtk_app_chooser_dialog_set_heading(self: CValuesRef<GtkAppChooserDialog>?, @CCall.CString heading: String?): Unit

@CCall("knifunptr_libgtk33418_gtk_app_chooser_dialog_get_heading")
external fun gtk_app_chooser_dialog_get_heading(self: CValuesRef<GtkAppChooserDialog>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk33419_gtk_box_get_type")
external fun gtk_box_get_type(): GType

@CCall("knifunptr_libgtk33420_gtk_box_new")
external fun gtk_box_new(orientation: GtkOrientation, spacing: gint): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33421_gtk_box_pack_start")
external fun gtk_box_pack_start(box: CValuesRef<GtkBox>?, child: CValuesRef<GtkWidget>?, expand: gboolean, fill: gboolean, padding: guint): Unit

@CCall("knifunptr_libgtk33422_gtk_box_pack_end")
external fun gtk_box_pack_end(box: CValuesRef<GtkBox>?, child: CValuesRef<GtkWidget>?, expand: gboolean, fill: gboolean, padding: guint): Unit

@CCall("knifunptr_libgtk33423_gtk_box_set_homogeneous")
external fun gtk_box_set_homogeneous(box: CValuesRef<GtkBox>?, homogeneous: gboolean): Unit

@CCall("knifunptr_libgtk33424_gtk_box_get_homogeneous")
external fun gtk_box_get_homogeneous(box: CValuesRef<GtkBox>?): gboolean

@CCall("knifunptr_libgtk33425_gtk_box_set_spacing")
external fun gtk_box_set_spacing(box: CValuesRef<GtkBox>?, spacing: gint): Unit

@CCall("knifunptr_libgtk33426_gtk_box_get_spacing")
external fun gtk_box_get_spacing(box: CValuesRef<GtkBox>?): gint

@CCall("knifunptr_libgtk33427_gtk_box_set_baseline_position")
external fun gtk_box_set_baseline_position(box: CValuesRef<GtkBox>?, position: GtkBaselinePosition): Unit

@CCall("knifunptr_libgtk33428_gtk_box_get_baseline_position")
external fun gtk_box_get_baseline_position(box: CValuesRef<GtkBox>?): GtkBaselinePosition

@CCall("knifunptr_libgtk33429_gtk_box_reorder_child")
external fun gtk_box_reorder_child(box: CValuesRef<GtkBox>?, child: CValuesRef<GtkWidget>?, position: gint): Unit

@CCall("knifunptr_libgtk33430_gtk_box_query_child_packing")
external fun gtk_box_query_child_packing(box: CValuesRef<GtkBox>?, child: CValuesRef<GtkWidget>?, expand: CValuesRef<gbooleanVar>?, fill: CValuesRef<gbooleanVar>?, padding: CValuesRef<guintVar>?, pack_type: CValuesRef<GtkPackType.Var>?): Unit

@CCall("knifunptr_libgtk33431_gtk_box_set_child_packing")
external fun gtk_box_set_child_packing(box: CValuesRef<GtkBox>?, child: CValuesRef<GtkWidget>?, expand: gboolean, fill: gboolean, padding: guint, pack_type: GtkPackType): Unit

@CCall("knifunptr_libgtk33432_gtk_box_set_center_widget")
external fun gtk_box_set_center_widget(box: CValuesRef<GtkBox>?, widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk33433_gtk_box_get_center_widget")
external fun gtk_box_get_center_widget(box: CValuesRef<GtkBox>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33434_gtk_app_chooser_widget_get_type")
external fun gtk_app_chooser_widget_get_type(): GType

@CCall("knifunptr_libgtk33435_gtk_app_chooser_widget_new")
external fun gtk_app_chooser_widget_new(@CCall.CString content_type: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33436_gtk_app_chooser_widget_set_show_default")
external fun gtk_app_chooser_widget_set_show_default(self: CValuesRef<GtkAppChooserWidget>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk33437_gtk_app_chooser_widget_get_show_default")
external fun gtk_app_chooser_widget_get_show_default(self: CValuesRef<GtkAppChooserWidget>?): gboolean

@CCall("knifunptr_libgtk33438_gtk_app_chooser_widget_set_show_recommended")
external fun gtk_app_chooser_widget_set_show_recommended(self: CValuesRef<GtkAppChooserWidget>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk33439_gtk_app_chooser_widget_get_show_recommended")
external fun gtk_app_chooser_widget_get_show_recommended(self: CValuesRef<GtkAppChooserWidget>?): gboolean

@CCall("knifunptr_libgtk33440_gtk_app_chooser_widget_set_show_fallback")
external fun gtk_app_chooser_widget_set_show_fallback(self: CValuesRef<GtkAppChooserWidget>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk33441_gtk_app_chooser_widget_get_show_fallback")
external fun gtk_app_chooser_widget_get_show_fallback(self: CValuesRef<GtkAppChooserWidget>?): gboolean

@CCall("knifunptr_libgtk33442_gtk_app_chooser_widget_set_show_other")
external fun gtk_app_chooser_widget_set_show_other(self: CValuesRef<GtkAppChooserWidget>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk33443_gtk_app_chooser_widget_get_show_other")
external fun gtk_app_chooser_widget_get_show_other(self: CValuesRef<GtkAppChooserWidget>?): gboolean

@CCall("knifunptr_libgtk33444_gtk_app_chooser_widget_set_show_all")
external fun gtk_app_chooser_widget_set_show_all(self: CValuesRef<GtkAppChooserWidget>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk33445_gtk_app_chooser_widget_get_show_all")
external fun gtk_app_chooser_widget_get_show_all(self: CValuesRef<GtkAppChooserWidget>?): gboolean

@CCall("knifunptr_libgtk33446_gtk_app_chooser_widget_set_default_text")
external fun gtk_app_chooser_widget_set_default_text(self: CValuesRef<GtkAppChooserWidget>?, @CCall.CString text: String?): Unit

@CCall("knifunptr_libgtk33447_gtk_app_chooser_widget_get_default_text")
external fun gtk_app_chooser_widget_get_default_text(self: CValuesRef<GtkAppChooserWidget>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk33448_gtk_tree_path_new")
external fun gtk_tree_path_new(): CPointer<GtkTreePath>?

@CCall("knifunptr_libgtk33449_gtk_tree_path_new_from_string")
external fun gtk_tree_path_new_from_string(@CCall.CString path: String?): CPointer<GtkTreePath>?

@CCall("knifunptr_libgtk33450_gtk_tree_path_new_from_indices")
external fun gtk_tree_path_new_from_indices(first_index: gint, vararg variadicArguments: Any?): CPointer<GtkTreePath>?

@CCall("knifunptr_libgtk33451_gtk_tree_path_new_from_indicesv")
external fun gtk_tree_path_new_from_indicesv(indices: CValuesRef<gintVar>?, length: gsize): CPointer<GtkTreePath>?

@CCall("knifunptr_libgtk33452_gtk_tree_path_to_string")
external fun gtk_tree_path_to_string(path: CValuesRef<GtkTreePath>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk33453_gtk_tree_path_new_first")
external fun gtk_tree_path_new_first(): CPointer<GtkTreePath>?

@CCall("knifunptr_libgtk33454_gtk_tree_path_append_index")
external fun gtk_tree_path_append_index(path: CValuesRef<GtkTreePath>?, index_: gint): Unit

@CCall("knifunptr_libgtk33455_gtk_tree_path_prepend_index")
external fun gtk_tree_path_prepend_index(path: CValuesRef<GtkTreePath>?, index_: gint): Unit

@CCall("knifunptr_libgtk33456_gtk_tree_path_get_depth")
external fun gtk_tree_path_get_depth(path: CValuesRef<GtkTreePath>?): gint

@CCall("knifunptr_libgtk33457_gtk_tree_path_get_indices")
external fun gtk_tree_path_get_indices(path: CValuesRef<GtkTreePath>?): CPointer<gintVar>?

@CCall("knifunptr_libgtk33458_gtk_tree_path_get_indices_with_depth")
external fun gtk_tree_path_get_indices_with_depth(path: CValuesRef<GtkTreePath>?, depth: CValuesRef<gintVar>?): CPointer<gintVar>?

@CCall("knifunptr_libgtk33459_gtk_tree_path_free")
external fun gtk_tree_path_free(path: CValuesRef<GtkTreePath>?): Unit

@CCall("knifunptr_libgtk33460_gtk_tree_path_copy")
external fun gtk_tree_path_copy(path: CValuesRef<GtkTreePath>?): CPointer<GtkTreePath>?

@CCall("knifunptr_libgtk33461_gtk_tree_path_get_type")
external fun gtk_tree_path_get_type(): GType

@CCall("knifunptr_libgtk33462_gtk_tree_path_compare")
external fun gtk_tree_path_compare(a: CValuesRef<GtkTreePath>?, b: CValuesRef<GtkTreePath>?): gint

@CCall("knifunptr_libgtk33463_gtk_tree_path_next")
external fun gtk_tree_path_next(path: CValuesRef<GtkTreePath>?): Unit

@CCall("knifunptr_libgtk33464_gtk_tree_path_prev")
external fun gtk_tree_path_prev(path: CValuesRef<GtkTreePath>?): gboolean

@CCall("knifunptr_libgtk33465_gtk_tree_path_up")
external fun gtk_tree_path_up(path: CValuesRef<GtkTreePath>?): gboolean

@CCall("knifunptr_libgtk33466_gtk_tree_path_down")
external fun gtk_tree_path_down(path: CValuesRef<GtkTreePath>?): Unit

@CCall("knifunptr_libgtk33467_gtk_tree_path_is_ancestor")
external fun gtk_tree_path_is_ancestor(path: CValuesRef<GtkTreePath>?, descendant: CValuesRef<GtkTreePath>?): gboolean

@CCall("knifunptr_libgtk33468_gtk_tree_path_is_descendant")
external fun gtk_tree_path_is_descendant(path: CValuesRef<GtkTreePath>?, ancestor: CValuesRef<GtkTreePath>?): gboolean

@CCall("knifunptr_libgtk33469_gtk_tree_row_reference_get_type")
external fun gtk_tree_row_reference_get_type(): GType

@CCall("knifunptr_libgtk33470_gtk_tree_row_reference_new")
external fun gtk_tree_row_reference_new(model: CValuesRef<GtkTreeModel>?, path: CValuesRef<GtkTreePath>?): CPointer<GtkTreeRowReference>?

@CCall("knifunptr_libgtk33471_gtk_tree_row_reference_new_proxy")
external fun gtk_tree_row_reference_new_proxy(proxy: CValuesRef<GObject>?, model: CValuesRef<GtkTreeModel>?, path: CValuesRef<GtkTreePath>?): CPointer<GtkTreeRowReference>?

@CCall("knifunptr_libgtk33472_gtk_tree_row_reference_get_path")
external fun gtk_tree_row_reference_get_path(reference: CValuesRef<GtkTreeRowReference>?): CPointer<GtkTreePath>?

@CCall("knifunptr_libgtk33473_gtk_tree_row_reference_get_model")
external fun gtk_tree_row_reference_get_model(reference: CValuesRef<GtkTreeRowReference>?): CPointer<GtkTreeModel>?

@CCall("knifunptr_libgtk33474_gtk_tree_row_reference_valid")
external fun gtk_tree_row_reference_valid(reference: CValuesRef<GtkTreeRowReference>?): gboolean

@CCall("knifunptr_libgtk33475_gtk_tree_row_reference_copy")
external fun gtk_tree_row_reference_copy(reference: CValuesRef<GtkTreeRowReference>?): CPointer<GtkTreeRowReference>?

@CCall("knifunptr_libgtk33476_gtk_tree_row_reference_free")
external fun gtk_tree_row_reference_free(reference: CValuesRef<GtkTreeRowReference>?): Unit

@CCall("knifunptr_libgtk33477_gtk_tree_row_reference_inserted")
external fun gtk_tree_row_reference_inserted(proxy: CValuesRef<GObject>?, path: CValuesRef<GtkTreePath>?): Unit

@CCall("knifunptr_libgtk33478_gtk_tree_row_reference_deleted")
external fun gtk_tree_row_reference_deleted(proxy: CValuesRef<GObject>?, path: CValuesRef<GtkTreePath>?): Unit

@CCall("knifunptr_libgtk33479_gtk_tree_row_reference_reordered")
external fun gtk_tree_row_reference_reordered(proxy: CValuesRef<GObject>?, path: CValuesRef<GtkTreePath>?, iter: CValuesRef<GtkTreeIter>?, new_order: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk33480_gtk_tree_iter_copy")
external fun gtk_tree_iter_copy(iter: CValuesRef<GtkTreeIter>?): CPointer<GtkTreeIter>?

@CCall("knifunptr_libgtk33481_gtk_tree_iter_free")
external fun gtk_tree_iter_free(iter: CValuesRef<GtkTreeIter>?): Unit

@CCall("knifunptr_libgtk33482_gtk_tree_iter_get_type")
external fun gtk_tree_iter_get_type(): GType

@CCall("knifunptr_libgtk33483_gtk_tree_model_get_type")
external fun gtk_tree_model_get_type(): GType

@CCall("knifunptr_libgtk33484_gtk_tree_model_get_flags")
external fun gtk_tree_model_get_flags(tree_model: CValuesRef<GtkTreeModel>?): GtkTreeModelFlags

@CCall("knifunptr_libgtk33485_gtk_tree_model_get_n_columns")
external fun gtk_tree_model_get_n_columns(tree_model: CValuesRef<GtkTreeModel>?): gint

@CCall("knifunptr_libgtk33486_gtk_tree_model_get_column_type")
external fun gtk_tree_model_get_column_type(tree_model: CValuesRef<GtkTreeModel>?, index_: gint): GType

@CCall("knifunptr_libgtk33487_gtk_tree_model_get_iter")
external fun gtk_tree_model_get_iter(tree_model: CValuesRef<GtkTreeModel>?, iter: CValuesRef<GtkTreeIter>?, path: CValuesRef<GtkTreePath>?): gboolean

@CCall("knifunptr_libgtk33488_gtk_tree_model_get_iter_from_string")
external fun gtk_tree_model_get_iter_from_string(tree_model: CValuesRef<GtkTreeModel>?, iter: CValuesRef<GtkTreeIter>?, @CCall.CString path_string: String?): gboolean

@CCall("knifunptr_libgtk33489_gtk_tree_model_get_string_from_iter")
external fun gtk_tree_model_get_string_from_iter(tree_model: CValuesRef<GtkTreeModel>?, iter: CValuesRef<GtkTreeIter>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk33490_gtk_tree_model_get_iter_first")
external fun gtk_tree_model_get_iter_first(tree_model: CValuesRef<GtkTreeModel>?, iter: CValuesRef<GtkTreeIter>?): gboolean

@CCall("knifunptr_libgtk33491_gtk_tree_model_get_path")
external fun gtk_tree_model_get_path(tree_model: CValuesRef<GtkTreeModel>?, iter: CValuesRef<GtkTreeIter>?): CPointer<GtkTreePath>?

@CCall("knifunptr_libgtk33492_gtk_tree_model_get_value")
external fun gtk_tree_model_get_value(tree_model: CValuesRef<GtkTreeModel>?, iter: CValuesRef<GtkTreeIter>?, column: gint, value: CValuesRef<GValue>?): Unit

@CCall("knifunptr_libgtk33493_gtk_tree_model_iter_previous")
external fun gtk_tree_model_iter_previous(tree_model: CValuesRef<GtkTreeModel>?, iter: CValuesRef<GtkTreeIter>?): gboolean

@CCall("knifunptr_libgtk33494_gtk_tree_model_iter_next")
external fun gtk_tree_model_iter_next(tree_model: CValuesRef<GtkTreeModel>?, iter: CValuesRef<GtkTreeIter>?): gboolean

@CCall("knifunptr_libgtk33495_gtk_tree_model_iter_children")
external fun gtk_tree_model_iter_children(tree_model: CValuesRef<GtkTreeModel>?, iter: CValuesRef<GtkTreeIter>?, parent: CValuesRef<GtkTreeIter>?): gboolean

@CCall("knifunptr_libgtk33496_gtk_tree_model_iter_has_child")
external fun gtk_tree_model_iter_has_child(tree_model: CValuesRef<GtkTreeModel>?, iter: CValuesRef<GtkTreeIter>?): gboolean

@CCall("knifunptr_libgtk33497_gtk_tree_model_iter_n_children")
external fun gtk_tree_model_iter_n_children(tree_model: CValuesRef<GtkTreeModel>?, iter: CValuesRef<GtkTreeIter>?): gint

@CCall("knifunptr_libgtk33498_gtk_tree_model_iter_nth_child")
external fun gtk_tree_model_iter_nth_child(tree_model: CValuesRef<GtkTreeModel>?, iter: CValuesRef<GtkTreeIter>?, parent: CValuesRef<GtkTreeIter>?, n: gint): gboolean

@CCall("knifunptr_libgtk33499_gtk_tree_model_iter_parent")
external fun gtk_tree_model_iter_parent(tree_model: CValuesRef<GtkTreeModel>?, iter: CValuesRef<GtkTreeIter>?, child: CValuesRef<GtkTreeIter>?): gboolean

@CCall("knifunptr_libgtk33500_gtk_tree_model_ref_node")
external fun gtk_tree_model_ref_node(tree_model: CValuesRef<GtkTreeModel>?, iter: CValuesRef<GtkTreeIter>?): Unit

@CCall("knifunptr_libgtk33501_gtk_tree_model_unref_node")
external fun gtk_tree_model_unref_node(tree_model: CValuesRef<GtkTreeModel>?, iter: CValuesRef<GtkTreeIter>?): Unit

@CCall("knifunptr_libgtk33502_gtk_tree_model_get")
external fun gtk_tree_model_get(tree_model: CValuesRef<GtkTreeModel>?, iter: CValuesRef<GtkTreeIter>?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk33503_gtk_tree_model_get_valist")
external fun gtk_tree_model_get_valist(tree_model: CValuesRef<GtkTreeModel>?, iter: CValuesRef<GtkTreeIter>?, var_args: va_list?): Unit

@CCall("knifunptr_libgtk33504_gtk_tree_model_foreach")
external fun gtk_tree_model_foreach(model: CValuesRef<GtkTreeModel>?, func: GtkTreeModelForeachFunc?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk33505_gtk_tree_model_row_changed")
external fun gtk_tree_model_row_changed(tree_model: CValuesRef<GtkTreeModel>?, path: CValuesRef<GtkTreePath>?, iter: CValuesRef<GtkTreeIter>?): Unit

@CCall("knifunptr_libgtk33506_gtk_tree_model_row_inserted")
external fun gtk_tree_model_row_inserted(tree_model: CValuesRef<GtkTreeModel>?, path: CValuesRef<GtkTreePath>?, iter: CValuesRef<GtkTreeIter>?): Unit

@CCall("knifunptr_libgtk33507_gtk_tree_model_row_has_child_toggled")
external fun gtk_tree_model_row_has_child_toggled(tree_model: CValuesRef<GtkTreeModel>?, path: CValuesRef<GtkTreePath>?, iter: CValuesRef<GtkTreeIter>?): Unit

@CCall("knifunptr_libgtk33508_gtk_tree_model_row_deleted")
external fun gtk_tree_model_row_deleted(tree_model: CValuesRef<GtkTreeModel>?, path: CValuesRef<GtkTreePath>?): Unit

@CCall("knifunptr_libgtk33509_gtk_tree_model_rows_reordered")
external fun gtk_tree_model_rows_reordered(tree_model: CValuesRef<GtkTreeModel>?, path: CValuesRef<GtkTreePath>?, iter: CValuesRef<GtkTreeIter>?, new_order: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk33510_gtk_tree_model_rows_reordered_with_length")
external fun gtk_tree_model_rows_reordered_with_length(tree_model: CValuesRef<GtkTreeModel>?, path: CValuesRef<GtkTreePath>?, iter: CValuesRef<GtkTreeIter>?, new_order: CValuesRef<gintVar>?, length: gint): Unit

@CCall("knifunptr_libgtk33511_gtk_cell_editable_get_type")
external fun gtk_cell_editable_get_type(): GType

@CCall("knifunptr_libgtk33512_gtk_cell_editable_start_editing")
external fun gtk_cell_editable_start_editing(cell_editable: CValuesRef<GtkCellEditable>?, event: CValuesRef<GdkEvent>?): Unit

@CCall("knifunptr_libgtk33513_gtk_cell_editable_editing_done")
external fun gtk_cell_editable_editing_done(cell_editable: CValuesRef<GtkCellEditable>?): Unit

@CCall("knifunptr_libgtk33514_gtk_cell_editable_remove_widget")
external fun gtk_cell_editable_remove_widget(cell_editable: CValuesRef<GtkCellEditable>?): Unit

@CCall("knifunptr_libgtk33515_gtk_cell_renderer_get_type")
external fun gtk_cell_renderer_get_type(): GType

@CCall("knifunptr_libgtk33516_gtk_cell_renderer_get_request_mode")
external fun gtk_cell_renderer_get_request_mode(cell: CValuesRef<GtkCellRenderer>?): GtkSizeRequestMode

@CCall("knifunptr_libgtk33517_gtk_cell_renderer_get_preferred_width")
external fun gtk_cell_renderer_get_preferred_width(cell: CValuesRef<GtkCellRenderer>?, widget: CValuesRef<GtkWidget>?, minimum_size: CValuesRef<gintVar>?, natural_size: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk33518_gtk_cell_renderer_get_preferred_height_for_width")
external fun gtk_cell_renderer_get_preferred_height_for_width(cell: CValuesRef<GtkCellRenderer>?, widget: CValuesRef<GtkWidget>?, width: gint, minimum_height: CValuesRef<gintVar>?, natural_height: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk33519_gtk_cell_renderer_get_preferred_height")
external fun gtk_cell_renderer_get_preferred_height(cell: CValuesRef<GtkCellRenderer>?, widget: CValuesRef<GtkWidget>?, minimum_size: CValuesRef<gintVar>?, natural_size: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk33520_gtk_cell_renderer_get_preferred_width_for_height")
external fun gtk_cell_renderer_get_preferred_width_for_height(cell: CValuesRef<GtkCellRenderer>?, widget: CValuesRef<GtkWidget>?, height: gint, minimum_width: CValuesRef<gintVar>?, natural_width: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk33521_gtk_cell_renderer_get_preferred_size")
external fun gtk_cell_renderer_get_preferred_size(cell: CValuesRef<GtkCellRenderer>?, widget: CValuesRef<GtkWidget>?, minimum_size: CValuesRef<GtkRequisition>?, natural_size: CValuesRef<GtkRequisition>?): Unit

@CCall("knifunptr_libgtk33522_gtk_cell_renderer_get_aligned_area")
external fun gtk_cell_renderer_get_aligned_area(cell: CValuesRef<GtkCellRenderer>?, widget: CValuesRef<GtkWidget>?, flags: GtkCellRendererState, cell_area: CValuesRef<GdkRectangle>?, aligned_area: CValuesRef<GdkRectangle>?): Unit

@CCall("knifunptr_libgtk33523_gtk_cell_renderer_get_size")
external fun gtk_cell_renderer_get_size(cell: CValuesRef<GtkCellRenderer>?, widget: CValuesRef<GtkWidget>?, cell_area: CValuesRef<GdkRectangle>?, x_offset: CValuesRef<gintVar>?, y_offset: CValuesRef<gintVar>?, width: CValuesRef<gintVar>?, height: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk33524_gtk_cell_renderer_render")
external fun gtk_cell_renderer_render(cell: CValuesRef<GtkCellRenderer>?, cr: CValuesRef<cairo_t>?, widget: CValuesRef<GtkWidget>?, background_area: CValuesRef<GdkRectangle>?, cell_area: CValuesRef<GdkRectangle>?, flags: GtkCellRendererState): Unit

@CCall("knifunptr_libgtk33525_gtk_cell_renderer_activate")
external fun gtk_cell_renderer_activate(cell: CValuesRef<GtkCellRenderer>?, event: CValuesRef<GdkEvent>?, widget: CValuesRef<GtkWidget>?, @CCall.CString path: String?, background_area: CValuesRef<GdkRectangle>?, cell_area: CValuesRef<GdkRectangle>?, flags: GtkCellRendererState): gboolean

@CCall("knifunptr_libgtk33526_gtk_cell_renderer_start_editing")
external fun gtk_cell_renderer_start_editing(cell: CValuesRef<GtkCellRenderer>?, event: CValuesRef<GdkEvent>?, widget: CValuesRef<GtkWidget>?, @CCall.CString path: String?, background_area: CValuesRef<GdkRectangle>?, cell_area: CValuesRef<GdkRectangle>?, flags: GtkCellRendererState): CPointer<GtkCellEditable>?

@CCall("knifunptr_libgtk33527_gtk_cell_renderer_set_fixed_size")
external fun gtk_cell_renderer_set_fixed_size(cell: CValuesRef<GtkCellRenderer>?, width: gint, height: gint): Unit

@CCall("knifunptr_libgtk33528_gtk_cell_renderer_get_fixed_size")
external fun gtk_cell_renderer_get_fixed_size(cell: CValuesRef<GtkCellRenderer>?, width: CValuesRef<gintVar>?, height: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk33529_gtk_cell_renderer_set_alignment")
external fun gtk_cell_renderer_set_alignment(cell: CValuesRef<GtkCellRenderer>?, xalign: gfloat, yalign: gfloat): Unit

@CCall("knifunptr_libgtk33530_gtk_cell_renderer_get_alignment")
external fun gtk_cell_renderer_get_alignment(cell: CValuesRef<GtkCellRenderer>?, xalign: CValuesRef<gfloatVar>?, yalign: CValuesRef<gfloatVar>?): Unit

@CCall("knifunptr_libgtk33531_gtk_cell_renderer_set_padding")
external fun gtk_cell_renderer_set_padding(cell: CValuesRef<GtkCellRenderer>?, xpad: gint, ypad: gint): Unit

@CCall("knifunptr_libgtk33532_gtk_cell_renderer_get_padding")
external fun gtk_cell_renderer_get_padding(cell: CValuesRef<GtkCellRenderer>?, xpad: CValuesRef<gintVar>?, ypad: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk33533_gtk_cell_renderer_set_visible")
external fun gtk_cell_renderer_set_visible(cell: CValuesRef<GtkCellRenderer>?, visible: gboolean): Unit

@CCall("knifunptr_libgtk33534_gtk_cell_renderer_get_visible")
external fun gtk_cell_renderer_get_visible(cell: CValuesRef<GtkCellRenderer>?): gboolean

@CCall("knifunptr_libgtk33535_gtk_cell_renderer_set_sensitive")
external fun gtk_cell_renderer_set_sensitive(cell: CValuesRef<GtkCellRenderer>?, sensitive: gboolean): Unit

@CCall("knifunptr_libgtk33536_gtk_cell_renderer_get_sensitive")
external fun gtk_cell_renderer_get_sensitive(cell: CValuesRef<GtkCellRenderer>?): gboolean

@CCall("knifunptr_libgtk33537_gtk_cell_renderer_is_activatable")
external fun gtk_cell_renderer_is_activatable(cell: CValuesRef<GtkCellRenderer>?): gboolean

@CCall("knifunptr_libgtk33538_gtk_cell_renderer_stop_editing")
external fun gtk_cell_renderer_stop_editing(cell: CValuesRef<GtkCellRenderer>?, canceled: gboolean): Unit

@CCall("knifunptr_libgtk33539__gtk_cell_renderer_calc_offset")
external fun _gtk_cell_renderer_calc_offset(cell: CValuesRef<GtkCellRenderer>?, cell_area: CValuesRef<GdkRectangle>?, direction: GtkTextDirection, width: gint, height: gint, x_offset: CValuesRef<gintVar>?, y_offset: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk33540_gtk_cell_renderer_get_state")
external fun gtk_cell_renderer_get_state(cell: CValuesRef<GtkCellRenderer>?, widget: CValuesRef<GtkWidget>?, cell_state: GtkCellRendererState): GtkStateFlags

@CCall("knifunptr_libgtk33541_gtk_cell_renderer_class_set_accessible_type")
external fun gtk_cell_renderer_class_set_accessible_type(renderer_class: CValuesRef<GtkCellRendererClass>?, type: GType): Unit

@CCall("knifunptr_libgtk33542__gtk_cell_renderer_get_accessible_type")
external fun _gtk_cell_renderer_get_accessible_type(renderer: CValuesRef<GtkCellRenderer>?): GType

@CCall("knifunptr_libgtk33543_gtk_tree_sortable_get_type")
external fun gtk_tree_sortable_get_type(): GType

@CCall("knifunptr_libgtk33544_gtk_tree_sortable_sort_column_changed")
external fun gtk_tree_sortable_sort_column_changed(sortable: CValuesRef<GtkTreeSortable>?): Unit

@CCall("knifunptr_libgtk33545_gtk_tree_sortable_get_sort_column_id")
external fun gtk_tree_sortable_get_sort_column_id(sortable: CValuesRef<GtkTreeSortable>?, sort_column_id: CValuesRef<gintVar>?, order: CValuesRef<GtkSortType.Var>?): gboolean

@CCall("knifunptr_libgtk33546_gtk_tree_sortable_set_sort_column_id")
external fun gtk_tree_sortable_set_sort_column_id(sortable: CValuesRef<GtkTreeSortable>?, sort_column_id: gint, order: GtkSortType): Unit

@CCall("knifunptr_libgtk33547_gtk_tree_sortable_set_sort_func")
external fun gtk_tree_sortable_set_sort_func(sortable: CValuesRef<GtkTreeSortable>?, sort_column_id: gint, sort_func: GtkTreeIterCompareFunc?, user_data: gpointer?, destroy: GDestroyNotify?): Unit

@CCall("knifunptr_libgtk33548_gtk_tree_sortable_set_default_sort_func")
external fun gtk_tree_sortable_set_default_sort_func(sortable: CValuesRef<GtkTreeSortable>?, sort_func: GtkTreeIterCompareFunc?, user_data: gpointer?, destroy: GDestroyNotify?): Unit

@CCall("knifunptr_libgtk33549_gtk_tree_sortable_has_default_sort_func")
external fun gtk_tree_sortable_has_default_sort_func(sortable: CValuesRef<GtkTreeSortable>?): gboolean

@CCall("knifunptr_libgtk33550_gtk_cell_area_get_type")
external fun gtk_cell_area_get_type(): GType

@CCall("knifunptr_libgtk33551_gtk_cell_area_add")
external fun gtk_cell_area_add(area: CValuesRef<GtkCellArea>?, renderer: CValuesRef<GtkCellRenderer>?): Unit

@CCall("knifunptr_libgtk33552_gtk_cell_area_remove")
external fun gtk_cell_area_remove(area: CValuesRef<GtkCellArea>?, renderer: CValuesRef<GtkCellRenderer>?): Unit

@CCall("knifunptr_libgtk33553_gtk_cell_area_has_renderer")
external fun gtk_cell_area_has_renderer(area: CValuesRef<GtkCellArea>?, renderer: CValuesRef<GtkCellRenderer>?): gboolean

@CCall("knifunptr_libgtk33554_gtk_cell_area_foreach")
external fun gtk_cell_area_foreach(area: CValuesRef<GtkCellArea>?, callback: GtkCellCallback?, callback_data: gpointer?): Unit

@CCall("knifunptr_libgtk33555_gtk_cell_area_foreach_alloc")
external fun gtk_cell_area_foreach_alloc(area: CValuesRef<GtkCellArea>?, context: CValuesRef<GtkCellAreaContext>?, widget: CValuesRef<GtkWidget>?, cell_area: CValuesRef<GdkRectangle>?, background_area: CValuesRef<GdkRectangle>?, callback: GtkCellAllocCallback?, callback_data: gpointer?): Unit

@CCall("knifunptr_libgtk33556_gtk_cell_area_event")
external fun gtk_cell_area_event(area: CValuesRef<GtkCellArea>?, context: CValuesRef<GtkCellAreaContext>?, widget: CValuesRef<GtkWidget>?, event: CValuesRef<GdkEvent>?, cell_area: CValuesRef<GdkRectangle>?, flags: GtkCellRendererState): gint

@CCall("knifunptr_libgtk33557_gtk_cell_area_render")
external fun gtk_cell_area_render(area: CValuesRef<GtkCellArea>?, context: CValuesRef<GtkCellAreaContext>?, widget: CValuesRef<GtkWidget>?, cr: CValuesRef<cairo_t>?, background_area: CValuesRef<GdkRectangle>?, cell_area: CValuesRef<GdkRectangle>?, flags: GtkCellRendererState, paint_focus: gboolean): Unit

@CCall("knifunptr_libgtk33558_gtk_cell_area_get_cell_allocation")
external fun gtk_cell_area_get_cell_allocation(area: CValuesRef<GtkCellArea>?, context: CValuesRef<GtkCellAreaContext>?, widget: CValuesRef<GtkWidget>?, renderer: CValuesRef<GtkCellRenderer>?, cell_area: CValuesRef<GdkRectangle>?, allocation: CValuesRef<GdkRectangle>?): Unit

@CCall("knifunptr_libgtk33559_gtk_cell_area_get_cell_at_position")
external fun gtk_cell_area_get_cell_at_position(area: CValuesRef<GtkCellArea>?, context: CValuesRef<GtkCellAreaContext>?, widget: CValuesRef<GtkWidget>?, cell_area: CValuesRef<GdkRectangle>?, x: gint, y: gint, alloc_area: CValuesRef<GdkRectangle>?): CPointer<GtkCellRenderer>?

@CCall("knifunptr_libgtk33560_gtk_cell_area_create_context")
external fun gtk_cell_area_create_context(area: CValuesRef<GtkCellArea>?): CPointer<GtkCellAreaContext>?

@CCall("knifunptr_libgtk33561_gtk_cell_area_copy_context")
external fun gtk_cell_area_copy_context(area: CValuesRef<GtkCellArea>?, context: CValuesRef<GtkCellAreaContext>?): CPointer<GtkCellAreaContext>?

@CCall("knifunptr_libgtk33562_gtk_cell_area_get_request_mode")
external fun gtk_cell_area_get_request_mode(area: CValuesRef<GtkCellArea>?): GtkSizeRequestMode

@CCall("knifunptr_libgtk33563_gtk_cell_area_get_preferred_width")
external fun gtk_cell_area_get_preferred_width(area: CValuesRef<GtkCellArea>?, context: CValuesRef<GtkCellAreaContext>?, widget: CValuesRef<GtkWidget>?, minimum_width: CValuesRef<gintVar>?, natural_width: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk33564_gtk_cell_area_get_preferred_height_for_width")
external fun gtk_cell_area_get_preferred_height_for_width(area: CValuesRef<GtkCellArea>?, context: CValuesRef<GtkCellAreaContext>?, widget: CValuesRef<GtkWidget>?, width: gint, minimum_height: CValuesRef<gintVar>?, natural_height: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk33565_gtk_cell_area_get_preferred_height")
external fun gtk_cell_area_get_preferred_height(area: CValuesRef<GtkCellArea>?, context: CValuesRef<GtkCellAreaContext>?, widget: CValuesRef<GtkWidget>?, minimum_height: CValuesRef<gintVar>?, natural_height: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk33566_gtk_cell_area_get_preferred_width_for_height")
external fun gtk_cell_area_get_preferred_width_for_height(area: CValuesRef<GtkCellArea>?, context: CValuesRef<GtkCellAreaContext>?, widget: CValuesRef<GtkWidget>?, height: gint, minimum_width: CValuesRef<gintVar>?, natural_width: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk33567_gtk_cell_area_get_current_path_string")
external fun gtk_cell_area_get_current_path_string(area: CValuesRef<GtkCellArea>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk33568_gtk_cell_area_apply_attributes")
external fun gtk_cell_area_apply_attributes(area: CValuesRef<GtkCellArea>?, tree_model: CValuesRef<GtkTreeModel>?, iter: CValuesRef<GtkTreeIter>?, is_expander: gboolean, is_expanded: gboolean): Unit

@CCall("knifunptr_libgtk33569_gtk_cell_area_attribute_connect")
external fun gtk_cell_area_attribute_connect(area: CValuesRef<GtkCellArea>?, renderer: CValuesRef<GtkCellRenderer>?, @CCall.CString attribute: String?, column: gint): Unit

@CCall("knifunptr_libgtk33570_gtk_cell_area_attribute_disconnect")
external fun gtk_cell_area_attribute_disconnect(area: CValuesRef<GtkCellArea>?, renderer: CValuesRef<GtkCellRenderer>?, @CCall.CString attribute: String?): Unit

@CCall("knifunptr_libgtk33571_gtk_cell_area_attribute_get_column")
external fun gtk_cell_area_attribute_get_column(area: CValuesRef<GtkCellArea>?, renderer: CValuesRef<GtkCellRenderer>?, @CCall.CString attribute: String?): gint

@CCall("knifunptr_libgtk33572_gtk_cell_area_class_install_cell_property")
external fun gtk_cell_area_class_install_cell_property(aclass: CValuesRef<GtkCellAreaClass>?, property_id: guint, pspec: CValuesRef<GParamSpec>?): Unit

@CCall("knifunptr_libgtk33573_gtk_cell_area_class_find_cell_property")
external fun gtk_cell_area_class_find_cell_property(aclass: CValuesRef<GtkCellAreaClass>?, @CCall.CString property_name: String?): CPointer<GParamSpec>?

@CCall("knifunptr_libgtk33574_gtk_cell_area_class_list_cell_properties")
external fun gtk_cell_area_class_list_cell_properties(aclass: CValuesRef<GtkCellAreaClass>?, n_properties: CValuesRef<guintVar>?): CPointer<CPointerVar<GParamSpec>>?

@CCall("knifunptr_libgtk33575_gtk_cell_area_add_with_properties")
external fun gtk_cell_area_add_with_properties(area: CValuesRef<GtkCellArea>?, renderer: CValuesRef<GtkCellRenderer>?, @CCall.CString first_prop_name: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk33576_gtk_cell_area_cell_set")
external fun gtk_cell_area_cell_set(area: CValuesRef<GtkCellArea>?, renderer: CValuesRef<GtkCellRenderer>?, @CCall.CString first_prop_name: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk33577_gtk_cell_area_cell_get")
external fun gtk_cell_area_cell_get(area: CValuesRef<GtkCellArea>?, renderer: CValuesRef<GtkCellRenderer>?, @CCall.CString first_prop_name: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk33578_gtk_cell_area_cell_set_valist")
external fun gtk_cell_area_cell_set_valist(area: CValuesRef<GtkCellArea>?, renderer: CValuesRef<GtkCellRenderer>?, @CCall.CString first_property_name: String?, var_args: va_list?): Unit

@CCall("knifunptr_libgtk33579_gtk_cell_area_cell_get_valist")
external fun gtk_cell_area_cell_get_valist(area: CValuesRef<GtkCellArea>?, renderer: CValuesRef<GtkCellRenderer>?, @CCall.CString first_property_name: String?, var_args: va_list?): Unit

@CCall("knifunptr_libgtk33580_gtk_cell_area_cell_set_property")
external fun gtk_cell_area_cell_set_property(area: CValuesRef<GtkCellArea>?, renderer: CValuesRef<GtkCellRenderer>?, @CCall.CString property_name: String?, value: CValuesRef<GValue>?): Unit

@CCall("knifunptr_libgtk33581_gtk_cell_area_cell_get_property")
external fun gtk_cell_area_cell_get_property(area: CValuesRef<GtkCellArea>?, renderer: CValuesRef<GtkCellRenderer>?, @CCall.CString property_name: String?, value: CValuesRef<GValue>?): Unit

@CCall("knifunptr_libgtk33582_gtk_cell_area_is_activatable")
external fun gtk_cell_area_is_activatable(area: CValuesRef<GtkCellArea>?): gboolean

@CCall("knifunptr_libgtk33583_gtk_cell_area_activate")
external fun gtk_cell_area_activate(area: CValuesRef<GtkCellArea>?, context: CValuesRef<GtkCellAreaContext>?, widget: CValuesRef<GtkWidget>?, cell_area: CValuesRef<GdkRectangle>?, flags: GtkCellRendererState, edit_only: gboolean): gboolean

@CCall("knifunptr_libgtk33584_gtk_cell_area_focus")
external fun gtk_cell_area_focus(area: CValuesRef<GtkCellArea>?, direction: GtkDirectionType): gboolean

@CCall("knifunptr_libgtk33585_gtk_cell_area_set_focus_cell")
external fun gtk_cell_area_set_focus_cell(area: CValuesRef<GtkCellArea>?, renderer: CValuesRef<GtkCellRenderer>?): Unit

@CCall("knifunptr_libgtk33586_gtk_cell_area_get_focus_cell")
external fun gtk_cell_area_get_focus_cell(area: CValuesRef<GtkCellArea>?): CPointer<GtkCellRenderer>?

@CCall("knifunptr_libgtk33587_gtk_cell_area_add_focus_sibling")
external fun gtk_cell_area_add_focus_sibling(area: CValuesRef<GtkCellArea>?, renderer: CValuesRef<GtkCellRenderer>?, sibling: CValuesRef<GtkCellRenderer>?): Unit

@CCall("knifunptr_libgtk33588_gtk_cell_area_remove_focus_sibling")
external fun gtk_cell_area_remove_focus_sibling(area: CValuesRef<GtkCellArea>?, renderer: CValuesRef<GtkCellRenderer>?, sibling: CValuesRef<GtkCellRenderer>?): Unit

@CCall("knifunptr_libgtk33589_gtk_cell_area_is_focus_sibling")
external fun gtk_cell_area_is_focus_sibling(area: CValuesRef<GtkCellArea>?, renderer: CValuesRef<GtkCellRenderer>?, sibling: CValuesRef<GtkCellRenderer>?): gboolean

@CCall("knifunptr_libgtk33590_gtk_cell_area_get_focus_siblings")
external fun gtk_cell_area_get_focus_siblings(area: CValuesRef<GtkCellArea>?, renderer: CValuesRef<GtkCellRenderer>?): CPointer<GList>?

@CCall("knifunptr_libgtk33591_gtk_cell_area_get_focus_from_sibling")
external fun gtk_cell_area_get_focus_from_sibling(area: CValuesRef<GtkCellArea>?, renderer: CValuesRef<GtkCellRenderer>?): CPointer<GtkCellRenderer>?

@CCall("knifunptr_libgtk33592_gtk_cell_area_get_edited_cell")
external fun gtk_cell_area_get_edited_cell(area: CValuesRef<GtkCellArea>?): CPointer<GtkCellRenderer>?

@CCall("knifunptr_libgtk33593_gtk_cell_area_get_edit_widget")
external fun gtk_cell_area_get_edit_widget(area: CValuesRef<GtkCellArea>?): CPointer<GtkCellEditable>?

@CCall("knifunptr_libgtk33594_gtk_cell_area_activate_cell")
external fun gtk_cell_area_activate_cell(area: CValuesRef<GtkCellArea>?, widget: CValuesRef<GtkWidget>?, renderer: CValuesRef<GtkCellRenderer>?, event: CValuesRef<GdkEvent>?, cell_area: CValuesRef<GdkRectangle>?, flags: GtkCellRendererState): gboolean

@CCall("knifunptr_libgtk33595_gtk_cell_area_stop_editing")
external fun gtk_cell_area_stop_editing(area: CValuesRef<GtkCellArea>?, canceled: gboolean): Unit

@CCall("knifunptr_libgtk33596_gtk_cell_area_inner_cell_area")
external fun gtk_cell_area_inner_cell_area(area: CValuesRef<GtkCellArea>?, widget: CValuesRef<GtkWidget>?, cell_area: CValuesRef<GdkRectangle>?, inner_area: CValuesRef<GdkRectangle>?): Unit

@CCall("knifunptr_libgtk33597_gtk_cell_area_request_renderer")
external fun gtk_cell_area_request_renderer(area: CValuesRef<GtkCellArea>?, renderer: CValuesRef<GtkCellRenderer>?, orientation: GtkOrientation, widget: CValuesRef<GtkWidget>?, for_size: gint, minimum_size: CValuesRef<gintVar>?, natural_size: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk33598__gtk_cell_area_set_cell_data_func_with_proxy")
external fun _gtk_cell_area_set_cell_data_func_with_proxy(area: CValuesRef<GtkCellArea>?, cell: CValuesRef<GtkCellRenderer>?, func: GFunc?, func_data: gpointer?, destroy: GDestroyNotify?, proxy: gpointer?): Unit

@CCall("knifunptr_libgtk33599_gtk_tree_view_column_get_type")
external fun gtk_tree_view_column_get_type(): GType

@CCall("knifunptr_libgtk33600_gtk_tree_view_column_new")
external fun gtk_tree_view_column_new(): CPointer<GtkTreeViewColumn>?

@CCall("knifunptr_libgtk33601_gtk_tree_view_column_new_with_area")
external fun gtk_tree_view_column_new_with_area(area: CValuesRef<GtkCellArea>?): CPointer<GtkTreeViewColumn>?

@CCall("knifunptr_libgtk33602_gtk_tree_view_column_new_with_attributes")
external fun gtk_tree_view_column_new_with_attributes(@CCall.CString title: String?, cell: CValuesRef<GtkCellRenderer>?, vararg variadicArguments: Any?): CPointer<GtkTreeViewColumn>?

@CCall("knifunptr_libgtk33603_gtk_tree_view_column_pack_start")
external fun gtk_tree_view_column_pack_start(tree_column: CValuesRef<GtkTreeViewColumn>?, cell: CValuesRef<GtkCellRenderer>?, expand: gboolean): Unit

@CCall("knifunptr_libgtk33604_gtk_tree_view_column_pack_end")
external fun gtk_tree_view_column_pack_end(tree_column: CValuesRef<GtkTreeViewColumn>?, cell: CValuesRef<GtkCellRenderer>?, expand: gboolean): Unit

@CCall("knifunptr_libgtk33605_gtk_tree_view_column_clear")
external fun gtk_tree_view_column_clear(tree_column: CValuesRef<GtkTreeViewColumn>?): Unit

@CCall("knifunptr_libgtk33606_gtk_tree_view_column_add_attribute")
external fun gtk_tree_view_column_add_attribute(tree_column: CValuesRef<GtkTreeViewColumn>?, cell_renderer: CValuesRef<GtkCellRenderer>?, @CCall.CString attribute: String?, column: gint): Unit

@CCall("knifunptr_libgtk33607_gtk_tree_view_column_set_attributes")
external fun gtk_tree_view_column_set_attributes(tree_column: CValuesRef<GtkTreeViewColumn>?, cell_renderer: CValuesRef<GtkCellRenderer>?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk33608_gtk_tree_view_column_set_cell_data_func")
external fun gtk_tree_view_column_set_cell_data_func(tree_column: CValuesRef<GtkTreeViewColumn>?, cell_renderer: CValuesRef<GtkCellRenderer>?, func: GtkTreeCellDataFunc?, func_data: gpointer?, destroy: GDestroyNotify?): Unit

@CCall("knifunptr_libgtk33609_gtk_tree_view_column_clear_attributes")
external fun gtk_tree_view_column_clear_attributes(tree_column: CValuesRef<GtkTreeViewColumn>?, cell_renderer: CValuesRef<GtkCellRenderer>?): Unit

@CCall("knifunptr_libgtk33610_gtk_tree_view_column_set_spacing")
external fun gtk_tree_view_column_set_spacing(tree_column: CValuesRef<GtkTreeViewColumn>?, spacing: gint): Unit

@CCall("knifunptr_libgtk33611_gtk_tree_view_column_get_spacing")
external fun gtk_tree_view_column_get_spacing(tree_column: CValuesRef<GtkTreeViewColumn>?): gint

@CCall("knifunptr_libgtk33612_gtk_tree_view_column_set_visible")
external fun gtk_tree_view_column_set_visible(tree_column: CValuesRef<GtkTreeViewColumn>?, visible: gboolean): Unit

@CCall("knifunptr_libgtk33613_gtk_tree_view_column_get_visible")
external fun gtk_tree_view_column_get_visible(tree_column: CValuesRef<GtkTreeViewColumn>?): gboolean

@CCall("knifunptr_libgtk33614_gtk_tree_view_column_set_resizable")
external fun gtk_tree_view_column_set_resizable(tree_column: CValuesRef<GtkTreeViewColumn>?, resizable: gboolean): Unit

@CCall("knifunptr_libgtk33615_gtk_tree_view_column_get_resizable")
external fun gtk_tree_view_column_get_resizable(tree_column: CValuesRef<GtkTreeViewColumn>?): gboolean

@CCall("knifunptr_libgtk33616_gtk_tree_view_column_set_sizing")
external fun gtk_tree_view_column_set_sizing(tree_column: CValuesRef<GtkTreeViewColumn>?, type: GtkTreeViewColumnSizing): Unit

@CCall("knifunptr_libgtk33617_gtk_tree_view_column_get_sizing")
external fun gtk_tree_view_column_get_sizing(tree_column: CValuesRef<GtkTreeViewColumn>?): GtkTreeViewColumnSizing

@CCall("knifunptr_libgtk33618_gtk_tree_view_column_get_x_offset")
external fun gtk_tree_view_column_get_x_offset(tree_column: CValuesRef<GtkTreeViewColumn>?): gint

@CCall("knifunptr_libgtk33619_gtk_tree_view_column_get_width")
external fun gtk_tree_view_column_get_width(tree_column: CValuesRef<GtkTreeViewColumn>?): gint

@CCall("knifunptr_libgtk33620_gtk_tree_view_column_get_fixed_width")
external fun gtk_tree_view_column_get_fixed_width(tree_column: CValuesRef<GtkTreeViewColumn>?): gint

@CCall("knifunptr_libgtk33621_gtk_tree_view_column_set_fixed_width")
external fun gtk_tree_view_column_set_fixed_width(tree_column: CValuesRef<GtkTreeViewColumn>?, fixed_width: gint): Unit

@CCall("knifunptr_libgtk33622_gtk_tree_view_column_set_min_width")
external fun gtk_tree_view_column_set_min_width(tree_column: CValuesRef<GtkTreeViewColumn>?, min_width: gint): Unit

@CCall("knifunptr_libgtk33623_gtk_tree_view_column_get_min_width")
external fun gtk_tree_view_column_get_min_width(tree_column: CValuesRef<GtkTreeViewColumn>?): gint

@CCall("knifunptr_libgtk33624_gtk_tree_view_column_set_max_width")
external fun gtk_tree_view_column_set_max_width(tree_column: CValuesRef<GtkTreeViewColumn>?, max_width: gint): Unit

@CCall("knifunptr_libgtk33625_gtk_tree_view_column_get_max_width")
external fun gtk_tree_view_column_get_max_width(tree_column: CValuesRef<GtkTreeViewColumn>?): gint

@CCall("knifunptr_libgtk33626_gtk_tree_view_column_clicked")
external fun gtk_tree_view_column_clicked(tree_column: CValuesRef<GtkTreeViewColumn>?): Unit

@CCall("knifunptr_libgtk33627_gtk_tree_view_column_set_title")
external fun gtk_tree_view_column_set_title(tree_column: CValuesRef<GtkTreeViewColumn>?, @CCall.CString title: String?): Unit

@CCall("knifunptr_libgtk33628_gtk_tree_view_column_get_title")
external fun gtk_tree_view_column_get_title(tree_column: CValuesRef<GtkTreeViewColumn>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk33629_gtk_tree_view_column_set_expand")
external fun gtk_tree_view_column_set_expand(tree_column: CValuesRef<GtkTreeViewColumn>?, expand: gboolean): Unit

@CCall("knifunptr_libgtk33630_gtk_tree_view_column_get_expand")
external fun gtk_tree_view_column_get_expand(tree_column: CValuesRef<GtkTreeViewColumn>?): gboolean

@CCall("knifunptr_libgtk33631_gtk_tree_view_column_set_clickable")
external fun gtk_tree_view_column_set_clickable(tree_column: CValuesRef<GtkTreeViewColumn>?, clickable: gboolean): Unit

@CCall("knifunptr_libgtk33632_gtk_tree_view_column_get_clickable")
external fun gtk_tree_view_column_get_clickable(tree_column: CValuesRef<GtkTreeViewColumn>?): gboolean

@CCall("knifunptr_libgtk33633_gtk_tree_view_column_set_widget")
external fun gtk_tree_view_column_set_widget(tree_column: CValuesRef<GtkTreeViewColumn>?, widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk33634_gtk_tree_view_column_get_widget")
external fun gtk_tree_view_column_get_widget(tree_column: CValuesRef<GtkTreeViewColumn>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33635_gtk_tree_view_column_set_alignment")
external fun gtk_tree_view_column_set_alignment(tree_column: CValuesRef<GtkTreeViewColumn>?, xalign: gfloat): Unit

@CCall("knifunptr_libgtk33636_gtk_tree_view_column_get_alignment")
external fun gtk_tree_view_column_get_alignment(tree_column: CValuesRef<GtkTreeViewColumn>?): gfloat

@CCall("knifunptr_libgtk33637_gtk_tree_view_column_set_reorderable")
external fun gtk_tree_view_column_set_reorderable(tree_column: CValuesRef<GtkTreeViewColumn>?, reorderable: gboolean): Unit

@CCall("knifunptr_libgtk33638_gtk_tree_view_column_get_reorderable")
external fun gtk_tree_view_column_get_reorderable(tree_column: CValuesRef<GtkTreeViewColumn>?): gboolean

@CCall("knifunptr_libgtk33639_gtk_tree_view_column_set_sort_column_id")
external fun gtk_tree_view_column_set_sort_column_id(tree_column: CValuesRef<GtkTreeViewColumn>?, sort_column_id: gint): Unit

@CCall("knifunptr_libgtk33640_gtk_tree_view_column_get_sort_column_id")
external fun gtk_tree_view_column_get_sort_column_id(tree_column: CValuesRef<GtkTreeViewColumn>?): gint

@CCall("knifunptr_libgtk33641_gtk_tree_view_column_set_sort_indicator")
external fun gtk_tree_view_column_set_sort_indicator(tree_column: CValuesRef<GtkTreeViewColumn>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk33642_gtk_tree_view_column_get_sort_indicator")
external fun gtk_tree_view_column_get_sort_indicator(tree_column: CValuesRef<GtkTreeViewColumn>?): gboolean

@CCall("knifunptr_libgtk33643_gtk_tree_view_column_set_sort_order")
external fun gtk_tree_view_column_set_sort_order(tree_column: CValuesRef<GtkTreeViewColumn>?, order: GtkSortType): Unit

@CCall("knifunptr_libgtk33644_gtk_tree_view_column_get_sort_order")
external fun gtk_tree_view_column_get_sort_order(tree_column: CValuesRef<GtkTreeViewColumn>?): GtkSortType

@CCall("knifunptr_libgtk33645_gtk_tree_view_column_cell_set_cell_data")
external fun gtk_tree_view_column_cell_set_cell_data(tree_column: CValuesRef<GtkTreeViewColumn>?, tree_model: CValuesRef<GtkTreeModel>?, iter: CValuesRef<GtkTreeIter>?, is_expander: gboolean, is_expanded: gboolean): Unit

@CCall("knifunptr_libgtk33646_gtk_tree_view_column_cell_get_size")
external fun gtk_tree_view_column_cell_get_size(tree_column: CValuesRef<GtkTreeViewColumn>?, cell_area: CValuesRef<GdkRectangle>?, x_offset: CValuesRef<gintVar>?, y_offset: CValuesRef<gintVar>?, width: CValuesRef<gintVar>?, height: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk33647_gtk_tree_view_column_cell_is_visible")
external fun gtk_tree_view_column_cell_is_visible(tree_column: CValuesRef<GtkTreeViewColumn>?): gboolean

@CCall("knifunptr_libgtk33648_gtk_tree_view_column_focus_cell")
external fun gtk_tree_view_column_focus_cell(tree_column: CValuesRef<GtkTreeViewColumn>?, cell: CValuesRef<GtkCellRenderer>?): Unit

@CCall("knifunptr_libgtk33649_gtk_tree_view_column_cell_get_position")
external fun gtk_tree_view_column_cell_get_position(tree_column: CValuesRef<GtkTreeViewColumn>?, cell_renderer: CValuesRef<GtkCellRenderer>?, x_offset: CValuesRef<gintVar>?, width: CValuesRef<gintVar>?): gboolean

@CCall("knifunptr_libgtk33650_gtk_tree_view_column_queue_resize")
external fun gtk_tree_view_column_queue_resize(tree_column: CValuesRef<GtkTreeViewColumn>?): Unit

@CCall("knifunptr_libgtk33651_gtk_tree_view_column_get_tree_view")
external fun gtk_tree_view_column_get_tree_view(tree_column: CValuesRef<GtkTreeViewColumn>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33652_gtk_tree_view_column_get_button")
external fun gtk_tree_view_column_get_button(tree_column: CValuesRef<GtkTreeViewColumn>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33653_gtk_text_attributes_new")
external fun gtk_text_attributes_new(): CPointer<GtkTextAttributes>?

@CCall("knifunptr_libgtk33654_gtk_text_attributes_copy")
external fun gtk_text_attributes_copy(src: CValuesRef<GtkTextAttributes>?): CPointer<GtkTextAttributes>?

@CCall("knifunptr_libgtk33655_gtk_text_attributes_copy_values")
external fun gtk_text_attributes_copy_values(src: CValuesRef<GtkTextAttributes>?, dest: CValuesRef<GtkTextAttributes>?): Unit

@CCall("knifunptr_libgtk33656_gtk_text_attributes_unref")
external fun gtk_text_attributes_unref(values: CValuesRef<GtkTextAttributes>?): Unit

@CCall("knifunptr_libgtk33657_gtk_text_attributes_ref")
external fun gtk_text_attributes_ref(values: CValuesRef<GtkTextAttributes>?): CPointer<GtkTextAttributes>?

@CCall("knifunptr_libgtk33658_gtk_text_attributes_get_type")
external fun gtk_text_attributes_get_type(): GType

@CCall("knifunptr_libgtk33659_gtk_text_child_anchor_get_type")
external fun gtk_text_child_anchor_get_type(): GType

@CCall("knifunptr_libgtk33660_gtk_text_child_anchor_new")
external fun gtk_text_child_anchor_new(): CPointer<GtkTextChildAnchor>?

@CCall("knifunptr_libgtk33661_gtk_text_child_anchor_get_widgets")
external fun gtk_text_child_anchor_get_widgets(anchor: CValuesRef<GtkTextChildAnchor>?): CPointer<GList>?

@CCall("knifunptr_libgtk33662_gtk_text_child_anchor_get_deleted")
external fun gtk_text_child_anchor_get_deleted(anchor: CValuesRef<GtkTextChildAnchor>?): gboolean

@CCall("knifunptr_libgtk33663_gtk_text_tag_get_type")
external fun gtk_text_tag_get_type(): GType

@CCall("knifunptr_libgtk33664_gtk_text_tag_new")
external fun gtk_text_tag_new(@CCall.CString name: String?): CPointer<GtkTextTag>?

@CCall("knifunptr_libgtk33665_gtk_text_tag_get_priority")
external fun gtk_text_tag_get_priority(tag: CValuesRef<GtkTextTag>?): gint

@CCall("knifunptr_libgtk33666_gtk_text_tag_set_priority")
external fun gtk_text_tag_set_priority(tag: CValuesRef<GtkTextTag>?, priority: gint): Unit

@CCall("knifunptr_libgtk33667_gtk_text_tag_event")
external fun gtk_text_tag_event(tag: CValuesRef<GtkTextTag>?, event_object: CValuesRef<GObject>?, event: CValuesRef<GdkEvent>?, iter: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk33668_gtk_text_tag_changed")
external fun gtk_text_tag_changed(tag: CValuesRef<GtkTextTag>?, size_changed: gboolean): Unit

@CCall("knifunptr_libgtk33669_gtk_text_iter_get_buffer")
external fun gtk_text_iter_get_buffer(iter: CValuesRef<GtkTextIter>?): CPointer<GtkTextBuffer>?

@CCall("knifunptr_libgtk33670_gtk_text_iter_copy")
external fun gtk_text_iter_copy(iter: CValuesRef<GtkTextIter>?): CPointer<GtkTextIter>?

@CCall("knifunptr_libgtk33671_gtk_text_iter_free")
external fun gtk_text_iter_free(iter: CValuesRef<GtkTextIter>?): Unit

@CCall("knifunptr_libgtk33672_gtk_text_iter_assign")
external fun gtk_text_iter_assign(iter: CValuesRef<GtkTextIter>?, other: CValuesRef<GtkTextIter>?): Unit

@CCall("knifunptr_libgtk33673_gtk_text_iter_get_type")
external fun gtk_text_iter_get_type(): GType

@CCall("knifunptr_libgtk33674_gtk_text_iter_get_offset")
external fun gtk_text_iter_get_offset(iter: CValuesRef<GtkTextIter>?): gint

@CCall("knifunptr_libgtk33675_gtk_text_iter_get_line")
external fun gtk_text_iter_get_line(iter: CValuesRef<GtkTextIter>?): gint

@CCall("knifunptr_libgtk33676_gtk_text_iter_get_line_offset")
external fun gtk_text_iter_get_line_offset(iter: CValuesRef<GtkTextIter>?): gint

@CCall("knifunptr_libgtk33677_gtk_text_iter_get_line_index")
external fun gtk_text_iter_get_line_index(iter: CValuesRef<GtkTextIter>?): gint

@CCall("knifunptr_libgtk33678_gtk_text_iter_get_visible_line_offset")
external fun gtk_text_iter_get_visible_line_offset(iter: CValuesRef<GtkTextIter>?): gint

@CCall("knifunptr_libgtk33679_gtk_text_iter_get_visible_line_index")
external fun gtk_text_iter_get_visible_line_index(iter: CValuesRef<GtkTextIter>?): gint

@CCall("knifunptr_libgtk33680_gtk_text_iter_get_char")
external fun gtk_text_iter_get_char(iter: CValuesRef<GtkTextIter>?): gunichar

@CCall("knifunptr_libgtk33681_gtk_text_iter_get_slice")
external fun gtk_text_iter_get_slice(start: CValuesRef<GtkTextIter>?, end: CValuesRef<GtkTextIter>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk33682_gtk_text_iter_get_text")
external fun gtk_text_iter_get_text(start: CValuesRef<GtkTextIter>?, end: CValuesRef<GtkTextIter>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk33683_gtk_text_iter_get_visible_slice")
external fun gtk_text_iter_get_visible_slice(start: CValuesRef<GtkTextIter>?, end: CValuesRef<GtkTextIter>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk33684_gtk_text_iter_get_visible_text")
external fun gtk_text_iter_get_visible_text(start: CValuesRef<GtkTextIter>?, end: CValuesRef<GtkTextIter>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk33685_gtk_text_iter_get_pixbuf")
external fun gtk_text_iter_get_pixbuf(iter: CValuesRef<GtkTextIter>?): CPointer<GdkPixbuf>?

@CCall("knifunptr_libgtk33686_gtk_text_iter_get_marks")
external fun gtk_text_iter_get_marks(iter: CValuesRef<GtkTextIter>?): CPointer<GSList>?

@CCall("knifunptr_libgtk33687_gtk_text_iter_get_child_anchor")
external fun gtk_text_iter_get_child_anchor(iter: CValuesRef<GtkTextIter>?): CPointer<GtkTextChildAnchor>?

@CCall("knifunptr_libgtk33688_gtk_text_iter_get_toggled_tags")
external fun gtk_text_iter_get_toggled_tags(iter: CValuesRef<GtkTextIter>?, toggled_on: gboolean): CPointer<GSList>?

@CCall("knifunptr_libgtk33689_gtk_text_iter_starts_tag")
external fun gtk_text_iter_starts_tag(iter: CValuesRef<GtkTextIter>?, tag: CValuesRef<GtkTextTag>?): gboolean

@CCall("knifunptr_libgtk33690_gtk_text_iter_begins_tag")
external fun gtk_text_iter_begins_tag(iter: CValuesRef<GtkTextIter>?, tag: CValuesRef<GtkTextTag>?): gboolean

@CCall("knifunptr_libgtk33691_gtk_text_iter_ends_tag")
external fun gtk_text_iter_ends_tag(iter: CValuesRef<GtkTextIter>?, tag: CValuesRef<GtkTextTag>?): gboolean

@CCall("knifunptr_libgtk33692_gtk_text_iter_toggles_tag")
external fun gtk_text_iter_toggles_tag(iter: CValuesRef<GtkTextIter>?, tag: CValuesRef<GtkTextTag>?): gboolean

@CCall("knifunptr_libgtk33693_gtk_text_iter_has_tag")
external fun gtk_text_iter_has_tag(iter: CValuesRef<GtkTextIter>?, tag: CValuesRef<GtkTextTag>?): gboolean

@CCall("knifunptr_libgtk33694_gtk_text_iter_get_tags")
external fun gtk_text_iter_get_tags(iter: CValuesRef<GtkTextIter>?): CPointer<GSList>?

@CCall("knifunptr_libgtk33695_gtk_text_iter_editable")
external fun gtk_text_iter_editable(iter: CValuesRef<GtkTextIter>?, default_setting: gboolean): gboolean

@CCall("knifunptr_libgtk33696_gtk_text_iter_can_insert")
external fun gtk_text_iter_can_insert(iter: CValuesRef<GtkTextIter>?, default_editability: gboolean): gboolean

@CCall("knifunptr_libgtk33697_gtk_text_iter_starts_word")
external fun gtk_text_iter_starts_word(iter: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk33698_gtk_text_iter_ends_word")
external fun gtk_text_iter_ends_word(iter: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk33699_gtk_text_iter_inside_word")
external fun gtk_text_iter_inside_word(iter: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk33700_gtk_text_iter_starts_sentence")
external fun gtk_text_iter_starts_sentence(iter: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk33701_gtk_text_iter_ends_sentence")
external fun gtk_text_iter_ends_sentence(iter: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk33702_gtk_text_iter_inside_sentence")
external fun gtk_text_iter_inside_sentence(iter: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk33703_gtk_text_iter_starts_line")
external fun gtk_text_iter_starts_line(iter: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk33704_gtk_text_iter_ends_line")
external fun gtk_text_iter_ends_line(iter: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk33705_gtk_text_iter_is_cursor_position")
external fun gtk_text_iter_is_cursor_position(iter: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk33706_gtk_text_iter_get_chars_in_line")
external fun gtk_text_iter_get_chars_in_line(iter: CValuesRef<GtkTextIter>?): gint

@CCall("knifunptr_libgtk33707_gtk_text_iter_get_bytes_in_line")
external fun gtk_text_iter_get_bytes_in_line(iter: CValuesRef<GtkTextIter>?): gint

@CCall("knifunptr_libgtk33708_gtk_text_iter_get_attributes")
external fun gtk_text_iter_get_attributes(iter: CValuesRef<GtkTextIter>?, values: CValuesRef<GtkTextAttributes>?): gboolean

@CCall("knifunptr_libgtk33709_gtk_text_iter_get_language")
external fun gtk_text_iter_get_language(iter: CValuesRef<GtkTextIter>?): CPointer<PangoLanguage>?

@CCall("knifunptr_libgtk33710_gtk_text_iter_is_end")
external fun gtk_text_iter_is_end(iter: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk33711_gtk_text_iter_is_start")
external fun gtk_text_iter_is_start(iter: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk33712_gtk_text_iter_forward_char")
external fun gtk_text_iter_forward_char(iter: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk33713_gtk_text_iter_backward_char")
external fun gtk_text_iter_backward_char(iter: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk33714_gtk_text_iter_forward_chars")
external fun gtk_text_iter_forward_chars(iter: CValuesRef<GtkTextIter>?, count: gint): gboolean

@CCall("knifunptr_libgtk33715_gtk_text_iter_backward_chars")
external fun gtk_text_iter_backward_chars(iter: CValuesRef<GtkTextIter>?, count: gint): gboolean

@CCall("knifunptr_libgtk33716_gtk_text_iter_forward_line")
external fun gtk_text_iter_forward_line(iter: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk33717_gtk_text_iter_backward_line")
external fun gtk_text_iter_backward_line(iter: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk33718_gtk_text_iter_forward_lines")
external fun gtk_text_iter_forward_lines(iter: CValuesRef<GtkTextIter>?, count: gint): gboolean

@CCall("knifunptr_libgtk33719_gtk_text_iter_backward_lines")
external fun gtk_text_iter_backward_lines(iter: CValuesRef<GtkTextIter>?, count: gint): gboolean

@CCall("knifunptr_libgtk33720_gtk_text_iter_forward_word_end")
external fun gtk_text_iter_forward_word_end(iter: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk33721_gtk_text_iter_backward_word_start")
external fun gtk_text_iter_backward_word_start(iter: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk33722_gtk_text_iter_forward_word_ends")
external fun gtk_text_iter_forward_word_ends(iter: CValuesRef<GtkTextIter>?, count: gint): gboolean

@CCall("knifunptr_libgtk33723_gtk_text_iter_backward_word_starts")
external fun gtk_text_iter_backward_word_starts(iter: CValuesRef<GtkTextIter>?, count: gint): gboolean

@CCall("knifunptr_libgtk33724_gtk_text_iter_forward_visible_line")
external fun gtk_text_iter_forward_visible_line(iter: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk33725_gtk_text_iter_backward_visible_line")
external fun gtk_text_iter_backward_visible_line(iter: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk33726_gtk_text_iter_forward_visible_lines")
external fun gtk_text_iter_forward_visible_lines(iter: CValuesRef<GtkTextIter>?, count: gint): gboolean

@CCall("knifunptr_libgtk33727_gtk_text_iter_backward_visible_lines")
external fun gtk_text_iter_backward_visible_lines(iter: CValuesRef<GtkTextIter>?, count: gint): gboolean

@CCall("knifunptr_libgtk33728_gtk_text_iter_forward_visible_word_end")
external fun gtk_text_iter_forward_visible_word_end(iter: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk33729_gtk_text_iter_backward_visible_word_start")
external fun gtk_text_iter_backward_visible_word_start(iter: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk33730_gtk_text_iter_forward_visible_word_ends")
external fun gtk_text_iter_forward_visible_word_ends(iter: CValuesRef<GtkTextIter>?, count: gint): gboolean

@CCall("knifunptr_libgtk33731_gtk_text_iter_backward_visible_word_starts")
external fun gtk_text_iter_backward_visible_word_starts(iter: CValuesRef<GtkTextIter>?, count: gint): gboolean

@CCall("knifunptr_libgtk33732_gtk_text_iter_forward_sentence_end")
external fun gtk_text_iter_forward_sentence_end(iter: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk33733_gtk_text_iter_backward_sentence_start")
external fun gtk_text_iter_backward_sentence_start(iter: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk33734_gtk_text_iter_forward_sentence_ends")
external fun gtk_text_iter_forward_sentence_ends(iter: CValuesRef<GtkTextIter>?, count: gint): gboolean

@CCall("knifunptr_libgtk33735_gtk_text_iter_backward_sentence_starts")
external fun gtk_text_iter_backward_sentence_starts(iter: CValuesRef<GtkTextIter>?, count: gint): gboolean

@CCall("knifunptr_libgtk33736_gtk_text_iter_forward_cursor_position")
external fun gtk_text_iter_forward_cursor_position(iter: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk33737_gtk_text_iter_backward_cursor_position")
external fun gtk_text_iter_backward_cursor_position(iter: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk33738_gtk_text_iter_forward_cursor_positions")
external fun gtk_text_iter_forward_cursor_positions(iter: CValuesRef<GtkTextIter>?, count: gint): gboolean

@CCall("knifunptr_libgtk33739_gtk_text_iter_backward_cursor_positions")
external fun gtk_text_iter_backward_cursor_positions(iter: CValuesRef<GtkTextIter>?, count: gint): gboolean

@CCall("knifunptr_libgtk33740_gtk_text_iter_forward_visible_cursor_position")
external fun gtk_text_iter_forward_visible_cursor_position(iter: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk33741_gtk_text_iter_backward_visible_cursor_position")
external fun gtk_text_iter_backward_visible_cursor_position(iter: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk33742_gtk_text_iter_forward_visible_cursor_positions")
external fun gtk_text_iter_forward_visible_cursor_positions(iter: CValuesRef<GtkTextIter>?, count: gint): gboolean

@CCall("knifunptr_libgtk33743_gtk_text_iter_backward_visible_cursor_positions")
external fun gtk_text_iter_backward_visible_cursor_positions(iter: CValuesRef<GtkTextIter>?, count: gint): gboolean

@CCall("knifunptr_libgtk33744_gtk_text_iter_set_offset")
external fun gtk_text_iter_set_offset(iter: CValuesRef<GtkTextIter>?, char_offset: gint): Unit

@CCall("knifunptr_libgtk33745_gtk_text_iter_set_line")
external fun gtk_text_iter_set_line(iter: CValuesRef<GtkTextIter>?, line_number: gint): Unit

@CCall("knifunptr_libgtk33746_gtk_text_iter_set_line_offset")
external fun gtk_text_iter_set_line_offset(iter: CValuesRef<GtkTextIter>?, char_on_line: gint): Unit

@CCall("knifunptr_libgtk33747_gtk_text_iter_set_line_index")
external fun gtk_text_iter_set_line_index(iter: CValuesRef<GtkTextIter>?, byte_on_line: gint): Unit

@CCall("knifunptr_libgtk33748_gtk_text_iter_forward_to_end")
external fun gtk_text_iter_forward_to_end(iter: CValuesRef<GtkTextIter>?): Unit

@CCall("knifunptr_libgtk33749_gtk_text_iter_forward_to_line_end")
external fun gtk_text_iter_forward_to_line_end(iter: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk33750_gtk_text_iter_set_visible_line_offset")
external fun gtk_text_iter_set_visible_line_offset(iter: CValuesRef<GtkTextIter>?, char_on_line: gint): Unit

@CCall("knifunptr_libgtk33751_gtk_text_iter_set_visible_line_index")
external fun gtk_text_iter_set_visible_line_index(iter: CValuesRef<GtkTextIter>?, byte_on_line: gint): Unit

@CCall("knifunptr_libgtk33752_gtk_text_iter_forward_to_tag_toggle")
external fun gtk_text_iter_forward_to_tag_toggle(iter: CValuesRef<GtkTextIter>?, tag: CValuesRef<GtkTextTag>?): gboolean

@CCall("knifunptr_libgtk33753_gtk_text_iter_backward_to_tag_toggle")
external fun gtk_text_iter_backward_to_tag_toggle(iter: CValuesRef<GtkTextIter>?, tag: CValuesRef<GtkTextTag>?): gboolean

@CCall("knifunptr_libgtk33754_gtk_text_iter_forward_find_char")
external fun gtk_text_iter_forward_find_char(iter: CValuesRef<GtkTextIter>?, pred: GtkTextCharPredicate?, user_data: gpointer?, limit: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk33755_gtk_text_iter_backward_find_char")
external fun gtk_text_iter_backward_find_char(iter: CValuesRef<GtkTextIter>?, pred: GtkTextCharPredicate?, user_data: gpointer?, limit: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk33756_gtk_text_iter_forward_search")
external fun gtk_text_iter_forward_search(iter: CValuesRef<GtkTextIter>?, @CCall.CString str: String?, flags: GtkTextSearchFlags, match_start: CValuesRef<GtkTextIter>?, match_end: CValuesRef<GtkTextIter>?, limit: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk33757_gtk_text_iter_backward_search")
external fun gtk_text_iter_backward_search(iter: CValuesRef<GtkTextIter>?, @CCall.CString str: String?, flags: GtkTextSearchFlags, match_start: CValuesRef<GtkTextIter>?, match_end: CValuesRef<GtkTextIter>?, limit: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk33758_gtk_text_iter_equal")
external fun gtk_text_iter_equal(lhs: CValuesRef<GtkTextIter>?, rhs: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk33759_gtk_text_iter_compare")
external fun gtk_text_iter_compare(lhs: CValuesRef<GtkTextIter>?, rhs: CValuesRef<GtkTextIter>?): gint

@CCall("knifunptr_libgtk33760_gtk_text_iter_in_range")
external fun gtk_text_iter_in_range(iter: CValuesRef<GtkTextIter>?, start: CValuesRef<GtkTextIter>?, end: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk33761_gtk_text_iter_order")
external fun gtk_text_iter_order(first: CValuesRef<GtkTextIter>?, second: CValuesRef<GtkTextIter>?): Unit

@CCall("knifunptr_libgtk33762_gtk_target_list_get_type")
external fun gtk_target_list_get_type(): GType

@CCall("knifunptr_libgtk33763_gtk_target_list_new")
external fun gtk_target_list_new(targets: CValuesRef<GtkTargetEntry>?, ntargets: guint): CPointer<GtkTargetList>?

@CCall("knifunptr_libgtk33764_gtk_target_list_ref")
external fun gtk_target_list_ref(list: CValuesRef<GtkTargetList>?): CPointer<GtkTargetList>?

@CCall("knifunptr_libgtk33765_gtk_target_list_unref")
external fun gtk_target_list_unref(list: CValuesRef<GtkTargetList>?): Unit

@CCall("knifunptr_libgtk33766_gtk_target_list_add")
external fun gtk_target_list_add(list: CValuesRef<GtkTargetList>?, target: GdkAtom?, flags: guint, info: guint): Unit

@CCall("knifunptr_libgtk33767_gtk_target_list_add_text_targets")
external fun gtk_target_list_add_text_targets(list: CValuesRef<GtkTargetList>?, info: guint): Unit

@CCall("knifunptr_libgtk33768_gtk_target_list_add_rich_text_targets")
external fun gtk_target_list_add_rich_text_targets(list: CValuesRef<GtkTargetList>?, info: guint, deserializable: gboolean, buffer: CValuesRef<GtkTextBuffer>?): Unit

@CCall("knifunptr_libgtk33769_gtk_target_list_add_image_targets")
external fun gtk_target_list_add_image_targets(list: CValuesRef<GtkTargetList>?, info: guint, writable: gboolean): Unit

@CCall("knifunptr_libgtk33770_gtk_target_list_add_uri_targets")
external fun gtk_target_list_add_uri_targets(list: CValuesRef<GtkTargetList>?, info: guint): Unit

@CCall("knifunptr_libgtk33771_gtk_target_list_add_table")
external fun gtk_target_list_add_table(list: CValuesRef<GtkTargetList>?, targets: CValuesRef<GtkTargetEntry>?, ntargets: guint): Unit

@CCall("knifunptr_libgtk33772_gtk_target_list_remove")
external fun gtk_target_list_remove(list: CValuesRef<GtkTargetList>?, target: GdkAtom?): Unit

@CCall("knifunptr_libgtk33773_gtk_target_list_find")
external fun gtk_target_list_find(list: CValuesRef<GtkTargetList>?, target: GdkAtom?, info: CValuesRef<guintVar>?): gboolean

@CCall("knifunptr_libgtk33774_gtk_target_table_new_from_list")
external fun gtk_target_table_new_from_list(list: CValuesRef<GtkTargetList>?, n_targets: CValuesRef<gintVar>?): CPointer<GtkTargetEntry>?

@CCall("knifunptr_libgtk33775_gtk_target_table_free")
external fun gtk_target_table_free(targets: CValuesRef<GtkTargetEntry>?, n_targets: gint): Unit

@CCall("knifunptr_libgtk33776_gtk_selection_owner_set")
external fun gtk_selection_owner_set(widget: CValuesRef<GtkWidget>?, selection: GdkAtom?, time_: guint32): gboolean

@CCall("knifunptr_libgtk33777_gtk_selection_owner_set_for_display")
external fun gtk_selection_owner_set_for_display(display: CValuesRef<GdkDisplay>?, widget: CValuesRef<GtkWidget>?, selection: GdkAtom?, time_: guint32): gboolean

@CCall("knifunptr_libgtk33778_gtk_selection_add_target")
external fun gtk_selection_add_target(widget: CValuesRef<GtkWidget>?, selection: GdkAtom?, target: GdkAtom?, info: guint): Unit

@CCall("knifunptr_libgtk33779_gtk_selection_add_targets")
external fun gtk_selection_add_targets(widget: CValuesRef<GtkWidget>?, selection: GdkAtom?, targets: CValuesRef<GtkTargetEntry>?, ntargets: guint): Unit

@CCall("knifunptr_libgtk33780_gtk_selection_clear_targets")
external fun gtk_selection_clear_targets(widget: CValuesRef<GtkWidget>?, selection: GdkAtom?): Unit

@CCall("knifunptr_libgtk33781_gtk_selection_convert")
external fun gtk_selection_convert(widget: CValuesRef<GtkWidget>?, selection: GdkAtom?, target: GdkAtom?, time_: guint32): gboolean

@CCall("knifunptr_libgtk33782_gtk_selection_remove_all")
external fun gtk_selection_remove_all(widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk33783_gtk_selection_data_get_selection")
external fun gtk_selection_data_get_selection(selection_data: CValuesRef<GtkSelectionData>?): GdkAtom?

@CCall("knifunptr_libgtk33784_gtk_selection_data_get_target")
external fun gtk_selection_data_get_target(selection_data: CValuesRef<GtkSelectionData>?): GdkAtom?

@CCall("knifunptr_libgtk33785_gtk_selection_data_get_data_type")
external fun gtk_selection_data_get_data_type(selection_data: CValuesRef<GtkSelectionData>?): GdkAtom?

@CCall("knifunptr_libgtk33786_gtk_selection_data_get_format")
external fun gtk_selection_data_get_format(selection_data: CValuesRef<GtkSelectionData>?): gint

@CCall("knifunptr_libgtk33787_gtk_selection_data_get_data")
external fun gtk_selection_data_get_data(selection_data: CValuesRef<GtkSelectionData>?): CPointer<gucharVar>?

@CCall("knifunptr_libgtk33788_gtk_selection_data_get_length")
external fun gtk_selection_data_get_length(selection_data: CValuesRef<GtkSelectionData>?): gint

@CCall("knifunptr_libgtk33789_gtk_selection_data_get_data_with_length")
external fun gtk_selection_data_get_data_with_length(selection_data: CValuesRef<GtkSelectionData>?, length: CValuesRef<gintVar>?): CPointer<gucharVar>?

@CCall("knifunptr_libgtk33790_gtk_selection_data_get_display")
external fun gtk_selection_data_get_display(selection_data: CValuesRef<GtkSelectionData>?): CPointer<GdkDisplay>?

@CCall("knifunptr_libgtk33791_gtk_selection_data_set")
external fun gtk_selection_data_set(selection_data: CValuesRef<GtkSelectionData>?, type: GdkAtom?, format: gint, data: CValuesRef<gucharVar>?, length: gint): Unit

@CCall("knifunptr_libgtk33792_gtk_selection_data_set_text")
external fun gtk_selection_data_set_text(selection_data: CValuesRef<GtkSelectionData>?, @CCall.CString str: String?, len: gint): gboolean

@CCall("knifunptr_libgtk33793_gtk_selection_data_get_text")
external fun gtk_selection_data_get_text(selection_data: CValuesRef<GtkSelectionData>?): CPointer<gucharVar>?

@CCall("knifunptr_libgtk33794_gtk_selection_data_set_pixbuf")
external fun gtk_selection_data_set_pixbuf(selection_data: CValuesRef<GtkSelectionData>?, pixbuf: CValuesRef<GdkPixbuf>?): gboolean

@CCall("knifunptr_libgtk33795_gtk_selection_data_get_pixbuf")
external fun gtk_selection_data_get_pixbuf(selection_data: CValuesRef<GtkSelectionData>?): CPointer<GdkPixbuf>?

@CCall("knifunptr_libgtk33796_gtk_selection_data_set_uris")
external fun gtk_selection_data_set_uris(selection_data: CValuesRef<GtkSelectionData>?, uris: CValuesRef<CPointerVar<gcharVar>>?): gboolean

@CCall("knifunptr_libgtk33797_gtk_selection_data_get_uris")
external fun gtk_selection_data_get_uris(selection_data: CValuesRef<GtkSelectionData>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_libgtk33798_gtk_selection_data_get_targets")
external fun gtk_selection_data_get_targets(selection_data: CValuesRef<GtkSelectionData>?, targets: CValuesRef<CPointerVar<GdkAtomVar>>?, n_atoms: CValuesRef<gintVar>?): gboolean

@CCall("knifunptr_libgtk33799_gtk_selection_data_targets_include_text")
external fun gtk_selection_data_targets_include_text(selection_data: CValuesRef<GtkSelectionData>?): gboolean

@CCall("knifunptr_libgtk33800_gtk_selection_data_targets_include_rich_text")
external fun gtk_selection_data_targets_include_rich_text(selection_data: CValuesRef<GtkSelectionData>?, buffer: CValuesRef<GtkTextBuffer>?): gboolean

@CCall("knifunptr_libgtk33801_gtk_selection_data_targets_include_image")
external fun gtk_selection_data_targets_include_image(selection_data: CValuesRef<GtkSelectionData>?, writable: gboolean): gboolean

@CCall("knifunptr_libgtk33802_gtk_selection_data_targets_include_uri")
external fun gtk_selection_data_targets_include_uri(selection_data: CValuesRef<GtkSelectionData>?): gboolean

@CCall("knifunptr_libgtk33803_gtk_targets_include_text")
external fun gtk_targets_include_text(targets: CValuesRef<GdkAtomVar>?, n_targets: gint): gboolean

@CCall("knifunptr_libgtk33804_gtk_targets_include_rich_text")
external fun gtk_targets_include_rich_text(targets: CValuesRef<GdkAtomVar>?, n_targets: gint, buffer: CValuesRef<GtkTextBuffer>?): gboolean

@CCall("knifunptr_libgtk33805_gtk_targets_include_image")
external fun gtk_targets_include_image(targets: CValuesRef<GdkAtomVar>?, n_targets: gint, writable: gboolean): gboolean

@CCall("knifunptr_libgtk33806_gtk_targets_include_uri")
external fun gtk_targets_include_uri(targets: CValuesRef<GdkAtomVar>?, n_targets: gint): gboolean

@CCall("knifunptr_libgtk33807_gtk_selection_data_get_type")
external fun gtk_selection_data_get_type(): GType

@CCall("knifunptr_libgtk33808_gtk_selection_data_copy")
external fun gtk_selection_data_copy(data: CValuesRef<GtkSelectionData>?): CPointer<GtkSelectionData>?

@CCall("knifunptr_libgtk33809_gtk_selection_data_free")
external fun gtk_selection_data_free(data: CValuesRef<GtkSelectionData>?): Unit

@CCall("knifunptr_libgtk33810_gtk_target_entry_get_type")
external fun gtk_target_entry_get_type(): GType

@CCall("knifunptr_libgtk33811_gtk_target_entry_new")
external fun gtk_target_entry_new(@CCall.CString target: String?, flags: guint, info: guint): CPointer<GtkTargetEntry>?

@CCall("knifunptr_libgtk33812_gtk_target_entry_copy")
external fun gtk_target_entry_copy(data: CValuesRef<GtkTargetEntry>?): CPointer<GtkTargetEntry>?

@CCall("knifunptr_libgtk33813_gtk_target_entry_free")
external fun gtk_target_entry_free(data: CValuesRef<GtkTargetEntry>?): Unit

@CCall("knifunptr_libgtk33814_gtk_drag_get_data")
external fun gtk_drag_get_data(widget: CValuesRef<GtkWidget>?, context: CValuesRef<GdkDragContext>?, target: GdkAtom?, time_: guint32): Unit

@CCall("knifunptr_libgtk33815_gtk_drag_finish")
external fun gtk_drag_finish(context: CValuesRef<GdkDragContext>?, success: gboolean, del: gboolean, time_: guint32): Unit

@CCall("knifunptr_libgtk33816_gtk_drag_get_source_widget")
external fun gtk_drag_get_source_widget(context: CValuesRef<GdkDragContext>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33817_gtk_drag_highlight")
external fun gtk_drag_highlight(widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk33818_gtk_drag_unhighlight")
external fun gtk_drag_unhighlight(widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk33819_gtk_drag_begin_with_coordinates")
external fun gtk_drag_begin_with_coordinates(widget: CValuesRef<GtkWidget>?, targets: CValuesRef<GtkTargetList>?, actions: GdkDragAction, button: gint, event: CValuesRef<GdkEvent>?, x: gint, y: gint): CPointer<GdkDragContext>?

@CCall("knifunptr_libgtk33820_gtk_drag_begin")
external fun gtk_drag_begin(widget: CValuesRef<GtkWidget>?, targets: CValuesRef<GtkTargetList>?, actions: GdkDragAction, button: gint, event: CValuesRef<GdkEvent>?): CPointer<GdkDragContext>?

@CCall("knifunptr_libgtk33821_gtk_drag_cancel")
external fun gtk_drag_cancel(context: CValuesRef<GdkDragContext>?): Unit

@CCall("knifunptr_libgtk33822_gtk_drag_set_icon_widget")
external fun gtk_drag_set_icon_widget(context: CValuesRef<GdkDragContext>?, widget: CValuesRef<GtkWidget>?, hot_x: gint, hot_y: gint): Unit

@CCall("knifunptr_libgtk33823_gtk_drag_set_icon_pixbuf")
external fun gtk_drag_set_icon_pixbuf(context: CValuesRef<GdkDragContext>?, pixbuf: CValuesRef<GdkPixbuf>?, hot_x: gint, hot_y: gint): Unit

@CCall("knifunptr_libgtk33824_gtk_drag_set_icon_stock")
external fun gtk_drag_set_icon_stock(context: CValuesRef<GdkDragContext>?, @CCall.CString stock_id: String?, hot_x: gint, hot_y: gint): Unit

@CCall("knifunptr_libgtk33825_gtk_drag_set_icon_surface")
external fun gtk_drag_set_icon_surface(context: CValuesRef<GdkDragContext>?, surface: CValuesRef<cairo_surface_t>?): Unit

@CCall("knifunptr_libgtk33826_gtk_drag_set_icon_name")
external fun gtk_drag_set_icon_name(context: CValuesRef<GdkDragContext>?, @CCall.CString icon_name: String?, hot_x: gint, hot_y: gint): Unit

@CCall("knifunptr_libgtk33827_gtk_drag_set_icon_gicon")
external fun gtk_drag_set_icon_gicon(context: CValuesRef<GdkDragContext>?, icon: CValuesRef<GIcon>?, hot_x: gint, hot_y: gint): Unit

@CCall("knifunptr_libgtk33828_gtk_drag_set_icon_default")
external fun gtk_drag_set_icon_default(context: CValuesRef<GdkDragContext>?): Unit

@CCall("knifunptr_libgtk33829_gtk_drag_check_threshold")
external fun gtk_drag_check_threshold(widget: CValuesRef<GtkWidget>?, start_x: gint, start_y: gint, current_x: gint, current_y: gint): gboolean

@CCall("knifunptr_libgtk33830_gtk_editable_get_type")
external fun gtk_editable_get_type(): GType

@CCall("knifunptr_libgtk33831_gtk_editable_select_region")
external fun gtk_editable_select_region(editable: CValuesRef<GtkEditable>?, start_pos: gint, end_pos: gint): Unit

@CCall("knifunptr_libgtk33832_gtk_editable_get_selection_bounds")
external fun gtk_editable_get_selection_bounds(editable: CValuesRef<GtkEditable>?, start_pos: CValuesRef<gintVar>?, end_pos: CValuesRef<gintVar>?): gboolean

@CCall("knifunptr_libgtk33833_gtk_editable_insert_text")
external fun gtk_editable_insert_text(editable: CValuesRef<GtkEditable>?, @CCall.CString new_text: String?, new_text_length: gint, position: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk33834_gtk_editable_delete_text")
external fun gtk_editable_delete_text(editable: CValuesRef<GtkEditable>?, start_pos: gint, end_pos: gint): Unit

@CCall("knifunptr_libgtk33835_gtk_editable_get_chars")
external fun gtk_editable_get_chars(editable: CValuesRef<GtkEditable>?, start_pos: gint, end_pos: gint): CPointer<gcharVar>?

@CCall("knifunptr_libgtk33836_gtk_editable_cut_clipboard")
external fun gtk_editable_cut_clipboard(editable: CValuesRef<GtkEditable>?): Unit

@CCall("knifunptr_libgtk33837_gtk_editable_copy_clipboard")
external fun gtk_editable_copy_clipboard(editable: CValuesRef<GtkEditable>?): Unit

@CCall("knifunptr_libgtk33838_gtk_editable_paste_clipboard")
external fun gtk_editable_paste_clipboard(editable: CValuesRef<GtkEditable>?): Unit

@CCall("knifunptr_libgtk33839_gtk_editable_delete_selection")
external fun gtk_editable_delete_selection(editable: CValuesRef<GtkEditable>?): Unit

@CCall("knifunptr_libgtk33840_gtk_editable_set_position")
external fun gtk_editable_set_position(editable: CValuesRef<GtkEditable>?, position: gint): Unit

@CCall("knifunptr_libgtk33841_gtk_editable_get_position")
external fun gtk_editable_get_position(editable: CValuesRef<GtkEditable>?): gint

@CCall("knifunptr_libgtk33842_gtk_editable_set_editable")
external fun gtk_editable_set_editable(editable: CValuesRef<GtkEditable>?, is_editable: gboolean): Unit

@CCall("knifunptr_libgtk33843_gtk_editable_get_editable")
external fun gtk_editable_get_editable(editable: CValuesRef<GtkEditable>?): gboolean

@CCall("knifunptr_libgtk33844_gtk_im_context_get_type")
external fun gtk_im_context_get_type(): GType

@CCall("knifunptr_libgtk33845_gtk_im_context_set_client_window")
external fun gtk_im_context_set_client_window(context: CValuesRef<GtkIMContext>?, window: CValuesRef<GdkWindow>?): Unit

@CCall("knifunptr_libgtk33846_gtk_im_context_get_preedit_string")
external fun gtk_im_context_get_preedit_string(context: CValuesRef<GtkIMContext>?, str: CValuesRef<CPointerVar<gcharVar>>?, attrs: CValuesRef<CPointerVar<PangoAttrList>>?, cursor_pos: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk33847_gtk_im_context_filter_keypress")
external fun gtk_im_context_filter_keypress(context: CValuesRef<GtkIMContext>?, event: CValuesRef<GdkEventKey>?): gboolean

@CCall("knifunptr_libgtk33848_gtk_im_context_focus_in")
external fun gtk_im_context_focus_in(context: CValuesRef<GtkIMContext>?): Unit

@CCall("knifunptr_libgtk33849_gtk_im_context_focus_out")
external fun gtk_im_context_focus_out(context: CValuesRef<GtkIMContext>?): Unit

@CCall("knifunptr_libgtk33850_gtk_im_context_reset")
external fun gtk_im_context_reset(context: CValuesRef<GtkIMContext>?): Unit

@CCall("knifunptr_libgtk33851_gtk_im_context_set_cursor_location")
external fun gtk_im_context_set_cursor_location(context: CValuesRef<GtkIMContext>?, area: CValuesRef<GdkRectangle>?): Unit

@CCall("knifunptr_libgtk33852_gtk_im_context_set_use_preedit")
external fun gtk_im_context_set_use_preedit(context: CValuesRef<GtkIMContext>?, use_preedit: gboolean): Unit

@CCall("knifunptr_libgtk33853_gtk_im_context_set_surrounding")
external fun gtk_im_context_set_surrounding(context: CValuesRef<GtkIMContext>?, @CCall.CString text: String?, len: gint, cursor_index: gint): Unit

@CCall("knifunptr_libgtk33854_gtk_im_context_get_surrounding")
external fun gtk_im_context_get_surrounding(context: CValuesRef<GtkIMContext>?, text: CValuesRef<CPointerVar<gcharVar>>?, cursor_index: CValuesRef<gintVar>?): gboolean

@CCall("knifunptr_libgtk33855_gtk_im_context_delete_surrounding")
external fun gtk_im_context_delete_surrounding(context: CValuesRef<GtkIMContext>?, offset: gint, n_chars: gint): gboolean

@CCall("knifunptr_libgtk33856_gtk_entry_buffer_get_type")
external fun gtk_entry_buffer_get_type(): GType

@CCall("knifunptr_libgtk33857_gtk_entry_buffer_new")
external fun gtk_entry_buffer_new(@CCall.CString initial_chars: String?, n_initial_chars: gint): CPointer<GtkEntryBuffer>?

@CCall("knifunptr_libgtk33858_gtk_entry_buffer_get_bytes")
external fun gtk_entry_buffer_get_bytes(buffer: CValuesRef<GtkEntryBuffer>?): gsize

@CCall("knifunptr_libgtk33859_gtk_entry_buffer_get_length")
external fun gtk_entry_buffer_get_length(buffer: CValuesRef<GtkEntryBuffer>?): guint

@CCall("knifunptr_libgtk33860_gtk_entry_buffer_get_text")
external fun gtk_entry_buffer_get_text(buffer: CValuesRef<GtkEntryBuffer>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk33861_gtk_entry_buffer_set_text")
external fun gtk_entry_buffer_set_text(buffer: CValuesRef<GtkEntryBuffer>?, @CCall.CString chars: String?, n_chars: gint): Unit

@CCall("knifunptr_libgtk33862_gtk_entry_buffer_set_max_length")
external fun gtk_entry_buffer_set_max_length(buffer: CValuesRef<GtkEntryBuffer>?, max_length: gint): Unit

@CCall("knifunptr_libgtk33863_gtk_entry_buffer_get_max_length")
external fun gtk_entry_buffer_get_max_length(buffer: CValuesRef<GtkEntryBuffer>?): gint

@CCall("knifunptr_libgtk33864_gtk_entry_buffer_insert_text")
external fun gtk_entry_buffer_insert_text(buffer: CValuesRef<GtkEntryBuffer>?, position: guint, @CCall.CString chars: String?, n_chars: gint): guint

@CCall("knifunptr_libgtk33865_gtk_entry_buffer_delete_text")
external fun gtk_entry_buffer_delete_text(buffer: CValuesRef<GtkEntryBuffer>?, position: guint, n_chars: gint): guint

@CCall("knifunptr_libgtk33866_gtk_entry_buffer_emit_inserted_text")
external fun gtk_entry_buffer_emit_inserted_text(buffer: CValuesRef<GtkEntryBuffer>?, position: guint, @CCall.CString chars: String?, n_chars: guint): Unit

@CCall("knifunptr_libgtk33867_gtk_entry_buffer_emit_deleted_text")
external fun gtk_entry_buffer_emit_deleted_text(buffer: CValuesRef<GtkEntryBuffer>?, position: guint, n_chars: guint): Unit

@CCall("knifunptr_libgtk33868_gtk_list_store_get_type")
external fun gtk_list_store_get_type(): GType

@CCall("knifunptr_libgtk33869_gtk_list_store_new")
external fun gtk_list_store_new(n_columns: gint, vararg variadicArguments: Any?): CPointer<GtkListStore>?

@CCall("knifunptr_libgtk33870_gtk_list_store_newv")
external fun gtk_list_store_newv(n_columns: gint, types: CValuesRef<GTypeVar>?): CPointer<GtkListStore>?

@CCall("knifunptr_libgtk33871_gtk_list_store_set_column_types")
external fun gtk_list_store_set_column_types(list_store: CValuesRef<GtkListStore>?, n_columns: gint, types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_libgtk33872_gtk_list_store_set_value")
external fun gtk_list_store_set_value(list_store: CValuesRef<GtkListStore>?, iter: CValuesRef<GtkTreeIter>?, column: gint, value: CValuesRef<GValue>?): Unit

@CCall("knifunptr_libgtk33873_gtk_list_store_set")
external fun gtk_list_store_set(list_store: CValuesRef<GtkListStore>?, iter: CValuesRef<GtkTreeIter>?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk33874_gtk_list_store_set_valuesv")
external fun gtk_list_store_set_valuesv(list_store: CValuesRef<GtkListStore>?, iter: CValuesRef<GtkTreeIter>?, columns: CValuesRef<gintVar>?, values: CValuesRef<GValue>?, n_values: gint): Unit

@CCall("knifunptr_libgtk33875_gtk_list_store_set_valist")
external fun gtk_list_store_set_valist(list_store: CValuesRef<GtkListStore>?, iter: CValuesRef<GtkTreeIter>?, var_args: va_list?): Unit

@CCall("knifunptr_libgtk33876_gtk_list_store_remove")
external fun gtk_list_store_remove(list_store: CValuesRef<GtkListStore>?, iter: CValuesRef<GtkTreeIter>?): gboolean

@CCall("knifunptr_libgtk33877_gtk_list_store_insert")
external fun gtk_list_store_insert(list_store: CValuesRef<GtkListStore>?, iter: CValuesRef<GtkTreeIter>?, position: gint): Unit

@CCall("knifunptr_libgtk33878_gtk_list_store_insert_before")
external fun gtk_list_store_insert_before(list_store: CValuesRef<GtkListStore>?, iter: CValuesRef<GtkTreeIter>?, sibling: CValuesRef<GtkTreeIter>?): Unit

@CCall("knifunptr_libgtk33879_gtk_list_store_insert_after")
external fun gtk_list_store_insert_after(list_store: CValuesRef<GtkListStore>?, iter: CValuesRef<GtkTreeIter>?, sibling: CValuesRef<GtkTreeIter>?): Unit

@CCall("knifunptr_libgtk33880_gtk_list_store_insert_with_values")
external fun gtk_list_store_insert_with_values(list_store: CValuesRef<GtkListStore>?, iter: CValuesRef<GtkTreeIter>?, position: gint, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk33881_gtk_list_store_insert_with_valuesv")
external fun gtk_list_store_insert_with_valuesv(list_store: CValuesRef<GtkListStore>?, iter: CValuesRef<GtkTreeIter>?, position: gint, columns: CValuesRef<gintVar>?, values: CValuesRef<GValue>?, n_values: gint): Unit

@CCall("knifunptr_libgtk33882_gtk_list_store_prepend")
external fun gtk_list_store_prepend(list_store: CValuesRef<GtkListStore>?, iter: CValuesRef<GtkTreeIter>?): Unit

@CCall("knifunptr_libgtk33883_gtk_list_store_append")
external fun gtk_list_store_append(list_store: CValuesRef<GtkListStore>?, iter: CValuesRef<GtkTreeIter>?): Unit

@CCall("knifunptr_libgtk33884_gtk_list_store_clear")
external fun gtk_list_store_clear(list_store: CValuesRef<GtkListStore>?): Unit

@CCall("knifunptr_libgtk33885_gtk_list_store_iter_is_valid")
external fun gtk_list_store_iter_is_valid(list_store: CValuesRef<GtkListStore>?, iter: CValuesRef<GtkTreeIter>?): gboolean

@CCall("knifunptr_libgtk33886_gtk_list_store_reorder")
external fun gtk_list_store_reorder(store: CValuesRef<GtkListStore>?, new_order: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk33887_gtk_list_store_swap")
external fun gtk_list_store_swap(store: CValuesRef<GtkListStore>?, a: CValuesRef<GtkTreeIter>?, b: CValuesRef<GtkTreeIter>?): Unit

@CCall("knifunptr_libgtk33888_gtk_list_store_move_after")
external fun gtk_list_store_move_after(store: CValuesRef<GtkListStore>?, iter: CValuesRef<GtkTreeIter>?, position: CValuesRef<GtkTreeIter>?): Unit

@CCall("knifunptr_libgtk33889_gtk_list_store_move_before")
external fun gtk_list_store_move_before(store: CValuesRef<GtkListStore>?, iter: CValuesRef<GtkTreeIter>?, position: CValuesRef<GtkTreeIter>?): Unit

@CCall("knifunptr_libgtk33890_gtk_tree_model_filter_get_type")
external fun gtk_tree_model_filter_get_type(): GType

@CCall("knifunptr_libgtk33891_gtk_tree_model_filter_new")
external fun gtk_tree_model_filter_new(child_model: CValuesRef<GtkTreeModel>?, root: CValuesRef<GtkTreePath>?): CPointer<GtkTreeModel>?

@CCall("knifunptr_libgtk33892_gtk_tree_model_filter_set_visible_func")
external fun gtk_tree_model_filter_set_visible_func(filter: CValuesRef<GtkTreeModelFilter>?, func: GtkTreeModelFilterVisibleFunc?, data: gpointer?, destroy: GDestroyNotify?): Unit

@CCall("knifunptr_libgtk33893_gtk_tree_model_filter_set_modify_func")
external fun gtk_tree_model_filter_set_modify_func(filter: CValuesRef<GtkTreeModelFilter>?, n_columns: gint, types: CValuesRef<GTypeVar>?, func: GtkTreeModelFilterModifyFunc?, data: gpointer?, destroy: GDestroyNotify?): Unit

@CCall("knifunptr_libgtk33894_gtk_tree_model_filter_set_visible_column")
external fun gtk_tree_model_filter_set_visible_column(filter: CValuesRef<GtkTreeModelFilter>?, column: gint): Unit

@CCall("knifunptr_libgtk33895_gtk_tree_model_filter_get_model")
external fun gtk_tree_model_filter_get_model(filter: CValuesRef<GtkTreeModelFilter>?): CPointer<GtkTreeModel>?

@CCall("knifunptr_libgtk33896_gtk_tree_model_filter_convert_child_iter_to_iter")
external fun gtk_tree_model_filter_convert_child_iter_to_iter(filter: CValuesRef<GtkTreeModelFilter>?, filter_iter: CValuesRef<GtkTreeIter>?, child_iter: CValuesRef<GtkTreeIter>?): gboolean

@CCall("knifunptr_libgtk33897_gtk_tree_model_filter_convert_iter_to_child_iter")
external fun gtk_tree_model_filter_convert_iter_to_child_iter(filter: CValuesRef<GtkTreeModelFilter>?, child_iter: CValuesRef<GtkTreeIter>?, filter_iter: CValuesRef<GtkTreeIter>?): Unit

@CCall("knifunptr_libgtk33898_gtk_tree_model_filter_convert_child_path_to_path")
external fun gtk_tree_model_filter_convert_child_path_to_path(filter: CValuesRef<GtkTreeModelFilter>?, child_path: CValuesRef<GtkTreePath>?): CPointer<GtkTreePath>?

@CCall("knifunptr_libgtk33899_gtk_tree_model_filter_convert_path_to_child_path")
external fun gtk_tree_model_filter_convert_path_to_child_path(filter: CValuesRef<GtkTreeModelFilter>?, filter_path: CValuesRef<GtkTreePath>?): CPointer<GtkTreePath>?

@CCall("knifunptr_libgtk33900_gtk_tree_model_filter_refilter")
external fun gtk_tree_model_filter_refilter(filter: CValuesRef<GtkTreeModelFilter>?): Unit

@CCall("knifunptr_libgtk33901_gtk_tree_model_filter_clear_cache")
external fun gtk_tree_model_filter_clear_cache(filter: CValuesRef<GtkTreeModelFilter>?): Unit

@CCall("knifunptr_libgtk33902_gtk_entry_completion_get_type")
external fun gtk_entry_completion_get_type(): GType

@CCall("knifunptr_libgtk33903_gtk_entry_completion_new")
external fun gtk_entry_completion_new(): CPointer<GtkEntryCompletion>?

@CCall("knifunptr_libgtk33904_gtk_entry_completion_new_with_area")
external fun gtk_entry_completion_new_with_area(area: CValuesRef<GtkCellArea>?): CPointer<GtkEntryCompletion>?

@CCall("knifunptr_libgtk33905_gtk_entry_completion_get_entry")
external fun gtk_entry_completion_get_entry(completion: CValuesRef<GtkEntryCompletion>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33906_gtk_entry_completion_set_model")
external fun gtk_entry_completion_set_model(completion: CValuesRef<GtkEntryCompletion>?, model: CValuesRef<GtkTreeModel>?): Unit

@CCall("knifunptr_libgtk33907_gtk_entry_completion_get_model")
external fun gtk_entry_completion_get_model(completion: CValuesRef<GtkEntryCompletion>?): CPointer<GtkTreeModel>?

@CCall("knifunptr_libgtk33908_gtk_entry_completion_set_match_func")
external fun gtk_entry_completion_set_match_func(completion: CValuesRef<GtkEntryCompletion>?, func: GtkEntryCompletionMatchFunc?, func_data: gpointer?, func_notify: GDestroyNotify?): Unit

@CCall("knifunptr_libgtk33909_gtk_entry_completion_set_minimum_key_length")
external fun gtk_entry_completion_set_minimum_key_length(completion: CValuesRef<GtkEntryCompletion>?, length: gint): Unit

@CCall("knifunptr_libgtk33910_gtk_entry_completion_get_minimum_key_length")
external fun gtk_entry_completion_get_minimum_key_length(completion: CValuesRef<GtkEntryCompletion>?): gint

@CCall("knifunptr_libgtk33911_gtk_entry_completion_compute_prefix")
external fun gtk_entry_completion_compute_prefix(completion: CValuesRef<GtkEntryCompletion>?, @CCall.CString key: String?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk33912_gtk_entry_completion_complete")
external fun gtk_entry_completion_complete(completion: CValuesRef<GtkEntryCompletion>?): Unit

@CCall("knifunptr_libgtk33913_gtk_entry_completion_insert_prefix")
external fun gtk_entry_completion_insert_prefix(completion: CValuesRef<GtkEntryCompletion>?): Unit

@CCall("knifunptr_libgtk33914_gtk_entry_completion_insert_action_text")
external fun gtk_entry_completion_insert_action_text(completion: CValuesRef<GtkEntryCompletion>?, index_: gint, @CCall.CString text: String?): Unit

@CCall("knifunptr_libgtk33915_gtk_entry_completion_insert_action_markup")
external fun gtk_entry_completion_insert_action_markup(completion: CValuesRef<GtkEntryCompletion>?, index_: gint, @CCall.CString markup: String?): Unit

@CCall("knifunptr_libgtk33916_gtk_entry_completion_delete_action")
external fun gtk_entry_completion_delete_action(completion: CValuesRef<GtkEntryCompletion>?, index_: gint): Unit

@CCall("knifunptr_libgtk33917_gtk_entry_completion_set_inline_completion")
external fun gtk_entry_completion_set_inline_completion(completion: CValuesRef<GtkEntryCompletion>?, inline_completion: gboolean): Unit

@CCall("knifunptr_libgtk33918_gtk_entry_completion_get_inline_completion")
external fun gtk_entry_completion_get_inline_completion(completion: CValuesRef<GtkEntryCompletion>?): gboolean

@CCall("knifunptr_libgtk33919_gtk_entry_completion_set_inline_selection")
external fun gtk_entry_completion_set_inline_selection(completion: CValuesRef<GtkEntryCompletion>?, inline_selection: gboolean): Unit

@CCall("knifunptr_libgtk33920_gtk_entry_completion_get_inline_selection")
external fun gtk_entry_completion_get_inline_selection(completion: CValuesRef<GtkEntryCompletion>?): gboolean

@CCall("knifunptr_libgtk33921_gtk_entry_completion_set_popup_completion")
external fun gtk_entry_completion_set_popup_completion(completion: CValuesRef<GtkEntryCompletion>?, popup_completion: gboolean): Unit

@CCall("knifunptr_libgtk33922_gtk_entry_completion_get_popup_completion")
external fun gtk_entry_completion_get_popup_completion(completion: CValuesRef<GtkEntryCompletion>?): gboolean

@CCall("knifunptr_libgtk33923_gtk_entry_completion_set_popup_set_width")
external fun gtk_entry_completion_set_popup_set_width(completion: CValuesRef<GtkEntryCompletion>?, popup_set_width: gboolean): Unit

@CCall("knifunptr_libgtk33924_gtk_entry_completion_get_popup_set_width")
external fun gtk_entry_completion_get_popup_set_width(completion: CValuesRef<GtkEntryCompletion>?): gboolean

@CCall("knifunptr_libgtk33925_gtk_entry_completion_set_popup_single_match")
external fun gtk_entry_completion_set_popup_single_match(completion: CValuesRef<GtkEntryCompletion>?, popup_single_match: gboolean): Unit

@CCall("knifunptr_libgtk33926_gtk_entry_completion_get_popup_single_match")
external fun gtk_entry_completion_get_popup_single_match(completion: CValuesRef<GtkEntryCompletion>?): gboolean

@CCall("knifunptr_libgtk33927_gtk_entry_completion_get_completion_prefix")
external fun gtk_entry_completion_get_completion_prefix(completion: CValuesRef<GtkEntryCompletion>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk33928_gtk_entry_completion_set_text_column")
external fun gtk_entry_completion_set_text_column(completion: CValuesRef<GtkEntryCompletion>?, column: gint): Unit

@CCall("knifunptr_libgtk33929_gtk_entry_completion_get_text_column")
external fun gtk_entry_completion_get_text_column(completion: CValuesRef<GtkEntryCompletion>?): gint

@CCall("knifunptr_libgtk33930_gtk_image_get_type")
external fun gtk_image_get_type(): GType

@CCall("knifunptr_libgtk33931_gtk_image_new")
external fun gtk_image_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33932_gtk_image_new_from_file")
external fun gtk_image_new_from_file(@CCall.CString filename: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33933_gtk_image_new_from_resource")
external fun gtk_image_new_from_resource(@CCall.CString resource_path: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33934_gtk_image_new_from_pixbuf")
external fun gtk_image_new_from_pixbuf(pixbuf: CValuesRef<GdkPixbuf>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33935_gtk_image_new_from_stock")
external fun gtk_image_new_from_stock(@CCall.CString stock_id: String?, size: GtkIconSize): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33936_gtk_image_new_from_icon_set")
external fun gtk_image_new_from_icon_set(icon_set: CValuesRef<GtkIconSet>?, size: GtkIconSize): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33937_gtk_image_new_from_animation")
external fun gtk_image_new_from_animation(animation: CValuesRef<GdkPixbufAnimation>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33938_gtk_image_new_from_icon_name")
external fun gtk_image_new_from_icon_name(@CCall.CString icon_name: String?, size: GtkIconSize): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33939_gtk_image_new_from_gicon")
external fun gtk_image_new_from_gicon(icon: CValuesRef<GIcon>?, size: GtkIconSize): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33940_gtk_image_new_from_surface")
external fun gtk_image_new_from_surface(surface: CValuesRef<cairo_surface_t>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33941_gtk_image_clear")
external fun gtk_image_clear(image: CValuesRef<GtkImage>?): Unit

@CCall("knifunptr_libgtk33942_gtk_image_set_from_file")
external fun gtk_image_set_from_file(image: CValuesRef<GtkImage>?, @CCall.CString filename: String?): Unit

@CCall("knifunptr_libgtk33943_gtk_image_set_from_resource")
external fun gtk_image_set_from_resource(image: CValuesRef<GtkImage>?, @CCall.CString resource_path: String?): Unit

@CCall("knifunptr_libgtk33944_gtk_image_set_from_pixbuf")
external fun gtk_image_set_from_pixbuf(image: CValuesRef<GtkImage>?, pixbuf: CValuesRef<GdkPixbuf>?): Unit

@CCall("knifunptr_libgtk33945_gtk_image_set_from_stock")
external fun gtk_image_set_from_stock(image: CValuesRef<GtkImage>?, @CCall.CString stock_id: String?, size: GtkIconSize): Unit

@CCall("knifunptr_libgtk33946_gtk_image_set_from_icon_set")
external fun gtk_image_set_from_icon_set(image: CValuesRef<GtkImage>?, icon_set: CValuesRef<GtkIconSet>?, size: GtkIconSize): Unit

@CCall("knifunptr_libgtk33947_gtk_image_set_from_animation")
external fun gtk_image_set_from_animation(image: CValuesRef<GtkImage>?, animation: CValuesRef<GdkPixbufAnimation>?): Unit

@CCall("knifunptr_libgtk33948_gtk_image_set_from_icon_name")
external fun gtk_image_set_from_icon_name(image: CValuesRef<GtkImage>?, @CCall.CString icon_name: String?, size: GtkIconSize): Unit

@CCall("knifunptr_libgtk33949_gtk_image_set_from_gicon")
external fun gtk_image_set_from_gicon(image: CValuesRef<GtkImage>?, icon: CValuesRef<GIcon>?, size: GtkIconSize): Unit

@CCall("knifunptr_libgtk33950_gtk_image_set_from_surface")
external fun gtk_image_set_from_surface(image: CValuesRef<GtkImage>?, surface: CValuesRef<cairo_surface_t>?): Unit

@CCall("knifunptr_libgtk33951_gtk_image_set_pixel_size")
external fun gtk_image_set_pixel_size(image: CValuesRef<GtkImage>?, pixel_size: gint): Unit

@CCall("knifunptr_libgtk33952_gtk_image_get_storage_type")
external fun gtk_image_get_storage_type(image: CValuesRef<GtkImage>?): GtkImageType

@CCall("knifunptr_libgtk33953_gtk_image_get_pixbuf")
external fun gtk_image_get_pixbuf(image: CValuesRef<GtkImage>?): CPointer<GdkPixbuf>?

@CCall("knifunptr_libgtk33954_gtk_image_get_stock")
external fun gtk_image_get_stock(image: CValuesRef<GtkImage>?, stock_id: CValuesRef<CPointerVar<gcharVar>>?, size: CValuesRef<GtkIconSize.Var>?): Unit

@CCall("knifunptr_libgtk33955_gtk_image_get_icon_set")
external fun gtk_image_get_icon_set(image: CValuesRef<GtkImage>?, icon_set: CValuesRef<CPointerVar<GtkIconSet>>?, size: CValuesRef<GtkIconSize.Var>?): Unit

@CCall("knifunptr_libgtk33956_gtk_image_get_animation")
external fun gtk_image_get_animation(image: CValuesRef<GtkImage>?): CPointer<GdkPixbufAnimation>?

@CCall("knifunptr_libgtk33957_gtk_image_get_icon_name")
external fun gtk_image_get_icon_name(image: CValuesRef<GtkImage>?, icon_name: CValuesRef<CPointerVar<gcharVar>>?, size: CValuesRef<GtkIconSize.Var>?): Unit

@CCall("knifunptr_libgtk33958_gtk_image_get_gicon")
external fun gtk_image_get_gicon(image: CValuesRef<GtkImage>?, gicon: CValuesRef<CPointerVar<GIcon>>?, size: CValuesRef<GtkIconSize.Var>?): Unit

@CCall("knifunptr_libgtk33959_gtk_image_get_pixel_size")
external fun gtk_image_get_pixel_size(image: CValuesRef<GtkImage>?): gint

@CCall("knifunptr_libgtk33960_gtk_entry_get_type")
external fun gtk_entry_get_type(): GType

@CCall("knifunptr_libgtk33961_gtk_entry_new")
external fun gtk_entry_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33962_gtk_entry_new_with_buffer")
external fun gtk_entry_new_with_buffer(buffer: CValuesRef<GtkEntryBuffer>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk33963_gtk_entry_get_buffer")
external fun gtk_entry_get_buffer(entry: CValuesRef<GtkEntry>?): CPointer<GtkEntryBuffer>?

@CCall("knifunptr_libgtk33964_gtk_entry_set_buffer")
external fun gtk_entry_set_buffer(entry: CValuesRef<GtkEntry>?, buffer: CValuesRef<GtkEntryBuffer>?): Unit

@CCall("knifunptr_libgtk33965_gtk_entry_get_text_area")
external fun gtk_entry_get_text_area(entry: CValuesRef<GtkEntry>?, text_area: CValuesRef<GdkRectangle>?): Unit

@CCall("knifunptr_libgtk33966_gtk_entry_set_visibility")
external fun gtk_entry_set_visibility(entry: CValuesRef<GtkEntry>?, visible: gboolean): Unit

@CCall("knifunptr_libgtk33967_gtk_entry_get_visibility")
external fun gtk_entry_get_visibility(entry: CValuesRef<GtkEntry>?): gboolean

@CCall("knifunptr_libgtk33968_gtk_entry_set_invisible_char")
external fun gtk_entry_set_invisible_char(entry: CValuesRef<GtkEntry>?, ch: gunichar): Unit

@CCall("knifunptr_libgtk33969_gtk_entry_get_invisible_char")
external fun gtk_entry_get_invisible_char(entry: CValuesRef<GtkEntry>?): gunichar

@CCall("knifunptr_libgtk33970_gtk_entry_unset_invisible_char")
external fun gtk_entry_unset_invisible_char(entry: CValuesRef<GtkEntry>?): Unit

@CCall("knifunptr_libgtk33971_gtk_entry_set_has_frame")
external fun gtk_entry_set_has_frame(entry: CValuesRef<GtkEntry>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk33972_gtk_entry_get_has_frame")
external fun gtk_entry_get_has_frame(entry: CValuesRef<GtkEntry>?): gboolean

@CCall("knifunptr_libgtk33973_gtk_entry_set_inner_border")
external fun gtk_entry_set_inner_border(entry: CValuesRef<GtkEntry>?, border: CValuesRef<GtkBorder>?): Unit

@CCall("knifunptr_libgtk33974_gtk_entry_get_inner_border")
external fun gtk_entry_get_inner_border(entry: CValuesRef<GtkEntry>?): CPointer<GtkBorder>?

@CCall("knifunptr_libgtk33975_gtk_entry_set_overwrite_mode")
external fun gtk_entry_set_overwrite_mode(entry: CValuesRef<GtkEntry>?, overwrite: gboolean): Unit

@CCall("knifunptr_libgtk33976_gtk_entry_get_overwrite_mode")
external fun gtk_entry_get_overwrite_mode(entry: CValuesRef<GtkEntry>?): gboolean

@CCall("knifunptr_libgtk33977_gtk_entry_set_max_length")
external fun gtk_entry_set_max_length(entry: CValuesRef<GtkEntry>?, max: gint): Unit

@CCall("knifunptr_libgtk33978_gtk_entry_get_max_length")
external fun gtk_entry_get_max_length(entry: CValuesRef<GtkEntry>?): gint

@CCall("knifunptr_libgtk33979_gtk_entry_get_text_length")
external fun gtk_entry_get_text_length(entry: CValuesRef<GtkEntry>?): guint16

@CCall("knifunptr_libgtk33980_gtk_entry_set_activates_default")
external fun gtk_entry_set_activates_default(entry: CValuesRef<GtkEntry>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk33981_gtk_entry_get_activates_default")
external fun gtk_entry_get_activates_default(entry: CValuesRef<GtkEntry>?): gboolean

@CCall("knifunptr_libgtk33982_gtk_entry_set_width_chars")
external fun gtk_entry_set_width_chars(entry: CValuesRef<GtkEntry>?, n_chars: gint): Unit

@CCall("knifunptr_libgtk33983_gtk_entry_get_width_chars")
external fun gtk_entry_get_width_chars(entry: CValuesRef<GtkEntry>?): gint

@CCall("knifunptr_libgtk33984_gtk_entry_set_max_width_chars")
external fun gtk_entry_set_max_width_chars(entry: CValuesRef<GtkEntry>?, n_chars: gint): Unit

@CCall("knifunptr_libgtk33985_gtk_entry_get_max_width_chars")
external fun gtk_entry_get_max_width_chars(entry: CValuesRef<GtkEntry>?): gint

@CCall("knifunptr_libgtk33986_gtk_entry_set_text")
external fun gtk_entry_set_text(entry: CValuesRef<GtkEntry>?, @CCall.CString text: String?): Unit

@CCall("knifunptr_libgtk33987_gtk_entry_get_text")
external fun gtk_entry_get_text(entry: CValuesRef<GtkEntry>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk33988_gtk_entry_get_layout")
external fun gtk_entry_get_layout(entry: CValuesRef<GtkEntry>?): CPointer<PangoLayout>?

@CCall("knifunptr_libgtk33989_gtk_entry_get_layout_offsets")
external fun gtk_entry_get_layout_offsets(entry: CValuesRef<GtkEntry>?, x: CValuesRef<gintVar>?, y: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk33990_gtk_entry_set_alignment")
external fun gtk_entry_set_alignment(entry: CValuesRef<GtkEntry>?, xalign: gfloat): Unit

@CCall("knifunptr_libgtk33991_gtk_entry_get_alignment")
external fun gtk_entry_get_alignment(entry: CValuesRef<GtkEntry>?): gfloat

@CCall("knifunptr_libgtk33992_gtk_entry_set_completion")
external fun gtk_entry_set_completion(entry: CValuesRef<GtkEntry>?, completion: CValuesRef<GtkEntryCompletion>?): Unit

@CCall("knifunptr_libgtk33993_gtk_entry_get_completion")
external fun gtk_entry_get_completion(entry: CValuesRef<GtkEntry>?): CPointer<GtkEntryCompletion>?

@CCall("knifunptr_libgtk33994_gtk_entry_layout_index_to_text_index")
external fun gtk_entry_layout_index_to_text_index(entry: CValuesRef<GtkEntry>?, layout_index: gint): gint

@CCall("knifunptr_libgtk33995_gtk_entry_text_index_to_layout_index")
external fun gtk_entry_text_index_to_layout_index(entry: CValuesRef<GtkEntry>?, text_index: gint): gint

@CCall("knifunptr_libgtk33996_gtk_entry_set_cursor_hadjustment")
external fun gtk_entry_set_cursor_hadjustment(entry: CValuesRef<GtkEntry>?, adjustment: CValuesRef<GtkAdjustment>?): Unit

@CCall("knifunptr_libgtk33997_gtk_entry_get_cursor_hadjustment")
external fun gtk_entry_get_cursor_hadjustment(entry: CValuesRef<GtkEntry>?): CPointer<GtkAdjustment>?

@CCall("knifunptr_libgtk33998_gtk_entry_set_progress_fraction")
external fun gtk_entry_set_progress_fraction(entry: CValuesRef<GtkEntry>?, fraction: gdouble): Unit

@CCall("knifunptr_libgtk33999_gtk_entry_get_progress_fraction")
external fun gtk_entry_get_progress_fraction(entry: CValuesRef<GtkEntry>?): gdouble

@CCall("knifunptr_libgtk34000_gtk_entry_set_progress_pulse_step")
external fun gtk_entry_set_progress_pulse_step(entry: CValuesRef<GtkEntry>?, fraction: gdouble): Unit

@CCall("knifunptr_libgtk34001_gtk_entry_get_progress_pulse_step")
external fun gtk_entry_get_progress_pulse_step(entry: CValuesRef<GtkEntry>?): gdouble

@CCall("knifunptr_libgtk34002_gtk_entry_progress_pulse")
external fun gtk_entry_progress_pulse(entry: CValuesRef<GtkEntry>?): Unit

@CCall("knifunptr_libgtk34003_gtk_entry_get_placeholder_text")
external fun gtk_entry_get_placeholder_text(entry: CValuesRef<GtkEntry>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk34004_gtk_entry_set_placeholder_text")
external fun gtk_entry_set_placeholder_text(entry: CValuesRef<GtkEntry>?, @CCall.CString text: String?): Unit

@CCall("knifunptr_libgtk34005_gtk_entry_set_icon_from_pixbuf")
external fun gtk_entry_set_icon_from_pixbuf(entry: CValuesRef<GtkEntry>?, icon_pos: GtkEntryIconPosition, pixbuf: CValuesRef<GdkPixbuf>?): Unit

@CCall("knifunptr_libgtk34006_gtk_entry_set_icon_from_stock")
external fun gtk_entry_set_icon_from_stock(entry: CValuesRef<GtkEntry>?, icon_pos: GtkEntryIconPosition, @CCall.CString stock_id: String?): Unit

@CCall("knifunptr_libgtk34007_gtk_entry_set_icon_from_icon_name")
external fun gtk_entry_set_icon_from_icon_name(entry: CValuesRef<GtkEntry>?, icon_pos: GtkEntryIconPosition, @CCall.CString icon_name: String?): Unit

@CCall("knifunptr_libgtk34008_gtk_entry_set_icon_from_gicon")
external fun gtk_entry_set_icon_from_gicon(entry: CValuesRef<GtkEntry>?, icon_pos: GtkEntryIconPosition, icon: CValuesRef<GIcon>?): Unit

@CCall("knifunptr_libgtk34009_gtk_entry_get_icon_storage_type")
external fun gtk_entry_get_icon_storage_type(entry: CValuesRef<GtkEntry>?, icon_pos: GtkEntryIconPosition): GtkImageType

@CCall("knifunptr_libgtk34010_gtk_entry_get_icon_pixbuf")
external fun gtk_entry_get_icon_pixbuf(entry: CValuesRef<GtkEntry>?, icon_pos: GtkEntryIconPosition): CPointer<GdkPixbuf>?

@CCall("knifunptr_libgtk34011_gtk_entry_get_icon_stock")
external fun gtk_entry_get_icon_stock(entry: CValuesRef<GtkEntry>?, icon_pos: GtkEntryIconPosition): CPointer<gcharVar>?

@CCall("knifunptr_libgtk34012_gtk_entry_get_icon_name")
external fun gtk_entry_get_icon_name(entry: CValuesRef<GtkEntry>?, icon_pos: GtkEntryIconPosition): CPointer<gcharVar>?

@CCall("knifunptr_libgtk34013_gtk_entry_get_icon_gicon")
external fun gtk_entry_get_icon_gicon(entry: CValuesRef<GtkEntry>?, icon_pos: GtkEntryIconPosition): CPointer<GIcon>?

@CCall("knifunptr_libgtk34014_gtk_entry_set_icon_activatable")
external fun gtk_entry_set_icon_activatable(entry: CValuesRef<GtkEntry>?, icon_pos: GtkEntryIconPosition, activatable: gboolean): Unit

@CCall("knifunptr_libgtk34015_gtk_entry_get_icon_activatable")
external fun gtk_entry_get_icon_activatable(entry: CValuesRef<GtkEntry>?, icon_pos: GtkEntryIconPosition): gboolean

@CCall("knifunptr_libgtk34016_gtk_entry_set_icon_sensitive")
external fun gtk_entry_set_icon_sensitive(entry: CValuesRef<GtkEntry>?, icon_pos: GtkEntryIconPosition, sensitive: gboolean): Unit

@CCall("knifunptr_libgtk34017_gtk_entry_get_icon_sensitive")
external fun gtk_entry_get_icon_sensitive(entry: CValuesRef<GtkEntry>?, icon_pos: GtkEntryIconPosition): gboolean

@CCall("knifunptr_libgtk34018_gtk_entry_get_icon_at_pos")
external fun gtk_entry_get_icon_at_pos(entry: CValuesRef<GtkEntry>?, x: gint, y: gint): gint

@CCall("knifunptr_libgtk34019_gtk_entry_set_icon_tooltip_text")
external fun gtk_entry_set_icon_tooltip_text(entry: CValuesRef<GtkEntry>?, icon_pos: GtkEntryIconPosition, @CCall.CString tooltip: String?): Unit

@CCall("knifunptr_libgtk34020_gtk_entry_get_icon_tooltip_text")
external fun gtk_entry_get_icon_tooltip_text(entry: CValuesRef<GtkEntry>?, icon_pos: GtkEntryIconPosition): CPointer<gcharVar>?

@CCall("knifunptr_libgtk34021_gtk_entry_set_icon_tooltip_markup")
external fun gtk_entry_set_icon_tooltip_markup(entry: CValuesRef<GtkEntry>?, icon_pos: GtkEntryIconPosition, @CCall.CString tooltip: String?): Unit

@CCall("knifunptr_libgtk34022_gtk_entry_get_icon_tooltip_markup")
external fun gtk_entry_get_icon_tooltip_markup(entry: CValuesRef<GtkEntry>?, icon_pos: GtkEntryIconPosition): CPointer<gcharVar>?

@CCall("knifunptr_libgtk34023_gtk_entry_set_icon_drag_source")
external fun gtk_entry_set_icon_drag_source(entry: CValuesRef<GtkEntry>?, icon_pos: GtkEntryIconPosition, target_list: CValuesRef<GtkTargetList>?, actions: GdkDragAction): Unit

@CCall("knifunptr_libgtk34024_gtk_entry_get_current_icon_drag_source")
external fun gtk_entry_get_current_icon_drag_source(entry: CValuesRef<GtkEntry>?): gint

@CCall("knifunptr_libgtk34025_gtk_entry_get_icon_area")
external fun gtk_entry_get_icon_area(entry: CValuesRef<GtkEntry>?, icon_pos: GtkEntryIconPosition, icon_area: CValuesRef<GdkRectangle>?): Unit

@CCall("knifunptr_libgtk34026_gtk_entry_im_context_filter_keypress")
external fun gtk_entry_im_context_filter_keypress(entry: CValuesRef<GtkEntry>?, event: CValuesRef<GdkEventKey>?): gboolean

@CCall("knifunptr_libgtk34027_gtk_entry_reset_im_context")
external fun gtk_entry_reset_im_context(entry: CValuesRef<GtkEntry>?): Unit

@CCall("knifunptr_libgtk34028_gtk_entry_set_input_purpose")
external fun gtk_entry_set_input_purpose(entry: CValuesRef<GtkEntry>?, purpose: GtkInputPurpose): Unit

@CCall("knifunptr_libgtk34029_gtk_entry_get_input_purpose")
external fun gtk_entry_get_input_purpose(entry: CValuesRef<GtkEntry>?): GtkInputPurpose

@CCall("knifunptr_libgtk34030_gtk_entry_set_input_hints")
external fun gtk_entry_set_input_hints(entry: CValuesRef<GtkEntry>?, hints: GtkInputHints): Unit

@CCall("knifunptr_libgtk34031_gtk_entry_get_input_hints")
external fun gtk_entry_get_input_hints(entry: CValuesRef<GtkEntry>?): GtkInputHints

@CCall("knifunptr_libgtk34032_gtk_entry_set_attributes")
external fun gtk_entry_set_attributes(entry: CValuesRef<GtkEntry>?, attrs: CValuesRef<PangoAttrList>?): Unit

@CCall("knifunptr_libgtk34033_gtk_entry_get_attributes")
external fun gtk_entry_get_attributes(entry: CValuesRef<GtkEntry>?): CPointer<PangoAttrList>?

@CCall("knifunptr_libgtk34034_gtk_entry_set_tabs")
external fun gtk_entry_set_tabs(entry: CValuesRef<GtkEntry>?, tabs: CValuesRef<PangoTabArray>?): Unit

@CCall("knifunptr_libgtk34035_gtk_entry_get_tabs")
external fun gtk_entry_get_tabs(entry: CValuesRef<GtkEntry>?): CPointer<PangoTabArray>?

@CCall("knifunptr_libgtk34036_gtk_entry_grab_focus_without_selecting")
external fun gtk_entry_grab_focus_without_selecting(entry: CValuesRef<GtkEntry>?): Unit

@CCall("knifunptr_libgtk34037_gtk_tree_view_get_type")
external fun gtk_tree_view_get_type(): GType

@CCall("knifunptr_libgtk34038_gtk_tree_view_new")
external fun gtk_tree_view_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34039_gtk_tree_view_new_with_model")
external fun gtk_tree_view_new_with_model(model: CValuesRef<GtkTreeModel>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34040_gtk_tree_view_get_model")
external fun gtk_tree_view_get_model(tree_view: CValuesRef<GtkTreeView>?): CPointer<GtkTreeModel>?

@CCall("knifunptr_libgtk34041_gtk_tree_view_set_model")
external fun gtk_tree_view_set_model(tree_view: CValuesRef<GtkTreeView>?, model: CValuesRef<GtkTreeModel>?): Unit

@CCall("knifunptr_libgtk34042_gtk_tree_view_get_selection")
external fun gtk_tree_view_get_selection(tree_view: CValuesRef<GtkTreeView>?): CPointer<GtkTreeSelection>?

@CCall("knifunptr_libgtk34043_gtk_tree_view_get_hadjustment")
external fun gtk_tree_view_get_hadjustment(tree_view: CValuesRef<GtkTreeView>?): CPointer<GtkAdjustment>?

@CCall("knifunptr_libgtk34044_gtk_tree_view_set_hadjustment")
external fun gtk_tree_view_set_hadjustment(tree_view: CValuesRef<GtkTreeView>?, adjustment: CValuesRef<GtkAdjustment>?): Unit

@CCall("knifunptr_libgtk34045_gtk_tree_view_get_vadjustment")
external fun gtk_tree_view_get_vadjustment(tree_view: CValuesRef<GtkTreeView>?): CPointer<GtkAdjustment>?

@CCall("knifunptr_libgtk34046_gtk_tree_view_set_vadjustment")
external fun gtk_tree_view_set_vadjustment(tree_view: CValuesRef<GtkTreeView>?, adjustment: CValuesRef<GtkAdjustment>?): Unit

@CCall("knifunptr_libgtk34047_gtk_tree_view_get_headers_visible")
external fun gtk_tree_view_get_headers_visible(tree_view: CValuesRef<GtkTreeView>?): gboolean

@CCall("knifunptr_libgtk34048_gtk_tree_view_set_headers_visible")
external fun gtk_tree_view_set_headers_visible(tree_view: CValuesRef<GtkTreeView>?, headers_visible: gboolean): Unit

@CCall("knifunptr_libgtk34049_gtk_tree_view_columns_autosize")
external fun gtk_tree_view_columns_autosize(tree_view: CValuesRef<GtkTreeView>?): Unit

@CCall("knifunptr_libgtk34050_gtk_tree_view_get_headers_clickable")
external fun gtk_tree_view_get_headers_clickable(tree_view: CValuesRef<GtkTreeView>?): gboolean

@CCall("knifunptr_libgtk34051_gtk_tree_view_set_headers_clickable")
external fun gtk_tree_view_set_headers_clickable(tree_view: CValuesRef<GtkTreeView>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk34052_gtk_tree_view_set_rules_hint")
external fun gtk_tree_view_set_rules_hint(tree_view: CValuesRef<GtkTreeView>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk34053_gtk_tree_view_get_rules_hint")
external fun gtk_tree_view_get_rules_hint(tree_view: CValuesRef<GtkTreeView>?): gboolean

@CCall("knifunptr_libgtk34054_gtk_tree_view_get_activate_on_single_click")
external fun gtk_tree_view_get_activate_on_single_click(tree_view: CValuesRef<GtkTreeView>?): gboolean

@CCall("knifunptr_libgtk34055_gtk_tree_view_set_activate_on_single_click")
external fun gtk_tree_view_set_activate_on_single_click(tree_view: CValuesRef<GtkTreeView>?, single: gboolean): Unit

@CCall("knifunptr_libgtk34056_gtk_tree_view_append_column")
external fun gtk_tree_view_append_column(tree_view: CValuesRef<GtkTreeView>?, column: CValuesRef<GtkTreeViewColumn>?): gint

@CCall("knifunptr_libgtk34057_gtk_tree_view_remove_column")
external fun gtk_tree_view_remove_column(tree_view: CValuesRef<GtkTreeView>?, column: CValuesRef<GtkTreeViewColumn>?): gint

@CCall("knifunptr_libgtk34058_gtk_tree_view_insert_column")
external fun gtk_tree_view_insert_column(tree_view: CValuesRef<GtkTreeView>?, column: CValuesRef<GtkTreeViewColumn>?, position: gint): gint

@CCall("knifunptr_libgtk34059_gtk_tree_view_insert_column_with_attributes")
external fun gtk_tree_view_insert_column_with_attributes(tree_view: CValuesRef<GtkTreeView>?, position: gint, @CCall.CString title: String?, cell: CValuesRef<GtkCellRenderer>?, vararg variadicArguments: Any?): gint

@CCall("knifunptr_libgtk34060_gtk_tree_view_insert_column_with_data_func")
external fun gtk_tree_view_insert_column_with_data_func(tree_view: CValuesRef<GtkTreeView>?, position: gint, @CCall.CString title: String?, cell: CValuesRef<GtkCellRenderer>?, func: GtkTreeCellDataFunc?, data: gpointer?, dnotify: GDestroyNotify?): gint

@CCall("knifunptr_libgtk34061_gtk_tree_view_get_n_columns")
external fun gtk_tree_view_get_n_columns(tree_view: CValuesRef<GtkTreeView>?): guint

@CCall("knifunptr_libgtk34062_gtk_tree_view_get_column")
external fun gtk_tree_view_get_column(tree_view: CValuesRef<GtkTreeView>?, n: gint): CPointer<GtkTreeViewColumn>?

@CCall("knifunptr_libgtk34063_gtk_tree_view_get_columns")
external fun gtk_tree_view_get_columns(tree_view: CValuesRef<GtkTreeView>?): CPointer<GList>?

@CCall("knifunptr_libgtk34064_gtk_tree_view_move_column_after")
external fun gtk_tree_view_move_column_after(tree_view: CValuesRef<GtkTreeView>?, column: CValuesRef<GtkTreeViewColumn>?, base_column: CValuesRef<GtkTreeViewColumn>?): Unit

@CCall("knifunptr_libgtk34065_gtk_tree_view_set_expander_column")
external fun gtk_tree_view_set_expander_column(tree_view: CValuesRef<GtkTreeView>?, column: CValuesRef<GtkTreeViewColumn>?): Unit

@CCall("knifunptr_libgtk34066_gtk_tree_view_get_expander_column")
external fun gtk_tree_view_get_expander_column(tree_view: CValuesRef<GtkTreeView>?): CPointer<GtkTreeViewColumn>?

@CCall("knifunptr_libgtk34067_gtk_tree_view_set_column_drag_function")
external fun gtk_tree_view_set_column_drag_function(tree_view: CValuesRef<GtkTreeView>?, func: GtkTreeViewColumnDropFunc?, user_data: gpointer?, destroy: GDestroyNotify?): Unit

@CCall("knifunptr_libgtk34068_gtk_tree_view_scroll_to_point")
external fun gtk_tree_view_scroll_to_point(tree_view: CValuesRef<GtkTreeView>?, tree_x: gint, tree_y: gint): Unit

@CCall("knifunptr_libgtk34069_gtk_tree_view_scroll_to_cell")
external fun gtk_tree_view_scroll_to_cell(tree_view: CValuesRef<GtkTreeView>?, path: CValuesRef<GtkTreePath>?, column: CValuesRef<GtkTreeViewColumn>?, use_align: gboolean, row_align: gfloat, col_align: gfloat): Unit

@CCall("knifunptr_libgtk34070_gtk_tree_view_row_activated")
external fun gtk_tree_view_row_activated(tree_view: CValuesRef<GtkTreeView>?, path: CValuesRef<GtkTreePath>?, column: CValuesRef<GtkTreeViewColumn>?): Unit

@CCall("knifunptr_libgtk34071_gtk_tree_view_expand_all")
external fun gtk_tree_view_expand_all(tree_view: CValuesRef<GtkTreeView>?): Unit

@CCall("knifunptr_libgtk34072_gtk_tree_view_collapse_all")
external fun gtk_tree_view_collapse_all(tree_view: CValuesRef<GtkTreeView>?): Unit

@CCall("knifunptr_libgtk34073_gtk_tree_view_expand_to_path")
external fun gtk_tree_view_expand_to_path(tree_view: CValuesRef<GtkTreeView>?, path: CValuesRef<GtkTreePath>?): Unit

@CCall("knifunptr_libgtk34074_gtk_tree_view_expand_row")
external fun gtk_tree_view_expand_row(tree_view: CValuesRef<GtkTreeView>?, path: CValuesRef<GtkTreePath>?, open_all: gboolean): gboolean

@CCall("knifunptr_libgtk34075_gtk_tree_view_collapse_row")
external fun gtk_tree_view_collapse_row(tree_view: CValuesRef<GtkTreeView>?, path: CValuesRef<GtkTreePath>?): gboolean

@CCall("knifunptr_libgtk34076_gtk_tree_view_map_expanded_rows")
external fun gtk_tree_view_map_expanded_rows(tree_view: CValuesRef<GtkTreeView>?, func: GtkTreeViewMappingFunc?, data: gpointer?): Unit

@CCall("knifunptr_libgtk34077_gtk_tree_view_row_expanded")
external fun gtk_tree_view_row_expanded(tree_view: CValuesRef<GtkTreeView>?, path: CValuesRef<GtkTreePath>?): gboolean

@CCall("knifunptr_libgtk34078_gtk_tree_view_set_reorderable")
external fun gtk_tree_view_set_reorderable(tree_view: CValuesRef<GtkTreeView>?, reorderable: gboolean): Unit

@CCall("knifunptr_libgtk34079_gtk_tree_view_get_reorderable")
external fun gtk_tree_view_get_reorderable(tree_view: CValuesRef<GtkTreeView>?): gboolean

@CCall("knifunptr_libgtk34080_gtk_tree_view_set_cursor")
external fun gtk_tree_view_set_cursor(tree_view: CValuesRef<GtkTreeView>?, path: CValuesRef<GtkTreePath>?, focus_column: CValuesRef<GtkTreeViewColumn>?, start_editing: gboolean): Unit

@CCall("knifunptr_libgtk34081_gtk_tree_view_set_cursor_on_cell")
external fun gtk_tree_view_set_cursor_on_cell(tree_view: CValuesRef<GtkTreeView>?, path: CValuesRef<GtkTreePath>?, focus_column: CValuesRef<GtkTreeViewColumn>?, focus_cell: CValuesRef<GtkCellRenderer>?, start_editing: gboolean): Unit

@CCall("knifunptr_libgtk34082_gtk_tree_view_get_cursor")
external fun gtk_tree_view_get_cursor(tree_view: CValuesRef<GtkTreeView>?, path: CValuesRef<CPointerVar<GtkTreePath>>?, focus_column: CValuesRef<CPointerVar<GtkTreeViewColumn>>?): Unit

@CCall("knifunptr_libgtk34083_gtk_tree_view_get_bin_window")
external fun gtk_tree_view_get_bin_window(tree_view: CValuesRef<GtkTreeView>?): CPointer<GdkWindow>?

@CCall("knifunptr_libgtk34084_gtk_tree_view_get_path_at_pos")
external fun gtk_tree_view_get_path_at_pos(tree_view: CValuesRef<GtkTreeView>?, x: gint, y: gint, path: CValuesRef<CPointerVar<GtkTreePath>>?, column: CValuesRef<CPointerVar<GtkTreeViewColumn>>?, cell_x: CValuesRef<gintVar>?, cell_y: CValuesRef<gintVar>?): gboolean

@CCall("knifunptr_libgtk34085_gtk_tree_view_get_cell_area")
external fun gtk_tree_view_get_cell_area(tree_view: CValuesRef<GtkTreeView>?, path: CValuesRef<GtkTreePath>?, column: CValuesRef<GtkTreeViewColumn>?, rect: CValuesRef<GdkRectangle>?): Unit

@CCall("knifunptr_libgtk34086_gtk_tree_view_get_background_area")
external fun gtk_tree_view_get_background_area(tree_view: CValuesRef<GtkTreeView>?, path: CValuesRef<GtkTreePath>?, column: CValuesRef<GtkTreeViewColumn>?, rect: CValuesRef<GdkRectangle>?): Unit

@CCall("knifunptr_libgtk34087_gtk_tree_view_get_visible_rect")
external fun gtk_tree_view_get_visible_rect(tree_view: CValuesRef<GtkTreeView>?, visible_rect: CValuesRef<GdkRectangle>?): Unit

@CCall("knifunptr_libgtk34088_gtk_tree_view_get_visible_range")
external fun gtk_tree_view_get_visible_range(tree_view: CValuesRef<GtkTreeView>?, start_path: CValuesRef<CPointerVar<GtkTreePath>>?, end_path: CValuesRef<CPointerVar<GtkTreePath>>?): gboolean

@CCall("knifunptr_libgtk34089_gtk_tree_view_is_blank_at_pos")
external fun gtk_tree_view_is_blank_at_pos(tree_view: CValuesRef<GtkTreeView>?, x: gint, y: gint, path: CValuesRef<CPointerVar<GtkTreePath>>?, column: CValuesRef<CPointerVar<GtkTreeViewColumn>>?, cell_x: CValuesRef<gintVar>?, cell_y: CValuesRef<gintVar>?): gboolean

@CCall("knifunptr_libgtk34090_gtk_tree_view_enable_model_drag_source")
external fun gtk_tree_view_enable_model_drag_source(tree_view: CValuesRef<GtkTreeView>?, start_button_mask: GdkModifierType, targets: CValuesRef<GtkTargetEntry>?, n_targets: gint, actions: GdkDragAction): Unit

@CCall("knifunptr_libgtk34091_gtk_tree_view_enable_model_drag_dest")
external fun gtk_tree_view_enable_model_drag_dest(tree_view: CValuesRef<GtkTreeView>?, targets: CValuesRef<GtkTargetEntry>?, n_targets: gint, actions: GdkDragAction): Unit

@CCall("knifunptr_libgtk34092_gtk_tree_view_unset_rows_drag_source")
external fun gtk_tree_view_unset_rows_drag_source(tree_view: CValuesRef<GtkTreeView>?): Unit

@CCall("knifunptr_libgtk34093_gtk_tree_view_unset_rows_drag_dest")
external fun gtk_tree_view_unset_rows_drag_dest(tree_view: CValuesRef<GtkTreeView>?): Unit

@CCall("knifunptr_libgtk34094_gtk_tree_view_set_drag_dest_row")
external fun gtk_tree_view_set_drag_dest_row(tree_view: CValuesRef<GtkTreeView>?, path: CValuesRef<GtkTreePath>?, pos: GtkTreeViewDropPosition): Unit

@CCall("knifunptr_libgtk34095_gtk_tree_view_get_drag_dest_row")
external fun gtk_tree_view_get_drag_dest_row(tree_view: CValuesRef<GtkTreeView>?, path: CValuesRef<CPointerVar<GtkTreePath>>?, pos: CValuesRef<GtkTreeViewDropPosition.Var>?): Unit

@CCall("knifunptr_libgtk34096_gtk_tree_view_get_dest_row_at_pos")
external fun gtk_tree_view_get_dest_row_at_pos(tree_view: CValuesRef<GtkTreeView>?, drag_x: gint, drag_y: gint, path: CValuesRef<CPointerVar<GtkTreePath>>?, pos: CValuesRef<GtkTreeViewDropPosition.Var>?): gboolean

@CCall("knifunptr_libgtk34097_gtk_tree_view_create_row_drag_icon")
external fun gtk_tree_view_create_row_drag_icon(tree_view: CValuesRef<GtkTreeView>?, path: CValuesRef<GtkTreePath>?): CPointer<cairo_surface_t>?

@CCall("knifunptr_libgtk34098_gtk_tree_view_set_enable_search")
external fun gtk_tree_view_set_enable_search(tree_view: CValuesRef<GtkTreeView>?, enable_search: gboolean): Unit

@CCall("knifunptr_libgtk34099_gtk_tree_view_get_enable_search")
external fun gtk_tree_view_get_enable_search(tree_view: CValuesRef<GtkTreeView>?): gboolean

@CCall("knifunptr_libgtk34100_gtk_tree_view_get_search_column")
external fun gtk_tree_view_get_search_column(tree_view: CValuesRef<GtkTreeView>?): gint

@CCall("knifunptr_libgtk34101_gtk_tree_view_set_search_column")
external fun gtk_tree_view_set_search_column(tree_view: CValuesRef<GtkTreeView>?, column: gint): Unit

@CCall("knifunptr_libgtk34102_gtk_tree_view_get_search_equal_func")
external fun gtk_tree_view_get_search_equal_func(tree_view: CValuesRef<GtkTreeView>?): GtkTreeViewSearchEqualFunc?

@CCall("knifunptr_libgtk34103_gtk_tree_view_set_search_equal_func")
external fun gtk_tree_view_set_search_equal_func(tree_view: CValuesRef<GtkTreeView>?, search_equal_func: GtkTreeViewSearchEqualFunc?, search_user_data: gpointer?, search_destroy: GDestroyNotify?): Unit

@CCall("knifunptr_libgtk34104_gtk_tree_view_get_search_entry")
external fun gtk_tree_view_get_search_entry(tree_view: CValuesRef<GtkTreeView>?): CPointer<GtkEntry>?

@CCall("knifunptr_libgtk34105_gtk_tree_view_set_search_entry")
external fun gtk_tree_view_set_search_entry(tree_view: CValuesRef<GtkTreeView>?, entry: CValuesRef<GtkEntry>?): Unit

@CCall("knifunptr_libgtk34106_gtk_tree_view_get_search_position_func")
external fun gtk_tree_view_get_search_position_func(tree_view: CValuesRef<GtkTreeView>?): GtkTreeViewSearchPositionFunc?

@CCall("knifunptr_libgtk34107_gtk_tree_view_set_search_position_func")
external fun gtk_tree_view_set_search_position_func(tree_view: CValuesRef<GtkTreeView>?, func: GtkTreeViewSearchPositionFunc?, data: gpointer?, destroy: GDestroyNotify?): Unit

@CCall("knifunptr_libgtk34108_gtk_tree_view_convert_widget_to_tree_coords")
external fun gtk_tree_view_convert_widget_to_tree_coords(tree_view: CValuesRef<GtkTreeView>?, wx: gint, wy: gint, tx: CValuesRef<gintVar>?, ty: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk34109_gtk_tree_view_convert_tree_to_widget_coords")
external fun gtk_tree_view_convert_tree_to_widget_coords(tree_view: CValuesRef<GtkTreeView>?, tx: gint, ty: gint, wx: CValuesRef<gintVar>?, wy: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk34110_gtk_tree_view_convert_widget_to_bin_window_coords")
external fun gtk_tree_view_convert_widget_to_bin_window_coords(tree_view: CValuesRef<GtkTreeView>?, wx: gint, wy: gint, bx: CValuesRef<gintVar>?, by: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk34111_gtk_tree_view_convert_bin_window_to_widget_coords")
external fun gtk_tree_view_convert_bin_window_to_widget_coords(tree_view: CValuesRef<GtkTreeView>?, bx: gint, by: gint, wx: CValuesRef<gintVar>?, wy: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk34112_gtk_tree_view_convert_tree_to_bin_window_coords")
external fun gtk_tree_view_convert_tree_to_bin_window_coords(tree_view: CValuesRef<GtkTreeView>?, tx: gint, ty: gint, bx: CValuesRef<gintVar>?, by: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk34113_gtk_tree_view_convert_bin_window_to_tree_coords")
external fun gtk_tree_view_convert_bin_window_to_tree_coords(tree_view: CValuesRef<GtkTreeView>?, bx: gint, by: gint, tx: CValuesRef<gintVar>?, ty: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk34114_gtk_tree_view_set_destroy_count_func")
external fun gtk_tree_view_set_destroy_count_func(tree_view: CValuesRef<GtkTreeView>?, func: GtkTreeDestroyCountFunc?, data: gpointer?, destroy: GDestroyNotify?): Unit

@CCall("knifunptr_libgtk34115_gtk_tree_view_set_fixed_height_mode")
external fun gtk_tree_view_set_fixed_height_mode(tree_view: CValuesRef<GtkTreeView>?, enable: gboolean): Unit

@CCall("knifunptr_libgtk34116_gtk_tree_view_get_fixed_height_mode")
external fun gtk_tree_view_get_fixed_height_mode(tree_view: CValuesRef<GtkTreeView>?): gboolean

@CCall("knifunptr_libgtk34117_gtk_tree_view_set_hover_selection")
external fun gtk_tree_view_set_hover_selection(tree_view: CValuesRef<GtkTreeView>?, hover: gboolean): Unit

@CCall("knifunptr_libgtk34118_gtk_tree_view_get_hover_selection")
external fun gtk_tree_view_get_hover_selection(tree_view: CValuesRef<GtkTreeView>?): gboolean

@CCall("knifunptr_libgtk34119_gtk_tree_view_set_hover_expand")
external fun gtk_tree_view_set_hover_expand(tree_view: CValuesRef<GtkTreeView>?, expand: gboolean): Unit

@CCall("knifunptr_libgtk34120_gtk_tree_view_get_hover_expand")
external fun gtk_tree_view_get_hover_expand(tree_view: CValuesRef<GtkTreeView>?): gboolean

@CCall("knifunptr_libgtk34121_gtk_tree_view_set_rubber_banding")
external fun gtk_tree_view_set_rubber_banding(tree_view: CValuesRef<GtkTreeView>?, enable: gboolean): Unit

@CCall("knifunptr_libgtk34122_gtk_tree_view_get_rubber_banding")
external fun gtk_tree_view_get_rubber_banding(tree_view: CValuesRef<GtkTreeView>?): gboolean

@CCall("knifunptr_libgtk34123_gtk_tree_view_is_rubber_banding_active")
external fun gtk_tree_view_is_rubber_banding_active(tree_view: CValuesRef<GtkTreeView>?): gboolean

@CCall("knifunptr_libgtk34124_gtk_tree_view_get_row_separator_func")
external fun gtk_tree_view_get_row_separator_func(tree_view: CValuesRef<GtkTreeView>?): GtkTreeViewRowSeparatorFunc?

@CCall("knifunptr_libgtk34125_gtk_tree_view_set_row_separator_func")
external fun gtk_tree_view_set_row_separator_func(tree_view: CValuesRef<GtkTreeView>?, func: GtkTreeViewRowSeparatorFunc?, data: gpointer?, destroy: GDestroyNotify?): Unit

@CCall("knifunptr_libgtk34126_gtk_tree_view_get_grid_lines")
external fun gtk_tree_view_get_grid_lines(tree_view: CValuesRef<GtkTreeView>?): GtkTreeViewGridLines

@CCall("knifunptr_libgtk34127_gtk_tree_view_set_grid_lines")
external fun gtk_tree_view_set_grid_lines(tree_view: CValuesRef<GtkTreeView>?, grid_lines: GtkTreeViewGridLines): Unit

@CCall("knifunptr_libgtk34128_gtk_tree_view_get_enable_tree_lines")
external fun gtk_tree_view_get_enable_tree_lines(tree_view: CValuesRef<GtkTreeView>?): gboolean

@CCall("knifunptr_libgtk34129_gtk_tree_view_set_enable_tree_lines")
external fun gtk_tree_view_set_enable_tree_lines(tree_view: CValuesRef<GtkTreeView>?, enabled: gboolean): Unit

@CCall("knifunptr_libgtk34130_gtk_tree_view_set_show_expanders")
external fun gtk_tree_view_set_show_expanders(tree_view: CValuesRef<GtkTreeView>?, enabled: gboolean): Unit

@CCall("knifunptr_libgtk34131_gtk_tree_view_get_show_expanders")
external fun gtk_tree_view_get_show_expanders(tree_view: CValuesRef<GtkTreeView>?): gboolean

@CCall("knifunptr_libgtk34132_gtk_tree_view_set_level_indentation")
external fun gtk_tree_view_set_level_indentation(tree_view: CValuesRef<GtkTreeView>?, indentation: gint): Unit

@CCall("knifunptr_libgtk34133_gtk_tree_view_get_level_indentation")
external fun gtk_tree_view_get_level_indentation(tree_view: CValuesRef<GtkTreeView>?): gint

@CCall("knifunptr_libgtk34134_gtk_tree_view_set_tooltip_row")
external fun gtk_tree_view_set_tooltip_row(tree_view: CValuesRef<GtkTreeView>?, tooltip: CValuesRef<GtkTooltip>?, path: CValuesRef<GtkTreePath>?): Unit

@CCall("knifunptr_libgtk34135_gtk_tree_view_set_tooltip_cell")
external fun gtk_tree_view_set_tooltip_cell(tree_view: CValuesRef<GtkTreeView>?, tooltip: CValuesRef<GtkTooltip>?, path: CValuesRef<GtkTreePath>?, column: CValuesRef<GtkTreeViewColumn>?, cell: CValuesRef<GtkCellRenderer>?): Unit

@CCall("knifunptr_libgtk34136_gtk_tree_view_get_tooltip_context")
external fun gtk_tree_view_get_tooltip_context(tree_view: CValuesRef<GtkTreeView>?, x: CValuesRef<gintVar>?, y: CValuesRef<gintVar>?, keyboard_tip: gboolean, model: CValuesRef<CPointerVar<GtkTreeModel>>?, path: CValuesRef<CPointerVar<GtkTreePath>>?, iter: CValuesRef<GtkTreeIter>?): gboolean

@CCall("knifunptr_libgtk34137_gtk_tree_view_set_tooltip_column")
external fun gtk_tree_view_set_tooltip_column(tree_view: CValuesRef<GtkTreeView>?, column: gint): Unit

@CCall("knifunptr_libgtk34138_gtk_tree_view_get_tooltip_column")
external fun gtk_tree_view_get_tooltip_column(tree_view: CValuesRef<GtkTreeView>?): gint

@CCall("knifunptr_libgtk34139_gtk_combo_box_get_type")
external fun gtk_combo_box_get_type(): GType

@CCall("knifunptr_libgtk34140_gtk_combo_box_new")
external fun gtk_combo_box_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34141_gtk_combo_box_new_with_area")
external fun gtk_combo_box_new_with_area(area: CValuesRef<GtkCellArea>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34142_gtk_combo_box_new_with_area_and_entry")
external fun gtk_combo_box_new_with_area_and_entry(area: CValuesRef<GtkCellArea>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34143_gtk_combo_box_new_with_entry")
external fun gtk_combo_box_new_with_entry(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34144_gtk_combo_box_new_with_model")
external fun gtk_combo_box_new_with_model(model: CValuesRef<GtkTreeModel>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34145_gtk_combo_box_new_with_model_and_entry")
external fun gtk_combo_box_new_with_model_and_entry(model: CValuesRef<GtkTreeModel>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34146_gtk_combo_box_get_wrap_width")
external fun gtk_combo_box_get_wrap_width(combo_box: CValuesRef<GtkComboBox>?): gint

@CCall("knifunptr_libgtk34147_gtk_combo_box_set_wrap_width")
external fun gtk_combo_box_set_wrap_width(combo_box: CValuesRef<GtkComboBox>?, width: gint): Unit

@CCall("knifunptr_libgtk34148_gtk_combo_box_get_row_span_column")
external fun gtk_combo_box_get_row_span_column(combo_box: CValuesRef<GtkComboBox>?): gint

@CCall("knifunptr_libgtk34149_gtk_combo_box_set_row_span_column")
external fun gtk_combo_box_set_row_span_column(combo_box: CValuesRef<GtkComboBox>?, row_span: gint): Unit

@CCall("knifunptr_libgtk34150_gtk_combo_box_get_column_span_column")
external fun gtk_combo_box_get_column_span_column(combo_box: CValuesRef<GtkComboBox>?): gint

@CCall("knifunptr_libgtk34151_gtk_combo_box_set_column_span_column")
external fun gtk_combo_box_set_column_span_column(combo_box: CValuesRef<GtkComboBox>?, column_span: gint): Unit

@CCall("knifunptr_libgtk34152_gtk_combo_box_get_add_tearoffs")
external fun gtk_combo_box_get_add_tearoffs(combo_box: CValuesRef<GtkComboBox>?): gboolean

@CCall("knifunptr_libgtk34153_gtk_combo_box_set_add_tearoffs")
external fun gtk_combo_box_set_add_tearoffs(combo_box: CValuesRef<GtkComboBox>?, add_tearoffs: gboolean): Unit

@CCall("knifunptr_libgtk34154_gtk_combo_box_get_title")
external fun gtk_combo_box_get_title(combo_box: CValuesRef<GtkComboBox>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk34155_gtk_combo_box_set_title")
external fun gtk_combo_box_set_title(combo_box: CValuesRef<GtkComboBox>?, @CCall.CString title: String?): Unit

@CCall("knifunptr_libgtk34156_gtk_combo_box_get_focus_on_click")
external fun gtk_combo_box_get_focus_on_click(combo: CValuesRef<GtkComboBox>?): gboolean

@CCall("knifunptr_libgtk34157_gtk_combo_box_set_focus_on_click")
external fun gtk_combo_box_set_focus_on_click(combo: CValuesRef<GtkComboBox>?, focus_on_click: gboolean): Unit

@CCall("knifunptr_libgtk34158_gtk_combo_box_get_active")
external fun gtk_combo_box_get_active(combo_box: CValuesRef<GtkComboBox>?): gint

@CCall("knifunptr_libgtk34159_gtk_combo_box_set_active")
external fun gtk_combo_box_set_active(combo_box: CValuesRef<GtkComboBox>?, index_: gint): Unit

@CCall("knifunptr_libgtk34160_gtk_combo_box_get_active_iter")
external fun gtk_combo_box_get_active_iter(combo_box: CValuesRef<GtkComboBox>?, iter: CValuesRef<GtkTreeIter>?): gboolean

@CCall("knifunptr_libgtk34161_gtk_combo_box_set_active_iter")
external fun gtk_combo_box_set_active_iter(combo_box: CValuesRef<GtkComboBox>?, iter: CValuesRef<GtkTreeIter>?): Unit

@CCall("knifunptr_libgtk34162_gtk_combo_box_set_model")
external fun gtk_combo_box_set_model(combo_box: CValuesRef<GtkComboBox>?, model: CValuesRef<GtkTreeModel>?): Unit

@CCall("knifunptr_libgtk34163_gtk_combo_box_get_model")
external fun gtk_combo_box_get_model(combo_box: CValuesRef<GtkComboBox>?): CPointer<GtkTreeModel>?

@CCall("knifunptr_libgtk34164_gtk_combo_box_get_row_separator_func")
external fun gtk_combo_box_get_row_separator_func(combo_box: CValuesRef<GtkComboBox>?): GtkTreeViewRowSeparatorFunc?

@CCall("knifunptr_libgtk34165_gtk_combo_box_set_row_separator_func")
external fun gtk_combo_box_set_row_separator_func(combo_box: CValuesRef<GtkComboBox>?, func: GtkTreeViewRowSeparatorFunc?, data: gpointer?, destroy: GDestroyNotify?): Unit

@CCall("knifunptr_libgtk34166_gtk_combo_box_set_button_sensitivity")
external fun gtk_combo_box_set_button_sensitivity(combo_box: CValuesRef<GtkComboBox>?, sensitivity: GtkSensitivityType): Unit

@CCall("knifunptr_libgtk34167_gtk_combo_box_get_button_sensitivity")
external fun gtk_combo_box_get_button_sensitivity(combo_box: CValuesRef<GtkComboBox>?): GtkSensitivityType

@CCall("knifunptr_libgtk34168_gtk_combo_box_get_has_entry")
external fun gtk_combo_box_get_has_entry(combo_box: CValuesRef<GtkComboBox>?): gboolean

@CCall("knifunptr_libgtk34169_gtk_combo_box_set_entry_text_column")
external fun gtk_combo_box_set_entry_text_column(combo_box: CValuesRef<GtkComboBox>?, text_column: gint): Unit

@CCall("knifunptr_libgtk34170_gtk_combo_box_get_entry_text_column")
external fun gtk_combo_box_get_entry_text_column(combo_box: CValuesRef<GtkComboBox>?): gint

@CCall("knifunptr_libgtk34171_gtk_combo_box_set_popup_fixed_width")
external fun gtk_combo_box_set_popup_fixed_width(combo_box: CValuesRef<GtkComboBox>?, fixed: gboolean): Unit

@CCall("knifunptr_libgtk34172_gtk_combo_box_get_popup_fixed_width")
external fun gtk_combo_box_get_popup_fixed_width(combo_box: CValuesRef<GtkComboBox>?): gboolean

@CCall("knifunptr_libgtk34173_gtk_combo_box_popup")
external fun gtk_combo_box_popup(combo_box: CValuesRef<GtkComboBox>?): Unit

@CCall("knifunptr_libgtk34174_gtk_combo_box_popup_for_device")
external fun gtk_combo_box_popup_for_device(combo_box: CValuesRef<GtkComboBox>?, device: CValuesRef<GdkDevice>?): Unit

@CCall("knifunptr_libgtk34175_gtk_combo_box_popdown")
external fun gtk_combo_box_popdown(combo_box: CValuesRef<GtkComboBox>?): Unit

@CCall("knifunptr_libgtk34176_gtk_combo_box_get_popup_accessible")
external fun gtk_combo_box_get_popup_accessible(combo_box: CValuesRef<GtkComboBox>?): CPointer<AtkObject>?

@CCall("knifunptr_libgtk34177_gtk_combo_box_get_id_column")
external fun gtk_combo_box_get_id_column(combo_box: CValuesRef<GtkComboBox>?): gint

@CCall("knifunptr_libgtk34178_gtk_combo_box_set_id_column")
external fun gtk_combo_box_set_id_column(combo_box: CValuesRef<GtkComboBox>?, id_column: gint): Unit

@CCall("knifunptr_libgtk34179_gtk_combo_box_get_active_id")
external fun gtk_combo_box_get_active_id(combo_box: CValuesRef<GtkComboBox>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk34180_gtk_combo_box_set_active_id")
external fun gtk_combo_box_set_active_id(combo_box: CValuesRef<GtkComboBox>?, @CCall.CString active_id: String?): gboolean

@CCall("knifunptr_libgtk34181_gtk_app_chooser_button_get_type")
external fun gtk_app_chooser_button_get_type(): GType

@CCall("knifunptr_libgtk34182_gtk_app_chooser_button_new")
external fun gtk_app_chooser_button_new(@CCall.CString content_type: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34183_gtk_app_chooser_button_append_separator")
external fun gtk_app_chooser_button_append_separator(self: CValuesRef<GtkAppChooserButton>?): Unit

@CCall("knifunptr_libgtk34184_gtk_app_chooser_button_append_custom_item")
external fun gtk_app_chooser_button_append_custom_item(self: CValuesRef<GtkAppChooserButton>?, @CCall.CString name: String?, @CCall.CString label: String?, icon: CValuesRef<GIcon>?): Unit

@CCall("knifunptr_libgtk34185_gtk_app_chooser_button_set_active_custom_item")
external fun gtk_app_chooser_button_set_active_custom_item(self: CValuesRef<GtkAppChooserButton>?, @CCall.CString name: String?): Unit

@CCall("knifunptr_libgtk34186_gtk_app_chooser_button_set_show_dialog_item")
external fun gtk_app_chooser_button_set_show_dialog_item(self: CValuesRef<GtkAppChooserButton>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk34187_gtk_app_chooser_button_get_show_dialog_item")
external fun gtk_app_chooser_button_get_show_dialog_item(self: CValuesRef<GtkAppChooserButton>?): gboolean

@CCall("knifunptr_libgtk34188_gtk_app_chooser_button_set_heading")
external fun gtk_app_chooser_button_set_heading(self: CValuesRef<GtkAppChooserButton>?, @CCall.CString heading: String?): Unit

@CCall("knifunptr_libgtk34189_gtk_app_chooser_button_get_heading")
external fun gtk_app_chooser_button_get_heading(self: CValuesRef<GtkAppChooserButton>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk34190_gtk_app_chooser_button_set_show_default_item")
external fun gtk_app_chooser_button_set_show_default_item(self: CValuesRef<GtkAppChooserButton>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk34191_gtk_app_chooser_button_get_show_default_item")
external fun gtk_app_chooser_button_get_show_default_item(self: CValuesRef<GtkAppChooserButton>?): gboolean

@CCall("knifunptr_libgtk34192_gtk_shortcuts_window_get_type")
external fun gtk_shortcuts_window_get_type(): GType

@CCall("knifunptr_libgtk34193_glib_autoptr_cleanup_GtkShortcutsWindow")
external fun glib_autoptr_cleanup_GtkShortcutsWindow(_ptr: CValuesRef<CPointerVar<GtkShortcutsWindow>>?): Unit

@CCall("knifunptr_libgtk34194_glib_listautoptr_cleanup_GtkShortcutsWindow")
external fun glib_listautoptr_cleanup_GtkShortcutsWindow(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk34195_glib_slistautoptr_cleanup_GtkShortcutsWindow")
external fun glib_slistautoptr_cleanup_GtkShortcutsWindow(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk34196_gtk_application_window_get_type")
external fun gtk_application_window_get_type(): GType

@CCall("knifunptr_libgtk34197_gtk_application_window_new")
external fun gtk_application_window_new(application: CValuesRef<GtkApplication>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34198_gtk_application_window_set_show_menubar")
external fun gtk_application_window_set_show_menubar(window: CValuesRef<GtkApplicationWindow>?, show_menubar: gboolean): Unit

@CCall("knifunptr_libgtk34199_gtk_application_window_get_show_menubar")
external fun gtk_application_window_get_show_menubar(window: CValuesRef<GtkApplicationWindow>?): gboolean

@CCall("knifunptr_libgtk34200_gtk_application_window_get_id")
external fun gtk_application_window_get_id(window: CValuesRef<GtkApplicationWindow>?): guint

@CCall("knifunptr_libgtk34201_gtk_application_window_set_help_overlay")
external fun gtk_application_window_set_help_overlay(window: CValuesRef<GtkApplicationWindow>?, help_overlay: CValuesRef<GtkShortcutsWindow>?): Unit

@CCall("knifunptr_libgtk34202_gtk_application_window_get_help_overlay")
external fun gtk_application_window_get_help_overlay(window: CValuesRef<GtkApplicationWindow>?): CPointer<GtkShortcutsWindow>?

@CCall("knifunptr_libgtk34203_gtk_frame_get_type")
external fun gtk_frame_get_type(): GType

@CCall("knifunptr_libgtk34204_gtk_frame_new")
external fun gtk_frame_new(@CCall.CString label: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34205_gtk_frame_set_label")
external fun gtk_frame_set_label(frame: CValuesRef<GtkFrame>?, @CCall.CString label: String?): Unit

@CCall("knifunptr_libgtk34206_gtk_frame_get_label")
external fun gtk_frame_get_label(frame: CValuesRef<GtkFrame>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk34207_gtk_frame_set_label_widget")
external fun gtk_frame_set_label_widget(frame: CValuesRef<GtkFrame>?, label_widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk34208_gtk_frame_get_label_widget")
external fun gtk_frame_get_label_widget(frame: CValuesRef<GtkFrame>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34209_gtk_frame_set_label_align")
external fun gtk_frame_set_label_align(frame: CValuesRef<GtkFrame>?, xalign: gfloat, yalign: gfloat): Unit

@CCall("knifunptr_libgtk34210_gtk_frame_get_label_align")
external fun gtk_frame_get_label_align(frame: CValuesRef<GtkFrame>?, xalign: CValuesRef<gfloatVar>?, yalign: CValuesRef<gfloatVar>?): Unit

@CCall("knifunptr_libgtk34211_gtk_frame_set_shadow_type")
external fun gtk_frame_set_shadow_type(frame: CValuesRef<GtkFrame>?, type: GtkShadowType): Unit

@CCall("knifunptr_libgtk34212_gtk_frame_get_shadow_type")
external fun gtk_frame_get_shadow_type(frame: CValuesRef<GtkFrame>?): GtkShadowType

@CCall("knifunptr_libgtk34213_gtk_aspect_frame_get_type")
external fun gtk_aspect_frame_get_type(): GType

@CCall("knifunptr_libgtk34214_gtk_aspect_frame_new")
external fun gtk_aspect_frame_new(@CCall.CString label: String?, xalign: gfloat, yalign: gfloat, ratio: gfloat, obey_child: gboolean): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34215_gtk_aspect_frame_set")
external fun gtk_aspect_frame_set(aspect_frame: CValuesRef<GtkAspectFrame>?, xalign: gfloat, yalign: gfloat, ratio: gfloat, obey_child: gboolean): Unit

@CCall("knifunptr_libgtk34216_gtk_assistant_get_type")
external fun gtk_assistant_get_type(): GType

@CCall("knifunptr_libgtk34217_gtk_assistant_new")
external fun gtk_assistant_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34218_gtk_assistant_next_page")
external fun gtk_assistant_next_page(assistant: CValuesRef<GtkAssistant>?): Unit

@CCall("knifunptr_libgtk34219_gtk_assistant_previous_page")
external fun gtk_assistant_previous_page(assistant: CValuesRef<GtkAssistant>?): Unit

@CCall("knifunptr_libgtk34220_gtk_assistant_get_current_page")
external fun gtk_assistant_get_current_page(assistant: CValuesRef<GtkAssistant>?): gint

@CCall("knifunptr_libgtk34221_gtk_assistant_set_current_page")
external fun gtk_assistant_set_current_page(assistant: CValuesRef<GtkAssistant>?, page_num: gint): Unit

@CCall("knifunptr_libgtk34222_gtk_assistant_get_n_pages")
external fun gtk_assistant_get_n_pages(assistant: CValuesRef<GtkAssistant>?): gint

@CCall("knifunptr_libgtk34223_gtk_assistant_get_nth_page")
external fun gtk_assistant_get_nth_page(assistant: CValuesRef<GtkAssistant>?, page_num: gint): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34224_gtk_assistant_prepend_page")
external fun gtk_assistant_prepend_page(assistant: CValuesRef<GtkAssistant>?, page: CValuesRef<GtkWidget>?): gint

@CCall("knifunptr_libgtk34225_gtk_assistant_append_page")
external fun gtk_assistant_append_page(assistant: CValuesRef<GtkAssistant>?, page: CValuesRef<GtkWidget>?): gint

@CCall("knifunptr_libgtk34226_gtk_assistant_insert_page")
external fun gtk_assistant_insert_page(assistant: CValuesRef<GtkAssistant>?, page: CValuesRef<GtkWidget>?, position: gint): gint

@CCall("knifunptr_libgtk34227_gtk_assistant_remove_page")
external fun gtk_assistant_remove_page(assistant: CValuesRef<GtkAssistant>?, page_num: gint): Unit

@CCall("knifunptr_libgtk34228_gtk_assistant_set_forward_page_func")
external fun gtk_assistant_set_forward_page_func(assistant: CValuesRef<GtkAssistant>?, page_func: GtkAssistantPageFunc?, data: gpointer?, destroy: GDestroyNotify?): Unit

@CCall("knifunptr_libgtk34229_gtk_assistant_set_page_type")
external fun gtk_assistant_set_page_type(assistant: CValuesRef<GtkAssistant>?, page: CValuesRef<GtkWidget>?, type: GtkAssistantPageType): Unit

@CCall("knifunptr_libgtk34230_gtk_assistant_get_page_type")
external fun gtk_assistant_get_page_type(assistant: CValuesRef<GtkAssistant>?, page: CValuesRef<GtkWidget>?): GtkAssistantPageType

@CCall("knifunptr_libgtk34231_gtk_assistant_set_page_title")
external fun gtk_assistant_set_page_title(assistant: CValuesRef<GtkAssistant>?, page: CValuesRef<GtkWidget>?, @CCall.CString title: String?): Unit

@CCall("knifunptr_libgtk34232_gtk_assistant_get_page_title")
external fun gtk_assistant_get_page_title(assistant: CValuesRef<GtkAssistant>?, page: CValuesRef<GtkWidget>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk34233_gtk_assistant_set_page_header_image")
external fun gtk_assistant_set_page_header_image(assistant: CValuesRef<GtkAssistant>?, page: CValuesRef<GtkWidget>?, pixbuf: CValuesRef<GdkPixbuf>?): Unit

@CCall("knifunptr_libgtk34234_gtk_assistant_get_page_header_image")
external fun gtk_assistant_get_page_header_image(assistant: CValuesRef<GtkAssistant>?, page: CValuesRef<GtkWidget>?): CPointer<GdkPixbuf>?

@CCall("knifunptr_libgtk34235_gtk_assistant_set_page_side_image")
external fun gtk_assistant_set_page_side_image(assistant: CValuesRef<GtkAssistant>?, page: CValuesRef<GtkWidget>?, pixbuf: CValuesRef<GdkPixbuf>?): Unit

@CCall("knifunptr_libgtk34236_gtk_assistant_get_page_side_image")
external fun gtk_assistant_get_page_side_image(assistant: CValuesRef<GtkAssistant>?, page: CValuesRef<GtkWidget>?): CPointer<GdkPixbuf>?

@CCall("knifunptr_libgtk34237_gtk_assistant_set_page_complete")
external fun gtk_assistant_set_page_complete(assistant: CValuesRef<GtkAssistant>?, page: CValuesRef<GtkWidget>?, complete: gboolean): Unit

@CCall("knifunptr_libgtk34238_gtk_assistant_get_page_complete")
external fun gtk_assistant_get_page_complete(assistant: CValuesRef<GtkAssistant>?, page: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk34239_gtk_assistant_add_action_widget")
external fun gtk_assistant_add_action_widget(assistant: CValuesRef<GtkAssistant>?, child: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk34240_gtk_assistant_remove_action_widget")
external fun gtk_assistant_remove_action_widget(assistant: CValuesRef<GtkAssistant>?, child: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk34241_gtk_assistant_update_buttons_state")
external fun gtk_assistant_update_buttons_state(assistant: CValuesRef<GtkAssistant>?): Unit

@CCall("knifunptr_libgtk34242_gtk_assistant_commit")
external fun gtk_assistant_commit(assistant: CValuesRef<GtkAssistant>?): Unit

@CCall("knifunptr_libgtk34243_gtk_assistant_set_page_has_padding")
external fun gtk_assistant_set_page_has_padding(assistant: CValuesRef<GtkAssistant>?, page: CValuesRef<GtkWidget>?, has_padding: gboolean): Unit

@CCall("knifunptr_libgtk34244_gtk_assistant_get_page_has_padding")
external fun gtk_assistant_get_page_has_padding(assistant: CValuesRef<GtkAssistant>?, page: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk34245_gtk_button_box_get_type")
external fun gtk_button_box_get_type(): GType

@CCall("knifunptr_libgtk34246_gtk_button_box_new")
external fun gtk_button_box_new(orientation: GtkOrientation): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34247_gtk_button_box_get_layout")
external fun gtk_button_box_get_layout(widget: CValuesRef<GtkButtonBox>?): GtkButtonBoxStyle

@CCall("knifunptr_libgtk34248_gtk_button_box_set_layout")
external fun gtk_button_box_set_layout(widget: CValuesRef<GtkButtonBox>?, layout_style: GtkButtonBoxStyle): Unit

@CCall("knifunptr_libgtk34249_gtk_button_box_get_child_secondary")
external fun gtk_button_box_get_child_secondary(widget: CValuesRef<GtkButtonBox>?, child: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk34250_gtk_button_box_set_child_secondary")
external fun gtk_button_box_set_child_secondary(widget: CValuesRef<GtkButtonBox>?, child: CValuesRef<GtkWidget>?, is_secondary: gboolean): Unit

@CCall("knifunptr_libgtk34251_gtk_button_box_get_child_non_homogeneous")
external fun gtk_button_box_get_child_non_homogeneous(widget: CValuesRef<GtkButtonBox>?, child: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk34252_gtk_button_box_set_child_non_homogeneous")
external fun gtk_button_box_set_child_non_homogeneous(widget: CValuesRef<GtkButtonBox>?, child: CValuesRef<GtkWidget>?, non_homogeneous: gboolean): Unit

@CCall("knifunptr_libgtk34253_gtk_binding_set_new")
external fun gtk_binding_set_new(@CCall.CString set_name: String?): CPointer<GtkBindingSet>?

@CCall("knifunptr_libgtk34254_gtk_binding_set_by_class")
external fun gtk_binding_set_by_class(object_class: gpointer?): CPointer<GtkBindingSet>?

@CCall("knifunptr_libgtk34255_gtk_binding_set_find")
external fun gtk_binding_set_find(@CCall.CString set_name: String?): CPointer<GtkBindingSet>?

@CCall("knifunptr_libgtk34256_gtk_bindings_activate")
external fun gtk_bindings_activate(`object`: CValuesRef<GObject>?, keyval: guint, modifiers: GdkModifierType): gboolean

@CCall("knifunptr_libgtk34257_gtk_bindings_activate_event")
external fun gtk_bindings_activate_event(`object`: CValuesRef<GObject>?, event: CValuesRef<GdkEventKey>?): gboolean

@CCall("knifunptr_libgtk34258_gtk_binding_set_activate")
external fun gtk_binding_set_activate(binding_set: CValuesRef<GtkBindingSet>?, keyval: guint, modifiers: GdkModifierType, `object`: CValuesRef<GObject>?): gboolean

@CCall("knifunptr_libgtk34259_gtk_binding_entry_skip")
external fun gtk_binding_entry_skip(binding_set: CValuesRef<GtkBindingSet>?, keyval: guint, modifiers: GdkModifierType): Unit

@CCall("knifunptr_libgtk34260_gtk_binding_entry_add_signal")
external fun gtk_binding_entry_add_signal(binding_set: CValuesRef<GtkBindingSet>?, keyval: guint, modifiers: GdkModifierType, @CCall.CString signal_name: String?, n_args: guint, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk34261_gtk_binding_entry_add_signall")
external fun gtk_binding_entry_add_signall(binding_set: CValuesRef<GtkBindingSet>?, keyval: guint, modifiers: GdkModifierType, @CCall.CString signal_name: String?, binding_args: CValuesRef<GSList>?): Unit

@CCall("knifunptr_libgtk34262_gtk_binding_entry_add_signal_from_string")
external fun gtk_binding_entry_add_signal_from_string(binding_set: CValuesRef<GtkBindingSet>?, @CCall.CString signal_desc: String?): GTokenType

@CCall("knifunptr_libgtk34263_gtk_binding_entry_remove")
external fun gtk_binding_entry_remove(binding_set: CValuesRef<GtkBindingSet>?, keyval: guint, modifiers: GdkModifierType): Unit

@CCall("knifunptr_libgtk34264_gtk_builder_error_quark")
external fun gtk_builder_error_quark(): GQuark

@CCall("knifunptr_libgtk34265_gtk_builder_get_type")
external fun gtk_builder_get_type(): GType

@CCall("knifunptr_libgtk34266_gtk_builder_new")
external fun gtk_builder_new(): CPointer<GtkBuilder>?

@CCall("knifunptr_libgtk34267_gtk_builder_add_from_file")
external fun gtk_builder_add_from_file(builder: CValuesRef<GtkBuilder>?, @CCall.CString filename: String?, error: CValuesRef<CPointerVar<GError>>?): guint

@CCall("knifunptr_libgtk34268_gtk_builder_add_from_resource")
external fun gtk_builder_add_from_resource(builder: CValuesRef<GtkBuilder>?, @CCall.CString resource_path: String?, error: CValuesRef<CPointerVar<GError>>?): guint

@CCall("knifunptr_libgtk34269_gtk_builder_add_from_string")
external fun gtk_builder_add_from_string(builder: CValuesRef<GtkBuilder>?, @CCall.CString buffer: String?, length: gsize, error: CValuesRef<CPointerVar<GError>>?): guint

@CCall("knifunptr_libgtk34270_gtk_builder_add_objects_from_file")
external fun gtk_builder_add_objects_from_file(builder: CValuesRef<GtkBuilder>?, @CCall.CString filename: String?, object_ids: CValuesRef<CPointerVar<gcharVar>>?, error: CValuesRef<CPointerVar<GError>>?): guint

@CCall("knifunptr_libgtk34271_gtk_builder_add_objects_from_resource")
external fun gtk_builder_add_objects_from_resource(builder: CValuesRef<GtkBuilder>?, @CCall.CString resource_path: String?, object_ids: CValuesRef<CPointerVar<gcharVar>>?, error: CValuesRef<CPointerVar<GError>>?): guint

@CCall("knifunptr_libgtk34272_gtk_builder_add_objects_from_string")
external fun gtk_builder_add_objects_from_string(builder: CValuesRef<GtkBuilder>?, @CCall.CString buffer: String?, length: gsize, object_ids: CValuesRef<CPointerVar<gcharVar>>?, error: CValuesRef<CPointerVar<GError>>?): guint

@CCall("knifunptr_libgtk34273_gtk_builder_get_object")
external fun gtk_builder_get_object(builder: CValuesRef<GtkBuilder>?, @CCall.CString name: String?): CPointer<GObject>?

@CCall("knifunptr_libgtk34274_gtk_builder_get_objects")
external fun gtk_builder_get_objects(builder: CValuesRef<GtkBuilder>?): CPointer<GSList>?

@CCall("knifunptr_libgtk34275_gtk_builder_expose_object")
external fun gtk_builder_expose_object(builder: CValuesRef<GtkBuilder>?, @CCall.CString name: String?, `object`: CValuesRef<GObject>?): Unit

@CCall("knifunptr_libgtk34276_gtk_builder_connect_signals")
external fun gtk_builder_connect_signals(builder: CValuesRef<GtkBuilder>?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk34277_gtk_builder_connect_signals_full")
external fun gtk_builder_connect_signals_full(builder: CValuesRef<GtkBuilder>?, func: GtkBuilderConnectFunc?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk34278_gtk_builder_set_translation_domain")
external fun gtk_builder_set_translation_domain(builder: CValuesRef<GtkBuilder>?, @CCall.CString domain: String?): Unit

@CCall("knifunptr_libgtk34279_gtk_builder_get_translation_domain")
external fun gtk_builder_get_translation_domain(builder: CValuesRef<GtkBuilder>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk34280_gtk_builder_get_type_from_name")
external fun gtk_builder_get_type_from_name(builder: CValuesRef<GtkBuilder>?, @CCall.CString type_name: String?): GType

@CCall("knifunptr_libgtk34281_gtk_builder_value_from_string")
external fun gtk_builder_value_from_string(builder: CValuesRef<GtkBuilder>?, pspec: CValuesRef<GParamSpec>?, @CCall.CString string: String?, value: CValuesRef<GValue>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk34282_gtk_builder_value_from_string_type")
external fun gtk_builder_value_from_string_type(builder: CValuesRef<GtkBuilder>?, type: GType, @CCall.CString string: String?, value: CValuesRef<GValue>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk34283_gtk_builder_new_from_file")
external fun gtk_builder_new_from_file(@CCall.CString filename: String?): CPointer<GtkBuilder>?

@CCall("knifunptr_libgtk34284_gtk_builder_new_from_resource")
external fun gtk_builder_new_from_resource(@CCall.CString resource_path: String?): CPointer<GtkBuilder>?

@CCall("knifunptr_libgtk34285_gtk_builder_new_from_string")
external fun gtk_builder_new_from_string(@CCall.CString string: String?, length: gssize): CPointer<GtkBuilder>?

@CCall("knifunptr_libgtk34286_gtk_builder_add_callback_symbol")
external fun gtk_builder_add_callback_symbol(builder: CValuesRef<GtkBuilder>?, @CCall.CString callback_name: String?, callback_symbol: GCallback?): Unit

@CCall("knifunptr_libgtk34287_gtk_builder_add_callback_symbols")
external fun gtk_builder_add_callback_symbols(builder: CValuesRef<GtkBuilder>?, @CCall.CString first_callback_name: String?, first_callback_symbol: GCallback?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk34288_gtk_builder_lookup_callback_symbol")
external fun gtk_builder_lookup_callback_symbol(builder: CValuesRef<GtkBuilder>?, @CCall.CString callback_name: String?): GCallback?

@CCall("knifunptr_libgtk34289_gtk_builder_set_application")
external fun gtk_builder_set_application(builder: CValuesRef<GtkBuilder>?, application: CValuesRef<GtkApplication>?): Unit

@CCall("knifunptr_libgtk34290_gtk_builder_get_application")
external fun gtk_builder_get_application(builder: CValuesRef<GtkBuilder>?): CPointer<GtkApplication>?

@CCall("knifunptr_libgtk34291_gtk_builder_extend_with_template")
external fun gtk_builder_extend_with_template(builder: CValuesRef<GtkBuilder>?, widget: CValuesRef<GtkWidget>?, template_type: GType, @CCall.CString buffer: String?, length: gsize, error: CValuesRef<CPointerVar<GError>>?): guint

@CCall("knifunptr_libgtk34292_gtk_buildable_get_type")
external fun gtk_buildable_get_type(): GType

@CCall("knifunptr_libgtk34293_gtk_buildable_set_name")
external fun gtk_buildable_set_name(buildable: CValuesRef<GtkBuildable>?, @CCall.CString name: String?): Unit

@CCall("knifunptr_libgtk34294_gtk_buildable_get_name")
external fun gtk_buildable_get_name(buildable: CValuesRef<GtkBuildable>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk34295_gtk_buildable_add_child")
external fun gtk_buildable_add_child(buildable: CValuesRef<GtkBuildable>?, builder: CValuesRef<GtkBuilder>?, child: CValuesRef<GObject>?, @CCall.CString type: String?): Unit

@CCall("knifunptr_libgtk34296_gtk_buildable_set_buildable_property")
external fun gtk_buildable_set_buildable_property(buildable: CValuesRef<GtkBuildable>?, builder: CValuesRef<GtkBuilder>?, @CCall.CString name: String?, value: CValuesRef<GValue>?): Unit

@CCall("knifunptr_libgtk34297_gtk_buildable_construct_child")
external fun gtk_buildable_construct_child(buildable: CValuesRef<GtkBuildable>?, builder: CValuesRef<GtkBuilder>?, @CCall.CString name: String?): CPointer<GObject>?

@CCall("knifunptr_libgtk34298_gtk_buildable_custom_tag_start")
external fun gtk_buildable_custom_tag_start(buildable: CValuesRef<GtkBuildable>?, builder: CValuesRef<GtkBuilder>?, child: CValuesRef<GObject>?, @CCall.CString tagname: String?, parser: CValuesRef<GMarkupParser>?, data: CValuesRef<gpointerVar>?): gboolean

@CCall("knifunptr_libgtk34299_gtk_buildable_custom_tag_end")
external fun gtk_buildable_custom_tag_end(buildable: CValuesRef<GtkBuildable>?, builder: CValuesRef<GtkBuilder>?, child: CValuesRef<GObject>?, @CCall.CString tagname: String?, data: CValuesRef<gpointerVar>?): Unit

@CCall("knifunptr_libgtk34300_gtk_buildable_custom_finished")
external fun gtk_buildable_custom_finished(buildable: CValuesRef<GtkBuildable>?, builder: CValuesRef<GtkBuilder>?, child: CValuesRef<GObject>?, @CCall.CString tagname: String?, data: gpointer?): Unit

@CCall("knifunptr_libgtk34301_gtk_buildable_parser_finished")
external fun gtk_buildable_parser_finished(buildable: CValuesRef<GtkBuildable>?, builder: CValuesRef<GtkBuilder>?): Unit

@CCall("knifunptr_libgtk34302_gtk_buildable_get_internal_child")
external fun gtk_buildable_get_internal_child(buildable: CValuesRef<GtkBuildable>?, builder: CValuesRef<GtkBuilder>?, @CCall.CString childname: String?): CPointer<GObject>?

@CCall("knifunptr_libgtk34303_gtk_button_get_type")
external fun gtk_button_get_type(): GType

@CCall("knifunptr_libgtk34304_gtk_button_new")
external fun gtk_button_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34305_gtk_button_new_with_label")
external fun gtk_button_new_with_label(@CCall.CString label: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34306_gtk_button_new_from_icon_name")
external fun gtk_button_new_from_icon_name(@CCall.CString icon_name: String?, size: GtkIconSize): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34307_gtk_button_new_from_stock")
external fun gtk_button_new_from_stock(@CCall.CString stock_id: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34308_gtk_button_new_with_mnemonic")
external fun gtk_button_new_with_mnemonic(@CCall.CString label: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34309_gtk_button_clicked")
external fun gtk_button_clicked(button: CValuesRef<GtkButton>?): Unit

@CCall("knifunptr_libgtk34310_gtk_button_pressed")
external fun gtk_button_pressed(button: CValuesRef<GtkButton>?): Unit

@CCall("knifunptr_libgtk34311_gtk_button_released")
external fun gtk_button_released(button: CValuesRef<GtkButton>?): Unit

@CCall("knifunptr_libgtk34312_gtk_button_enter")
external fun gtk_button_enter(button: CValuesRef<GtkButton>?): Unit

@CCall("knifunptr_libgtk34313_gtk_button_leave")
external fun gtk_button_leave(button: CValuesRef<GtkButton>?): Unit

@CCall("knifunptr_libgtk34314_gtk_button_set_relief")
external fun gtk_button_set_relief(button: CValuesRef<GtkButton>?, relief: GtkReliefStyle): Unit

@CCall("knifunptr_libgtk34315_gtk_button_get_relief")
external fun gtk_button_get_relief(button: CValuesRef<GtkButton>?): GtkReliefStyle

@CCall("knifunptr_libgtk34316_gtk_button_set_label")
external fun gtk_button_set_label(button: CValuesRef<GtkButton>?, @CCall.CString label: String?): Unit

@CCall("knifunptr_libgtk34317_gtk_button_get_label")
external fun gtk_button_get_label(button: CValuesRef<GtkButton>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk34318_gtk_button_set_use_underline")
external fun gtk_button_set_use_underline(button: CValuesRef<GtkButton>?, use_underline: gboolean): Unit

@CCall("knifunptr_libgtk34319_gtk_button_get_use_underline")
external fun gtk_button_get_use_underline(button: CValuesRef<GtkButton>?): gboolean

@CCall("knifunptr_libgtk34320_gtk_button_set_use_stock")
external fun gtk_button_set_use_stock(button: CValuesRef<GtkButton>?, use_stock: gboolean): Unit

@CCall("knifunptr_libgtk34321_gtk_button_get_use_stock")
external fun gtk_button_get_use_stock(button: CValuesRef<GtkButton>?): gboolean

@CCall("knifunptr_libgtk34322_gtk_button_set_focus_on_click")
external fun gtk_button_set_focus_on_click(button: CValuesRef<GtkButton>?, focus_on_click: gboolean): Unit

@CCall("knifunptr_libgtk34323_gtk_button_get_focus_on_click")
external fun gtk_button_get_focus_on_click(button: CValuesRef<GtkButton>?): gboolean

@CCall("knifunptr_libgtk34324_gtk_button_set_alignment")
external fun gtk_button_set_alignment(button: CValuesRef<GtkButton>?, xalign: gfloat, yalign: gfloat): Unit

@CCall("knifunptr_libgtk34325_gtk_button_get_alignment")
external fun gtk_button_get_alignment(button: CValuesRef<GtkButton>?, xalign: CValuesRef<gfloatVar>?, yalign: CValuesRef<gfloatVar>?): Unit

@CCall("knifunptr_libgtk34326_gtk_button_set_image")
external fun gtk_button_set_image(button: CValuesRef<GtkButton>?, image: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk34327_gtk_button_get_image")
external fun gtk_button_get_image(button: CValuesRef<GtkButton>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34328_gtk_button_set_image_position")
external fun gtk_button_set_image_position(button: CValuesRef<GtkButton>?, position: GtkPositionType): Unit

@CCall("knifunptr_libgtk34329_gtk_button_get_image_position")
external fun gtk_button_get_image_position(button: CValuesRef<GtkButton>?): GtkPositionType

@CCall("knifunptr_libgtk34330_gtk_button_set_always_show_image")
external fun gtk_button_set_always_show_image(button: CValuesRef<GtkButton>?, always_show: gboolean): Unit

@CCall("knifunptr_libgtk34331_gtk_button_get_always_show_image")
external fun gtk_button_get_always_show_image(button: CValuesRef<GtkButton>?): gboolean

@CCall("knifunptr_libgtk34332_gtk_button_get_event_window")
external fun gtk_button_get_event_window(button: CValuesRef<GtkButton>?): CPointer<GdkWindow>?

@CCall("knifunptr_libgtk34333_gtk_calendar_get_type")
external fun gtk_calendar_get_type(): GType

@CCall("knifunptr_libgtk34334_gtk_calendar_new")
external fun gtk_calendar_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34335_gtk_calendar_select_month")
external fun gtk_calendar_select_month(calendar: CValuesRef<GtkCalendar>?, month: guint, year: guint): Unit

@CCall("knifunptr_libgtk34336_gtk_calendar_select_day")
external fun gtk_calendar_select_day(calendar: CValuesRef<GtkCalendar>?, day: guint): Unit

@CCall("knifunptr_libgtk34337_gtk_calendar_mark_day")
external fun gtk_calendar_mark_day(calendar: CValuesRef<GtkCalendar>?, day: guint): Unit

@CCall("knifunptr_libgtk34338_gtk_calendar_unmark_day")
external fun gtk_calendar_unmark_day(calendar: CValuesRef<GtkCalendar>?, day: guint): Unit

@CCall("knifunptr_libgtk34339_gtk_calendar_clear_marks")
external fun gtk_calendar_clear_marks(calendar: CValuesRef<GtkCalendar>?): Unit

@CCall("knifunptr_libgtk34340_gtk_calendar_set_display_options")
external fun gtk_calendar_set_display_options(calendar: CValuesRef<GtkCalendar>?, flags: GtkCalendarDisplayOptions): Unit

@CCall("knifunptr_libgtk34341_gtk_calendar_get_display_options")
external fun gtk_calendar_get_display_options(calendar: CValuesRef<GtkCalendar>?): GtkCalendarDisplayOptions

@CCall("knifunptr_libgtk34342_gtk_calendar_get_date")
external fun gtk_calendar_get_date(calendar: CValuesRef<GtkCalendar>?, year: CValuesRef<guintVar>?, month: CValuesRef<guintVar>?, day: CValuesRef<guintVar>?): Unit

@CCall("knifunptr_libgtk34343_gtk_calendar_set_detail_func")
external fun gtk_calendar_set_detail_func(calendar: CValuesRef<GtkCalendar>?, func: GtkCalendarDetailFunc?, data: gpointer?, destroy: GDestroyNotify?): Unit

@CCall("knifunptr_libgtk34344_gtk_calendar_set_detail_width_chars")
external fun gtk_calendar_set_detail_width_chars(calendar: CValuesRef<GtkCalendar>?, chars: gint): Unit

@CCall("knifunptr_libgtk34345_gtk_calendar_set_detail_height_rows")
external fun gtk_calendar_set_detail_height_rows(calendar: CValuesRef<GtkCalendar>?, rows: gint): Unit

@CCall("knifunptr_libgtk34346_gtk_calendar_get_detail_width_chars")
external fun gtk_calendar_get_detail_width_chars(calendar: CValuesRef<GtkCalendar>?): gint

@CCall("knifunptr_libgtk34347_gtk_calendar_get_detail_height_rows")
external fun gtk_calendar_get_detail_height_rows(calendar: CValuesRef<GtkCalendar>?): gint

@CCall("knifunptr_libgtk34348_gtk_calendar_get_day_is_marked")
external fun gtk_calendar_get_day_is_marked(calendar: CValuesRef<GtkCalendar>?, day: guint): gboolean

@CCall("knifunptr_libgtk34349_gtk_cell_area_box_get_type")
external fun gtk_cell_area_box_get_type(): GType

@CCall("knifunptr_libgtk34350_gtk_cell_area_box_new")
external fun gtk_cell_area_box_new(): CPointer<GtkCellArea>?

@CCall("knifunptr_libgtk34351_gtk_cell_area_box_pack_start")
external fun gtk_cell_area_box_pack_start(box: CValuesRef<GtkCellAreaBox>?, renderer: CValuesRef<GtkCellRenderer>?, expand: gboolean, align: gboolean, fixed: gboolean): Unit

@CCall("knifunptr_libgtk34352_gtk_cell_area_box_pack_end")
external fun gtk_cell_area_box_pack_end(box: CValuesRef<GtkCellAreaBox>?, renderer: CValuesRef<GtkCellRenderer>?, expand: gboolean, align: gboolean, fixed: gboolean): Unit

@CCall("knifunptr_libgtk34353_gtk_cell_area_box_get_spacing")
external fun gtk_cell_area_box_get_spacing(box: CValuesRef<GtkCellAreaBox>?): gint

@CCall("knifunptr_libgtk34354_gtk_cell_area_box_set_spacing")
external fun gtk_cell_area_box_set_spacing(box: CValuesRef<GtkCellAreaBox>?, spacing: gint): Unit

@CCall("knifunptr_libgtk34355__gtk_cell_area_box_group_visible")
external fun _gtk_cell_area_box_group_visible(box: CValuesRef<GtkCellAreaBox>?, group_idx: gint): gboolean

@CCall("knifunptr_libgtk34356_gtk_cell_area_context_get_type")
external fun gtk_cell_area_context_get_type(): GType

@CCall("knifunptr_libgtk34357_gtk_cell_area_context_get_area")
external fun gtk_cell_area_context_get_area(context: CValuesRef<GtkCellAreaContext>?): CPointer<GtkCellArea>?

@CCall("knifunptr_libgtk34358_gtk_cell_area_context_allocate")
external fun gtk_cell_area_context_allocate(context: CValuesRef<GtkCellAreaContext>?, width: gint, height: gint): Unit

@CCall("knifunptr_libgtk34359_gtk_cell_area_context_reset")
external fun gtk_cell_area_context_reset(context: CValuesRef<GtkCellAreaContext>?): Unit

@CCall("knifunptr_libgtk34360_gtk_cell_area_context_get_preferred_width")
external fun gtk_cell_area_context_get_preferred_width(context: CValuesRef<GtkCellAreaContext>?, minimum_width: CValuesRef<gintVar>?, natural_width: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk34361_gtk_cell_area_context_get_preferred_height")
external fun gtk_cell_area_context_get_preferred_height(context: CValuesRef<GtkCellAreaContext>?, minimum_height: CValuesRef<gintVar>?, natural_height: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk34362_gtk_cell_area_context_get_preferred_height_for_width")
external fun gtk_cell_area_context_get_preferred_height_for_width(context: CValuesRef<GtkCellAreaContext>?, width: gint, minimum_height: CValuesRef<gintVar>?, natural_height: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk34363_gtk_cell_area_context_get_preferred_width_for_height")
external fun gtk_cell_area_context_get_preferred_width_for_height(context: CValuesRef<GtkCellAreaContext>?, height: gint, minimum_width: CValuesRef<gintVar>?, natural_width: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk34364_gtk_cell_area_context_get_allocation")
external fun gtk_cell_area_context_get_allocation(context: CValuesRef<GtkCellAreaContext>?, width: CValuesRef<gintVar>?, height: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk34365_gtk_cell_area_context_push_preferred_width")
external fun gtk_cell_area_context_push_preferred_width(context: CValuesRef<GtkCellAreaContext>?, minimum_width: gint, natural_width: gint): Unit

@CCall("knifunptr_libgtk34366_gtk_cell_area_context_push_preferred_height")
external fun gtk_cell_area_context_push_preferred_height(context: CValuesRef<GtkCellAreaContext>?, minimum_height: gint, natural_height: gint): Unit

@CCall("knifunptr_libgtk34367_gtk_cell_layout_get_type")
external fun gtk_cell_layout_get_type(): GType

@CCall("knifunptr_libgtk34368_gtk_cell_layout_pack_start")
external fun gtk_cell_layout_pack_start(cell_layout: CValuesRef<GtkCellLayout>?, cell: CValuesRef<GtkCellRenderer>?, expand: gboolean): Unit

@CCall("knifunptr_libgtk34369_gtk_cell_layout_pack_end")
external fun gtk_cell_layout_pack_end(cell_layout: CValuesRef<GtkCellLayout>?, cell: CValuesRef<GtkCellRenderer>?, expand: gboolean): Unit

@CCall("knifunptr_libgtk34370_gtk_cell_layout_get_cells")
external fun gtk_cell_layout_get_cells(cell_layout: CValuesRef<GtkCellLayout>?): CPointer<GList>?

@CCall("knifunptr_libgtk34371_gtk_cell_layout_clear")
external fun gtk_cell_layout_clear(cell_layout: CValuesRef<GtkCellLayout>?): Unit

@CCall("knifunptr_libgtk34372_gtk_cell_layout_set_attributes")
external fun gtk_cell_layout_set_attributes(cell_layout: CValuesRef<GtkCellLayout>?, cell: CValuesRef<GtkCellRenderer>?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk34373_gtk_cell_layout_add_attribute")
external fun gtk_cell_layout_add_attribute(cell_layout: CValuesRef<GtkCellLayout>?, cell: CValuesRef<GtkCellRenderer>?, @CCall.CString attribute: String?, column: gint): Unit

@CCall("knifunptr_libgtk34374_gtk_cell_layout_set_cell_data_func")
external fun gtk_cell_layout_set_cell_data_func(cell_layout: CValuesRef<GtkCellLayout>?, cell: CValuesRef<GtkCellRenderer>?, func: GtkCellLayoutDataFunc?, func_data: gpointer?, destroy: GDestroyNotify?): Unit

@CCall("knifunptr_libgtk34375_gtk_cell_layout_clear_attributes")
external fun gtk_cell_layout_clear_attributes(cell_layout: CValuesRef<GtkCellLayout>?, cell: CValuesRef<GtkCellRenderer>?): Unit

@CCall("knifunptr_libgtk34376_gtk_cell_layout_reorder")
external fun gtk_cell_layout_reorder(cell_layout: CValuesRef<GtkCellLayout>?, cell: CValuesRef<GtkCellRenderer>?, position: gint): Unit

@CCall("knifunptr_libgtk34377_gtk_cell_layout_get_area")
external fun gtk_cell_layout_get_area(cell_layout: CValuesRef<GtkCellLayout>?): CPointer<GtkCellArea>?

@CCall("knifunptr_libgtk34378__gtk_cell_layout_buildable_custom_tag_start")
external fun _gtk_cell_layout_buildable_custom_tag_start(buildable: CValuesRef<GtkBuildable>?, builder: CValuesRef<GtkBuilder>?, child: CValuesRef<GObject>?, @CCall.CString tagname: String?, parser: CValuesRef<GMarkupParser>?, data: CValuesRef<gpointerVar>?): gboolean

@CCall("knifunptr_libgtk34379__gtk_cell_layout_buildable_custom_tag_end")
external fun _gtk_cell_layout_buildable_custom_tag_end(buildable: CValuesRef<GtkBuildable>?, builder: CValuesRef<GtkBuilder>?, child: CValuesRef<GObject>?, @CCall.CString tagname: String?, data: CValuesRef<gpointerVar>?): gboolean

@CCall("knifunptr_libgtk34380__gtk_cell_layout_buildable_add_child")
external fun _gtk_cell_layout_buildable_add_child(buildable: CValuesRef<GtkBuildable>?, builder: CValuesRef<GtkBuilder>?, child: CValuesRef<GObject>?, @CCall.CString type: String?): Unit

@CCall("knifunptr_libgtk34381_gtk_cell_renderer_text_get_type")
external fun gtk_cell_renderer_text_get_type(): GType

@CCall("knifunptr_libgtk34382_gtk_cell_renderer_text_new")
external fun gtk_cell_renderer_text_new(): CPointer<GtkCellRenderer>?

@CCall("knifunptr_libgtk34383_gtk_cell_renderer_text_set_fixed_height_from_font")
external fun gtk_cell_renderer_text_set_fixed_height_from_font(renderer: CValuesRef<GtkCellRendererText>?, number_of_rows: gint): Unit

@CCall("knifunptr_libgtk34384_gtk_cell_renderer_accel_get_type")
external fun gtk_cell_renderer_accel_get_type(): GType

@CCall("knifunptr_libgtk34385_gtk_cell_renderer_accel_new")
external fun gtk_cell_renderer_accel_new(): CPointer<GtkCellRenderer>?

@CCall("knifunptr_libgtk34386_gtk_cell_renderer_combo_get_type")
external fun gtk_cell_renderer_combo_get_type(): GType

@CCall("knifunptr_libgtk34387_gtk_cell_renderer_combo_new")
external fun gtk_cell_renderer_combo_new(): CPointer<GtkCellRenderer>?

@CCall("knifunptr_libgtk34388_gtk_cell_renderer_pixbuf_get_type")
external fun gtk_cell_renderer_pixbuf_get_type(): GType

@CCall("knifunptr_libgtk34389_gtk_cell_renderer_pixbuf_new")
external fun gtk_cell_renderer_pixbuf_new(): CPointer<GtkCellRenderer>?

@CCall("knifunptr_libgtk34390_gtk_cell_renderer_progress_get_type")
external fun gtk_cell_renderer_progress_get_type(): GType

@CCall("knifunptr_libgtk34391_gtk_cell_renderer_progress_new")
external fun gtk_cell_renderer_progress_new(): CPointer<GtkCellRenderer>?

@CCall("knifunptr_libgtk34392_gtk_cell_renderer_spin_get_type")
external fun gtk_cell_renderer_spin_get_type(): GType

@CCall("knifunptr_libgtk34393_gtk_cell_renderer_spin_new")
external fun gtk_cell_renderer_spin_new(): CPointer<GtkCellRenderer>?

@CCall("knifunptr_libgtk34394_gtk_cell_renderer_spinner_get_type")
external fun gtk_cell_renderer_spinner_get_type(): GType

@CCall("knifunptr_libgtk34395_gtk_cell_renderer_spinner_new")
external fun gtk_cell_renderer_spinner_new(): CPointer<GtkCellRenderer>?

@CCall("knifunptr_libgtk34396_gtk_cell_renderer_toggle_get_type")
external fun gtk_cell_renderer_toggle_get_type(): GType

@CCall("knifunptr_libgtk34397_gtk_cell_renderer_toggle_new")
external fun gtk_cell_renderer_toggle_new(): CPointer<GtkCellRenderer>?

@CCall("knifunptr_libgtk34398_gtk_cell_renderer_toggle_get_radio")
external fun gtk_cell_renderer_toggle_get_radio(toggle: CValuesRef<GtkCellRendererToggle>?): gboolean

@CCall("knifunptr_libgtk34399_gtk_cell_renderer_toggle_set_radio")
external fun gtk_cell_renderer_toggle_set_radio(toggle: CValuesRef<GtkCellRendererToggle>?, radio: gboolean): Unit

@CCall("knifunptr_libgtk34400_gtk_cell_renderer_toggle_get_active")
external fun gtk_cell_renderer_toggle_get_active(toggle: CValuesRef<GtkCellRendererToggle>?): gboolean

@CCall("knifunptr_libgtk34401_gtk_cell_renderer_toggle_set_active")
external fun gtk_cell_renderer_toggle_set_active(toggle: CValuesRef<GtkCellRendererToggle>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk34402_gtk_cell_renderer_toggle_get_activatable")
external fun gtk_cell_renderer_toggle_get_activatable(toggle: CValuesRef<GtkCellRendererToggle>?): gboolean

@CCall("knifunptr_libgtk34403_gtk_cell_renderer_toggle_set_activatable")
external fun gtk_cell_renderer_toggle_set_activatable(toggle: CValuesRef<GtkCellRendererToggle>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk34404_gtk_cell_view_get_type")
external fun gtk_cell_view_get_type(): GType

@CCall("knifunptr_libgtk34405_gtk_cell_view_new")
external fun gtk_cell_view_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34406_gtk_cell_view_new_with_context")
external fun gtk_cell_view_new_with_context(area: CValuesRef<GtkCellArea>?, context: CValuesRef<GtkCellAreaContext>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34407_gtk_cell_view_new_with_text")
external fun gtk_cell_view_new_with_text(@CCall.CString text: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34408_gtk_cell_view_new_with_markup")
external fun gtk_cell_view_new_with_markup(@CCall.CString markup: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34409_gtk_cell_view_new_with_pixbuf")
external fun gtk_cell_view_new_with_pixbuf(pixbuf: CValuesRef<GdkPixbuf>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34410_gtk_cell_view_set_model")
external fun gtk_cell_view_set_model(cell_view: CValuesRef<GtkCellView>?, model: CValuesRef<GtkTreeModel>?): Unit

@CCall("knifunptr_libgtk34411_gtk_cell_view_get_model")
external fun gtk_cell_view_get_model(cell_view: CValuesRef<GtkCellView>?): CPointer<GtkTreeModel>?

@CCall("knifunptr_libgtk34412_gtk_cell_view_set_displayed_row")
external fun gtk_cell_view_set_displayed_row(cell_view: CValuesRef<GtkCellView>?, path: CValuesRef<GtkTreePath>?): Unit

@CCall("knifunptr_libgtk34413_gtk_cell_view_get_displayed_row")
external fun gtk_cell_view_get_displayed_row(cell_view: CValuesRef<GtkCellView>?): CPointer<GtkTreePath>?

@CCall("knifunptr_libgtk34414_gtk_cell_view_set_background_rgba")
external fun gtk_cell_view_set_background_rgba(cell_view: CValuesRef<GtkCellView>?, rgba: CValuesRef<GdkRGBA>?): Unit

@CCall("knifunptr_libgtk34415_gtk_cell_view_get_draw_sensitive")
external fun gtk_cell_view_get_draw_sensitive(cell_view: CValuesRef<GtkCellView>?): gboolean

@CCall("knifunptr_libgtk34416_gtk_cell_view_set_draw_sensitive")
external fun gtk_cell_view_set_draw_sensitive(cell_view: CValuesRef<GtkCellView>?, draw_sensitive: gboolean): Unit

@CCall("knifunptr_libgtk34417_gtk_cell_view_get_fit_model")
external fun gtk_cell_view_get_fit_model(cell_view: CValuesRef<GtkCellView>?): gboolean

@CCall("knifunptr_libgtk34418_gtk_cell_view_set_fit_model")
external fun gtk_cell_view_set_fit_model(cell_view: CValuesRef<GtkCellView>?, fit_model: gboolean): Unit

@CCall("knifunptr_libgtk34419_gtk_cell_view_get_size_of_row")
external fun gtk_cell_view_get_size_of_row(cell_view: CValuesRef<GtkCellView>?, path: CValuesRef<GtkTreePath>?, requisition: CValuesRef<GtkRequisition>?): gboolean

@CCall("knifunptr_libgtk34420_gtk_cell_view_set_background_color")
external fun gtk_cell_view_set_background_color(cell_view: CValuesRef<GtkCellView>?, color: CValuesRef<GdkColor>?): Unit

@CCall("knifunptr_libgtk34421_gtk_toggle_button_get_type")
external fun gtk_toggle_button_get_type(): GType

@CCall("knifunptr_libgtk34422_gtk_toggle_button_new")
external fun gtk_toggle_button_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34423_gtk_toggle_button_new_with_label")
external fun gtk_toggle_button_new_with_label(@CCall.CString label: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34424_gtk_toggle_button_new_with_mnemonic")
external fun gtk_toggle_button_new_with_mnemonic(@CCall.CString label: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34425_gtk_toggle_button_set_mode")
external fun gtk_toggle_button_set_mode(toggle_button: CValuesRef<GtkToggleButton>?, draw_indicator: gboolean): Unit

@CCall("knifunptr_libgtk34426_gtk_toggle_button_get_mode")
external fun gtk_toggle_button_get_mode(toggle_button: CValuesRef<GtkToggleButton>?): gboolean

@CCall("knifunptr_libgtk34427_gtk_toggle_button_set_active")
external fun gtk_toggle_button_set_active(toggle_button: CValuesRef<GtkToggleButton>?, is_active: gboolean): Unit

@CCall("knifunptr_libgtk34428_gtk_toggle_button_get_active")
external fun gtk_toggle_button_get_active(toggle_button: CValuesRef<GtkToggleButton>?): gboolean

@CCall("knifunptr_libgtk34429_gtk_toggle_button_toggled")
external fun gtk_toggle_button_toggled(toggle_button: CValuesRef<GtkToggleButton>?): Unit

@CCall("knifunptr_libgtk34430_gtk_toggle_button_set_inconsistent")
external fun gtk_toggle_button_set_inconsistent(toggle_button: CValuesRef<GtkToggleButton>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk34431_gtk_toggle_button_get_inconsistent")
external fun gtk_toggle_button_get_inconsistent(toggle_button: CValuesRef<GtkToggleButton>?): gboolean

@CCall("knifunptr_libgtk34432_gtk_check_button_get_type")
external fun gtk_check_button_get_type(): GType

@CCall("knifunptr_libgtk34433_gtk_check_button_new")
external fun gtk_check_button_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34434_gtk_check_button_new_with_label")
external fun gtk_check_button_new_with_label(@CCall.CString label: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34435_gtk_check_button_new_with_mnemonic")
external fun gtk_check_button_new_with_mnemonic(@CCall.CString label: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34436__gtk_check_button_get_props")
external fun _gtk_check_button_get_props(check_button: CValuesRef<GtkCheckButton>?, indicator_size: CValuesRef<gintVar>?, indicator_spacing: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk34437_gtk_menu_item_get_type")
external fun gtk_menu_item_get_type(): GType

@CCall("knifunptr_libgtk34438_gtk_menu_item_new")
external fun gtk_menu_item_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34439_gtk_menu_item_new_with_label")
external fun gtk_menu_item_new_with_label(@CCall.CString label: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34440_gtk_menu_item_new_with_mnemonic")
external fun gtk_menu_item_new_with_mnemonic(@CCall.CString label: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34441_gtk_menu_item_set_submenu")
external fun gtk_menu_item_set_submenu(menu_item: CValuesRef<GtkMenuItem>?, submenu: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk34442_gtk_menu_item_get_submenu")
external fun gtk_menu_item_get_submenu(menu_item: CValuesRef<GtkMenuItem>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34443_gtk_menu_item_select")
external fun gtk_menu_item_select(menu_item: CValuesRef<GtkMenuItem>?): Unit

@CCall("knifunptr_libgtk34444_gtk_menu_item_deselect")
external fun gtk_menu_item_deselect(menu_item: CValuesRef<GtkMenuItem>?): Unit

@CCall("knifunptr_libgtk34445_gtk_menu_item_activate")
external fun gtk_menu_item_activate(menu_item: CValuesRef<GtkMenuItem>?): Unit

@CCall("knifunptr_libgtk34446_gtk_menu_item_toggle_size_request")
external fun gtk_menu_item_toggle_size_request(menu_item: CValuesRef<GtkMenuItem>?, requisition: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk34447_gtk_menu_item_toggle_size_allocate")
external fun gtk_menu_item_toggle_size_allocate(menu_item: CValuesRef<GtkMenuItem>?, allocation: gint): Unit

@CCall("knifunptr_libgtk34448_gtk_menu_item_set_right_justified")
external fun gtk_menu_item_set_right_justified(menu_item: CValuesRef<GtkMenuItem>?, right_justified: gboolean): Unit

@CCall("knifunptr_libgtk34449_gtk_menu_item_get_right_justified")
external fun gtk_menu_item_get_right_justified(menu_item: CValuesRef<GtkMenuItem>?): gboolean

@CCall("knifunptr_libgtk34450_gtk_menu_item_set_accel_path")
external fun gtk_menu_item_set_accel_path(menu_item: CValuesRef<GtkMenuItem>?, @CCall.CString accel_path: String?): Unit

@CCall("knifunptr_libgtk34451_gtk_menu_item_get_accel_path")
external fun gtk_menu_item_get_accel_path(menu_item: CValuesRef<GtkMenuItem>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk34452_gtk_menu_item_set_label")
external fun gtk_menu_item_set_label(menu_item: CValuesRef<GtkMenuItem>?, @CCall.CString label: String?): Unit

@CCall("knifunptr_libgtk34453_gtk_menu_item_get_label")
external fun gtk_menu_item_get_label(menu_item: CValuesRef<GtkMenuItem>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk34454_gtk_menu_item_set_use_underline")
external fun gtk_menu_item_set_use_underline(menu_item: CValuesRef<GtkMenuItem>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk34455_gtk_menu_item_get_use_underline")
external fun gtk_menu_item_get_use_underline(menu_item: CValuesRef<GtkMenuItem>?): gboolean

@CCall("knifunptr_libgtk34456_gtk_menu_item_set_reserve_indicator")
external fun gtk_menu_item_set_reserve_indicator(menu_item: CValuesRef<GtkMenuItem>?, reserve: gboolean): Unit

@CCall("knifunptr_libgtk34457_gtk_menu_item_get_reserve_indicator")
external fun gtk_menu_item_get_reserve_indicator(menu_item: CValuesRef<GtkMenuItem>?): gboolean

@CCall("knifunptr_libgtk34458_gtk_check_menu_item_get_type")
external fun gtk_check_menu_item_get_type(): GType

@CCall("knifunptr_libgtk34459_gtk_check_menu_item_new")
external fun gtk_check_menu_item_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34460_gtk_check_menu_item_new_with_label")
external fun gtk_check_menu_item_new_with_label(@CCall.CString label: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34461_gtk_check_menu_item_new_with_mnemonic")
external fun gtk_check_menu_item_new_with_mnemonic(@CCall.CString label: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34462_gtk_check_menu_item_set_active")
external fun gtk_check_menu_item_set_active(check_menu_item: CValuesRef<GtkCheckMenuItem>?, is_active: gboolean): Unit

@CCall("knifunptr_libgtk34463_gtk_check_menu_item_get_active")
external fun gtk_check_menu_item_get_active(check_menu_item: CValuesRef<GtkCheckMenuItem>?): gboolean

@CCall("knifunptr_libgtk34464_gtk_check_menu_item_toggled")
external fun gtk_check_menu_item_toggled(check_menu_item: CValuesRef<GtkCheckMenuItem>?): Unit

@CCall("knifunptr_libgtk34465_gtk_check_menu_item_set_inconsistent")
external fun gtk_check_menu_item_set_inconsistent(check_menu_item: CValuesRef<GtkCheckMenuItem>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk34466_gtk_check_menu_item_get_inconsistent")
external fun gtk_check_menu_item_get_inconsistent(check_menu_item: CValuesRef<GtkCheckMenuItem>?): gboolean

@CCall("knifunptr_libgtk34467_gtk_check_menu_item_set_draw_as_radio")
external fun gtk_check_menu_item_set_draw_as_radio(check_menu_item: CValuesRef<GtkCheckMenuItem>?, draw_as_radio: gboolean): Unit

@CCall("knifunptr_libgtk34468_gtk_check_menu_item_get_draw_as_radio")
external fun gtk_check_menu_item_get_draw_as_radio(check_menu_item: CValuesRef<GtkCheckMenuItem>?): gboolean

@CCall("knifunptr_libgtk34469_gtk_clipboard_get_type")
external fun gtk_clipboard_get_type(): GType

@CCall("knifunptr_libgtk34470_gtk_clipboard_get_for_display")
external fun gtk_clipboard_get_for_display(display: CValuesRef<GdkDisplay>?, selection: GdkAtom?): CPointer<GtkClipboard>?

@CCall("knifunptr_libgtk34471_gtk_clipboard_get")
external fun gtk_clipboard_get(selection: GdkAtom?): CPointer<GtkClipboard>?

@CCall("knifunptr_libgtk34472_gtk_clipboard_get_default")
external fun gtk_clipboard_get_default(display: CValuesRef<GdkDisplay>?): CPointer<GtkClipboard>?

@CCall("knifunptr_libgtk34473_gtk_clipboard_get_display")
external fun gtk_clipboard_get_display(clipboard: CValuesRef<GtkClipboard>?): CPointer<GdkDisplay>?

@CCall("knifunptr_libgtk34474_gtk_clipboard_set_with_data")
external fun gtk_clipboard_set_with_data(clipboard: CValuesRef<GtkClipboard>?, targets: CValuesRef<GtkTargetEntry>?, n_targets: guint, get_func: GtkClipboardGetFunc?, clear_func: GtkClipboardClearFunc?, user_data: gpointer?): gboolean

@CCall("knifunptr_libgtk34475_gtk_clipboard_set_with_owner")
external fun gtk_clipboard_set_with_owner(clipboard: CValuesRef<GtkClipboard>?, targets: CValuesRef<GtkTargetEntry>?, n_targets: guint, get_func: GtkClipboardGetFunc?, clear_func: GtkClipboardClearFunc?, owner: CValuesRef<GObject>?): gboolean

@CCall("knifunptr_libgtk34476_gtk_clipboard_get_owner")
external fun gtk_clipboard_get_owner(clipboard: CValuesRef<GtkClipboard>?): CPointer<GObject>?

@CCall("knifunptr_libgtk34477_gtk_clipboard_clear")
external fun gtk_clipboard_clear(clipboard: CValuesRef<GtkClipboard>?): Unit

@CCall("knifunptr_libgtk34478_gtk_clipboard_set_text")
external fun gtk_clipboard_set_text(clipboard: CValuesRef<GtkClipboard>?, @CCall.CString text: String?, len: gint): Unit

@CCall("knifunptr_libgtk34479_gtk_clipboard_set_image")
external fun gtk_clipboard_set_image(clipboard: CValuesRef<GtkClipboard>?, pixbuf: CValuesRef<GdkPixbuf>?): Unit

@CCall("knifunptr_libgtk34480_gtk_clipboard_request_contents")
external fun gtk_clipboard_request_contents(clipboard: CValuesRef<GtkClipboard>?, target: GdkAtom?, callback: GtkClipboardReceivedFunc?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk34481_gtk_clipboard_request_text")
external fun gtk_clipboard_request_text(clipboard: CValuesRef<GtkClipboard>?, callback: GtkClipboardTextReceivedFunc?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk34482_gtk_clipboard_request_rich_text")
external fun gtk_clipboard_request_rich_text(clipboard: CValuesRef<GtkClipboard>?, buffer: CValuesRef<GtkTextBuffer>?, callback: GtkClipboardRichTextReceivedFunc?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk34483_gtk_clipboard_request_image")
external fun gtk_clipboard_request_image(clipboard: CValuesRef<GtkClipboard>?, callback: GtkClipboardImageReceivedFunc?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk34484_gtk_clipboard_request_uris")
external fun gtk_clipboard_request_uris(clipboard: CValuesRef<GtkClipboard>?, callback: GtkClipboardURIReceivedFunc?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk34485_gtk_clipboard_request_targets")
external fun gtk_clipboard_request_targets(clipboard: CValuesRef<GtkClipboard>?, callback: GtkClipboardTargetsReceivedFunc?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk34486_gtk_clipboard_wait_for_contents")
external fun gtk_clipboard_wait_for_contents(clipboard: CValuesRef<GtkClipboard>?, target: GdkAtom?): CPointer<GtkSelectionData>?

@CCall("knifunptr_libgtk34487_gtk_clipboard_wait_for_text")
external fun gtk_clipboard_wait_for_text(clipboard: CValuesRef<GtkClipboard>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk34488_gtk_clipboard_wait_for_rich_text")
external fun gtk_clipboard_wait_for_rich_text(clipboard: CValuesRef<GtkClipboard>?, buffer: CValuesRef<GtkTextBuffer>?, format: CValuesRef<GdkAtomVar>?, length: CValuesRef<gsizeVar>?): CPointer<guint8Var>?

@CCall("knifunptr_libgtk34489_gtk_clipboard_wait_for_image")
external fun gtk_clipboard_wait_for_image(clipboard: CValuesRef<GtkClipboard>?): CPointer<GdkPixbuf>?

@CCall("knifunptr_libgtk34490_gtk_clipboard_wait_for_uris")
external fun gtk_clipboard_wait_for_uris(clipboard: CValuesRef<GtkClipboard>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_libgtk34491_gtk_clipboard_wait_for_targets")
external fun gtk_clipboard_wait_for_targets(clipboard: CValuesRef<GtkClipboard>?, targets: CValuesRef<CPointerVar<GdkAtomVar>>?, n_targets: CValuesRef<gintVar>?): gboolean

@CCall("knifunptr_libgtk34492_gtk_clipboard_wait_is_text_available")
external fun gtk_clipboard_wait_is_text_available(clipboard: CValuesRef<GtkClipboard>?): gboolean

@CCall("knifunptr_libgtk34493_gtk_clipboard_wait_is_rich_text_available")
external fun gtk_clipboard_wait_is_rich_text_available(clipboard: CValuesRef<GtkClipboard>?, buffer: CValuesRef<GtkTextBuffer>?): gboolean

@CCall("knifunptr_libgtk34494_gtk_clipboard_wait_is_image_available")
external fun gtk_clipboard_wait_is_image_available(clipboard: CValuesRef<GtkClipboard>?): gboolean

@CCall("knifunptr_libgtk34495_gtk_clipboard_wait_is_uris_available")
external fun gtk_clipboard_wait_is_uris_available(clipboard: CValuesRef<GtkClipboard>?): gboolean

@CCall("knifunptr_libgtk34496_gtk_clipboard_wait_is_target_available")
external fun gtk_clipboard_wait_is_target_available(clipboard: CValuesRef<GtkClipboard>?, target: GdkAtom?): gboolean

@CCall("knifunptr_libgtk34497_gtk_clipboard_set_can_store")
external fun gtk_clipboard_set_can_store(clipboard: CValuesRef<GtkClipboard>?, targets: CValuesRef<GtkTargetEntry>?, n_targets: gint): Unit

@CCall("knifunptr_libgtk34498_gtk_clipboard_store")
external fun gtk_clipboard_store(clipboard: CValuesRef<GtkClipboard>?): Unit

@CCall("knifunptr_libgtk34499_gtk_clipboard_get_selection")
external fun gtk_clipboard_get_selection(clipboard: CValuesRef<GtkClipboard>?): GdkAtom?

@CCall("knifunptr_libgtk34500_gtk_color_button_get_type")
external fun gtk_color_button_get_type(): GType

@CCall("knifunptr_libgtk34501_gtk_color_button_new")
external fun gtk_color_button_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34502_gtk_color_button_new_with_rgba")
external fun gtk_color_button_new_with_rgba(rgba: CValuesRef<GdkRGBA>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34503_gtk_color_button_set_title")
external fun gtk_color_button_set_title(button: CValuesRef<GtkColorButton>?, @CCall.CString title: String?): Unit

@CCall("knifunptr_libgtk34504_gtk_color_button_get_title")
external fun gtk_color_button_get_title(button: CValuesRef<GtkColorButton>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk34505_gtk_color_button_new_with_color")
external fun gtk_color_button_new_with_color(color: CValuesRef<GdkColor>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34506_gtk_color_button_set_color")
external fun gtk_color_button_set_color(button: CValuesRef<GtkColorButton>?, color: CValuesRef<GdkColor>?): Unit

@CCall("knifunptr_libgtk34507_gtk_color_button_get_color")
external fun gtk_color_button_get_color(button: CValuesRef<GtkColorButton>?, color: CValuesRef<GdkColor>?): Unit

@CCall("knifunptr_libgtk34508_gtk_color_button_set_alpha")
external fun gtk_color_button_set_alpha(button: CValuesRef<GtkColorButton>?, alpha: guint16): Unit

@CCall("knifunptr_libgtk34509_gtk_color_button_get_alpha")
external fun gtk_color_button_get_alpha(button: CValuesRef<GtkColorButton>?): guint16

@CCall("knifunptr_libgtk34510_gtk_color_button_set_use_alpha")
external fun gtk_color_button_set_use_alpha(button: CValuesRef<GtkColorButton>?, use_alpha: gboolean): Unit

@CCall("knifunptr_libgtk34511_gtk_color_button_get_use_alpha")
external fun gtk_color_button_get_use_alpha(button: CValuesRef<GtkColorButton>?): gboolean

@CCall("knifunptr_libgtk34512_gtk_color_button_set_rgba")
external fun gtk_color_button_set_rgba(button: CValuesRef<GtkColorButton>?, rgba: CValuesRef<GdkRGBA>?): Unit

@CCall("knifunptr_libgtk34513_gtk_color_button_get_rgba")
external fun gtk_color_button_get_rgba(button: CValuesRef<GtkColorButton>?, rgba: CValuesRef<GdkRGBA>?): Unit

@CCall("knifunptr_libgtk34514_gtk_color_chooser_get_type")
external fun gtk_color_chooser_get_type(): GType

@CCall("knifunptr_libgtk34515_gtk_color_chooser_get_rgba")
external fun gtk_color_chooser_get_rgba(chooser: CValuesRef<GtkColorChooser>?, color: CValuesRef<GdkRGBA>?): Unit

@CCall("knifunptr_libgtk34516_gtk_color_chooser_set_rgba")
external fun gtk_color_chooser_set_rgba(chooser: CValuesRef<GtkColorChooser>?, color: CValuesRef<GdkRGBA>?): Unit

@CCall("knifunptr_libgtk34517_gtk_color_chooser_get_use_alpha")
external fun gtk_color_chooser_get_use_alpha(chooser: CValuesRef<GtkColorChooser>?): gboolean

@CCall("knifunptr_libgtk34518_gtk_color_chooser_set_use_alpha")
external fun gtk_color_chooser_set_use_alpha(chooser: CValuesRef<GtkColorChooser>?, use_alpha: gboolean): Unit

@CCall("knifunptr_libgtk34519_gtk_color_chooser_add_palette")
external fun gtk_color_chooser_add_palette(chooser: CValuesRef<GtkColorChooser>?, orientation: GtkOrientation, colors_per_line: gint, n_colors: gint, colors: CValuesRef<GdkRGBA>?): Unit

@CCall("knifunptr_libgtk34520_gtk_color_chooser_dialog_get_type")
external fun gtk_color_chooser_dialog_get_type(): GType

@CCall("knifunptr_libgtk34521_gtk_color_chooser_dialog_new")
external fun gtk_color_chooser_dialog_new(@CCall.CString title: String?, parent: CValuesRef<GtkWindow>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34522_gtk_color_chooser_widget_get_type")
external fun gtk_color_chooser_widget_get_type(): GType

@CCall("knifunptr_libgtk34523_gtk_color_chooser_widget_new")
external fun gtk_color_chooser_widget_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34524_gtk_hsv_to_rgb")
external fun gtk_hsv_to_rgb(h: gdouble, s: gdouble, v: gdouble, r: CValuesRef<gdoubleVar>?, g: CValuesRef<gdoubleVar>?, b: CValuesRef<gdoubleVar>?): Unit

@CCall("knifunptr_libgtk34525_gtk_rgb_to_hsv")
external fun gtk_rgb_to_hsv(r: gdouble, g: gdouble, b: gdouble, h: CValuesRef<gdoubleVar>?, s: CValuesRef<gdoubleVar>?, v: CValuesRef<gdoubleVar>?): Unit

@CCall("knifunptr_libgtk34526_gtk_combo_box_text_get_type")
external fun gtk_combo_box_text_get_type(): GType

@CCall("knifunptr_libgtk34527_gtk_combo_box_text_new")
external fun gtk_combo_box_text_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34528_gtk_combo_box_text_new_with_entry")
external fun gtk_combo_box_text_new_with_entry(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34529_gtk_combo_box_text_append_text")
external fun gtk_combo_box_text_append_text(combo_box: CValuesRef<GtkComboBoxText>?, @CCall.CString text: String?): Unit

@CCall("knifunptr_libgtk34530_gtk_combo_box_text_insert_text")
external fun gtk_combo_box_text_insert_text(combo_box: CValuesRef<GtkComboBoxText>?, position: gint, @CCall.CString text: String?): Unit

@CCall("knifunptr_libgtk34531_gtk_combo_box_text_prepend_text")
external fun gtk_combo_box_text_prepend_text(combo_box: CValuesRef<GtkComboBoxText>?, @CCall.CString text: String?): Unit

@CCall("knifunptr_libgtk34532_gtk_combo_box_text_remove")
external fun gtk_combo_box_text_remove(combo_box: CValuesRef<GtkComboBoxText>?, position: gint): Unit

@CCall("knifunptr_libgtk34533_gtk_combo_box_text_remove_all")
external fun gtk_combo_box_text_remove_all(combo_box: CValuesRef<GtkComboBoxText>?): Unit

@CCall("knifunptr_libgtk34534_gtk_combo_box_text_get_active_text")
external fun gtk_combo_box_text_get_active_text(combo_box: CValuesRef<GtkComboBoxText>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk34535_gtk_combo_box_text_insert")
external fun gtk_combo_box_text_insert(combo_box: CValuesRef<GtkComboBoxText>?, position: gint, @CCall.CString id: String?, @CCall.CString text: String?): Unit

@CCall("knifunptr_libgtk34536_gtk_combo_box_text_append")
external fun gtk_combo_box_text_append(combo_box: CValuesRef<GtkComboBoxText>?, @CCall.CString id: String?, @CCall.CString text: String?): Unit

@CCall("knifunptr_libgtk34537_gtk_combo_box_text_prepend")
external fun gtk_combo_box_text_prepend(combo_box: CValuesRef<GtkComboBoxText>?, @CCall.CString id: String?, @CCall.CString text: String?): Unit

@CCall("knifunptr_libgtk34538_gtk_css_section_get_type")
external fun gtk_css_section_get_type(): GType

@CCall("knifunptr_libgtk34539_gtk_css_section_ref")
external fun gtk_css_section_ref(section: CValuesRef<GtkCssSection>?): CPointer<GtkCssSection>?

@CCall("knifunptr_libgtk34540_gtk_css_section_unref")
external fun gtk_css_section_unref(section: CValuesRef<GtkCssSection>?): Unit

@CCall("knifunptr_libgtk34541_gtk_css_section_get_section_type")
external fun gtk_css_section_get_section_type(section: CValuesRef<GtkCssSection>?): GtkCssSectionType

@CCall("knifunptr_libgtk34542_gtk_css_section_get_parent")
external fun gtk_css_section_get_parent(section: CValuesRef<GtkCssSection>?): CPointer<GtkCssSection>?

@CCall("knifunptr_libgtk34543_gtk_css_section_get_file")
external fun gtk_css_section_get_file(section: CValuesRef<GtkCssSection>?): CPointer<GFile>?

@CCall("knifunptr_libgtk34544_gtk_css_section_get_start_line")
external fun gtk_css_section_get_start_line(section: CValuesRef<GtkCssSection>?): guint

@CCall("knifunptr_libgtk34545_gtk_css_section_get_start_position")
external fun gtk_css_section_get_start_position(section: CValuesRef<GtkCssSection>?): guint

@CCall("knifunptr_libgtk34546_gtk_css_section_get_end_line")
external fun gtk_css_section_get_end_line(section: CValuesRef<GtkCssSection>?): guint

@CCall("knifunptr_libgtk34547_gtk_css_section_get_end_position")
external fun gtk_css_section_get_end_position(section: CValuesRef<GtkCssSection>?): guint

@CCall("knifunptr_libgtk34548_gtk_css_provider_error_quark")
external fun gtk_css_provider_error_quark(): GQuark

@CCall("knifunptr_libgtk34549_gtk_css_provider_get_type")
external fun gtk_css_provider_get_type(): GType

@CCall("knifunptr_libgtk34550_gtk_css_provider_new")
external fun gtk_css_provider_new(): CPointer<GtkCssProvider>?

@CCall("knifunptr_libgtk34551_gtk_css_provider_to_string")
external fun gtk_css_provider_to_string(provider: CValuesRef<GtkCssProvider>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk34552_gtk_css_provider_load_from_data")
external fun gtk_css_provider_load_from_data(css_provider: CValuesRef<GtkCssProvider>?, @CCall.CString data: String?, length: gssize, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk34553_gtk_css_provider_load_from_file")
external fun gtk_css_provider_load_from_file(css_provider: CValuesRef<GtkCssProvider>?, file: CValuesRef<GFile>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk34554_gtk_css_provider_load_from_path")
external fun gtk_css_provider_load_from_path(css_provider: CValuesRef<GtkCssProvider>?, @CCall.CString path: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk34555_gtk_css_provider_load_from_resource")
external fun gtk_css_provider_load_from_resource(css_provider: CValuesRef<GtkCssProvider>?, @CCall.CString resource_path: String?): Unit

@CCall("knifunptr_libgtk34556_gtk_css_provider_get_default")
external fun gtk_css_provider_get_default(): CPointer<GtkCssProvider>?

@CCall("knifunptr_libgtk34557_gtk_css_provider_get_named")
external fun gtk_css_provider_get_named(@CCall.CString name: String?, @CCall.CString variant: String?): CPointer<GtkCssProvider>?

@CCall("knifunptr_libgtk34558_gtk_get_debug_flags")
external fun gtk_get_debug_flags(): guint

@CCall("knifunptr_libgtk34559_gtk_set_debug_flags")
external fun gtk_set_debug_flags(flags: guint): Unit

@CCall("knifunptr_libgtk34560_gtk_drag_dest_set")
external fun gtk_drag_dest_set(widget: CValuesRef<GtkWidget>?, flags: GtkDestDefaults, targets: CValuesRef<GtkTargetEntry>?, n_targets: gint, actions: GdkDragAction): Unit

@CCall("knifunptr_libgtk34561_gtk_drag_dest_set_proxy")
external fun gtk_drag_dest_set_proxy(widget: CValuesRef<GtkWidget>?, proxy_window: CValuesRef<GdkWindow>?, protocol: GdkDragProtocol, use_coordinates: gboolean): Unit

@CCall("knifunptr_libgtk34562_gtk_drag_dest_unset")
external fun gtk_drag_dest_unset(widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk34563_gtk_drag_dest_find_target")
external fun gtk_drag_dest_find_target(widget: CValuesRef<GtkWidget>?, context: CValuesRef<GdkDragContext>?, target_list: CValuesRef<GtkTargetList>?): GdkAtom?

@CCall("knifunptr_libgtk34564_gtk_drag_dest_get_target_list")
external fun gtk_drag_dest_get_target_list(widget: CValuesRef<GtkWidget>?): CPointer<GtkTargetList>?

@CCall("knifunptr_libgtk34565_gtk_drag_dest_set_target_list")
external fun gtk_drag_dest_set_target_list(widget: CValuesRef<GtkWidget>?, target_list: CValuesRef<GtkTargetList>?): Unit

@CCall("knifunptr_libgtk34566_gtk_drag_dest_add_text_targets")
external fun gtk_drag_dest_add_text_targets(widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk34567_gtk_drag_dest_add_image_targets")
external fun gtk_drag_dest_add_image_targets(widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk34568_gtk_drag_dest_add_uri_targets")
external fun gtk_drag_dest_add_uri_targets(widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk34569_gtk_drag_dest_set_track_motion")
external fun gtk_drag_dest_set_track_motion(widget: CValuesRef<GtkWidget>?, track_motion: gboolean): Unit

@CCall("knifunptr_libgtk34570_gtk_drag_dest_get_track_motion")
external fun gtk_drag_dest_get_track_motion(widget: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk34571_gtk_drag_source_set")
external fun gtk_drag_source_set(widget: CValuesRef<GtkWidget>?, start_button_mask: GdkModifierType, targets: CValuesRef<GtkTargetEntry>?, n_targets: gint, actions: GdkDragAction): Unit

@CCall("knifunptr_libgtk34572_gtk_drag_source_unset")
external fun gtk_drag_source_unset(widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk34573_gtk_drag_source_get_target_list")
external fun gtk_drag_source_get_target_list(widget: CValuesRef<GtkWidget>?): CPointer<GtkTargetList>?

@CCall("knifunptr_libgtk34574_gtk_drag_source_set_target_list")
external fun gtk_drag_source_set_target_list(widget: CValuesRef<GtkWidget>?, target_list: CValuesRef<GtkTargetList>?): Unit

@CCall("knifunptr_libgtk34575_gtk_drag_source_add_text_targets")
external fun gtk_drag_source_add_text_targets(widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk34576_gtk_drag_source_add_image_targets")
external fun gtk_drag_source_add_image_targets(widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk34577_gtk_drag_source_add_uri_targets")
external fun gtk_drag_source_add_uri_targets(widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk34578_gtk_drag_source_set_icon_pixbuf")
external fun gtk_drag_source_set_icon_pixbuf(widget: CValuesRef<GtkWidget>?, pixbuf: CValuesRef<GdkPixbuf>?): Unit

@CCall("knifunptr_libgtk34579_gtk_drag_source_set_icon_stock")
external fun gtk_drag_source_set_icon_stock(widget: CValuesRef<GtkWidget>?, @CCall.CString stock_id: String?): Unit

@CCall("knifunptr_libgtk34580_gtk_drag_source_set_icon_name")
external fun gtk_drag_source_set_icon_name(widget: CValuesRef<GtkWidget>?, @CCall.CString icon_name: String?): Unit

@CCall("knifunptr_libgtk34581_gtk_drag_source_set_icon_gicon")
external fun gtk_drag_source_set_icon_gicon(widget: CValuesRef<GtkWidget>?, icon: CValuesRef<GIcon>?): Unit

@CCall("knifunptr_libgtk34582_gtk_drawing_area_get_type")
external fun gtk_drawing_area_get_type(): GType

@CCall("knifunptr_libgtk34583_gtk_drawing_area_new")
external fun gtk_drawing_area_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34584_gtk_event_box_get_type")
external fun gtk_event_box_get_type(): GType

@CCall("knifunptr_libgtk34585_gtk_event_box_new")
external fun gtk_event_box_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34586_gtk_event_box_get_visible_window")
external fun gtk_event_box_get_visible_window(event_box: CValuesRef<GtkEventBox>?): gboolean

@CCall("knifunptr_libgtk34587_gtk_event_box_set_visible_window")
external fun gtk_event_box_set_visible_window(event_box: CValuesRef<GtkEventBox>?, visible_window: gboolean): Unit

@CCall("knifunptr_libgtk34588_gtk_event_box_get_above_child")
external fun gtk_event_box_get_above_child(event_box: CValuesRef<GtkEventBox>?): gboolean

@CCall("knifunptr_libgtk34589_gtk_event_box_set_above_child")
external fun gtk_event_box_set_above_child(event_box: CValuesRef<GtkEventBox>?, above_child: gboolean): Unit

@CCall("knifunptr_libgtk34590_gtk_event_controller_get_type")
external fun gtk_event_controller_get_type(): GType

@CCall("knifunptr_libgtk34591_gtk_event_controller_get_widget")
external fun gtk_event_controller_get_widget(controller: CValuesRef<GtkEventController>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34592_gtk_event_controller_handle_event")
external fun gtk_event_controller_handle_event(controller: CValuesRef<GtkEventController>?, event: CValuesRef<GdkEvent>?): gboolean

@CCall("knifunptr_libgtk34593_gtk_event_controller_reset")
external fun gtk_event_controller_reset(controller: CValuesRef<GtkEventController>?): Unit

@CCall("knifunptr_libgtk34594_gtk_event_controller_get_propagation_phase")
external fun gtk_event_controller_get_propagation_phase(controller: CValuesRef<GtkEventController>?): GtkPropagationPhase

@CCall("knifunptr_libgtk34595_gtk_event_controller_set_propagation_phase")
external fun gtk_event_controller_set_propagation_phase(controller: CValuesRef<GtkEventController>?, phase: GtkPropagationPhase): Unit

@CCall("knifunptr_libgtk34596_gtk_expander_get_type")
external fun gtk_expander_get_type(): GType

@CCall("knifunptr_libgtk34597_gtk_expander_new")
external fun gtk_expander_new(@CCall.CString label: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34598_gtk_expander_new_with_mnemonic")
external fun gtk_expander_new_with_mnemonic(@CCall.CString label: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34599_gtk_expander_set_expanded")
external fun gtk_expander_set_expanded(expander: CValuesRef<GtkExpander>?, expanded: gboolean): Unit

@CCall("knifunptr_libgtk34600_gtk_expander_get_expanded")
external fun gtk_expander_get_expanded(expander: CValuesRef<GtkExpander>?): gboolean

@CCall("knifunptr_libgtk34601_gtk_expander_set_spacing")
external fun gtk_expander_set_spacing(expander: CValuesRef<GtkExpander>?, spacing: gint): Unit

@CCall("knifunptr_libgtk34602_gtk_expander_get_spacing")
external fun gtk_expander_get_spacing(expander: CValuesRef<GtkExpander>?): gint

@CCall("knifunptr_libgtk34603_gtk_expander_set_label")
external fun gtk_expander_set_label(expander: CValuesRef<GtkExpander>?, @CCall.CString label: String?): Unit

@CCall("knifunptr_libgtk34604_gtk_expander_get_label")
external fun gtk_expander_get_label(expander: CValuesRef<GtkExpander>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk34605_gtk_expander_set_use_underline")
external fun gtk_expander_set_use_underline(expander: CValuesRef<GtkExpander>?, use_underline: gboolean): Unit

@CCall("knifunptr_libgtk34606_gtk_expander_get_use_underline")
external fun gtk_expander_get_use_underline(expander: CValuesRef<GtkExpander>?): gboolean

@CCall("knifunptr_libgtk34607_gtk_expander_set_use_markup")
external fun gtk_expander_set_use_markup(expander: CValuesRef<GtkExpander>?, use_markup: gboolean): Unit

@CCall("knifunptr_libgtk34608_gtk_expander_get_use_markup")
external fun gtk_expander_get_use_markup(expander: CValuesRef<GtkExpander>?): gboolean

@CCall("knifunptr_libgtk34609_gtk_expander_set_label_widget")
external fun gtk_expander_set_label_widget(expander: CValuesRef<GtkExpander>?, label_widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk34610_gtk_expander_get_label_widget")
external fun gtk_expander_get_label_widget(expander: CValuesRef<GtkExpander>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34611_gtk_expander_set_label_fill")
external fun gtk_expander_set_label_fill(expander: CValuesRef<GtkExpander>?, label_fill: gboolean): Unit

@CCall("knifunptr_libgtk34612_gtk_expander_get_label_fill")
external fun gtk_expander_get_label_fill(expander: CValuesRef<GtkExpander>?): gboolean

@CCall("knifunptr_libgtk34613_gtk_expander_set_resize_toplevel")
external fun gtk_expander_set_resize_toplevel(expander: CValuesRef<GtkExpander>?, resize_toplevel: gboolean): Unit

@CCall("knifunptr_libgtk34614_gtk_expander_get_resize_toplevel")
external fun gtk_expander_get_resize_toplevel(expander: CValuesRef<GtkExpander>?): gboolean

@CCall("knifunptr_libgtk34615_gtk_fixed_get_type")
external fun gtk_fixed_get_type(): GType

@CCall("knifunptr_libgtk34616_gtk_fixed_new")
external fun gtk_fixed_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34617_gtk_fixed_put")
external fun gtk_fixed_put(fixed: CValuesRef<GtkFixed>?, widget: CValuesRef<GtkWidget>?, x: gint, y: gint): Unit

@CCall("knifunptr_libgtk34618_gtk_fixed_move")
external fun gtk_fixed_move(fixed: CValuesRef<GtkFixed>?, widget: CValuesRef<GtkWidget>?, x: gint, y: gint): Unit

@CCall("knifunptr_libgtk34619_gtk_file_filter_get_type")
external fun gtk_file_filter_get_type(): GType

@CCall("knifunptr_libgtk34620_gtk_file_filter_new")
external fun gtk_file_filter_new(): CPointer<GtkFileFilter>?

@CCall("knifunptr_libgtk34621_gtk_file_filter_set_name")
external fun gtk_file_filter_set_name(filter: CValuesRef<GtkFileFilter>?, @CCall.CString name: String?): Unit

@CCall("knifunptr_libgtk34622_gtk_file_filter_get_name")
external fun gtk_file_filter_get_name(filter: CValuesRef<GtkFileFilter>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk34623_gtk_file_filter_add_mime_type")
external fun gtk_file_filter_add_mime_type(filter: CValuesRef<GtkFileFilter>?, @CCall.CString mime_type: String?): Unit

@CCall("knifunptr_libgtk34624_gtk_file_filter_add_pattern")
external fun gtk_file_filter_add_pattern(filter: CValuesRef<GtkFileFilter>?, @CCall.CString pattern: String?): Unit

@CCall("knifunptr_libgtk34625_gtk_file_filter_add_pixbuf_formats")
external fun gtk_file_filter_add_pixbuf_formats(filter: CValuesRef<GtkFileFilter>?): Unit

@CCall("knifunptr_libgtk34626_gtk_file_filter_add_custom")
external fun gtk_file_filter_add_custom(filter: CValuesRef<GtkFileFilter>?, needed: GtkFileFilterFlags, func: GtkFileFilterFunc?, data: gpointer?, notify: GDestroyNotify?): Unit

@CCall("knifunptr_libgtk34627_gtk_file_filter_get_needed")
external fun gtk_file_filter_get_needed(filter: CValuesRef<GtkFileFilter>?): GtkFileFilterFlags

@CCall("knifunptr_libgtk34628_gtk_file_filter_filter")
external fun gtk_file_filter_filter(filter: CValuesRef<GtkFileFilter>?, filter_info: CValuesRef<GtkFileFilterInfo>?): gboolean

@CCall("knifunptr_libgtk34629_gtk_file_filter_to_gvariant")
external fun gtk_file_filter_to_gvariant(filter: CValuesRef<GtkFileFilter>?): CPointer<GVariant>?

@CCall("knifunptr_libgtk34630_gtk_file_filter_new_from_gvariant")
external fun gtk_file_filter_new_from_gvariant(variant: CValuesRef<GVariant>?): CPointer<GtkFileFilter>?

@CCall("knifunptr_libgtk34631_gtk_file_chooser_get_type")
external fun gtk_file_chooser_get_type(): GType

@CCall("knifunptr_libgtk34632_gtk_file_chooser_error_quark")
external fun gtk_file_chooser_error_quark(): GQuark

@CCall("knifunptr_libgtk34633_gtk_file_chooser_set_action")
external fun gtk_file_chooser_set_action(chooser: CValuesRef<GtkFileChooser>?, action: GtkFileChooserAction): Unit

@CCall("knifunptr_libgtk34634_gtk_file_chooser_get_action")
external fun gtk_file_chooser_get_action(chooser: CValuesRef<GtkFileChooser>?): GtkFileChooserAction

@CCall("knifunptr_libgtk34635_gtk_file_chooser_set_local_only")
external fun gtk_file_chooser_set_local_only(chooser: CValuesRef<GtkFileChooser>?, local_only: gboolean): Unit

@CCall("knifunptr_libgtk34636_gtk_file_chooser_get_local_only")
external fun gtk_file_chooser_get_local_only(chooser: CValuesRef<GtkFileChooser>?): gboolean

@CCall("knifunptr_libgtk34637_gtk_file_chooser_set_select_multiple")
external fun gtk_file_chooser_set_select_multiple(chooser: CValuesRef<GtkFileChooser>?, select_multiple: gboolean): Unit

@CCall("knifunptr_libgtk34638_gtk_file_chooser_get_select_multiple")
external fun gtk_file_chooser_get_select_multiple(chooser: CValuesRef<GtkFileChooser>?): gboolean

@CCall("knifunptr_libgtk34639_gtk_file_chooser_set_show_hidden")
external fun gtk_file_chooser_set_show_hidden(chooser: CValuesRef<GtkFileChooser>?, show_hidden: gboolean): Unit

@CCall("knifunptr_libgtk34640_gtk_file_chooser_get_show_hidden")
external fun gtk_file_chooser_get_show_hidden(chooser: CValuesRef<GtkFileChooser>?): gboolean

@CCall("knifunptr_libgtk34641_gtk_file_chooser_set_do_overwrite_confirmation")
external fun gtk_file_chooser_set_do_overwrite_confirmation(chooser: CValuesRef<GtkFileChooser>?, do_overwrite_confirmation: gboolean): Unit

@CCall("knifunptr_libgtk34642_gtk_file_chooser_get_do_overwrite_confirmation")
external fun gtk_file_chooser_get_do_overwrite_confirmation(chooser: CValuesRef<GtkFileChooser>?): gboolean

@CCall("knifunptr_libgtk34643_gtk_file_chooser_set_create_folders")
external fun gtk_file_chooser_set_create_folders(chooser: CValuesRef<GtkFileChooser>?, create_folders: gboolean): Unit

@CCall("knifunptr_libgtk34644_gtk_file_chooser_get_create_folders")
external fun gtk_file_chooser_get_create_folders(chooser: CValuesRef<GtkFileChooser>?): gboolean

@CCall("knifunptr_libgtk34645_gtk_file_chooser_set_current_name")
external fun gtk_file_chooser_set_current_name(chooser: CValuesRef<GtkFileChooser>?, @CCall.CString name: String?): Unit

@CCall("knifunptr_libgtk34646_gtk_file_chooser_get_current_name")
external fun gtk_file_chooser_get_current_name(chooser: CValuesRef<GtkFileChooser>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk34647_gtk_file_chooser_get_filename")
external fun gtk_file_chooser_get_filename(chooser: CValuesRef<GtkFileChooser>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk34648_gtk_file_chooser_set_filename")
external fun gtk_file_chooser_set_filename(chooser: CValuesRef<GtkFileChooser>?, @CCall.CString filename: String?): gboolean

@CCall("knifunptr_libgtk34649_gtk_file_chooser_select_filename")
external fun gtk_file_chooser_select_filename(chooser: CValuesRef<GtkFileChooser>?, @CCall.CString filename: String?): gboolean

@CCall("knifunptr_libgtk34650_gtk_file_chooser_unselect_filename")
external fun gtk_file_chooser_unselect_filename(chooser: CValuesRef<GtkFileChooser>?, @CCall.CString filename: String?): Unit

@CCall("knifunptr_libgtk34651_gtk_file_chooser_select_all")
external fun gtk_file_chooser_select_all(chooser: CValuesRef<GtkFileChooser>?): Unit

@CCall("knifunptr_libgtk34652_gtk_file_chooser_unselect_all")
external fun gtk_file_chooser_unselect_all(chooser: CValuesRef<GtkFileChooser>?): Unit

@CCall("knifunptr_libgtk34653_gtk_file_chooser_get_filenames")
external fun gtk_file_chooser_get_filenames(chooser: CValuesRef<GtkFileChooser>?): CPointer<GSList>?

@CCall("knifunptr_libgtk34654_gtk_file_chooser_set_current_folder")
external fun gtk_file_chooser_set_current_folder(chooser: CValuesRef<GtkFileChooser>?, @CCall.CString filename: String?): gboolean

@CCall("knifunptr_libgtk34655_gtk_file_chooser_get_current_folder")
external fun gtk_file_chooser_get_current_folder(chooser: CValuesRef<GtkFileChooser>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk34656_gtk_file_chooser_get_uri")
external fun gtk_file_chooser_get_uri(chooser: CValuesRef<GtkFileChooser>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk34657_gtk_file_chooser_set_uri")
external fun gtk_file_chooser_set_uri(chooser: CValuesRef<GtkFileChooser>?, @CCall.CString uri: String?): gboolean

@CCall("knifunptr_libgtk34658_gtk_file_chooser_select_uri")
external fun gtk_file_chooser_select_uri(chooser: CValuesRef<GtkFileChooser>?, @CCall.CString uri: String?): gboolean

@CCall("knifunptr_libgtk34659_gtk_file_chooser_unselect_uri")
external fun gtk_file_chooser_unselect_uri(chooser: CValuesRef<GtkFileChooser>?, @CCall.CString uri: String?): Unit

@CCall("knifunptr_libgtk34660_gtk_file_chooser_get_uris")
external fun gtk_file_chooser_get_uris(chooser: CValuesRef<GtkFileChooser>?): CPointer<GSList>?

@CCall("knifunptr_libgtk34661_gtk_file_chooser_set_current_folder_uri")
external fun gtk_file_chooser_set_current_folder_uri(chooser: CValuesRef<GtkFileChooser>?, @CCall.CString uri: String?): gboolean

@CCall("knifunptr_libgtk34662_gtk_file_chooser_get_current_folder_uri")
external fun gtk_file_chooser_get_current_folder_uri(chooser: CValuesRef<GtkFileChooser>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk34663_gtk_file_chooser_get_file")
external fun gtk_file_chooser_get_file(chooser: CValuesRef<GtkFileChooser>?): CPointer<GFile>?

@CCall("knifunptr_libgtk34664_gtk_file_chooser_set_file")
external fun gtk_file_chooser_set_file(chooser: CValuesRef<GtkFileChooser>?, file: CValuesRef<GFile>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk34665_gtk_file_chooser_select_file")
external fun gtk_file_chooser_select_file(chooser: CValuesRef<GtkFileChooser>?, file: CValuesRef<GFile>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk34666_gtk_file_chooser_unselect_file")
external fun gtk_file_chooser_unselect_file(chooser: CValuesRef<GtkFileChooser>?, file: CValuesRef<GFile>?): Unit

@CCall("knifunptr_libgtk34667_gtk_file_chooser_get_files")
external fun gtk_file_chooser_get_files(chooser: CValuesRef<GtkFileChooser>?): CPointer<GSList>?

@CCall("knifunptr_libgtk34668_gtk_file_chooser_set_current_folder_file")
external fun gtk_file_chooser_set_current_folder_file(chooser: CValuesRef<GtkFileChooser>?, file: CValuesRef<GFile>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk34669_gtk_file_chooser_get_current_folder_file")
external fun gtk_file_chooser_get_current_folder_file(chooser: CValuesRef<GtkFileChooser>?): CPointer<GFile>?

@CCall("knifunptr_libgtk34670_gtk_file_chooser_set_preview_widget")
external fun gtk_file_chooser_set_preview_widget(chooser: CValuesRef<GtkFileChooser>?, preview_widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk34671_gtk_file_chooser_get_preview_widget")
external fun gtk_file_chooser_get_preview_widget(chooser: CValuesRef<GtkFileChooser>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34672_gtk_file_chooser_set_preview_widget_active")
external fun gtk_file_chooser_set_preview_widget_active(chooser: CValuesRef<GtkFileChooser>?, active: gboolean): Unit

@CCall("knifunptr_libgtk34673_gtk_file_chooser_get_preview_widget_active")
external fun gtk_file_chooser_get_preview_widget_active(chooser: CValuesRef<GtkFileChooser>?): gboolean

@CCall("knifunptr_libgtk34674_gtk_file_chooser_set_use_preview_label")
external fun gtk_file_chooser_set_use_preview_label(chooser: CValuesRef<GtkFileChooser>?, use_label: gboolean): Unit

@CCall("knifunptr_libgtk34675_gtk_file_chooser_get_use_preview_label")
external fun gtk_file_chooser_get_use_preview_label(chooser: CValuesRef<GtkFileChooser>?): gboolean

@CCall("knifunptr_libgtk34676_gtk_file_chooser_get_preview_filename")
external fun gtk_file_chooser_get_preview_filename(chooser: CValuesRef<GtkFileChooser>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk34677_gtk_file_chooser_get_preview_uri")
external fun gtk_file_chooser_get_preview_uri(chooser: CValuesRef<GtkFileChooser>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk34678_gtk_file_chooser_get_preview_file")
external fun gtk_file_chooser_get_preview_file(chooser: CValuesRef<GtkFileChooser>?): CPointer<GFile>?

@CCall("knifunptr_libgtk34679_gtk_file_chooser_set_extra_widget")
external fun gtk_file_chooser_set_extra_widget(chooser: CValuesRef<GtkFileChooser>?, extra_widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk34680_gtk_file_chooser_get_extra_widget")
external fun gtk_file_chooser_get_extra_widget(chooser: CValuesRef<GtkFileChooser>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34681_gtk_file_chooser_add_filter")
external fun gtk_file_chooser_add_filter(chooser: CValuesRef<GtkFileChooser>?, filter: CValuesRef<GtkFileFilter>?): Unit

@CCall("knifunptr_libgtk34682_gtk_file_chooser_remove_filter")
external fun gtk_file_chooser_remove_filter(chooser: CValuesRef<GtkFileChooser>?, filter: CValuesRef<GtkFileFilter>?): Unit

@CCall("knifunptr_libgtk34683_gtk_file_chooser_list_filters")
external fun gtk_file_chooser_list_filters(chooser: CValuesRef<GtkFileChooser>?): CPointer<GSList>?

@CCall("knifunptr_libgtk34684_gtk_file_chooser_set_filter")
external fun gtk_file_chooser_set_filter(chooser: CValuesRef<GtkFileChooser>?, filter: CValuesRef<GtkFileFilter>?): Unit

@CCall("knifunptr_libgtk34685_gtk_file_chooser_get_filter")
external fun gtk_file_chooser_get_filter(chooser: CValuesRef<GtkFileChooser>?): CPointer<GtkFileFilter>?

@CCall("knifunptr_libgtk34686_gtk_file_chooser_add_shortcut_folder")
external fun gtk_file_chooser_add_shortcut_folder(chooser: CValuesRef<GtkFileChooser>?, @CCall.CString folder: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk34687_gtk_file_chooser_remove_shortcut_folder")
external fun gtk_file_chooser_remove_shortcut_folder(chooser: CValuesRef<GtkFileChooser>?, @CCall.CString folder: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk34688_gtk_file_chooser_list_shortcut_folders")
external fun gtk_file_chooser_list_shortcut_folders(chooser: CValuesRef<GtkFileChooser>?): CPointer<GSList>?

@CCall("knifunptr_libgtk34689_gtk_file_chooser_add_shortcut_folder_uri")
external fun gtk_file_chooser_add_shortcut_folder_uri(chooser: CValuesRef<GtkFileChooser>?, @CCall.CString uri: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk34690_gtk_file_chooser_remove_shortcut_folder_uri")
external fun gtk_file_chooser_remove_shortcut_folder_uri(chooser: CValuesRef<GtkFileChooser>?, @CCall.CString uri: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk34691_gtk_file_chooser_list_shortcut_folder_uris")
external fun gtk_file_chooser_list_shortcut_folder_uris(chooser: CValuesRef<GtkFileChooser>?): CPointer<GSList>?

@CCall("knifunptr_libgtk34692_gtk_file_chooser_add_choice")
external fun gtk_file_chooser_add_choice(chooser: CValuesRef<GtkFileChooser>?, @CCall.CString id: String?, @CCall.CString label: String?, options: CValuesRef<CPointerVar<ByteVar>>?, option_labels: CValuesRef<CPointerVar<ByteVar>>?): Unit

@CCall("knifunptr_libgtk34693_gtk_file_chooser_remove_choice")
external fun gtk_file_chooser_remove_choice(chooser: CValuesRef<GtkFileChooser>?, @CCall.CString id: String?): Unit

@CCall("knifunptr_libgtk34694_gtk_file_chooser_set_choice")
external fun gtk_file_chooser_set_choice(chooser: CValuesRef<GtkFileChooser>?, @CCall.CString id: String?, @CCall.CString option: String?): Unit

@CCall("knifunptr_libgtk34695_gtk_file_chooser_get_choice")
external fun gtk_file_chooser_get_choice(chooser: CValuesRef<GtkFileChooser>?, @CCall.CString id: String?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk34696_gtk_file_chooser_button_get_type")
external fun gtk_file_chooser_button_get_type(): GType

@CCall("knifunptr_libgtk34697_gtk_file_chooser_button_new")
external fun gtk_file_chooser_button_new(@CCall.CString title: String?, action: GtkFileChooserAction): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34698_gtk_file_chooser_button_new_with_dialog")
external fun gtk_file_chooser_button_new_with_dialog(dialog: CValuesRef<GtkWidget>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34699_gtk_file_chooser_button_get_title")
external fun gtk_file_chooser_button_get_title(button: CValuesRef<GtkFileChooserButton>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk34700_gtk_file_chooser_button_set_title")
external fun gtk_file_chooser_button_set_title(button: CValuesRef<GtkFileChooserButton>?, @CCall.CString title: String?): Unit

@CCall("knifunptr_libgtk34701_gtk_file_chooser_button_get_width_chars")
external fun gtk_file_chooser_button_get_width_chars(button: CValuesRef<GtkFileChooserButton>?): gint

@CCall("knifunptr_libgtk34702_gtk_file_chooser_button_set_width_chars")
external fun gtk_file_chooser_button_set_width_chars(button: CValuesRef<GtkFileChooserButton>?, n_chars: gint): Unit

@CCall("knifunptr_libgtk34703_gtk_file_chooser_button_get_focus_on_click")
external fun gtk_file_chooser_button_get_focus_on_click(button: CValuesRef<GtkFileChooserButton>?): gboolean

@CCall("knifunptr_libgtk34704_gtk_file_chooser_button_set_focus_on_click")
external fun gtk_file_chooser_button_set_focus_on_click(button: CValuesRef<GtkFileChooserButton>?, focus_on_click: gboolean): Unit

@CCall("knifunptr_libgtk34705_gtk_file_chooser_dialog_get_type")
external fun gtk_file_chooser_dialog_get_type(): GType

@CCall("knifunptr_libgtk34706_gtk_file_chooser_dialog_new")
external fun gtk_file_chooser_dialog_new(@CCall.CString title: String?, parent: CValuesRef<GtkWindow>?, action: GtkFileChooserAction, @CCall.CString first_button_text: String?, vararg variadicArguments: Any?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34707_gtk_native_dialog_get_type")
external fun gtk_native_dialog_get_type(): GType

@CCall("knifunptr_libgtk34708_glib_autoptr_cleanup_GtkNativeDialog")
external fun glib_autoptr_cleanup_GtkNativeDialog(_ptr: CValuesRef<CPointerVar<GtkNativeDialog>>?): Unit

@CCall("knifunptr_libgtk34709_GTK_NATIVE_DIALOG")
external fun GTK_NATIVE_DIALOG(ptr: gpointer?): CPointer<GtkNativeDialog>?

@CCall("knifunptr_libgtk34710_GTK_NATIVE_DIALOG_CLASS")
external fun GTK_NATIVE_DIALOG_CLASS(ptr: gpointer?): CPointer<GtkNativeDialogClass>?

@CCall("knifunptr_libgtk34711_GTK_IS_NATIVE_DIALOG")
external fun GTK_IS_NATIVE_DIALOG(ptr: gpointer?): gboolean

@CCall("knifunptr_libgtk34712_GTK_IS_NATIVE_DIALOG_CLASS")
external fun GTK_IS_NATIVE_DIALOG_CLASS(ptr: gpointer?): gboolean

@CCall("knifunptr_libgtk34713_GTK_NATIVE_DIALOG_GET_CLASS")
external fun GTK_NATIVE_DIALOG_GET_CLASS(ptr: gpointer?): CPointer<GtkNativeDialogClass>?

@CCall("knifunptr_libgtk34714_gtk_native_dialog_show")
external fun gtk_native_dialog_show(self: CValuesRef<GtkNativeDialog>?): Unit

@CCall("knifunptr_libgtk34715_gtk_native_dialog_hide")
external fun gtk_native_dialog_hide(self: CValuesRef<GtkNativeDialog>?): Unit

@CCall("knifunptr_libgtk34716_gtk_native_dialog_destroy")
external fun gtk_native_dialog_destroy(self: CValuesRef<GtkNativeDialog>?): Unit

@CCall("knifunptr_libgtk34717_gtk_native_dialog_get_visible")
external fun gtk_native_dialog_get_visible(self: CValuesRef<GtkNativeDialog>?): gboolean

@CCall("knifunptr_libgtk34718_gtk_native_dialog_set_modal")
external fun gtk_native_dialog_set_modal(self: CValuesRef<GtkNativeDialog>?, modal: gboolean): Unit

@CCall("knifunptr_libgtk34719_gtk_native_dialog_get_modal")
external fun gtk_native_dialog_get_modal(self: CValuesRef<GtkNativeDialog>?): gboolean

@CCall("knifunptr_libgtk34720_gtk_native_dialog_set_title")
external fun gtk_native_dialog_set_title(self: CValuesRef<GtkNativeDialog>?, @CCall.CString title: String?): Unit

@CCall("knifunptr_libgtk34721_gtk_native_dialog_get_title")
external fun gtk_native_dialog_get_title(self: CValuesRef<GtkNativeDialog>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk34722_gtk_native_dialog_set_transient_for")
external fun gtk_native_dialog_set_transient_for(self: CValuesRef<GtkNativeDialog>?, parent: CValuesRef<GtkWindow>?): Unit

@CCall("knifunptr_libgtk34723_gtk_native_dialog_get_transient_for")
external fun gtk_native_dialog_get_transient_for(self: CValuesRef<GtkNativeDialog>?): CPointer<GtkWindow>?

@CCall("knifunptr_libgtk34724_gtk_native_dialog_run")
external fun gtk_native_dialog_run(self: CValuesRef<GtkNativeDialog>?): gint

@CCall("knifunptr_libgtk34725_gtk_file_chooser_native_get_type")
external fun gtk_file_chooser_native_get_type(): GType

@CCall("knifunptr_libgtk34726_glib_autoptr_cleanup_GtkFileChooserNative")
external fun glib_autoptr_cleanup_GtkFileChooserNative(_ptr: CValuesRef<CPointerVar<GtkFileChooserNative>>?): Unit

@CCall("knifunptr_libgtk34727_GTK_FILE_CHOOSER_NATIVE")
external fun GTK_FILE_CHOOSER_NATIVE(ptr: gpointer?): CPointer<GtkFileChooserNative>?

@CCall("knifunptr_libgtk34728_GTK_IS_FILE_CHOOSER_NATIVE")
external fun GTK_IS_FILE_CHOOSER_NATIVE(ptr: gpointer?): gboolean

@CCall("knifunptr_libgtk34729_gtk_file_chooser_native_new")
external fun gtk_file_chooser_native_new(@CCall.CString title: String?, parent: CValuesRef<GtkWindow>?, action: GtkFileChooserAction, @CCall.CString accept_label: String?, @CCall.CString cancel_label: String?): CPointer<GtkFileChooserNative>?

@CCall("knifunptr_libgtk34730_gtk_file_chooser_native_get_accept_label")
external fun gtk_file_chooser_native_get_accept_label(self: CValuesRef<GtkFileChooserNative>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk34731_gtk_file_chooser_native_set_accept_label")
external fun gtk_file_chooser_native_set_accept_label(self: CValuesRef<GtkFileChooserNative>?, @CCall.CString accept_label: String?): Unit

@CCall("knifunptr_libgtk34732_gtk_file_chooser_native_get_cancel_label")
external fun gtk_file_chooser_native_get_cancel_label(self: CValuesRef<GtkFileChooserNative>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk34733_gtk_file_chooser_native_set_cancel_label")
external fun gtk_file_chooser_native_set_cancel_label(self: CValuesRef<GtkFileChooserNative>?, @CCall.CString cancel_label: String?): Unit

@CCall("knifunptr_libgtk34734_gtk_file_chooser_widget_get_type")
external fun gtk_file_chooser_widget_get_type(): GType

@CCall("knifunptr_libgtk34735_gtk_file_chooser_widget_new")
external fun gtk_file_chooser_widget_new(action: GtkFileChooserAction): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34736_gtk_flow_box_child_get_type")
external fun gtk_flow_box_child_get_type(): GType

@CCall("knifunptr_libgtk34737_gtk_flow_box_child_new")
external fun gtk_flow_box_child_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34738_gtk_flow_box_child_get_index")
external fun gtk_flow_box_child_get_index(child: CValuesRef<GtkFlowBoxChild>?): gint

@CCall("knifunptr_libgtk34739_gtk_flow_box_child_is_selected")
external fun gtk_flow_box_child_is_selected(child: CValuesRef<GtkFlowBoxChild>?): gboolean

@CCall("knifunptr_libgtk34740_gtk_flow_box_child_changed")
external fun gtk_flow_box_child_changed(child: CValuesRef<GtkFlowBoxChild>?): Unit

@CCall("knifunptr_libgtk34741_gtk_flow_box_get_type")
external fun gtk_flow_box_get_type(): GType

@CCall("knifunptr_libgtk34742_gtk_flow_box_new")
external fun gtk_flow_box_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34743_gtk_flow_box_bind_model")
external fun gtk_flow_box_bind_model(box: CValuesRef<GtkFlowBox>?, model: CValuesRef<GListModel>?, create_widget_func: GtkFlowBoxCreateWidgetFunc?, user_data: gpointer?, user_data_free_func: GDestroyNotify?): Unit

@CCall("knifunptr_libgtk34744_gtk_flow_box_set_homogeneous")
external fun gtk_flow_box_set_homogeneous(box: CValuesRef<GtkFlowBox>?, homogeneous: gboolean): Unit

@CCall("knifunptr_libgtk34745_gtk_flow_box_get_homogeneous")
external fun gtk_flow_box_get_homogeneous(box: CValuesRef<GtkFlowBox>?): gboolean

@CCall("knifunptr_libgtk34746_gtk_flow_box_set_row_spacing")
external fun gtk_flow_box_set_row_spacing(box: CValuesRef<GtkFlowBox>?, spacing: guint): Unit

@CCall("knifunptr_libgtk34747_gtk_flow_box_get_row_spacing")
external fun gtk_flow_box_get_row_spacing(box: CValuesRef<GtkFlowBox>?): guint

@CCall("knifunptr_libgtk34748_gtk_flow_box_set_column_spacing")
external fun gtk_flow_box_set_column_spacing(box: CValuesRef<GtkFlowBox>?, spacing: guint): Unit

@CCall("knifunptr_libgtk34749_gtk_flow_box_get_column_spacing")
external fun gtk_flow_box_get_column_spacing(box: CValuesRef<GtkFlowBox>?): guint

@CCall("knifunptr_libgtk34750_gtk_flow_box_set_min_children_per_line")
external fun gtk_flow_box_set_min_children_per_line(box: CValuesRef<GtkFlowBox>?, n_children: guint): Unit

@CCall("knifunptr_libgtk34751_gtk_flow_box_get_min_children_per_line")
external fun gtk_flow_box_get_min_children_per_line(box: CValuesRef<GtkFlowBox>?): guint

@CCall("knifunptr_libgtk34752_gtk_flow_box_set_max_children_per_line")
external fun gtk_flow_box_set_max_children_per_line(box: CValuesRef<GtkFlowBox>?, n_children: guint): Unit

@CCall("knifunptr_libgtk34753_gtk_flow_box_get_max_children_per_line")
external fun gtk_flow_box_get_max_children_per_line(box: CValuesRef<GtkFlowBox>?): guint

@CCall("knifunptr_libgtk34754_gtk_flow_box_set_activate_on_single_click")
external fun gtk_flow_box_set_activate_on_single_click(box: CValuesRef<GtkFlowBox>?, single: gboolean): Unit

@CCall("knifunptr_libgtk34755_gtk_flow_box_get_activate_on_single_click")
external fun gtk_flow_box_get_activate_on_single_click(box: CValuesRef<GtkFlowBox>?): gboolean

@CCall("knifunptr_libgtk34756_gtk_flow_box_insert")
external fun gtk_flow_box_insert(box: CValuesRef<GtkFlowBox>?, widget: CValuesRef<GtkWidget>?, position: gint): Unit

@CCall("knifunptr_libgtk34757_gtk_flow_box_get_child_at_index")
external fun gtk_flow_box_get_child_at_index(box: CValuesRef<GtkFlowBox>?, idx: gint): CPointer<GtkFlowBoxChild>?

@CCall("knifunptr_libgtk34758_gtk_flow_box_get_child_at_pos")
external fun gtk_flow_box_get_child_at_pos(box: CValuesRef<GtkFlowBox>?, x: gint, y: gint): CPointer<GtkFlowBoxChild>?

@CCall("knifunptr_libgtk34759_gtk_flow_box_selected_foreach")
external fun gtk_flow_box_selected_foreach(box: CValuesRef<GtkFlowBox>?, func: GtkFlowBoxForeachFunc?, data: gpointer?): Unit

@CCall("knifunptr_libgtk34760_gtk_flow_box_get_selected_children")
external fun gtk_flow_box_get_selected_children(box: CValuesRef<GtkFlowBox>?): CPointer<GList>?

@CCall("knifunptr_libgtk34761_gtk_flow_box_select_child")
external fun gtk_flow_box_select_child(box: CValuesRef<GtkFlowBox>?, child: CValuesRef<GtkFlowBoxChild>?): Unit

@CCall("knifunptr_libgtk34762_gtk_flow_box_unselect_child")
external fun gtk_flow_box_unselect_child(box: CValuesRef<GtkFlowBox>?, child: CValuesRef<GtkFlowBoxChild>?): Unit

@CCall("knifunptr_libgtk34763_gtk_flow_box_select_all")
external fun gtk_flow_box_select_all(box: CValuesRef<GtkFlowBox>?): Unit

@CCall("knifunptr_libgtk34764_gtk_flow_box_unselect_all")
external fun gtk_flow_box_unselect_all(box: CValuesRef<GtkFlowBox>?): Unit

@CCall("knifunptr_libgtk34765_gtk_flow_box_set_selection_mode")
external fun gtk_flow_box_set_selection_mode(box: CValuesRef<GtkFlowBox>?, mode: GtkSelectionMode): Unit

@CCall("knifunptr_libgtk34766_gtk_flow_box_get_selection_mode")
external fun gtk_flow_box_get_selection_mode(box: CValuesRef<GtkFlowBox>?): GtkSelectionMode

@CCall("knifunptr_libgtk34767_gtk_flow_box_set_hadjustment")
external fun gtk_flow_box_set_hadjustment(box: CValuesRef<GtkFlowBox>?, adjustment: CValuesRef<GtkAdjustment>?): Unit

@CCall("knifunptr_libgtk34768_gtk_flow_box_set_vadjustment")
external fun gtk_flow_box_set_vadjustment(box: CValuesRef<GtkFlowBox>?, adjustment: CValuesRef<GtkAdjustment>?): Unit

@CCall("knifunptr_libgtk34769_gtk_flow_box_set_filter_func")
external fun gtk_flow_box_set_filter_func(box: CValuesRef<GtkFlowBox>?, filter_func: GtkFlowBoxFilterFunc?, user_data: gpointer?, destroy: GDestroyNotify?): Unit

@CCall("knifunptr_libgtk34770_gtk_flow_box_invalidate_filter")
external fun gtk_flow_box_invalidate_filter(box: CValuesRef<GtkFlowBox>?): Unit

@CCall("knifunptr_libgtk34771_gtk_flow_box_set_sort_func")
external fun gtk_flow_box_set_sort_func(box: CValuesRef<GtkFlowBox>?, sort_func: GtkFlowBoxSortFunc?, user_data: gpointer?, destroy: GDestroyNotify?): Unit

@CCall("knifunptr_libgtk34772_gtk_flow_box_invalidate_sort")
external fun gtk_flow_box_invalidate_sort(box: CValuesRef<GtkFlowBox>?): Unit

@CCall("knifunptr_libgtk34773_gtk_font_button_get_type")
external fun gtk_font_button_get_type(): GType

@CCall("knifunptr_libgtk34774_gtk_font_button_new")
external fun gtk_font_button_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34775_gtk_font_button_new_with_font")
external fun gtk_font_button_new_with_font(@CCall.CString fontname: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34776_gtk_font_button_get_title")
external fun gtk_font_button_get_title(font_button: CValuesRef<GtkFontButton>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk34777_gtk_font_button_set_title")
external fun gtk_font_button_set_title(font_button: CValuesRef<GtkFontButton>?, @CCall.CString title: String?): Unit

@CCall("knifunptr_libgtk34778_gtk_font_button_get_use_font")
external fun gtk_font_button_get_use_font(font_button: CValuesRef<GtkFontButton>?): gboolean

@CCall("knifunptr_libgtk34779_gtk_font_button_set_use_font")
external fun gtk_font_button_set_use_font(font_button: CValuesRef<GtkFontButton>?, use_font: gboolean): Unit

@CCall("knifunptr_libgtk34780_gtk_font_button_get_use_size")
external fun gtk_font_button_get_use_size(font_button: CValuesRef<GtkFontButton>?): gboolean

@CCall("knifunptr_libgtk34781_gtk_font_button_set_use_size")
external fun gtk_font_button_set_use_size(font_button: CValuesRef<GtkFontButton>?, use_size: gboolean): Unit

@CCall("knifunptr_libgtk34782_gtk_font_button_get_font_name")
external fun gtk_font_button_get_font_name(font_button: CValuesRef<GtkFontButton>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk34783_gtk_font_button_set_font_name")
external fun gtk_font_button_set_font_name(font_button: CValuesRef<GtkFontButton>?, @CCall.CString fontname: String?): gboolean

@CCall("knifunptr_libgtk34784_gtk_font_button_get_show_style")
external fun gtk_font_button_get_show_style(font_button: CValuesRef<GtkFontButton>?): gboolean

@CCall("knifunptr_libgtk34785_gtk_font_button_set_show_style")
external fun gtk_font_button_set_show_style(font_button: CValuesRef<GtkFontButton>?, show_style: gboolean): Unit

@CCall("knifunptr_libgtk34786_gtk_font_button_get_show_size")
external fun gtk_font_button_get_show_size(font_button: CValuesRef<GtkFontButton>?): gboolean

@CCall("knifunptr_libgtk34787_gtk_font_button_set_show_size")
external fun gtk_font_button_set_show_size(font_button: CValuesRef<GtkFontButton>?, show_size: gboolean): Unit

@CCall("knifunptr_libgtk34788_gtk_font_chooser_get_type")
external fun gtk_font_chooser_get_type(): GType

@CCall("knifunptr_libgtk34789_gtk_font_chooser_get_font_family")
external fun gtk_font_chooser_get_font_family(fontchooser: CValuesRef<GtkFontChooser>?): CPointer<PangoFontFamily>?

@CCall("knifunptr_libgtk34790_gtk_font_chooser_get_font_face")
external fun gtk_font_chooser_get_font_face(fontchooser: CValuesRef<GtkFontChooser>?): CPointer<PangoFontFace>?

@CCall("knifunptr_libgtk34791_gtk_font_chooser_get_font_size")
external fun gtk_font_chooser_get_font_size(fontchooser: CValuesRef<GtkFontChooser>?): gint

@CCall("knifunptr_libgtk34792_gtk_font_chooser_get_font_desc")
external fun gtk_font_chooser_get_font_desc(fontchooser: CValuesRef<GtkFontChooser>?): CPointer<PangoFontDescription>?

@CCall("knifunptr_libgtk34793_gtk_font_chooser_set_font_desc")
external fun gtk_font_chooser_set_font_desc(fontchooser: CValuesRef<GtkFontChooser>?, font_desc: CValuesRef<PangoFontDescription>?): Unit

@CCall("knifunptr_libgtk34794_gtk_font_chooser_get_font")
external fun gtk_font_chooser_get_font(fontchooser: CValuesRef<GtkFontChooser>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk34795_gtk_font_chooser_set_font")
external fun gtk_font_chooser_set_font(fontchooser: CValuesRef<GtkFontChooser>?, @CCall.CString fontname: String?): Unit

@CCall("knifunptr_libgtk34796_gtk_font_chooser_get_preview_text")
external fun gtk_font_chooser_get_preview_text(fontchooser: CValuesRef<GtkFontChooser>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk34797_gtk_font_chooser_set_preview_text")
external fun gtk_font_chooser_set_preview_text(fontchooser: CValuesRef<GtkFontChooser>?, @CCall.CString text: String?): Unit

@CCall("knifunptr_libgtk34798_gtk_font_chooser_get_show_preview_entry")
external fun gtk_font_chooser_get_show_preview_entry(fontchooser: CValuesRef<GtkFontChooser>?): gboolean

@CCall("knifunptr_libgtk34799_gtk_font_chooser_set_show_preview_entry")
external fun gtk_font_chooser_set_show_preview_entry(fontchooser: CValuesRef<GtkFontChooser>?, show_preview_entry: gboolean): Unit

@CCall("knifunptr_libgtk34800_gtk_font_chooser_set_filter_func")
external fun gtk_font_chooser_set_filter_func(fontchooser: CValuesRef<GtkFontChooser>?, filter: GtkFontFilterFunc?, user_data: gpointer?, destroy: GDestroyNotify?): Unit

@CCall("knifunptr_libgtk34801_gtk_font_chooser_set_font_map")
external fun gtk_font_chooser_set_font_map(fontchooser: CValuesRef<GtkFontChooser>?, fontmap: CValuesRef<PangoFontMap>?): Unit

@CCall("knifunptr_libgtk34802_gtk_font_chooser_get_font_map")
external fun gtk_font_chooser_get_font_map(fontchooser: CValuesRef<GtkFontChooser>?): CPointer<PangoFontMap>?

@CCall("knifunptr_libgtk34803_gtk_font_chooser_dialog_get_type")
external fun gtk_font_chooser_dialog_get_type(): GType

@CCall("knifunptr_libgtk34804_gtk_font_chooser_dialog_new")
external fun gtk_font_chooser_dialog_new(@CCall.CString title: String?, parent: CValuesRef<GtkWindow>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34805_gtk_font_chooser_widget_get_type")
external fun gtk_font_chooser_widget_get_type(): GType

@CCall("knifunptr_libgtk34806_gtk_font_chooser_widget_new")
external fun gtk_font_chooser_widget_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34807_gtk_gesture_get_type")
external fun gtk_gesture_get_type(): GType

@CCall("knifunptr_libgtk34808_gtk_gesture_get_device")
external fun gtk_gesture_get_device(gesture: CValuesRef<GtkGesture>?): CPointer<GdkDevice>?

@CCall("knifunptr_libgtk34809_gtk_gesture_set_state")
external fun gtk_gesture_set_state(gesture: CValuesRef<GtkGesture>?, state: GtkEventSequenceState): gboolean

@CCall("knifunptr_libgtk34810_gtk_gesture_get_sequence_state")
external fun gtk_gesture_get_sequence_state(gesture: CValuesRef<GtkGesture>?, sequence: CValuesRef<GdkEventSequence>?): GtkEventSequenceState

@CCall("knifunptr_libgtk34811_gtk_gesture_set_sequence_state")
external fun gtk_gesture_set_sequence_state(gesture: CValuesRef<GtkGesture>?, sequence: CValuesRef<GdkEventSequence>?, state: GtkEventSequenceState): gboolean

@CCall("knifunptr_libgtk34812_gtk_gesture_get_sequences")
external fun gtk_gesture_get_sequences(gesture: CValuesRef<GtkGesture>?): CPointer<GList>?

@CCall("knifunptr_libgtk34813_gtk_gesture_get_last_updated_sequence")
external fun gtk_gesture_get_last_updated_sequence(gesture: CValuesRef<GtkGesture>?): CPointer<GdkEventSequence>?

@CCall("knifunptr_libgtk34814_gtk_gesture_handles_sequence")
external fun gtk_gesture_handles_sequence(gesture: CValuesRef<GtkGesture>?, sequence: CValuesRef<GdkEventSequence>?): gboolean

@CCall("knifunptr_libgtk34815_gtk_gesture_get_last_event")
external fun gtk_gesture_get_last_event(gesture: CValuesRef<GtkGesture>?, sequence: CValuesRef<GdkEventSequence>?): CPointer<GdkEvent>?

@CCall("knifunptr_libgtk34816_gtk_gesture_get_point")
external fun gtk_gesture_get_point(gesture: CValuesRef<GtkGesture>?, sequence: CValuesRef<GdkEventSequence>?, x: CValuesRef<gdoubleVar>?, y: CValuesRef<gdoubleVar>?): gboolean

@CCall("knifunptr_libgtk34817_gtk_gesture_get_bounding_box")
external fun gtk_gesture_get_bounding_box(gesture: CValuesRef<GtkGesture>?, rect: CValuesRef<GdkRectangle>?): gboolean

@CCall("knifunptr_libgtk34818_gtk_gesture_get_bounding_box_center")
external fun gtk_gesture_get_bounding_box_center(gesture: CValuesRef<GtkGesture>?, x: CValuesRef<gdoubleVar>?, y: CValuesRef<gdoubleVar>?): gboolean

@CCall("knifunptr_libgtk34819_gtk_gesture_is_active")
external fun gtk_gesture_is_active(gesture: CValuesRef<GtkGesture>?): gboolean

@CCall("knifunptr_libgtk34820_gtk_gesture_is_recognized")
external fun gtk_gesture_is_recognized(gesture: CValuesRef<GtkGesture>?): gboolean

@CCall("knifunptr_libgtk34821_gtk_gesture_get_window")
external fun gtk_gesture_get_window(gesture: CValuesRef<GtkGesture>?): CPointer<GdkWindow>?

@CCall("knifunptr_libgtk34822_gtk_gesture_set_window")
external fun gtk_gesture_set_window(gesture: CValuesRef<GtkGesture>?, window: CValuesRef<GdkWindow>?): Unit

@CCall("knifunptr_libgtk34823_gtk_gesture_group")
external fun gtk_gesture_group(group_gesture: CValuesRef<GtkGesture>?, gesture: CValuesRef<GtkGesture>?): Unit

@CCall("knifunptr_libgtk34824_gtk_gesture_ungroup")
external fun gtk_gesture_ungroup(gesture: CValuesRef<GtkGesture>?): Unit

@CCall("knifunptr_libgtk34825_gtk_gesture_get_group")
external fun gtk_gesture_get_group(gesture: CValuesRef<GtkGesture>?): CPointer<GList>?

@CCall("knifunptr_libgtk34826_gtk_gesture_is_grouped_with")
external fun gtk_gesture_is_grouped_with(gesture: CValuesRef<GtkGesture>?, other: CValuesRef<GtkGesture>?): gboolean

@CCall("knifunptr_libgtk34827_gtk_gesture_single_get_type")
external fun gtk_gesture_single_get_type(): GType

@CCall("knifunptr_libgtk34828_gtk_gesture_single_get_touch_only")
external fun gtk_gesture_single_get_touch_only(gesture: CValuesRef<GtkGestureSingle>?): gboolean

@CCall("knifunptr_libgtk34829_gtk_gesture_single_set_touch_only")
external fun gtk_gesture_single_set_touch_only(gesture: CValuesRef<GtkGestureSingle>?, touch_only: gboolean): Unit

@CCall("knifunptr_libgtk34830_gtk_gesture_single_get_exclusive")
external fun gtk_gesture_single_get_exclusive(gesture: CValuesRef<GtkGestureSingle>?): gboolean

@CCall("knifunptr_libgtk34831_gtk_gesture_single_set_exclusive")
external fun gtk_gesture_single_set_exclusive(gesture: CValuesRef<GtkGestureSingle>?, exclusive: gboolean): Unit

@CCall("knifunptr_libgtk34832_gtk_gesture_single_get_button")
external fun gtk_gesture_single_get_button(gesture: CValuesRef<GtkGestureSingle>?): guint

@CCall("knifunptr_libgtk34833_gtk_gesture_single_set_button")
external fun gtk_gesture_single_set_button(gesture: CValuesRef<GtkGestureSingle>?, button: guint): Unit

@CCall("knifunptr_libgtk34834_gtk_gesture_single_get_current_button")
external fun gtk_gesture_single_get_current_button(gesture: CValuesRef<GtkGestureSingle>?): guint

@CCall("knifunptr_libgtk34835_gtk_gesture_single_get_current_sequence")
external fun gtk_gesture_single_get_current_sequence(gesture: CValuesRef<GtkGestureSingle>?): CPointer<GdkEventSequence>?

@CCall("knifunptr_libgtk34836_gtk_gesture_drag_get_type")
external fun gtk_gesture_drag_get_type(): GType

@CCall("knifunptr_libgtk34837_gtk_gesture_drag_new")
external fun gtk_gesture_drag_new(widget: CValuesRef<GtkWidget>?): CPointer<GtkGesture>?

@CCall("knifunptr_libgtk34838_gtk_gesture_drag_get_start_point")
external fun gtk_gesture_drag_get_start_point(gesture: CValuesRef<GtkGestureDrag>?, x: CValuesRef<gdoubleVar>?, y: CValuesRef<gdoubleVar>?): gboolean

@CCall("knifunptr_libgtk34839_gtk_gesture_drag_get_offset")
external fun gtk_gesture_drag_get_offset(gesture: CValuesRef<GtkGestureDrag>?, x: CValuesRef<gdoubleVar>?, y: CValuesRef<gdoubleVar>?): gboolean

@CCall("knifunptr_libgtk34840_gtk_gesture_long_press_get_type")
external fun gtk_gesture_long_press_get_type(): GType

@CCall("knifunptr_libgtk34841_gtk_gesture_long_press_new")
external fun gtk_gesture_long_press_new(widget: CValuesRef<GtkWidget>?): CPointer<GtkGesture>?

@CCall("knifunptr_libgtk34842_gtk_gesture_multi_press_get_type")
external fun gtk_gesture_multi_press_get_type(): GType

@CCall("knifunptr_libgtk34843_gtk_gesture_multi_press_new")
external fun gtk_gesture_multi_press_new(widget: CValuesRef<GtkWidget>?): CPointer<GtkGesture>?

@CCall("knifunptr_libgtk34844_gtk_gesture_multi_press_set_area")
external fun gtk_gesture_multi_press_set_area(gesture: CValuesRef<GtkGestureMultiPress>?, rect: CValuesRef<GdkRectangle>?): Unit

@CCall("knifunptr_libgtk34845_gtk_gesture_multi_press_get_area")
external fun gtk_gesture_multi_press_get_area(gesture: CValuesRef<GtkGestureMultiPress>?, rect: CValuesRef<GdkRectangle>?): gboolean

@CCall("knifunptr_libgtk34846_gtk_gesture_pan_get_type")
external fun gtk_gesture_pan_get_type(): GType

@CCall("knifunptr_libgtk34847_gtk_gesture_pan_new")
external fun gtk_gesture_pan_new(widget: CValuesRef<GtkWidget>?, orientation: GtkOrientation): CPointer<GtkGesture>?

@CCall("knifunptr_libgtk34848_gtk_gesture_pan_get_orientation")
external fun gtk_gesture_pan_get_orientation(gesture: CValuesRef<GtkGesturePan>?): GtkOrientation

@CCall("knifunptr_libgtk34849_gtk_gesture_pan_set_orientation")
external fun gtk_gesture_pan_set_orientation(gesture: CValuesRef<GtkGesturePan>?, orientation: GtkOrientation): Unit

@CCall("knifunptr_libgtk34850_gtk_gesture_rotate_get_type")
external fun gtk_gesture_rotate_get_type(): GType

@CCall("knifunptr_libgtk34851_gtk_gesture_rotate_new")
external fun gtk_gesture_rotate_new(widget: CValuesRef<GtkWidget>?): CPointer<GtkGesture>?

@CCall("knifunptr_libgtk34852_gtk_gesture_rotate_get_angle_delta")
external fun gtk_gesture_rotate_get_angle_delta(gesture: CValuesRef<GtkGestureRotate>?): gdouble

@CCall("knifunptr_libgtk34853_gtk_gesture_swipe_get_type")
external fun gtk_gesture_swipe_get_type(): GType

@CCall("knifunptr_libgtk34854_gtk_gesture_swipe_new")
external fun gtk_gesture_swipe_new(widget: CValuesRef<GtkWidget>?): CPointer<GtkGesture>?

@CCall("knifunptr_libgtk34855_gtk_gesture_swipe_get_velocity")
external fun gtk_gesture_swipe_get_velocity(gesture: CValuesRef<GtkGestureSwipe>?, velocity_x: CValuesRef<gdoubleVar>?, velocity_y: CValuesRef<gdoubleVar>?): gboolean

@CCall("knifunptr_libgtk34856_gtk_gesture_zoom_get_type")
external fun gtk_gesture_zoom_get_type(): GType

@CCall("knifunptr_libgtk34857_gtk_gesture_zoom_new")
external fun gtk_gesture_zoom_new(widget: CValuesRef<GtkWidget>?): CPointer<GtkGesture>?

@CCall("knifunptr_libgtk34858_gtk_gesture_zoom_get_scale_delta")
external fun gtk_gesture_zoom_get_scale_delta(gesture: CValuesRef<GtkGestureZoom>?): gdouble

@CCall("knifunptr_libgtk34859_gtk_gl_area_get_type")
external fun gtk_gl_area_get_type(): GType

@CCall("knifunptr_libgtk34860_gtk_gl_area_new")
external fun gtk_gl_area_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34861_gtk_gl_area_set_use_es")
external fun gtk_gl_area_set_use_es(area: CValuesRef<GtkGLArea>?, use_es: gboolean): Unit

@CCall("knifunptr_libgtk34862_gtk_gl_area_get_use_es")
external fun gtk_gl_area_get_use_es(area: CValuesRef<GtkGLArea>?): gboolean

@CCall("knifunptr_libgtk34863_gtk_gl_area_set_required_version")
external fun gtk_gl_area_set_required_version(area: CValuesRef<GtkGLArea>?, major: gint, minor: gint): Unit

@CCall("knifunptr_libgtk34864_gtk_gl_area_get_required_version")
external fun gtk_gl_area_get_required_version(area: CValuesRef<GtkGLArea>?, major: CValuesRef<gintVar>?, minor: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk34865_gtk_gl_area_get_has_alpha")
external fun gtk_gl_area_get_has_alpha(area: CValuesRef<GtkGLArea>?): gboolean

@CCall("knifunptr_libgtk34866_gtk_gl_area_set_has_alpha")
external fun gtk_gl_area_set_has_alpha(area: CValuesRef<GtkGLArea>?, has_alpha: gboolean): Unit

@CCall("knifunptr_libgtk34867_gtk_gl_area_get_has_depth_buffer")
external fun gtk_gl_area_get_has_depth_buffer(area: CValuesRef<GtkGLArea>?): gboolean

@CCall("knifunptr_libgtk34868_gtk_gl_area_set_has_depth_buffer")
external fun gtk_gl_area_set_has_depth_buffer(area: CValuesRef<GtkGLArea>?, has_depth_buffer: gboolean): Unit

@CCall("knifunptr_libgtk34869_gtk_gl_area_get_has_stencil_buffer")
external fun gtk_gl_area_get_has_stencil_buffer(area: CValuesRef<GtkGLArea>?): gboolean

@CCall("knifunptr_libgtk34870_gtk_gl_area_set_has_stencil_buffer")
external fun gtk_gl_area_set_has_stencil_buffer(area: CValuesRef<GtkGLArea>?, has_stencil_buffer: gboolean): Unit

@CCall("knifunptr_libgtk34871_gtk_gl_area_get_auto_render")
external fun gtk_gl_area_get_auto_render(area: CValuesRef<GtkGLArea>?): gboolean

@CCall("knifunptr_libgtk34872_gtk_gl_area_set_auto_render")
external fun gtk_gl_area_set_auto_render(area: CValuesRef<GtkGLArea>?, auto_render: gboolean): Unit

@CCall("knifunptr_libgtk34873_gtk_gl_area_queue_render")
external fun gtk_gl_area_queue_render(area: CValuesRef<GtkGLArea>?): Unit

@CCall("knifunptr_libgtk34874_gtk_gl_area_get_context")
external fun gtk_gl_area_get_context(area: CValuesRef<GtkGLArea>?): CPointer<GdkGLContext>?

@CCall("knifunptr_libgtk34875_gtk_gl_area_make_current")
external fun gtk_gl_area_make_current(area: CValuesRef<GtkGLArea>?): Unit

@CCall("knifunptr_libgtk34876_gtk_gl_area_attach_buffers")
external fun gtk_gl_area_attach_buffers(area: CValuesRef<GtkGLArea>?): Unit

@CCall("knifunptr_libgtk34877_gtk_gl_area_set_error")
external fun gtk_gl_area_set_error(area: CValuesRef<GtkGLArea>?, error: CValuesRef<GError>?): Unit

@CCall("knifunptr_libgtk34878_gtk_gl_area_get_error")
external fun gtk_gl_area_get_error(area: CValuesRef<GtkGLArea>?): CPointer<GError>?

@CCall("knifunptr_libgtk34879_gtk_grid_get_type")
external fun gtk_grid_get_type(): GType

@CCall("knifunptr_libgtk34880_gtk_grid_new")
external fun gtk_grid_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34881_gtk_grid_attach")
external fun gtk_grid_attach(grid: CValuesRef<GtkGrid>?, child: CValuesRef<GtkWidget>?, left: gint, top: gint, width: gint, height: gint): Unit

@CCall("knifunptr_libgtk34882_gtk_grid_attach_next_to")
external fun gtk_grid_attach_next_to(grid: CValuesRef<GtkGrid>?, child: CValuesRef<GtkWidget>?, sibling: CValuesRef<GtkWidget>?, side: GtkPositionType, width: gint, height: gint): Unit

@CCall("knifunptr_libgtk34883_gtk_grid_get_child_at")
external fun gtk_grid_get_child_at(grid: CValuesRef<GtkGrid>?, left: gint, top: gint): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34884_gtk_grid_insert_row")
external fun gtk_grid_insert_row(grid: CValuesRef<GtkGrid>?, position: gint): Unit

@CCall("knifunptr_libgtk34885_gtk_grid_insert_column")
external fun gtk_grid_insert_column(grid: CValuesRef<GtkGrid>?, position: gint): Unit

@CCall("knifunptr_libgtk34886_gtk_grid_remove_row")
external fun gtk_grid_remove_row(grid: CValuesRef<GtkGrid>?, position: gint): Unit

@CCall("knifunptr_libgtk34887_gtk_grid_remove_column")
external fun gtk_grid_remove_column(grid: CValuesRef<GtkGrid>?, position: gint): Unit

@CCall("knifunptr_libgtk34888_gtk_grid_insert_next_to")
external fun gtk_grid_insert_next_to(grid: CValuesRef<GtkGrid>?, sibling: CValuesRef<GtkWidget>?, side: GtkPositionType): Unit

@CCall("knifunptr_libgtk34889_gtk_grid_set_row_homogeneous")
external fun gtk_grid_set_row_homogeneous(grid: CValuesRef<GtkGrid>?, homogeneous: gboolean): Unit

@CCall("knifunptr_libgtk34890_gtk_grid_get_row_homogeneous")
external fun gtk_grid_get_row_homogeneous(grid: CValuesRef<GtkGrid>?): gboolean

@CCall("knifunptr_libgtk34891_gtk_grid_set_row_spacing")
external fun gtk_grid_set_row_spacing(grid: CValuesRef<GtkGrid>?, spacing: guint): Unit

@CCall("knifunptr_libgtk34892_gtk_grid_get_row_spacing")
external fun gtk_grid_get_row_spacing(grid: CValuesRef<GtkGrid>?): guint

@CCall("knifunptr_libgtk34893_gtk_grid_set_column_homogeneous")
external fun gtk_grid_set_column_homogeneous(grid: CValuesRef<GtkGrid>?, homogeneous: gboolean): Unit

@CCall("knifunptr_libgtk34894_gtk_grid_get_column_homogeneous")
external fun gtk_grid_get_column_homogeneous(grid: CValuesRef<GtkGrid>?): gboolean

@CCall("knifunptr_libgtk34895_gtk_grid_set_column_spacing")
external fun gtk_grid_set_column_spacing(grid: CValuesRef<GtkGrid>?, spacing: guint): Unit

@CCall("knifunptr_libgtk34896_gtk_grid_get_column_spacing")
external fun gtk_grid_get_column_spacing(grid: CValuesRef<GtkGrid>?): guint

@CCall("knifunptr_libgtk34897_gtk_grid_set_row_baseline_position")
external fun gtk_grid_set_row_baseline_position(grid: CValuesRef<GtkGrid>?, row: gint, pos: GtkBaselinePosition): Unit

@CCall("knifunptr_libgtk34898_gtk_grid_get_row_baseline_position")
external fun gtk_grid_get_row_baseline_position(grid: CValuesRef<GtkGrid>?, row: gint): GtkBaselinePosition

@CCall("knifunptr_libgtk34899_gtk_grid_set_baseline_row")
external fun gtk_grid_set_baseline_row(grid: CValuesRef<GtkGrid>?, row: gint): Unit

@CCall("knifunptr_libgtk34900_gtk_grid_get_baseline_row")
external fun gtk_grid_get_baseline_row(grid: CValuesRef<GtkGrid>?): gint

@CCall("knifunptr_libgtk34901_gtk_header_bar_get_type")
external fun gtk_header_bar_get_type(): GType

@CCall("knifunptr_libgtk34902_gtk_header_bar_new")
external fun gtk_header_bar_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34903_gtk_header_bar_set_title")
external fun gtk_header_bar_set_title(bar: CValuesRef<GtkHeaderBar>?, @CCall.CString title: String?): Unit

@CCall("knifunptr_libgtk34904_gtk_header_bar_get_title")
external fun gtk_header_bar_get_title(bar: CValuesRef<GtkHeaderBar>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk34905_gtk_header_bar_set_subtitle")
external fun gtk_header_bar_set_subtitle(bar: CValuesRef<GtkHeaderBar>?, @CCall.CString subtitle: String?): Unit

@CCall("knifunptr_libgtk34906_gtk_header_bar_get_subtitle")
external fun gtk_header_bar_get_subtitle(bar: CValuesRef<GtkHeaderBar>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk34907_gtk_header_bar_set_custom_title")
external fun gtk_header_bar_set_custom_title(bar: CValuesRef<GtkHeaderBar>?, title_widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk34908_gtk_header_bar_get_custom_title")
external fun gtk_header_bar_get_custom_title(bar: CValuesRef<GtkHeaderBar>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk34909_gtk_header_bar_pack_start")
external fun gtk_header_bar_pack_start(bar: CValuesRef<GtkHeaderBar>?, child: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk34910_gtk_header_bar_pack_end")
external fun gtk_header_bar_pack_end(bar: CValuesRef<GtkHeaderBar>?, child: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk34911_gtk_header_bar_get_show_close_button")
external fun gtk_header_bar_get_show_close_button(bar: CValuesRef<GtkHeaderBar>?): gboolean

@CCall("knifunptr_libgtk34912_gtk_header_bar_set_show_close_button")
external fun gtk_header_bar_set_show_close_button(bar: CValuesRef<GtkHeaderBar>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk34913_gtk_header_bar_set_has_subtitle")
external fun gtk_header_bar_set_has_subtitle(bar: CValuesRef<GtkHeaderBar>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk34914_gtk_header_bar_get_has_subtitle")
external fun gtk_header_bar_get_has_subtitle(bar: CValuesRef<GtkHeaderBar>?): gboolean

@CCall("knifunptr_libgtk34915_gtk_header_bar_set_decoration_layout")
external fun gtk_header_bar_set_decoration_layout(bar: CValuesRef<GtkHeaderBar>?, @CCall.CString layout: String?): Unit

@CCall("knifunptr_libgtk34916_gtk_header_bar_get_decoration_layout")
external fun gtk_header_bar_get_decoration_layout(bar: CValuesRef<GtkHeaderBar>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk34917_gtk_style_provider_get_type")
external fun gtk_style_provider_get_type(): GType

@CCall("knifunptr_libgtk34918_gtk_style_provider_get_style")
external fun gtk_style_provider_get_style(provider: CValuesRef<GtkStyleProvider>?, path: CValuesRef<GtkWidgetPath>?): CPointer<GtkStyleProperties>?

@CCall("knifunptr_libgtk34919_gtk_style_provider_get_style_property")
external fun gtk_style_provider_get_style_property(provider: CValuesRef<GtkStyleProvider>?, path: CValuesRef<GtkWidgetPath>?, state: GtkStateFlags, pspec: CValuesRef<GParamSpec>?, value: CValuesRef<GValue>?): gboolean

@CCall("knifunptr_libgtk34920_gtk_style_provider_get_icon_factory")
external fun gtk_style_provider_get_icon_factory(provider: CValuesRef<GtkStyleProvider>?, path: CValuesRef<GtkWidgetPath>?): CPointer<GtkIconFactory>?

@CCall("knifunptr_libgtk34921_gtk_style_context_get_type")
external fun gtk_style_context_get_type(): GType

@CCall("knifunptr_libgtk34922_gtk_style_context_new")
external fun gtk_style_context_new(): CPointer<GtkStyleContext>?

@CCall("knifunptr_libgtk34923_gtk_style_context_add_provider_for_screen")
external fun gtk_style_context_add_provider_for_screen(screen: CValuesRef<GdkScreen>?, provider: CValuesRef<GtkStyleProvider>?, priority: guint): Unit

@CCall("knifunptr_libgtk34924_gtk_style_context_remove_provider_for_screen")
external fun gtk_style_context_remove_provider_for_screen(screen: CValuesRef<GdkScreen>?, provider: CValuesRef<GtkStyleProvider>?): Unit

@CCall("knifunptr_libgtk34925_gtk_style_context_add_provider")
external fun gtk_style_context_add_provider(context: CValuesRef<GtkStyleContext>?, provider: CValuesRef<GtkStyleProvider>?, priority: guint): Unit

@CCall("knifunptr_libgtk34926_gtk_style_context_remove_provider")
external fun gtk_style_context_remove_provider(context: CValuesRef<GtkStyleContext>?, provider: CValuesRef<GtkStyleProvider>?): Unit

@CCall("knifunptr_libgtk34927_gtk_style_context_save")
external fun gtk_style_context_save(context: CValuesRef<GtkStyleContext>?): Unit

@CCall("knifunptr_libgtk34928_gtk_style_context_restore")
external fun gtk_style_context_restore(context: CValuesRef<GtkStyleContext>?): Unit

@CCall("knifunptr_libgtk34929_gtk_style_context_get_section")
external fun gtk_style_context_get_section(context: CValuesRef<GtkStyleContext>?, @CCall.CString property: String?): CPointer<GtkCssSection>?

@CCall("knifunptr_libgtk34930_gtk_style_context_get_property")
external fun gtk_style_context_get_property(context: CValuesRef<GtkStyleContext>?, @CCall.CString property: String?, state: GtkStateFlags, value: CValuesRef<GValue>?): Unit

@CCall("knifunptr_libgtk34931_gtk_style_context_get_valist")
external fun gtk_style_context_get_valist(context: CValuesRef<GtkStyleContext>?, state: GtkStateFlags, args: va_list?): Unit

@CCall("knifunptr_libgtk34932_gtk_style_context_get")
external fun gtk_style_context_get(context: CValuesRef<GtkStyleContext>?, state: GtkStateFlags, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk34933_gtk_style_context_set_state")
external fun gtk_style_context_set_state(context: CValuesRef<GtkStyleContext>?, flags: GtkStateFlags): Unit

@CCall("knifunptr_libgtk34934_gtk_style_context_get_state")
external fun gtk_style_context_get_state(context: CValuesRef<GtkStyleContext>?): GtkStateFlags

@CCall("knifunptr_libgtk34935_gtk_style_context_set_scale")
external fun gtk_style_context_set_scale(context: CValuesRef<GtkStyleContext>?, scale: gint): Unit

@CCall("knifunptr_libgtk34936_gtk_style_context_get_scale")
external fun gtk_style_context_get_scale(context: CValuesRef<GtkStyleContext>?): gint

@CCall("knifunptr_libgtk34937_gtk_style_context_state_is_running")
external fun gtk_style_context_state_is_running(context: CValuesRef<GtkStyleContext>?, state: GtkStateType, progress: CValuesRef<gdoubleVar>?): gboolean

@CCall("knifunptr_libgtk34938_gtk_style_context_set_path")
external fun gtk_style_context_set_path(context: CValuesRef<GtkStyleContext>?, path: CValuesRef<GtkWidgetPath>?): Unit

@CCall("knifunptr_libgtk34939_gtk_style_context_get_path")
external fun gtk_style_context_get_path(context: CValuesRef<GtkStyleContext>?): CPointer<GtkWidgetPath>?

@CCall("knifunptr_libgtk34940_gtk_style_context_set_parent")
external fun gtk_style_context_set_parent(context: CValuesRef<GtkStyleContext>?, parent: CValuesRef<GtkStyleContext>?): Unit

@CCall("knifunptr_libgtk34941_gtk_style_context_get_parent")
external fun gtk_style_context_get_parent(context: CValuesRef<GtkStyleContext>?): CPointer<GtkStyleContext>?

@CCall("knifunptr_libgtk34942_gtk_style_context_list_classes")
external fun gtk_style_context_list_classes(context: CValuesRef<GtkStyleContext>?): CPointer<GList>?

@CCall("knifunptr_libgtk34943_gtk_style_context_add_class")
external fun gtk_style_context_add_class(context: CValuesRef<GtkStyleContext>?, @CCall.CString class_name: String?): Unit

@CCall("knifunptr_libgtk34944_gtk_style_context_remove_class")
external fun gtk_style_context_remove_class(context: CValuesRef<GtkStyleContext>?, @CCall.CString class_name: String?): Unit

@CCall("knifunptr_libgtk34945_gtk_style_context_has_class")
external fun gtk_style_context_has_class(context: CValuesRef<GtkStyleContext>?, @CCall.CString class_name: String?): gboolean

@CCall("knifunptr_libgtk34946_gtk_style_context_list_regions")
external fun gtk_style_context_list_regions(context: CValuesRef<GtkStyleContext>?): CPointer<GList>?

@CCall("knifunptr_libgtk34947_gtk_style_context_add_region")
external fun gtk_style_context_add_region(context: CValuesRef<GtkStyleContext>?, @CCall.CString region_name: String?, flags: GtkRegionFlags): Unit

@CCall("knifunptr_libgtk34948_gtk_style_context_remove_region")
external fun gtk_style_context_remove_region(context: CValuesRef<GtkStyleContext>?, @CCall.CString region_name: String?): Unit

@CCall("knifunptr_libgtk34949_gtk_style_context_has_region")
external fun gtk_style_context_has_region(context: CValuesRef<GtkStyleContext>?, @CCall.CString region_name: String?, flags_return: CValuesRef<GtkRegionFlagsVar>?): gboolean

@CCall("knifunptr_libgtk34950_gtk_style_context_get_style_property")
external fun gtk_style_context_get_style_property(context: CValuesRef<GtkStyleContext>?, @CCall.CString property_name: String?, value: CValuesRef<GValue>?): Unit

@CCall("knifunptr_libgtk34951_gtk_style_context_get_style_valist")
external fun gtk_style_context_get_style_valist(context: CValuesRef<GtkStyleContext>?, args: va_list?): Unit

@CCall("knifunptr_libgtk34952_gtk_style_context_get_style")
external fun gtk_style_context_get_style(context: CValuesRef<GtkStyleContext>?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk34953_gtk_style_context_lookup_icon_set")
external fun gtk_style_context_lookup_icon_set(context: CValuesRef<GtkStyleContext>?, @CCall.CString stock_id: String?): CPointer<GtkIconSet>?

@CCall("knifunptr_libgtk34954_gtk_icon_set_render_icon_pixbuf")
external fun gtk_icon_set_render_icon_pixbuf(icon_set: CValuesRef<GtkIconSet>?, context: CValuesRef<GtkStyleContext>?, size: GtkIconSize): CPointer<GdkPixbuf>?

@CCall("knifunptr_libgtk34955_gtk_icon_set_render_icon_surface")
external fun gtk_icon_set_render_icon_surface(icon_set: CValuesRef<GtkIconSet>?, context: CValuesRef<GtkStyleContext>?, size: GtkIconSize, scale: Int, for_window: CValuesRef<GdkWindow>?): CPointer<cairo_surface_t>?

@CCall("knifunptr_libgtk34956_gtk_style_context_set_screen")
external fun gtk_style_context_set_screen(context: CValuesRef<GtkStyleContext>?, screen: CValuesRef<GdkScreen>?): Unit

@CCall("knifunptr_libgtk34957_gtk_style_context_get_screen")
external fun gtk_style_context_get_screen(context: CValuesRef<GtkStyleContext>?): CPointer<GdkScreen>?

@CCall("knifunptr_libgtk34958_gtk_style_context_set_frame_clock")
external fun gtk_style_context_set_frame_clock(context: CValuesRef<GtkStyleContext>?, frame_clock: CValuesRef<GdkFrameClock>?): Unit

@CCall("knifunptr_libgtk34959_gtk_style_context_get_frame_clock")
external fun gtk_style_context_get_frame_clock(context: CValuesRef<GtkStyleContext>?): CPointer<GdkFrameClock>?

@CCall("knifunptr_libgtk34960_gtk_style_context_set_direction")
external fun gtk_style_context_set_direction(context: CValuesRef<GtkStyleContext>?, direction: GtkTextDirection): Unit

@CCall("knifunptr_libgtk34961_gtk_style_context_get_direction")
external fun gtk_style_context_get_direction(context: CValuesRef<GtkStyleContext>?): GtkTextDirection

@CCall("knifunptr_libgtk34962_gtk_style_context_set_junction_sides")
external fun gtk_style_context_set_junction_sides(context: CValuesRef<GtkStyleContext>?, sides: GtkJunctionSides): Unit

@CCall("knifunptr_libgtk34963_gtk_style_context_get_junction_sides")
external fun gtk_style_context_get_junction_sides(context: CValuesRef<GtkStyleContext>?): GtkJunctionSides

@CCall("knifunptr_libgtk34964_gtk_style_context_lookup_color")
external fun gtk_style_context_lookup_color(context: CValuesRef<GtkStyleContext>?, @CCall.CString color_name: String?, color: CValuesRef<GdkRGBA>?): gboolean

@CCall("knifunptr_libgtk34965_gtk_style_context_notify_state_change")
external fun gtk_style_context_notify_state_change(context: CValuesRef<GtkStyleContext>?, window: CValuesRef<GdkWindow>?, region_id: gpointer?, state: GtkStateType, state_value: gboolean): Unit

@CCall("knifunptr_libgtk34966_gtk_style_context_cancel_animations")
external fun gtk_style_context_cancel_animations(context: CValuesRef<GtkStyleContext>?, region_id: gpointer?): Unit

@CCall("knifunptr_libgtk34967_gtk_style_context_scroll_animations")
external fun gtk_style_context_scroll_animations(context: CValuesRef<GtkStyleContext>?, window: CValuesRef<GdkWindow>?, dx: gint, dy: gint): Unit

@CCall("knifunptr_libgtk34968_gtk_style_context_push_animatable_region")
external fun gtk_style_context_push_animatable_region(context: CValuesRef<GtkStyleContext>?, region_id: gpointer?): Unit

@CCall("knifunptr_libgtk34969_gtk_style_context_pop_animatable_region")
external fun gtk_style_context_pop_animatable_region(context: CValuesRef<GtkStyleContext>?): Unit

@CCall("knifunptr_libgtk34970_gtk_style_context_get_color")
external fun gtk_style_context_get_color(context: CValuesRef<GtkStyleContext>?, state: GtkStateFlags, color: CValuesRef<GdkRGBA>?): Unit

@CCall("knifunptr_libgtk34971_gtk_style_context_get_background_color")
external fun gtk_style_context_get_background_color(context: CValuesRef<GtkStyleContext>?, state: GtkStateFlags, color: CValuesRef<GdkRGBA>?): Unit

@CCall("knifunptr_libgtk34972_gtk_style_context_get_border_color")
external fun gtk_style_context_get_border_color(context: CValuesRef<GtkStyleContext>?, state: GtkStateFlags, color: CValuesRef<GdkRGBA>?): Unit

@CCall("knifunptr_libgtk34973_gtk_style_context_get_font")
external fun gtk_style_context_get_font(context: CValuesRef<GtkStyleContext>?, state: GtkStateFlags): CPointer<PangoFontDescription>?

@CCall("knifunptr_libgtk34974_gtk_style_context_get_border")
external fun gtk_style_context_get_border(context: CValuesRef<GtkStyleContext>?, state: GtkStateFlags, border: CValuesRef<GtkBorder>?): Unit

@CCall("knifunptr_libgtk34975_gtk_style_context_get_padding")
external fun gtk_style_context_get_padding(context: CValuesRef<GtkStyleContext>?, state: GtkStateFlags, padding: CValuesRef<GtkBorder>?): Unit

@CCall("knifunptr_libgtk34976_gtk_style_context_get_margin")
external fun gtk_style_context_get_margin(context: CValuesRef<GtkStyleContext>?, state: GtkStateFlags, margin: CValuesRef<GtkBorder>?): Unit

@CCall("knifunptr_libgtk34977_gtk_style_context_invalidate")
external fun gtk_style_context_invalidate(context: CValuesRef<GtkStyleContext>?): Unit

@CCall("knifunptr_libgtk34978_gtk_style_context_reset_widgets")
external fun gtk_style_context_reset_widgets(screen: CValuesRef<GdkScreen>?): Unit

@CCall("knifunptr_libgtk34979_gtk_style_context_set_background")
external fun gtk_style_context_set_background(context: CValuesRef<GtkStyleContext>?, window: CValuesRef<GdkWindow>?): Unit

@CCall("knifunptr_libgtk34980_gtk_render_insertion_cursor")
external fun gtk_render_insertion_cursor(context: CValuesRef<GtkStyleContext>?, cr: CValuesRef<cairo_t>?, x: gdouble, y: gdouble, layout: CValuesRef<PangoLayout>?, index: Int, direction: PangoDirection): Unit

@CCall("knifunptr_libgtk34981_gtk_draw_insertion_cursor")
external fun gtk_draw_insertion_cursor(widget: CValuesRef<GtkWidget>?, cr: CValuesRef<cairo_t>?, location: CValuesRef<GdkRectangle>?, is_primary: gboolean, direction: GtkTextDirection, draw_arrow: gboolean): Unit

@CCall("knifunptr_libgtk34982_gtk_style_context_to_string")
external fun gtk_style_context_to_string(context: CValuesRef<GtkStyleContext>?, flags: GtkStyleContextPrintFlags): CPointer<ByteVar>?

@CCall("knifunptr_libgtk34983_gtk_icon_theme_error_quark")
external fun gtk_icon_theme_error_quark(): GQuark

@CCall("knifunptr_libgtk34984_gtk_icon_theme_get_type")
external fun gtk_icon_theme_get_type(): GType

@CCall("knifunptr_libgtk34985_gtk_icon_theme_new")
external fun gtk_icon_theme_new(): CPointer<GtkIconTheme>?

@CCall("knifunptr_libgtk34986_gtk_icon_theme_get_default")
external fun gtk_icon_theme_get_default(): CPointer<GtkIconTheme>?

@CCall("knifunptr_libgtk34987_gtk_icon_theme_get_for_screen")
external fun gtk_icon_theme_get_for_screen(screen: CValuesRef<GdkScreen>?): CPointer<GtkIconTheme>?

@CCall("knifunptr_libgtk34988_gtk_icon_theme_set_screen")
external fun gtk_icon_theme_set_screen(icon_theme: CValuesRef<GtkIconTheme>?, screen: CValuesRef<GdkScreen>?): Unit

@CCall("knifunptr_libgtk34989_gtk_icon_theme_set_search_path")
external fun gtk_icon_theme_set_search_path(icon_theme: CValuesRef<GtkIconTheme>?, path: CValuesRef<CPointerVar<gcharVar>>?, n_elements: gint): Unit

@CCall("knifunptr_libgtk34990_gtk_icon_theme_get_search_path")
external fun gtk_icon_theme_get_search_path(icon_theme: CValuesRef<GtkIconTheme>?, path: CValuesRef<CPointerVar<CPointerVar<gcharVar>>>?, n_elements: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk34991_gtk_icon_theme_append_search_path")
external fun gtk_icon_theme_append_search_path(icon_theme: CValuesRef<GtkIconTheme>?, @CCall.CString path: String?): Unit

@CCall("knifunptr_libgtk34992_gtk_icon_theme_prepend_search_path")
external fun gtk_icon_theme_prepend_search_path(icon_theme: CValuesRef<GtkIconTheme>?, @CCall.CString path: String?): Unit

@CCall("knifunptr_libgtk34993_gtk_icon_theme_add_resource_path")
external fun gtk_icon_theme_add_resource_path(icon_theme: CValuesRef<GtkIconTheme>?, @CCall.CString path: String?): Unit

@CCall("knifunptr_libgtk34994_gtk_icon_theme_set_custom_theme")
external fun gtk_icon_theme_set_custom_theme(icon_theme: CValuesRef<GtkIconTheme>?, @CCall.CString theme_name: String?): Unit

@CCall("knifunptr_libgtk34995_gtk_icon_theme_has_icon")
external fun gtk_icon_theme_has_icon(icon_theme: CValuesRef<GtkIconTheme>?, @CCall.CString icon_name: String?): gboolean

@CCall("knifunptr_libgtk34996_gtk_icon_theme_get_icon_sizes")
external fun gtk_icon_theme_get_icon_sizes(icon_theme: CValuesRef<GtkIconTheme>?, @CCall.CString icon_name: String?): CPointer<gintVar>?

@CCall("knifunptr_libgtk34997_gtk_icon_theme_lookup_icon")
external fun gtk_icon_theme_lookup_icon(icon_theme: CValuesRef<GtkIconTheme>?, @CCall.CString icon_name: String?, size: gint, flags: GtkIconLookupFlags): CPointer<GtkIconInfo>?

@CCall("knifunptr_libgtk34998_gtk_icon_theme_lookup_icon_for_scale")
external fun gtk_icon_theme_lookup_icon_for_scale(icon_theme: CValuesRef<GtkIconTheme>?, @CCall.CString icon_name: String?, size: gint, scale: gint, flags: GtkIconLookupFlags): CPointer<GtkIconInfo>?

@CCall("knifunptr_libgtk34999_gtk_icon_theme_choose_icon")
external fun gtk_icon_theme_choose_icon(icon_theme: CValuesRef<GtkIconTheme>?, icon_names: CValuesRef<CPointerVar<gcharVar>>?, size: gint, flags: GtkIconLookupFlags): CPointer<GtkIconInfo>?

@CCall("knifunptr_libgtk35000_gtk_icon_theme_choose_icon_for_scale")
external fun gtk_icon_theme_choose_icon_for_scale(icon_theme: CValuesRef<GtkIconTheme>?, icon_names: CValuesRef<CPointerVar<gcharVar>>?, size: gint, scale: gint, flags: GtkIconLookupFlags): CPointer<GtkIconInfo>?

@CCall("knifunptr_libgtk35001_gtk_icon_theme_load_icon")
external fun gtk_icon_theme_load_icon(icon_theme: CValuesRef<GtkIconTheme>?, @CCall.CString icon_name: String?, size: gint, flags: GtkIconLookupFlags, error: CValuesRef<CPointerVar<GError>>?): CPointer<GdkPixbuf>?

@CCall("knifunptr_libgtk35002_gtk_icon_theme_load_icon_for_scale")
external fun gtk_icon_theme_load_icon_for_scale(icon_theme: CValuesRef<GtkIconTheme>?, @CCall.CString icon_name: String?, size: gint, scale: gint, flags: GtkIconLookupFlags, error: CValuesRef<CPointerVar<GError>>?): CPointer<GdkPixbuf>?

@CCall("knifunptr_libgtk35003_gtk_icon_theme_load_surface")
external fun gtk_icon_theme_load_surface(icon_theme: CValuesRef<GtkIconTheme>?, @CCall.CString icon_name: String?, size: gint, scale: gint, for_window: CValuesRef<GdkWindow>?, flags: GtkIconLookupFlags, error: CValuesRef<CPointerVar<GError>>?): CPointer<cairo_surface_t>?

@CCall("knifunptr_libgtk35004_gtk_icon_theme_lookup_by_gicon")
external fun gtk_icon_theme_lookup_by_gicon(icon_theme: CValuesRef<GtkIconTheme>?, icon: CValuesRef<GIcon>?, size: gint, flags: GtkIconLookupFlags): CPointer<GtkIconInfo>?

@CCall("knifunptr_libgtk35005_gtk_icon_theme_lookup_by_gicon_for_scale")
external fun gtk_icon_theme_lookup_by_gicon_for_scale(icon_theme: CValuesRef<GtkIconTheme>?, icon: CValuesRef<GIcon>?, size: gint, scale: gint, flags: GtkIconLookupFlags): CPointer<GtkIconInfo>?

@CCall("knifunptr_libgtk35006_gtk_icon_theme_list_icons")
external fun gtk_icon_theme_list_icons(icon_theme: CValuesRef<GtkIconTheme>?, @CCall.CString context: String?): CPointer<GList>?

@CCall("knifunptr_libgtk35007_gtk_icon_theme_list_contexts")
external fun gtk_icon_theme_list_contexts(icon_theme: CValuesRef<GtkIconTheme>?): CPointer<GList>?

@CCall("knifunptr_libgtk35008_gtk_icon_theme_get_example_icon_name")
external fun gtk_icon_theme_get_example_icon_name(icon_theme: CValuesRef<GtkIconTheme>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk35009_gtk_icon_theme_rescan_if_needed")
external fun gtk_icon_theme_rescan_if_needed(icon_theme: CValuesRef<GtkIconTheme>?): gboolean

@CCall("knifunptr_libgtk35010_gtk_icon_theme_add_builtin_icon")
external fun gtk_icon_theme_add_builtin_icon(@CCall.CString icon_name: String?, size: gint, pixbuf: CValuesRef<GdkPixbuf>?): Unit

@CCall("knifunptr_libgtk35011_gtk_icon_info_get_type")
external fun gtk_icon_info_get_type(): GType

@CCall("knifunptr_libgtk35012_gtk_icon_info_copy")
external fun gtk_icon_info_copy(icon_info: CValuesRef<GtkIconInfo>?): CPointer<GtkIconInfo>?

@CCall("knifunptr_libgtk35013_gtk_icon_info_free")
external fun gtk_icon_info_free(icon_info: CValuesRef<GtkIconInfo>?): Unit

@CCall("knifunptr_libgtk35014_gtk_icon_info_new_for_pixbuf")
external fun gtk_icon_info_new_for_pixbuf(icon_theme: CValuesRef<GtkIconTheme>?, pixbuf: CValuesRef<GdkPixbuf>?): CPointer<GtkIconInfo>?

@CCall("knifunptr_libgtk35015_gtk_icon_info_get_base_size")
external fun gtk_icon_info_get_base_size(icon_info: CValuesRef<GtkIconInfo>?): gint

@CCall("knifunptr_libgtk35016_gtk_icon_info_get_base_scale")
external fun gtk_icon_info_get_base_scale(icon_info: CValuesRef<GtkIconInfo>?): gint

@CCall("knifunptr_libgtk35017_gtk_icon_info_get_filename")
external fun gtk_icon_info_get_filename(icon_info: CValuesRef<GtkIconInfo>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk35018_gtk_icon_info_get_builtin_pixbuf")
external fun gtk_icon_info_get_builtin_pixbuf(icon_info: CValuesRef<GtkIconInfo>?): CPointer<GdkPixbuf>?

@CCall("knifunptr_libgtk35019_gtk_icon_info_is_symbolic")
external fun gtk_icon_info_is_symbolic(icon_info: CValuesRef<GtkIconInfo>?): gboolean

@CCall("knifunptr_libgtk35020_gtk_icon_info_load_icon")
external fun gtk_icon_info_load_icon(icon_info: CValuesRef<GtkIconInfo>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GdkPixbuf>?

@CCall("knifunptr_libgtk35021_gtk_icon_info_load_surface")
external fun gtk_icon_info_load_surface(icon_info: CValuesRef<GtkIconInfo>?, for_window: CValuesRef<GdkWindow>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<cairo_surface_t>?

@CCall("knifunptr_libgtk35022_gtk_icon_info_load_icon_async")
external fun gtk_icon_info_load_icon_async(icon_info: CValuesRef<GtkIconInfo>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk35023_gtk_icon_info_load_icon_finish")
external fun gtk_icon_info_load_icon_finish(icon_info: CValuesRef<GtkIconInfo>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GdkPixbuf>?

@CCall("knifunptr_libgtk35024_gtk_icon_info_load_symbolic")
external fun gtk_icon_info_load_symbolic(icon_info: CValuesRef<GtkIconInfo>?, fg: CValuesRef<GdkRGBA>?, success_color: CValuesRef<GdkRGBA>?, warning_color: CValuesRef<GdkRGBA>?, error_color: CValuesRef<GdkRGBA>?, was_symbolic: CValuesRef<gbooleanVar>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GdkPixbuf>?

@CCall("knifunptr_libgtk35025_gtk_icon_info_load_symbolic_async")
external fun gtk_icon_info_load_symbolic_async(icon_info: CValuesRef<GtkIconInfo>?, fg: CValuesRef<GdkRGBA>?, success_color: CValuesRef<GdkRGBA>?, warning_color: CValuesRef<GdkRGBA>?, error_color: CValuesRef<GdkRGBA>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk35026_gtk_icon_info_load_symbolic_finish")
external fun gtk_icon_info_load_symbolic_finish(icon_info: CValuesRef<GtkIconInfo>?, res: CValuesRef<GAsyncResult>?, was_symbolic: CValuesRef<gbooleanVar>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GdkPixbuf>?

@CCall("knifunptr_libgtk35027_gtk_icon_info_load_symbolic_for_context")
external fun gtk_icon_info_load_symbolic_for_context(icon_info: CValuesRef<GtkIconInfo>?, context: CValuesRef<GtkStyleContext>?, was_symbolic: CValuesRef<gbooleanVar>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GdkPixbuf>?

@CCall("knifunptr_libgtk35028_gtk_icon_info_load_symbolic_for_context_async")
external fun gtk_icon_info_load_symbolic_for_context_async(icon_info: CValuesRef<GtkIconInfo>?, context: CValuesRef<GtkStyleContext>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk35029_gtk_icon_info_load_symbolic_for_context_finish")
external fun gtk_icon_info_load_symbolic_for_context_finish(icon_info: CValuesRef<GtkIconInfo>?, res: CValuesRef<GAsyncResult>?, was_symbolic: CValuesRef<gbooleanVar>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GdkPixbuf>?

@CCall("knifunptr_libgtk35030_gtk_icon_info_load_symbolic_for_style")
external fun gtk_icon_info_load_symbolic_for_style(icon_info: CValuesRef<GtkIconInfo>?, style: CValuesRef<GtkStyle>?, state: GtkStateType, was_symbolic: CValuesRef<gbooleanVar>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GdkPixbuf>?

@CCall("knifunptr_libgtk35031_gtk_icon_info_set_raw_coordinates")
external fun gtk_icon_info_set_raw_coordinates(icon_info: CValuesRef<GtkIconInfo>?, raw_coordinates: gboolean): Unit

@CCall("knifunptr_libgtk35032_gtk_icon_info_get_embedded_rect")
external fun gtk_icon_info_get_embedded_rect(icon_info: CValuesRef<GtkIconInfo>?, rectangle: CValuesRef<GdkRectangle>?): gboolean

@CCall("knifunptr_libgtk35033_gtk_icon_info_get_attach_points")
external fun gtk_icon_info_get_attach_points(icon_info: CValuesRef<GtkIconInfo>?, points: CValuesRef<CPointerVar<GdkPoint>>?, n_points: CValuesRef<gintVar>?): gboolean

@CCall("knifunptr_libgtk35034_gtk_icon_info_get_display_name")
external fun gtk_icon_info_get_display_name(icon_info: CValuesRef<GtkIconInfo>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk35035_gtk_tooltip_get_type")
external fun gtk_tooltip_get_type(): GType

@CCall("knifunptr_libgtk35036_gtk_tooltip_set_markup")
external fun gtk_tooltip_set_markup(tooltip: CValuesRef<GtkTooltip>?, @CCall.CString markup: String?): Unit

@CCall("knifunptr_libgtk35037_gtk_tooltip_set_text")
external fun gtk_tooltip_set_text(tooltip: CValuesRef<GtkTooltip>?, @CCall.CString text: String?): Unit

@CCall("knifunptr_libgtk35038_gtk_tooltip_set_icon")
external fun gtk_tooltip_set_icon(tooltip: CValuesRef<GtkTooltip>?, pixbuf: CValuesRef<GdkPixbuf>?): Unit

@CCall("knifunptr_libgtk35039_gtk_tooltip_set_icon_from_stock")
external fun gtk_tooltip_set_icon_from_stock(tooltip: CValuesRef<GtkTooltip>?, @CCall.CString stock_id: String?, size: GtkIconSize): Unit

@CCall("knifunptr_libgtk35040_gtk_tooltip_set_icon_from_icon_name")
external fun gtk_tooltip_set_icon_from_icon_name(tooltip: CValuesRef<GtkTooltip>?, @CCall.CString icon_name: String?, size: GtkIconSize): Unit

@CCall("knifunptr_libgtk35041_gtk_tooltip_set_icon_from_gicon")
external fun gtk_tooltip_set_icon_from_gicon(tooltip: CValuesRef<GtkTooltip>?, gicon: CValuesRef<GIcon>?, size: GtkIconSize): Unit

@CCall("knifunptr_libgtk35042_gtk_tooltip_set_custom")
external fun gtk_tooltip_set_custom(tooltip: CValuesRef<GtkTooltip>?, custom_widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk35043_gtk_tooltip_set_tip_area")
external fun gtk_tooltip_set_tip_area(tooltip: CValuesRef<GtkTooltip>?, rect: CValuesRef<GdkRectangle>?): Unit

@CCall("knifunptr_libgtk35044_gtk_tooltip_trigger_tooltip_query")
external fun gtk_tooltip_trigger_tooltip_query(display: CValuesRef<GdkDisplay>?): Unit

@CCall("knifunptr_libgtk35045_gtk_icon_view_get_type")
external fun gtk_icon_view_get_type(): GType

@CCall("knifunptr_libgtk35046_gtk_icon_view_new")
external fun gtk_icon_view_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35047_gtk_icon_view_new_with_area")
external fun gtk_icon_view_new_with_area(area: CValuesRef<GtkCellArea>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35048_gtk_icon_view_new_with_model")
external fun gtk_icon_view_new_with_model(model: CValuesRef<GtkTreeModel>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35049_gtk_icon_view_set_model")
external fun gtk_icon_view_set_model(icon_view: CValuesRef<GtkIconView>?, model: CValuesRef<GtkTreeModel>?): Unit

@CCall("knifunptr_libgtk35050_gtk_icon_view_get_model")
external fun gtk_icon_view_get_model(icon_view: CValuesRef<GtkIconView>?): CPointer<GtkTreeModel>?

@CCall("knifunptr_libgtk35051_gtk_icon_view_set_text_column")
external fun gtk_icon_view_set_text_column(icon_view: CValuesRef<GtkIconView>?, column: gint): Unit

@CCall("knifunptr_libgtk35052_gtk_icon_view_get_text_column")
external fun gtk_icon_view_get_text_column(icon_view: CValuesRef<GtkIconView>?): gint

@CCall("knifunptr_libgtk35053_gtk_icon_view_set_markup_column")
external fun gtk_icon_view_set_markup_column(icon_view: CValuesRef<GtkIconView>?, column: gint): Unit

@CCall("knifunptr_libgtk35054_gtk_icon_view_get_markup_column")
external fun gtk_icon_view_get_markup_column(icon_view: CValuesRef<GtkIconView>?): gint

@CCall("knifunptr_libgtk35055_gtk_icon_view_set_pixbuf_column")
external fun gtk_icon_view_set_pixbuf_column(icon_view: CValuesRef<GtkIconView>?, column: gint): Unit

@CCall("knifunptr_libgtk35056_gtk_icon_view_get_pixbuf_column")
external fun gtk_icon_view_get_pixbuf_column(icon_view: CValuesRef<GtkIconView>?): gint

@CCall("knifunptr_libgtk35057_gtk_icon_view_set_item_orientation")
external fun gtk_icon_view_set_item_orientation(icon_view: CValuesRef<GtkIconView>?, orientation: GtkOrientation): Unit

@CCall("knifunptr_libgtk35058_gtk_icon_view_get_item_orientation")
external fun gtk_icon_view_get_item_orientation(icon_view: CValuesRef<GtkIconView>?): GtkOrientation

@CCall("knifunptr_libgtk35059_gtk_icon_view_set_columns")
external fun gtk_icon_view_set_columns(icon_view: CValuesRef<GtkIconView>?, columns: gint): Unit

@CCall("knifunptr_libgtk35060_gtk_icon_view_get_columns")
external fun gtk_icon_view_get_columns(icon_view: CValuesRef<GtkIconView>?): gint

@CCall("knifunptr_libgtk35061_gtk_icon_view_set_item_width")
external fun gtk_icon_view_set_item_width(icon_view: CValuesRef<GtkIconView>?, item_width: gint): Unit

@CCall("knifunptr_libgtk35062_gtk_icon_view_get_item_width")
external fun gtk_icon_view_get_item_width(icon_view: CValuesRef<GtkIconView>?): gint

@CCall("knifunptr_libgtk35063_gtk_icon_view_set_spacing")
external fun gtk_icon_view_set_spacing(icon_view: CValuesRef<GtkIconView>?, spacing: gint): Unit

@CCall("knifunptr_libgtk35064_gtk_icon_view_get_spacing")
external fun gtk_icon_view_get_spacing(icon_view: CValuesRef<GtkIconView>?): gint

@CCall("knifunptr_libgtk35065_gtk_icon_view_set_row_spacing")
external fun gtk_icon_view_set_row_spacing(icon_view: CValuesRef<GtkIconView>?, row_spacing: gint): Unit

@CCall("knifunptr_libgtk35066_gtk_icon_view_get_row_spacing")
external fun gtk_icon_view_get_row_spacing(icon_view: CValuesRef<GtkIconView>?): gint

@CCall("knifunptr_libgtk35067_gtk_icon_view_set_column_spacing")
external fun gtk_icon_view_set_column_spacing(icon_view: CValuesRef<GtkIconView>?, column_spacing: gint): Unit

@CCall("knifunptr_libgtk35068_gtk_icon_view_get_column_spacing")
external fun gtk_icon_view_get_column_spacing(icon_view: CValuesRef<GtkIconView>?): gint

@CCall("knifunptr_libgtk35069_gtk_icon_view_set_margin")
external fun gtk_icon_view_set_margin(icon_view: CValuesRef<GtkIconView>?, margin: gint): Unit

@CCall("knifunptr_libgtk35070_gtk_icon_view_get_margin")
external fun gtk_icon_view_get_margin(icon_view: CValuesRef<GtkIconView>?): gint

@CCall("knifunptr_libgtk35071_gtk_icon_view_set_item_padding")
external fun gtk_icon_view_set_item_padding(icon_view: CValuesRef<GtkIconView>?, item_padding: gint): Unit

@CCall("knifunptr_libgtk35072_gtk_icon_view_get_item_padding")
external fun gtk_icon_view_get_item_padding(icon_view: CValuesRef<GtkIconView>?): gint

@CCall("knifunptr_libgtk35073_gtk_icon_view_get_path_at_pos")
external fun gtk_icon_view_get_path_at_pos(icon_view: CValuesRef<GtkIconView>?, x: gint, y: gint): CPointer<GtkTreePath>?

@CCall("knifunptr_libgtk35074_gtk_icon_view_get_item_at_pos")
external fun gtk_icon_view_get_item_at_pos(icon_view: CValuesRef<GtkIconView>?, x: gint, y: gint, path: CValuesRef<CPointerVar<GtkTreePath>>?, cell: CValuesRef<CPointerVar<GtkCellRenderer>>?): gboolean

@CCall("knifunptr_libgtk35075_gtk_icon_view_get_visible_range")
external fun gtk_icon_view_get_visible_range(icon_view: CValuesRef<GtkIconView>?, start_path: CValuesRef<CPointerVar<GtkTreePath>>?, end_path: CValuesRef<CPointerVar<GtkTreePath>>?): gboolean

@CCall("knifunptr_libgtk35076_gtk_icon_view_set_activate_on_single_click")
external fun gtk_icon_view_set_activate_on_single_click(icon_view: CValuesRef<GtkIconView>?, single: gboolean): Unit

@CCall("knifunptr_libgtk35077_gtk_icon_view_get_activate_on_single_click")
external fun gtk_icon_view_get_activate_on_single_click(icon_view: CValuesRef<GtkIconView>?): gboolean

@CCall("knifunptr_libgtk35078_gtk_icon_view_selected_foreach")
external fun gtk_icon_view_selected_foreach(icon_view: CValuesRef<GtkIconView>?, func: GtkIconViewForeachFunc?, data: gpointer?): Unit

@CCall("knifunptr_libgtk35079_gtk_icon_view_set_selection_mode")
external fun gtk_icon_view_set_selection_mode(icon_view: CValuesRef<GtkIconView>?, mode: GtkSelectionMode): Unit

@CCall("knifunptr_libgtk35080_gtk_icon_view_get_selection_mode")
external fun gtk_icon_view_get_selection_mode(icon_view: CValuesRef<GtkIconView>?): GtkSelectionMode

@CCall("knifunptr_libgtk35081_gtk_icon_view_select_path")
external fun gtk_icon_view_select_path(icon_view: CValuesRef<GtkIconView>?, path: CValuesRef<GtkTreePath>?): Unit

@CCall("knifunptr_libgtk35082_gtk_icon_view_unselect_path")
external fun gtk_icon_view_unselect_path(icon_view: CValuesRef<GtkIconView>?, path: CValuesRef<GtkTreePath>?): Unit

@CCall("knifunptr_libgtk35083_gtk_icon_view_path_is_selected")
external fun gtk_icon_view_path_is_selected(icon_view: CValuesRef<GtkIconView>?, path: CValuesRef<GtkTreePath>?): gboolean

@CCall("knifunptr_libgtk35084_gtk_icon_view_get_item_row")
external fun gtk_icon_view_get_item_row(icon_view: CValuesRef<GtkIconView>?, path: CValuesRef<GtkTreePath>?): gint

@CCall("knifunptr_libgtk35085_gtk_icon_view_get_item_column")
external fun gtk_icon_view_get_item_column(icon_view: CValuesRef<GtkIconView>?, path: CValuesRef<GtkTreePath>?): gint

@CCall("knifunptr_libgtk35086_gtk_icon_view_get_selected_items")
external fun gtk_icon_view_get_selected_items(icon_view: CValuesRef<GtkIconView>?): CPointer<GList>?

@CCall("knifunptr_libgtk35087_gtk_icon_view_select_all")
external fun gtk_icon_view_select_all(icon_view: CValuesRef<GtkIconView>?): Unit

@CCall("knifunptr_libgtk35088_gtk_icon_view_unselect_all")
external fun gtk_icon_view_unselect_all(icon_view: CValuesRef<GtkIconView>?): Unit

@CCall("knifunptr_libgtk35089_gtk_icon_view_item_activated")
external fun gtk_icon_view_item_activated(icon_view: CValuesRef<GtkIconView>?, path: CValuesRef<GtkTreePath>?): Unit

@CCall("knifunptr_libgtk35090_gtk_icon_view_set_cursor")
external fun gtk_icon_view_set_cursor(icon_view: CValuesRef<GtkIconView>?, path: CValuesRef<GtkTreePath>?, cell: CValuesRef<GtkCellRenderer>?, start_editing: gboolean): Unit

@CCall("knifunptr_libgtk35091_gtk_icon_view_get_cursor")
external fun gtk_icon_view_get_cursor(icon_view: CValuesRef<GtkIconView>?, path: CValuesRef<CPointerVar<GtkTreePath>>?, cell: CValuesRef<CPointerVar<GtkCellRenderer>>?): gboolean

@CCall("knifunptr_libgtk35092_gtk_icon_view_scroll_to_path")
external fun gtk_icon_view_scroll_to_path(icon_view: CValuesRef<GtkIconView>?, path: CValuesRef<GtkTreePath>?, use_align: gboolean, row_align: gfloat, col_align: gfloat): Unit

@CCall("knifunptr_libgtk35093_gtk_icon_view_enable_model_drag_source")
external fun gtk_icon_view_enable_model_drag_source(icon_view: CValuesRef<GtkIconView>?, start_button_mask: GdkModifierType, targets: CValuesRef<GtkTargetEntry>?, n_targets: gint, actions: GdkDragAction): Unit

@CCall("knifunptr_libgtk35094_gtk_icon_view_enable_model_drag_dest")
external fun gtk_icon_view_enable_model_drag_dest(icon_view: CValuesRef<GtkIconView>?, targets: CValuesRef<GtkTargetEntry>?, n_targets: gint, actions: GdkDragAction): Unit

@CCall("knifunptr_libgtk35095_gtk_icon_view_unset_model_drag_source")
external fun gtk_icon_view_unset_model_drag_source(icon_view: CValuesRef<GtkIconView>?): Unit

@CCall("knifunptr_libgtk35096_gtk_icon_view_unset_model_drag_dest")
external fun gtk_icon_view_unset_model_drag_dest(icon_view: CValuesRef<GtkIconView>?): Unit

@CCall("knifunptr_libgtk35097_gtk_icon_view_set_reorderable")
external fun gtk_icon_view_set_reorderable(icon_view: CValuesRef<GtkIconView>?, reorderable: gboolean): Unit

@CCall("knifunptr_libgtk35098_gtk_icon_view_get_reorderable")
external fun gtk_icon_view_get_reorderable(icon_view: CValuesRef<GtkIconView>?): gboolean

@CCall("knifunptr_libgtk35099_gtk_icon_view_set_drag_dest_item")
external fun gtk_icon_view_set_drag_dest_item(icon_view: CValuesRef<GtkIconView>?, path: CValuesRef<GtkTreePath>?, pos: GtkIconViewDropPosition): Unit

@CCall("knifunptr_libgtk35100_gtk_icon_view_get_drag_dest_item")
external fun gtk_icon_view_get_drag_dest_item(icon_view: CValuesRef<GtkIconView>?, path: CValuesRef<CPointerVar<GtkTreePath>>?, pos: CValuesRef<GtkIconViewDropPosition.Var>?): Unit

@CCall("knifunptr_libgtk35101_gtk_icon_view_get_dest_item_at_pos")
external fun gtk_icon_view_get_dest_item_at_pos(icon_view: CValuesRef<GtkIconView>?, drag_x: gint, drag_y: gint, path: CValuesRef<CPointerVar<GtkTreePath>>?, pos: CValuesRef<GtkIconViewDropPosition.Var>?): gboolean

@CCall("knifunptr_libgtk35102_gtk_icon_view_create_drag_icon")
external fun gtk_icon_view_create_drag_icon(icon_view: CValuesRef<GtkIconView>?, path: CValuesRef<GtkTreePath>?): CPointer<cairo_surface_t>?

@CCall("knifunptr_libgtk35103_gtk_icon_view_convert_widget_to_bin_window_coords")
external fun gtk_icon_view_convert_widget_to_bin_window_coords(icon_view: CValuesRef<GtkIconView>?, wx: gint, wy: gint, bx: CValuesRef<gintVar>?, by: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk35104_gtk_icon_view_get_cell_rect")
external fun gtk_icon_view_get_cell_rect(icon_view: CValuesRef<GtkIconView>?, path: CValuesRef<GtkTreePath>?, cell: CValuesRef<GtkCellRenderer>?, rect: CValuesRef<GdkRectangle>?): gboolean

@CCall("knifunptr_libgtk35105_gtk_icon_view_set_tooltip_item")
external fun gtk_icon_view_set_tooltip_item(icon_view: CValuesRef<GtkIconView>?, tooltip: CValuesRef<GtkTooltip>?, path: CValuesRef<GtkTreePath>?): Unit

@CCall("knifunptr_libgtk35106_gtk_icon_view_set_tooltip_cell")
external fun gtk_icon_view_set_tooltip_cell(icon_view: CValuesRef<GtkIconView>?, tooltip: CValuesRef<GtkTooltip>?, path: CValuesRef<GtkTreePath>?, cell: CValuesRef<GtkCellRenderer>?): Unit

@CCall("knifunptr_libgtk35107_gtk_icon_view_get_tooltip_context")
external fun gtk_icon_view_get_tooltip_context(icon_view: CValuesRef<GtkIconView>?, x: CValuesRef<gintVar>?, y: CValuesRef<gintVar>?, keyboard_tip: gboolean, model: CValuesRef<CPointerVar<GtkTreeModel>>?, path: CValuesRef<CPointerVar<GtkTreePath>>?, iter: CValuesRef<GtkTreeIter>?): gboolean

@CCall("knifunptr_libgtk35108_gtk_icon_view_set_tooltip_column")
external fun gtk_icon_view_set_tooltip_column(icon_view: CValuesRef<GtkIconView>?, column: gint): Unit

@CCall("knifunptr_libgtk35109_gtk_icon_view_get_tooltip_column")
external fun gtk_icon_view_get_tooltip_column(icon_view: CValuesRef<GtkIconView>?): gint

@CCall("knifunptr_libgtk35110_gtk_im_context_simple_get_type")
external fun gtk_im_context_simple_get_type(): GType

@CCall("knifunptr_libgtk35111_gtk_im_context_simple_new")
external fun gtk_im_context_simple_new(): CPointer<GtkIMContext>?

@CCall("knifunptr_libgtk35112_gtk_im_context_simple_add_table")
external fun gtk_im_context_simple_add_table(context_simple: CValuesRef<GtkIMContextSimple>?, data: CValuesRef<guint16Var>?, max_seq_len: gint, n_seqs: gint): Unit

@CCall("knifunptr_libgtk35113_gtk_im_context_simple_add_compose_file")
external fun gtk_im_context_simple_add_compose_file(context_simple: CValuesRef<GtkIMContextSimple>?, @CCall.CString compose_file: String?): Unit

@CCall("knifunptr_libgtk35114_gtk_im_multicontext_get_type")
external fun gtk_im_multicontext_get_type(): GType

@CCall("knifunptr_libgtk35115_gtk_im_multicontext_new")
external fun gtk_im_multicontext_new(): CPointer<GtkIMContext>?

@CCall("knifunptr_libgtk35116_gtk_im_multicontext_append_menuitems")
external fun gtk_im_multicontext_append_menuitems(context: CValuesRef<GtkIMMulticontext>?, menushell: CValuesRef<GtkMenuShell>?): Unit

@CCall("knifunptr_libgtk35117_gtk_im_multicontext_get_context_id")
external fun gtk_im_multicontext_get_context_id(context: CValuesRef<GtkIMMulticontext>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk35118_gtk_im_multicontext_set_context_id")
external fun gtk_im_multicontext_set_context_id(context: CValuesRef<GtkIMMulticontext>?, @CCall.CString context_id: String?): Unit

@CCall("knifunptr_libgtk35119_gtk_info_bar_get_type")
external fun gtk_info_bar_get_type(): GType

@CCall("knifunptr_libgtk35120_gtk_info_bar_new")
external fun gtk_info_bar_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35121_gtk_info_bar_new_with_buttons")
external fun gtk_info_bar_new_with_buttons(@CCall.CString first_button_text: String?, vararg variadicArguments: Any?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35122_gtk_info_bar_get_action_area")
external fun gtk_info_bar_get_action_area(info_bar: CValuesRef<GtkInfoBar>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35123_gtk_info_bar_get_content_area")
external fun gtk_info_bar_get_content_area(info_bar: CValuesRef<GtkInfoBar>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35124_gtk_info_bar_add_action_widget")
external fun gtk_info_bar_add_action_widget(info_bar: CValuesRef<GtkInfoBar>?, child: CValuesRef<GtkWidget>?, response_id: gint): Unit

@CCall("knifunptr_libgtk35125_gtk_info_bar_add_button")
external fun gtk_info_bar_add_button(info_bar: CValuesRef<GtkInfoBar>?, @CCall.CString button_text: String?, response_id: gint): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35126_gtk_info_bar_add_buttons")
external fun gtk_info_bar_add_buttons(info_bar: CValuesRef<GtkInfoBar>?, @CCall.CString first_button_text: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk35127_gtk_info_bar_set_response_sensitive")
external fun gtk_info_bar_set_response_sensitive(info_bar: CValuesRef<GtkInfoBar>?, response_id: gint, setting: gboolean): Unit

@CCall("knifunptr_libgtk35128_gtk_info_bar_set_default_response")
external fun gtk_info_bar_set_default_response(info_bar: CValuesRef<GtkInfoBar>?, response_id: gint): Unit

@CCall("knifunptr_libgtk35129_gtk_info_bar_response")
external fun gtk_info_bar_response(info_bar: CValuesRef<GtkInfoBar>?, response_id: gint): Unit

@CCall("knifunptr_libgtk35130_gtk_info_bar_set_message_type")
external fun gtk_info_bar_set_message_type(info_bar: CValuesRef<GtkInfoBar>?, message_type: GtkMessageType): Unit

@CCall("knifunptr_libgtk35131_gtk_info_bar_get_message_type")
external fun gtk_info_bar_get_message_type(info_bar: CValuesRef<GtkInfoBar>?): GtkMessageType

@CCall("knifunptr_libgtk35132_gtk_info_bar_set_show_close_button")
external fun gtk_info_bar_set_show_close_button(info_bar: CValuesRef<GtkInfoBar>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk35133_gtk_info_bar_get_show_close_button")
external fun gtk_info_bar_get_show_close_button(info_bar: CValuesRef<GtkInfoBar>?): gboolean

@CCall("knifunptr_libgtk35134_gtk_info_bar_set_revealed")
external fun gtk_info_bar_set_revealed(info_bar: CValuesRef<GtkInfoBar>?, revealed: gboolean): Unit

@CCall("knifunptr_libgtk35135_gtk_info_bar_get_revealed")
external fun gtk_info_bar_get_revealed(info_bar: CValuesRef<GtkInfoBar>?): gboolean

@CCall("knifunptr_libgtk35136_gtk_invisible_get_type")
external fun gtk_invisible_get_type(): GType

@CCall("knifunptr_libgtk35137_gtk_invisible_new")
external fun gtk_invisible_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35138_gtk_invisible_new_for_screen")
external fun gtk_invisible_new_for_screen(screen: CValuesRef<GdkScreen>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35139_gtk_invisible_set_screen")
external fun gtk_invisible_set_screen(invisible: CValuesRef<GtkInvisible>?, screen: CValuesRef<GdkScreen>?): Unit

@CCall("knifunptr_libgtk35140_gtk_invisible_get_screen")
external fun gtk_invisible_get_screen(invisible: CValuesRef<GtkInvisible>?): CPointer<GdkScreen>?

@CCall("knifunptr_libgtk35141_gtk_layout_get_type")
external fun gtk_layout_get_type(): GType

@CCall("knifunptr_libgtk35142_gtk_layout_new")
external fun gtk_layout_new(hadjustment: CValuesRef<GtkAdjustment>?, vadjustment: CValuesRef<GtkAdjustment>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35143_gtk_layout_get_bin_window")
external fun gtk_layout_get_bin_window(layout: CValuesRef<GtkLayout>?): CPointer<GdkWindow>?

@CCall("knifunptr_libgtk35144_gtk_layout_put")
external fun gtk_layout_put(layout: CValuesRef<GtkLayout>?, child_widget: CValuesRef<GtkWidget>?, x: gint, y: gint): Unit

@CCall("knifunptr_libgtk35145_gtk_layout_move")
external fun gtk_layout_move(layout: CValuesRef<GtkLayout>?, child_widget: CValuesRef<GtkWidget>?, x: gint, y: gint): Unit

@CCall("knifunptr_libgtk35146_gtk_layout_set_size")
external fun gtk_layout_set_size(layout: CValuesRef<GtkLayout>?, width: guint, height: guint): Unit

@CCall("knifunptr_libgtk35147_gtk_layout_get_size")
external fun gtk_layout_get_size(layout: CValuesRef<GtkLayout>?, width: CValuesRef<guintVar>?, height: CValuesRef<guintVar>?): Unit

@CCall("knifunptr_libgtk35148_gtk_layout_get_hadjustment")
external fun gtk_layout_get_hadjustment(layout: CValuesRef<GtkLayout>?): CPointer<GtkAdjustment>?

@CCall("knifunptr_libgtk35149_gtk_layout_get_vadjustment")
external fun gtk_layout_get_vadjustment(layout: CValuesRef<GtkLayout>?): CPointer<GtkAdjustment>?

@CCall("knifunptr_libgtk35150_gtk_layout_set_hadjustment")
external fun gtk_layout_set_hadjustment(layout: CValuesRef<GtkLayout>?, adjustment: CValuesRef<GtkAdjustment>?): Unit

@CCall("knifunptr_libgtk35151_gtk_layout_set_vadjustment")
external fun gtk_layout_set_vadjustment(layout: CValuesRef<GtkLayout>?, adjustment: CValuesRef<GtkAdjustment>?): Unit

@CCall("knifunptr_libgtk35152_gtk_level_bar_get_type")
external fun gtk_level_bar_get_type(): GType

@CCall("knifunptr_libgtk35153_gtk_level_bar_new")
external fun gtk_level_bar_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35154_gtk_level_bar_new_for_interval")
external fun gtk_level_bar_new_for_interval(min_value: gdouble, max_value: gdouble): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35155_gtk_level_bar_set_mode")
external fun gtk_level_bar_set_mode(self: CValuesRef<GtkLevelBar>?, mode: GtkLevelBarMode): Unit

@CCall("knifunptr_libgtk35156_gtk_level_bar_get_mode")
external fun gtk_level_bar_get_mode(self: CValuesRef<GtkLevelBar>?): GtkLevelBarMode

@CCall("knifunptr_libgtk35157_gtk_level_bar_set_value")
external fun gtk_level_bar_set_value(self: CValuesRef<GtkLevelBar>?, value: gdouble): Unit

@CCall("knifunptr_libgtk35158_gtk_level_bar_get_value")
external fun gtk_level_bar_get_value(self: CValuesRef<GtkLevelBar>?): gdouble

@CCall("knifunptr_libgtk35159_gtk_level_bar_set_min_value")
external fun gtk_level_bar_set_min_value(self: CValuesRef<GtkLevelBar>?, value: gdouble): Unit

@CCall("knifunptr_libgtk35160_gtk_level_bar_get_min_value")
external fun gtk_level_bar_get_min_value(self: CValuesRef<GtkLevelBar>?): gdouble

@CCall("knifunptr_libgtk35161_gtk_level_bar_set_max_value")
external fun gtk_level_bar_set_max_value(self: CValuesRef<GtkLevelBar>?, value: gdouble): Unit

@CCall("knifunptr_libgtk35162_gtk_level_bar_get_max_value")
external fun gtk_level_bar_get_max_value(self: CValuesRef<GtkLevelBar>?): gdouble

@CCall("knifunptr_libgtk35163_gtk_level_bar_set_inverted")
external fun gtk_level_bar_set_inverted(self: CValuesRef<GtkLevelBar>?, inverted: gboolean): Unit

@CCall("knifunptr_libgtk35164_gtk_level_bar_get_inverted")
external fun gtk_level_bar_get_inverted(self: CValuesRef<GtkLevelBar>?): gboolean

@CCall("knifunptr_libgtk35165_gtk_level_bar_add_offset_value")
external fun gtk_level_bar_add_offset_value(self: CValuesRef<GtkLevelBar>?, @CCall.CString name: String?, value: gdouble): Unit

@CCall("knifunptr_libgtk35166_gtk_level_bar_remove_offset_value")
external fun gtk_level_bar_remove_offset_value(self: CValuesRef<GtkLevelBar>?, @CCall.CString name: String?): Unit

@CCall("knifunptr_libgtk35167_gtk_level_bar_get_offset_value")
external fun gtk_level_bar_get_offset_value(self: CValuesRef<GtkLevelBar>?, @CCall.CString name: String?, value: CValuesRef<gdoubleVar>?): gboolean

@CCall("knifunptr_libgtk35168_gtk_link_button_get_type")
external fun gtk_link_button_get_type(): GType

@CCall("knifunptr_libgtk35169_gtk_link_button_new")
external fun gtk_link_button_new(@CCall.CString uri: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35170_gtk_link_button_new_with_label")
external fun gtk_link_button_new_with_label(@CCall.CString uri: String?, @CCall.CString label: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35171_gtk_link_button_get_uri")
external fun gtk_link_button_get_uri(link_button: CValuesRef<GtkLinkButton>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk35172_gtk_link_button_set_uri")
external fun gtk_link_button_set_uri(link_button: CValuesRef<GtkLinkButton>?, @CCall.CString uri: String?): Unit

@CCall("knifunptr_libgtk35173_gtk_link_button_get_visited")
external fun gtk_link_button_get_visited(link_button: CValuesRef<GtkLinkButton>?): gboolean

@CCall("knifunptr_libgtk35174_gtk_link_button_set_visited")
external fun gtk_link_button_set_visited(link_button: CValuesRef<GtkLinkButton>?, visited: gboolean): Unit

@CCall("knifunptr_libgtk35175_gtk_list_box_row_get_type")
external fun gtk_list_box_row_get_type(): GType

@CCall("knifunptr_libgtk35176_gtk_list_box_row_new")
external fun gtk_list_box_row_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35177_gtk_list_box_row_get_header")
external fun gtk_list_box_row_get_header(row: CValuesRef<GtkListBoxRow>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35178_gtk_list_box_row_set_header")
external fun gtk_list_box_row_set_header(row: CValuesRef<GtkListBoxRow>?, header: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk35179_gtk_list_box_row_get_index")
external fun gtk_list_box_row_get_index(row: CValuesRef<GtkListBoxRow>?): gint

@CCall("knifunptr_libgtk35180_gtk_list_box_row_changed")
external fun gtk_list_box_row_changed(row: CValuesRef<GtkListBoxRow>?): Unit

@CCall("knifunptr_libgtk35181_gtk_list_box_row_is_selected")
external fun gtk_list_box_row_is_selected(row: CValuesRef<GtkListBoxRow>?): gboolean

@CCall("knifunptr_libgtk35182_gtk_list_box_row_set_selectable")
external fun gtk_list_box_row_set_selectable(row: CValuesRef<GtkListBoxRow>?, selectable: gboolean): Unit

@CCall("knifunptr_libgtk35183_gtk_list_box_row_get_selectable")
external fun gtk_list_box_row_get_selectable(row: CValuesRef<GtkListBoxRow>?): gboolean

@CCall("knifunptr_libgtk35184_gtk_list_box_row_set_activatable")
external fun gtk_list_box_row_set_activatable(row: CValuesRef<GtkListBoxRow>?, activatable: gboolean): Unit

@CCall("knifunptr_libgtk35185_gtk_list_box_row_get_activatable")
external fun gtk_list_box_row_get_activatable(row: CValuesRef<GtkListBoxRow>?): gboolean

@CCall("knifunptr_libgtk35186_gtk_list_box_get_type")
external fun gtk_list_box_get_type(): GType

@CCall("knifunptr_libgtk35187_gtk_list_box_prepend")
external fun gtk_list_box_prepend(box: CValuesRef<GtkListBox>?, child: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk35188_gtk_list_box_insert")
external fun gtk_list_box_insert(box: CValuesRef<GtkListBox>?, child: CValuesRef<GtkWidget>?, position: gint): Unit

@CCall("knifunptr_libgtk35189_gtk_list_box_get_selected_row")
external fun gtk_list_box_get_selected_row(box: CValuesRef<GtkListBox>?): CPointer<GtkListBoxRow>?

@CCall("knifunptr_libgtk35190_gtk_list_box_get_row_at_index")
external fun gtk_list_box_get_row_at_index(box: CValuesRef<GtkListBox>?, index_: gint): CPointer<GtkListBoxRow>?

@CCall("knifunptr_libgtk35191_gtk_list_box_get_row_at_y")
external fun gtk_list_box_get_row_at_y(box: CValuesRef<GtkListBox>?, y: gint): CPointer<GtkListBoxRow>?

@CCall("knifunptr_libgtk35192_gtk_list_box_select_row")
external fun gtk_list_box_select_row(box: CValuesRef<GtkListBox>?, row: CValuesRef<GtkListBoxRow>?): Unit

@CCall("knifunptr_libgtk35193_gtk_list_box_set_placeholder")
external fun gtk_list_box_set_placeholder(box: CValuesRef<GtkListBox>?, placeholder: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk35194_gtk_list_box_set_adjustment")
external fun gtk_list_box_set_adjustment(box: CValuesRef<GtkListBox>?, adjustment: CValuesRef<GtkAdjustment>?): Unit

@CCall("knifunptr_libgtk35195_gtk_list_box_get_adjustment")
external fun gtk_list_box_get_adjustment(box: CValuesRef<GtkListBox>?): CPointer<GtkAdjustment>?

@CCall("knifunptr_libgtk35196_gtk_list_box_selected_foreach")
external fun gtk_list_box_selected_foreach(box: CValuesRef<GtkListBox>?, func: GtkListBoxForeachFunc?, data: gpointer?): Unit

@CCall("knifunptr_libgtk35197_gtk_list_box_get_selected_rows")
external fun gtk_list_box_get_selected_rows(box: CValuesRef<GtkListBox>?): CPointer<GList>?

@CCall("knifunptr_libgtk35198_gtk_list_box_unselect_row")
external fun gtk_list_box_unselect_row(box: CValuesRef<GtkListBox>?, row: CValuesRef<GtkListBoxRow>?): Unit

@CCall("knifunptr_libgtk35199_gtk_list_box_select_all")
external fun gtk_list_box_select_all(box: CValuesRef<GtkListBox>?): Unit

@CCall("knifunptr_libgtk35200_gtk_list_box_unselect_all")
external fun gtk_list_box_unselect_all(box: CValuesRef<GtkListBox>?): Unit

@CCall("knifunptr_libgtk35201_gtk_list_box_set_selection_mode")
external fun gtk_list_box_set_selection_mode(box: CValuesRef<GtkListBox>?, mode: GtkSelectionMode): Unit

@CCall("knifunptr_libgtk35202_gtk_list_box_get_selection_mode")
external fun gtk_list_box_get_selection_mode(box: CValuesRef<GtkListBox>?): GtkSelectionMode

@CCall("knifunptr_libgtk35203_gtk_list_box_set_filter_func")
external fun gtk_list_box_set_filter_func(box: CValuesRef<GtkListBox>?, filter_func: GtkListBoxFilterFunc?, user_data: gpointer?, destroy: GDestroyNotify?): Unit

@CCall("knifunptr_libgtk35204_gtk_list_box_set_header_func")
external fun gtk_list_box_set_header_func(box: CValuesRef<GtkListBox>?, update_header: GtkListBoxUpdateHeaderFunc?, user_data: gpointer?, destroy: GDestroyNotify?): Unit

@CCall("knifunptr_libgtk35205_gtk_list_box_invalidate_filter")
external fun gtk_list_box_invalidate_filter(box: CValuesRef<GtkListBox>?): Unit

@CCall("knifunptr_libgtk35206_gtk_list_box_invalidate_sort")
external fun gtk_list_box_invalidate_sort(box: CValuesRef<GtkListBox>?): Unit

@CCall("knifunptr_libgtk35207_gtk_list_box_invalidate_headers")
external fun gtk_list_box_invalidate_headers(box: CValuesRef<GtkListBox>?): Unit

@CCall("knifunptr_libgtk35208_gtk_list_box_set_sort_func")
external fun gtk_list_box_set_sort_func(box: CValuesRef<GtkListBox>?, sort_func: GtkListBoxSortFunc?, user_data: gpointer?, destroy: GDestroyNotify?): Unit

@CCall("knifunptr_libgtk35209_gtk_list_box_set_activate_on_single_click")
external fun gtk_list_box_set_activate_on_single_click(box: CValuesRef<GtkListBox>?, single: gboolean): Unit

@CCall("knifunptr_libgtk35210_gtk_list_box_get_activate_on_single_click")
external fun gtk_list_box_get_activate_on_single_click(box: CValuesRef<GtkListBox>?): gboolean

@CCall("knifunptr_libgtk35211_gtk_list_box_drag_unhighlight_row")
external fun gtk_list_box_drag_unhighlight_row(box: CValuesRef<GtkListBox>?): Unit

@CCall("knifunptr_libgtk35212_gtk_list_box_drag_highlight_row")
external fun gtk_list_box_drag_highlight_row(box: CValuesRef<GtkListBox>?, row: CValuesRef<GtkListBoxRow>?): Unit

@CCall("knifunptr_libgtk35213_gtk_list_box_new")
external fun gtk_list_box_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35214_gtk_list_box_bind_model")
external fun gtk_list_box_bind_model(box: CValuesRef<GtkListBox>?, model: CValuesRef<GListModel>?, create_widget_func: GtkListBoxCreateWidgetFunc?, user_data: gpointer?, user_data_free_func: GDestroyNotify?): Unit

@CCall("knifunptr_libgtk35215_glib_autoptr_cleanup_GtkListBox")
external fun glib_autoptr_cleanup_GtkListBox(_ptr: CValuesRef<CPointerVar<GtkListBox>>?): Unit

@CCall("knifunptr_libgtk35216_glib_listautoptr_cleanup_GtkListBox")
external fun glib_listautoptr_cleanup_GtkListBox(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk35217_glib_slistautoptr_cleanup_GtkListBox")
external fun glib_slistautoptr_cleanup_GtkListBox(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk35218_glib_autoptr_cleanup_GtkListBoxRow")
external fun glib_autoptr_cleanup_GtkListBoxRow(_ptr: CValuesRef<CPointerVar<GtkListBoxRow>>?): Unit

@CCall("knifunptr_libgtk35219_glib_listautoptr_cleanup_GtkListBoxRow")
external fun glib_listautoptr_cleanup_GtkListBoxRow(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk35220_glib_slistautoptr_cleanup_GtkListBoxRow")
external fun glib_slistautoptr_cleanup_GtkListBoxRow(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk35221_gtk_lock_button_get_type")
external fun gtk_lock_button_get_type(): GType

@CCall("knifunptr_libgtk35222_gtk_lock_button_new")
external fun gtk_lock_button_new(permission: CValuesRef<GPermission>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35223_gtk_lock_button_get_permission")
external fun gtk_lock_button_get_permission(button: CValuesRef<GtkLockButton>?): CPointer<GPermission>?

@CCall("knifunptr_libgtk35224_gtk_lock_button_set_permission")
external fun gtk_lock_button_set_permission(button: CValuesRef<GtkLockButton>?, permission: CValuesRef<GPermission>?): Unit

@CCall("knifunptr_libgtk35225_gtk_get_major_version")
external fun gtk_get_major_version(): guint

@CCall("knifunptr_libgtk35226_gtk_get_minor_version")
external fun gtk_get_minor_version(): guint

@CCall("knifunptr_libgtk35227_gtk_get_micro_version")
external fun gtk_get_micro_version(): guint

@CCall("knifunptr_libgtk35228_gtk_get_binary_age")
external fun gtk_get_binary_age(): guint

@CCall("knifunptr_libgtk35229_gtk_get_interface_age")
external fun gtk_get_interface_age(): guint

@CCall("knifunptr_libgtk35230_gtk_check_version")
external fun gtk_check_version(required_major: guint, required_minor: guint, required_micro: guint): CPointer<gcharVar>?

@CCall("knifunptr_libgtk35231_gtk_parse_args")
external fun gtk_parse_args(argc: CValuesRef<IntVar>?, argv: CValuesRef<CPointerVar<CPointerVar<ByteVar>>>?): gboolean

@CCall("knifunptr_libgtk35232_gtk_init")
external fun gtk_init(argc: CValuesRef<IntVar>?, argv: CValuesRef<CPointerVar<CPointerVar<ByteVar>>>?): Unit

@CCall("knifunptr_libgtk35233_gtk_init_check")
external fun gtk_init_check(argc: CValuesRef<IntVar>?, argv: CValuesRef<CPointerVar<CPointerVar<ByteVar>>>?): gboolean

@CCall("knifunptr_libgtk35234_gtk_init_with_args")
external fun gtk_init_with_args(argc: CValuesRef<gintVar>?, argv: CValuesRef<CPointerVar<CPointerVar<gcharVar>>>?, @CCall.CString parameter_string: String?, entries: CValuesRef<GOptionEntry>?, @CCall.CString translation_domain: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk35235_gtk_get_option_group")
external fun gtk_get_option_group(open_default_display: gboolean): CPointer<GOptionGroup>?

@CCall("knifunptr_libgtk35236_gtk_disable_setlocale")
external fun gtk_disable_setlocale(): Unit

@CCall("knifunptr_libgtk35237_gtk_get_default_language")
external fun gtk_get_default_language(): CPointer<PangoLanguage>?

@CCall("knifunptr_libgtk35238_gtk_get_locale_direction")
external fun gtk_get_locale_direction(): GtkTextDirection

@CCall("knifunptr_libgtk35239_gtk_events_pending")
external fun gtk_events_pending(): gboolean

@CCall("knifunptr_libgtk35240_gtk_main_do_event")
external fun gtk_main_do_event(event: CValuesRef<GdkEvent>?): Unit

@CCall("knifunptr_libgtk35241_gtk_main")
external fun gtk_main(): Unit

@CCall("knifunptr_libgtk35242_gtk_main_level")
external fun gtk_main_level(): guint

@CCall("knifunptr_libgtk35243_gtk_main_quit")
external fun gtk_main_quit(): Unit

@CCall("knifunptr_libgtk35244_gtk_main_iteration")
external fun gtk_main_iteration(): gboolean

@CCall("knifunptr_libgtk35245_gtk_main_iteration_do")
external fun gtk_main_iteration_do(blocking: gboolean): gboolean

@CCall("knifunptr_libgtk35246_gtk_true")
external fun gtk_true(): gboolean

@CCall("knifunptr_libgtk35247_gtk_false")
external fun gtk_false(): gboolean

@CCall("knifunptr_libgtk35248_gtk_grab_add")
external fun gtk_grab_add(widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk35249_gtk_grab_get_current")
external fun gtk_grab_get_current(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35250_gtk_grab_remove")
external fun gtk_grab_remove(widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk35251_gtk_device_grab_add")
external fun gtk_device_grab_add(widget: CValuesRef<GtkWidget>?, device: CValuesRef<GdkDevice>?, block_others: gboolean): Unit

@CCall("knifunptr_libgtk35252_gtk_device_grab_remove")
external fun gtk_device_grab_remove(widget: CValuesRef<GtkWidget>?, device: CValuesRef<GdkDevice>?): Unit

@CCall("knifunptr_libgtk35253_gtk_key_snooper_install")
external fun gtk_key_snooper_install(snooper: GtkKeySnoopFunc?, func_data: gpointer?): guint

@CCall("knifunptr_libgtk35254_gtk_key_snooper_remove")
external fun gtk_key_snooper_remove(snooper_handler_id: guint): Unit

@CCall("knifunptr_libgtk35255_gtk_get_current_event")
external fun gtk_get_current_event(): CPointer<GdkEvent>?

@CCall("knifunptr_libgtk35256_gtk_get_current_event_time")
external fun gtk_get_current_event_time(): guint32

@CCall("knifunptr_libgtk35257_gtk_get_current_event_state")
external fun gtk_get_current_event_state(state: CValuesRef<GdkModifierTypeVar>?): gboolean

@CCall("knifunptr_libgtk35258_gtk_get_current_event_device")
external fun gtk_get_current_event_device(): CPointer<GdkDevice>?

@CCall("knifunptr_libgtk35259_gtk_get_event_widget")
external fun gtk_get_event_widget(event: CValuesRef<GdkEvent>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35260_gtk_propagate_event")
external fun gtk_propagate_event(widget: CValuesRef<GtkWidget>?, event: CValuesRef<GdkEvent>?): Unit

@CCall("knifunptr_libgtk35261_gtk_menu_bar_get_type")
external fun gtk_menu_bar_get_type(): GType

@CCall("knifunptr_libgtk35262_gtk_menu_bar_new")
external fun gtk_menu_bar_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35263_gtk_menu_bar_new_from_model")
external fun gtk_menu_bar_new_from_model(model: CValuesRef<GMenuModel>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35264_gtk_menu_bar_get_pack_direction")
external fun gtk_menu_bar_get_pack_direction(menubar: CValuesRef<GtkMenuBar>?): GtkPackDirection

@CCall("knifunptr_libgtk35265_gtk_menu_bar_set_pack_direction")
external fun gtk_menu_bar_set_pack_direction(menubar: CValuesRef<GtkMenuBar>?, pack_dir: GtkPackDirection): Unit

@CCall("knifunptr_libgtk35266_gtk_menu_bar_get_child_pack_direction")
external fun gtk_menu_bar_get_child_pack_direction(menubar: CValuesRef<GtkMenuBar>?): GtkPackDirection

@CCall("knifunptr_libgtk35267_gtk_menu_bar_set_child_pack_direction")
external fun gtk_menu_bar_set_child_pack_direction(menubar: CValuesRef<GtkMenuBar>?, child_pack_dir: GtkPackDirection): Unit

@CCall("knifunptr_libgtk35268__gtk_menu_bar_cycle_focus")
external fun _gtk_menu_bar_cycle_focus(menubar: CValuesRef<GtkMenuBar>?, dir: GtkDirectionType): Unit

@CCall("knifunptr_libgtk35269__gtk_menu_bar_get_viewable_menu_bars")
external fun _gtk_menu_bar_get_viewable_menu_bars(window: CValuesRef<GtkWindow>?): CPointer<GList>?

@CCall("knifunptr_libgtk35270_gtk_popover_get_type")
external fun gtk_popover_get_type(): GType

@CCall("knifunptr_libgtk35271_gtk_popover_new")
external fun gtk_popover_new(relative_to: CValuesRef<GtkWidget>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35272_gtk_popover_new_from_model")
external fun gtk_popover_new_from_model(relative_to: CValuesRef<GtkWidget>?, model: CValuesRef<GMenuModel>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35273_gtk_popover_set_relative_to")
external fun gtk_popover_set_relative_to(popover: CValuesRef<GtkPopover>?, relative_to: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk35274_gtk_popover_get_relative_to")
external fun gtk_popover_get_relative_to(popover: CValuesRef<GtkPopover>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35275_gtk_popover_set_pointing_to")
external fun gtk_popover_set_pointing_to(popover: CValuesRef<GtkPopover>?, rect: CValuesRef<GdkRectangle>?): Unit

@CCall("knifunptr_libgtk35276_gtk_popover_get_pointing_to")
external fun gtk_popover_get_pointing_to(popover: CValuesRef<GtkPopover>?, rect: CValuesRef<GdkRectangle>?): gboolean

@CCall("knifunptr_libgtk35277_gtk_popover_set_position")
external fun gtk_popover_set_position(popover: CValuesRef<GtkPopover>?, position: GtkPositionType): Unit

@CCall("knifunptr_libgtk35278_gtk_popover_get_position")
external fun gtk_popover_get_position(popover: CValuesRef<GtkPopover>?): GtkPositionType

@CCall("knifunptr_libgtk35279_gtk_popover_set_modal")
external fun gtk_popover_set_modal(popover: CValuesRef<GtkPopover>?, modal: gboolean): Unit

@CCall("knifunptr_libgtk35280_gtk_popover_get_modal")
external fun gtk_popover_get_modal(popover: CValuesRef<GtkPopover>?): gboolean

@CCall("knifunptr_libgtk35281_gtk_popover_bind_model")
external fun gtk_popover_bind_model(popover: CValuesRef<GtkPopover>?, model: CValuesRef<GMenuModel>?, @CCall.CString action_namespace: String?): Unit

@CCall("knifunptr_libgtk35282_gtk_popover_set_transitions_enabled")
external fun gtk_popover_set_transitions_enabled(popover: CValuesRef<GtkPopover>?, transitions_enabled: gboolean): Unit

@CCall("knifunptr_libgtk35283_gtk_popover_get_transitions_enabled")
external fun gtk_popover_get_transitions_enabled(popover: CValuesRef<GtkPopover>?): gboolean

@CCall("knifunptr_libgtk35284_gtk_popover_set_default_widget")
external fun gtk_popover_set_default_widget(popover: CValuesRef<GtkPopover>?, widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk35285_gtk_popover_get_default_widget")
external fun gtk_popover_get_default_widget(popover: CValuesRef<GtkPopover>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35286_gtk_popover_set_constrain_to")
external fun gtk_popover_set_constrain_to(popover: CValuesRef<GtkPopover>?, constraint: GtkPopoverConstraint): Unit

@CCall("knifunptr_libgtk35287_gtk_popover_get_constrain_to")
external fun gtk_popover_get_constrain_to(popover: CValuesRef<GtkPopover>?): GtkPopoverConstraint

@CCall("knifunptr_libgtk35288_gtk_popover_popup")
external fun gtk_popover_popup(popover: CValuesRef<GtkPopover>?): Unit

@CCall("knifunptr_libgtk35289_gtk_popover_popdown")
external fun gtk_popover_popdown(popover: CValuesRef<GtkPopover>?): Unit

@CCall("knifunptr_libgtk35290_gtk_menu_button_get_type")
external fun gtk_menu_button_get_type(): GType

@CCall("knifunptr_libgtk35291_gtk_menu_button_new")
external fun gtk_menu_button_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35292_gtk_menu_button_set_popup")
external fun gtk_menu_button_set_popup(menu_button: CValuesRef<GtkMenuButton>?, menu: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk35293_gtk_menu_button_get_popup")
external fun gtk_menu_button_get_popup(menu_button: CValuesRef<GtkMenuButton>?): CPointer<GtkMenu>?

@CCall("knifunptr_libgtk35294_gtk_menu_button_set_popover")
external fun gtk_menu_button_set_popover(menu_button: CValuesRef<GtkMenuButton>?, popover: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk35295_gtk_menu_button_get_popover")
external fun gtk_menu_button_get_popover(menu_button: CValuesRef<GtkMenuButton>?): CPointer<GtkPopover>?

@CCall("knifunptr_libgtk35296_gtk_menu_button_set_direction")
external fun gtk_menu_button_set_direction(menu_button: CValuesRef<GtkMenuButton>?, direction: GtkArrowType): Unit

@CCall("knifunptr_libgtk35297_gtk_menu_button_get_direction")
external fun gtk_menu_button_get_direction(menu_button: CValuesRef<GtkMenuButton>?): GtkArrowType

@CCall("knifunptr_libgtk35298_gtk_menu_button_set_menu_model")
external fun gtk_menu_button_set_menu_model(menu_button: CValuesRef<GtkMenuButton>?, menu_model: CValuesRef<GMenuModel>?): Unit

@CCall("knifunptr_libgtk35299_gtk_menu_button_get_menu_model")
external fun gtk_menu_button_get_menu_model(menu_button: CValuesRef<GtkMenuButton>?): CPointer<GMenuModel>?

@CCall("knifunptr_libgtk35300_gtk_menu_button_set_align_widget")
external fun gtk_menu_button_set_align_widget(menu_button: CValuesRef<GtkMenuButton>?, align_widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk35301_gtk_menu_button_get_align_widget")
external fun gtk_menu_button_get_align_widget(menu_button: CValuesRef<GtkMenuButton>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35302_gtk_menu_button_set_use_popover")
external fun gtk_menu_button_set_use_popover(menu_button: CValuesRef<GtkMenuButton>?, use_popover: gboolean): Unit

@CCall("knifunptr_libgtk35303_gtk_menu_button_get_use_popover")
external fun gtk_menu_button_get_use_popover(menu_button: CValuesRef<GtkMenuButton>?): gboolean

@CCall("knifunptr_libgtk35304_gtk_size_group_get_type")
external fun gtk_size_group_get_type(): GType

@CCall("knifunptr_libgtk35305_gtk_size_group_new")
external fun gtk_size_group_new(mode: GtkSizeGroupMode): CPointer<GtkSizeGroup>?

@CCall("knifunptr_libgtk35306_gtk_size_group_set_mode")
external fun gtk_size_group_set_mode(size_group: CValuesRef<GtkSizeGroup>?, mode: GtkSizeGroupMode): Unit

@CCall("knifunptr_libgtk35307_gtk_size_group_get_mode")
external fun gtk_size_group_get_mode(size_group: CValuesRef<GtkSizeGroup>?): GtkSizeGroupMode

@CCall("knifunptr_libgtk35308_gtk_size_group_set_ignore_hidden")
external fun gtk_size_group_set_ignore_hidden(size_group: CValuesRef<GtkSizeGroup>?, ignore_hidden: gboolean): Unit

@CCall("knifunptr_libgtk35309_gtk_size_group_get_ignore_hidden")
external fun gtk_size_group_get_ignore_hidden(size_group: CValuesRef<GtkSizeGroup>?): gboolean

@CCall("knifunptr_libgtk35310_gtk_size_group_add_widget")
external fun gtk_size_group_add_widget(size_group: CValuesRef<GtkSizeGroup>?, widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk35311_gtk_size_group_remove_widget")
external fun gtk_size_group_remove_widget(size_group: CValuesRef<GtkSizeGroup>?, widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk35312_gtk_size_group_get_widgets")
external fun gtk_size_group_get_widgets(size_group: CValuesRef<GtkSizeGroup>?): CPointer<GSList>?

@CCall("knifunptr_libgtk35313_gtk_tool_item_get_type")
external fun gtk_tool_item_get_type(): GType

@CCall("knifunptr_libgtk35314_gtk_tool_item_new")
external fun gtk_tool_item_new(): CPointer<GtkToolItem>?

@CCall("knifunptr_libgtk35315_gtk_tool_item_set_homogeneous")
external fun gtk_tool_item_set_homogeneous(tool_item: CValuesRef<GtkToolItem>?, homogeneous: gboolean): Unit

@CCall("knifunptr_libgtk35316_gtk_tool_item_get_homogeneous")
external fun gtk_tool_item_get_homogeneous(tool_item: CValuesRef<GtkToolItem>?): gboolean

@CCall("knifunptr_libgtk35317_gtk_tool_item_set_expand")
external fun gtk_tool_item_set_expand(tool_item: CValuesRef<GtkToolItem>?, expand: gboolean): Unit

@CCall("knifunptr_libgtk35318_gtk_tool_item_get_expand")
external fun gtk_tool_item_get_expand(tool_item: CValuesRef<GtkToolItem>?): gboolean

@CCall("knifunptr_libgtk35319_gtk_tool_item_set_tooltip_text")
external fun gtk_tool_item_set_tooltip_text(tool_item: CValuesRef<GtkToolItem>?, @CCall.CString text: String?): Unit

@CCall("knifunptr_libgtk35320_gtk_tool_item_set_tooltip_markup")
external fun gtk_tool_item_set_tooltip_markup(tool_item: CValuesRef<GtkToolItem>?, @CCall.CString markup: String?): Unit

@CCall("knifunptr_libgtk35321_gtk_tool_item_set_use_drag_window")
external fun gtk_tool_item_set_use_drag_window(tool_item: CValuesRef<GtkToolItem>?, use_drag_window: gboolean): Unit

@CCall("knifunptr_libgtk35322_gtk_tool_item_get_use_drag_window")
external fun gtk_tool_item_get_use_drag_window(tool_item: CValuesRef<GtkToolItem>?): gboolean

@CCall("knifunptr_libgtk35323_gtk_tool_item_set_visible_horizontal")
external fun gtk_tool_item_set_visible_horizontal(tool_item: CValuesRef<GtkToolItem>?, visible_horizontal: gboolean): Unit

@CCall("knifunptr_libgtk35324_gtk_tool_item_get_visible_horizontal")
external fun gtk_tool_item_get_visible_horizontal(tool_item: CValuesRef<GtkToolItem>?): gboolean

@CCall("knifunptr_libgtk35325_gtk_tool_item_set_visible_vertical")
external fun gtk_tool_item_set_visible_vertical(tool_item: CValuesRef<GtkToolItem>?, visible_vertical: gboolean): Unit

@CCall("knifunptr_libgtk35326_gtk_tool_item_get_visible_vertical")
external fun gtk_tool_item_get_visible_vertical(tool_item: CValuesRef<GtkToolItem>?): gboolean

@CCall("knifunptr_libgtk35327_gtk_tool_item_get_is_important")
external fun gtk_tool_item_get_is_important(tool_item: CValuesRef<GtkToolItem>?): gboolean

@CCall("knifunptr_libgtk35328_gtk_tool_item_set_is_important")
external fun gtk_tool_item_set_is_important(tool_item: CValuesRef<GtkToolItem>?, is_important: gboolean): Unit

@CCall("knifunptr_libgtk35329_gtk_tool_item_get_ellipsize_mode")
external fun gtk_tool_item_get_ellipsize_mode(tool_item: CValuesRef<GtkToolItem>?): PangoEllipsizeMode

@CCall("knifunptr_libgtk35330_gtk_tool_item_get_icon_size")
external fun gtk_tool_item_get_icon_size(tool_item: CValuesRef<GtkToolItem>?): GtkIconSize

@CCall("knifunptr_libgtk35331_gtk_tool_item_get_orientation")
external fun gtk_tool_item_get_orientation(tool_item: CValuesRef<GtkToolItem>?): GtkOrientation

@CCall("knifunptr_libgtk35332_gtk_tool_item_get_toolbar_style")
external fun gtk_tool_item_get_toolbar_style(tool_item: CValuesRef<GtkToolItem>?): GtkToolbarStyle

@CCall("knifunptr_libgtk35333_gtk_tool_item_get_relief_style")
external fun gtk_tool_item_get_relief_style(tool_item: CValuesRef<GtkToolItem>?): GtkReliefStyle

@CCall("knifunptr_libgtk35334_gtk_tool_item_get_text_alignment")
external fun gtk_tool_item_get_text_alignment(tool_item: CValuesRef<GtkToolItem>?): gfloat

@CCall("knifunptr_libgtk35335_gtk_tool_item_get_text_orientation")
external fun gtk_tool_item_get_text_orientation(tool_item: CValuesRef<GtkToolItem>?): GtkOrientation

@CCall("knifunptr_libgtk35336_gtk_tool_item_get_text_size_group")
external fun gtk_tool_item_get_text_size_group(tool_item: CValuesRef<GtkToolItem>?): CPointer<GtkSizeGroup>?

@CCall("knifunptr_libgtk35337_gtk_tool_item_retrieve_proxy_menu_item")
external fun gtk_tool_item_retrieve_proxy_menu_item(tool_item: CValuesRef<GtkToolItem>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35338_gtk_tool_item_get_proxy_menu_item")
external fun gtk_tool_item_get_proxy_menu_item(tool_item: CValuesRef<GtkToolItem>?, @CCall.CString menu_item_id: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35339_gtk_tool_item_set_proxy_menu_item")
external fun gtk_tool_item_set_proxy_menu_item(tool_item: CValuesRef<GtkToolItem>?, @CCall.CString menu_item_id: String?, menu_item: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk35340_gtk_tool_item_rebuild_menu")
external fun gtk_tool_item_rebuild_menu(tool_item: CValuesRef<GtkToolItem>?): Unit

@CCall("knifunptr_libgtk35341_gtk_tool_item_toolbar_reconfigured")
external fun gtk_tool_item_toolbar_reconfigured(tool_item: CValuesRef<GtkToolItem>?): Unit

@CCall("knifunptr_libgtk35342__gtk_tool_item_create_menu_proxy")
external fun _gtk_tool_item_create_menu_proxy(tool_item: CValuesRef<GtkToolItem>?): gboolean

@CCall("knifunptr_libgtk35343_gtk_tool_button_get_type")
external fun gtk_tool_button_get_type(): GType

@CCall("knifunptr_libgtk35344_gtk_tool_button_new")
external fun gtk_tool_button_new(icon_widget: CValuesRef<GtkWidget>?, @CCall.CString label: String?): CPointer<GtkToolItem>?

@CCall("knifunptr_libgtk35345_gtk_tool_button_new_from_stock")
external fun gtk_tool_button_new_from_stock(@CCall.CString stock_id: String?): CPointer<GtkToolItem>?

@CCall("knifunptr_libgtk35346_gtk_tool_button_set_label")
external fun gtk_tool_button_set_label(button: CValuesRef<GtkToolButton>?, @CCall.CString label: String?): Unit

@CCall("knifunptr_libgtk35347_gtk_tool_button_get_label")
external fun gtk_tool_button_get_label(button: CValuesRef<GtkToolButton>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk35348_gtk_tool_button_set_use_underline")
external fun gtk_tool_button_set_use_underline(button: CValuesRef<GtkToolButton>?, use_underline: gboolean): Unit

@CCall("knifunptr_libgtk35349_gtk_tool_button_get_use_underline")
external fun gtk_tool_button_get_use_underline(button: CValuesRef<GtkToolButton>?): gboolean

@CCall("knifunptr_libgtk35350_gtk_tool_button_set_stock_id")
external fun gtk_tool_button_set_stock_id(button: CValuesRef<GtkToolButton>?, @CCall.CString stock_id: String?): Unit

@CCall("knifunptr_libgtk35351_gtk_tool_button_get_stock_id")
external fun gtk_tool_button_get_stock_id(button: CValuesRef<GtkToolButton>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk35352_gtk_tool_button_set_icon_name")
external fun gtk_tool_button_set_icon_name(button: CValuesRef<GtkToolButton>?, @CCall.CString icon_name: String?): Unit

@CCall("knifunptr_libgtk35353_gtk_tool_button_get_icon_name")
external fun gtk_tool_button_get_icon_name(button: CValuesRef<GtkToolButton>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk35354_gtk_tool_button_set_icon_widget")
external fun gtk_tool_button_set_icon_widget(button: CValuesRef<GtkToolButton>?, icon_widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk35355_gtk_tool_button_get_icon_widget")
external fun gtk_tool_button_get_icon_widget(button: CValuesRef<GtkToolButton>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35356_gtk_tool_button_set_label_widget")
external fun gtk_tool_button_set_label_widget(button: CValuesRef<GtkToolButton>?, label_widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk35357_gtk_tool_button_get_label_widget")
external fun gtk_tool_button_get_label_widget(button: CValuesRef<GtkToolButton>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35358__gtk_tool_button_get_button")
external fun _gtk_tool_button_get_button(button: CValuesRef<GtkToolButton>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35359_gtk_menu_tool_button_get_type")
external fun gtk_menu_tool_button_get_type(): GType

@CCall("knifunptr_libgtk35360_gtk_menu_tool_button_new")
external fun gtk_menu_tool_button_new(icon_widget: CValuesRef<GtkWidget>?, @CCall.CString label: String?): CPointer<GtkToolItem>?

@CCall("knifunptr_libgtk35361_gtk_menu_tool_button_new_from_stock")
external fun gtk_menu_tool_button_new_from_stock(@CCall.CString stock_id: String?): CPointer<GtkToolItem>?

@CCall("knifunptr_libgtk35362_gtk_menu_tool_button_set_menu")
external fun gtk_menu_tool_button_set_menu(button: CValuesRef<GtkMenuToolButton>?, menu: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk35363_gtk_menu_tool_button_get_menu")
external fun gtk_menu_tool_button_get_menu(button: CValuesRef<GtkMenuToolButton>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35364_gtk_menu_tool_button_set_arrow_tooltip_text")
external fun gtk_menu_tool_button_set_arrow_tooltip_text(button: CValuesRef<GtkMenuToolButton>?, @CCall.CString text: String?): Unit

@CCall("knifunptr_libgtk35365_gtk_menu_tool_button_set_arrow_tooltip_markup")
external fun gtk_menu_tool_button_set_arrow_tooltip_markup(button: CValuesRef<GtkMenuToolButton>?, @CCall.CString markup: String?): Unit

@CCall("knifunptr_libgtk35366_gtk_message_dialog_get_type")
external fun gtk_message_dialog_get_type(): GType

@CCall("knifunptr_libgtk35367_gtk_message_dialog_new")
external fun gtk_message_dialog_new(parent: CValuesRef<GtkWindow>?, flags: GtkDialogFlags, type: GtkMessageType, buttons: GtkButtonsType, @CCall.CString message_format: String?, vararg variadicArguments: Any?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35368_gtk_message_dialog_new_with_markup")
external fun gtk_message_dialog_new_with_markup(parent: CValuesRef<GtkWindow>?, flags: GtkDialogFlags, type: GtkMessageType, buttons: GtkButtonsType, @CCall.CString message_format: String?, vararg variadicArguments: Any?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35369_gtk_message_dialog_set_image")
external fun gtk_message_dialog_set_image(dialog: CValuesRef<GtkMessageDialog>?, image: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk35370_gtk_message_dialog_get_image")
external fun gtk_message_dialog_get_image(dialog: CValuesRef<GtkMessageDialog>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35371_gtk_message_dialog_set_markup")
external fun gtk_message_dialog_set_markup(message_dialog: CValuesRef<GtkMessageDialog>?, @CCall.CString str: String?): Unit

@CCall("knifunptr_libgtk35372_gtk_message_dialog_format_secondary_text")
external fun gtk_message_dialog_format_secondary_text(message_dialog: CValuesRef<GtkMessageDialog>?, @CCall.CString message_format: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk35373_gtk_message_dialog_format_secondary_markup")
external fun gtk_message_dialog_format_secondary_markup(message_dialog: CValuesRef<GtkMessageDialog>?, @CCall.CString message_format: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk35374_gtk_message_dialog_get_message_area")
external fun gtk_message_dialog_get_message_area(message_dialog: CValuesRef<GtkMessageDialog>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35375_gtk_model_button_get_type")
external fun gtk_model_button_get_type(): GType

@CCall("knifunptr_libgtk35376_gtk_model_button_new")
external fun gtk_model_button_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35377_gtk_mount_operation_get_type")
external fun gtk_mount_operation_get_type(): GType

@CCall("knifunptr_libgtk35378_gtk_mount_operation_new")
external fun gtk_mount_operation_new(parent: CValuesRef<GtkWindow>?): CPointer<GMountOperation>?

@CCall("knifunptr_libgtk35379_gtk_mount_operation_is_showing")
external fun gtk_mount_operation_is_showing(op: CValuesRef<GtkMountOperation>?): gboolean

@CCall("knifunptr_libgtk35380_gtk_mount_operation_set_parent")
external fun gtk_mount_operation_set_parent(op: CValuesRef<GtkMountOperation>?, parent: CValuesRef<GtkWindow>?): Unit

@CCall("knifunptr_libgtk35381_gtk_mount_operation_get_parent")
external fun gtk_mount_operation_get_parent(op: CValuesRef<GtkMountOperation>?): CPointer<GtkWindow>?

@CCall("knifunptr_libgtk35382_gtk_mount_operation_set_screen")
external fun gtk_mount_operation_set_screen(op: CValuesRef<GtkMountOperation>?, screen: CValuesRef<GdkScreen>?): Unit

@CCall("knifunptr_libgtk35383_gtk_mount_operation_get_screen")
external fun gtk_mount_operation_get_screen(op: CValuesRef<GtkMountOperation>?): CPointer<GdkScreen>?

@CCall("knifunptr_libgtk35384_gtk_notebook_get_type")
external fun gtk_notebook_get_type(): GType

@CCall("knifunptr_libgtk35385_gtk_notebook_new")
external fun gtk_notebook_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35386_gtk_notebook_append_page")
external fun gtk_notebook_append_page(notebook: CValuesRef<GtkNotebook>?, child: CValuesRef<GtkWidget>?, tab_label: CValuesRef<GtkWidget>?): gint

@CCall("knifunptr_libgtk35387_gtk_notebook_append_page_menu")
external fun gtk_notebook_append_page_menu(notebook: CValuesRef<GtkNotebook>?, child: CValuesRef<GtkWidget>?, tab_label: CValuesRef<GtkWidget>?, menu_label: CValuesRef<GtkWidget>?): gint

@CCall("knifunptr_libgtk35388_gtk_notebook_prepend_page")
external fun gtk_notebook_prepend_page(notebook: CValuesRef<GtkNotebook>?, child: CValuesRef<GtkWidget>?, tab_label: CValuesRef<GtkWidget>?): gint

@CCall("knifunptr_libgtk35389_gtk_notebook_prepend_page_menu")
external fun gtk_notebook_prepend_page_menu(notebook: CValuesRef<GtkNotebook>?, child: CValuesRef<GtkWidget>?, tab_label: CValuesRef<GtkWidget>?, menu_label: CValuesRef<GtkWidget>?): gint

@CCall("knifunptr_libgtk35390_gtk_notebook_insert_page")
external fun gtk_notebook_insert_page(notebook: CValuesRef<GtkNotebook>?, child: CValuesRef<GtkWidget>?, tab_label: CValuesRef<GtkWidget>?, position: gint): gint

@CCall("knifunptr_libgtk35391_gtk_notebook_insert_page_menu")
external fun gtk_notebook_insert_page_menu(notebook: CValuesRef<GtkNotebook>?, child: CValuesRef<GtkWidget>?, tab_label: CValuesRef<GtkWidget>?, menu_label: CValuesRef<GtkWidget>?, position: gint): gint

@CCall("knifunptr_libgtk35392_gtk_notebook_remove_page")
external fun gtk_notebook_remove_page(notebook: CValuesRef<GtkNotebook>?, page_num: gint): Unit

@CCall("knifunptr_libgtk35393_gtk_notebook_set_group_name")
external fun gtk_notebook_set_group_name(notebook: CValuesRef<GtkNotebook>?, @CCall.CString group_name: String?): Unit

@CCall("knifunptr_libgtk35394_gtk_notebook_get_group_name")
external fun gtk_notebook_get_group_name(notebook: CValuesRef<GtkNotebook>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk35395_gtk_notebook_get_current_page")
external fun gtk_notebook_get_current_page(notebook: CValuesRef<GtkNotebook>?): gint

@CCall("knifunptr_libgtk35396_gtk_notebook_get_nth_page")
external fun gtk_notebook_get_nth_page(notebook: CValuesRef<GtkNotebook>?, page_num: gint): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35397_gtk_notebook_get_n_pages")
external fun gtk_notebook_get_n_pages(notebook: CValuesRef<GtkNotebook>?): gint

@CCall("knifunptr_libgtk35398_gtk_notebook_page_num")
external fun gtk_notebook_page_num(notebook: CValuesRef<GtkNotebook>?, child: CValuesRef<GtkWidget>?): gint

@CCall("knifunptr_libgtk35399_gtk_notebook_set_current_page")
external fun gtk_notebook_set_current_page(notebook: CValuesRef<GtkNotebook>?, page_num: gint): Unit

@CCall("knifunptr_libgtk35400_gtk_notebook_next_page")
external fun gtk_notebook_next_page(notebook: CValuesRef<GtkNotebook>?): Unit

@CCall("knifunptr_libgtk35401_gtk_notebook_prev_page")
external fun gtk_notebook_prev_page(notebook: CValuesRef<GtkNotebook>?): Unit

@CCall("knifunptr_libgtk35402_gtk_notebook_set_show_border")
external fun gtk_notebook_set_show_border(notebook: CValuesRef<GtkNotebook>?, show_border: gboolean): Unit

@CCall("knifunptr_libgtk35403_gtk_notebook_get_show_border")
external fun gtk_notebook_get_show_border(notebook: CValuesRef<GtkNotebook>?): gboolean

@CCall("knifunptr_libgtk35404_gtk_notebook_set_show_tabs")
external fun gtk_notebook_set_show_tabs(notebook: CValuesRef<GtkNotebook>?, show_tabs: gboolean): Unit

@CCall("knifunptr_libgtk35405_gtk_notebook_get_show_tabs")
external fun gtk_notebook_get_show_tabs(notebook: CValuesRef<GtkNotebook>?): gboolean

@CCall("knifunptr_libgtk35406_gtk_notebook_set_tab_pos")
external fun gtk_notebook_set_tab_pos(notebook: CValuesRef<GtkNotebook>?, pos: GtkPositionType): Unit

@CCall("knifunptr_libgtk35407_gtk_notebook_get_tab_pos")
external fun gtk_notebook_get_tab_pos(notebook: CValuesRef<GtkNotebook>?): GtkPositionType

@CCall("knifunptr_libgtk35408_gtk_notebook_set_scrollable")
external fun gtk_notebook_set_scrollable(notebook: CValuesRef<GtkNotebook>?, scrollable: gboolean): Unit

@CCall("knifunptr_libgtk35409_gtk_notebook_get_scrollable")
external fun gtk_notebook_get_scrollable(notebook: CValuesRef<GtkNotebook>?): gboolean

@CCall("knifunptr_libgtk35410_gtk_notebook_get_tab_hborder")
external fun gtk_notebook_get_tab_hborder(notebook: CValuesRef<GtkNotebook>?): guint16

@CCall("knifunptr_libgtk35411_gtk_notebook_get_tab_vborder")
external fun gtk_notebook_get_tab_vborder(notebook: CValuesRef<GtkNotebook>?): guint16

@CCall("knifunptr_libgtk35412_gtk_notebook_popup_enable")
external fun gtk_notebook_popup_enable(notebook: CValuesRef<GtkNotebook>?): Unit

@CCall("knifunptr_libgtk35413_gtk_notebook_popup_disable")
external fun gtk_notebook_popup_disable(notebook: CValuesRef<GtkNotebook>?): Unit

@CCall("knifunptr_libgtk35414_gtk_notebook_get_tab_label")
external fun gtk_notebook_get_tab_label(notebook: CValuesRef<GtkNotebook>?, child: CValuesRef<GtkWidget>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35415_gtk_notebook_set_tab_label")
external fun gtk_notebook_set_tab_label(notebook: CValuesRef<GtkNotebook>?, child: CValuesRef<GtkWidget>?, tab_label: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk35416_gtk_notebook_set_tab_label_text")
external fun gtk_notebook_set_tab_label_text(notebook: CValuesRef<GtkNotebook>?, child: CValuesRef<GtkWidget>?, @CCall.CString tab_text: String?): Unit

@CCall("knifunptr_libgtk35417_gtk_notebook_get_tab_label_text")
external fun gtk_notebook_get_tab_label_text(notebook: CValuesRef<GtkNotebook>?, child: CValuesRef<GtkWidget>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk35418_gtk_notebook_get_menu_label")
external fun gtk_notebook_get_menu_label(notebook: CValuesRef<GtkNotebook>?, child: CValuesRef<GtkWidget>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35419_gtk_notebook_set_menu_label")
external fun gtk_notebook_set_menu_label(notebook: CValuesRef<GtkNotebook>?, child: CValuesRef<GtkWidget>?, menu_label: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk35420_gtk_notebook_set_menu_label_text")
external fun gtk_notebook_set_menu_label_text(notebook: CValuesRef<GtkNotebook>?, child: CValuesRef<GtkWidget>?, @CCall.CString menu_text: String?): Unit

@CCall("knifunptr_libgtk35421_gtk_notebook_get_menu_label_text")
external fun gtk_notebook_get_menu_label_text(notebook: CValuesRef<GtkNotebook>?, child: CValuesRef<GtkWidget>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk35422_gtk_notebook_reorder_child")
external fun gtk_notebook_reorder_child(notebook: CValuesRef<GtkNotebook>?, child: CValuesRef<GtkWidget>?, position: gint): Unit

@CCall("knifunptr_libgtk35423_gtk_notebook_get_tab_reorderable")
external fun gtk_notebook_get_tab_reorderable(notebook: CValuesRef<GtkNotebook>?, child: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk35424_gtk_notebook_set_tab_reorderable")
external fun gtk_notebook_set_tab_reorderable(notebook: CValuesRef<GtkNotebook>?, child: CValuesRef<GtkWidget>?, reorderable: gboolean): Unit

@CCall("knifunptr_libgtk35425_gtk_notebook_get_tab_detachable")
external fun gtk_notebook_get_tab_detachable(notebook: CValuesRef<GtkNotebook>?, child: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk35426_gtk_notebook_set_tab_detachable")
external fun gtk_notebook_set_tab_detachable(notebook: CValuesRef<GtkNotebook>?, child: CValuesRef<GtkWidget>?, detachable: gboolean): Unit

@CCall("knifunptr_libgtk35427_gtk_notebook_detach_tab")
external fun gtk_notebook_detach_tab(notebook: CValuesRef<GtkNotebook>?, child: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk35428_gtk_notebook_get_action_widget")
external fun gtk_notebook_get_action_widget(notebook: CValuesRef<GtkNotebook>?, pack_type: GtkPackType): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35429_gtk_notebook_set_action_widget")
external fun gtk_notebook_set_action_widget(notebook: CValuesRef<GtkNotebook>?, widget: CValuesRef<GtkWidget>?, pack_type: GtkPackType): Unit

@CCall("knifunptr_libgtk35430_gtk_offscreen_window_get_type")
external fun gtk_offscreen_window_get_type(): GType

@CCall("knifunptr_libgtk35431_gtk_offscreen_window_new")
external fun gtk_offscreen_window_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35432_gtk_offscreen_window_get_surface")
external fun gtk_offscreen_window_get_surface(offscreen: CValuesRef<GtkOffscreenWindow>?): CPointer<cairo_surface_t>?

@CCall("knifunptr_libgtk35433_gtk_offscreen_window_get_pixbuf")
external fun gtk_offscreen_window_get_pixbuf(offscreen: CValuesRef<GtkOffscreenWindow>?): CPointer<GdkPixbuf>?

@CCall("knifunptr_libgtk35434_gtk_orientable_get_type")
external fun gtk_orientable_get_type(): GType

@CCall("knifunptr_libgtk35435_gtk_orientable_set_orientation")
external fun gtk_orientable_set_orientation(orientable: CValuesRef<GtkOrientable>?, orientation: GtkOrientation): Unit

@CCall("knifunptr_libgtk35436_gtk_orientable_get_orientation")
external fun gtk_orientable_get_orientation(orientable: CValuesRef<GtkOrientable>?): GtkOrientation

@CCall("knifunptr_libgtk35437_gtk_overlay_get_type")
external fun gtk_overlay_get_type(): GType

@CCall("knifunptr_libgtk35438_gtk_overlay_new")
external fun gtk_overlay_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35439_gtk_overlay_add_overlay")
external fun gtk_overlay_add_overlay(overlay: CValuesRef<GtkOverlay>?, widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk35440_gtk_overlay_reorder_overlay")
external fun gtk_overlay_reorder_overlay(overlay: CValuesRef<GtkOverlay>?, child: CValuesRef<GtkWidget>?, position: gint): Unit

@CCall("knifunptr_libgtk35441_gtk_overlay_get_overlay_pass_through")
external fun gtk_overlay_get_overlay_pass_through(overlay: CValuesRef<GtkOverlay>?, widget: CValuesRef<GtkWidget>?): gboolean

@CCall("knifunptr_libgtk35442_gtk_overlay_set_overlay_pass_through")
external fun gtk_overlay_set_overlay_pass_through(overlay: CValuesRef<GtkOverlay>?, widget: CValuesRef<GtkWidget>?, pass_through: gboolean): Unit

@CCall("knifunptr_libgtk35443_gtk_pad_controller_get_type")
external fun gtk_pad_controller_get_type(): GType

@CCall("knifunptr_libgtk35444_gtk_pad_controller_new")
external fun gtk_pad_controller_new(window: CValuesRef<GtkWindow>?, group: CValuesRef<GActionGroup>?, pad: CValuesRef<GdkDevice>?): CPointer<GtkPadController>?

@CCall("knifunptr_libgtk35445_gtk_pad_controller_set_action_entries")
external fun gtk_pad_controller_set_action_entries(controller: CValuesRef<GtkPadController>?, entries: CValuesRef<GtkPadActionEntry>?, n_entries: gint): Unit

@CCall("knifunptr_libgtk35446_gtk_pad_controller_set_action")
external fun gtk_pad_controller_set_action(controller: CValuesRef<GtkPadController>?, type: GtkPadActionType, index: gint, mode: gint, @CCall.CString label: String?, @CCall.CString action_name: String?): Unit

@CCall("knifunptr_libgtk35447_gtk_paper_size_get_type")
external fun gtk_paper_size_get_type(): GType

@CCall("knifunptr_libgtk35448_gtk_paper_size_new")
external fun gtk_paper_size_new(@CCall.CString name: String?): CPointer<GtkPaperSize>?

@CCall("knifunptr_libgtk35449_gtk_paper_size_new_from_ppd")
external fun gtk_paper_size_new_from_ppd(@CCall.CString ppd_name: String?, @CCall.CString ppd_display_name: String?, width: gdouble, height: gdouble): CPointer<GtkPaperSize>?

@CCall("knifunptr_libgtk35450_gtk_paper_size_new_from_ipp")
external fun gtk_paper_size_new_from_ipp(@CCall.CString ipp_name: String?, width: gdouble, height: gdouble): CPointer<GtkPaperSize>?

@CCall("knifunptr_libgtk35451_gtk_paper_size_new_custom")
external fun gtk_paper_size_new_custom(@CCall.CString name: String?, @CCall.CString display_name: String?, width: gdouble, height: gdouble, unit: GtkUnit): CPointer<GtkPaperSize>?

@CCall("knifunptr_libgtk35452_gtk_paper_size_copy")
external fun gtk_paper_size_copy(other: CValuesRef<GtkPaperSize>?): CPointer<GtkPaperSize>?

@CCall("knifunptr_libgtk35453_gtk_paper_size_free")
external fun gtk_paper_size_free(size: CValuesRef<GtkPaperSize>?): Unit

@CCall("knifunptr_libgtk35454_gtk_paper_size_is_equal")
external fun gtk_paper_size_is_equal(size1: CValuesRef<GtkPaperSize>?, size2: CValuesRef<GtkPaperSize>?): gboolean

@CCall("knifunptr_libgtk35455_gtk_paper_size_get_paper_sizes")
external fun gtk_paper_size_get_paper_sizes(include_custom: gboolean): CPointer<GList>?

@CCall("knifunptr_libgtk35456_gtk_paper_size_get_name")
external fun gtk_paper_size_get_name(size: CValuesRef<GtkPaperSize>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk35457_gtk_paper_size_get_display_name")
external fun gtk_paper_size_get_display_name(size: CValuesRef<GtkPaperSize>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk35458_gtk_paper_size_get_ppd_name")
external fun gtk_paper_size_get_ppd_name(size: CValuesRef<GtkPaperSize>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk35459_gtk_paper_size_get_width")
external fun gtk_paper_size_get_width(size: CValuesRef<GtkPaperSize>?, unit: GtkUnit): gdouble

@CCall("knifunptr_libgtk35460_gtk_paper_size_get_height")
external fun gtk_paper_size_get_height(size: CValuesRef<GtkPaperSize>?, unit: GtkUnit): gdouble

@CCall("knifunptr_libgtk35461_gtk_paper_size_is_custom")
external fun gtk_paper_size_is_custom(size: CValuesRef<GtkPaperSize>?): gboolean

@CCall("knifunptr_libgtk35462_gtk_paper_size_is_ipp")
external fun gtk_paper_size_is_ipp(size: CValuesRef<GtkPaperSize>?): gboolean

@CCall("knifunptr_libgtk35463_gtk_paper_size_set_size")
external fun gtk_paper_size_set_size(size: CValuesRef<GtkPaperSize>?, width: gdouble, height: gdouble, unit: GtkUnit): Unit

@CCall("knifunptr_libgtk35464_gtk_paper_size_get_default_top_margin")
external fun gtk_paper_size_get_default_top_margin(size: CValuesRef<GtkPaperSize>?, unit: GtkUnit): gdouble

@CCall("knifunptr_libgtk35465_gtk_paper_size_get_default_bottom_margin")
external fun gtk_paper_size_get_default_bottom_margin(size: CValuesRef<GtkPaperSize>?, unit: GtkUnit): gdouble

@CCall("knifunptr_libgtk35466_gtk_paper_size_get_default_left_margin")
external fun gtk_paper_size_get_default_left_margin(size: CValuesRef<GtkPaperSize>?, unit: GtkUnit): gdouble

@CCall("knifunptr_libgtk35467_gtk_paper_size_get_default_right_margin")
external fun gtk_paper_size_get_default_right_margin(size: CValuesRef<GtkPaperSize>?, unit: GtkUnit): gdouble

@CCall("knifunptr_libgtk35468_gtk_paper_size_get_default")
external fun gtk_paper_size_get_default(): CPointer<gcharVar>?

@CCall("knifunptr_libgtk35469_gtk_paper_size_new_from_key_file")
external fun gtk_paper_size_new_from_key_file(key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GtkPaperSize>?

@CCall("knifunptr_libgtk35470_gtk_paper_size_to_key_file")
external fun gtk_paper_size_to_key_file(size: CValuesRef<GtkPaperSize>?, key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?): Unit

@CCall("knifunptr_libgtk35471_gtk_paper_size_new_from_gvariant")
external fun gtk_paper_size_new_from_gvariant(variant: CValuesRef<GVariant>?): CPointer<GtkPaperSize>?

@CCall("knifunptr_libgtk35472_gtk_paper_size_to_gvariant")
external fun gtk_paper_size_to_gvariant(paper_size: CValuesRef<GtkPaperSize>?): CPointer<GVariant>?

@CCall("knifunptr_libgtk35473_gtk_page_setup_get_type")
external fun gtk_page_setup_get_type(): GType

@CCall("knifunptr_libgtk35474_gtk_page_setup_new")
external fun gtk_page_setup_new(): CPointer<GtkPageSetup>?

@CCall("knifunptr_libgtk35475_gtk_page_setup_copy")
external fun gtk_page_setup_copy(other: CValuesRef<GtkPageSetup>?): CPointer<GtkPageSetup>?

@CCall("knifunptr_libgtk35476_gtk_page_setup_get_orientation")
external fun gtk_page_setup_get_orientation(setup: CValuesRef<GtkPageSetup>?): GtkPageOrientation

@CCall("knifunptr_libgtk35477_gtk_page_setup_set_orientation")
external fun gtk_page_setup_set_orientation(setup: CValuesRef<GtkPageSetup>?, orientation: GtkPageOrientation): Unit

@CCall("knifunptr_libgtk35478_gtk_page_setup_get_paper_size")
external fun gtk_page_setup_get_paper_size(setup: CValuesRef<GtkPageSetup>?): CPointer<GtkPaperSize>?

@CCall("knifunptr_libgtk35479_gtk_page_setup_set_paper_size")
external fun gtk_page_setup_set_paper_size(setup: CValuesRef<GtkPageSetup>?, size: CValuesRef<GtkPaperSize>?): Unit

@CCall("knifunptr_libgtk35480_gtk_page_setup_get_top_margin")
external fun gtk_page_setup_get_top_margin(setup: CValuesRef<GtkPageSetup>?, unit: GtkUnit): gdouble

@CCall("knifunptr_libgtk35481_gtk_page_setup_set_top_margin")
external fun gtk_page_setup_set_top_margin(setup: CValuesRef<GtkPageSetup>?, margin: gdouble, unit: GtkUnit): Unit

@CCall("knifunptr_libgtk35482_gtk_page_setup_get_bottom_margin")
external fun gtk_page_setup_get_bottom_margin(setup: CValuesRef<GtkPageSetup>?, unit: GtkUnit): gdouble

@CCall("knifunptr_libgtk35483_gtk_page_setup_set_bottom_margin")
external fun gtk_page_setup_set_bottom_margin(setup: CValuesRef<GtkPageSetup>?, margin: gdouble, unit: GtkUnit): Unit

@CCall("knifunptr_libgtk35484_gtk_page_setup_get_left_margin")
external fun gtk_page_setup_get_left_margin(setup: CValuesRef<GtkPageSetup>?, unit: GtkUnit): gdouble

@CCall("knifunptr_libgtk35485_gtk_page_setup_set_left_margin")
external fun gtk_page_setup_set_left_margin(setup: CValuesRef<GtkPageSetup>?, margin: gdouble, unit: GtkUnit): Unit

@CCall("knifunptr_libgtk35486_gtk_page_setup_get_right_margin")
external fun gtk_page_setup_get_right_margin(setup: CValuesRef<GtkPageSetup>?, unit: GtkUnit): gdouble

@CCall("knifunptr_libgtk35487_gtk_page_setup_set_right_margin")
external fun gtk_page_setup_set_right_margin(setup: CValuesRef<GtkPageSetup>?, margin: gdouble, unit: GtkUnit): Unit

@CCall("knifunptr_libgtk35488_gtk_page_setup_set_paper_size_and_default_margins")
external fun gtk_page_setup_set_paper_size_and_default_margins(setup: CValuesRef<GtkPageSetup>?, size: CValuesRef<GtkPaperSize>?): Unit

@CCall("knifunptr_libgtk35489_gtk_page_setup_get_paper_width")
external fun gtk_page_setup_get_paper_width(setup: CValuesRef<GtkPageSetup>?, unit: GtkUnit): gdouble

@CCall("knifunptr_libgtk35490_gtk_page_setup_get_paper_height")
external fun gtk_page_setup_get_paper_height(setup: CValuesRef<GtkPageSetup>?, unit: GtkUnit): gdouble

@CCall("knifunptr_libgtk35491_gtk_page_setup_get_page_width")
external fun gtk_page_setup_get_page_width(setup: CValuesRef<GtkPageSetup>?, unit: GtkUnit): gdouble

@CCall("knifunptr_libgtk35492_gtk_page_setup_get_page_height")
external fun gtk_page_setup_get_page_height(setup: CValuesRef<GtkPageSetup>?, unit: GtkUnit): gdouble

@CCall("knifunptr_libgtk35493_gtk_page_setup_new_from_file")
external fun gtk_page_setup_new_from_file(@CCall.CString file_name: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GtkPageSetup>?

@CCall("knifunptr_libgtk35494_gtk_page_setup_load_file")
external fun gtk_page_setup_load_file(setup: CValuesRef<GtkPageSetup>?, @CCall.CString file_name: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk35495_gtk_page_setup_to_file")
external fun gtk_page_setup_to_file(setup: CValuesRef<GtkPageSetup>?, @CCall.CString file_name: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk35496_gtk_page_setup_new_from_key_file")
external fun gtk_page_setup_new_from_key_file(key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GtkPageSetup>?

@CCall("knifunptr_libgtk35497_gtk_page_setup_load_key_file")
external fun gtk_page_setup_load_key_file(setup: CValuesRef<GtkPageSetup>?, key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk35498_gtk_page_setup_to_key_file")
external fun gtk_page_setup_to_key_file(setup: CValuesRef<GtkPageSetup>?, key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?): Unit

@CCall("knifunptr_libgtk35499_gtk_page_setup_to_gvariant")
external fun gtk_page_setup_to_gvariant(setup: CValuesRef<GtkPageSetup>?): CPointer<GVariant>?

@CCall("knifunptr_libgtk35500_gtk_page_setup_new_from_gvariant")
external fun gtk_page_setup_new_from_gvariant(variant: CValuesRef<GVariant>?): CPointer<GtkPageSetup>?

@CCall("knifunptr_libgtk35501_gtk_paned_get_type")
external fun gtk_paned_get_type(): GType

@CCall("knifunptr_libgtk35502_gtk_paned_new")
external fun gtk_paned_new(orientation: GtkOrientation): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35503_gtk_paned_add1")
external fun gtk_paned_add1(paned: CValuesRef<GtkPaned>?, child: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk35504_gtk_paned_add2")
external fun gtk_paned_add2(paned: CValuesRef<GtkPaned>?, child: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk35505_gtk_paned_pack1")
external fun gtk_paned_pack1(paned: CValuesRef<GtkPaned>?, child: CValuesRef<GtkWidget>?, resize: gboolean, shrink: gboolean): Unit

@CCall("knifunptr_libgtk35506_gtk_paned_pack2")
external fun gtk_paned_pack2(paned: CValuesRef<GtkPaned>?, child: CValuesRef<GtkWidget>?, resize: gboolean, shrink: gboolean): Unit

@CCall("knifunptr_libgtk35507_gtk_paned_get_position")
external fun gtk_paned_get_position(paned: CValuesRef<GtkPaned>?): gint

@CCall("knifunptr_libgtk35508_gtk_paned_set_position")
external fun gtk_paned_set_position(paned: CValuesRef<GtkPaned>?, position: gint): Unit

@CCall("knifunptr_libgtk35509_gtk_paned_get_child1")
external fun gtk_paned_get_child1(paned: CValuesRef<GtkPaned>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35510_gtk_paned_get_child2")
external fun gtk_paned_get_child2(paned: CValuesRef<GtkPaned>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35511_gtk_paned_get_handle_window")
external fun gtk_paned_get_handle_window(paned: CValuesRef<GtkPaned>?): CPointer<GdkWindow>?

@CCall("knifunptr_libgtk35512_gtk_paned_set_wide_handle")
external fun gtk_paned_set_wide_handle(paned: CValuesRef<GtkPaned>?, wide: gboolean): Unit

@CCall("knifunptr_libgtk35513_gtk_paned_get_wide_handle")
external fun gtk_paned_get_wide_handle(paned: CValuesRef<GtkPaned>?): gboolean

@CCall("knifunptr_libgtk35514_gtk_places_sidebar_get_type")
external fun gtk_places_sidebar_get_type(): GType

@CCall("knifunptr_libgtk35515_gtk_places_sidebar_new")
external fun gtk_places_sidebar_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35516_gtk_places_sidebar_get_open_flags")
external fun gtk_places_sidebar_get_open_flags(sidebar: CValuesRef<GtkPlacesSidebar>?): GtkPlacesOpenFlags

@CCall("knifunptr_libgtk35517_gtk_places_sidebar_set_open_flags")
external fun gtk_places_sidebar_set_open_flags(sidebar: CValuesRef<GtkPlacesSidebar>?, flags: GtkPlacesOpenFlags): Unit

@CCall("knifunptr_libgtk35518_gtk_places_sidebar_get_location")
external fun gtk_places_sidebar_get_location(sidebar: CValuesRef<GtkPlacesSidebar>?): CPointer<GFile>?

@CCall("knifunptr_libgtk35519_gtk_places_sidebar_set_location")
external fun gtk_places_sidebar_set_location(sidebar: CValuesRef<GtkPlacesSidebar>?, location: CValuesRef<GFile>?): Unit

@CCall("knifunptr_libgtk35520_gtk_places_sidebar_get_show_recent")
external fun gtk_places_sidebar_get_show_recent(sidebar: CValuesRef<GtkPlacesSidebar>?): gboolean

@CCall("knifunptr_libgtk35521_gtk_places_sidebar_set_show_recent")
external fun gtk_places_sidebar_set_show_recent(sidebar: CValuesRef<GtkPlacesSidebar>?, show_recent: gboolean): Unit

@CCall("knifunptr_libgtk35522_gtk_places_sidebar_get_show_desktop")
external fun gtk_places_sidebar_get_show_desktop(sidebar: CValuesRef<GtkPlacesSidebar>?): gboolean

@CCall("knifunptr_libgtk35523_gtk_places_sidebar_set_show_desktop")
external fun gtk_places_sidebar_set_show_desktop(sidebar: CValuesRef<GtkPlacesSidebar>?, show_desktop: gboolean): Unit

@CCall("knifunptr_libgtk35524_gtk_places_sidebar_get_show_connect_to_server")
external fun gtk_places_sidebar_get_show_connect_to_server(sidebar: CValuesRef<GtkPlacesSidebar>?): gboolean

@CCall("knifunptr_libgtk35525_gtk_places_sidebar_set_show_connect_to_server")
external fun gtk_places_sidebar_set_show_connect_to_server(sidebar: CValuesRef<GtkPlacesSidebar>?, show_connect_to_server: gboolean): Unit

@CCall("knifunptr_libgtk35526_gtk_places_sidebar_get_show_enter_location")
external fun gtk_places_sidebar_get_show_enter_location(sidebar: CValuesRef<GtkPlacesSidebar>?): gboolean

@CCall("knifunptr_libgtk35527_gtk_places_sidebar_set_show_enter_location")
external fun gtk_places_sidebar_set_show_enter_location(sidebar: CValuesRef<GtkPlacesSidebar>?, show_enter_location: gboolean): Unit

@CCall("knifunptr_libgtk35528_gtk_places_sidebar_set_local_only")
external fun gtk_places_sidebar_set_local_only(sidebar: CValuesRef<GtkPlacesSidebar>?, local_only: gboolean): Unit

@CCall("knifunptr_libgtk35529_gtk_places_sidebar_get_local_only")
external fun gtk_places_sidebar_get_local_only(sidebar: CValuesRef<GtkPlacesSidebar>?): gboolean

@CCall("knifunptr_libgtk35530_gtk_places_sidebar_add_shortcut")
external fun gtk_places_sidebar_add_shortcut(sidebar: CValuesRef<GtkPlacesSidebar>?, location: CValuesRef<GFile>?): Unit

@CCall("knifunptr_libgtk35531_gtk_places_sidebar_remove_shortcut")
external fun gtk_places_sidebar_remove_shortcut(sidebar: CValuesRef<GtkPlacesSidebar>?, location: CValuesRef<GFile>?): Unit

@CCall("knifunptr_libgtk35532_gtk_places_sidebar_list_shortcuts")
external fun gtk_places_sidebar_list_shortcuts(sidebar: CValuesRef<GtkPlacesSidebar>?): CPointer<GSList>?

@CCall("knifunptr_libgtk35533_gtk_places_sidebar_get_nth_bookmark")
external fun gtk_places_sidebar_get_nth_bookmark(sidebar: CValuesRef<GtkPlacesSidebar>?, n: gint): CPointer<GFile>?

@CCall("knifunptr_libgtk35534_gtk_places_sidebar_set_drop_targets_visible")
external fun gtk_places_sidebar_set_drop_targets_visible(sidebar: CValuesRef<GtkPlacesSidebar>?, visible: gboolean, context: CValuesRef<GdkDragContext>?): Unit

@CCall("knifunptr_libgtk35535_gtk_places_sidebar_get_show_trash")
external fun gtk_places_sidebar_get_show_trash(sidebar: CValuesRef<GtkPlacesSidebar>?): gboolean

@CCall("knifunptr_libgtk35536_gtk_places_sidebar_set_show_trash")
external fun gtk_places_sidebar_set_show_trash(sidebar: CValuesRef<GtkPlacesSidebar>?, show_trash: gboolean): Unit

@CCall("knifunptr_libgtk35537_gtk_places_sidebar_set_show_other_locations")
external fun gtk_places_sidebar_set_show_other_locations(sidebar: CValuesRef<GtkPlacesSidebar>?, show_other_locations: gboolean): Unit

@CCall("knifunptr_libgtk35538_gtk_places_sidebar_get_show_other_locations")
external fun gtk_places_sidebar_get_show_other_locations(sidebar: CValuesRef<GtkPlacesSidebar>?): gboolean

@CCall("knifunptr_libgtk35539_gtk_places_sidebar_set_show_starred_location")
external fun gtk_places_sidebar_set_show_starred_location(sidebar: CValuesRef<GtkPlacesSidebar>?, show_starred_location: gboolean): Unit

@CCall("knifunptr_libgtk35540_gtk_places_sidebar_get_show_starred_location")
external fun gtk_places_sidebar_get_show_starred_location(sidebar: CValuesRef<GtkPlacesSidebar>?): gboolean

@CCall("knifunptr_libgtk35541_gtk_popover_menu_get_type")
external fun gtk_popover_menu_get_type(): GType

@CCall("knifunptr_libgtk35542_gtk_popover_menu_new")
external fun gtk_popover_menu_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35543_gtk_popover_menu_open_submenu")
external fun gtk_popover_menu_open_submenu(popover: CValuesRef<GtkPopoverMenu>?, @CCall.CString name: String?): Unit

@CCall("knifunptr_libgtk35544_gtk_print_context_get_type")
external fun gtk_print_context_get_type(): GType

@CCall("knifunptr_libgtk35545_gtk_print_context_get_cairo_context")
external fun gtk_print_context_get_cairo_context(context: CValuesRef<GtkPrintContext>?): CPointer<cairo_t>?

@CCall("knifunptr_libgtk35546_gtk_print_context_get_page_setup")
external fun gtk_print_context_get_page_setup(context: CValuesRef<GtkPrintContext>?): CPointer<GtkPageSetup>?

@CCall("knifunptr_libgtk35547_gtk_print_context_get_width")
external fun gtk_print_context_get_width(context: CValuesRef<GtkPrintContext>?): gdouble

@CCall("knifunptr_libgtk35548_gtk_print_context_get_height")
external fun gtk_print_context_get_height(context: CValuesRef<GtkPrintContext>?): gdouble

@CCall("knifunptr_libgtk35549_gtk_print_context_get_dpi_x")
external fun gtk_print_context_get_dpi_x(context: CValuesRef<GtkPrintContext>?): gdouble

@CCall("knifunptr_libgtk35550_gtk_print_context_get_dpi_y")
external fun gtk_print_context_get_dpi_y(context: CValuesRef<GtkPrintContext>?): gdouble

@CCall("knifunptr_libgtk35551_gtk_print_context_get_hard_margins")
external fun gtk_print_context_get_hard_margins(context: CValuesRef<GtkPrintContext>?, top: CValuesRef<gdoubleVar>?, bottom: CValuesRef<gdoubleVar>?, left: CValuesRef<gdoubleVar>?, right: CValuesRef<gdoubleVar>?): gboolean

@CCall("knifunptr_libgtk35552_gtk_print_context_get_pango_fontmap")
external fun gtk_print_context_get_pango_fontmap(context: CValuesRef<GtkPrintContext>?): CPointer<PangoFontMap>?

@CCall("knifunptr_libgtk35553_gtk_print_context_create_pango_context")
external fun gtk_print_context_create_pango_context(context: CValuesRef<GtkPrintContext>?): CPointer<PangoContext>?

@CCall("knifunptr_libgtk35554_gtk_print_context_create_pango_layout")
external fun gtk_print_context_create_pango_layout(context: CValuesRef<GtkPrintContext>?): CPointer<PangoLayout>?

@CCall("knifunptr_libgtk35555_gtk_print_context_set_cairo_context")
external fun gtk_print_context_set_cairo_context(context: CValuesRef<GtkPrintContext>?, cr: CValuesRef<cairo_t>?, dpi_x: Double, dpi_y: Double): Unit

@CCall("knifunptr_libgtk35556_gtk_print_settings_get_type")
external fun gtk_print_settings_get_type(): GType

@CCall("knifunptr_libgtk35557_gtk_print_settings_new")
external fun gtk_print_settings_new(): CPointer<GtkPrintSettings>?

@CCall("knifunptr_libgtk35558_gtk_print_settings_copy")
external fun gtk_print_settings_copy(other: CValuesRef<GtkPrintSettings>?): CPointer<GtkPrintSettings>?

@CCall("knifunptr_libgtk35559_gtk_print_settings_new_from_file")
external fun gtk_print_settings_new_from_file(@CCall.CString file_name: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GtkPrintSettings>?

@CCall("knifunptr_libgtk35560_gtk_print_settings_load_file")
external fun gtk_print_settings_load_file(settings: CValuesRef<GtkPrintSettings>?, @CCall.CString file_name: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk35561_gtk_print_settings_to_file")
external fun gtk_print_settings_to_file(settings: CValuesRef<GtkPrintSettings>?, @CCall.CString file_name: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk35562_gtk_print_settings_new_from_key_file")
external fun gtk_print_settings_new_from_key_file(key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GtkPrintSettings>?

@CCall("knifunptr_libgtk35563_gtk_print_settings_load_key_file")
external fun gtk_print_settings_load_key_file(settings: CValuesRef<GtkPrintSettings>?, key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk35564_gtk_print_settings_to_key_file")
external fun gtk_print_settings_to_key_file(settings: CValuesRef<GtkPrintSettings>?, key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?): Unit

@CCall("knifunptr_libgtk35565_gtk_print_settings_has_key")
external fun gtk_print_settings_has_key(settings: CValuesRef<GtkPrintSettings>?, @CCall.CString key: String?): gboolean

@CCall("knifunptr_libgtk35566_gtk_print_settings_get")
external fun gtk_print_settings_get(settings: CValuesRef<GtkPrintSettings>?, @CCall.CString key: String?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk35567_gtk_print_settings_set")
external fun gtk_print_settings_set(settings: CValuesRef<GtkPrintSettings>?, @CCall.CString key: String?, @CCall.CString value: String?): Unit

@CCall("knifunptr_libgtk35568_gtk_print_settings_unset")
external fun gtk_print_settings_unset(settings: CValuesRef<GtkPrintSettings>?, @CCall.CString key: String?): Unit

@CCall("knifunptr_libgtk35569_gtk_print_settings_foreach")
external fun gtk_print_settings_foreach(settings: CValuesRef<GtkPrintSettings>?, func: GtkPrintSettingsFunc?, user_data: gpointer?): Unit

@CCall("knifunptr_libgtk35570_gtk_print_settings_get_bool")
external fun gtk_print_settings_get_bool(settings: CValuesRef<GtkPrintSettings>?, @CCall.CString key: String?): gboolean

@CCall("knifunptr_libgtk35571_gtk_print_settings_set_bool")
external fun gtk_print_settings_set_bool(settings: CValuesRef<GtkPrintSettings>?, @CCall.CString key: String?, value: gboolean): Unit

@CCall("knifunptr_libgtk35572_gtk_print_settings_get_double")
external fun gtk_print_settings_get_double(settings: CValuesRef<GtkPrintSettings>?, @CCall.CString key: String?): gdouble

@CCall("knifunptr_libgtk35573_gtk_print_settings_get_double_with_default")
external fun gtk_print_settings_get_double_with_default(settings: CValuesRef<GtkPrintSettings>?, @CCall.CString key: String?, def: gdouble): gdouble

@CCall("knifunptr_libgtk35574_gtk_print_settings_set_double")
external fun gtk_print_settings_set_double(settings: CValuesRef<GtkPrintSettings>?, @CCall.CString key: String?, value: gdouble): Unit

@CCall("knifunptr_libgtk35575_gtk_print_settings_get_length")
external fun gtk_print_settings_get_length(settings: CValuesRef<GtkPrintSettings>?, @CCall.CString key: String?, unit: GtkUnit): gdouble

@CCall("knifunptr_libgtk35576_gtk_print_settings_set_length")
external fun gtk_print_settings_set_length(settings: CValuesRef<GtkPrintSettings>?, @CCall.CString key: String?, value: gdouble, unit: GtkUnit): Unit

@CCall("knifunptr_libgtk35577_gtk_print_settings_get_int")
external fun gtk_print_settings_get_int(settings: CValuesRef<GtkPrintSettings>?, @CCall.CString key: String?): gint

@CCall("knifunptr_libgtk35578_gtk_print_settings_get_int_with_default")
external fun gtk_print_settings_get_int_with_default(settings: CValuesRef<GtkPrintSettings>?, @CCall.CString key: String?, def: gint): gint

@CCall("knifunptr_libgtk35579_gtk_print_settings_set_int")
external fun gtk_print_settings_set_int(settings: CValuesRef<GtkPrintSettings>?, @CCall.CString key: String?, value: gint): Unit

@CCall("knifunptr_libgtk35580_gtk_print_settings_get_printer")
external fun gtk_print_settings_get_printer(settings: CValuesRef<GtkPrintSettings>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk35581_gtk_print_settings_set_printer")
external fun gtk_print_settings_set_printer(settings: CValuesRef<GtkPrintSettings>?, @CCall.CString printer: String?): Unit

@CCall("knifunptr_libgtk35582_gtk_print_settings_get_orientation")
external fun gtk_print_settings_get_orientation(settings: CValuesRef<GtkPrintSettings>?): GtkPageOrientation

@CCall("knifunptr_libgtk35583_gtk_print_settings_set_orientation")
external fun gtk_print_settings_set_orientation(settings: CValuesRef<GtkPrintSettings>?, orientation: GtkPageOrientation): Unit

@CCall("knifunptr_libgtk35584_gtk_print_settings_get_paper_size")
external fun gtk_print_settings_get_paper_size(settings: CValuesRef<GtkPrintSettings>?): CPointer<GtkPaperSize>?

@CCall("knifunptr_libgtk35585_gtk_print_settings_set_paper_size")
external fun gtk_print_settings_set_paper_size(settings: CValuesRef<GtkPrintSettings>?, paper_size: CValuesRef<GtkPaperSize>?): Unit

@CCall("knifunptr_libgtk35586_gtk_print_settings_get_paper_width")
external fun gtk_print_settings_get_paper_width(settings: CValuesRef<GtkPrintSettings>?, unit: GtkUnit): gdouble

@CCall("knifunptr_libgtk35587_gtk_print_settings_set_paper_width")
external fun gtk_print_settings_set_paper_width(settings: CValuesRef<GtkPrintSettings>?, width: gdouble, unit: GtkUnit): Unit

@CCall("knifunptr_libgtk35588_gtk_print_settings_get_paper_height")
external fun gtk_print_settings_get_paper_height(settings: CValuesRef<GtkPrintSettings>?, unit: GtkUnit): gdouble

@CCall("knifunptr_libgtk35589_gtk_print_settings_set_paper_height")
external fun gtk_print_settings_set_paper_height(settings: CValuesRef<GtkPrintSettings>?, height: gdouble, unit: GtkUnit): Unit

@CCall("knifunptr_libgtk35590_gtk_print_settings_get_use_color")
external fun gtk_print_settings_get_use_color(settings: CValuesRef<GtkPrintSettings>?): gboolean

@CCall("knifunptr_libgtk35591_gtk_print_settings_set_use_color")
external fun gtk_print_settings_set_use_color(settings: CValuesRef<GtkPrintSettings>?, use_color: gboolean): Unit

@CCall("knifunptr_libgtk35592_gtk_print_settings_get_collate")
external fun gtk_print_settings_get_collate(settings: CValuesRef<GtkPrintSettings>?): gboolean

@CCall("knifunptr_libgtk35593_gtk_print_settings_set_collate")
external fun gtk_print_settings_set_collate(settings: CValuesRef<GtkPrintSettings>?, collate: gboolean): Unit

@CCall("knifunptr_libgtk35594_gtk_print_settings_get_reverse")
external fun gtk_print_settings_get_reverse(settings: CValuesRef<GtkPrintSettings>?): gboolean

@CCall("knifunptr_libgtk35595_gtk_print_settings_set_reverse")
external fun gtk_print_settings_set_reverse(settings: CValuesRef<GtkPrintSettings>?, reverse: gboolean): Unit

@CCall("knifunptr_libgtk35596_gtk_print_settings_get_duplex")
external fun gtk_print_settings_get_duplex(settings: CValuesRef<GtkPrintSettings>?): GtkPrintDuplex

@CCall("knifunptr_libgtk35597_gtk_print_settings_set_duplex")
external fun gtk_print_settings_set_duplex(settings: CValuesRef<GtkPrintSettings>?, duplex: GtkPrintDuplex): Unit

@CCall("knifunptr_libgtk35598_gtk_print_settings_get_quality")
external fun gtk_print_settings_get_quality(settings: CValuesRef<GtkPrintSettings>?): GtkPrintQuality

@CCall("knifunptr_libgtk35599_gtk_print_settings_set_quality")
external fun gtk_print_settings_set_quality(settings: CValuesRef<GtkPrintSettings>?, quality: GtkPrintQuality): Unit

@CCall("knifunptr_libgtk35600_gtk_print_settings_get_n_copies")
external fun gtk_print_settings_get_n_copies(settings: CValuesRef<GtkPrintSettings>?): gint

@CCall("knifunptr_libgtk35601_gtk_print_settings_set_n_copies")
external fun gtk_print_settings_set_n_copies(settings: CValuesRef<GtkPrintSettings>?, num_copies: gint): Unit

@CCall("knifunptr_libgtk35602_gtk_print_settings_get_number_up")
external fun gtk_print_settings_get_number_up(settings: CValuesRef<GtkPrintSettings>?): gint

@CCall("knifunptr_libgtk35603_gtk_print_settings_set_number_up")
external fun gtk_print_settings_set_number_up(settings: CValuesRef<GtkPrintSettings>?, number_up: gint): Unit

@CCall("knifunptr_libgtk35604_gtk_print_settings_get_number_up_layout")
external fun gtk_print_settings_get_number_up_layout(settings: CValuesRef<GtkPrintSettings>?): GtkNumberUpLayout

@CCall("knifunptr_libgtk35605_gtk_print_settings_set_number_up_layout")
external fun gtk_print_settings_set_number_up_layout(settings: CValuesRef<GtkPrintSettings>?, number_up_layout: GtkNumberUpLayout): Unit

@CCall("knifunptr_libgtk35606_gtk_print_settings_get_resolution")
external fun gtk_print_settings_get_resolution(settings: CValuesRef<GtkPrintSettings>?): gint

@CCall("knifunptr_libgtk35607_gtk_print_settings_set_resolution")
external fun gtk_print_settings_set_resolution(settings: CValuesRef<GtkPrintSettings>?, resolution: gint): Unit

@CCall("knifunptr_libgtk35608_gtk_print_settings_get_resolution_x")
external fun gtk_print_settings_get_resolution_x(settings: CValuesRef<GtkPrintSettings>?): gint

@CCall("knifunptr_libgtk35609_gtk_print_settings_get_resolution_y")
external fun gtk_print_settings_get_resolution_y(settings: CValuesRef<GtkPrintSettings>?): gint

@CCall("knifunptr_libgtk35610_gtk_print_settings_set_resolution_xy")
external fun gtk_print_settings_set_resolution_xy(settings: CValuesRef<GtkPrintSettings>?, resolution_x: gint, resolution_y: gint): Unit

@CCall("knifunptr_libgtk35611_gtk_print_settings_get_printer_lpi")
external fun gtk_print_settings_get_printer_lpi(settings: CValuesRef<GtkPrintSettings>?): gdouble

@CCall("knifunptr_libgtk35612_gtk_print_settings_set_printer_lpi")
external fun gtk_print_settings_set_printer_lpi(settings: CValuesRef<GtkPrintSettings>?, lpi: gdouble): Unit

@CCall("knifunptr_libgtk35613_gtk_print_settings_get_scale")
external fun gtk_print_settings_get_scale(settings: CValuesRef<GtkPrintSettings>?): gdouble

@CCall("knifunptr_libgtk35614_gtk_print_settings_set_scale")
external fun gtk_print_settings_set_scale(settings: CValuesRef<GtkPrintSettings>?, scale: gdouble): Unit

@CCall("knifunptr_libgtk35615_gtk_print_settings_get_print_pages")
external fun gtk_print_settings_get_print_pages(settings: CValuesRef<GtkPrintSettings>?): GtkPrintPages

@CCall("knifunptr_libgtk35616_gtk_print_settings_set_print_pages")
external fun gtk_print_settings_set_print_pages(settings: CValuesRef<GtkPrintSettings>?, pages: GtkPrintPages): Unit

@CCall("knifunptr_libgtk35617_gtk_print_settings_get_page_ranges")
external fun gtk_print_settings_get_page_ranges(settings: CValuesRef<GtkPrintSettings>?, num_ranges: CValuesRef<gintVar>?): CPointer<GtkPageRange>?

@CCall("knifunptr_libgtk35618_gtk_print_settings_set_page_ranges")
external fun gtk_print_settings_set_page_ranges(settings: CValuesRef<GtkPrintSettings>?, page_ranges: CValuesRef<GtkPageRange>?, num_ranges: gint): Unit

@CCall("knifunptr_libgtk35619_gtk_print_settings_get_page_set")
external fun gtk_print_settings_get_page_set(settings: CValuesRef<GtkPrintSettings>?): GtkPageSet

@CCall("knifunptr_libgtk35620_gtk_print_settings_set_page_set")
external fun gtk_print_settings_set_page_set(settings: CValuesRef<GtkPrintSettings>?, page_set: GtkPageSet): Unit

@CCall("knifunptr_libgtk35621_gtk_print_settings_get_default_source")
external fun gtk_print_settings_get_default_source(settings: CValuesRef<GtkPrintSettings>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk35622_gtk_print_settings_set_default_source")
external fun gtk_print_settings_set_default_source(settings: CValuesRef<GtkPrintSettings>?, @CCall.CString default_source: String?): Unit

@CCall("knifunptr_libgtk35623_gtk_print_settings_get_media_type")
external fun gtk_print_settings_get_media_type(settings: CValuesRef<GtkPrintSettings>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk35624_gtk_print_settings_set_media_type")
external fun gtk_print_settings_set_media_type(settings: CValuesRef<GtkPrintSettings>?, @CCall.CString media_type: String?): Unit

@CCall("knifunptr_libgtk35625_gtk_print_settings_get_dither")
external fun gtk_print_settings_get_dither(settings: CValuesRef<GtkPrintSettings>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk35626_gtk_print_settings_set_dither")
external fun gtk_print_settings_set_dither(settings: CValuesRef<GtkPrintSettings>?, @CCall.CString dither: String?): Unit

@CCall("knifunptr_libgtk35627_gtk_print_settings_get_finishings")
external fun gtk_print_settings_get_finishings(settings: CValuesRef<GtkPrintSettings>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk35628_gtk_print_settings_set_finishings")
external fun gtk_print_settings_set_finishings(settings: CValuesRef<GtkPrintSettings>?, @CCall.CString finishings: String?): Unit

@CCall("knifunptr_libgtk35629_gtk_print_settings_get_output_bin")
external fun gtk_print_settings_get_output_bin(settings: CValuesRef<GtkPrintSettings>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk35630_gtk_print_settings_set_output_bin")
external fun gtk_print_settings_set_output_bin(settings: CValuesRef<GtkPrintSettings>?, @CCall.CString output_bin: String?): Unit

@CCall("knifunptr_libgtk35631_gtk_print_settings_to_gvariant")
external fun gtk_print_settings_to_gvariant(settings: CValuesRef<GtkPrintSettings>?): CPointer<GVariant>?

@CCall("knifunptr_libgtk35632_gtk_print_settings_new_from_gvariant")
external fun gtk_print_settings_new_from_gvariant(variant: CValuesRef<GVariant>?): CPointer<GtkPrintSettings>?

@CCall("knifunptr_libgtk35633_gtk_print_operation_preview_get_type")
external fun gtk_print_operation_preview_get_type(): GType

@CCall("knifunptr_libgtk35634_gtk_print_operation_preview_render_page")
external fun gtk_print_operation_preview_render_page(preview: CValuesRef<GtkPrintOperationPreview>?, page_nr: gint): Unit

@CCall("knifunptr_libgtk35635_gtk_print_operation_preview_end_preview")
external fun gtk_print_operation_preview_end_preview(preview: CValuesRef<GtkPrintOperationPreview>?): Unit

@CCall("knifunptr_libgtk35636_gtk_print_operation_preview_is_selected")
external fun gtk_print_operation_preview_is_selected(preview: CValuesRef<GtkPrintOperationPreview>?, page_nr: gint): gboolean

@CCall("knifunptr_libgtk35637_gtk_print_error_quark")
external fun gtk_print_error_quark(): GQuark

@CCall("knifunptr_libgtk35638_gtk_print_operation_get_type")
external fun gtk_print_operation_get_type(): GType

@CCall("knifunptr_libgtk35639_gtk_print_operation_new")
external fun gtk_print_operation_new(): CPointer<GtkPrintOperation>?

@CCall("knifunptr_libgtk35640_gtk_print_operation_set_default_page_setup")
external fun gtk_print_operation_set_default_page_setup(op: CValuesRef<GtkPrintOperation>?, default_page_setup: CValuesRef<GtkPageSetup>?): Unit

@CCall("knifunptr_libgtk35641_gtk_print_operation_get_default_page_setup")
external fun gtk_print_operation_get_default_page_setup(op: CValuesRef<GtkPrintOperation>?): CPointer<GtkPageSetup>?

@CCall("knifunptr_libgtk35642_gtk_print_operation_set_print_settings")
external fun gtk_print_operation_set_print_settings(op: CValuesRef<GtkPrintOperation>?, print_settings: CValuesRef<GtkPrintSettings>?): Unit

@CCall("knifunptr_libgtk35643_gtk_print_operation_get_print_settings")
external fun gtk_print_operation_get_print_settings(op: CValuesRef<GtkPrintOperation>?): CPointer<GtkPrintSettings>?

@CCall("knifunptr_libgtk35644_gtk_print_operation_set_job_name")
external fun gtk_print_operation_set_job_name(op: CValuesRef<GtkPrintOperation>?, @CCall.CString job_name: String?): Unit

@CCall("knifunptr_libgtk35645_gtk_print_operation_set_n_pages")
external fun gtk_print_operation_set_n_pages(op: CValuesRef<GtkPrintOperation>?, n_pages: gint): Unit

@CCall("knifunptr_libgtk35646_gtk_print_operation_set_current_page")
external fun gtk_print_operation_set_current_page(op: CValuesRef<GtkPrintOperation>?, current_page: gint): Unit

@CCall("knifunptr_libgtk35647_gtk_print_operation_set_use_full_page")
external fun gtk_print_operation_set_use_full_page(op: CValuesRef<GtkPrintOperation>?, full_page: gboolean): Unit

@CCall("knifunptr_libgtk35648_gtk_print_operation_set_unit")
external fun gtk_print_operation_set_unit(op: CValuesRef<GtkPrintOperation>?, unit: GtkUnit): Unit

@CCall("knifunptr_libgtk35649_gtk_print_operation_set_export_filename")
external fun gtk_print_operation_set_export_filename(op: CValuesRef<GtkPrintOperation>?, @CCall.CString filename: String?): Unit

@CCall("knifunptr_libgtk35650_gtk_print_operation_set_track_print_status")
external fun gtk_print_operation_set_track_print_status(op: CValuesRef<GtkPrintOperation>?, track_status: gboolean): Unit

@CCall("knifunptr_libgtk35651_gtk_print_operation_set_show_progress")
external fun gtk_print_operation_set_show_progress(op: CValuesRef<GtkPrintOperation>?, show_progress: gboolean): Unit

@CCall("knifunptr_libgtk35652_gtk_print_operation_set_allow_async")
external fun gtk_print_operation_set_allow_async(op: CValuesRef<GtkPrintOperation>?, allow_async: gboolean): Unit

@CCall("knifunptr_libgtk35653_gtk_print_operation_set_custom_tab_label")
external fun gtk_print_operation_set_custom_tab_label(op: CValuesRef<GtkPrintOperation>?, @CCall.CString label: String?): Unit

@CCall("knifunptr_libgtk35654_gtk_print_operation_run")
external fun gtk_print_operation_run(op: CValuesRef<GtkPrintOperation>?, action: GtkPrintOperationAction, parent: CValuesRef<GtkWindow>?, error: CValuesRef<CPointerVar<GError>>?): GtkPrintOperationResult

@CCall("knifunptr_libgtk35655_gtk_print_operation_get_error")
external fun gtk_print_operation_get_error(op: CValuesRef<GtkPrintOperation>?, error: CValuesRef<CPointerVar<GError>>?): Unit

@CCall("knifunptr_libgtk35656_gtk_print_operation_get_status")
external fun gtk_print_operation_get_status(op: CValuesRef<GtkPrintOperation>?): GtkPrintStatus

@CCall("knifunptr_libgtk35657_gtk_print_operation_get_status_string")
external fun gtk_print_operation_get_status_string(op: CValuesRef<GtkPrintOperation>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk35658_gtk_print_operation_is_finished")
external fun gtk_print_operation_is_finished(op: CValuesRef<GtkPrintOperation>?): gboolean

@CCall("knifunptr_libgtk35659_gtk_print_operation_cancel")
external fun gtk_print_operation_cancel(op: CValuesRef<GtkPrintOperation>?): Unit

@CCall("knifunptr_libgtk35660_gtk_print_operation_draw_page_finish")
external fun gtk_print_operation_draw_page_finish(op: CValuesRef<GtkPrintOperation>?): Unit

@CCall("knifunptr_libgtk35661_gtk_print_operation_set_defer_drawing")
external fun gtk_print_operation_set_defer_drawing(op: CValuesRef<GtkPrintOperation>?): Unit

@CCall("knifunptr_libgtk35662_gtk_print_operation_set_support_selection")
external fun gtk_print_operation_set_support_selection(op: CValuesRef<GtkPrintOperation>?, support_selection: gboolean): Unit

@CCall("knifunptr_libgtk35663_gtk_print_operation_get_support_selection")
external fun gtk_print_operation_get_support_selection(op: CValuesRef<GtkPrintOperation>?): gboolean

@CCall("knifunptr_libgtk35664_gtk_print_operation_set_has_selection")
external fun gtk_print_operation_set_has_selection(op: CValuesRef<GtkPrintOperation>?, has_selection: gboolean): Unit

@CCall("knifunptr_libgtk35665_gtk_print_operation_get_has_selection")
external fun gtk_print_operation_get_has_selection(op: CValuesRef<GtkPrintOperation>?): gboolean

@CCall("knifunptr_libgtk35666_gtk_print_operation_set_embed_page_setup")
external fun gtk_print_operation_set_embed_page_setup(op: CValuesRef<GtkPrintOperation>?, embed: gboolean): Unit

@CCall("knifunptr_libgtk35667_gtk_print_operation_get_embed_page_setup")
external fun gtk_print_operation_get_embed_page_setup(op: CValuesRef<GtkPrintOperation>?): gboolean

@CCall("knifunptr_libgtk35668_gtk_print_operation_get_n_pages_to_print")
external fun gtk_print_operation_get_n_pages_to_print(op: CValuesRef<GtkPrintOperation>?): gint

@CCall("knifunptr_libgtk35669_gtk_print_run_page_setup_dialog")
external fun gtk_print_run_page_setup_dialog(parent: CValuesRef<GtkWindow>?, page_setup: CValuesRef<GtkPageSetup>?, settings: CValuesRef<GtkPrintSettings>?): CPointer<GtkPageSetup>?

@CCall("knifunptr_libgtk35670_gtk_print_run_page_setup_dialog_async")
external fun gtk_print_run_page_setup_dialog_async(parent: CValuesRef<GtkWindow>?, page_setup: CValuesRef<GtkPageSetup>?, settings: CValuesRef<GtkPrintSettings>?, done_cb: GtkPageSetupDoneFunc?, data: gpointer?): Unit

@CCall("knifunptr_libgtk35671_gtk_progress_bar_get_type")
external fun gtk_progress_bar_get_type(): GType

@CCall("knifunptr_libgtk35672_gtk_progress_bar_new")
external fun gtk_progress_bar_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35673_gtk_progress_bar_pulse")
external fun gtk_progress_bar_pulse(pbar: CValuesRef<GtkProgressBar>?): Unit

@CCall("knifunptr_libgtk35674_gtk_progress_bar_set_text")
external fun gtk_progress_bar_set_text(pbar: CValuesRef<GtkProgressBar>?, @CCall.CString text: String?): Unit

@CCall("knifunptr_libgtk35675_gtk_progress_bar_set_fraction")
external fun gtk_progress_bar_set_fraction(pbar: CValuesRef<GtkProgressBar>?, fraction: gdouble): Unit

@CCall("knifunptr_libgtk35676_gtk_progress_bar_set_pulse_step")
external fun gtk_progress_bar_set_pulse_step(pbar: CValuesRef<GtkProgressBar>?, fraction: gdouble): Unit

@CCall("knifunptr_libgtk35677_gtk_progress_bar_set_inverted")
external fun gtk_progress_bar_set_inverted(pbar: CValuesRef<GtkProgressBar>?, inverted: gboolean): Unit

@CCall("knifunptr_libgtk35678_gtk_progress_bar_get_text")
external fun gtk_progress_bar_get_text(pbar: CValuesRef<GtkProgressBar>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk35679_gtk_progress_bar_get_fraction")
external fun gtk_progress_bar_get_fraction(pbar: CValuesRef<GtkProgressBar>?): gdouble

@CCall("knifunptr_libgtk35680_gtk_progress_bar_get_pulse_step")
external fun gtk_progress_bar_get_pulse_step(pbar: CValuesRef<GtkProgressBar>?): gdouble

@CCall("knifunptr_libgtk35681_gtk_progress_bar_get_inverted")
external fun gtk_progress_bar_get_inverted(pbar: CValuesRef<GtkProgressBar>?): gboolean

@CCall("knifunptr_libgtk35682_gtk_progress_bar_set_ellipsize")
external fun gtk_progress_bar_set_ellipsize(pbar: CValuesRef<GtkProgressBar>?, mode: PangoEllipsizeMode): Unit

@CCall("knifunptr_libgtk35683_gtk_progress_bar_get_ellipsize")
external fun gtk_progress_bar_get_ellipsize(pbar: CValuesRef<GtkProgressBar>?): PangoEllipsizeMode

@CCall("knifunptr_libgtk35684_gtk_progress_bar_set_show_text")
external fun gtk_progress_bar_set_show_text(pbar: CValuesRef<GtkProgressBar>?, show_text: gboolean): Unit

@CCall("knifunptr_libgtk35685_gtk_progress_bar_get_show_text")
external fun gtk_progress_bar_get_show_text(pbar: CValuesRef<GtkProgressBar>?): gboolean

@CCall("knifunptr_libgtk35686_gtk_radio_button_get_type")
external fun gtk_radio_button_get_type(): GType

@CCall("knifunptr_libgtk35687_gtk_radio_button_new")
external fun gtk_radio_button_new(group: CValuesRef<GSList>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35688_gtk_radio_button_new_from_widget")
external fun gtk_radio_button_new_from_widget(radio_group_member: CValuesRef<GtkRadioButton>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35689_gtk_radio_button_new_with_label")
external fun gtk_radio_button_new_with_label(group: CValuesRef<GSList>?, @CCall.CString label: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35690_gtk_radio_button_new_with_label_from_widget")
external fun gtk_radio_button_new_with_label_from_widget(radio_group_member: CValuesRef<GtkRadioButton>?, @CCall.CString label: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35691_gtk_radio_button_new_with_mnemonic")
external fun gtk_radio_button_new_with_mnemonic(group: CValuesRef<GSList>?, @CCall.CString label: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35692_gtk_radio_button_new_with_mnemonic_from_widget")
external fun gtk_radio_button_new_with_mnemonic_from_widget(radio_group_member: CValuesRef<GtkRadioButton>?, @CCall.CString label: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35693_gtk_radio_button_get_group")
external fun gtk_radio_button_get_group(radio_button: CValuesRef<GtkRadioButton>?): CPointer<GSList>?

@CCall("knifunptr_libgtk35694_gtk_radio_button_set_group")
external fun gtk_radio_button_set_group(radio_button: CValuesRef<GtkRadioButton>?, group: CValuesRef<GSList>?): Unit

@CCall("knifunptr_libgtk35695_gtk_radio_button_join_group")
external fun gtk_radio_button_join_group(radio_button: CValuesRef<GtkRadioButton>?, group_source: CValuesRef<GtkRadioButton>?): Unit

@CCall("knifunptr_libgtk35696_gtk_radio_menu_item_get_type")
external fun gtk_radio_menu_item_get_type(): GType

@CCall("knifunptr_libgtk35697_gtk_radio_menu_item_new")
external fun gtk_radio_menu_item_new(group: CValuesRef<GSList>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35698_gtk_radio_menu_item_new_with_label")
external fun gtk_radio_menu_item_new_with_label(group: CValuesRef<GSList>?, @CCall.CString label: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35699_gtk_radio_menu_item_new_with_mnemonic")
external fun gtk_radio_menu_item_new_with_mnemonic(group: CValuesRef<GSList>?, @CCall.CString label: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35700_gtk_radio_menu_item_new_from_widget")
external fun gtk_radio_menu_item_new_from_widget(group: CValuesRef<GtkRadioMenuItem>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35701_gtk_radio_menu_item_new_with_mnemonic_from_widget")
external fun gtk_radio_menu_item_new_with_mnemonic_from_widget(group: CValuesRef<GtkRadioMenuItem>?, @CCall.CString label: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35702_gtk_radio_menu_item_new_with_label_from_widget")
external fun gtk_radio_menu_item_new_with_label_from_widget(group: CValuesRef<GtkRadioMenuItem>?, @CCall.CString label: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35703_gtk_radio_menu_item_get_group")
external fun gtk_radio_menu_item_get_group(radio_menu_item: CValuesRef<GtkRadioMenuItem>?): CPointer<GSList>?

@CCall("knifunptr_libgtk35704_gtk_radio_menu_item_set_group")
external fun gtk_radio_menu_item_set_group(radio_menu_item: CValuesRef<GtkRadioMenuItem>?, group: CValuesRef<GSList>?): Unit

@CCall("knifunptr_libgtk35705_gtk_radio_menu_item_join_group")
external fun gtk_radio_menu_item_join_group(radio_menu_item: CValuesRef<GtkRadioMenuItem>?, group_source: CValuesRef<GtkRadioMenuItem>?): Unit

@CCall("knifunptr_libgtk35706_gtk_toggle_tool_button_get_type")
external fun gtk_toggle_tool_button_get_type(): GType

@CCall("knifunptr_libgtk35707_gtk_toggle_tool_button_new")
external fun gtk_toggle_tool_button_new(): CPointer<GtkToolItem>?

@CCall("knifunptr_libgtk35708_gtk_toggle_tool_button_new_from_stock")
external fun gtk_toggle_tool_button_new_from_stock(@CCall.CString stock_id: String?): CPointer<GtkToolItem>?

@CCall("knifunptr_libgtk35709_gtk_toggle_tool_button_set_active")
external fun gtk_toggle_tool_button_set_active(button: CValuesRef<GtkToggleToolButton>?, is_active: gboolean): Unit

@CCall("knifunptr_libgtk35710_gtk_toggle_tool_button_get_active")
external fun gtk_toggle_tool_button_get_active(button: CValuesRef<GtkToggleToolButton>?): gboolean

@CCall("knifunptr_libgtk35711_gtk_radio_tool_button_get_type")
external fun gtk_radio_tool_button_get_type(): GType

@CCall("knifunptr_libgtk35712_gtk_radio_tool_button_new")
external fun gtk_radio_tool_button_new(group: CValuesRef<GSList>?): CPointer<GtkToolItem>?

@CCall("knifunptr_libgtk35713_gtk_radio_tool_button_new_from_stock")
external fun gtk_radio_tool_button_new_from_stock(group: CValuesRef<GSList>?, @CCall.CString stock_id: String?): CPointer<GtkToolItem>?

@CCall("knifunptr_libgtk35714_gtk_radio_tool_button_new_from_widget")
external fun gtk_radio_tool_button_new_from_widget(group: CValuesRef<GtkRadioToolButton>?): CPointer<GtkToolItem>?

@CCall("knifunptr_libgtk35715_gtk_radio_tool_button_new_with_stock_from_widget")
external fun gtk_radio_tool_button_new_with_stock_from_widget(group: CValuesRef<GtkRadioToolButton>?, @CCall.CString stock_id: String?): CPointer<GtkToolItem>?

@CCall("knifunptr_libgtk35716_gtk_radio_tool_button_get_group")
external fun gtk_radio_tool_button_get_group(button: CValuesRef<GtkRadioToolButton>?): CPointer<GSList>?

@CCall("knifunptr_libgtk35717_gtk_radio_tool_button_set_group")
external fun gtk_radio_tool_button_set_group(button: CValuesRef<GtkRadioToolButton>?, group: CValuesRef<GSList>?): Unit

@CCall("knifunptr_libgtk35718_gtk_range_get_type")
external fun gtk_range_get_type(): GType

@CCall("knifunptr_libgtk35719_gtk_range_set_adjustment")
external fun gtk_range_set_adjustment(range: CValuesRef<GtkRange>?, adjustment: CValuesRef<GtkAdjustment>?): Unit

@CCall("knifunptr_libgtk35720_gtk_range_get_adjustment")
external fun gtk_range_get_adjustment(range: CValuesRef<GtkRange>?): CPointer<GtkAdjustment>?

@CCall("knifunptr_libgtk35721_gtk_range_set_inverted")
external fun gtk_range_set_inverted(range: CValuesRef<GtkRange>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk35722_gtk_range_get_inverted")
external fun gtk_range_get_inverted(range: CValuesRef<GtkRange>?): gboolean

@CCall("knifunptr_libgtk35723_gtk_range_set_flippable")
external fun gtk_range_set_flippable(range: CValuesRef<GtkRange>?, flippable: gboolean): Unit

@CCall("knifunptr_libgtk35724_gtk_range_get_flippable")
external fun gtk_range_get_flippable(range: CValuesRef<GtkRange>?): gboolean

@CCall("knifunptr_libgtk35725_gtk_range_set_slider_size_fixed")
external fun gtk_range_set_slider_size_fixed(range: CValuesRef<GtkRange>?, size_fixed: gboolean): Unit

@CCall("knifunptr_libgtk35726_gtk_range_get_slider_size_fixed")
external fun gtk_range_get_slider_size_fixed(range: CValuesRef<GtkRange>?): gboolean

@CCall("knifunptr_libgtk35727_gtk_range_set_min_slider_size")
external fun gtk_range_set_min_slider_size(range: CValuesRef<GtkRange>?, min_size: gint): Unit

@CCall("knifunptr_libgtk35728_gtk_range_get_min_slider_size")
external fun gtk_range_get_min_slider_size(range: CValuesRef<GtkRange>?): gint

@CCall("knifunptr_libgtk35729_gtk_range_get_range_rect")
external fun gtk_range_get_range_rect(range: CValuesRef<GtkRange>?, range_rect: CValuesRef<GdkRectangle>?): Unit

@CCall("knifunptr_libgtk35730_gtk_range_get_slider_range")
external fun gtk_range_get_slider_range(range: CValuesRef<GtkRange>?, slider_start: CValuesRef<gintVar>?, slider_end: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk35731_gtk_range_set_lower_stepper_sensitivity")
external fun gtk_range_set_lower_stepper_sensitivity(range: CValuesRef<GtkRange>?, sensitivity: GtkSensitivityType): Unit

@CCall("knifunptr_libgtk35732_gtk_range_get_lower_stepper_sensitivity")
external fun gtk_range_get_lower_stepper_sensitivity(range: CValuesRef<GtkRange>?): GtkSensitivityType

@CCall("knifunptr_libgtk35733_gtk_range_set_upper_stepper_sensitivity")
external fun gtk_range_set_upper_stepper_sensitivity(range: CValuesRef<GtkRange>?, sensitivity: GtkSensitivityType): Unit

@CCall("knifunptr_libgtk35734_gtk_range_get_upper_stepper_sensitivity")
external fun gtk_range_get_upper_stepper_sensitivity(range: CValuesRef<GtkRange>?): GtkSensitivityType

@CCall("knifunptr_libgtk35735_gtk_range_set_increments")
external fun gtk_range_set_increments(range: CValuesRef<GtkRange>?, step: gdouble, page: gdouble): Unit

@CCall("knifunptr_libgtk35736_gtk_range_set_range")
external fun gtk_range_set_range(range: CValuesRef<GtkRange>?, min: gdouble, max: gdouble): Unit

@CCall("knifunptr_libgtk35737_gtk_range_set_value")
external fun gtk_range_set_value(range: CValuesRef<GtkRange>?, value: gdouble): Unit

@CCall("knifunptr_libgtk35738_gtk_range_get_value")
external fun gtk_range_get_value(range: CValuesRef<GtkRange>?): gdouble

@CCall("knifunptr_libgtk35739_gtk_range_set_show_fill_level")
external fun gtk_range_set_show_fill_level(range: CValuesRef<GtkRange>?, show_fill_level: gboolean): Unit

@CCall("knifunptr_libgtk35740_gtk_range_get_show_fill_level")
external fun gtk_range_get_show_fill_level(range: CValuesRef<GtkRange>?): gboolean

@CCall("knifunptr_libgtk35741_gtk_range_set_restrict_to_fill_level")
external fun gtk_range_set_restrict_to_fill_level(range: CValuesRef<GtkRange>?, restrict_to_fill_level: gboolean): Unit

@CCall("knifunptr_libgtk35742_gtk_range_get_restrict_to_fill_level")
external fun gtk_range_get_restrict_to_fill_level(range: CValuesRef<GtkRange>?): gboolean

@CCall("knifunptr_libgtk35743_gtk_range_set_fill_level")
external fun gtk_range_set_fill_level(range: CValuesRef<GtkRange>?, fill_level: gdouble): Unit

@CCall("knifunptr_libgtk35744_gtk_range_get_fill_level")
external fun gtk_range_get_fill_level(range: CValuesRef<GtkRange>?): gdouble

@CCall("knifunptr_libgtk35745_gtk_range_set_round_digits")
external fun gtk_range_set_round_digits(range: CValuesRef<GtkRange>?, round_digits: gint): Unit

@CCall("knifunptr_libgtk35746_gtk_range_get_round_digits")
external fun gtk_range_get_round_digits(range: CValuesRef<GtkRange>?): gint

@CCall("knifunptr_libgtk35747_gtk_recent_manager_error_quark")
external fun gtk_recent_manager_error_quark(): GQuark

@CCall("knifunptr_libgtk35748_gtk_recent_manager_get_type")
external fun gtk_recent_manager_get_type(): GType

@CCall("knifunptr_libgtk35749_gtk_recent_manager_new")
external fun gtk_recent_manager_new(): CPointer<GtkRecentManager>?

@CCall("knifunptr_libgtk35750_gtk_recent_manager_get_default")
external fun gtk_recent_manager_get_default(): CPointer<GtkRecentManager>?

@CCall("knifunptr_libgtk35751_gtk_recent_manager_add_item")
external fun gtk_recent_manager_add_item(manager: CValuesRef<GtkRecentManager>?, @CCall.CString uri: String?): gboolean

@CCall("knifunptr_libgtk35752_gtk_recent_manager_add_full")
external fun gtk_recent_manager_add_full(manager: CValuesRef<GtkRecentManager>?, @CCall.CString uri: String?, recent_data: CValuesRef<GtkRecentData>?): gboolean

@CCall("knifunptr_libgtk35753_gtk_recent_manager_remove_item")
external fun gtk_recent_manager_remove_item(manager: CValuesRef<GtkRecentManager>?, @CCall.CString uri: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk35754_gtk_recent_manager_lookup_item")
external fun gtk_recent_manager_lookup_item(manager: CValuesRef<GtkRecentManager>?, @CCall.CString uri: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GtkRecentInfo>?

@CCall("knifunptr_libgtk35755_gtk_recent_manager_has_item")
external fun gtk_recent_manager_has_item(manager: CValuesRef<GtkRecentManager>?, @CCall.CString uri: String?): gboolean

@CCall("knifunptr_libgtk35756_gtk_recent_manager_move_item")
external fun gtk_recent_manager_move_item(manager: CValuesRef<GtkRecentManager>?, @CCall.CString uri: String?, @CCall.CString new_uri: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk35757_gtk_recent_manager_get_items")
external fun gtk_recent_manager_get_items(manager: CValuesRef<GtkRecentManager>?): CPointer<GList>?

@CCall("knifunptr_libgtk35758_gtk_recent_manager_purge_items")
external fun gtk_recent_manager_purge_items(manager: CValuesRef<GtkRecentManager>?, error: CValuesRef<CPointerVar<GError>>?): gint

@CCall("knifunptr_libgtk35759_gtk_recent_info_get_type")
external fun gtk_recent_info_get_type(): GType

@CCall("knifunptr_libgtk35760_gtk_recent_info_ref")
external fun gtk_recent_info_ref(info: CValuesRef<GtkRecentInfo>?): CPointer<GtkRecentInfo>?

@CCall("knifunptr_libgtk35761_gtk_recent_info_unref")
external fun gtk_recent_info_unref(info: CValuesRef<GtkRecentInfo>?): Unit

@CCall("knifunptr_libgtk35762_gtk_recent_info_get_uri")
external fun gtk_recent_info_get_uri(info: CValuesRef<GtkRecentInfo>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk35763_gtk_recent_info_get_display_name")
external fun gtk_recent_info_get_display_name(info: CValuesRef<GtkRecentInfo>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk35764_gtk_recent_info_get_description")
external fun gtk_recent_info_get_description(info: CValuesRef<GtkRecentInfo>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk35765_gtk_recent_info_get_mime_type")
external fun gtk_recent_info_get_mime_type(info: CValuesRef<GtkRecentInfo>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk35766_gtk_recent_info_get_added")
external fun gtk_recent_info_get_added(info: CValuesRef<GtkRecentInfo>?): time_t

@CCall("knifunptr_libgtk35767_gtk_recent_info_get_modified")
external fun gtk_recent_info_get_modified(info: CValuesRef<GtkRecentInfo>?): time_t

@CCall("knifunptr_libgtk35768_gtk_recent_info_get_visited")
external fun gtk_recent_info_get_visited(info: CValuesRef<GtkRecentInfo>?): time_t

@CCall("knifunptr_libgtk35769_gtk_recent_info_get_private_hint")
external fun gtk_recent_info_get_private_hint(info: CValuesRef<GtkRecentInfo>?): gboolean

@CCall("knifunptr_libgtk35770_gtk_recent_info_get_application_info")
external fun gtk_recent_info_get_application_info(info: CValuesRef<GtkRecentInfo>?, @CCall.CString app_name: String?, app_exec: CValuesRef<CPointerVar<gcharVar>>?, count: CValuesRef<guintVar>?, time_: CValuesRef<time_tVar>?): gboolean

@CCall("knifunptr_libgtk35771_gtk_recent_info_create_app_info")
external fun gtk_recent_info_create_app_info(info: CValuesRef<GtkRecentInfo>?, @CCall.CString app_name: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GAppInfo>?

@CCall("knifunptr_libgtk35772_gtk_recent_info_get_applications")
external fun gtk_recent_info_get_applications(info: CValuesRef<GtkRecentInfo>?, length: CValuesRef<gsizeVar>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_libgtk35773_gtk_recent_info_last_application")
external fun gtk_recent_info_last_application(info: CValuesRef<GtkRecentInfo>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk35774_gtk_recent_info_has_application")
external fun gtk_recent_info_has_application(info: CValuesRef<GtkRecentInfo>?, @CCall.CString app_name: String?): gboolean

@CCall("knifunptr_libgtk35775_gtk_recent_info_get_groups")
external fun gtk_recent_info_get_groups(info: CValuesRef<GtkRecentInfo>?, length: CValuesRef<gsizeVar>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_libgtk35776_gtk_recent_info_has_group")
external fun gtk_recent_info_has_group(info: CValuesRef<GtkRecentInfo>?, @CCall.CString group_name: String?): gboolean

@CCall("knifunptr_libgtk35777_gtk_recent_info_get_icon")
external fun gtk_recent_info_get_icon(info: CValuesRef<GtkRecentInfo>?, size: gint): CPointer<GdkPixbuf>?

@CCall("knifunptr_libgtk35778_gtk_recent_info_get_gicon")
external fun gtk_recent_info_get_gicon(info: CValuesRef<GtkRecentInfo>?): CPointer<GIcon>?

@CCall("knifunptr_libgtk35779_gtk_recent_info_get_short_name")
external fun gtk_recent_info_get_short_name(info: CValuesRef<GtkRecentInfo>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk35780_gtk_recent_info_get_uri_display")
external fun gtk_recent_info_get_uri_display(info: CValuesRef<GtkRecentInfo>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk35781_gtk_recent_info_get_age")
external fun gtk_recent_info_get_age(info: CValuesRef<GtkRecentInfo>?): gint

@CCall("knifunptr_libgtk35782_gtk_recent_info_is_local")
external fun gtk_recent_info_is_local(info: CValuesRef<GtkRecentInfo>?): gboolean

@CCall("knifunptr_libgtk35783_gtk_recent_info_exists")
external fun gtk_recent_info_exists(info: CValuesRef<GtkRecentInfo>?): gboolean

@CCall("knifunptr_libgtk35784_gtk_recent_info_match")
external fun gtk_recent_info_match(info_a: CValuesRef<GtkRecentInfo>?, info_b: CValuesRef<GtkRecentInfo>?): gboolean

@CCall("knifunptr_libgtk35785__gtk_recent_manager_sync")
external fun _gtk_recent_manager_sync(): Unit

@CCall("knifunptr_libgtk35786_gtk_recent_filter_get_type")
external fun gtk_recent_filter_get_type(): GType

@CCall("knifunptr_libgtk35787_gtk_recent_filter_new")
external fun gtk_recent_filter_new(): CPointer<GtkRecentFilter>?

@CCall("knifunptr_libgtk35788_gtk_recent_filter_set_name")
external fun gtk_recent_filter_set_name(filter: CValuesRef<GtkRecentFilter>?, @CCall.CString name: String?): Unit

@CCall("knifunptr_libgtk35789_gtk_recent_filter_get_name")
external fun gtk_recent_filter_get_name(filter: CValuesRef<GtkRecentFilter>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk35790_gtk_recent_filter_add_mime_type")
external fun gtk_recent_filter_add_mime_type(filter: CValuesRef<GtkRecentFilter>?, @CCall.CString mime_type: String?): Unit

@CCall("knifunptr_libgtk35791_gtk_recent_filter_add_pattern")
external fun gtk_recent_filter_add_pattern(filter: CValuesRef<GtkRecentFilter>?, @CCall.CString pattern: String?): Unit

@CCall("knifunptr_libgtk35792_gtk_recent_filter_add_pixbuf_formats")
external fun gtk_recent_filter_add_pixbuf_formats(filter: CValuesRef<GtkRecentFilter>?): Unit

@CCall("knifunptr_libgtk35793_gtk_recent_filter_add_application")
external fun gtk_recent_filter_add_application(filter: CValuesRef<GtkRecentFilter>?, @CCall.CString application: String?): Unit

@CCall("knifunptr_libgtk35794_gtk_recent_filter_add_group")
external fun gtk_recent_filter_add_group(filter: CValuesRef<GtkRecentFilter>?, @CCall.CString group: String?): Unit

@CCall("knifunptr_libgtk35795_gtk_recent_filter_add_age")
external fun gtk_recent_filter_add_age(filter: CValuesRef<GtkRecentFilter>?, days: gint): Unit

@CCall("knifunptr_libgtk35796_gtk_recent_filter_add_custom")
external fun gtk_recent_filter_add_custom(filter: CValuesRef<GtkRecentFilter>?, needed: GtkRecentFilterFlags, func: GtkRecentFilterFunc?, data: gpointer?, data_destroy: GDestroyNotify?): Unit

@CCall("knifunptr_libgtk35797_gtk_recent_filter_get_needed")
external fun gtk_recent_filter_get_needed(filter: CValuesRef<GtkRecentFilter>?): GtkRecentFilterFlags

@CCall("knifunptr_libgtk35798_gtk_recent_filter_filter")
external fun gtk_recent_filter_filter(filter: CValuesRef<GtkRecentFilter>?, filter_info: CValuesRef<GtkRecentFilterInfo>?): gboolean

@CCall("knifunptr_libgtk35799_gtk_recent_chooser_error_quark")
external fun gtk_recent_chooser_error_quark(): GQuark

@CCall("knifunptr_libgtk35800_gtk_recent_chooser_get_type")
external fun gtk_recent_chooser_get_type(): GType

@CCall("knifunptr_libgtk35801_gtk_recent_chooser_set_show_private")
external fun gtk_recent_chooser_set_show_private(chooser: CValuesRef<GtkRecentChooser>?, show_private: gboolean): Unit

@CCall("knifunptr_libgtk35802_gtk_recent_chooser_get_show_private")
external fun gtk_recent_chooser_get_show_private(chooser: CValuesRef<GtkRecentChooser>?): gboolean

@CCall("knifunptr_libgtk35803_gtk_recent_chooser_set_show_not_found")
external fun gtk_recent_chooser_set_show_not_found(chooser: CValuesRef<GtkRecentChooser>?, show_not_found: gboolean): Unit

@CCall("knifunptr_libgtk35804_gtk_recent_chooser_get_show_not_found")
external fun gtk_recent_chooser_get_show_not_found(chooser: CValuesRef<GtkRecentChooser>?): gboolean

@CCall("knifunptr_libgtk35805_gtk_recent_chooser_set_select_multiple")
external fun gtk_recent_chooser_set_select_multiple(chooser: CValuesRef<GtkRecentChooser>?, select_multiple: gboolean): Unit

@CCall("knifunptr_libgtk35806_gtk_recent_chooser_get_select_multiple")
external fun gtk_recent_chooser_get_select_multiple(chooser: CValuesRef<GtkRecentChooser>?): gboolean

@CCall("knifunptr_libgtk35807_gtk_recent_chooser_set_limit")
external fun gtk_recent_chooser_set_limit(chooser: CValuesRef<GtkRecentChooser>?, limit: gint): Unit

@CCall("knifunptr_libgtk35808_gtk_recent_chooser_get_limit")
external fun gtk_recent_chooser_get_limit(chooser: CValuesRef<GtkRecentChooser>?): gint

@CCall("knifunptr_libgtk35809_gtk_recent_chooser_set_local_only")
external fun gtk_recent_chooser_set_local_only(chooser: CValuesRef<GtkRecentChooser>?, local_only: gboolean): Unit

@CCall("knifunptr_libgtk35810_gtk_recent_chooser_get_local_only")
external fun gtk_recent_chooser_get_local_only(chooser: CValuesRef<GtkRecentChooser>?): gboolean

@CCall("knifunptr_libgtk35811_gtk_recent_chooser_set_show_tips")
external fun gtk_recent_chooser_set_show_tips(chooser: CValuesRef<GtkRecentChooser>?, show_tips: gboolean): Unit

@CCall("knifunptr_libgtk35812_gtk_recent_chooser_get_show_tips")
external fun gtk_recent_chooser_get_show_tips(chooser: CValuesRef<GtkRecentChooser>?): gboolean

@CCall("knifunptr_libgtk35813_gtk_recent_chooser_set_show_icons")
external fun gtk_recent_chooser_set_show_icons(chooser: CValuesRef<GtkRecentChooser>?, show_icons: gboolean): Unit

@CCall("knifunptr_libgtk35814_gtk_recent_chooser_get_show_icons")
external fun gtk_recent_chooser_get_show_icons(chooser: CValuesRef<GtkRecentChooser>?): gboolean

@CCall("knifunptr_libgtk35815_gtk_recent_chooser_set_sort_type")
external fun gtk_recent_chooser_set_sort_type(chooser: CValuesRef<GtkRecentChooser>?, sort_type: GtkRecentSortType): Unit

@CCall("knifunptr_libgtk35816_gtk_recent_chooser_get_sort_type")
external fun gtk_recent_chooser_get_sort_type(chooser: CValuesRef<GtkRecentChooser>?): GtkRecentSortType

@CCall("knifunptr_libgtk35817_gtk_recent_chooser_set_sort_func")
external fun gtk_recent_chooser_set_sort_func(chooser: CValuesRef<GtkRecentChooser>?, sort_func: GtkRecentSortFunc?, sort_data: gpointer?, data_destroy: GDestroyNotify?): Unit

@CCall("knifunptr_libgtk35818_gtk_recent_chooser_set_current_uri")
external fun gtk_recent_chooser_set_current_uri(chooser: CValuesRef<GtkRecentChooser>?, @CCall.CString uri: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk35819_gtk_recent_chooser_get_current_uri")
external fun gtk_recent_chooser_get_current_uri(chooser: CValuesRef<GtkRecentChooser>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk35820_gtk_recent_chooser_get_current_item")
external fun gtk_recent_chooser_get_current_item(chooser: CValuesRef<GtkRecentChooser>?): CPointer<GtkRecentInfo>?

@CCall("knifunptr_libgtk35821_gtk_recent_chooser_select_uri")
external fun gtk_recent_chooser_select_uri(chooser: CValuesRef<GtkRecentChooser>?, @CCall.CString uri: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk35822_gtk_recent_chooser_unselect_uri")
external fun gtk_recent_chooser_unselect_uri(chooser: CValuesRef<GtkRecentChooser>?, @CCall.CString uri: String?): Unit

@CCall("knifunptr_libgtk35823_gtk_recent_chooser_select_all")
external fun gtk_recent_chooser_select_all(chooser: CValuesRef<GtkRecentChooser>?): Unit

@CCall("knifunptr_libgtk35824_gtk_recent_chooser_unselect_all")
external fun gtk_recent_chooser_unselect_all(chooser: CValuesRef<GtkRecentChooser>?): Unit

@CCall("knifunptr_libgtk35825_gtk_recent_chooser_get_items")
external fun gtk_recent_chooser_get_items(chooser: CValuesRef<GtkRecentChooser>?): CPointer<GList>?

@CCall("knifunptr_libgtk35826_gtk_recent_chooser_get_uris")
external fun gtk_recent_chooser_get_uris(chooser: CValuesRef<GtkRecentChooser>?, length: CValuesRef<gsizeVar>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_libgtk35827_gtk_recent_chooser_add_filter")
external fun gtk_recent_chooser_add_filter(chooser: CValuesRef<GtkRecentChooser>?, filter: CValuesRef<GtkRecentFilter>?): Unit

@CCall("knifunptr_libgtk35828_gtk_recent_chooser_remove_filter")
external fun gtk_recent_chooser_remove_filter(chooser: CValuesRef<GtkRecentChooser>?, filter: CValuesRef<GtkRecentFilter>?): Unit

@CCall("knifunptr_libgtk35829_gtk_recent_chooser_list_filters")
external fun gtk_recent_chooser_list_filters(chooser: CValuesRef<GtkRecentChooser>?): CPointer<GSList>?

@CCall("knifunptr_libgtk35830_gtk_recent_chooser_set_filter")
external fun gtk_recent_chooser_set_filter(chooser: CValuesRef<GtkRecentChooser>?, filter: CValuesRef<GtkRecentFilter>?): Unit

@CCall("knifunptr_libgtk35831_gtk_recent_chooser_get_filter")
external fun gtk_recent_chooser_get_filter(chooser: CValuesRef<GtkRecentChooser>?): CPointer<GtkRecentFilter>?

@CCall("knifunptr_libgtk35832_gtk_recent_chooser_dialog_get_type")
external fun gtk_recent_chooser_dialog_get_type(): GType

@CCall("knifunptr_libgtk35833_gtk_recent_chooser_dialog_new")
external fun gtk_recent_chooser_dialog_new(@CCall.CString title: String?, parent: CValuesRef<GtkWindow>?, @CCall.CString first_button_text: String?, vararg variadicArguments: Any?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35834_gtk_recent_chooser_dialog_new_for_manager")
external fun gtk_recent_chooser_dialog_new_for_manager(@CCall.CString title: String?, parent: CValuesRef<GtkWindow>?, manager: CValuesRef<GtkRecentManager>?, @CCall.CString first_button_text: String?, vararg variadicArguments: Any?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35835_gtk_recent_chooser_menu_get_type")
external fun gtk_recent_chooser_menu_get_type(): GType

@CCall("knifunptr_libgtk35836_gtk_recent_chooser_menu_new")
external fun gtk_recent_chooser_menu_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35837_gtk_recent_chooser_menu_new_for_manager")
external fun gtk_recent_chooser_menu_new_for_manager(manager: CValuesRef<GtkRecentManager>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35838_gtk_recent_chooser_menu_get_show_numbers")
external fun gtk_recent_chooser_menu_get_show_numbers(menu: CValuesRef<GtkRecentChooserMenu>?): gboolean

@CCall("knifunptr_libgtk35839_gtk_recent_chooser_menu_set_show_numbers")
external fun gtk_recent_chooser_menu_set_show_numbers(menu: CValuesRef<GtkRecentChooserMenu>?, show_numbers: gboolean): Unit

@CCall("knifunptr_libgtk35840_gtk_recent_chooser_widget_get_type")
external fun gtk_recent_chooser_widget_get_type(): GType

@CCall("knifunptr_libgtk35841_gtk_recent_chooser_widget_new")
external fun gtk_recent_chooser_widget_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35842_gtk_recent_chooser_widget_new_for_manager")
external fun gtk_recent_chooser_widget_new_for_manager(manager: CValuesRef<GtkRecentManager>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35843_gtk_render_check")
external fun gtk_render_check(context: CValuesRef<GtkStyleContext>?, cr: CValuesRef<cairo_t>?, x: gdouble, y: gdouble, width: gdouble, height: gdouble): Unit

@CCall("knifunptr_libgtk35844_gtk_render_option")
external fun gtk_render_option(context: CValuesRef<GtkStyleContext>?, cr: CValuesRef<cairo_t>?, x: gdouble, y: gdouble, width: gdouble, height: gdouble): Unit

@CCall("knifunptr_libgtk35845_gtk_render_arrow")
external fun gtk_render_arrow(context: CValuesRef<GtkStyleContext>?, cr: CValuesRef<cairo_t>?, angle: gdouble, x: gdouble, y: gdouble, size: gdouble): Unit

@CCall("knifunptr_libgtk35846_gtk_render_background")
external fun gtk_render_background(context: CValuesRef<GtkStyleContext>?, cr: CValuesRef<cairo_t>?, x: gdouble, y: gdouble, width: gdouble, height: gdouble): Unit

@CCall("knifunptr_libgtk35847_gtk_render_background_get_clip")
external fun gtk_render_background_get_clip(context: CValuesRef<GtkStyleContext>?, x: gdouble, y: gdouble, width: gdouble, height: gdouble, out_clip: CValuesRef<GdkRectangle>?): Unit

@CCall("knifunptr_libgtk35848_gtk_render_frame")
external fun gtk_render_frame(context: CValuesRef<GtkStyleContext>?, cr: CValuesRef<cairo_t>?, x: gdouble, y: gdouble, width: gdouble, height: gdouble): Unit

@CCall("knifunptr_libgtk35849_gtk_render_expander")
external fun gtk_render_expander(context: CValuesRef<GtkStyleContext>?, cr: CValuesRef<cairo_t>?, x: gdouble, y: gdouble, width: gdouble, height: gdouble): Unit

@CCall("knifunptr_libgtk35850_gtk_render_focus")
external fun gtk_render_focus(context: CValuesRef<GtkStyleContext>?, cr: CValuesRef<cairo_t>?, x: gdouble, y: gdouble, width: gdouble, height: gdouble): Unit

@CCall("knifunptr_libgtk35851_gtk_render_layout")
external fun gtk_render_layout(context: CValuesRef<GtkStyleContext>?, cr: CValuesRef<cairo_t>?, x: gdouble, y: gdouble, layout: CValuesRef<PangoLayout>?): Unit

@CCall("knifunptr_libgtk35852_gtk_render_line")
external fun gtk_render_line(context: CValuesRef<GtkStyleContext>?, cr: CValuesRef<cairo_t>?, x0: gdouble, y0: gdouble, x1: gdouble, y1: gdouble): Unit

@CCall("knifunptr_libgtk35853_gtk_render_slider")
external fun gtk_render_slider(context: CValuesRef<GtkStyleContext>?, cr: CValuesRef<cairo_t>?, x: gdouble, y: gdouble, width: gdouble, height: gdouble, orientation: GtkOrientation): Unit

@CCall("knifunptr_libgtk35854_gtk_render_frame_gap")
external fun gtk_render_frame_gap(context: CValuesRef<GtkStyleContext>?, cr: CValuesRef<cairo_t>?, x: gdouble, y: gdouble, width: gdouble, height: gdouble, gap_side: GtkPositionType, xy0_gap: gdouble, xy1_gap: gdouble): Unit

@CCall("knifunptr_libgtk35855_gtk_render_extension")
external fun gtk_render_extension(context: CValuesRef<GtkStyleContext>?, cr: CValuesRef<cairo_t>?, x: gdouble, y: gdouble, width: gdouble, height: gdouble, gap_side: GtkPositionType): Unit

@CCall("knifunptr_libgtk35856_gtk_render_handle")
external fun gtk_render_handle(context: CValuesRef<GtkStyleContext>?, cr: CValuesRef<cairo_t>?, x: gdouble, y: gdouble, width: gdouble, height: gdouble): Unit

@CCall("knifunptr_libgtk35857_gtk_render_activity")
external fun gtk_render_activity(context: CValuesRef<GtkStyleContext>?, cr: CValuesRef<cairo_t>?, x: gdouble, y: gdouble, width: gdouble, height: gdouble): Unit

@CCall("knifunptr_libgtk35858_gtk_render_icon_pixbuf")
external fun gtk_render_icon_pixbuf(context: CValuesRef<GtkStyleContext>?, source: CValuesRef<GtkIconSource>?, size: GtkIconSize): CPointer<GdkPixbuf>?

@CCall("knifunptr_libgtk35859_gtk_render_icon")
external fun gtk_render_icon(context: CValuesRef<GtkStyleContext>?, cr: CValuesRef<cairo_t>?, pixbuf: CValuesRef<GdkPixbuf>?, x: gdouble, y: gdouble): Unit

@CCall("knifunptr_libgtk35860_gtk_render_icon_surface")
external fun gtk_render_icon_surface(context: CValuesRef<GtkStyleContext>?, cr: CValuesRef<cairo_t>?, surface: CValuesRef<cairo_surface_t>?, x: gdouble, y: gdouble): Unit

@CCall("knifunptr_libgtk35861_gtk_revealer_get_type")
external fun gtk_revealer_get_type(): GType

@CCall("knifunptr_libgtk35862_gtk_revealer_new")
external fun gtk_revealer_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35863_gtk_revealer_get_reveal_child")
external fun gtk_revealer_get_reveal_child(revealer: CValuesRef<GtkRevealer>?): gboolean

@CCall("knifunptr_libgtk35864_gtk_revealer_set_reveal_child")
external fun gtk_revealer_set_reveal_child(revealer: CValuesRef<GtkRevealer>?, reveal_child: gboolean): Unit

@CCall("knifunptr_libgtk35865_gtk_revealer_get_child_revealed")
external fun gtk_revealer_get_child_revealed(revealer: CValuesRef<GtkRevealer>?): gboolean

@CCall("knifunptr_libgtk35866_gtk_revealer_get_transition_duration")
external fun gtk_revealer_get_transition_duration(revealer: CValuesRef<GtkRevealer>?): guint

@CCall("knifunptr_libgtk35867_gtk_revealer_set_transition_duration")
external fun gtk_revealer_set_transition_duration(revealer: CValuesRef<GtkRevealer>?, duration: guint): Unit

@CCall("knifunptr_libgtk35868_gtk_revealer_set_transition_type")
external fun gtk_revealer_set_transition_type(revealer: CValuesRef<GtkRevealer>?, transition: GtkRevealerTransitionType): Unit

@CCall("knifunptr_libgtk35869_gtk_revealer_get_transition_type")
external fun gtk_revealer_get_transition_type(revealer: CValuesRef<GtkRevealer>?): GtkRevealerTransitionType

@CCall("knifunptr_libgtk35870_gtk_scale_get_type")
external fun gtk_scale_get_type(): GType

@CCall("knifunptr_libgtk35871_gtk_scale_new")
external fun gtk_scale_new(orientation: GtkOrientation, adjustment: CValuesRef<GtkAdjustment>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35872_gtk_scale_new_with_range")
external fun gtk_scale_new_with_range(orientation: GtkOrientation, min: gdouble, max: gdouble, step: gdouble): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35873_gtk_scale_set_digits")
external fun gtk_scale_set_digits(scale: CValuesRef<GtkScale>?, digits: gint): Unit

@CCall("knifunptr_libgtk35874_gtk_scale_get_digits")
external fun gtk_scale_get_digits(scale: CValuesRef<GtkScale>?): gint

@CCall("knifunptr_libgtk35875_gtk_scale_set_draw_value")
external fun gtk_scale_set_draw_value(scale: CValuesRef<GtkScale>?, draw_value: gboolean): Unit

@CCall("knifunptr_libgtk35876_gtk_scale_get_draw_value")
external fun gtk_scale_get_draw_value(scale: CValuesRef<GtkScale>?): gboolean

@CCall("knifunptr_libgtk35877_gtk_scale_set_has_origin")
external fun gtk_scale_set_has_origin(scale: CValuesRef<GtkScale>?, has_origin: gboolean): Unit

@CCall("knifunptr_libgtk35878_gtk_scale_get_has_origin")
external fun gtk_scale_get_has_origin(scale: CValuesRef<GtkScale>?): gboolean

@CCall("knifunptr_libgtk35879_gtk_scale_set_value_pos")
external fun gtk_scale_set_value_pos(scale: CValuesRef<GtkScale>?, pos: GtkPositionType): Unit

@CCall("knifunptr_libgtk35880_gtk_scale_get_value_pos")
external fun gtk_scale_get_value_pos(scale: CValuesRef<GtkScale>?): GtkPositionType

@CCall("knifunptr_libgtk35881_gtk_scale_get_layout")
external fun gtk_scale_get_layout(scale: CValuesRef<GtkScale>?): CPointer<PangoLayout>?

@CCall("knifunptr_libgtk35882_gtk_scale_get_layout_offsets")
external fun gtk_scale_get_layout_offsets(scale: CValuesRef<GtkScale>?, x: CValuesRef<gintVar>?, y: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk35883_gtk_scale_add_mark")
external fun gtk_scale_add_mark(scale: CValuesRef<GtkScale>?, value: gdouble, position: GtkPositionType, @CCall.CString markup: String?): Unit

@CCall("knifunptr_libgtk35884_gtk_scale_clear_marks")
external fun gtk_scale_clear_marks(scale: CValuesRef<GtkScale>?): Unit

@CCall("knifunptr_libgtk35885_gtk_scale_button_get_type")
external fun gtk_scale_button_get_type(): GType

@CCall("knifunptr_libgtk35886_gtk_scale_button_new")
external fun gtk_scale_button_new(size: GtkIconSize, min: gdouble, max: gdouble, step: gdouble, icons: CValuesRef<CPointerVar<gcharVar>>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35887_gtk_scale_button_set_icons")
external fun gtk_scale_button_set_icons(button: CValuesRef<GtkScaleButton>?, icons: CValuesRef<CPointerVar<gcharVar>>?): Unit

@CCall("knifunptr_libgtk35888_gtk_scale_button_get_value")
external fun gtk_scale_button_get_value(button: CValuesRef<GtkScaleButton>?): gdouble

@CCall("knifunptr_libgtk35889_gtk_scale_button_set_value")
external fun gtk_scale_button_set_value(button: CValuesRef<GtkScaleButton>?, value: gdouble): Unit

@CCall("knifunptr_libgtk35890_gtk_scale_button_get_adjustment")
external fun gtk_scale_button_get_adjustment(button: CValuesRef<GtkScaleButton>?): CPointer<GtkAdjustment>?

@CCall("knifunptr_libgtk35891_gtk_scale_button_set_adjustment")
external fun gtk_scale_button_set_adjustment(button: CValuesRef<GtkScaleButton>?, adjustment: CValuesRef<GtkAdjustment>?): Unit

@CCall("knifunptr_libgtk35892_gtk_scale_button_get_plus_button")
external fun gtk_scale_button_get_plus_button(button: CValuesRef<GtkScaleButton>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35893_gtk_scale_button_get_minus_button")
external fun gtk_scale_button_get_minus_button(button: CValuesRef<GtkScaleButton>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35894_gtk_scale_button_get_popup")
external fun gtk_scale_button_get_popup(button: CValuesRef<GtkScaleButton>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35895_gtk_scrollable_get_type")
external fun gtk_scrollable_get_type(): GType

@CCall("knifunptr_libgtk35896_gtk_scrollable_get_hadjustment")
external fun gtk_scrollable_get_hadjustment(scrollable: CValuesRef<GtkScrollable>?): CPointer<GtkAdjustment>?

@CCall("knifunptr_libgtk35897_gtk_scrollable_set_hadjustment")
external fun gtk_scrollable_set_hadjustment(scrollable: CValuesRef<GtkScrollable>?, hadjustment: CValuesRef<GtkAdjustment>?): Unit

@CCall("knifunptr_libgtk35898_gtk_scrollable_get_vadjustment")
external fun gtk_scrollable_get_vadjustment(scrollable: CValuesRef<GtkScrollable>?): CPointer<GtkAdjustment>?

@CCall("knifunptr_libgtk35899_gtk_scrollable_set_vadjustment")
external fun gtk_scrollable_set_vadjustment(scrollable: CValuesRef<GtkScrollable>?, vadjustment: CValuesRef<GtkAdjustment>?): Unit

@CCall("knifunptr_libgtk35900_gtk_scrollable_get_hscroll_policy")
external fun gtk_scrollable_get_hscroll_policy(scrollable: CValuesRef<GtkScrollable>?): GtkScrollablePolicy

@CCall("knifunptr_libgtk35901_gtk_scrollable_set_hscroll_policy")
external fun gtk_scrollable_set_hscroll_policy(scrollable: CValuesRef<GtkScrollable>?, policy: GtkScrollablePolicy): Unit

@CCall("knifunptr_libgtk35902_gtk_scrollable_get_vscroll_policy")
external fun gtk_scrollable_get_vscroll_policy(scrollable: CValuesRef<GtkScrollable>?): GtkScrollablePolicy

@CCall("knifunptr_libgtk35903_gtk_scrollable_set_vscroll_policy")
external fun gtk_scrollable_set_vscroll_policy(scrollable: CValuesRef<GtkScrollable>?, policy: GtkScrollablePolicy): Unit

@CCall("knifunptr_libgtk35904_gtk_scrollable_get_border")
external fun gtk_scrollable_get_border(scrollable: CValuesRef<GtkScrollable>?, border: CValuesRef<GtkBorder>?): gboolean

@CCall("knifunptr_libgtk35905_gtk_scrollbar_get_type")
external fun gtk_scrollbar_get_type(): GType

@CCall("knifunptr_libgtk35906_gtk_scrollbar_new")
external fun gtk_scrollbar_new(orientation: GtkOrientation, adjustment: CValuesRef<GtkAdjustment>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35907_gtk_scrolled_window_get_type")
external fun gtk_scrolled_window_get_type(): GType

@CCall("knifunptr_libgtk35908_gtk_scrolled_window_new")
external fun gtk_scrolled_window_new(hadjustment: CValuesRef<GtkAdjustment>?, vadjustment: CValuesRef<GtkAdjustment>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35909_gtk_scrolled_window_set_hadjustment")
external fun gtk_scrolled_window_set_hadjustment(scrolled_window: CValuesRef<GtkScrolledWindow>?, hadjustment: CValuesRef<GtkAdjustment>?): Unit

@CCall("knifunptr_libgtk35910_gtk_scrolled_window_set_vadjustment")
external fun gtk_scrolled_window_set_vadjustment(scrolled_window: CValuesRef<GtkScrolledWindow>?, vadjustment: CValuesRef<GtkAdjustment>?): Unit

@CCall("knifunptr_libgtk35911_gtk_scrolled_window_get_hadjustment")
external fun gtk_scrolled_window_get_hadjustment(scrolled_window: CValuesRef<GtkScrolledWindow>?): CPointer<GtkAdjustment>?

@CCall("knifunptr_libgtk35912_gtk_scrolled_window_get_vadjustment")
external fun gtk_scrolled_window_get_vadjustment(scrolled_window: CValuesRef<GtkScrolledWindow>?): CPointer<GtkAdjustment>?

@CCall("knifunptr_libgtk35913_gtk_scrolled_window_get_hscrollbar")
external fun gtk_scrolled_window_get_hscrollbar(scrolled_window: CValuesRef<GtkScrolledWindow>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35914_gtk_scrolled_window_get_vscrollbar")
external fun gtk_scrolled_window_get_vscrollbar(scrolled_window: CValuesRef<GtkScrolledWindow>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35915_gtk_scrolled_window_set_policy")
external fun gtk_scrolled_window_set_policy(scrolled_window: CValuesRef<GtkScrolledWindow>?, hscrollbar_policy: GtkPolicyType, vscrollbar_policy: GtkPolicyType): Unit

@CCall("knifunptr_libgtk35916_gtk_scrolled_window_get_policy")
external fun gtk_scrolled_window_get_policy(scrolled_window: CValuesRef<GtkScrolledWindow>?, hscrollbar_policy: CValuesRef<GtkPolicyType.Var>?, vscrollbar_policy: CValuesRef<GtkPolicyType.Var>?): Unit

@CCall("knifunptr_libgtk35917_gtk_scrolled_window_set_placement")
external fun gtk_scrolled_window_set_placement(scrolled_window: CValuesRef<GtkScrolledWindow>?, window_placement: GtkCornerType): Unit

@CCall("knifunptr_libgtk35918_gtk_scrolled_window_unset_placement")
external fun gtk_scrolled_window_unset_placement(scrolled_window: CValuesRef<GtkScrolledWindow>?): Unit

@CCall("knifunptr_libgtk35919_gtk_scrolled_window_get_placement")
external fun gtk_scrolled_window_get_placement(scrolled_window: CValuesRef<GtkScrolledWindow>?): GtkCornerType

@CCall("knifunptr_libgtk35920_gtk_scrolled_window_set_shadow_type")
external fun gtk_scrolled_window_set_shadow_type(scrolled_window: CValuesRef<GtkScrolledWindow>?, type: GtkShadowType): Unit

@CCall("knifunptr_libgtk35921_gtk_scrolled_window_get_shadow_type")
external fun gtk_scrolled_window_get_shadow_type(scrolled_window: CValuesRef<GtkScrolledWindow>?): GtkShadowType

@CCall("knifunptr_libgtk35922_gtk_scrolled_window_add_with_viewport")
external fun gtk_scrolled_window_add_with_viewport(scrolled_window: CValuesRef<GtkScrolledWindow>?, child: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk35923_gtk_scrolled_window_get_min_content_width")
external fun gtk_scrolled_window_get_min_content_width(scrolled_window: CValuesRef<GtkScrolledWindow>?): gint

@CCall("knifunptr_libgtk35924_gtk_scrolled_window_set_min_content_width")
external fun gtk_scrolled_window_set_min_content_width(scrolled_window: CValuesRef<GtkScrolledWindow>?, width: gint): Unit

@CCall("knifunptr_libgtk35925_gtk_scrolled_window_get_min_content_height")
external fun gtk_scrolled_window_get_min_content_height(scrolled_window: CValuesRef<GtkScrolledWindow>?): gint

@CCall("knifunptr_libgtk35926_gtk_scrolled_window_set_min_content_height")
external fun gtk_scrolled_window_set_min_content_height(scrolled_window: CValuesRef<GtkScrolledWindow>?, height: gint): Unit

@CCall("knifunptr_libgtk35927_gtk_scrolled_window_set_kinetic_scrolling")
external fun gtk_scrolled_window_set_kinetic_scrolling(scrolled_window: CValuesRef<GtkScrolledWindow>?, kinetic_scrolling: gboolean): Unit

@CCall("knifunptr_libgtk35928_gtk_scrolled_window_get_kinetic_scrolling")
external fun gtk_scrolled_window_get_kinetic_scrolling(scrolled_window: CValuesRef<GtkScrolledWindow>?): gboolean

@CCall("knifunptr_libgtk35929_gtk_scrolled_window_set_capture_button_press")
external fun gtk_scrolled_window_set_capture_button_press(scrolled_window: CValuesRef<GtkScrolledWindow>?, capture_button_press: gboolean): Unit

@CCall("knifunptr_libgtk35930_gtk_scrolled_window_get_capture_button_press")
external fun gtk_scrolled_window_get_capture_button_press(scrolled_window: CValuesRef<GtkScrolledWindow>?): gboolean

@CCall("knifunptr_libgtk35931_gtk_scrolled_window_set_overlay_scrolling")
external fun gtk_scrolled_window_set_overlay_scrolling(scrolled_window: CValuesRef<GtkScrolledWindow>?, overlay_scrolling: gboolean): Unit

@CCall("knifunptr_libgtk35932_gtk_scrolled_window_get_overlay_scrolling")
external fun gtk_scrolled_window_get_overlay_scrolling(scrolled_window: CValuesRef<GtkScrolledWindow>?): gboolean

@CCall("knifunptr_libgtk35933_gtk_scrolled_window_set_max_content_width")
external fun gtk_scrolled_window_set_max_content_width(scrolled_window: CValuesRef<GtkScrolledWindow>?, width: gint): Unit

@CCall("knifunptr_libgtk35934_gtk_scrolled_window_get_max_content_width")
external fun gtk_scrolled_window_get_max_content_width(scrolled_window: CValuesRef<GtkScrolledWindow>?): gint

@CCall("knifunptr_libgtk35935_gtk_scrolled_window_set_max_content_height")
external fun gtk_scrolled_window_set_max_content_height(scrolled_window: CValuesRef<GtkScrolledWindow>?, height: gint): Unit

@CCall("knifunptr_libgtk35936_gtk_scrolled_window_get_max_content_height")
external fun gtk_scrolled_window_get_max_content_height(scrolled_window: CValuesRef<GtkScrolledWindow>?): gint

@CCall("knifunptr_libgtk35937_gtk_scrolled_window_set_propagate_natural_width")
external fun gtk_scrolled_window_set_propagate_natural_width(scrolled_window: CValuesRef<GtkScrolledWindow>?, propagate: gboolean): Unit

@CCall("knifunptr_libgtk35938_gtk_scrolled_window_get_propagate_natural_width")
external fun gtk_scrolled_window_get_propagate_natural_width(scrolled_window: CValuesRef<GtkScrolledWindow>?): gboolean

@CCall("knifunptr_libgtk35939_gtk_scrolled_window_set_propagate_natural_height")
external fun gtk_scrolled_window_set_propagate_natural_height(scrolled_window: CValuesRef<GtkScrolledWindow>?, propagate: gboolean): Unit

@CCall("knifunptr_libgtk35940_gtk_scrolled_window_get_propagate_natural_height")
external fun gtk_scrolled_window_get_propagate_natural_height(scrolled_window: CValuesRef<GtkScrolledWindow>?): gboolean

@CCall("knifunptr_libgtk35941_gtk_search_bar_get_type")
external fun gtk_search_bar_get_type(): GType

@CCall("knifunptr_libgtk35942_gtk_search_bar_new")
external fun gtk_search_bar_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35943_gtk_search_bar_connect_entry")
external fun gtk_search_bar_connect_entry(bar: CValuesRef<GtkSearchBar>?, entry: CValuesRef<GtkEntry>?): Unit

@CCall("knifunptr_libgtk35944_gtk_search_bar_get_search_mode")
external fun gtk_search_bar_get_search_mode(bar: CValuesRef<GtkSearchBar>?): gboolean

@CCall("knifunptr_libgtk35945_gtk_search_bar_set_search_mode")
external fun gtk_search_bar_set_search_mode(bar: CValuesRef<GtkSearchBar>?, search_mode: gboolean): Unit

@CCall("knifunptr_libgtk35946_gtk_search_bar_get_show_close_button")
external fun gtk_search_bar_get_show_close_button(bar: CValuesRef<GtkSearchBar>?): gboolean

@CCall("knifunptr_libgtk35947_gtk_search_bar_set_show_close_button")
external fun gtk_search_bar_set_show_close_button(bar: CValuesRef<GtkSearchBar>?, visible: gboolean): Unit

@CCall("knifunptr_libgtk35948_gtk_search_bar_handle_event")
external fun gtk_search_bar_handle_event(bar: CValuesRef<GtkSearchBar>?, event: CValuesRef<GdkEvent>?): gboolean

@CCall("knifunptr_libgtk35949_gtk_search_entry_get_type")
external fun gtk_search_entry_get_type(): GType

@CCall("knifunptr_libgtk35950_gtk_search_entry_new")
external fun gtk_search_entry_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35951_gtk_search_entry_handle_event")
external fun gtk_search_entry_handle_event(entry: CValuesRef<GtkSearchEntry>?, event: CValuesRef<GdkEvent>?): gboolean

@CCall("knifunptr_libgtk35952_gtk_separator_get_type")
external fun gtk_separator_get_type(): GType

@CCall("knifunptr_libgtk35953_gtk_separator_new")
external fun gtk_separator_new(orientation: GtkOrientation): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35954_gtk_separator_menu_item_get_type")
external fun gtk_separator_menu_item_get_type(): GType

@CCall("knifunptr_libgtk35955_gtk_separator_menu_item_new")
external fun gtk_separator_menu_item_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35956_gtk_separator_tool_item_get_type")
external fun gtk_separator_tool_item_get_type(): GType

@CCall("knifunptr_libgtk35957_gtk_separator_tool_item_new")
external fun gtk_separator_tool_item_new(): CPointer<GtkToolItem>?

@CCall("knifunptr_libgtk35958_gtk_separator_tool_item_get_draw")
external fun gtk_separator_tool_item_get_draw(item: CValuesRef<GtkSeparatorToolItem>?): gboolean

@CCall("knifunptr_libgtk35959_gtk_separator_tool_item_set_draw")
external fun gtk_separator_tool_item_set_draw(item: CValuesRef<GtkSeparatorToolItem>?, draw: gboolean): Unit

@CCall("knifunptr_libgtk35960_gtk_settings_get_type")
external fun gtk_settings_get_type(): GType

@CCall("knifunptr_libgtk35961_gtk_settings_get_default")
external fun gtk_settings_get_default(): CPointer<GtkSettings>?

@CCall("knifunptr_libgtk35962_gtk_settings_get_for_screen")
external fun gtk_settings_get_for_screen(screen: CValuesRef<GdkScreen>?): CPointer<GtkSettings>?

@CCall("knifunptr_libgtk35963_gtk_settings_install_property")
external fun gtk_settings_install_property(pspec: CValuesRef<GParamSpec>?): Unit

@CCall("knifunptr_libgtk35964_gtk_settings_install_property_parser")
external fun gtk_settings_install_property_parser(pspec: CValuesRef<GParamSpec>?, parser: GtkRcPropertyParser?): Unit

@CCall("knifunptr_libgtk35965_gtk_rc_property_parse_color")
external fun gtk_rc_property_parse_color(pspec: CValuesRef<GParamSpec>?, gstring: CValuesRef<GString>?, property_value: CValuesRef<GValue>?): gboolean

@CCall("knifunptr_libgtk35966_gtk_rc_property_parse_enum")
external fun gtk_rc_property_parse_enum(pspec: CValuesRef<GParamSpec>?, gstring: CValuesRef<GString>?, property_value: CValuesRef<GValue>?): gboolean

@CCall("knifunptr_libgtk35967_gtk_rc_property_parse_flags")
external fun gtk_rc_property_parse_flags(pspec: CValuesRef<GParamSpec>?, gstring: CValuesRef<GString>?, property_value: CValuesRef<GValue>?): gboolean

@CCall("knifunptr_libgtk35968_gtk_rc_property_parse_requisition")
external fun gtk_rc_property_parse_requisition(pspec: CValuesRef<GParamSpec>?, gstring: CValuesRef<GString>?, property_value: CValuesRef<GValue>?): gboolean

@CCall("knifunptr_libgtk35969_gtk_rc_property_parse_border")
external fun gtk_rc_property_parse_border(pspec: CValuesRef<GParamSpec>?, gstring: CValuesRef<GString>?, property_value: CValuesRef<GValue>?): gboolean

@CCall("knifunptr_libgtk35970_gtk_settings_set_property_value")
external fun gtk_settings_set_property_value(settings: CValuesRef<GtkSettings>?, @CCall.CString name: String?, svalue: CValuesRef<GtkSettingsValue>?): Unit

@CCall("knifunptr_libgtk35971_gtk_settings_set_string_property")
external fun gtk_settings_set_string_property(settings: CValuesRef<GtkSettings>?, @CCall.CString name: String?, @CCall.CString v_string: String?, @CCall.CString origin: String?): Unit

@CCall("knifunptr_libgtk35972_gtk_settings_set_long_property")
external fun gtk_settings_set_long_property(settings: CValuesRef<GtkSettings>?, @CCall.CString name: String?, v_long: glong, @CCall.CString origin: String?): Unit

@CCall("knifunptr_libgtk35973_gtk_settings_set_double_property")
external fun gtk_settings_set_double_property(settings: CValuesRef<GtkSettings>?, @CCall.CString name: String?, v_double: gdouble, @CCall.CString origin: String?): Unit

@CCall("knifunptr_libgtk35974_gtk_settings_reset_property")
external fun gtk_settings_reset_property(settings: CValuesRef<GtkSettings>?, @CCall.CString name: String?): Unit

@CCall("knifunptr_libgtk35975_gtk_shortcut_label_get_type")
external fun gtk_shortcut_label_get_type(): GType

@CCall("knifunptr_libgtk35976_gtk_shortcut_label_new")
external fun gtk_shortcut_label_new(@CCall.CString accelerator: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35977_gtk_shortcut_label_get_accelerator")
external fun gtk_shortcut_label_get_accelerator(self: CValuesRef<GtkShortcutLabel>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk35978_gtk_shortcut_label_set_accelerator")
external fun gtk_shortcut_label_set_accelerator(self: CValuesRef<GtkShortcutLabel>?, @CCall.CString accelerator: String?): Unit

@CCall("knifunptr_libgtk35979_gtk_shortcut_label_get_disabled_text")
external fun gtk_shortcut_label_get_disabled_text(self: CValuesRef<GtkShortcutLabel>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk35980_gtk_shortcut_label_set_disabled_text")
external fun gtk_shortcut_label_set_disabled_text(self: CValuesRef<GtkShortcutLabel>?, @CCall.CString disabled_text: String?): Unit

@CCall("knifunptr_libgtk35981_gtk_shortcuts_group_get_type")
external fun gtk_shortcuts_group_get_type(): GType

@CCall("knifunptr_libgtk35982_gtk_shortcuts_section_get_type")
external fun gtk_shortcuts_section_get_type(): GType

@CCall("knifunptr_libgtk35983_gtk_shortcuts_shortcut_get_type")
external fun gtk_shortcuts_shortcut_get_type(): GType

@CCall("knifunptr_libgtk35984_gtk_show_uri")
external fun gtk_show_uri(screen: CValuesRef<GdkScreen>?, @CCall.CString uri: String?, timestamp: guint32, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk35985_gtk_show_uri_on_window")
external fun gtk_show_uri_on_window(parent: CValuesRef<GtkWindow>?, @CCall.CString uri: String?, timestamp: guint32, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk35986_gtk_stack_get_type")
external fun gtk_stack_get_type(): GType

@CCall("knifunptr_libgtk35987_gtk_stack_new")
external fun gtk_stack_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35988_gtk_stack_add_named")
external fun gtk_stack_add_named(stack: CValuesRef<GtkStack>?, child: CValuesRef<GtkWidget>?, @CCall.CString name: String?): Unit

@CCall("knifunptr_libgtk35989_gtk_stack_add_titled")
external fun gtk_stack_add_titled(stack: CValuesRef<GtkStack>?, child: CValuesRef<GtkWidget>?, @CCall.CString name: String?, @CCall.CString title: String?): Unit

@CCall("knifunptr_libgtk35990_gtk_stack_get_child_by_name")
external fun gtk_stack_get_child_by_name(stack: CValuesRef<GtkStack>?, @CCall.CString name: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35991_gtk_stack_set_visible_child")
external fun gtk_stack_set_visible_child(stack: CValuesRef<GtkStack>?, child: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk35992_gtk_stack_get_visible_child")
external fun gtk_stack_get_visible_child(stack: CValuesRef<GtkStack>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk35993_gtk_stack_set_visible_child_name")
external fun gtk_stack_set_visible_child_name(stack: CValuesRef<GtkStack>?, @CCall.CString name: String?): Unit

@CCall("knifunptr_libgtk35994_gtk_stack_get_visible_child_name")
external fun gtk_stack_get_visible_child_name(stack: CValuesRef<GtkStack>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk35995_gtk_stack_set_visible_child_full")
external fun gtk_stack_set_visible_child_full(stack: CValuesRef<GtkStack>?, @CCall.CString name: String?, transition: GtkStackTransitionType): Unit

@CCall("knifunptr_libgtk35996_gtk_stack_set_homogeneous")
external fun gtk_stack_set_homogeneous(stack: CValuesRef<GtkStack>?, homogeneous: gboolean): Unit

@CCall("knifunptr_libgtk35997_gtk_stack_get_homogeneous")
external fun gtk_stack_get_homogeneous(stack: CValuesRef<GtkStack>?): gboolean

@CCall("knifunptr_libgtk35998_gtk_stack_set_hhomogeneous")
external fun gtk_stack_set_hhomogeneous(stack: CValuesRef<GtkStack>?, hhomogeneous: gboolean): Unit

@CCall("knifunptr_libgtk35999_gtk_stack_get_hhomogeneous")
external fun gtk_stack_get_hhomogeneous(stack: CValuesRef<GtkStack>?): gboolean

@CCall("knifunptr_libgtk36000_gtk_stack_set_vhomogeneous")
external fun gtk_stack_set_vhomogeneous(stack: CValuesRef<GtkStack>?, vhomogeneous: gboolean): Unit

@CCall("knifunptr_libgtk36001_gtk_stack_get_vhomogeneous")
external fun gtk_stack_get_vhomogeneous(stack: CValuesRef<GtkStack>?): gboolean

@CCall("knifunptr_libgtk36002_gtk_stack_set_transition_duration")
external fun gtk_stack_set_transition_duration(stack: CValuesRef<GtkStack>?, duration: guint): Unit

@CCall("knifunptr_libgtk36003_gtk_stack_get_transition_duration")
external fun gtk_stack_get_transition_duration(stack: CValuesRef<GtkStack>?): guint

@CCall("knifunptr_libgtk36004_gtk_stack_set_transition_type")
external fun gtk_stack_set_transition_type(stack: CValuesRef<GtkStack>?, transition: GtkStackTransitionType): Unit

@CCall("knifunptr_libgtk36005_gtk_stack_get_transition_type")
external fun gtk_stack_get_transition_type(stack: CValuesRef<GtkStack>?): GtkStackTransitionType

@CCall("knifunptr_libgtk36006_gtk_stack_get_transition_running")
external fun gtk_stack_get_transition_running(stack: CValuesRef<GtkStack>?): gboolean

@CCall("knifunptr_libgtk36007_gtk_stack_set_interpolate_size")
external fun gtk_stack_set_interpolate_size(stack: CValuesRef<GtkStack>?, interpolate_size: gboolean): Unit

@CCall("knifunptr_libgtk36008_gtk_stack_get_interpolate_size")
external fun gtk_stack_get_interpolate_size(stack: CValuesRef<GtkStack>?): gboolean

@CCall("knifunptr_libgtk36009_gtk_stack_sidebar_get_type")
external fun gtk_stack_sidebar_get_type(): GType

@CCall("knifunptr_libgtk36010_gtk_stack_sidebar_new")
external fun gtk_stack_sidebar_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk36011_gtk_stack_sidebar_set_stack")
external fun gtk_stack_sidebar_set_stack(sidebar: CValuesRef<GtkStackSidebar>?, stack: CValuesRef<GtkStack>?): Unit

@CCall("knifunptr_libgtk36012_gtk_stack_sidebar_get_stack")
external fun gtk_stack_sidebar_get_stack(sidebar: CValuesRef<GtkStackSidebar>?): CPointer<GtkStack>?

@CCall("knifunptr_libgtk36013_gtk_distribute_natural_allocation")
external fun gtk_distribute_natural_allocation(extra_space: gint, n_requested_sizes: guint, sizes: CValuesRef<GtkRequestedSize>?): gint

@CCall("knifunptr_libgtk36014_gtk_spin_button_get_type")
external fun gtk_spin_button_get_type(): GType

@CCall("knifunptr_libgtk36015_gtk_spin_button_configure")
external fun gtk_spin_button_configure(spin_button: CValuesRef<GtkSpinButton>?, adjustment: CValuesRef<GtkAdjustment>?, climb_rate: gdouble, digits: guint): Unit

@CCall("knifunptr_libgtk36016_gtk_spin_button_new")
external fun gtk_spin_button_new(adjustment: CValuesRef<GtkAdjustment>?, climb_rate: gdouble, digits: guint): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk36017_gtk_spin_button_new_with_range")
external fun gtk_spin_button_new_with_range(min: gdouble, max: gdouble, step: gdouble): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk36018_gtk_spin_button_set_adjustment")
external fun gtk_spin_button_set_adjustment(spin_button: CValuesRef<GtkSpinButton>?, adjustment: CValuesRef<GtkAdjustment>?): Unit

@CCall("knifunptr_libgtk36019_gtk_spin_button_get_adjustment")
external fun gtk_spin_button_get_adjustment(spin_button: CValuesRef<GtkSpinButton>?): CPointer<GtkAdjustment>?

@CCall("knifunptr_libgtk36020_gtk_spin_button_set_digits")
external fun gtk_spin_button_set_digits(spin_button: CValuesRef<GtkSpinButton>?, digits: guint): Unit

@CCall("knifunptr_libgtk36021_gtk_spin_button_get_digits")
external fun gtk_spin_button_get_digits(spin_button: CValuesRef<GtkSpinButton>?): guint

@CCall("knifunptr_libgtk36022_gtk_spin_button_set_increments")
external fun gtk_spin_button_set_increments(spin_button: CValuesRef<GtkSpinButton>?, step: gdouble, page: gdouble): Unit

@CCall("knifunptr_libgtk36023_gtk_spin_button_get_increments")
external fun gtk_spin_button_get_increments(spin_button: CValuesRef<GtkSpinButton>?, step: CValuesRef<gdoubleVar>?, page: CValuesRef<gdoubleVar>?): Unit

@CCall("knifunptr_libgtk36024_gtk_spin_button_set_range")
external fun gtk_spin_button_set_range(spin_button: CValuesRef<GtkSpinButton>?, min: gdouble, max: gdouble): Unit

@CCall("knifunptr_libgtk36025_gtk_spin_button_get_range")
external fun gtk_spin_button_get_range(spin_button: CValuesRef<GtkSpinButton>?, min: CValuesRef<gdoubleVar>?, max: CValuesRef<gdoubleVar>?): Unit

@CCall("knifunptr_libgtk36026_gtk_spin_button_get_value")
external fun gtk_spin_button_get_value(spin_button: CValuesRef<GtkSpinButton>?): gdouble

@CCall("knifunptr_libgtk36027_gtk_spin_button_get_value_as_int")
external fun gtk_spin_button_get_value_as_int(spin_button: CValuesRef<GtkSpinButton>?): gint

@CCall("knifunptr_libgtk36028_gtk_spin_button_set_value")
external fun gtk_spin_button_set_value(spin_button: CValuesRef<GtkSpinButton>?, value: gdouble): Unit

@CCall("knifunptr_libgtk36029_gtk_spin_button_set_update_policy")
external fun gtk_spin_button_set_update_policy(spin_button: CValuesRef<GtkSpinButton>?, policy: GtkSpinButtonUpdatePolicy): Unit

@CCall("knifunptr_libgtk36030_gtk_spin_button_get_update_policy")
external fun gtk_spin_button_get_update_policy(spin_button: CValuesRef<GtkSpinButton>?): GtkSpinButtonUpdatePolicy

@CCall("knifunptr_libgtk36031_gtk_spin_button_set_numeric")
external fun gtk_spin_button_set_numeric(spin_button: CValuesRef<GtkSpinButton>?, numeric: gboolean): Unit

@CCall("knifunptr_libgtk36032_gtk_spin_button_get_numeric")
external fun gtk_spin_button_get_numeric(spin_button: CValuesRef<GtkSpinButton>?): gboolean

@CCall("knifunptr_libgtk36033_gtk_spin_button_spin")
external fun gtk_spin_button_spin(spin_button: CValuesRef<GtkSpinButton>?, direction: GtkSpinType, increment: gdouble): Unit

@CCall("knifunptr_libgtk36034_gtk_spin_button_set_wrap")
external fun gtk_spin_button_set_wrap(spin_button: CValuesRef<GtkSpinButton>?, wrap: gboolean): Unit

@CCall("knifunptr_libgtk36035_gtk_spin_button_get_wrap")
external fun gtk_spin_button_get_wrap(spin_button: CValuesRef<GtkSpinButton>?): gboolean

@CCall("knifunptr_libgtk36036_gtk_spin_button_set_snap_to_ticks")
external fun gtk_spin_button_set_snap_to_ticks(spin_button: CValuesRef<GtkSpinButton>?, snap_to_ticks: gboolean): Unit

@CCall("knifunptr_libgtk36037_gtk_spin_button_get_snap_to_ticks")
external fun gtk_spin_button_get_snap_to_ticks(spin_button: CValuesRef<GtkSpinButton>?): gboolean

@CCall("knifunptr_libgtk36038_gtk_spin_button_update")
external fun gtk_spin_button_update(spin_button: CValuesRef<GtkSpinButton>?): Unit

@CCall("knifunptr_libgtk36039__gtk_spin_button_get_panels")
external fun _gtk_spin_button_get_panels(spin_button: CValuesRef<GtkSpinButton>?, down_panel: CValuesRef<CPointerVar<GdkWindow>>?, up_panel: CValuesRef<CPointerVar<GdkWindow>>?): Unit

@CCall("knifunptr_libgtk36040_gtk_spinner_get_type")
external fun gtk_spinner_get_type(): GType

@CCall("knifunptr_libgtk36041_gtk_spinner_new")
external fun gtk_spinner_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk36042_gtk_spinner_start")
external fun gtk_spinner_start(spinner: CValuesRef<GtkSpinner>?): Unit

@CCall("knifunptr_libgtk36043_gtk_spinner_stop")
external fun gtk_spinner_stop(spinner: CValuesRef<GtkSpinner>?): Unit

@CCall("knifunptr_libgtk36044_gtk_stack_switcher_get_type")
external fun gtk_stack_switcher_get_type(): GType

@CCall("knifunptr_libgtk36045_gtk_stack_switcher_new")
external fun gtk_stack_switcher_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk36046_gtk_stack_switcher_set_stack")
external fun gtk_stack_switcher_set_stack(switcher: CValuesRef<GtkStackSwitcher>?, stack: CValuesRef<GtkStack>?): Unit

@CCall("knifunptr_libgtk36047_gtk_stack_switcher_get_stack")
external fun gtk_stack_switcher_get_stack(switcher: CValuesRef<GtkStackSwitcher>?): CPointer<GtkStack>?

@CCall("knifunptr_libgtk36048_gtk_statusbar_get_type")
external fun gtk_statusbar_get_type(): GType

@CCall("knifunptr_libgtk36049_gtk_statusbar_new")
external fun gtk_statusbar_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk36050_gtk_statusbar_get_context_id")
external fun gtk_statusbar_get_context_id(statusbar: CValuesRef<GtkStatusbar>?, @CCall.CString context_description: String?): guint

@CCall("knifunptr_libgtk36051_gtk_statusbar_push")
external fun gtk_statusbar_push(statusbar: CValuesRef<GtkStatusbar>?, context_id: guint, @CCall.CString text: String?): guint

@CCall("knifunptr_libgtk36052_gtk_statusbar_pop")
external fun gtk_statusbar_pop(statusbar: CValuesRef<GtkStatusbar>?, context_id: guint): Unit

@CCall("knifunptr_libgtk36053_gtk_statusbar_remove")
external fun gtk_statusbar_remove(statusbar: CValuesRef<GtkStatusbar>?, context_id: guint, message_id: guint): Unit

@CCall("knifunptr_libgtk36054_gtk_statusbar_remove_all")
external fun gtk_statusbar_remove_all(statusbar: CValuesRef<GtkStatusbar>?, context_id: guint): Unit

@CCall("knifunptr_libgtk36055_gtk_statusbar_get_message_area")
external fun gtk_statusbar_get_message_area(statusbar: CValuesRef<GtkStatusbar>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk36056_gtk_switch_get_type")
external fun gtk_switch_get_type(): GType

@CCall("knifunptr_libgtk36057_gtk_switch_new")
external fun gtk_switch_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk36058_gtk_switch_set_active")
external fun gtk_switch_set_active(sw: CValuesRef<GtkSwitch>?, is_active: gboolean): Unit

@CCall("knifunptr_libgtk36059_gtk_switch_get_active")
external fun gtk_switch_get_active(sw: CValuesRef<GtkSwitch>?): gboolean

@CCall("knifunptr_libgtk36060_gtk_switch_set_state")
external fun gtk_switch_set_state(sw: CValuesRef<GtkSwitch>?, state: gboolean): Unit

@CCall("knifunptr_libgtk36061_gtk_switch_get_state")
external fun gtk_switch_get_state(sw: CValuesRef<GtkSwitch>?): gboolean

@CCall("knifunptr_libgtk36062_gtk_text_tag_table_get_type")
external fun gtk_text_tag_table_get_type(): GType

@CCall("knifunptr_libgtk36063_gtk_text_tag_table_new")
external fun gtk_text_tag_table_new(): CPointer<GtkTextTagTable>?

@CCall("knifunptr_libgtk36064_gtk_text_tag_table_add")
external fun gtk_text_tag_table_add(table: CValuesRef<GtkTextTagTable>?, tag: CValuesRef<GtkTextTag>?): gboolean

@CCall("knifunptr_libgtk36065_gtk_text_tag_table_remove")
external fun gtk_text_tag_table_remove(table: CValuesRef<GtkTextTagTable>?, tag: CValuesRef<GtkTextTag>?): Unit

@CCall("knifunptr_libgtk36066_gtk_text_tag_table_lookup")
external fun gtk_text_tag_table_lookup(table: CValuesRef<GtkTextTagTable>?, @CCall.CString name: String?): CPointer<GtkTextTag>?

@CCall("knifunptr_libgtk36067_gtk_text_tag_table_foreach")
external fun gtk_text_tag_table_foreach(table: CValuesRef<GtkTextTagTable>?, func: GtkTextTagTableForeach?, data: gpointer?): Unit

@CCall("knifunptr_libgtk36068_gtk_text_tag_table_get_size")
external fun gtk_text_tag_table_get_size(table: CValuesRef<GtkTextTagTable>?): gint

@CCall("knifunptr_libgtk36069__gtk_text_tag_table_add_buffer")
external fun _gtk_text_tag_table_add_buffer(table: CValuesRef<GtkTextTagTable>?, buffer: gpointer?): Unit

@CCall("knifunptr_libgtk36070__gtk_text_tag_table_remove_buffer")
external fun _gtk_text_tag_table_remove_buffer(table: CValuesRef<GtkTextTagTable>?, buffer: gpointer?): Unit

@CCall("knifunptr_libgtk36071_gtk_text_mark_get_type")
external fun gtk_text_mark_get_type(): GType

@CCall("knifunptr_libgtk36072_gtk_text_mark_new")
external fun gtk_text_mark_new(@CCall.CString name: String?, left_gravity: gboolean): CPointer<GtkTextMark>?

@CCall("knifunptr_libgtk36073_gtk_text_mark_set_visible")
external fun gtk_text_mark_set_visible(mark: CValuesRef<GtkTextMark>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk36074_gtk_text_mark_get_visible")
external fun gtk_text_mark_get_visible(mark: CValuesRef<GtkTextMark>?): gboolean

@CCall("knifunptr_libgtk36075_gtk_text_mark_get_name")
external fun gtk_text_mark_get_name(mark: CValuesRef<GtkTextMark>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk36076_gtk_text_mark_get_deleted")
external fun gtk_text_mark_get_deleted(mark: CValuesRef<GtkTextMark>?): gboolean

@CCall("knifunptr_libgtk36077_gtk_text_mark_get_buffer")
external fun gtk_text_mark_get_buffer(mark: CValuesRef<GtkTextMark>?): CPointer<GtkTextBuffer>?

@CCall("knifunptr_libgtk36078_gtk_text_mark_get_left_gravity")
external fun gtk_text_mark_get_left_gravity(mark: CValuesRef<GtkTextMark>?): gboolean

@CCall("knifunptr_libgtk36079_gtk_text_buffer_get_type")
external fun gtk_text_buffer_get_type(): GType

@CCall("knifunptr_libgtk36080_gtk_text_buffer_new")
external fun gtk_text_buffer_new(table: CValuesRef<GtkTextTagTable>?): CPointer<GtkTextBuffer>?

@CCall("knifunptr_libgtk36081_gtk_text_buffer_get_line_count")
external fun gtk_text_buffer_get_line_count(buffer: CValuesRef<GtkTextBuffer>?): gint

@CCall("knifunptr_libgtk36082_gtk_text_buffer_get_char_count")
external fun gtk_text_buffer_get_char_count(buffer: CValuesRef<GtkTextBuffer>?): gint

@CCall("knifunptr_libgtk36083_gtk_text_buffer_get_tag_table")
external fun gtk_text_buffer_get_tag_table(buffer: CValuesRef<GtkTextBuffer>?): CPointer<GtkTextTagTable>?

@CCall("knifunptr_libgtk36084_gtk_text_buffer_set_text")
external fun gtk_text_buffer_set_text(buffer: CValuesRef<GtkTextBuffer>?, @CCall.CString text: String?, len: gint): Unit

@CCall("knifunptr_libgtk36085_gtk_text_buffer_insert")
external fun gtk_text_buffer_insert(buffer: CValuesRef<GtkTextBuffer>?, iter: CValuesRef<GtkTextIter>?, @CCall.CString text: String?, len: gint): Unit

@CCall("knifunptr_libgtk36086_gtk_text_buffer_insert_at_cursor")
external fun gtk_text_buffer_insert_at_cursor(buffer: CValuesRef<GtkTextBuffer>?, @CCall.CString text: String?, len: gint): Unit

@CCall("knifunptr_libgtk36087_gtk_text_buffer_insert_interactive")
external fun gtk_text_buffer_insert_interactive(buffer: CValuesRef<GtkTextBuffer>?, iter: CValuesRef<GtkTextIter>?, @CCall.CString text: String?, len: gint, default_editable: gboolean): gboolean

@CCall("knifunptr_libgtk36088_gtk_text_buffer_insert_interactive_at_cursor")
external fun gtk_text_buffer_insert_interactive_at_cursor(buffer: CValuesRef<GtkTextBuffer>?, @CCall.CString text: String?, len: gint, default_editable: gboolean): gboolean

@CCall("knifunptr_libgtk36089_gtk_text_buffer_insert_range")
external fun gtk_text_buffer_insert_range(buffer: CValuesRef<GtkTextBuffer>?, iter: CValuesRef<GtkTextIter>?, start: CValuesRef<GtkTextIter>?, end: CValuesRef<GtkTextIter>?): Unit

@CCall("knifunptr_libgtk36090_gtk_text_buffer_insert_range_interactive")
external fun gtk_text_buffer_insert_range_interactive(buffer: CValuesRef<GtkTextBuffer>?, iter: CValuesRef<GtkTextIter>?, start: CValuesRef<GtkTextIter>?, end: CValuesRef<GtkTextIter>?, default_editable: gboolean): gboolean

@CCall("knifunptr_libgtk36091_gtk_text_buffer_insert_with_tags")
external fun gtk_text_buffer_insert_with_tags(buffer: CValuesRef<GtkTextBuffer>?, iter: CValuesRef<GtkTextIter>?, @CCall.CString text: String?, len: gint, first_tag: CValuesRef<GtkTextTag>?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk36092_gtk_text_buffer_insert_with_tags_by_name")
external fun gtk_text_buffer_insert_with_tags_by_name(buffer: CValuesRef<GtkTextBuffer>?, iter: CValuesRef<GtkTextIter>?, @CCall.CString text: String?, len: gint, @CCall.CString first_tag_name: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk36093_gtk_text_buffer_insert_markup")
external fun gtk_text_buffer_insert_markup(buffer: CValuesRef<GtkTextBuffer>?, iter: CValuesRef<GtkTextIter>?, @CCall.CString markup: String?, len: gint): Unit

@CCall("knifunptr_libgtk36094_gtk_text_buffer_delete")
external fun gtk_text_buffer_delete(buffer: CValuesRef<GtkTextBuffer>?, start: CValuesRef<GtkTextIter>?, end: CValuesRef<GtkTextIter>?): Unit

@CCall("knifunptr_libgtk36095_gtk_text_buffer_delete_interactive")
external fun gtk_text_buffer_delete_interactive(buffer: CValuesRef<GtkTextBuffer>?, start_iter: CValuesRef<GtkTextIter>?, end_iter: CValuesRef<GtkTextIter>?, default_editable: gboolean): gboolean

@CCall("knifunptr_libgtk36096_gtk_text_buffer_backspace")
external fun gtk_text_buffer_backspace(buffer: CValuesRef<GtkTextBuffer>?, iter: CValuesRef<GtkTextIter>?, interactive: gboolean, default_editable: gboolean): gboolean

@CCall("knifunptr_libgtk36097_gtk_text_buffer_get_text")
external fun gtk_text_buffer_get_text(buffer: CValuesRef<GtkTextBuffer>?, start: CValuesRef<GtkTextIter>?, end: CValuesRef<GtkTextIter>?, include_hidden_chars: gboolean): CPointer<gcharVar>?

@CCall("knifunptr_libgtk36098_gtk_text_buffer_get_slice")
external fun gtk_text_buffer_get_slice(buffer: CValuesRef<GtkTextBuffer>?, start: CValuesRef<GtkTextIter>?, end: CValuesRef<GtkTextIter>?, include_hidden_chars: gboolean): CPointer<gcharVar>?

@CCall("knifunptr_libgtk36099_gtk_text_buffer_insert_pixbuf")
external fun gtk_text_buffer_insert_pixbuf(buffer: CValuesRef<GtkTextBuffer>?, iter: CValuesRef<GtkTextIter>?, pixbuf: CValuesRef<GdkPixbuf>?): Unit

@CCall("knifunptr_libgtk36100_gtk_text_buffer_insert_child_anchor")
external fun gtk_text_buffer_insert_child_anchor(buffer: CValuesRef<GtkTextBuffer>?, iter: CValuesRef<GtkTextIter>?, anchor: CValuesRef<GtkTextChildAnchor>?): Unit

@CCall("knifunptr_libgtk36101_gtk_text_buffer_create_child_anchor")
external fun gtk_text_buffer_create_child_anchor(buffer: CValuesRef<GtkTextBuffer>?, iter: CValuesRef<GtkTextIter>?): CPointer<GtkTextChildAnchor>?

@CCall("knifunptr_libgtk36102_gtk_text_buffer_add_mark")
external fun gtk_text_buffer_add_mark(buffer: CValuesRef<GtkTextBuffer>?, mark: CValuesRef<GtkTextMark>?, where: CValuesRef<GtkTextIter>?): Unit

@CCall("knifunptr_libgtk36103_gtk_text_buffer_create_mark")
external fun gtk_text_buffer_create_mark(buffer: CValuesRef<GtkTextBuffer>?, @CCall.CString mark_name: String?, where: CValuesRef<GtkTextIter>?, left_gravity: gboolean): CPointer<GtkTextMark>?

@CCall("knifunptr_libgtk36104_gtk_text_buffer_move_mark")
external fun gtk_text_buffer_move_mark(buffer: CValuesRef<GtkTextBuffer>?, mark: CValuesRef<GtkTextMark>?, where: CValuesRef<GtkTextIter>?): Unit

@CCall("knifunptr_libgtk36105_gtk_text_buffer_delete_mark")
external fun gtk_text_buffer_delete_mark(buffer: CValuesRef<GtkTextBuffer>?, mark: CValuesRef<GtkTextMark>?): Unit

@CCall("knifunptr_libgtk36106_gtk_text_buffer_get_mark")
external fun gtk_text_buffer_get_mark(buffer: CValuesRef<GtkTextBuffer>?, @CCall.CString name: String?): CPointer<GtkTextMark>?

@CCall("knifunptr_libgtk36107_gtk_text_buffer_move_mark_by_name")
external fun gtk_text_buffer_move_mark_by_name(buffer: CValuesRef<GtkTextBuffer>?, @CCall.CString name: String?, where: CValuesRef<GtkTextIter>?): Unit

@CCall("knifunptr_libgtk36108_gtk_text_buffer_delete_mark_by_name")
external fun gtk_text_buffer_delete_mark_by_name(buffer: CValuesRef<GtkTextBuffer>?, @CCall.CString name: String?): Unit

@CCall("knifunptr_libgtk36109_gtk_text_buffer_get_insert")
external fun gtk_text_buffer_get_insert(buffer: CValuesRef<GtkTextBuffer>?): CPointer<GtkTextMark>?

@CCall("knifunptr_libgtk36110_gtk_text_buffer_get_selection_bound")
external fun gtk_text_buffer_get_selection_bound(buffer: CValuesRef<GtkTextBuffer>?): CPointer<GtkTextMark>?

@CCall("knifunptr_libgtk36111_gtk_text_buffer_place_cursor")
external fun gtk_text_buffer_place_cursor(buffer: CValuesRef<GtkTextBuffer>?, where: CValuesRef<GtkTextIter>?): Unit

@CCall("knifunptr_libgtk36112_gtk_text_buffer_select_range")
external fun gtk_text_buffer_select_range(buffer: CValuesRef<GtkTextBuffer>?, ins: CValuesRef<GtkTextIter>?, bound: CValuesRef<GtkTextIter>?): Unit

@CCall("knifunptr_libgtk36113_gtk_text_buffer_apply_tag")
external fun gtk_text_buffer_apply_tag(buffer: CValuesRef<GtkTextBuffer>?, tag: CValuesRef<GtkTextTag>?, start: CValuesRef<GtkTextIter>?, end: CValuesRef<GtkTextIter>?): Unit

@CCall("knifunptr_libgtk36114_gtk_text_buffer_remove_tag")
external fun gtk_text_buffer_remove_tag(buffer: CValuesRef<GtkTextBuffer>?, tag: CValuesRef<GtkTextTag>?, start: CValuesRef<GtkTextIter>?, end: CValuesRef<GtkTextIter>?): Unit

@CCall("knifunptr_libgtk36115_gtk_text_buffer_apply_tag_by_name")
external fun gtk_text_buffer_apply_tag_by_name(buffer: CValuesRef<GtkTextBuffer>?, @CCall.CString name: String?, start: CValuesRef<GtkTextIter>?, end: CValuesRef<GtkTextIter>?): Unit

@CCall("knifunptr_libgtk36116_gtk_text_buffer_remove_tag_by_name")
external fun gtk_text_buffer_remove_tag_by_name(buffer: CValuesRef<GtkTextBuffer>?, @CCall.CString name: String?, start: CValuesRef<GtkTextIter>?, end: CValuesRef<GtkTextIter>?): Unit

@CCall("knifunptr_libgtk36117_gtk_text_buffer_remove_all_tags")
external fun gtk_text_buffer_remove_all_tags(buffer: CValuesRef<GtkTextBuffer>?, start: CValuesRef<GtkTextIter>?, end: CValuesRef<GtkTextIter>?): Unit

@CCall("knifunptr_libgtk36118_gtk_text_buffer_create_tag")
external fun gtk_text_buffer_create_tag(buffer: CValuesRef<GtkTextBuffer>?, @CCall.CString tag_name: String?, @CCall.CString first_property_name: String?, vararg variadicArguments: Any?): CPointer<GtkTextTag>?

@CCall("knifunptr_libgtk36119_gtk_text_buffer_get_iter_at_line_offset")
external fun gtk_text_buffer_get_iter_at_line_offset(buffer: CValuesRef<GtkTextBuffer>?, iter: CValuesRef<GtkTextIter>?, line_number: gint, char_offset: gint): Unit

@CCall("knifunptr_libgtk36120_gtk_text_buffer_get_iter_at_line_index")
external fun gtk_text_buffer_get_iter_at_line_index(buffer: CValuesRef<GtkTextBuffer>?, iter: CValuesRef<GtkTextIter>?, line_number: gint, byte_index: gint): Unit

@CCall("knifunptr_libgtk36121_gtk_text_buffer_get_iter_at_offset")
external fun gtk_text_buffer_get_iter_at_offset(buffer: CValuesRef<GtkTextBuffer>?, iter: CValuesRef<GtkTextIter>?, char_offset: gint): Unit

@CCall("knifunptr_libgtk36122_gtk_text_buffer_get_iter_at_line")
external fun gtk_text_buffer_get_iter_at_line(buffer: CValuesRef<GtkTextBuffer>?, iter: CValuesRef<GtkTextIter>?, line_number: gint): Unit

@CCall("knifunptr_libgtk36123_gtk_text_buffer_get_start_iter")
external fun gtk_text_buffer_get_start_iter(buffer: CValuesRef<GtkTextBuffer>?, iter: CValuesRef<GtkTextIter>?): Unit

@CCall("knifunptr_libgtk36124_gtk_text_buffer_get_end_iter")
external fun gtk_text_buffer_get_end_iter(buffer: CValuesRef<GtkTextBuffer>?, iter: CValuesRef<GtkTextIter>?): Unit

@CCall("knifunptr_libgtk36125_gtk_text_buffer_get_bounds")
external fun gtk_text_buffer_get_bounds(buffer: CValuesRef<GtkTextBuffer>?, start: CValuesRef<GtkTextIter>?, end: CValuesRef<GtkTextIter>?): Unit

@CCall("knifunptr_libgtk36126_gtk_text_buffer_get_iter_at_mark")
external fun gtk_text_buffer_get_iter_at_mark(buffer: CValuesRef<GtkTextBuffer>?, iter: CValuesRef<GtkTextIter>?, mark: CValuesRef<GtkTextMark>?): Unit

@CCall("knifunptr_libgtk36127_gtk_text_buffer_get_iter_at_child_anchor")
external fun gtk_text_buffer_get_iter_at_child_anchor(buffer: CValuesRef<GtkTextBuffer>?, iter: CValuesRef<GtkTextIter>?, anchor: CValuesRef<GtkTextChildAnchor>?): Unit

@CCall("knifunptr_libgtk36128_gtk_text_buffer_get_modified")
external fun gtk_text_buffer_get_modified(buffer: CValuesRef<GtkTextBuffer>?): gboolean

@CCall("knifunptr_libgtk36129_gtk_text_buffer_set_modified")
external fun gtk_text_buffer_set_modified(buffer: CValuesRef<GtkTextBuffer>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk36130_gtk_text_buffer_get_has_selection")
external fun gtk_text_buffer_get_has_selection(buffer: CValuesRef<GtkTextBuffer>?): gboolean

@CCall("knifunptr_libgtk36131_gtk_text_buffer_add_selection_clipboard")
external fun gtk_text_buffer_add_selection_clipboard(buffer: CValuesRef<GtkTextBuffer>?, clipboard: CValuesRef<GtkClipboard>?): Unit

@CCall("knifunptr_libgtk36132_gtk_text_buffer_remove_selection_clipboard")
external fun gtk_text_buffer_remove_selection_clipboard(buffer: CValuesRef<GtkTextBuffer>?, clipboard: CValuesRef<GtkClipboard>?): Unit

@CCall("knifunptr_libgtk36133_gtk_text_buffer_cut_clipboard")
external fun gtk_text_buffer_cut_clipboard(buffer: CValuesRef<GtkTextBuffer>?, clipboard: CValuesRef<GtkClipboard>?, default_editable: gboolean): Unit

@CCall("knifunptr_libgtk36134_gtk_text_buffer_copy_clipboard")
external fun gtk_text_buffer_copy_clipboard(buffer: CValuesRef<GtkTextBuffer>?, clipboard: CValuesRef<GtkClipboard>?): Unit

@CCall("knifunptr_libgtk36135_gtk_text_buffer_paste_clipboard")
external fun gtk_text_buffer_paste_clipboard(buffer: CValuesRef<GtkTextBuffer>?, clipboard: CValuesRef<GtkClipboard>?, override_location: CValuesRef<GtkTextIter>?, default_editable: gboolean): Unit

@CCall("knifunptr_libgtk36136_gtk_text_buffer_get_selection_bounds")
external fun gtk_text_buffer_get_selection_bounds(buffer: CValuesRef<GtkTextBuffer>?, start: CValuesRef<GtkTextIter>?, end: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk36137_gtk_text_buffer_delete_selection")
external fun gtk_text_buffer_delete_selection(buffer: CValuesRef<GtkTextBuffer>?, interactive: gboolean, default_editable: gboolean): gboolean

@CCall("knifunptr_libgtk36138_gtk_text_buffer_begin_user_action")
external fun gtk_text_buffer_begin_user_action(buffer: CValuesRef<GtkTextBuffer>?): Unit

@CCall("knifunptr_libgtk36139_gtk_text_buffer_end_user_action")
external fun gtk_text_buffer_end_user_action(buffer: CValuesRef<GtkTextBuffer>?): Unit

@CCall("knifunptr_libgtk36140_gtk_text_buffer_get_copy_target_list")
external fun gtk_text_buffer_get_copy_target_list(buffer: CValuesRef<GtkTextBuffer>?): CPointer<GtkTargetList>?

@CCall("knifunptr_libgtk36141_gtk_text_buffer_get_paste_target_list")
external fun gtk_text_buffer_get_paste_target_list(buffer: CValuesRef<GtkTextBuffer>?): CPointer<GtkTargetList>?

@CCall("knifunptr_libgtk36142_gtk_text_buffer_register_serialize_format")
external fun gtk_text_buffer_register_serialize_format(buffer: CValuesRef<GtkTextBuffer>?, @CCall.CString mime_type: String?, function: GtkTextBufferSerializeFunc?, user_data: gpointer?, user_data_destroy: GDestroyNotify?): GdkAtom?

@CCall("knifunptr_libgtk36143_gtk_text_buffer_register_serialize_tagset")
external fun gtk_text_buffer_register_serialize_tagset(buffer: CValuesRef<GtkTextBuffer>?, @CCall.CString tagset_name: String?): GdkAtom?

@CCall("knifunptr_libgtk36144_gtk_text_buffer_register_deserialize_format")
external fun gtk_text_buffer_register_deserialize_format(buffer: CValuesRef<GtkTextBuffer>?, @CCall.CString mime_type: String?, function: GtkTextBufferDeserializeFunc?, user_data: gpointer?, user_data_destroy: GDestroyNotify?): GdkAtom?

@CCall("knifunptr_libgtk36145_gtk_text_buffer_register_deserialize_tagset")
external fun gtk_text_buffer_register_deserialize_tagset(buffer: CValuesRef<GtkTextBuffer>?, @CCall.CString tagset_name: String?): GdkAtom?

@CCall("knifunptr_libgtk36146_gtk_text_buffer_unregister_serialize_format")
external fun gtk_text_buffer_unregister_serialize_format(buffer: CValuesRef<GtkTextBuffer>?, format: GdkAtom?): Unit

@CCall("knifunptr_libgtk36147_gtk_text_buffer_unregister_deserialize_format")
external fun gtk_text_buffer_unregister_deserialize_format(buffer: CValuesRef<GtkTextBuffer>?, format: GdkAtom?): Unit

@CCall("knifunptr_libgtk36148_gtk_text_buffer_deserialize_set_can_create_tags")
external fun gtk_text_buffer_deserialize_set_can_create_tags(buffer: CValuesRef<GtkTextBuffer>?, format: GdkAtom?, can_create_tags: gboolean): Unit

@CCall("knifunptr_libgtk36149_gtk_text_buffer_deserialize_get_can_create_tags")
external fun gtk_text_buffer_deserialize_get_can_create_tags(buffer: CValuesRef<GtkTextBuffer>?, format: GdkAtom?): gboolean

@CCall("knifunptr_libgtk36150_gtk_text_buffer_get_serialize_formats")
external fun gtk_text_buffer_get_serialize_formats(buffer: CValuesRef<GtkTextBuffer>?, n_formats: CValuesRef<gintVar>?): CPointer<GdkAtomVar>?

@CCall("knifunptr_libgtk36151_gtk_text_buffer_get_deserialize_formats")
external fun gtk_text_buffer_get_deserialize_formats(buffer: CValuesRef<GtkTextBuffer>?, n_formats: CValuesRef<gintVar>?): CPointer<GdkAtomVar>?

@CCall("knifunptr_libgtk36152_gtk_text_buffer_serialize")
external fun gtk_text_buffer_serialize(register_buffer: CValuesRef<GtkTextBuffer>?, content_buffer: CValuesRef<GtkTextBuffer>?, format: GdkAtom?, start: CValuesRef<GtkTextIter>?, end: CValuesRef<GtkTextIter>?, length: CValuesRef<gsizeVar>?): CPointer<guint8Var>?

@CCall("knifunptr_libgtk36153_gtk_text_buffer_deserialize")
external fun gtk_text_buffer_deserialize(register_buffer: CValuesRef<GtkTextBuffer>?, content_buffer: CValuesRef<GtkTextBuffer>?, format: GdkAtom?, iter: CValuesRef<GtkTextIter>?, data: CValuesRef<guint8Var>?, length: gsize, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_libgtk36154_gtk_text_view_get_type")
external fun gtk_text_view_get_type(): GType

@CCall("knifunptr_libgtk36155_gtk_text_view_new")
external fun gtk_text_view_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk36156_gtk_text_view_new_with_buffer")
external fun gtk_text_view_new_with_buffer(buffer: CValuesRef<GtkTextBuffer>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk36157_gtk_text_view_set_buffer")
external fun gtk_text_view_set_buffer(text_view: CValuesRef<GtkTextView>?, buffer: CValuesRef<GtkTextBuffer>?): Unit

@CCall("knifunptr_libgtk36158_gtk_text_view_get_buffer")
external fun gtk_text_view_get_buffer(text_view: CValuesRef<GtkTextView>?): CPointer<GtkTextBuffer>?

@CCall("knifunptr_libgtk36159_gtk_text_view_scroll_to_iter")
external fun gtk_text_view_scroll_to_iter(text_view: CValuesRef<GtkTextView>?, iter: CValuesRef<GtkTextIter>?, within_margin: gdouble, use_align: gboolean, xalign: gdouble, yalign: gdouble): gboolean

@CCall("knifunptr_libgtk36160_gtk_text_view_scroll_to_mark")
external fun gtk_text_view_scroll_to_mark(text_view: CValuesRef<GtkTextView>?, mark: CValuesRef<GtkTextMark>?, within_margin: gdouble, use_align: gboolean, xalign: gdouble, yalign: gdouble): Unit

@CCall("knifunptr_libgtk36161_gtk_text_view_scroll_mark_onscreen")
external fun gtk_text_view_scroll_mark_onscreen(text_view: CValuesRef<GtkTextView>?, mark: CValuesRef<GtkTextMark>?): Unit

@CCall("knifunptr_libgtk36162_gtk_text_view_move_mark_onscreen")
external fun gtk_text_view_move_mark_onscreen(text_view: CValuesRef<GtkTextView>?, mark: CValuesRef<GtkTextMark>?): gboolean

@CCall("knifunptr_libgtk36163_gtk_text_view_place_cursor_onscreen")
external fun gtk_text_view_place_cursor_onscreen(text_view: CValuesRef<GtkTextView>?): gboolean

@CCall("knifunptr_libgtk36164_gtk_text_view_get_visible_rect")
external fun gtk_text_view_get_visible_rect(text_view: CValuesRef<GtkTextView>?, visible_rect: CValuesRef<GdkRectangle>?): Unit

@CCall("knifunptr_libgtk36165_gtk_text_view_set_cursor_visible")
external fun gtk_text_view_set_cursor_visible(text_view: CValuesRef<GtkTextView>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk36166_gtk_text_view_get_cursor_visible")
external fun gtk_text_view_get_cursor_visible(text_view: CValuesRef<GtkTextView>?): gboolean

@CCall("knifunptr_libgtk36167_gtk_text_view_reset_cursor_blink")
external fun gtk_text_view_reset_cursor_blink(text_view: CValuesRef<GtkTextView>?): Unit

@CCall("knifunptr_libgtk36168_gtk_text_view_get_cursor_locations")
external fun gtk_text_view_get_cursor_locations(text_view: CValuesRef<GtkTextView>?, iter: CValuesRef<GtkTextIter>?, strong: CValuesRef<GdkRectangle>?, weak: CValuesRef<GdkRectangle>?): Unit

@CCall("knifunptr_libgtk36169_gtk_text_view_get_iter_location")
external fun gtk_text_view_get_iter_location(text_view: CValuesRef<GtkTextView>?, iter: CValuesRef<GtkTextIter>?, location: CValuesRef<GdkRectangle>?): Unit

@CCall("knifunptr_libgtk36170_gtk_text_view_get_iter_at_location")
external fun gtk_text_view_get_iter_at_location(text_view: CValuesRef<GtkTextView>?, iter: CValuesRef<GtkTextIter>?, x: gint, y: gint): gboolean

@CCall("knifunptr_libgtk36171_gtk_text_view_get_iter_at_position")
external fun gtk_text_view_get_iter_at_position(text_view: CValuesRef<GtkTextView>?, iter: CValuesRef<GtkTextIter>?, trailing: CValuesRef<gintVar>?, x: gint, y: gint): gboolean

@CCall("knifunptr_libgtk36172_gtk_text_view_get_line_yrange")
external fun gtk_text_view_get_line_yrange(text_view: CValuesRef<GtkTextView>?, iter: CValuesRef<GtkTextIter>?, y: CValuesRef<gintVar>?, height: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk36173_gtk_text_view_get_line_at_y")
external fun gtk_text_view_get_line_at_y(text_view: CValuesRef<GtkTextView>?, target_iter: CValuesRef<GtkTextIter>?, y: gint, line_top: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk36174_gtk_text_view_buffer_to_window_coords")
external fun gtk_text_view_buffer_to_window_coords(text_view: CValuesRef<GtkTextView>?, win: GtkTextWindowType, buffer_x: gint, buffer_y: gint, window_x: CValuesRef<gintVar>?, window_y: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk36175_gtk_text_view_window_to_buffer_coords")
external fun gtk_text_view_window_to_buffer_coords(text_view: CValuesRef<GtkTextView>?, win: GtkTextWindowType, window_x: gint, window_y: gint, buffer_x: CValuesRef<gintVar>?, buffer_y: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk36176_gtk_text_view_get_hadjustment")
external fun gtk_text_view_get_hadjustment(text_view: CValuesRef<GtkTextView>?): CPointer<GtkAdjustment>?

@CCall("knifunptr_libgtk36177_gtk_text_view_get_vadjustment")
external fun gtk_text_view_get_vadjustment(text_view: CValuesRef<GtkTextView>?): CPointer<GtkAdjustment>?

@CCall("knifunptr_libgtk36178_gtk_text_view_get_window")
external fun gtk_text_view_get_window(text_view: CValuesRef<GtkTextView>?, win: GtkTextWindowType): CPointer<GdkWindow>?

@CCall("knifunptr_libgtk36179_gtk_text_view_get_window_type")
external fun gtk_text_view_get_window_type(text_view: CValuesRef<GtkTextView>?, window: CValuesRef<GdkWindow>?): GtkTextWindowType

@CCall("knifunptr_libgtk36180_gtk_text_view_set_border_window_size")
external fun gtk_text_view_set_border_window_size(text_view: CValuesRef<GtkTextView>?, type: GtkTextWindowType, size: gint): Unit

@CCall("knifunptr_libgtk36181_gtk_text_view_get_border_window_size")
external fun gtk_text_view_get_border_window_size(text_view: CValuesRef<GtkTextView>?, type: GtkTextWindowType): gint

@CCall("knifunptr_libgtk36182_gtk_text_view_forward_display_line")
external fun gtk_text_view_forward_display_line(text_view: CValuesRef<GtkTextView>?, iter: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk36183_gtk_text_view_backward_display_line")
external fun gtk_text_view_backward_display_line(text_view: CValuesRef<GtkTextView>?, iter: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk36184_gtk_text_view_forward_display_line_end")
external fun gtk_text_view_forward_display_line_end(text_view: CValuesRef<GtkTextView>?, iter: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk36185_gtk_text_view_backward_display_line_start")
external fun gtk_text_view_backward_display_line_start(text_view: CValuesRef<GtkTextView>?, iter: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk36186_gtk_text_view_starts_display_line")
external fun gtk_text_view_starts_display_line(text_view: CValuesRef<GtkTextView>?, iter: CValuesRef<GtkTextIter>?): gboolean

@CCall("knifunptr_libgtk36187_gtk_text_view_move_visually")
external fun gtk_text_view_move_visually(text_view: CValuesRef<GtkTextView>?, iter: CValuesRef<GtkTextIter>?, count: gint): gboolean

@CCall("knifunptr_libgtk36188_gtk_text_view_im_context_filter_keypress")
external fun gtk_text_view_im_context_filter_keypress(text_view: CValuesRef<GtkTextView>?, event: CValuesRef<GdkEventKey>?): gboolean

@CCall("knifunptr_libgtk36189_gtk_text_view_reset_im_context")
external fun gtk_text_view_reset_im_context(text_view: CValuesRef<GtkTextView>?): Unit

@CCall("knifunptr_libgtk36190_gtk_text_view_add_child_at_anchor")
external fun gtk_text_view_add_child_at_anchor(text_view: CValuesRef<GtkTextView>?, child: CValuesRef<GtkWidget>?, anchor: CValuesRef<GtkTextChildAnchor>?): Unit

@CCall("knifunptr_libgtk36191_gtk_text_view_add_child_in_window")
external fun gtk_text_view_add_child_in_window(text_view: CValuesRef<GtkTextView>?, child: CValuesRef<GtkWidget>?, which_window: GtkTextWindowType, xpos: gint, ypos: gint): Unit

@CCall("knifunptr_libgtk36192_gtk_text_view_move_child")
external fun gtk_text_view_move_child(text_view: CValuesRef<GtkTextView>?, child: CValuesRef<GtkWidget>?, xpos: gint, ypos: gint): Unit

@CCall("knifunptr_libgtk36193_gtk_text_view_set_wrap_mode")
external fun gtk_text_view_set_wrap_mode(text_view: CValuesRef<GtkTextView>?, wrap_mode: GtkWrapMode): Unit

@CCall("knifunptr_libgtk36194_gtk_text_view_get_wrap_mode")
external fun gtk_text_view_get_wrap_mode(text_view: CValuesRef<GtkTextView>?): GtkWrapMode

@CCall("knifunptr_libgtk36195_gtk_text_view_set_editable")
external fun gtk_text_view_set_editable(text_view: CValuesRef<GtkTextView>?, setting: gboolean): Unit

@CCall("knifunptr_libgtk36196_gtk_text_view_get_editable")
external fun gtk_text_view_get_editable(text_view: CValuesRef<GtkTextView>?): gboolean

@CCall("knifunptr_libgtk36197_gtk_text_view_set_overwrite")
external fun gtk_text_view_set_overwrite(text_view: CValuesRef<GtkTextView>?, overwrite: gboolean): Unit

@CCall("knifunptr_libgtk36198_gtk_text_view_get_overwrite")
external fun gtk_text_view_get_overwrite(text_view: CValuesRef<GtkTextView>?): gboolean

@CCall("knifunptr_libgtk36199_gtk_text_view_set_accepts_tab")
external fun gtk_text_view_set_accepts_tab(text_view: CValuesRef<GtkTextView>?, accepts_tab: gboolean): Unit

@CCall("knifunptr_libgtk36200_gtk_text_view_get_accepts_tab")
external fun gtk_text_view_get_accepts_tab(text_view: CValuesRef<GtkTextView>?): gboolean

@CCall("knifunptr_libgtk36201_gtk_text_view_set_pixels_above_lines")
external fun gtk_text_view_set_pixels_above_lines(text_view: CValuesRef<GtkTextView>?, pixels_above_lines: gint): Unit

@CCall("knifunptr_libgtk36202_gtk_text_view_get_pixels_above_lines")
external fun gtk_text_view_get_pixels_above_lines(text_view: CValuesRef<GtkTextView>?): gint

@CCall("knifunptr_libgtk36203_gtk_text_view_set_pixels_below_lines")
external fun gtk_text_view_set_pixels_below_lines(text_view: CValuesRef<GtkTextView>?, pixels_below_lines: gint): Unit

@CCall("knifunptr_libgtk36204_gtk_text_view_get_pixels_below_lines")
external fun gtk_text_view_get_pixels_below_lines(text_view: CValuesRef<GtkTextView>?): gint

@CCall("knifunptr_libgtk36205_gtk_text_view_set_pixels_inside_wrap")
external fun gtk_text_view_set_pixels_inside_wrap(text_view: CValuesRef<GtkTextView>?, pixels_inside_wrap: gint): Unit

@CCall("knifunptr_libgtk36206_gtk_text_view_get_pixels_inside_wrap")
external fun gtk_text_view_get_pixels_inside_wrap(text_view: CValuesRef<GtkTextView>?): gint

@CCall("knifunptr_libgtk36207_gtk_text_view_set_justification")
external fun gtk_text_view_set_justification(text_view: CValuesRef<GtkTextView>?, justification: GtkJustification): Unit

@CCall("knifunptr_libgtk36208_gtk_text_view_get_justification")
external fun gtk_text_view_get_justification(text_view: CValuesRef<GtkTextView>?): GtkJustification

@CCall("knifunptr_libgtk36209_gtk_text_view_set_left_margin")
external fun gtk_text_view_set_left_margin(text_view: CValuesRef<GtkTextView>?, left_margin: gint): Unit

@CCall("knifunptr_libgtk36210_gtk_text_view_get_left_margin")
external fun gtk_text_view_get_left_margin(text_view: CValuesRef<GtkTextView>?): gint

@CCall("knifunptr_libgtk36211_gtk_text_view_set_right_margin")
external fun gtk_text_view_set_right_margin(text_view: CValuesRef<GtkTextView>?, right_margin: gint): Unit

@CCall("knifunptr_libgtk36212_gtk_text_view_get_right_margin")
external fun gtk_text_view_get_right_margin(text_view: CValuesRef<GtkTextView>?): gint

@CCall("knifunptr_libgtk36213_gtk_text_view_set_top_margin")
external fun gtk_text_view_set_top_margin(text_view: CValuesRef<GtkTextView>?, top_margin: gint): Unit

@CCall("knifunptr_libgtk36214_gtk_text_view_get_top_margin")
external fun gtk_text_view_get_top_margin(text_view: CValuesRef<GtkTextView>?): gint

@CCall("knifunptr_libgtk36215_gtk_text_view_set_bottom_margin")
external fun gtk_text_view_set_bottom_margin(text_view: CValuesRef<GtkTextView>?, bottom_margin: gint): Unit

@CCall("knifunptr_libgtk36216_gtk_text_view_get_bottom_margin")
external fun gtk_text_view_get_bottom_margin(text_view: CValuesRef<GtkTextView>?): gint

@CCall("knifunptr_libgtk36217_gtk_text_view_set_indent")
external fun gtk_text_view_set_indent(text_view: CValuesRef<GtkTextView>?, indent: gint): Unit

@CCall("knifunptr_libgtk36218_gtk_text_view_get_indent")
external fun gtk_text_view_get_indent(text_view: CValuesRef<GtkTextView>?): gint

@CCall("knifunptr_libgtk36219_gtk_text_view_set_tabs")
external fun gtk_text_view_set_tabs(text_view: CValuesRef<GtkTextView>?, tabs: CValuesRef<PangoTabArray>?): Unit

@CCall("knifunptr_libgtk36220_gtk_text_view_get_tabs")
external fun gtk_text_view_get_tabs(text_view: CValuesRef<GtkTextView>?): CPointer<PangoTabArray>?

@CCall("knifunptr_libgtk36221_gtk_text_view_get_default_attributes")
external fun gtk_text_view_get_default_attributes(text_view: CValuesRef<GtkTextView>?): CPointer<GtkTextAttributes>?

@CCall("knifunptr_libgtk36222_gtk_text_view_set_input_purpose")
external fun gtk_text_view_set_input_purpose(text_view: CValuesRef<GtkTextView>?, purpose: GtkInputPurpose): Unit

@CCall("knifunptr_libgtk36223_gtk_text_view_get_input_purpose")
external fun gtk_text_view_get_input_purpose(text_view: CValuesRef<GtkTextView>?): GtkInputPurpose

@CCall("knifunptr_libgtk36224_gtk_text_view_set_input_hints")
external fun gtk_text_view_set_input_hints(text_view: CValuesRef<GtkTextView>?, hints: GtkInputHints): Unit

@CCall("knifunptr_libgtk36225_gtk_text_view_get_input_hints")
external fun gtk_text_view_get_input_hints(text_view: CValuesRef<GtkTextView>?): GtkInputHints

@CCall("knifunptr_libgtk36226_gtk_text_view_set_monospace")
external fun gtk_text_view_set_monospace(text_view: CValuesRef<GtkTextView>?, monospace: gboolean): Unit

@CCall("knifunptr_libgtk36227_gtk_text_view_get_monospace")
external fun gtk_text_view_get_monospace(text_view: CValuesRef<GtkTextView>?): gboolean

@CCall("knifunptr_libgtk36228_gtk_toolbar_get_type")
external fun gtk_toolbar_get_type(): GType

@CCall("knifunptr_libgtk36229_gtk_toolbar_new")
external fun gtk_toolbar_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk36230_gtk_toolbar_insert")
external fun gtk_toolbar_insert(toolbar: CValuesRef<GtkToolbar>?, item: CValuesRef<GtkToolItem>?, pos: gint): Unit

@CCall("knifunptr_libgtk36231_gtk_toolbar_get_item_index")
external fun gtk_toolbar_get_item_index(toolbar: CValuesRef<GtkToolbar>?, item: CValuesRef<GtkToolItem>?): gint

@CCall("knifunptr_libgtk36232_gtk_toolbar_get_n_items")
external fun gtk_toolbar_get_n_items(toolbar: CValuesRef<GtkToolbar>?): gint

@CCall("knifunptr_libgtk36233_gtk_toolbar_get_nth_item")
external fun gtk_toolbar_get_nth_item(toolbar: CValuesRef<GtkToolbar>?, n: gint): CPointer<GtkToolItem>?

@CCall("knifunptr_libgtk36234_gtk_toolbar_get_show_arrow")
external fun gtk_toolbar_get_show_arrow(toolbar: CValuesRef<GtkToolbar>?): gboolean

@CCall("knifunptr_libgtk36235_gtk_toolbar_set_show_arrow")
external fun gtk_toolbar_set_show_arrow(toolbar: CValuesRef<GtkToolbar>?, show_arrow: gboolean): Unit

@CCall("knifunptr_libgtk36236_gtk_toolbar_get_style")
external fun gtk_toolbar_get_style(toolbar: CValuesRef<GtkToolbar>?): GtkToolbarStyle

@CCall("knifunptr_libgtk36237_gtk_toolbar_set_style")
external fun gtk_toolbar_set_style(toolbar: CValuesRef<GtkToolbar>?, style: GtkToolbarStyle): Unit

@CCall("knifunptr_libgtk36238_gtk_toolbar_unset_style")
external fun gtk_toolbar_unset_style(toolbar: CValuesRef<GtkToolbar>?): Unit

@CCall("knifunptr_libgtk36239_gtk_toolbar_get_icon_size")
external fun gtk_toolbar_get_icon_size(toolbar: CValuesRef<GtkToolbar>?): GtkIconSize

@CCall("knifunptr_libgtk36240_gtk_toolbar_set_icon_size")
external fun gtk_toolbar_set_icon_size(toolbar: CValuesRef<GtkToolbar>?, icon_size: GtkIconSize): Unit

@CCall("knifunptr_libgtk36241_gtk_toolbar_unset_icon_size")
external fun gtk_toolbar_unset_icon_size(toolbar: CValuesRef<GtkToolbar>?): Unit

@CCall("knifunptr_libgtk36242_gtk_toolbar_get_relief_style")
external fun gtk_toolbar_get_relief_style(toolbar: CValuesRef<GtkToolbar>?): GtkReliefStyle

@CCall("knifunptr_libgtk36243_gtk_toolbar_get_drop_index")
external fun gtk_toolbar_get_drop_index(toolbar: CValuesRef<GtkToolbar>?, x: gint, y: gint): gint

@CCall("knifunptr_libgtk36244_gtk_toolbar_set_drop_highlight_item")
external fun gtk_toolbar_set_drop_highlight_item(toolbar: CValuesRef<GtkToolbar>?, tool_item: CValuesRef<GtkToolItem>?, index_: gint): Unit

@CCall("knifunptr_libgtk36245_gtk_tool_item_group_get_type")
external fun gtk_tool_item_group_get_type(): GType

@CCall("knifunptr_libgtk36246_gtk_tool_item_group_new")
external fun gtk_tool_item_group_new(@CCall.CString label: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk36247_gtk_tool_item_group_set_label")
external fun gtk_tool_item_group_set_label(group: CValuesRef<GtkToolItemGroup>?, @CCall.CString label: String?): Unit

@CCall("knifunptr_libgtk36248_gtk_tool_item_group_set_label_widget")
external fun gtk_tool_item_group_set_label_widget(group: CValuesRef<GtkToolItemGroup>?, label_widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk36249_gtk_tool_item_group_set_collapsed")
external fun gtk_tool_item_group_set_collapsed(group: CValuesRef<GtkToolItemGroup>?, collapsed: gboolean): Unit

@CCall("knifunptr_libgtk36250_gtk_tool_item_group_set_ellipsize")
external fun gtk_tool_item_group_set_ellipsize(group: CValuesRef<GtkToolItemGroup>?, ellipsize: PangoEllipsizeMode): Unit

@CCall("knifunptr_libgtk36251_gtk_tool_item_group_set_header_relief")
external fun gtk_tool_item_group_set_header_relief(group: CValuesRef<GtkToolItemGroup>?, style: GtkReliefStyle): Unit

@CCall("knifunptr_libgtk36252_gtk_tool_item_group_get_label")
external fun gtk_tool_item_group_get_label(group: CValuesRef<GtkToolItemGroup>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk36253_gtk_tool_item_group_get_label_widget")
external fun gtk_tool_item_group_get_label_widget(group: CValuesRef<GtkToolItemGroup>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk36254_gtk_tool_item_group_get_collapsed")
external fun gtk_tool_item_group_get_collapsed(group: CValuesRef<GtkToolItemGroup>?): gboolean

@CCall("knifunptr_libgtk36255_gtk_tool_item_group_get_ellipsize")
external fun gtk_tool_item_group_get_ellipsize(group: CValuesRef<GtkToolItemGroup>?): PangoEllipsizeMode

@CCall("knifunptr_libgtk36256_gtk_tool_item_group_get_header_relief")
external fun gtk_tool_item_group_get_header_relief(group: CValuesRef<GtkToolItemGroup>?): GtkReliefStyle

@CCall("knifunptr_libgtk36257_gtk_tool_item_group_insert")
external fun gtk_tool_item_group_insert(group: CValuesRef<GtkToolItemGroup>?, item: CValuesRef<GtkToolItem>?, position: gint): Unit

@CCall("knifunptr_libgtk36258_gtk_tool_item_group_set_item_position")
external fun gtk_tool_item_group_set_item_position(group: CValuesRef<GtkToolItemGroup>?, item: CValuesRef<GtkToolItem>?, position: gint): Unit

@CCall("knifunptr_libgtk36259_gtk_tool_item_group_get_item_position")
external fun gtk_tool_item_group_get_item_position(group: CValuesRef<GtkToolItemGroup>?, item: CValuesRef<GtkToolItem>?): gint

@CCall("knifunptr_libgtk36260_gtk_tool_item_group_get_n_items")
external fun gtk_tool_item_group_get_n_items(group: CValuesRef<GtkToolItemGroup>?): guint

@CCall("knifunptr_libgtk36261_gtk_tool_item_group_get_nth_item")
external fun gtk_tool_item_group_get_nth_item(group: CValuesRef<GtkToolItemGroup>?, index: guint): CPointer<GtkToolItem>?

@CCall("knifunptr_libgtk36262_gtk_tool_item_group_get_drop_item")
external fun gtk_tool_item_group_get_drop_item(group: CValuesRef<GtkToolItemGroup>?, x: gint, y: gint): CPointer<GtkToolItem>?

@CCall("knifunptr_libgtk36263_gtk_tool_palette_get_type")
external fun gtk_tool_palette_get_type(): GType

@CCall("knifunptr_libgtk36264_gtk_tool_palette_new")
external fun gtk_tool_palette_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk36265_gtk_tool_palette_set_group_position")
external fun gtk_tool_palette_set_group_position(palette: CValuesRef<GtkToolPalette>?, group: CValuesRef<GtkToolItemGroup>?, position: gint): Unit

@CCall("knifunptr_libgtk36266_gtk_tool_palette_set_exclusive")
external fun gtk_tool_palette_set_exclusive(palette: CValuesRef<GtkToolPalette>?, group: CValuesRef<GtkToolItemGroup>?, exclusive: gboolean): Unit

@CCall("knifunptr_libgtk36267_gtk_tool_palette_set_expand")
external fun gtk_tool_palette_set_expand(palette: CValuesRef<GtkToolPalette>?, group: CValuesRef<GtkToolItemGroup>?, expand: gboolean): Unit

@CCall("knifunptr_libgtk36268_gtk_tool_palette_get_group_position")
external fun gtk_tool_palette_get_group_position(palette: CValuesRef<GtkToolPalette>?, group: CValuesRef<GtkToolItemGroup>?): gint

@CCall("knifunptr_libgtk36269_gtk_tool_palette_get_exclusive")
external fun gtk_tool_palette_get_exclusive(palette: CValuesRef<GtkToolPalette>?, group: CValuesRef<GtkToolItemGroup>?): gboolean

@CCall("knifunptr_libgtk36270_gtk_tool_palette_get_expand")
external fun gtk_tool_palette_get_expand(palette: CValuesRef<GtkToolPalette>?, group: CValuesRef<GtkToolItemGroup>?): gboolean

@CCall("knifunptr_libgtk36271_gtk_tool_palette_set_icon_size")
external fun gtk_tool_palette_set_icon_size(palette: CValuesRef<GtkToolPalette>?, icon_size: GtkIconSize): Unit

@CCall("knifunptr_libgtk36272_gtk_tool_palette_unset_icon_size")
external fun gtk_tool_palette_unset_icon_size(palette: CValuesRef<GtkToolPalette>?): Unit

@CCall("knifunptr_libgtk36273_gtk_tool_palette_set_style")
external fun gtk_tool_palette_set_style(palette: CValuesRef<GtkToolPalette>?, style: GtkToolbarStyle): Unit

@CCall("knifunptr_libgtk36274_gtk_tool_palette_unset_style")
external fun gtk_tool_palette_unset_style(palette: CValuesRef<GtkToolPalette>?): Unit

@CCall("knifunptr_libgtk36275_gtk_tool_palette_get_icon_size")
external fun gtk_tool_palette_get_icon_size(palette: CValuesRef<GtkToolPalette>?): GtkIconSize

@CCall("knifunptr_libgtk36276_gtk_tool_palette_get_style")
external fun gtk_tool_palette_get_style(palette: CValuesRef<GtkToolPalette>?): GtkToolbarStyle

@CCall("knifunptr_libgtk36277_gtk_tool_palette_get_drop_item")
external fun gtk_tool_palette_get_drop_item(palette: CValuesRef<GtkToolPalette>?, x: gint, y: gint): CPointer<GtkToolItem>?

@CCall("knifunptr_libgtk36278_gtk_tool_palette_get_drop_group")
external fun gtk_tool_palette_get_drop_group(palette: CValuesRef<GtkToolPalette>?, x: gint, y: gint): CPointer<GtkToolItemGroup>?

@CCall("knifunptr_libgtk36279_gtk_tool_palette_get_drag_item")
external fun gtk_tool_palette_get_drag_item(palette: CValuesRef<GtkToolPalette>?, selection: CValuesRef<GtkSelectionData>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk36280_gtk_tool_palette_set_drag_source")
external fun gtk_tool_palette_set_drag_source(palette: CValuesRef<GtkToolPalette>?, targets: GtkToolPaletteDragTargets): Unit

@CCall("knifunptr_libgtk36281_gtk_tool_palette_add_drag_dest")
external fun gtk_tool_palette_add_drag_dest(palette: CValuesRef<GtkToolPalette>?, widget: CValuesRef<GtkWidget>?, flags: GtkDestDefaults, targets: GtkToolPaletteDragTargets, actions: GdkDragAction): Unit

@CCall("knifunptr_libgtk36282_gtk_tool_palette_get_hadjustment")
external fun gtk_tool_palette_get_hadjustment(palette: CValuesRef<GtkToolPalette>?): CPointer<GtkAdjustment>?

@CCall("knifunptr_libgtk36283_gtk_tool_palette_get_vadjustment")
external fun gtk_tool_palette_get_vadjustment(palette: CValuesRef<GtkToolPalette>?): CPointer<GtkAdjustment>?

@CCall("knifunptr_libgtk36284_gtk_tool_palette_get_drag_target_item")
external fun gtk_tool_palette_get_drag_target_item(): CPointer<GtkTargetEntry>?

@CCall("knifunptr_libgtk36285_gtk_tool_palette_get_drag_target_group")
external fun gtk_tool_palette_get_drag_target_group(): CPointer<GtkTargetEntry>?

@CCall("knifunptr_libgtk36286_gtk_tool_shell_get_type")
external fun gtk_tool_shell_get_type(): GType

@CCall("knifunptr_libgtk36287_gtk_tool_shell_get_icon_size")
external fun gtk_tool_shell_get_icon_size(shell: CValuesRef<GtkToolShell>?): GtkIconSize

@CCall("knifunptr_libgtk36288_gtk_tool_shell_get_orientation")
external fun gtk_tool_shell_get_orientation(shell: CValuesRef<GtkToolShell>?): GtkOrientation

@CCall("knifunptr_libgtk36289_gtk_tool_shell_get_style")
external fun gtk_tool_shell_get_style(shell: CValuesRef<GtkToolShell>?): GtkToolbarStyle

@CCall("knifunptr_libgtk36290_gtk_tool_shell_get_relief_style")
external fun gtk_tool_shell_get_relief_style(shell: CValuesRef<GtkToolShell>?): GtkReliefStyle

@CCall("knifunptr_libgtk36291_gtk_tool_shell_rebuild_menu")
external fun gtk_tool_shell_rebuild_menu(shell: CValuesRef<GtkToolShell>?): Unit

@CCall("knifunptr_libgtk36292_gtk_tool_shell_get_text_orientation")
external fun gtk_tool_shell_get_text_orientation(shell: CValuesRef<GtkToolShell>?): GtkOrientation

@CCall("knifunptr_libgtk36293_gtk_tool_shell_get_text_alignment")
external fun gtk_tool_shell_get_text_alignment(shell: CValuesRef<GtkToolShell>?): gfloat

@CCall("knifunptr_libgtk36294_gtk_tool_shell_get_ellipsize_mode")
external fun gtk_tool_shell_get_ellipsize_mode(shell: CValuesRef<GtkToolShell>?): PangoEllipsizeMode

@CCall("knifunptr_libgtk36295_gtk_tool_shell_get_text_size_group")
external fun gtk_tool_shell_get_text_size_group(shell: CValuesRef<GtkToolShell>?): CPointer<GtkSizeGroup>?

@CCall("knifunptr_libgtk36296_gtk_test_init")
external fun gtk_test_init(argcp: CValuesRef<IntVar>?, argvp: CValuesRef<CPointerVar<CPointerVar<ByteVar>>>?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk36297_gtk_test_register_all_types")
external fun gtk_test_register_all_types(): Unit

@CCall("knifunptr_libgtk36298_gtk_test_list_all_types")
external fun gtk_test_list_all_types(n_types: CValuesRef<guintVar>?): CPointer<GTypeVar>?

@CCall("knifunptr_libgtk36299_gtk_test_find_widget")
external fun gtk_test_find_widget(widget: CValuesRef<GtkWidget>?, @CCall.CString label_pattern: String?, widget_type: GType): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk36300_gtk_test_create_widget")
external fun gtk_test_create_widget(widget_type: GType, @CCall.CString first_property_name: String?, vararg variadicArguments: Any?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk36301_gtk_test_create_simple_window")
external fun gtk_test_create_simple_window(@CCall.CString window_title: String?, @CCall.CString dialog_text: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk36302_gtk_test_display_button_window")
external fun gtk_test_display_button_window(@CCall.CString window_title: String?, @CCall.CString dialog_text: String?, vararg variadicArguments: Any?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk36303_gtk_test_slider_set_perc")
external fun gtk_test_slider_set_perc(widget: CValuesRef<GtkWidget>?, percentage: Double): Unit

@CCall("knifunptr_libgtk36304_gtk_test_slider_get_value")
external fun gtk_test_slider_get_value(widget: CValuesRef<GtkWidget>?): Double

@CCall("knifunptr_libgtk36305_gtk_test_spin_button_click")
external fun gtk_test_spin_button_click(spinner: CValuesRef<GtkSpinButton>?, button: guint, upwards: gboolean): gboolean

@CCall("knifunptr_libgtk36306_gtk_test_widget_wait_for_draw")
external fun gtk_test_widget_wait_for_draw(widget: CValuesRef<GtkWidget>?): Unit

@CCall("knifunptr_libgtk36307_gtk_test_widget_click")
external fun gtk_test_widget_click(widget: CValuesRef<GtkWidget>?, button: guint, modifiers: GdkModifierType): gboolean

@CCall("knifunptr_libgtk36308_gtk_test_widget_send_key")
external fun gtk_test_widget_send_key(widget: CValuesRef<GtkWidget>?, keyval: guint, modifiers: GdkModifierType): gboolean

@CCall("knifunptr_libgtk36309_gtk_test_text_set")
external fun gtk_test_text_set(widget: CValuesRef<GtkWidget>?, @CCall.CString string: String?): Unit

@CCall("knifunptr_libgtk36310_gtk_test_text_get")
external fun gtk_test_text_get(widget: CValuesRef<GtkWidget>?): CPointer<gcharVar>?

@CCall("knifunptr_libgtk36311_gtk_test_find_sibling")
external fun gtk_test_find_sibling(base_widget: CValuesRef<GtkWidget>?, widget_type: GType): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk36312_gtk_test_find_label")
external fun gtk_test_find_label(widget: CValuesRef<GtkWidget>?, @CCall.CString label_pattern: String?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk36313_gtk_tree_drag_source_get_type")
external fun gtk_tree_drag_source_get_type(): GType

@CCall("knifunptr_libgtk36314_gtk_tree_drag_source_row_draggable")
external fun gtk_tree_drag_source_row_draggable(drag_source: CValuesRef<GtkTreeDragSource>?, path: CValuesRef<GtkTreePath>?): gboolean

@CCall("knifunptr_libgtk36315_gtk_tree_drag_source_drag_data_delete")
external fun gtk_tree_drag_source_drag_data_delete(drag_source: CValuesRef<GtkTreeDragSource>?, path: CValuesRef<GtkTreePath>?): gboolean

@CCall("knifunptr_libgtk36316_gtk_tree_drag_source_drag_data_get")
external fun gtk_tree_drag_source_drag_data_get(drag_source: CValuesRef<GtkTreeDragSource>?, path: CValuesRef<GtkTreePath>?, selection_data: CValuesRef<GtkSelectionData>?): gboolean

@CCall("knifunptr_libgtk36317_gtk_tree_drag_dest_get_type")
external fun gtk_tree_drag_dest_get_type(): GType

@CCall("knifunptr_libgtk36318_gtk_tree_drag_dest_drag_data_received")
external fun gtk_tree_drag_dest_drag_data_received(drag_dest: CValuesRef<GtkTreeDragDest>?, dest: CValuesRef<GtkTreePath>?, selection_data: CValuesRef<GtkSelectionData>?): gboolean

@CCall("knifunptr_libgtk36319_gtk_tree_drag_dest_row_drop_possible")
external fun gtk_tree_drag_dest_row_drop_possible(drag_dest: CValuesRef<GtkTreeDragDest>?, dest_path: CValuesRef<GtkTreePath>?, selection_data: CValuesRef<GtkSelectionData>?): gboolean

@CCall("knifunptr_libgtk36320_gtk_tree_set_row_drag_data")
external fun gtk_tree_set_row_drag_data(selection_data: CValuesRef<GtkSelectionData>?, tree_model: CValuesRef<GtkTreeModel>?, path: CValuesRef<GtkTreePath>?): gboolean

@CCall("knifunptr_libgtk36321_gtk_tree_get_row_drag_data")
external fun gtk_tree_get_row_drag_data(selection_data: CValuesRef<GtkSelectionData>?, tree_model: CValuesRef<CPointerVar<GtkTreeModel>>?, path: CValuesRef<CPointerVar<GtkTreePath>>?): gboolean

@CCall("knifunptr_libgtk36322_gtk_tree_model_sort_get_type")
external fun gtk_tree_model_sort_get_type(): GType

@CCall("knifunptr_libgtk36323_gtk_tree_model_sort_new_with_model")
external fun gtk_tree_model_sort_new_with_model(child_model: CValuesRef<GtkTreeModel>?): CPointer<GtkTreeModel>?

@CCall("knifunptr_libgtk36324_gtk_tree_model_sort_get_model")
external fun gtk_tree_model_sort_get_model(tree_model: CValuesRef<GtkTreeModelSort>?): CPointer<GtkTreeModel>?

@CCall("knifunptr_libgtk36325_gtk_tree_model_sort_convert_child_path_to_path")
external fun gtk_tree_model_sort_convert_child_path_to_path(tree_model_sort: CValuesRef<GtkTreeModelSort>?, child_path: CValuesRef<GtkTreePath>?): CPointer<GtkTreePath>?

@CCall("knifunptr_libgtk36326_gtk_tree_model_sort_convert_child_iter_to_iter")
external fun gtk_tree_model_sort_convert_child_iter_to_iter(tree_model_sort: CValuesRef<GtkTreeModelSort>?, sort_iter: CValuesRef<GtkTreeIter>?, child_iter: CValuesRef<GtkTreeIter>?): gboolean

@CCall("knifunptr_libgtk36327_gtk_tree_model_sort_convert_path_to_child_path")
external fun gtk_tree_model_sort_convert_path_to_child_path(tree_model_sort: CValuesRef<GtkTreeModelSort>?, sorted_path: CValuesRef<GtkTreePath>?): CPointer<GtkTreePath>?

@CCall("knifunptr_libgtk36328_gtk_tree_model_sort_convert_iter_to_child_iter")
external fun gtk_tree_model_sort_convert_iter_to_child_iter(tree_model_sort: CValuesRef<GtkTreeModelSort>?, child_iter: CValuesRef<GtkTreeIter>?, sorted_iter: CValuesRef<GtkTreeIter>?): Unit

@CCall("knifunptr_libgtk36329_gtk_tree_model_sort_reset_default_sort_func")
external fun gtk_tree_model_sort_reset_default_sort_func(tree_model_sort: CValuesRef<GtkTreeModelSort>?): Unit

@CCall("knifunptr_libgtk36330_gtk_tree_model_sort_clear_cache")
external fun gtk_tree_model_sort_clear_cache(tree_model_sort: CValuesRef<GtkTreeModelSort>?): Unit

@CCall("knifunptr_libgtk36331_gtk_tree_model_sort_iter_is_valid")
external fun gtk_tree_model_sort_iter_is_valid(tree_model_sort: CValuesRef<GtkTreeModelSort>?, iter: CValuesRef<GtkTreeIter>?): gboolean

@CCall("knifunptr_libgtk36332_gtk_tree_selection_get_type")
external fun gtk_tree_selection_get_type(): GType

@CCall("knifunptr_libgtk36333_gtk_tree_selection_set_mode")
external fun gtk_tree_selection_set_mode(selection: CValuesRef<GtkTreeSelection>?, type: GtkSelectionMode): Unit

@CCall("knifunptr_libgtk36334_gtk_tree_selection_get_mode")
external fun gtk_tree_selection_get_mode(selection: CValuesRef<GtkTreeSelection>?): GtkSelectionMode

@CCall("knifunptr_libgtk36335_gtk_tree_selection_set_select_function")
external fun gtk_tree_selection_set_select_function(selection: CValuesRef<GtkTreeSelection>?, func: GtkTreeSelectionFunc?, data: gpointer?, destroy: GDestroyNotify?): Unit

@CCall("knifunptr_libgtk36336_gtk_tree_selection_get_user_data")
external fun gtk_tree_selection_get_user_data(selection: CValuesRef<GtkTreeSelection>?): gpointer?

@CCall("knifunptr_libgtk36337_gtk_tree_selection_get_tree_view")
external fun gtk_tree_selection_get_tree_view(selection: CValuesRef<GtkTreeSelection>?): CPointer<GtkTreeView>?

@CCall("knifunptr_libgtk36338_gtk_tree_selection_get_select_function")
external fun gtk_tree_selection_get_select_function(selection: CValuesRef<GtkTreeSelection>?): GtkTreeSelectionFunc?

@CCall("knifunptr_libgtk36339_gtk_tree_selection_get_selected")
external fun gtk_tree_selection_get_selected(selection: CValuesRef<GtkTreeSelection>?, model: CValuesRef<CPointerVar<GtkTreeModel>>?, iter: CValuesRef<GtkTreeIter>?): gboolean

@CCall("knifunptr_libgtk36340_gtk_tree_selection_get_selected_rows")
external fun gtk_tree_selection_get_selected_rows(selection: CValuesRef<GtkTreeSelection>?, model: CValuesRef<CPointerVar<GtkTreeModel>>?): CPointer<GList>?

@CCall("knifunptr_libgtk36341_gtk_tree_selection_count_selected_rows")
external fun gtk_tree_selection_count_selected_rows(selection: CValuesRef<GtkTreeSelection>?): gint

@CCall("knifunptr_libgtk36342_gtk_tree_selection_selected_foreach")
external fun gtk_tree_selection_selected_foreach(selection: CValuesRef<GtkTreeSelection>?, func: GtkTreeSelectionForeachFunc?, data: gpointer?): Unit

@CCall("knifunptr_libgtk36343_gtk_tree_selection_select_path")
external fun gtk_tree_selection_select_path(selection: CValuesRef<GtkTreeSelection>?, path: CValuesRef<GtkTreePath>?): Unit

@CCall("knifunptr_libgtk36344_gtk_tree_selection_unselect_path")
external fun gtk_tree_selection_unselect_path(selection: CValuesRef<GtkTreeSelection>?, path: CValuesRef<GtkTreePath>?): Unit

@CCall("knifunptr_libgtk36345_gtk_tree_selection_select_iter")
external fun gtk_tree_selection_select_iter(selection: CValuesRef<GtkTreeSelection>?, iter: CValuesRef<GtkTreeIter>?): Unit

@CCall("knifunptr_libgtk36346_gtk_tree_selection_unselect_iter")
external fun gtk_tree_selection_unselect_iter(selection: CValuesRef<GtkTreeSelection>?, iter: CValuesRef<GtkTreeIter>?): Unit

@CCall("knifunptr_libgtk36347_gtk_tree_selection_path_is_selected")
external fun gtk_tree_selection_path_is_selected(selection: CValuesRef<GtkTreeSelection>?, path: CValuesRef<GtkTreePath>?): gboolean

@CCall("knifunptr_libgtk36348_gtk_tree_selection_iter_is_selected")
external fun gtk_tree_selection_iter_is_selected(selection: CValuesRef<GtkTreeSelection>?, iter: CValuesRef<GtkTreeIter>?): gboolean

@CCall("knifunptr_libgtk36349_gtk_tree_selection_select_all")
external fun gtk_tree_selection_select_all(selection: CValuesRef<GtkTreeSelection>?): Unit

@CCall("knifunptr_libgtk36350_gtk_tree_selection_unselect_all")
external fun gtk_tree_selection_unselect_all(selection: CValuesRef<GtkTreeSelection>?): Unit

@CCall("knifunptr_libgtk36351_gtk_tree_selection_select_range")
external fun gtk_tree_selection_select_range(selection: CValuesRef<GtkTreeSelection>?, start_path: CValuesRef<GtkTreePath>?, end_path: CValuesRef<GtkTreePath>?): Unit

@CCall("knifunptr_libgtk36352_gtk_tree_selection_unselect_range")
external fun gtk_tree_selection_unselect_range(selection: CValuesRef<GtkTreeSelection>?, start_path: CValuesRef<GtkTreePath>?, end_path: CValuesRef<GtkTreePath>?): Unit

@CCall("knifunptr_libgtk36353_gtk_tree_store_get_type")
external fun gtk_tree_store_get_type(): GType

@CCall("knifunptr_libgtk36354_gtk_tree_store_new")
external fun gtk_tree_store_new(n_columns: gint, vararg variadicArguments: Any?): CPointer<GtkTreeStore>?

@CCall("knifunptr_libgtk36355_gtk_tree_store_newv")
external fun gtk_tree_store_newv(n_columns: gint, types: CValuesRef<GTypeVar>?): CPointer<GtkTreeStore>?

@CCall("knifunptr_libgtk36356_gtk_tree_store_set_column_types")
external fun gtk_tree_store_set_column_types(tree_store: CValuesRef<GtkTreeStore>?, n_columns: gint, types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_libgtk36357_gtk_tree_store_set_value")
external fun gtk_tree_store_set_value(tree_store: CValuesRef<GtkTreeStore>?, iter: CValuesRef<GtkTreeIter>?, column: gint, value: CValuesRef<GValue>?): Unit

@CCall("knifunptr_libgtk36358_gtk_tree_store_set")
external fun gtk_tree_store_set(tree_store: CValuesRef<GtkTreeStore>?, iter: CValuesRef<GtkTreeIter>?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk36359_gtk_tree_store_set_valuesv")
external fun gtk_tree_store_set_valuesv(tree_store: CValuesRef<GtkTreeStore>?, iter: CValuesRef<GtkTreeIter>?, columns: CValuesRef<gintVar>?, values: CValuesRef<GValue>?, n_values: gint): Unit

@CCall("knifunptr_libgtk36360_gtk_tree_store_set_valist")
external fun gtk_tree_store_set_valist(tree_store: CValuesRef<GtkTreeStore>?, iter: CValuesRef<GtkTreeIter>?, var_args: va_list?): Unit

@CCall("knifunptr_libgtk36361_gtk_tree_store_remove")
external fun gtk_tree_store_remove(tree_store: CValuesRef<GtkTreeStore>?, iter: CValuesRef<GtkTreeIter>?): gboolean

@CCall("knifunptr_libgtk36362_gtk_tree_store_insert")
external fun gtk_tree_store_insert(tree_store: CValuesRef<GtkTreeStore>?, iter: CValuesRef<GtkTreeIter>?, parent: CValuesRef<GtkTreeIter>?, position: gint): Unit

@CCall("knifunptr_libgtk36363_gtk_tree_store_insert_before")
external fun gtk_tree_store_insert_before(tree_store: CValuesRef<GtkTreeStore>?, iter: CValuesRef<GtkTreeIter>?, parent: CValuesRef<GtkTreeIter>?, sibling: CValuesRef<GtkTreeIter>?): Unit

@CCall("knifunptr_libgtk36364_gtk_tree_store_insert_after")
external fun gtk_tree_store_insert_after(tree_store: CValuesRef<GtkTreeStore>?, iter: CValuesRef<GtkTreeIter>?, parent: CValuesRef<GtkTreeIter>?, sibling: CValuesRef<GtkTreeIter>?): Unit

@CCall("knifunptr_libgtk36365_gtk_tree_store_insert_with_values")
external fun gtk_tree_store_insert_with_values(tree_store: CValuesRef<GtkTreeStore>?, iter: CValuesRef<GtkTreeIter>?, parent: CValuesRef<GtkTreeIter>?, position: gint, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_libgtk36366_gtk_tree_store_insert_with_valuesv")
external fun gtk_tree_store_insert_with_valuesv(tree_store: CValuesRef<GtkTreeStore>?, iter: CValuesRef<GtkTreeIter>?, parent: CValuesRef<GtkTreeIter>?, position: gint, columns: CValuesRef<gintVar>?, values: CValuesRef<GValue>?, n_values: gint): Unit

@CCall("knifunptr_libgtk36367_gtk_tree_store_prepend")
external fun gtk_tree_store_prepend(tree_store: CValuesRef<GtkTreeStore>?, iter: CValuesRef<GtkTreeIter>?, parent: CValuesRef<GtkTreeIter>?): Unit

@CCall("knifunptr_libgtk36368_gtk_tree_store_append")
external fun gtk_tree_store_append(tree_store: CValuesRef<GtkTreeStore>?, iter: CValuesRef<GtkTreeIter>?, parent: CValuesRef<GtkTreeIter>?): Unit

@CCall("knifunptr_libgtk36369_gtk_tree_store_is_ancestor")
external fun gtk_tree_store_is_ancestor(tree_store: CValuesRef<GtkTreeStore>?, iter: CValuesRef<GtkTreeIter>?, descendant: CValuesRef<GtkTreeIter>?): gboolean

@CCall("knifunptr_libgtk36370_gtk_tree_store_iter_depth")
external fun gtk_tree_store_iter_depth(tree_store: CValuesRef<GtkTreeStore>?, iter: CValuesRef<GtkTreeIter>?): gint

@CCall("knifunptr_libgtk36371_gtk_tree_store_clear")
external fun gtk_tree_store_clear(tree_store: CValuesRef<GtkTreeStore>?): Unit

@CCall("knifunptr_libgtk36372_gtk_tree_store_iter_is_valid")
external fun gtk_tree_store_iter_is_valid(tree_store: CValuesRef<GtkTreeStore>?, iter: CValuesRef<GtkTreeIter>?): gboolean

@CCall("knifunptr_libgtk36373_gtk_tree_store_reorder")
external fun gtk_tree_store_reorder(tree_store: CValuesRef<GtkTreeStore>?, parent: CValuesRef<GtkTreeIter>?, new_order: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_libgtk36374_gtk_tree_store_swap")
external fun gtk_tree_store_swap(tree_store: CValuesRef<GtkTreeStore>?, a: CValuesRef<GtkTreeIter>?, b: CValuesRef<GtkTreeIter>?): Unit

@CCall("knifunptr_libgtk36375_gtk_tree_store_move_before")
external fun gtk_tree_store_move_before(tree_store: CValuesRef<GtkTreeStore>?, iter: CValuesRef<GtkTreeIter>?, position: CValuesRef<GtkTreeIter>?): Unit

@CCall("knifunptr_libgtk36376_gtk_tree_store_move_after")
external fun gtk_tree_store_move_after(tree_store: CValuesRef<GtkTreeStore>?, iter: CValuesRef<GtkTreeIter>?, position: CValuesRef<GtkTreeIter>?): Unit

@CCall("knifunptr_libgtk36377_gtk_rc_flags_get_type")
external fun gtk_rc_flags_get_type(): GType

@CCall("knifunptr_libgtk36378_gtk_rc_token_type_get_type")
external fun gtk_rc_token_type_get_type(): GType

@CCall("knifunptr_libgtk36379_gtk_path_priority_type_get_type")
external fun gtk_path_priority_type_get_type(): GType

@CCall("knifunptr_libgtk36380_gtk_path_type_get_type")
external fun gtk_path_type_get_type(): GType

@CCall("knifunptr_libgtk36381_gtk_expander_style_get_type")
external fun gtk_expander_style_get_type(): GType

@CCall("knifunptr_libgtk36382_gtk_attach_options_get_type")
external fun gtk_attach_options_get_type(): GType

@CCall("knifunptr_libgtk36383_gtk_ui_manager_item_type_get_type")
external fun gtk_ui_manager_item_type_get_type(): GType

@CCall("knifunptr_libgtk36384_gtk_license_get_type")
external fun gtk_license_get_type(): GType

@CCall("knifunptr_libgtk36385_gtk_accel_flags_get_type")
external fun gtk_accel_flags_get_type(): GType

@CCall("knifunptr_libgtk36386_gtk_application_inhibit_flags_get_type")
external fun gtk_application_inhibit_flags_get_type(): GType

@CCall("knifunptr_libgtk36387_gtk_assistant_page_type_get_type")
external fun gtk_assistant_page_type_get_type(): GType

@CCall("knifunptr_libgtk36388_gtk_button_box_style_get_type")
external fun gtk_button_box_style_get_type(): GType

@CCall("knifunptr_libgtk36389_gtk_builder_error_get_type")
external fun gtk_builder_error_get_type(): GType

@CCall("knifunptr_libgtk36390_gtk_calendar_display_options_get_type")
external fun gtk_calendar_display_options_get_type(): GType

@CCall("knifunptr_libgtk36391_gtk_cell_renderer_state_get_type")
external fun gtk_cell_renderer_state_get_type(): GType

@CCall("knifunptr_libgtk36392_gtk_cell_renderer_mode_get_type")
external fun gtk_cell_renderer_mode_get_type(): GType

@CCall("knifunptr_libgtk36393_gtk_cell_renderer_accel_mode_get_type")
external fun gtk_cell_renderer_accel_mode_get_type(): GType

@CCall("knifunptr_libgtk36394_gtk_resize_mode_get_type")
external fun gtk_resize_mode_get_type(): GType

@CCall("knifunptr_libgtk36395_gtk_css_provider_error_get_type")
external fun gtk_css_provider_error_get_type(): GType

@CCall("knifunptr_libgtk36396_gtk_css_section_type_get_type")
external fun gtk_css_section_type_get_type(): GType

@CCall("knifunptr_libgtk36397_gtk_debug_flag_get_type")
external fun gtk_debug_flag_get_type(): GType

@CCall("knifunptr_libgtk36398_gtk_dialog_flags_get_type")
external fun gtk_dialog_flags_get_type(): GType

@CCall("knifunptr_libgtk36399_gtk_response_type_get_type")
external fun gtk_response_type_get_type(): GType

@CCall("knifunptr_libgtk36400_gtk_dest_defaults_get_type")
external fun gtk_dest_defaults_get_type(): GType

@CCall("knifunptr_libgtk36401_gtk_entry_icon_position_get_type")
external fun gtk_entry_icon_position_get_type(): GType

@CCall("knifunptr_libgtk36402_gtk_align_get_type")
external fun gtk_align_get_type(): GType

@CCall("knifunptr_libgtk36403_gtk_arrow_type_get_type")
external fun gtk_arrow_type_get_type(): GType

@CCall("knifunptr_libgtk36404_gtk_baseline_position_get_type")
external fun gtk_baseline_position_get_type(): GType

@CCall("knifunptr_libgtk36405_gtk_delete_type_get_type")
external fun gtk_delete_type_get_type(): GType

@CCall("knifunptr_libgtk36406_gtk_direction_type_get_type")
external fun gtk_direction_type_get_type(): GType

@CCall("knifunptr_libgtk36407_gtk_icon_size_get_type")
external fun gtk_icon_size_get_type(): GType

@CCall("knifunptr_libgtk36408_gtk_sensitivity_type_get_type")
external fun gtk_sensitivity_type_get_type(): GType

@CCall("knifunptr_libgtk36409_gtk_text_direction_get_type")
external fun gtk_text_direction_get_type(): GType

@CCall("knifunptr_libgtk36410_gtk_justification_get_type")
external fun gtk_justification_get_type(): GType

@CCall("knifunptr_libgtk36411_gtk_menu_direction_type_get_type")
external fun gtk_menu_direction_type_get_type(): GType

@CCall("knifunptr_libgtk36412_gtk_message_type_get_type")
external fun gtk_message_type_get_type(): GType

@CCall("knifunptr_libgtk36413_gtk_movement_step_get_type")
external fun gtk_movement_step_get_type(): GType

@CCall("knifunptr_libgtk36414_gtk_scroll_step_get_type")
external fun gtk_scroll_step_get_type(): GType

@CCall("knifunptr_libgtk36415_gtk_orientation_get_type")
external fun gtk_orientation_get_type(): GType

@CCall("knifunptr_libgtk36416_gtk_pack_type_get_type")
external fun gtk_pack_type_get_type(): GType

@CCall("knifunptr_libgtk36417_gtk_position_type_get_type")
external fun gtk_position_type_get_type(): GType

@CCall("knifunptr_libgtk36418_gtk_relief_style_get_type")
external fun gtk_relief_style_get_type(): GType

@CCall("knifunptr_libgtk36419_gtk_scroll_type_get_type")
external fun gtk_scroll_type_get_type(): GType

@CCall("knifunptr_libgtk36420_gtk_selection_mode_get_type")
external fun gtk_selection_mode_get_type(): GType

@CCall("knifunptr_libgtk36421_gtk_shadow_type_get_type")
external fun gtk_shadow_type_get_type(): GType

@CCall("knifunptr_libgtk36422_gtk_state_type_get_type")
external fun gtk_state_type_get_type(): GType

@CCall("knifunptr_libgtk36423_gtk_toolbar_style_get_type")
external fun gtk_toolbar_style_get_type(): GType

@CCall("knifunptr_libgtk36424_gtk_wrap_mode_get_type")
external fun gtk_wrap_mode_get_type(): GType

@CCall("knifunptr_libgtk36425_gtk_sort_type_get_type")
external fun gtk_sort_type_get_type(): GType

@CCall("knifunptr_libgtk36426_gtk_im_preedit_style_get_type")
external fun gtk_im_preedit_style_get_type(): GType

@CCall("knifunptr_libgtk36427_gtk_im_status_style_get_type")
external fun gtk_im_status_style_get_type(): GType

@CCall("knifunptr_libgtk36428_gtk_pack_direction_get_type")
external fun gtk_pack_direction_get_type(): GType

@CCall("knifunptr_libgtk36429_gtk_print_pages_get_type")
external fun gtk_print_pages_get_type(): GType

@CCall("knifunptr_libgtk36430_gtk_page_set_get_type")
external fun gtk_page_set_get_type(): GType

@CCall("knifunptr_libgtk36431_gtk_number_up_layout_get_type")
external fun gtk_number_up_layout_get_type(): GType

@CCall("knifunptr_libgtk36432_gtk_page_orientation_get_type")
external fun gtk_page_orientation_get_type(): GType

@CCall("knifunptr_libgtk36433_gtk_print_quality_get_type")
external fun gtk_print_quality_get_type(): GType

@CCall("knifunptr_libgtk36434_gtk_print_duplex_get_type")
external fun gtk_print_duplex_get_type(): GType

@CCall("knifunptr_libgtk36435_gtk_unit_get_type")
external fun gtk_unit_get_type(): GType

@CCall("knifunptr_libgtk36436_gtk_tree_view_grid_lines_get_type")
external fun gtk_tree_view_grid_lines_get_type(): GType

@CCall("knifunptr_libgtk36437_gtk_drag_result_get_type")
external fun gtk_drag_result_get_type(): GType

@CCall("knifunptr_libgtk36438_gtk_size_group_mode_get_type")
external fun gtk_size_group_mode_get_type(): GType

@CCall("knifunptr_libgtk36439_gtk_size_request_mode_get_type")
external fun gtk_size_request_mode_get_type(): GType

@CCall("knifunptr_libgtk36440_gtk_scrollable_policy_get_type")
external fun gtk_scrollable_policy_get_type(): GType

@CCall("knifunptr_libgtk36441_gtk_state_flags_get_type")
external fun gtk_state_flags_get_type(): GType

@CCall("knifunptr_libgtk36442_gtk_region_flags_get_type")
external fun gtk_region_flags_get_type(): GType

@CCall("knifunptr_libgtk36443_gtk_junction_sides_get_type")
external fun gtk_junction_sides_get_type(): GType

@CCall("knifunptr_libgtk36444_gtk_border_style_get_type")
external fun gtk_border_style_get_type(): GType

@CCall("knifunptr_libgtk36445_gtk_level_bar_mode_get_type")
external fun gtk_level_bar_mode_get_type(): GType

@CCall("knifunptr_libgtk36446_gtk_input_purpose_get_type")
external fun gtk_input_purpose_get_type(): GType

@CCall("knifunptr_libgtk36447_gtk_input_hints_get_type")
external fun gtk_input_hints_get_type(): GType

@CCall("knifunptr_libgtk36448_gtk_propagation_phase_get_type")
external fun gtk_propagation_phase_get_type(): GType

@CCall("knifunptr_libgtk36449_gtk_event_sequence_state_get_type")
external fun gtk_event_sequence_state_get_type(): GType

@CCall("knifunptr_libgtk36450_gtk_pan_direction_get_type")
external fun gtk_pan_direction_get_type(): GType

@CCall("knifunptr_libgtk36451_gtk_popover_constraint_get_type")
external fun gtk_popover_constraint_get_type(): GType

@CCall("knifunptr_libgtk36452_gtk_file_chooser_action_get_type")
external fun gtk_file_chooser_action_get_type(): GType

@CCall("knifunptr_libgtk36453_gtk_file_chooser_confirmation_get_type")
external fun gtk_file_chooser_confirmation_get_type(): GType

@CCall("knifunptr_libgtk36454_gtk_file_chooser_error_get_type")
external fun gtk_file_chooser_error_get_type(): GType

@CCall("knifunptr_libgtk36455_gtk_file_filter_flags_get_type")
external fun gtk_file_filter_flags_get_type(): GType

@CCall("knifunptr_libgtk36456_gtk_icon_lookup_flags_get_type")
external fun gtk_icon_lookup_flags_get_type(): GType

@CCall("knifunptr_libgtk36457_gtk_icon_theme_error_get_type")
external fun gtk_icon_theme_error_get_type(): GType

@CCall("knifunptr_libgtk36458_gtk_icon_view_drop_position_get_type")
external fun gtk_icon_view_drop_position_get_type(): GType

@CCall("knifunptr_libgtk36459_gtk_image_type_get_type")
external fun gtk_image_type_get_type(): GType

@CCall("knifunptr_libgtk36460_gtk_arrow_placement_get_type")
external fun gtk_arrow_placement_get_type(): GType

@CCall("knifunptr_libgtk36461_gtk_buttons_type_get_type")
external fun gtk_buttons_type_get_type(): GType

@CCall("knifunptr_libgtk36462_gtk_button_role_get_type")
external fun gtk_button_role_get_type(): GType

@CCall("knifunptr_libgtk36463_gtk_notebook_tab_get_type")
external fun gtk_notebook_tab_get_type(): GType

@CCall("knifunptr_libgtk36464_gtk_pad_action_type_get_type")
external fun gtk_pad_action_type_get_type(): GType

@CCall("knifunptr_libgtk36465_gtk_places_open_flags_get_type")
external fun gtk_places_open_flags_get_type(): GType

@CCall("knifunptr_libgtk36466_gtk_print_status_get_type")
external fun gtk_print_status_get_type(): GType

@CCall("knifunptr_libgtk36467_gtk_print_operation_result_get_type")
external fun gtk_print_operation_result_get_type(): GType

@CCall("knifunptr_libgtk36468_gtk_print_operation_action_get_type")
external fun gtk_print_operation_action_get_type(): GType

@CCall("knifunptr_libgtk36469_gtk_print_error_get_type")
external fun gtk_print_error_get_type(): GType

@CCall("knifunptr_libgtk36470_gtk_recent_sort_type_get_type")
external fun gtk_recent_sort_type_get_type(): GType

@CCall("knifunptr_libgtk36471_gtk_recent_chooser_error_get_type")
external fun gtk_recent_chooser_error_get_type(): GType

@CCall("knifunptr_libgtk36472_gtk_recent_filter_flags_get_type")
external fun gtk_recent_filter_flags_get_type(): GType

@CCall("knifunptr_libgtk36473_gtk_recent_manager_error_get_type")
external fun gtk_recent_manager_error_get_type(): GType

@CCall("knifunptr_libgtk36474_gtk_revealer_transition_type_get_type")
external fun gtk_revealer_transition_type_get_type(): GType

@CCall("knifunptr_libgtk36475_gtk_corner_type_get_type")
external fun gtk_corner_type_get_type(): GType

@CCall("knifunptr_libgtk36476_gtk_policy_type_get_type")
external fun gtk_policy_type_get_type(): GType

@CCall("knifunptr_libgtk36477_gtk_target_flags_get_type")
external fun gtk_target_flags_get_type(): GType

@CCall("knifunptr_libgtk36478_gtk_shortcut_type_get_type")
external fun gtk_shortcut_type_get_type(): GType

@CCall("knifunptr_libgtk36479_gtk_spin_button_update_policy_get_type")
external fun gtk_spin_button_update_policy_get_type(): GType

@CCall("knifunptr_libgtk36480_gtk_spin_type_get_type")
external fun gtk_spin_type_get_type(): GType

@CCall("knifunptr_libgtk36481_gtk_stack_transition_type_get_type")
external fun gtk_stack_transition_type_get_type(): GType

@CCall("knifunptr_libgtk36482_gtk_style_context_print_flags_get_type")
external fun gtk_style_context_print_flags_get_type(): GType

@CCall("knifunptr_libgtk36483_gtk_text_buffer_target_info_get_type")
external fun gtk_text_buffer_target_info_get_type(): GType

@CCall("knifunptr_libgtk36484_gtk_text_search_flags_get_type")
external fun gtk_text_search_flags_get_type(): GType

@CCall("knifunptr_libgtk36485_gtk_text_window_type_get_type")
external fun gtk_text_window_type_get_type(): GType

@CCall("knifunptr_libgtk36486_gtk_text_view_layer_get_type")
external fun gtk_text_view_layer_get_type(): GType

@CCall("knifunptr_libgtk36487_gtk_text_extend_selection_get_type")
external fun gtk_text_extend_selection_get_type(): GType

@CCall("knifunptr_libgtk36488_gtk_toolbar_space_style_get_type")
external fun gtk_toolbar_space_style_get_type(): GType

@CCall("knifunptr_libgtk36489_gtk_tool_palette_drag_targets_get_type")
external fun gtk_tool_palette_drag_targets_get_type(): GType

@CCall("knifunptr_libgtk36490_gtk_tree_model_flags_get_type")
external fun gtk_tree_model_flags_get_type(): GType

@CCall("knifunptr_libgtk36491_gtk_tree_view_drop_position_get_type")
external fun gtk_tree_view_drop_position_get_type(): GType

@CCall("knifunptr_libgtk36492_gtk_tree_view_column_sizing_get_type")
external fun gtk_tree_view_column_sizing_get_type(): GType

@CCall("knifunptr_libgtk36493_gtk_widget_help_type_get_type")
external fun gtk_widget_help_type_get_type(): GType

@CCall("knifunptr_libgtk36494_gtk_window_type_get_type")
external fun gtk_window_type_get_type(): GType

@CCall("knifunptr_libgtk36495_gtk_window_position_get_type")
external fun gtk_window_position_get_type(): GType

@CCall("knifunptr_libgtk36496_gtk_viewport_get_type")
external fun gtk_viewport_get_type(): GType

@CCall("knifunptr_libgtk36497_gtk_viewport_new")
external fun gtk_viewport_new(hadjustment: CValuesRef<GtkAdjustment>?, vadjustment: CValuesRef<GtkAdjustment>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk36498_gtk_viewport_get_hadjustment")
external fun gtk_viewport_get_hadjustment(viewport: CValuesRef<GtkViewport>?): CPointer<GtkAdjustment>?

@CCall("knifunptr_libgtk36499_gtk_viewport_get_vadjustment")
external fun gtk_viewport_get_vadjustment(viewport: CValuesRef<GtkViewport>?): CPointer<GtkAdjustment>?

@CCall("knifunptr_libgtk36500_gtk_viewport_set_hadjustment")
external fun gtk_viewport_set_hadjustment(viewport: CValuesRef<GtkViewport>?, adjustment: CValuesRef<GtkAdjustment>?): Unit

@CCall("knifunptr_libgtk36501_gtk_viewport_set_vadjustment")
external fun gtk_viewport_set_vadjustment(viewport: CValuesRef<GtkViewport>?, adjustment: CValuesRef<GtkAdjustment>?): Unit

@CCall("knifunptr_libgtk36502_gtk_viewport_set_shadow_type")
external fun gtk_viewport_set_shadow_type(viewport: CValuesRef<GtkViewport>?, type: GtkShadowType): Unit

@CCall("knifunptr_libgtk36503_gtk_viewport_get_shadow_type")
external fun gtk_viewport_get_shadow_type(viewport: CValuesRef<GtkViewport>?): GtkShadowType

@CCall("knifunptr_libgtk36504_gtk_viewport_get_bin_window")
external fun gtk_viewport_get_bin_window(viewport: CValuesRef<GtkViewport>?): CPointer<GdkWindow>?

@CCall("knifunptr_libgtk36505_gtk_viewport_get_view_window")
external fun gtk_viewport_get_view_window(viewport: CValuesRef<GtkViewport>?): CPointer<GdkWindow>?

@CCall("knifunptr_libgtk36506_gtk_volume_button_get_type")
external fun gtk_volume_button_get_type(): GType

@CCall("knifunptr_libgtk36507_gtk_volume_button_new")
external fun gtk_volume_button_new(): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk36508_gtk_widget_path_get_type")
external fun gtk_widget_path_get_type(): GType

@CCall("knifunptr_libgtk36509_gtk_widget_path_new")
external fun gtk_widget_path_new(): CPointer<GtkWidgetPath>?

@CCall("knifunptr_libgtk36510_gtk_widget_path_copy")
external fun gtk_widget_path_copy(path: CValuesRef<GtkWidgetPath>?): CPointer<GtkWidgetPath>?

@CCall("knifunptr_libgtk36511_gtk_widget_path_ref")
external fun gtk_widget_path_ref(path: CValuesRef<GtkWidgetPath>?): CPointer<GtkWidgetPath>?

@CCall("knifunptr_libgtk36512_gtk_widget_path_unref")
external fun gtk_widget_path_unref(path: CValuesRef<GtkWidgetPath>?): Unit

@CCall("knifunptr_libgtk36513_gtk_widget_path_free")
external fun gtk_widget_path_free(path: CValuesRef<GtkWidgetPath>?): Unit

@CCall("knifunptr_libgtk36514_gtk_widget_path_to_string")
external fun gtk_widget_path_to_string(path: CValuesRef<GtkWidgetPath>?): CPointer<ByteVar>?

@CCall("knifunptr_libgtk36515_gtk_widget_path_length")
external fun gtk_widget_path_length(path: CValuesRef<GtkWidgetPath>?): gint

@CCall("knifunptr_libgtk36516_gtk_widget_path_append_type")
external fun gtk_widget_path_append_type(path: CValuesRef<GtkWidgetPath>?, type: GType): gint

@CCall("knifunptr_libgtk36517_gtk_widget_path_prepend_type")
external fun gtk_widget_path_prepend_type(path: CValuesRef<GtkWidgetPath>?, type: GType): Unit

@CCall("knifunptr_libgtk36518_gtk_widget_path_append_with_siblings")
external fun gtk_widget_path_append_with_siblings(path: CValuesRef<GtkWidgetPath>?, siblings: CValuesRef<GtkWidgetPath>?, sibling_index: guint): gint

@CCall("knifunptr_libgtk36519_gtk_widget_path_append_for_widget")
external fun gtk_widget_path_append_for_widget(path: CValuesRef<GtkWidgetPath>?, widget: CValuesRef<GtkWidget>?): gint

@CCall("knifunptr_libgtk36520_gtk_widget_path_iter_get_object_type")
external fun gtk_widget_path_iter_get_object_type(path: CValuesRef<GtkWidgetPath>?, pos: gint): GType

@CCall("knifunptr_libgtk36521_gtk_widget_path_iter_set_object_type")
external fun gtk_widget_path_iter_set_object_type(path: CValuesRef<GtkWidgetPath>?, pos: gint, type: GType): Unit

@CCall("knifunptr_libgtk36522_gtk_widget_path_iter_get_object_name")
external fun gtk_widget_path_iter_get_object_name(path: CValuesRef<GtkWidgetPath>?, pos: gint): CPointer<ByteVar>?

@CCall("knifunptr_libgtk36523_gtk_widget_path_iter_set_object_name")
external fun gtk_widget_path_iter_set_object_name(path: CValuesRef<GtkWidgetPath>?, pos: gint, @CCall.CString name: String?): Unit

@CCall("knifunptr_libgtk36524_gtk_widget_path_iter_get_siblings")
external fun gtk_widget_path_iter_get_siblings(path: CValuesRef<GtkWidgetPath>?, pos: gint): CPointer<GtkWidgetPath>?

@CCall("knifunptr_libgtk36525_gtk_widget_path_iter_get_sibling_index")
external fun gtk_widget_path_iter_get_sibling_index(path: CValuesRef<GtkWidgetPath>?, pos: gint): guint

@CCall("knifunptr_libgtk36526_gtk_widget_path_iter_get_name")
external fun gtk_widget_path_iter_get_name(path: CValuesRef<GtkWidgetPath>?, pos: gint): CPointer<gcharVar>?

@CCall("knifunptr_libgtk36527_gtk_widget_path_iter_set_name")
external fun gtk_widget_path_iter_set_name(path: CValuesRef<GtkWidgetPath>?, pos: gint, @CCall.CString name: String?): Unit

@CCall("knifunptr_libgtk36528_gtk_widget_path_iter_has_name")
external fun gtk_widget_path_iter_has_name(path: CValuesRef<GtkWidgetPath>?, pos: gint, @CCall.CString name: String?): gboolean

@CCall("knifunptr_libgtk36529_gtk_widget_path_iter_has_qname")
external fun gtk_widget_path_iter_has_qname(path: CValuesRef<GtkWidgetPath>?, pos: gint, qname: GQuark): gboolean

@CCall("knifunptr_libgtk36530_gtk_widget_path_iter_get_state")
external fun gtk_widget_path_iter_get_state(path: CValuesRef<GtkWidgetPath>?, pos: gint): GtkStateFlags

@CCall("knifunptr_libgtk36531_gtk_widget_path_iter_set_state")
external fun gtk_widget_path_iter_set_state(path: CValuesRef<GtkWidgetPath>?, pos: gint, state: GtkStateFlags): Unit

@CCall("knifunptr_libgtk36532_gtk_widget_path_iter_add_class")
external fun gtk_widget_path_iter_add_class(path: CValuesRef<GtkWidgetPath>?, pos: gint, @CCall.CString name: String?): Unit

@CCall("knifunptr_libgtk36533_gtk_widget_path_iter_remove_class")
external fun gtk_widget_path_iter_remove_class(path: CValuesRef<GtkWidgetPath>?, pos: gint, @CCall.CString name: String?): Unit

@CCall("knifunptr_libgtk36534_gtk_widget_path_iter_clear_classes")
external fun gtk_widget_path_iter_clear_classes(path: CValuesRef<GtkWidgetPath>?, pos: gint): Unit

@CCall("knifunptr_libgtk36535_gtk_widget_path_iter_list_classes")
external fun gtk_widget_path_iter_list_classes(path: CValuesRef<GtkWidgetPath>?, pos: gint): CPointer<GSList>?

@CCall("knifunptr_libgtk36536_gtk_widget_path_iter_has_class")
external fun gtk_widget_path_iter_has_class(path: CValuesRef<GtkWidgetPath>?, pos: gint, @CCall.CString name: String?): gboolean

@CCall("knifunptr_libgtk36537_gtk_widget_path_iter_has_qclass")
external fun gtk_widget_path_iter_has_qclass(path: CValuesRef<GtkWidgetPath>?, pos: gint, qname: GQuark): gboolean

@CCall("knifunptr_libgtk36538_gtk_widget_path_iter_add_region")
external fun gtk_widget_path_iter_add_region(path: CValuesRef<GtkWidgetPath>?, pos: gint, @CCall.CString name: String?, flags: GtkRegionFlags): Unit

@CCall("knifunptr_libgtk36539_gtk_widget_path_iter_remove_region")
external fun gtk_widget_path_iter_remove_region(path: CValuesRef<GtkWidgetPath>?, pos: gint, @CCall.CString name: String?): Unit

@CCall("knifunptr_libgtk36540_gtk_widget_path_iter_clear_regions")
external fun gtk_widget_path_iter_clear_regions(path: CValuesRef<GtkWidgetPath>?, pos: gint): Unit

@CCall("knifunptr_libgtk36541_gtk_widget_path_iter_list_regions")
external fun gtk_widget_path_iter_list_regions(path: CValuesRef<GtkWidgetPath>?, pos: gint): CPointer<GSList>?

@CCall("knifunptr_libgtk36542_gtk_widget_path_iter_has_region")
external fun gtk_widget_path_iter_has_region(path: CValuesRef<GtkWidgetPath>?, pos: gint, @CCall.CString name: String?, flags: CValuesRef<GtkRegionFlagsVar>?): gboolean

@CCall("knifunptr_libgtk36543_gtk_widget_path_iter_has_qregion")
external fun gtk_widget_path_iter_has_qregion(path: CValuesRef<GtkWidgetPath>?, pos: gint, qname: GQuark, flags: CValuesRef<GtkRegionFlagsVar>?): gboolean

@CCall("knifunptr_libgtk36544_gtk_widget_path_get_object_type")
external fun gtk_widget_path_get_object_type(path: CValuesRef<GtkWidgetPath>?): GType

@CCall("knifunptr_libgtk36545_gtk_widget_path_is_type")
external fun gtk_widget_path_is_type(path: CValuesRef<GtkWidgetPath>?, type: GType): gboolean

@CCall("knifunptr_libgtk36546_gtk_widget_path_has_parent")
external fun gtk_widget_path_has_parent(path: CValuesRef<GtkWidgetPath>?, type: GType): gboolean

@CCall("knifunptr_libgtk36547_gtk_window_group_get_type")
external fun gtk_window_group_get_type(): GType

@CCall("knifunptr_libgtk36548_gtk_window_group_new")
external fun gtk_window_group_new(): CPointer<GtkWindowGroup>?

@CCall("knifunptr_libgtk36549_gtk_window_group_add_window")
external fun gtk_window_group_add_window(window_group: CValuesRef<GtkWindowGroup>?, window: CValuesRef<GtkWindow>?): Unit

@CCall("knifunptr_libgtk36550_gtk_window_group_remove_window")
external fun gtk_window_group_remove_window(window_group: CValuesRef<GtkWindowGroup>?, window: CValuesRef<GtkWindow>?): Unit

@CCall("knifunptr_libgtk36551_gtk_window_group_list_windows")
external fun gtk_window_group_list_windows(window_group: CValuesRef<GtkWindowGroup>?): CPointer<GList>?

@CCall("knifunptr_libgtk36552_gtk_window_group_get_current_grab")
external fun gtk_window_group_get_current_grab(window_group: CValuesRef<GtkWindowGroup>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk36553_gtk_window_group_get_current_device_grab")
external fun gtk_window_group_get_current_device_grab(window_group: CValuesRef<GtkWindowGroup>?, device: CValuesRef<GdkDevice>?): CPointer<GtkWidget>?

@CCall("knifunptr_libgtk36554_glib_autoptr_cleanup_GtkAccessible")
external fun glib_autoptr_cleanup_GtkAccessible(_ptr: CValuesRef<CPointerVar<GtkAccessible>>?): Unit

@CCall("knifunptr_libgtk36555_glib_listautoptr_cleanup_GtkAccessible")
external fun glib_listautoptr_cleanup_GtkAccessible(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36556_glib_slistautoptr_cleanup_GtkAccessible")
external fun glib_slistautoptr_cleanup_GtkAccessible(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36557_glib_autoptr_cleanup_GtkActionBar")
external fun glib_autoptr_cleanup_GtkActionBar(_ptr: CValuesRef<CPointerVar<GtkActionBar>>?): Unit

@CCall("knifunptr_libgtk36558_glib_listautoptr_cleanup_GtkActionBar")
external fun glib_listautoptr_cleanup_GtkActionBar(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36559_glib_slistautoptr_cleanup_GtkActionBar")
external fun glib_slistautoptr_cleanup_GtkActionBar(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36560_glib_autoptr_cleanup_GtkActionable")
external fun glib_autoptr_cleanup_GtkActionable(_ptr: CValuesRef<CPointerVar<GtkActionable>>?): Unit

@CCall("knifunptr_libgtk36561_glib_listautoptr_cleanup_GtkActionable")
external fun glib_listautoptr_cleanup_GtkActionable(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36562_glib_slistautoptr_cleanup_GtkActionable")
external fun glib_slistautoptr_cleanup_GtkActionable(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36563_glib_autoptr_cleanup_GtkAdjustment")
external fun glib_autoptr_cleanup_GtkAdjustment(_ptr: CValuesRef<CPointerVar<GtkAdjustment>>?): Unit

@CCall("knifunptr_libgtk36564_glib_listautoptr_cleanup_GtkAdjustment")
external fun glib_listautoptr_cleanup_GtkAdjustment(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36565_glib_slistautoptr_cleanup_GtkAdjustment")
external fun glib_slistautoptr_cleanup_GtkAdjustment(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36566_glib_autoptr_cleanup_GtkAppChooser")
external fun glib_autoptr_cleanup_GtkAppChooser(_ptr: CValuesRef<CPointerVar<GtkAppChooser>>?): Unit

@CCall("knifunptr_libgtk36567_glib_listautoptr_cleanup_GtkAppChooser")
external fun glib_listautoptr_cleanup_GtkAppChooser(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36568_glib_slistautoptr_cleanup_GtkAppChooser")
external fun glib_slistautoptr_cleanup_GtkAppChooser(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36569_glib_autoptr_cleanup_GtkAppChooserButton")
external fun glib_autoptr_cleanup_GtkAppChooserButton(_ptr: CValuesRef<CPointerVar<GtkAppChooserButton>>?): Unit

@CCall("knifunptr_libgtk36570_glib_listautoptr_cleanup_GtkAppChooserButton")
external fun glib_listautoptr_cleanup_GtkAppChooserButton(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36571_glib_slistautoptr_cleanup_GtkAppChooserButton")
external fun glib_slistautoptr_cleanup_GtkAppChooserButton(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36572_glib_autoptr_cleanup_GtkAppChooserDialog")
external fun glib_autoptr_cleanup_GtkAppChooserDialog(_ptr: CValuesRef<CPointerVar<GtkAppChooserDialog>>?): Unit

@CCall("knifunptr_libgtk36573_glib_listautoptr_cleanup_GtkAppChooserDialog")
external fun glib_listautoptr_cleanup_GtkAppChooserDialog(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36574_glib_slistautoptr_cleanup_GtkAppChooserDialog")
external fun glib_slistautoptr_cleanup_GtkAppChooserDialog(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36575_glib_autoptr_cleanup_GtkAppChooserWidget")
external fun glib_autoptr_cleanup_GtkAppChooserWidget(_ptr: CValuesRef<CPointerVar<GtkAppChooserWidget>>?): Unit

@CCall("knifunptr_libgtk36576_glib_listautoptr_cleanup_GtkAppChooserWidget")
external fun glib_listautoptr_cleanup_GtkAppChooserWidget(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36577_glib_slistautoptr_cleanup_GtkAppChooserWidget")
external fun glib_slistautoptr_cleanup_GtkAppChooserWidget(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36578_glib_autoptr_cleanup_GtkApplicationWindow")
external fun glib_autoptr_cleanup_GtkApplicationWindow(_ptr: CValuesRef<CPointerVar<GtkApplicationWindow>>?): Unit

@CCall("knifunptr_libgtk36579_glib_listautoptr_cleanup_GtkApplicationWindow")
external fun glib_listautoptr_cleanup_GtkApplicationWindow(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36580_glib_slistautoptr_cleanup_GtkApplicationWindow")
external fun glib_slistautoptr_cleanup_GtkApplicationWindow(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36581_glib_autoptr_cleanup_GtkAspectFrame")
external fun glib_autoptr_cleanup_GtkAspectFrame(_ptr: CValuesRef<CPointerVar<GtkAspectFrame>>?): Unit

@CCall("knifunptr_libgtk36582_glib_listautoptr_cleanup_GtkAspectFrame")
external fun glib_listautoptr_cleanup_GtkAspectFrame(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36583_glib_slistautoptr_cleanup_GtkAspectFrame")
external fun glib_slistautoptr_cleanup_GtkAspectFrame(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36584_glib_autoptr_cleanup_GtkAssistant")
external fun glib_autoptr_cleanup_GtkAssistant(_ptr: CValuesRef<CPointerVar<GtkAssistant>>?): Unit

@CCall("knifunptr_libgtk36585_glib_listautoptr_cleanup_GtkAssistant")
external fun glib_listautoptr_cleanup_GtkAssistant(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36586_glib_slistautoptr_cleanup_GtkAssistant")
external fun glib_slistautoptr_cleanup_GtkAssistant(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36587_glib_autoptr_cleanup_GtkBox")
external fun glib_autoptr_cleanup_GtkBox(_ptr: CValuesRef<CPointerVar<GtkBox>>?): Unit

@CCall("knifunptr_libgtk36588_glib_listautoptr_cleanup_GtkBox")
external fun glib_listautoptr_cleanup_GtkBox(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36589_glib_slistautoptr_cleanup_GtkBox")
external fun glib_slistautoptr_cleanup_GtkBox(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36590_glib_autoptr_cleanup_GtkBuildable")
external fun glib_autoptr_cleanup_GtkBuildable(_ptr: CValuesRef<CPointerVar<GtkBuildable>>?): Unit

@CCall("knifunptr_libgtk36591_glib_listautoptr_cleanup_GtkBuildable")
external fun glib_listautoptr_cleanup_GtkBuildable(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36592_glib_slistautoptr_cleanup_GtkBuildable")
external fun glib_slistautoptr_cleanup_GtkBuildable(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36593_glib_autoptr_cleanup_GtkBuilder")
external fun glib_autoptr_cleanup_GtkBuilder(_ptr: CValuesRef<CPointerVar<GtkBuilder>>?): Unit

@CCall("knifunptr_libgtk36594_glib_listautoptr_cleanup_GtkBuilder")
external fun glib_listautoptr_cleanup_GtkBuilder(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36595_glib_slistautoptr_cleanup_GtkBuilder")
external fun glib_slistautoptr_cleanup_GtkBuilder(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36596_glib_autoptr_cleanup_GtkButton")
external fun glib_autoptr_cleanup_GtkButton(_ptr: CValuesRef<CPointerVar<GtkButton>>?): Unit

@CCall("knifunptr_libgtk36597_glib_listautoptr_cleanup_GtkButton")
external fun glib_listautoptr_cleanup_GtkButton(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36598_glib_slistautoptr_cleanup_GtkButton")
external fun glib_slistautoptr_cleanup_GtkButton(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36599_glib_autoptr_cleanup_GtkButtonBox")
external fun glib_autoptr_cleanup_GtkButtonBox(_ptr: CValuesRef<CPointerVar<GtkButtonBox>>?): Unit

@CCall("knifunptr_libgtk36600_glib_listautoptr_cleanup_GtkButtonBox")
external fun glib_listautoptr_cleanup_GtkButtonBox(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36601_glib_slistautoptr_cleanup_GtkButtonBox")
external fun glib_slistautoptr_cleanup_GtkButtonBox(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36602_glib_autoptr_cleanup_GtkCalendar")
external fun glib_autoptr_cleanup_GtkCalendar(_ptr: CValuesRef<CPointerVar<GtkCalendar>>?): Unit

@CCall("knifunptr_libgtk36603_glib_listautoptr_cleanup_GtkCalendar")
external fun glib_listautoptr_cleanup_GtkCalendar(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36604_glib_slistautoptr_cleanup_GtkCalendar")
external fun glib_slistautoptr_cleanup_GtkCalendar(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36605_glib_autoptr_cleanup_GtkCellArea")
external fun glib_autoptr_cleanup_GtkCellArea(_ptr: CValuesRef<CPointerVar<GtkCellArea>>?): Unit

@CCall("knifunptr_libgtk36606_glib_listautoptr_cleanup_GtkCellArea")
external fun glib_listautoptr_cleanup_GtkCellArea(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36607_glib_slistautoptr_cleanup_GtkCellArea")
external fun glib_slistautoptr_cleanup_GtkCellArea(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36608_glib_autoptr_cleanup_GtkCellAreaBox")
external fun glib_autoptr_cleanup_GtkCellAreaBox(_ptr: CValuesRef<CPointerVar<GtkCellAreaBox>>?): Unit

@CCall("knifunptr_libgtk36609_glib_listautoptr_cleanup_GtkCellAreaBox")
external fun glib_listautoptr_cleanup_GtkCellAreaBox(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36610_glib_slistautoptr_cleanup_GtkCellAreaBox")
external fun glib_slistautoptr_cleanup_GtkCellAreaBox(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36611_glib_autoptr_cleanup_GtkCellAreaContext")
external fun glib_autoptr_cleanup_GtkCellAreaContext(_ptr: CValuesRef<CPointerVar<GtkCellAreaContext>>?): Unit

@CCall("knifunptr_libgtk36612_glib_listautoptr_cleanup_GtkCellAreaContext")
external fun glib_listautoptr_cleanup_GtkCellAreaContext(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36613_glib_slistautoptr_cleanup_GtkCellAreaContext")
external fun glib_slistautoptr_cleanup_GtkCellAreaContext(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36614_glib_autoptr_cleanup_GtkCellEditable")
external fun glib_autoptr_cleanup_GtkCellEditable(_ptr: CValuesRef<CPointerVar<GtkCellEditable>>?): Unit

@CCall("knifunptr_libgtk36615_glib_listautoptr_cleanup_GtkCellEditable")
external fun glib_listautoptr_cleanup_GtkCellEditable(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36616_glib_slistautoptr_cleanup_GtkCellEditable")
external fun glib_slistautoptr_cleanup_GtkCellEditable(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36617_glib_autoptr_cleanup_GtkCellLayout")
external fun glib_autoptr_cleanup_GtkCellLayout(_ptr: CValuesRef<CPointerVar<GtkCellLayout>>?): Unit

@CCall("knifunptr_libgtk36618_glib_listautoptr_cleanup_GtkCellLayout")
external fun glib_listautoptr_cleanup_GtkCellLayout(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36619_glib_slistautoptr_cleanup_GtkCellLayout")
external fun glib_slistautoptr_cleanup_GtkCellLayout(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36620_glib_autoptr_cleanup_GtkCellRenderer")
external fun glib_autoptr_cleanup_GtkCellRenderer(_ptr: CValuesRef<CPointerVar<GtkCellRenderer>>?): Unit

@CCall("knifunptr_libgtk36621_glib_listautoptr_cleanup_GtkCellRenderer")
external fun glib_listautoptr_cleanup_GtkCellRenderer(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36622_glib_slistautoptr_cleanup_GtkCellRenderer")
external fun glib_slistautoptr_cleanup_GtkCellRenderer(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36623_glib_autoptr_cleanup_GtkCellRendererAccel")
external fun glib_autoptr_cleanup_GtkCellRendererAccel(_ptr: CValuesRef<CPointerVar<GtkCellRendererAccel>>?): Unit

@CCall("knifunptr_libgtk36624_glib_listautoptr_cleanup_GtkCellRendererAccel")
external fun glib_listautoptr_cleanup_GtkCellRendererAccel(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36625_glib_slistautoptr_cleanup_GtkCellRendererAccel")
external fun glib_slistautoptr_cleanup_GtkCellRendererAccel(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36626_glib_autoptr_cleanup_GtkCellRendererCombo")
external fun glib_autoptr_cleanup_GtkCellRendererCombo(_ptr: CValuesRef<CPointerVar<GtkCellRendererCombo>>?): Unit

@CCall("knifunptr_libgtk36627_glib_listautoptr_cleanup_GtkCellRendererCombo")
external fun glib_listautoptr_cleanup_GtkCellRendererCombo(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36628_glib_slistautoptr_cleanup_GtkCellRendererCombo")
external fun glib_slistautoptr_cleanup_GtkCellRendererCombo(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36629_glib_autoptr_cleanup_GtkCellRendererPixbuf")
external fun glib_autoptr_cleanup_GtkCellRendererPixbuf(_ptr: CValuesRef<CPointerVar<GtkCellRendererPixbuf>>?): Unit

@CCall("knifunptr_libgtk36630_glib_listautoptr_cleanup_GtkCellRendererPixbuf")
external fun glib_listautoptr_cleanup_GtkCellRendererPixbuf(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36631_glib_slistautoptr_cleanup_GtkCellRendererPixbuf")
external fun glib_slistautoptr_cleanup_GtkCellRendererPixbuf(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36632_glib_autoptr_cleanup_GtkCellRendererProgress")
external fun glib_autoptr_cleanup_GtkCellRendererProgress(_ptr: CValuesRef<CPointerVar<GtkCellRendererProgress>>?): Unit

@CCall("knifunptr_libgtk36633_glib_listautoptr_cleanup_GtkCellRendererProgress")
external fun glib_listautoptr_cleanup_GtkCellRendererProgress(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36634_glib_slistautoptr_cleanup_GtkCellRendererProgress")
external fun glib_slistautoptr_cleanup_GtkCellRendererProgress(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36635_glib_autoptr_cleanup_GtkCellRendererSpin")
external fun glib_autoptr_cleanup_GtkCellRendererSpin(_ptr: CValuesRef<CPointerVar<GtkCellRendererSpin>>?): Unit

@CCall("knifunptr_libgtk36636_glib_listautoptr_cleanup_GtkCellRendererSpin")
external fun glib_listautoptr_cleanup_GtkCellRendererSpin(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36637_glib_slistautoptr_cleanup_GtkCellRendererSpin")
external fun glib_slistautoptr_cleanup_GtkCellRendererSpin(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36638_glib_autoptr_cleanup_GtkCellRendererSpinner")
external fun glib_autoptr_cleanup_GtkCellRendererSpinner(_ptr: CValuesRef<CPointerVar<GtkCellRendererSpinner>>?): Unit

@CCall("knifunptr_libgtk36639_glib_listautoptr_cleanup_GtkCellRendererSpinner")
external fun glib_listautoptr_cleanup_GtkCellRendererSpinner(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36640_glib_slistautoptr_cleanup_GtkCellRendererSpinner")
external fun glib_slistautoptr_cleanup_GtkCellRendererSpinner(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36641_glib_autoptr_cleanup_GtkCellRendererText")
external fun glib_autoptr_cleanup_GtkCellRendererText(_ptr: CValuesRef<CPointerVar<GtkCellRendererText>>?): Unit

@CCall("knifunptr_libgtk36642_glib_listautoptr_cleanup_GtkCellRendererText")
external fun glib_listautoptr_cleanup_GtkCellRendererText(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36643_glib_slistautoptr_cleanup_GtkCellRendererText")
external fun glib_slistautoptr_cleanup_GtkCellRendererText(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36644_glib_autoptr_cleanup_GtkCellRendererToggle")
external fun glib_autoptr_cleanup_GtkCellRendererToggle(_ptr: CValuesRef<CPointerVar<GtkCellRendererToggle>>?): Unit

@CCall("knifunptr_libgtk36645_glib_listautoptr_cleanup_GtkCellRendererToggle")
external fun glib_listautoptr_cleanup_GtkCellRendererToggle(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36646_glib_slistautoptr_cleanup_GtkCellRendererToggle")
external fun glib_slistautoptr_cleanup_GtkCellRendererToggle(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36647_glib_autoptr_cleanup_GtkCellView")
external fun glib_autoptr_cleanup_GtkCellView(_ptr: CValuesRef<CPointerVar<GtkCellView>>?): Unit

@CCall("knifunptr_libgtk36648_glib_listautoptr_cleanup_GtkCellView")
external fun glib_listautoptr_cleanup_GtkCellView(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36649_glib_slistautoptr_cleanup_GtkCellView")
external fun glib_slistautoptr_cleanup_GtkCellView(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36650_glib_autoptr_cleanup_GtkCheckButton")
external fun glib_autoptr_cleanup_GtkCheckButton(_ptr: CValuesRef<CPointerVar<GtkCheckButton>>?): Unit

@CCall("knifunptr_libgtk36651_glib_listautoptr_cleanup_GtkCheckButton")
external fun glib_listautoptr_cleanup_GtkCheckButton(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36652_glib_slistautoptr_cleanup_GtkCheckButton")
external fun glib_slistautoptr_cleanup_GtkCheckButton(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36653_glib_autoptr_cleanup_GtkCheckMenuItem")
external fun glib_autoptr_cleanup_GtkCheckMenuItem(_ptr: CValuesRef<CPointerVar<GtkCheckMenuItem>>?): Unit

@CCall("knifunptr_libgtk36654_glib_listautoptr_cleanup_GtkCheckMenuItem")
external fun glib_listautoptr_cleanup_GtkCheckMenuItem(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36655_glib_slistautoptr_cleanup_GtkCheckMenuItem")
external fun glib_slistautoptr_cleanup_GtkCheckMenuItem(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36656_glib_autoptr_cleanup_GtkClipboard")
external fun glib_autoptr_cleanup_GtkClipboard(_ptr: CValuesRef<CPointerVar<GtkClipboard>>?): Unit

@CCall("knifunptr_libgtk36657_glib_listautoptr_cleanup_GtkClipboard")
external fun glib_listautoptr_cleanup_GtkClipboard(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36658_glib_slistautoptr_cleanup_GtkClipboard")
external fun glib_slistautoptr_cleanup_GtkClipboard(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36659_glib_autoptr_cleanup_GtkColorButton")
external fun glib_autoptr_cleanup_GtkColorButton(_ptr: CValuesRef<CPointerVar<GtkColorButton>>?): Unit

@CCall("knifunptr_libgtk36660_glib_listautoptr_cleanup_GtkColorButton")
external fun glib_listautoptr_cleanup_GtkColorButton(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36661_glib_slistautoptr_cleanup_GtkColorButton")
external fun glib_slistautoptr_cleanup_GtkColorButton(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36662_glib_autoptr_cleanup_GtkColorChooser")
external fun glib_autoptr_cleanup_GtkColorChooser(_ptr: CValuesRef<CPointerVar<GtkColorChooser>>?): Unit

@CCall("knifunptr_libgtk36663_glib_listautoptr_cleanup_GtkColorChooser")
external fun glib_listautoptr_cleanup_GtkColorChooser(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36664_glib_slistautoptr_cleanup_GtkColorChooser")
external fun glib_slistautoptr_cleanup_GtkColorChooser(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36665_glib_autoptr_cleanup_GtkColorChooserDialog")
external fun glib_autoptr_cleanup_GtkColorChooserDialog(_ptr: CValuesRef<CPointerVar<GtkColorChooserDialog>>?): Unit

@CCall("knifunptr_libgtk36666_glib_listautoptr_cleanup_GtkColorChooserDialog")
external fun glib_listautoptr_cleanup_GtkColorChooserDialog(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36667_glib_slistautoptr_cleanup_GtkColorChooserDialog")
external fun glib_slistautoptr_cleanup_GtkColorChooserDialog(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36668_glib_autoptr_cleanup_GtkColorChooserWidget")
external fun glib_autoptr_cleanup_GtkColorChooserWidget(_ptr: CValuesRef<CPointerVar<GtkColorChooserWidget>>?): Unit

@CCall("knifunptr_libgtk36669_glib_listautoptr_cleanup_GtkColorChooserWidget")
external fun glib_listautoptr_cleanup_GtkColorChooserWidget(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36670_glib_slistautoptr_cleanup_GtkColorChooserWidget")
external fun glib_slistautoptr_cleanup_GtkColorChooserWidget(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36671_glib_autoptr_cleanup_GtkComboBox")
external fun glib_autoptr_cleanup_GtkComboBox(_ptr: CValuesRef<CPointerVar<GtkComboBox>>?): Unit

@CCall("knifunptr_libgtk36672_glib_listautoptr_cleanup_GtkComboBox")
external fun glib_listautoptr_cleanup_GtkComboBox(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36673_glib_slistautoptr_cleanup_GtkComboBox")
external fun glib_slistautoptr_cleanup_GtkComboBox(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36674_glib_autoptr_cleanup_GtkComboBoxText")
external fun glib_autoptr_cleanup_GtkComboBoxText(_ptr: CValuesRef<CPointerVar<GtkComboBoxText>>?): Unit

@CCall("knifunptr_libgtk36675_glib_listautoptr_cleanup_GtkComboBoxText")
external fun glib_listautoptr_cleanup_GtkComboBoxText(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36676_glib_slistautoptr_cleanup_GtkComboBoxText")
external fun glib_slistautoptr_cleanup_GtkComboBoxText(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36677_glib_autoptr_cleanup_GtkCssProvider")
external fun glib_autoptr_cleanup_GtkCssProvider(_ptr: CValuesRef<CPointerVar<GtkCssProvider>>?): Unit

@CCall("knifunptr_libgtk36678_glib_listautoptr_cleanup_GtkCssProvider")
external fun glib_listautoptr_cleanup_GtkCssProvider(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36679_glib_slistautoptr_cleanup_GtkCssProvider")
external fun glib_slistautoptr_cleanup_GtkCssProvider(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36680_glib_autoptr_cleanup_GtkDrawingArea")
external fun glib_autoptr_cleanup_GtkDrawingArea(_ptr: CValuesRef<CPointerVar<GtkDrawingArea>>?): Unit

@CCall("knifunptr_libgtk36681_glib_listautoptr_cleanup_GtkDrawingArea")
external fun glib_listautoptr_cleanup_GtkDrawingArea(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36682_glib_slistautoptr_cleanup_GtkDrawingArea")
external fun glib_slistautoptr_cleanup_GtkDrawingArea(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36683_glib_autoptr_cleanup_GtkEditable")
external fun glib_autoptr_cleanup_GtkEditable(_ptr: CValuesRef<CPointerVar<GtkEditable>>?): Unit

@CCall("knifunptr_libgtk36684_glib_listautoptr_cleanup_GtkEditable")
external fun glib_listautoptr_cleanup_GtkEditable(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36685_glib_slistautoptr_cleanup_GtkEditable")
external fun glib_slistautoptr_cleanup_GtkEditable(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36686_glib_autoptr_cleanup_GtkEntry")
external fun glib_autoptr_cleanup_GtkEntry(_ptr: CValuesRef<CPointerVar<GtkEntry>>?): Unit

@CCall("knifunptr_libgtk36687_glib_listautoptr_cleanup_GtkEntry")
external fun glib_listautoptr_cleanup_GtkEntry(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36688_glib_slistautoptr_cleanup_GtkEntry")
external fun glib_slistautoptr_cleanup_GtkEntry(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36689_glib_autoptr_cleanup_GtkEntryBuffer")
external fun glib_autoptr_cleanup_GtkEntryBuffer(_ptr: CValuesRef<CPointerVar<GtkEntryBuffer>>?): Unit

@CCall("knifunptr_libgtk36690_glib_listautoptr_cleanup_GtkEntryBuffer")
external fun glib_listautoptr_cleanup_GtkEntryBuffer(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36691_glib_slistautoptr_cleanup_GtkEntryBuffer")
external fun glib_slistautoptr_cleanup_GtkEntryBuffer(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36692_glib_autoptr_cleanup_GtkEntryCompletion")
external fun glib_autoptr_cleanup_GtkEntryCompletion(_ptr: CValuesRef<CPointerVar<GtkEntryCompletion>>?): Unit

@CCall("knifunptr_libgtk36693_glib_listautoptr_cleanup_GtkEntryCompletion")
external fun glib_listautoptr_cleanup_GtkEntryCompletion(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36694_glib_slistautoptr_cleanup_GtkEntryCompletion")
external fun glib_slistautoptr_cleanup_GtkEntryCompletion(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36695_glib_autoptr_cleanup_GtkEventBox")
external fun glib_autoptr_cleanup_GtkEventBox(_ptr: CValuesRef<CPointerVar<GtkEventBox>>?): Unit

@CCall("knifunptr_libgtk36696_glib_listautoptr_cleanup_GtkEventBox")
external fun glib_listautoptr_cleanup_GtkEventBox(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36697_glib_slistautoptr_cleanup_GtkEventBox")
external fun glib_slistautoptr_cleanup_GtkEventBox(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36698_glib_autoptr_cleanup_GtkEventController")
external fun glib_autoptr_cleanup_GtkEventController(_ptr: CValuesRef<CPointerVar<GtkEventController>>?): Unit

@CCall("knifunptr_libgtk36699_glib_listautoptr_cleanup_GtkEventController")
external fun glib_listautoptr_cleanup_GtkEventController(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36700_glib_slistautoptr_cleanup_GtkEventController")
external fun glib_slistautoptr_cleanup_GtkEventController(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36701_glib_autoptr_cleanup_GtkExpander")
external fun glib_autoptr_cleanup_GtkExpander(_ptr: CValuesRef<CPointerVar<GtkExpander>>?): Unit

@CCall("knifunptr_libgtk36702_glib_listautoptr_cleanup_GtkExpander")
external fun glib_listautoptr_cleanup_GtkExpander(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36703_glib_slistautoptr_cleanup_GtkExpander")
external fun glib_slistautoptr_cleanup_GtkExpander(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36704_glib_autoptr_cleanup_GtkFileChooserButton")
external fun glib_autoptr_cleanup_GtkFileChooserButton(_ptr: CValuesRef<CPointerVar<GtkFileChooserButton>>?): Unit

@CCall("knifunptr_libgtk36705_glib_listautoptr_cleanup_GtkFileChooserButton")
external fun glib_listautoptr_cleanup_GtkFileChooserButton(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36706_glib_slistautoptr_cleanup_GtkFileChooserButton")
external fun glib_slistautoptr_cleanup_GtkFileChooserButton(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36707_glib_autoptr_cleanup_GtkFileChooserDialog")
external fun glib_autoptr_cleanup_GtkFileChooserDialog(_ptr: CValuesRef<CPointerVar<GtkFileChooserDialog>>?): Unit

@CCall("knifunptr_libgtk36708_glib_listautoptr_cleanup_GtkFileChooserDialog")
external fun glib_listautoptr_cleanup_GtkFileChooserDialog(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36709_glib_slistautoptr_cleanup_GtkFileChooserDialog")
external fun glib_slistautoptr_cleanup_GtkFileChooserDialog(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36710_glib_autoptr_cleanup_GtkFileChooserWidget")
external fun glib_autoptr_cleanup_GtkFileChooserWidget(_ptr: CValuesRef<CPointerVar<GtkFileChooserWidget>>?): Unit

@CCall("knifunptr_libgtk36711_glib_listautoptr_cleanup_GtkFileChooserWidget")
external fun glib_listautoptr_cleanup_GtkFileChooserWidget(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36712_glib_slistautoptr_cleanup_GtkFileChooserWidget")
external fun glib_slistautoptr_cleanup_GtkFileChooserWidget(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36713_glib_autoptr_cleanup_GtkFileFilter")
external fun glib_autoptr_cleanup_GtkFileFilter(_ptr: CValuesRef<CPointerVar<GtkFileFilter>>?): Unit

@CCall("knifunptr_libgtk36714_glib_listautoptr_cleanup_GtkFileFilter")
external fun glib_listautoptr_cleanup_GtkFileFilter(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36715_glib_slistautoptr_cleanup_GtkFileFilter")
external fun glib_slistautoptr_cleanup_GtkFileFilter(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36716_glib_autoptr_cleanup_GtkFixed")
external fun glib_autoptr_cleanup_GtkFixed(_ptr: CValuesRef<CPointerVar<GtkFixed>>?): Unit

@CCall("knifunptr_libgtk36717_glib_listautoptr_cleanup_GtkFixed")
external fun glib_listautoptr_cleanup_GtkFixed(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36718_glib_slistautoptr_cleanup_GtkFixed")
external fun glib_slistautoptr_cleanup_GtkFixed(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36719_glib_autoptr_cleanup_GtkFlowBox")
external fun glib_autoptr_cleanup_GtkFlowBox(_ptr: CValuesRef<CPointerVar<GtkFlowBox>>?): Unit

@CCall("knifunptr_libgtk36720_glib_listautoptr_cleanup_GtkFlowBox")
external fun glib_listautoptr_cleanup_GtkFlowBox(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36721_glib_slistautoptr_cleanup_GtkFlowBox")
external fun glib_slistautoptr_cleanup_GtkFlowBox(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36722_glib_autoptr_cleanup_GtkFlowBoxChild")
external fun glib_autoptr_cleanup_GtkFlowBoxChild(_ptr: CValuesRef<CPointerVar<GtkFlowBoxChild>>?): Unit

@CCall("knifunptr_libgtk36723_glib_listautoptr_cleanup_GtkFlowBoxChild")
external fun glib_listautoptr_cleanup_GtkFlowBoxChild(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36724_glib_slistautoptr_cleanup_GtkFlowBoxChild")
external fun glib_slistautoptr_cleanup_GtkFlowBoxChild(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36725_glib_autoptr_cleanup_GtkFontButton")
external fun glib_autoptr_cleanup_GtkFontButton(_ptr: CValuesRef<CPointerVar<GtkFontButton>>?): Unit

@CCall("knifunptr_libgtk36726_glib_listautoptr_cleanup_GtkFontButton")
external fun glib_listautoptr_cleanup_GtkFontButton(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36727_glib_slistautoptr_cleanup_GtkFontButton")
external fun glib_slistautoptr_cleanup_GtkFontButton(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36728_glib_autoptr_cleanup_GtkFontChooser")
external fun glib_autoptr_cleanup_GtkFontChooser(_ptr: CValuesRef<CPointerVar<GtkFontChooser>>?): Unit

@CCall("knifunptr_libgtk36729_glib_listautoptr_cleanup_GtkFontChooser")
external fun glib_listautoptr_cleanup_GtkFontChooser(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36730_glib_slistautoptr_cleanup_GtkFontChooser")
external fun glib_slistautoptr_cleanup_GtkFontChooser(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36731_glib_autoptr_cleanup_GtkFontChooserDialog")
external fun glib_autoptr_cleanup_GtkFontChooserDialog(_ptr: CValuesRef<CPointerVar<GtkFontChooserDialog>>?): Unit

@CCall("knifunptr_libgtk36732_glib_listautoptr_cleanup_GtkFontChooserDialog")
external fun glib_listautoptr_cleanup_GtkFontChooserDialog(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36733_glib_slistautoptr_cleanup_GtkFontChooserDialog")
external fun glib_slistautoptr_cleanup_GtkFontChooserDialog(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36734_glib_autoptr_cleanup_GtkFontChooserWidget")
external fun glib_autoptr_cleanup_GtkFontChooserWidget(_ptr: CValuesRef<CPointerVar<GtkFontChooserWidget>>?): Unit

@CCall("knifunptr_libgtk36735_glib_listautoptr_cleanup_GtkFontChooserWidget")
external fun glib_listautoptr_cleanup_GtkFontChooserWidget(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36736_glib_slistautoptr_cleanup_GtkFontChooserWidget")
external fun glib_slistautoptr_cleanup_GtkFontChooserWidget(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36737_glib_autoptr_cleanup_GtkFrame")
external fun glib_autoptr_cleanup_GtkFrame(_ptr: CValuesRef<CPointerVar<GtkFrame>>?): Unit

@CCall("knifunptr_libgtk36738_glib_listautoptr_cleanup_GtkFrame")
external fun glib_listautoptr_cleanup_GtkFrame(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36739_glib_slistautoptr_cleanup_GtkFrame")
external fun glib_slistautoptr_cleanup_GtkFrame(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36740_glib_autoptr_cleanup_GtkGLArea")
external fun glib_autoptr_cleanup_GtkGLArea(_ptr: CValuesRef<CPointerVar<GtkGLArea>>?): Unit

@CCall("knifunptr_libgtk36741_glib_listautoptr_cleanup_GtkGLArea")
external fun glib_listautoptr_cleanup_GtkGLArea(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36742_glib_slistautoptr_cleanup_GtkGLArea")
external fun glib_slistautoptr_cleanup_GtkGLArea(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36743_glib_autoptr_cleanup_GtkGesture")
external fun glib_autoptr_cleanup_GtkGesture(_ptr: CValuesRef<CPointerVar<GtkGesture>>?): Unit

@CCall("knifunptr_libgtk36744_glib_listautoptr_cleanup_GtkGesture")
external fun glib_listautoptr_cleanup_GtkGesture(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36745_glib_slistautoptr_cleanup_GtkGesture")
external fun glib_slistautoptr_cleanup_GtkGesture(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36746_glib_autoptr_cleanup_GtkGestureDrag")
external fun glib_autoptr_cleanup_GtkGestureDrag(_ptr: CValuesRef<CPointerVar<GtkGestureDrag>>?): Unit

@CCall("knifunptr_libgtk36747_glib_listautoptr_cleanup_GtkGestureDrag")
external fun glib_listautoptr_cleanup_GtkGestureDrag(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36748_glib_slistautoptr_cleanup_GtkGestureDrag")
external fun glib_slistautoptr_cleanup_GtkGestureDrag(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36749_glib_autoptr_cleanup_GtkGestureLongPress")
external fun glib_autoptr_cleanup_GtkGestureLongPress(_ptr: CValuesRef<CPointerVar<GtkGestureLongPress>>?): Unit

@CCall("knifunptr_libgtk36750_glib_listautoptr_cleanup_GtkGestureLongPress")
external fun glib_listautoptr_cleanup_GtkGestureLongPress(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36751_glib_slistautoptr_cleanup_GtkGestureLongPress")
external fun glib_slistautoptr_cleanup_GtkGestureLongPress(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36752_glib_autoptr_cleanup_GtkGestureMultiPress")
external fun glib_autoptr_cleanup_GtkGestureMultiPress(_ptr: CValuesRef<CPointerVar<GtkGestureMultiPress>>?): Unit

@CCall("knifunptr_libgtk36753_glib_listautoptr_cleanup_GtkGestureMultiPress")
external fun glib_listautoptr_cleanup_GtkGestureMultiPress(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36754_glib_slistautoptr_cleanup_GtkGestureMultiPress")
external fun glib_slistautoptr_cleanup_GtkGestureMultiPress(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36755_glib_autoptr_cleanup_GtkGesturePan")
external fun glib_autoptr_cleanup_GtkGesturePan(_ptr: CValuesRef<CPointerVar<GtkGesturePan>>?): Unit

@CCall("knifunptr_libgtk36756_glib_listautoptr_cleanup_GtkGesturePan")
external fun glib_listautoptr_cleanup_GtkGesturePan(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36757_glib_slistautoptr_cleanup_GtkGesturePan")
external fun glib_slistautoptr_cleanup_GtkGesturePan(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36758_glib_autoptr_cleanup_GtkGestureRotate")
external fun glib_autoptr_cleanup_GtkGestureRotate(_ptr: CValuesRef<CPointerVar<GtkGestureRotate>>?): Unit

@CCall("knifunptr_libgtk36759_glib_listautoptr_cleanup_GtkGestureRotate")
external fun glib_listautoptr_cleanup_GtkGestureRotate(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36760_glib_slistautoptr_cleanup_GtkGestureRotate")
external fun glib_slistautoptr_cleanup_GtkGestureRotate(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36761_glib_autoptr_cleanup_GtkGestureSingle")
external fun glib_autoptr_cleanup_GtkGestureSingle(_ptr: CValuesRef<CPointerVar<GtkGestureSingle>>?): Unit

@CCall("knifunptr_libgtk36762_glib_listautoptr_cleanup_GtkGestureSingle")
external fun glib_listautoptr_cleanup_GtkGestureSingle(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36763_glib_slistautoptr_cleanup_GtkGestureSingle")
external fun glib_slistautoptr_cleanup_GtkGestureSingle(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36764_glib_autoptr_cleanup_GtkGestureSwipe")
external fun glib_autoptr_cleanup_GtkGestureSwipe(_ptr: CValuesRef<CPointerVar<GtkGestureSwipe>>?): Unit

@CCall("knifunptr_libgtk36765_glib_listautoptr_cleanup_GtkGestureSwipe")
external fun glib_listautoptr_cleanup_GtkGestureSwipe(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36766_glib_slistautoptr_cleanup_GtkGestureSwipe")
external fun glib_slistautoptr_cleanup_GtkGestureSwipe(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36767_glib_autoptr_cleanup_GtkGestureZoom")
external fun glib_autoptr_cleanup_GtkGestureZoom(_ptr: CValuesRef<CPointerVar<GtkGestureZoom>>?): Unit

@CCall("knifunptr_libgtk36768_glib_listautoptr_cleanup_GtkGestureZoom")
external fun glib_listautoptr_cleanup_GtkGestureZoom(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36769_glib_slistautoptr_cleanup_GtkGestureZoom")
external fun glib_slistautoptr_cleanup_GtkGestureZoom(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36770_glib_autoptr_cleanup_GtkGrid")
external fun glib_autoptr_cleanup_GtkGrid(_ptr: CValuesRef<CPointerVar<GtkGrid>>?): Unit

@CCall("knifunptr_libgtk36771_glib_listautoptr_cleanup_GtkGrid")
external fun glib_listautoptr_cleanup_GtkGrid(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36772_glib_slistautoptr_cleanup_GtkGrid")
external fun glib_slistautoptr_cleanup_GtkGrid(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36773_glib_autoptr_cleanup_GtkHeaderBar")
external fun glib_autoptr_cleanup_GtkHeaderBar(_ptr: CValuesRef<CPointerVar<GtkHeaderBar>>?): Unit

@CCall("knifunptr_libgtk36774_glib_listautoptr_cleanup_GtkHeaderBar")
external fun glib_listautoptr_cleanup_GtkHeaderBar(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36775_glib_slistautoptr_cleanup_GtkHeaderBar")
external fun glib_slistautoptr_cleanup_GtkHeaderBar(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36776_glib_autoptr_cleanup_GtkIMContext")
external fun glib_autoptr_cleanup_GtkIMContext(_ptr: CValuesRef<CPointerVar<GtkIMContext>>?): Unit

@CCall("knifunptr_libgtk36777_glib_listautoptr_cleanup_GtkIMContext")
external fun glib_listautoptr_cleanup_GtkIMContext(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36778_glib_slistautoptr_cleanup_GtkIMContext")
external fun glib_slistautoptr_cleanup_GtkIMContext(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36779_glib_autoptr_cleanup_GtkIMContextSimple")
external fun glib_autoptr_cleanup_GtkIMContextSimple(_ptr: CValuesRef<CPointerVar<GtkIMContextSimple>>?): Unit

@CCall("knifunptr_libgtk36780_glib_listautoptr_cleanup_GtkIMContextSimple")
external fun glib_listautoptr_cleanup_GtkIMContextSimple(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36781_glib_slistautoptr_cleanup_GtkIMContextSimple")
external fun glib_slistautoptr_cleanup_GtkIMContextSimple(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36782_glib_autoptr_cleanup_GtkIMMulticontext")
external fun glib_autoptr_cleanup_GtkIMMulticontext(_ptr: CValuesRef<CPointerVar<GtkIMMulticontext>>?): Unit

@CCall("knifunptr_libgtk36783_glib_listautoptr_cleanup_GtkIMMulticontext")
external fun glib_listautoptr_cleanup_GtkIMMulticontext(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36784_glib_slistautoptr_cleanup_GtkIMMulticontext")
external fun glib_slistautoptr_cleanup_GtkIMMulticontext(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36785_glib_autoptr_cleanup_GtkIconInfo")
external fun glib_autoptr_cleanup_GtkIconInfo(_ptr: CValuesRef<CPointerVar<GtkIconInfo>>?): Unit

@CCall("knifunptr_libgtk36786_glib_listautoptr_cleanup_GtkIconInfo")
external fun glib_listautoptr_cleanup_GtkIconInfo(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36787_glib_slistautoptr_cleanup_GtkIconInfo")
external fun glib_slistautoptr_cleanup_GtkIconInfo(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36788_glib_autoptr_cleanup_GtkIconTheme")
external fun glib_autoptr_cleanup_GtkIconTheme(_ptr: CValuesRef<CPointerVar<GtkIconTheme>>?): Unit

@CCall("knifunptr_libgtk36789_glib_listautoptr_cleanup_GtkIconTheme")
external fun glib_listautoptr_cleanup_GtkIconTheme(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36790_glib_slistautoptr_cleanup_GtkIconTheme")
external fun glib_slistautoptr_cleanup_GtkIconTheme(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36791_glib_autoptr_cleanup_GtkIconView")
external fun glib_autoptr_cleanup_GtkIconView(_ptr: CValuesRef<CPointerVar<GtkIconView>>?): Unit

@CCall("knifunptr_libgtk36792_glib_listautoptr_cleanup_GtkIconView")
external fun glib_listautoptr_cleanup_GtkIconView(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36793_glib_slistautoptr_cleanup_GtkIconView")
external fun glib_slistautoptr_cleanup_GtkIconView(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36794_glib_autoptr_cleanup_GtkImage")
external fun glib_autoptr_cleanup_GtkImage(_ptr: CValuesRef<CPointerVar<GtkImage>>?): Unit

@CCall("knifunptr_libgtk36795_glib_listautoptr_cleanup_GtkImage")
external fun glib_listautoptr_cleanup_GtkImage(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36796_glib_slistautoptr_cleanup_GtkImage")
external fun glib_slistautoptr_cleanup_GtkImage(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36797_glib_autoptr_cleanup_GtkInfoBar")
external fun glib_autoptr_cleanup_GtkInfoBar(_ptr: CValuesRef<CPointerVar<GtkInfoBar>>?): Unit

@CCall("knifunptr_libgtk36798_glib_listautoptr_cleanup_GtkInfoBar")
external fun glib_listautoptr_cleanup_GtkInfoBar(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36799_glib_slistautoptr_cleanup_GtkInfoBar")
external fun glib_slistautoptr_cleanup_GtkInfoBar(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36800_glib_autoptr_cleanup_GtkInvisible")
external fun glib_autoptr_cleanup_GtkInvisible(_ptr: CValuesRef<CPointerVar<GtkInvisible>>?): Unit

@CCall("knifunptr_libgtk36801_glib_listautoptr_cleanup_GtkInvisible")
external fun glib_listautoptr_cleanup_GtkInvisible(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36802_glib_slistautoptr_cleanup_GtkInvisible")
external fun glib_slistautoptr_cleanup_GtkInvisible(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36803_glib_autoptr_cleanup_GtkLayout")
external fun glib_autoptr_cleanup_GtkLayout(_ptr: CValuesRef<CPointerVar<GtkLayout>>?): Unit

@CCall("knifunptr_libgtk36804_glib_listautoptr_cleanup_GtkLayout")
external fun glib_listautoptr_cleanup_GtkLayout(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36805_glib_slistautoptr_cleanup_GtkLayout")
external fun glib_slistautoptr_cleanup_GtkLayout(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36806_glib_autoptr_cleanup_GtkLevelBar")
external fun glib_autoptr_cleanup_GtkLevelBar(_ptr: CValuesRef<CPointerVar<GtkLevelBar>>?): Unit

@CCall("knifunptr_libgtk36807_glib_listautoptr_cleanup_GtkLevelBar")
external fun glib_listautoptr_cleanup_GtkLevelBar(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36808_glib_slistautoptr_cleanup_GtkLevelBar")
external fun glib_slistautoptr_cleanup_GtkLevelBar(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36809_glib_autoptr_cleanup_GtkLinkButton")
external fun glib_autoptr_cleanup_GtkLinkButton(_ptr: CValuesRef<CPointerVar<GtkLinkButton>>?): Unit

@CCall("knifunptr_libgtk36810_glib_listautoptr_cleanup_GtkLinkButton")
external fun glib_listautoptr_cleanup_GtkLinkButton(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36811_glib_slistautoptr_cleanup_GtkLinkButton")
external fun glib_slistautoptr_cleanup_GtkLinkButton(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36812_glib_autoptr_cleanup_GtkListStore")
external fun glib_autoptr_cleanup_GtkListStore(_ptr: CValuesRef<CPointerVar<GtkListStore>>?): Unit

@CCall("knifunptr_libgtk36813_glib_listautoptr_cleanup_GtkListStore")
external fun glib_listautoptr_cleanup_GtkListStore(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36814_glib_slistautoptr_cleanup_GtkListStore")
external fun glib_slistautoptr_cleanup_GtkListStore(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36815_glib_autoptr_cleanup_GtkLockButton")
external fun glib_autoptr_cleanup_GtkLockButton(_ptr: CValuesRef<CPointerVar<GtkLockButton>>?): Unit

@CCall("knifunptr_libgtk36816_glib_listautoptr_cleanup_GtkLockButton")
external fun glib_listautoptr_cleanup_GtkLockButton(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36817_glib_slistautoptr_cleanup_GtkLockButton")
external fun glib_slistautoptr_cleanup_GtkLockButton(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36818_glib_autoptr_cleanup_GtkMenuBar")
external fun glib_autoptr_cleanup_GtkMenuBar(_ptr: CValuesRef<CPointerVar<GtkMenuBar>>?): Unit

@CCall("knifunptr_libgtk36819_glib_listautoptr_cleanup_GtkMenuBar")
external fun glib_listautoptr_cleanup_GtkMenuBar(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36820_glib_slistautoptr_cleanup_GtkMenuBar")
external fun glib_slistautoptr_cleanup_GtkMenuBar(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36821_glib_autoptr_cleanup_GtkMenuButton")
external fun glib_autoptr_cleanup_GtkMenuButton(_ptr: CValuesRef<CPointerVar<GtkMenuButton>>?): Unit

@CCall("knifunptr_libgtk36822_glib_listautoptr_cleanup_GtkMenuButton")
external fun glib_listautoptr_cleanup_GtkMenuButton(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36823_glib_slistautoptr_cleanup_GtkMenuButton")
external fun glib_slistautoptr_cleanup_GtkMenuButton(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36824_glib_autoptr_cleanup_GtkMenuItem")
external fun glib_autoptr_cleanup_GtkMenuItem(_ptr: CValuesRef<CPointerVar<GtkMenuItem>>?): Unit

@CCall("knifunptr_libgtk36825_glib_listautoptr_cleanup_GtkMenuItem")
external fun glib_listautoptr_cleanup_GtkMenuItem(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36826_glib_slistautoptr_cleanup_GtkMenuItem")
external fun glib_slistautoptr_cleanup_GtkMenuItem(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36827_glib_autoptr_cleanup_GtkMenuToolButton")
external fun glib_autoptr_cleanup_GtkMenuToolButton(_ptr: CValuesRef<CPointerVar<GtkMenuToolButton>>?): Unit

@CCall("knifunptr_libgtk36828_glib_listautoptr_cleanup_GtkMenuToolButton")
external fun glib_listautoptr_cleanup_GtkMenuToolButton(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36829_glib_slistautoptr_cleanup_GtkMenuToolButton")
external fun glib_slistautoptr_cleanup_GtkMenuToolButton(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36830_glib_autoptr_cleanup_GtkMessageDialog")
external fun glib_autoptr_cleanup_GtkMessageDialog(_ptr: CValuesRef<CPointerVar<GtkMessageDialog>>?): Unit

@CCall("knifunptr_libgtk36831_glib_listautoptr_cleanup_GtkMessageDialog")
external fun glib_listautoptr_cleanup_GtkMessageDialog(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36832_glib_slistautoptr_cleanup_GtkMessageDialog")
external fun glib_slistautoptr_cleanup_GtkMessageDialog(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36833_glib_autoptr_cleanup_GtkMountOperation")
external fun glib_autoptr_cleanup_GtkMountOperation(_ptr: CValuesRef<CPointerVar<GtkMountOperation>>?): Unit

@CCall("knifunptr_libgtk36834_glib_listautoptr_cleanup_GtkMountOperation")
external fun glib_listautoptr_cleanup_GtkMountOperation(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36835_glib_slistautoptr_cleanup_GtkMountOperation")
external fun glib_slistautoptr_cleanup_GtkMountOperation(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36836_glib_autoptr_cleanup_GtkNotebook")
external fun glib_autoptr_cleanup_GtkNotebook(_ptr: CValuesRef<CPointerVar<GtkNotebook>>?): Unit

@CCall("knifunptr_libgtk36837_glib_listautoptr_cleanup_GtkNotebook")
external fun glib_listautoptr_cleanup_GtkNotebook(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36838_glib_slistautoptr_cleanup_GtkNotebook")
external fun glib_slistautoptr_cleanup_GtkNotebook(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36839_glib_autoptr_cleanup_GtkOffscreenWindow")
external fun glib_autoptr_cleanup_GtkOffscreenWindow(_ptr: CValuesRef<CPointerVar<GtkOffscreenWindow>>?): Unit

@CCall("knifunptr_libgtk36840_glib_listautoptr_cleanup_GtkOffscreenWindow")
external fun glib_listautoptr_cleanup_GtkOffscreenWindow(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36841_glib_slistautoptr_cleanup_GtkOffscreenWindow")
external fun glib_slistautoptr_cleanup_GtkOffscreenWindow(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36842_glib_autoptr_cleanup_GtkOrientable")
external fun glib_autoptr_cleanup_GtkOrientable(_ptr: CValuesRef<CPointerVar<GtkOrientable>>?): Unit

@CCall("knifunptr_libgtk36843_glib_listautoptr_cleanup_GtkOrientable")
external fun glib_listautoptr_cleanup_GtkOrientable(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36844_glib_slistautoptr_cleanup_GtkOrientable")
external fun glib_slistautoptr_cleanup_GtkOrientable(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36845_glib_autoptr_cleanup_GtkOverlay")
external fun glib_autoptr_cleanup_GtkOverlay(_ptr: CValuesRef<CPointerVar<GtkOverlay>>?): Unit

@CCall("knifunptr_libgtk36846_glib_listautoptr_cleanup_GtkOverlay")
external fun glib_listautoptr_cleanup_GtkOverlay(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36847_glib_slistautoptr_cleanup_GtkOverlay")
external fun glib_slistautoptr_cleanup_GtkOverlay(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36848_glib_autoptr_cleanup_GtkPageSetup")
external fun glib_autoptr_cleanup_GtkPageSetup(_ptr: CValuesRef<CPointerVar<GtkPageSetup>>?): Unit

@CCall("knifunptr_libgtk36849_glib_listautoptr_cleanup_GtkPageSetup")
external fun glib_listautoptr_cleanup_GtkPageSetup(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36850_glib_slistautoptr_cleanup_GtkPageSetup")
external fun glib_slistautoptr_cleanup_GtkPageSetup(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36851_glib_autoptr_cleanup_GtkPaned")
external fun glib_autoptr_cleanup_GtkPaned(_ptr: CValuesRef<CPointerVar<GtkPaned>>?): Unit

@CCall("knifunptr_libgtk36852_glib_listautoptr_cleanup_GtkPaned")
external fun glib_listautoptr_cleanup_GtkPaned(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36853_glib_slistautoptr_cleanup_GtkPaned")
external fun glib_slistautoptr_cleanup_GtkPaned(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36854_glib_autoptr_cleanup_GtkPlacesSidebar")
external fun glib_autoptr_cleanup_GtkPlacesSidebar(_ptr: CValuesRef<CPointerVar<GtkPlacesSidebar>>?): Unit

@CCall("knifunptr_libgtk36855_glib_listautoptr_cleanup_GtkPlacesSidebar")
external fun glib_listautoptr_cleanup_GtkPlacesSidebar(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36856_glib_slistautoptr_cleanup_GtkPlacesSidebar")
external fun glib_slistautoptr_cleanup_GtkPlacesSidebar(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36857_glib_autoptr_cleanup_GtkPopover")
external fun glib_autoptr_cleanup_GtkPopover(_ptr: CValuesRef<CPointerVar<GtkPopover>>?): Unit

@CCall("knifunptr_libgtk36858_glib_listautoptr_cleanup_GtkPopover")
external fun glib_listautoptr_cleanup_GtkPopover(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36859_glib_slistautoptr_cleanup_GtkPopover")
external fun glib_slistautoptr_cleanup_GtkPopover(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36860_glib_autoptr_cleanup_GtkPopoverMenu")
external fun glib_autoptr_cleanup_GtkPopoverMenu(_ptr: CValuesRef<CPointerVar<GtkPopoverMenu>>?): Unit

@CCall("knifunptr_libgtk36861_glib_listautoptr_cleanup_GtkPopoverMenu")
external fun glib_listautoptr_cleanup_GtkPopoverMenu(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36862_glib_slistautoptr_cleanup_GtkPopoverMenu")
external fun glib_slistautoptr_cleanup_GtkPopoverMenu(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36863_glib_autoptr_cleanup_GtkPrintContext")
external fun glib_autoptr_cleanup_GtkPrintContext(_ptr: CValuesRef<CPointerVar<GtkPrintContext>>?): Unit

@CCall("knifunptr_libgtk36864_glib_listautoptr_cleanup_GtkPrintContext")
external fun glib_listautoptr_cleanup_GtkPrintContext(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36865_glib_slistautoptr_cleanup_GtkPrintContext")
external fun glib_slistautoptr_cleanup_GtkPrintContext(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36866_glib_autoptr_cleanup_GtkPrintOperation")
external fun glib_autoptr_cleanup_GtkPrintOperation(_ptr: CValuesRef<CPointerVar<GtkPrintOperation>>?): Unit

@CCall("knifunptr_libgtk36867_glib_listautoptr_cleanup_GtkPrintOperation")
external fun glib_listautoptr_cleanup_GtkPrintOperation(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36868_glib_slistautoptr_cleanup_GtkPrintOperation")
external fun glib_slistautoptr_cleanup_GtkPrintOperation(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36869_glib_autoptr_cleanup_GtkPrintOperationPreview")
external fun glib_autoptr_cleanup_GtkPrintOperationPreview(_ptr: CValuesRef<CPointerVar<GtkPrintOperationPreview>>?): Unit

@CCall("knifunptr_libgtk36870_glib_listautoptr_cleanup_GtkPrintOperationPreview")
external fun glib_listautoptr_cleanup_GtkPrintOperationPreview(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36871_glib_slistautoptr_cleanup_GtkPrintOperationPreview")
external fun glib_slistautoptr_cleanup_GtkPrintOperationPreview(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36872_glib_autoptr_cleanup_GtkPrintSettings")
external fun glib_autoptr_cleanup_GtkPrintSettings(_ptr: CValuesRef<CPointerVar<GtkPrintSettings>>?): Unit

@CCall("knifunptr_libgtk36873_glib_listautoptr_cleanup_GtkPrintSettings")
external fun glib_listautoptr_cleanup_GtkPrintSettings(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36874_glib_slistautoptr_cleanup_GtkPrintSettings")
external fun glib_slistautoptr_cleanup_GtkPrintSettings(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36875_glib_autoptr_cleanup_GtkProgressBar")
external fun glib_autoptr_cleanup_GtkProgressBar(_ptr: CValuesRef<CPointerVar<GtkProgressBar>>?): Unit

@CCall("knifunptr_libgtk36876_glib_listautoptr_cleanup_GtkProgressBar")
external fun glib_listautoptr_cleanup_GtkProgressBar(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36877_glib_slistautoptr_cleanup_GtkProgressBar")
external fun glib_slistautoptr_cleanup_GtkProgressBar(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36878_glib_autoptr_cleanup_GtkRadioButton")
external fun glib_autoptr_cleanup_GtkRadioButton(_ptr: CValuesRef<CPointerVar<GtkRadioButton>>?): Unit

@CCall("knifunptr_libgtk36879_glib_listautoptr_cleanup_GtkRadioButton")
external fun glib_listautoptr_cleanup_GtkRadioButton(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36880_glib_slistautoptr_cleanup_GtkRadioButton")
external fun glib_slistautoptr_cleanup_GtkRadioButton(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36881_glib_autoptr_cleanup_GtkRadioMenuItem")
external fun glib_autoptr_cleanup_GtkRadioMenuItem(_ptr: CValuesRef<CPointerVar<GtkRadioMenuItem>>?): Unit

@CCall("knifunptr_libgtk36882_glib_listautoptr_cleanup_GtkRadioMenuItem")
external fun glib_listautoptr_cleanup_GtkRadioMenuItem(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36883_glib_slistautoptr_cleanup_GtkRadioMenuItem")
external fun glib_slistautoptr_cleanup_GtkRadioMenuItem(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36884_glib_autoptr_cleanup_GtkRadioToolButton")
external fun glib_autoptr_cleanup_GtkRadioToolButton(_ptr: CValuesRef<CPointerVar<GtkRadioToolButton>>?): Unit

@CCall("knifunptr_libgtk36885_glib_listautoptr_cleanup_GtkRadioToolButton")
external fun glib_listautoptr_cleanup_GtkRadioToolButton(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36886_glib_slistautoptr_cleanup_GtkRadioToolButton")
external fun glib_slistautoptr_cleanup_GtkRadioToolButton(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36887_glib_autoptr_cleanup_GtkRange")
external fun glib_autoptr_cleanup_GtkRange(_ptr: CValuesRef<CPointerVar<GtkRange>>?): Unit

@CCall("knifunptr_libgtk36888_glib_listautoptr_cleanup_GtkRange")
external fun glib_listautoptr_cleanup_GtkRange(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36889_glib_slistautoptr_cleanup_GtkRange")
external fun glib_slistautoptr_cleanup_GtkRange(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36890_glib_autoptr_cleanup_GtkRcStyle")
external fun glib_autoptr_cleanup_GtkRcStyle(_ptr: CValuesRef<CPointerVar<GtkRcStyle>>?): Unit

@CCall("knifunptr_libgtk36891_glib_listautoptr_cleanup_GtkRcStyle")
external fun glib_listautoptr_cleanup_GtkRcStyle(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36892_glib_slistautoptr_cleanup_GtkRcStyle")
external fun glib_slistautoptr_cleanup_GtkRcStyle(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36893_glib_autoptr_cleanup_GtkRecentChooser")
external fun glib_autoptr_cleanup_GtkRecentChooser(_ptr: CValuesRef<CPointerVar<GtkRecentChooser>>?): Unit

@CCall("knifunptr_libgtk36894_glib_listautoptr_cleanup_GtkRecentChooser")
external fun glib_listautoptr_cleanup_GtkRecentChooser(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36895_glib_slistautoptr_cleanup_GtkRecentChooser")
external fun glib_slistautoptr_cleanup_GtkRecentChooser(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36896_glib_autoptr_cleanup_GtkRecentChooserDialog")
external fun glib_autoptr_cleanup_GtkRecentChooserDialog(_ptr: CValuesRef<CPointerVar<GtkRecentChooserDialog>>?): Unit

@CCall("knifunptr_libgtk36897_glib_listautoptr_cleanup_GtkRecentChooserDialog")
external fun glib_listautoptr_cleanup_GtkRecentChooserDialog(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36898_glib_slistautoptr_cleanup_GtkRecentChooserDialog")
external fun glib_slistautoptr_cleanup_GtkRecentChooserDialog(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36899_glib_autoptr_cleanup_GtkRecentChooserMenu")
external fun glib_autoptr_cleanup_GtkRecentChooserMenu(_ptr: CValuesRef<CPointerVar<GtkRecentChooserMenu>>?): Unit

@CCall("knifunptr_libgtk36900_glib_listautoptr_cleanup_GtkRecentChooserMenu")
external fun glib_listautoptr_cleanup_GtkRecentChooserMenu(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36901_glib_slistautoptr_cleanup_GtkRecentChooserMenu")
external fun glib_slistautoptr_cleanup_GtkRecentChooserMenu(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36902_glib_autoptr_cleanup_GtkRecentChooserWidget")
external fun glib_autoptr_cleanup_GtkRecentChooserWidget(_ptr: CValuesRef<CPointerVar<GtkRecentChooserWidget>>?): Unit

@CCall("knifunptr_libgtk36903_glib_listautoptr_cleanup_GtkRecentChooserWidget")
external fun glib_listautoptr_cleanup_GtkRecentChooserWidget(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36904_glib_slistautoptr_cleanup_GtkRecentChooserWidget")
external fun glib_slistautoptr_cleanup_GtkRecentChooserWidget(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36905_glib_autoptr_cleanup_GtkRecentFilter")
external fun glib_autoptr_cleanup_GtkRecentFilter(_ptr: CValuesRef<CPointerVar<GtkRecentFilter>>?): Unit

@CCall("knifunptr_libgtk36906_glib_listautoptr_cleanup_GtkRecentFilter")
external fun glib_listautoptr_cleanup_GtkRecentFilter(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36907_glib_slistautoptr_cleanup_GtkRecentFilter")
external fun glib_slistautoptr_cleanup_GtkRecentFilter(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36908_glib_autoptr_cleanup_GtkRecentManager")
external fun glib_autoptr_cleanup_GtkRecentManager(_ptr: CValuesRef<CPointerVar<GtkRecentManager>>?): Unit

@CCall("knifunptr_libgtk36909_glib_listautoptr_cleanup_GtkRecentManager")
external fun glib_listautoptr_cleanup_GtkRecentManager(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36910_glib_slistautoptr_cleanup_GtkRecentManager")
external fun glib_slistautoptr_cleanup_GtkRecentManager(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36911_glib_autoptr_cleanup_GtkRevealer")
external fun glib_autoptr_cleanup_GtkRevealer(_ptr: CValuesRef<CPointerVar<GtkRevealer>>?): Unit

@CCall("knifunptr_libgtk36912_glib_listautoptr_cleanup_GtkRevealer")
external fun glib_listautoptr_cleanup_GtkRevealer(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36913_glib_slistautoptr_cleanup_GtkRevealer")
external fun glib_slistautoptr_cleanup_GtkRevealer(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36914_glib_autoptr_cleanup_GtkScale")
external fun glib_autoptr_cleanup_GtkScale(_ptr: CValuesRef<CPointerVar<GtkScale>>?): Unit

@CCall("knifunptr_libgtk36915_glib_listautoptr_cleanup_GtkScale")
external fun glib_listautoptr_cleanup_GtkScale(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36916_glib_slistautoptr_cleanup_GtkScale")
external fun glib_slistautoptr_cleanup_GtkScale(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36917_glib_autoptr_cleanup_GtkScaleButton")
external fun glib_autoptr_cleanup_GtkScaleButton(_ptr: CValuesRef<CPointerVar<GtkScaleButton>>?): Unit

@CCall("knifunptr_libgtk36918_glib_listautoptr_cleanup_GtkScaleButton")
external fun glib_listautoptr_cleanup_GtkScaleButton(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36919_glib_slistautoptr_cleanup_GtkScaleButton")
external fun glib_slistautoptr_cleanup_GtkScaleButton(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36920_glib_autoptr_cleanup_GtkScrollable")
external fun glib_autoptr_cleanup_GtkScrollable(_ptr: CValuesRef<CPointerVar<GtkScrollable>>?): Unit

@CCall("knifunptr_libgtk36921_glib_listautoptr_cleanup_GtkScrollable")
external fun glib_listautoptr_cleanup_GtkScrollable(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36922_glib_slistautoptr_cleanup_GtkScrollable")
external fun glib_slistautoptr_cleanup_GtkScrollable(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36923_glib_autoptr_cleanup_GtkScrollbar")
external fun glib_autoptr_cleanup_GtkScrollbar(_ptr: CValuesRef<CPointerVar<GtkScrollbar>>?): Unit

@CCall("knifunptr_libgtk36924_glib_listautoptr_cleanup_GtkScrollbar")
external fun glib_listautoptr_cleanup_GtkScrollbar(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36925_glib_slistautoptr_cleanup_GtkScrollbar")
external fun glib_slistautoptr_cleanup_GtkScrollbar(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36926_glib_autoptr_cleanup_GtkScrolledWindow")
external fun glib_autoptr_cleanup_GtkScrolledWindow(_ptr: CValuesRef<CPointerVar<GtkScrolledWindow>>?): Unit

@CCall("knifunptr_libgtk36927_glib_listautoptr_cleanup_GtkScrolledWindow")
external fun glib_listautoptr_cleanup_GtkScrolledWindow(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36928_glib_slistautoptr_cleanup_GtkScrolledWindow")
external fun glib_slistautoptr_cleanup_GtkScrolledWindow(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36929_glib_autoptr_cleanup_GtkSearchBar")
external fun glib_autoptr_cleanup_GtkSearchBar(_ptr: CValuesRef<CPointerVar<GtkSearchBar>>?): Unit

@CCall("knifunptr_libgtk36930_glib_listautoptr_cleanup_GtkSearchBar")
external fun glib_listautoptr_cleanup_GtkSearchBar(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36931_glib_slistautoptr_cleanup_GtkSearchBar")
external fun glib_slistautoptr_cleanup_GtkSearchBar(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36932_glib_autoptr_cleanup_GtkSearchEntry")
external fun glib_autoptr_cleanup_GtkSearchEntry(_ptr: CValuesRef<CPointerVar<GtkSearchEntry>>?): Unit

@CCall("knifunptr_libgtk36933_glib_listautoptr_cleanup_GtkSearchEntry")
external fun glib_listautoptr_cleanup_GtkSearchEntry(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36934_glib_slistautoptr_cleanup_GtkSearchEntry")
external fun glib_slistautoptr_cleanup_GtkSearchEntry(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36935_glib_autoptr_cleanup_GtkSeparator")
external fun glib_autoptr_cleanup_GtkSeparator(_ptr: CValuesRef<CPointerVar<GtkSeparator>>?): Unit

@CCall("knifunptr_libgtk36936_glib_listautoptr_cleanup_GtkSeparator")
external fun glib_listautoptr_cleanup_GtkSeparator(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36937_glib_slistautoptr_cleanup_GtkSeparator")
external fun glib_slistautoptr_cleanup_GtkSeparator(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36938_glib_autoptr_cleanup_GtkSeparatorMenuItem")
external fun glib_autoptr_cleanup_GtkSeparatorMenuItem(_ptr: CValuesRef<CPointerVar<GtkSeparatorMenuItem>>?): Unit

@CCall("knifunptr_libgtk36939_glib_listautoptr_cleanup_GtkSeparatorMenuItem")
external fun glib_listautoptr_cleanup_GtkSeparatorMenuItem(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36940_glib_slistautoptr_cleanup_GtkSeparatorMenuItem")
external fun glib_slistautoptr_cleanup_GtkSeparatorMenuItem(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36941_glib_autoptr_cleanup_GtkSeparatorToolItem")
external fun glib_autoptr_cleanup_GtkSeparatorToolItem(_ptr: CValuesRef<CPointerVar<GtkSeparatorToolItem>>?): Unit

@CCall("knifunptr_libgtk36942_glib_listautoptr_cleanup_GtkSeparatorToolItem")
external fun glib_listautoptr_cleanup_GtkSeparatorToolItem(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36943_glib_slistautoptr_cleanup_GtkSeparatorToolItem")
external fun glib_slistautoptr_cleanup_GtkSeparatorToolItem(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36944_glib_autoptr_cleanup_GtkSettings")
external fun glib_autoptr_cleanup_GtkSettings(_ptr: CValuesRef<CPointerVar<GtkSettings>>?): Unit

@CCall("knifunptr_libgtk36945_glib_listautoptr_cleanup_GtkSettings")
external fun glib_listautoptr_cleanup_GtkSettings(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36946_glib_slistautoptr_cleanup_GtkSettings")
external fun glib_slistautoptr_cleanup_GtkSettings(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36947_glib_autoptr_cleanup_GtkStackSidebar")
external fun glib_autoptr_cleanup_GtkStackSidebar(_ptr: CValuesRef<CPointerVar<GtkStackSidebar>>?): Unit

@CCall("knifunptr_libgtk36948_glib_listautoptr_cleanup_GtkStackSidebar")
external fun glib_listautoptr_cleanup_GtkStackSidebar(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36949_glib_slistautoptr_cleanup_GtkStackSidebar")
external fun glib_slistautoptr_cleanup_GtkStackSidebar(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36950_glib_autoptr_cleanup_GtkSizeGroup")
external fun glib_autoptr_cleanup_GtkSizeGroup(_ptr: CValuesRef<CPointerVar<GtkSizeGroup>>?): Unit

@CCall("knifunptr_libgtk36951_glib_listautoptr_cleanup_GtkSizeGroup")
external fun glib_listautoptr_cleanup_GtkSizeGroup(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36952_glib_slistautoptr_cleanup_GtkSizeGroup")
external fun glib_slistautoptr_cleanup_GtkSizeGroup(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36953_glib_autoptr_cleanup_GtkSpinButton")
external fun glib_autoptr_cleanup_GtkSpinButton(_ptr: CValuesRef<CPointerVar<GtkSpinButton>>?): Unit

@CCall("knifunptr_libgtk36954_glib_listautoptr_cleanup_GtkSpinButton")
external fun glib_listautoptr_cleanup_GtkSpinButton(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36955_glib_slistautoptr_cleanup_GtkSpinButton")
external fun glib_slistautoptr_cleanup_GtkSpinButton(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36956_glib_autoptr_cleanup_GtkSpinner")
external fun glib_autoptr_cleanup_GtkSpinner(_ptr: CValuesRef<CPointerVar<GtkSpinner>>?): Unit

@CCall("knifunptr_libgtk36957_glib_listautoptr_cleanup_GtkSpinner")
external fun glib_listautoptr_cleanup_GtkSpinner(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36958_glib_slistautoptr_cleanup_GtkSpinner")
external fun glib_slistautoptr_cleanup_GtkSpinner(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36959_glib_autoptr_cleanup_GtkStack")
external fun glib_autoptr_cleanup_GtkStack(_ptr: CValuesRef<CPointerVar<GtkStack>>?): Unit

@CCall("knifunptr_libgtk36960_glib_listautoptr_cleanup_GtkStack")
external fun glib_listautoptr_cleanup_GtkStack(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36961_glib_slistautoptr_cleanup_GtkStack")
external fun glib_slistautoptr_cleanup_GtkStack(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36962_glib_autoptr_cleanup_GtkStackSwitcher")
external fun glib_autoptr_cleanup_GtkStackSwitcher(_ptr: CValuesRef<CPointerVar<GtkStackSwitcher>>?): Unit

@CCall("knifunptr_libgtk36963_glib_listautoptr_cleanup_GtkStackSwitcher")
external fun glib_listautoptr_cleanup_GtkStackSwitcher(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36964_glib_slistautoptr_cleanup_GtkStackSwitcher")
external fun glib_slistautoptr_cleanup_GtkStackSwitcher(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36965_glib_autoptr_cleanup_GtkStatusbar")
external fun glib_autoptr_cleanup_GtkStatusbar(_ptr: CValuesRef<CPointerVar<GtkStatusbar>>?): Unit

@CCall("knifunptr_libgtk36966_glib_listautoptr_cleanup_GtkStatusbar")
external fun glib_listautoptr_cleanup_GtkStatusbar(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36967_glib_slistautoptr_cleanup_GtkStatusbar")
external fun glib_slistautoptr_cleanup_GtkStatusbar(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36968_glib_autoptr_cleanup_GtkStyle")
external fun glib_autoptr_cleanup_GtkStyle(_ptr: CValuesRef<CPointerVar<GtkStyle>>?): Unit

@CCall("knifunptr_libgtk36969_glib_listautoptr_cleanup_GtkStyle")
external fun glib_listautoptr_cleanup_GtkStyle(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36970_glib_slistautoptr_cleanup_GtkStyle")
external fun glib_slistautoptr_cleanup_GtkStyle(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36971_glib_autoptr_cleanup_GtkStyleContext")
external fun glib_autoptr_cleanup_GtkStyleContext(_ptr: CValuesRef<CPointerVar<GtkStyleContext>>?): Unit

@CCall("knifunptr_libgtk36972_glib_listautoptr_cleanup_GtkStyleContext")
external fun glib_listautoptr_cleanup_GtkStyleContext(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36973_glib_slistautoptr_cleanup_GtkStyleContext")
external fun glib_slistautoptr_cleanup_GtkStyleContext(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36974_glib_autoptr_cleanup_GtkStyleProperties")
external fun glib_autoptr_cleanup_GtkStyleProperties(_ptr: CValuesRef<CPointerVar<GtkStyleProperties>>?): Unit

@CCall("knifunptr_libgtk36975_glib_listautoptr_cleanup_GtkStyleProperties")
external fun glib_listautoptr_cleanup_GtkStyleProperties(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36976_glib_slistautoptr_cleanup_GtkStyleProperties")
external fun glib_slistautoptr_cleanup_GtkStyleProperties(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36977_glib_autoptr_cleanup_GtkStyleProvider")
external fun glib_autoptr_cleanup_GtkStyleProvider(_ptr: CValuesRef<CPointerVar<GtkStyleProvider>>?): Unit

@CCall("knifunptr_libgtk36978_glib_listautoptr_cleanup_GtkStyleProvider")
external fun glib_listautoptr_cleanup_GtkStyleProvider(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36979_glib_slistautoptr_cleanup_GtkStyleProvider")
external fun glib_slistautoptr_cleanup_GtkStyleProvider(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36980_glib_autoptr_cleanup_GtkSwitch")
external fun glib_autoptr_cleanup_GtkSwitch(_ptr: CValuesRef<CPointerVar<GtkSwitch>>?): Unit

@CCall("knifunptr_libgtk36981_glib_listautoptr_cleanup_GtkSwitch")
external fun glib_listautoptr_cleanup_GtkSwitch(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36982_glib_slistautoptr_cleanup_GtkSwitch")
external fun glib_slistautoptr_cleanup_GtkSwitch(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36983_glib_autoptr_cleanup_GtkTextBuffer")
external fun glib_autoptr_cleanup_GtkTextBuffer(_ptr: CValuesRef<CPointerVar<GtkTextBuffer>>?): Unit

@CCall("knifunptr_libgtk36984_glib_listautoptr_cleanup_GtkTextBuffer")
external fun glib_listautoptr_cleanup_GtkTextBuffer(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36985_glib_slistautoptr_cleanup_GtkTextBuffer")
external fun glib_slistautoptr_cleanup_GtkTextBuffer(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36986_glib_autoptr_cleanup_GtkTextChildAnchor")
external fun glib_autoptr_cleanup_GtkTextChildAnchor(_ptr: CValuesRef<CPointerVar<GtkTextChildAnchor>>?): Unit

@CCall("knifunptr_libgtk36987_glib_listautoptr_cleanup_GtkTextChildAnchor")
external fun glib_listautoptr_cleanup_GtkTextChildAnchor(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36988_glib_slistautoptr_cleanup_GtkTextChildAnchor")
external fun glib_slistautoptr_cleanup_GtkTextChildAnchor(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36989_glib_autoptr_cleanup_GtkTextMark")
external fun glib_autoptr_cleanup_GtkTextMark(_ptr: CValuesRef<CPointerVar<GtkTextMark>>?): Unit

@CCall("knifunptr_libgtk36990_glib_listautoptr_cleanup_GtkTextMark")
external fun glib_listautoptr_cleanup_GtkTextMark(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36991_glib_slistautoptr_cleanup_GtkTextMark")
external fun glib_slistautoptr_cleanup_GtkTextMark(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36992_glib_autoptr_cleanup_GtkTextTag")
external fun glib_autoptr_cleanup_GtkTextTag(_ptr: CValuesRef<CPointerVar<GtkTextTag>>?): Unit

@CCall("knifunptr_libgtk36993_glib_listautoptr_cleanup_GtkTextTag")
external fun glib_listautoptr_cleanup_GtkTextTag(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36994_glib_slistautoptr_cleanup_GtkTextTag")
external fun glib_slistautoptr_cleanup_GtkTextTag(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36995_glib_autoptr_cleanup_GtkTextTagTable")
external fun glib_autoptr_cleanup_GtkTextTagTable(_ptr: CValuesRef<CPointerVar<GtkTextTagTable>>?): Unit

@CCall("knifunptr_libgtk36996_glib_listautoptr_cleanup_GtkTextTagTable")
external fun glib_listautoptr_cleanup_GtkTextTagTable(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk36997_glib_slistautoptr_cleanup_GtkTextTagTable")
external fun glib_slistautoptr_cleanup_GtkTextTagTable(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk36998_glib_autoptr_cleanup_GtkTextView")
external fun glib_autoptr_cleanup_GtkTextView(_ptr: CValuesRef<CPointerVar<GtkTextView>>?): Unit

@CCall("knifunptr_libgtk36999_glib_listautoptr_cleanup_GtkTextView")
external fun glib_listautoptr_cleanup_GtkTextView(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk37000_glib_slistautoptr_cleanup_GtkTextView")
external fun glib_slistautoptr_cleanup_GtkTextView(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk37001_glib_autoptr_cleanup_GtkToggleButton")
external fun glib_autoptr_cleanup_GtkToggleButton(_ptr: CValuesRef<CPointerVar<GtkToggleButton>>?): Unit

@CCall("knifunptr_libgtk37002_glib_listautoptr_cleanup_GtkToggleButton")
external fun glib_listautoptr_cleanup_GtkToggleButton(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk37003_glib_slistautoptr_cleanup_GtkToggleButton")
external fun glib_slistautoptr_cleanup_GtkToggleButton(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk37004_glib_autoptr_cleanup_GtkToggleToolButton")
external fun glib_autoptr_cleanup_GtkToggleToolButton(_ptr: CValuesRef<CPointerVar<GtkToggleToolButton>>?): Unit

@CCall("knifunptr_libgtk37005_glib_listautoptr_cleanup_GtkToggleToolButton")
external fun glib_listautoptr_cleanup_GtkToggleToolButton(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk37006_glib_slistautoptr_cleanup_GtkToggleToolButton")
external fun glib_slistautoptr_cleanup_GtkToggleToolButton(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk37007_glib_autoptr_cleanup_GtkToolButton")
external fun glib_autoptr_cleanup_GtkToolButton(_ptr: CValuesRef<CPointerVar<GtkToolButton>>?): Unit

@CCall("knifunptr_libgtk37008_glib_listautoptr_cleanup_GtkToolButton")
external fun glib_listautoptr_cleanup_GtkToolButton(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk37009_glib_slistautoptr_cleanup_GtkToolButton")
external fun glib_slistautoptr_cleanup_GtkToolButton(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk37010_glib_autoptr_cleanup_GtkToolItem")
external fun glib_autoptr_cleanup_GtkToolItem(_ptr: CValuesRef<CPointerVar<GtkToolItem>>?): Unit

@CCall("knifunptr_libgtk37011_glib_listautoptr_cleanup_GtkToolItem")
external fun glib_listautoptr_cleanup_GtkToolItem(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk37012_glib_slistautoptr_cleanup_GtkToolItem")
external fun glib_slistautoptr_cleanup_GtkToolItem(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk37013_glib_autoptr_cleanup_GtkToolItemGroup")
external fun glib_autoptr_cleanup_GtkToolItemGroup(_ptr: CValuesRef<CPointerVar<GtkToolItemGroup>>?): Unit

@CCall("knifunptr_libgtk37014_glib_listautoptr_cleanup_GtkToolItemGroup")
external fun glib_listautoptr_cleanup_GtkToolItemGroup(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk37015_glib_slistautoptr_cleanup_GtkToolItemGroup")
external fun glib_slistautoptr_cleanup_GtkToolItemGroup(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk37016_glib_autoptr_cleanup_GtkToolPalette")
external fun glib_autoptr_cleanup_GtkToolPalette(_ptr: CValuesRef<CPointerVar<GtkToolPalette>>?): Unit

@CCall("knifunptr_libgtk37017_glib_listautoptr_cleanup_GtkToolPalette")
external fun glib_listautoptr_cleanup_GtkToolPalette(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk37018_glib_slistautoptr_cleanup_GtkToolPalette")
external fun glib_slistautoptr_cleanup_GtkToolPalette(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk37019_glib_autoptr_cleanup_GtkToolShell")
external fun glib_autoptr_cleanup_GtkToolShell(_ptr: CValuesRef<CPointerVar<GtkToolShell>>?): Unit

@CCall("knifunptr_libgtk37020_glib_listautoptr_cleanup_GtkToolShell")
external fun glib_listautoptr_cleanup_GtkToolShell(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk37021_glib_slistautoptr_cleanup_GtkToolShell")
external fun glib_slistautoptr_cleanup_GtkToolShell(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk37022_glib_autoptr_cleanup_GtkToolbar")
external fun glib_autoptr_cleanup_GtkToolbar(_ptr: CValuesRef<CPointerVar<GtkToolbar>>?): Unit

@CCall("knifunptr_libgtk37023_glib_listautoptr_cleanup_GtkToolbar")
external fun glib_listautoptr_cleanup_GtkToolbar(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk37024_glib_slistautoptr_cleanup_GtkToolbar")
external fun glib_slistautoptr_cleanup_GtkToolbar(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk37025_glib_autoptr_cleanup_GtkTooltip")
external fun glib_autoptr_cleanup_GtkTooltip(_ptr: CValuesRef<CPointerVar<GtkTooltip>>?): Unit

@CCall("knifunptr_libgtk37026_glib_listautoptr_cleanup_GtkTooltip")
external fun glib_listautoptr_cleanup_GtkTooltip(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk37027_glib_slistautoptr_cleanup_GtkTooltip")
external fun glib_slistautoptr_cleanup_GtkTooltip(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk37028_glib_autoptr_cleanup_GtkTreeDragDest")
external fun glib_autoptr_cleanup_GtkTreeDragDest(_ptr: CValuesRef<CPointerVar<GtkTreeDragDest>>?): Unit

@CCall("knifunptr_libgtk37029_glib_listautoptr_cleanup_GtkTreeDragDest")
external fun glib_listautoptr_cleanup_GtkTreeDragDest(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk37030_glib_slistautoptr_cleanup_GtkTreeDragDest")
external fun glib_slistautoptr_cleanup_GtkTreeDragDest(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk37031_glib_autoptr_cleanup_GtkTreeDragSource")
external fun glib_autoptr_cleanup_GtkTreeDragSource(_ptr: CValuesRef<CPointerVar<GtkTreeDragSource>>?): Unit

@CCall("knifunptr_libgtk37032_glib_listautoptr_cleanup_GtkTreeDragSource")
external fun glib_listautoptr_cleanup_GtkTreeDragSource(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk37033_glib_slistautoptr_cleanup_GtkTreeDragSource")
external fun glib_slistautoptr_cleanup_GtkTreeDragSource(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk37034_glib_autoptr_cleanup_GtkTreeModel")
external fun glib_autoptr_cleanup_GtkTreeModel(_ptr: CValuesRef<CPointerVar<GtkTreeModel>>?): Unit

@CCall("knifunptr_libgtk37035_glib_listautoptr_cleanup_GtkTreeModel")
external fun glib_listautoptr_cleanup_GtkTreeModel(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk37036_glib_slistautoptr_cleanup_GtkTreeModel")
external fun glib_slistautoptr_cleanup_GtkTreeModel(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk37037_glib_autoptr_cleanup_GtkTreeModelFilter")
external fun glib_autoptr_cleanup_GtkTreeModelFilter(_ptr: CValuesRef<CPointerVar<GtkTreeModelFilter>>?): Unit

@CCall("knifunptr_libgtk37038_glib_listautoptr_cleanup_GtkTreeModelFilter")
external fun glib_listautoptr_cleanup_GtkTreeModelFilter(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk37039_glib_slistautoptr_cleanup_GtkTreeModelFilter")
external fun glib_slistautoptr_cleanup_GtkTreeModelFilter(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk37040_glib_autoptr_cleanup_GtkTreeModelSort")
external fun glib_autoptr_cleanup_GtkTreeModelSort(_ptr: CValuesRef<CPointerVar<GtkTreeModelSort>>?): Unit

@CCall("knifunptr_libgtk37041_glib_listautoptr_cleanup_GtkTreeModelSort")
external fun glib_listautoptr_cleanup_GtkTreeModelSort(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk37042_glib_slistautoptr_cleanup_GtkTreeModelSort")
external fun glib_slistautoptr_cleanup_GtkTreeModelSort(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk37043_glib_autoptr_cleanup_GtkTreeSelection")
external fun glib_autoptr_cleanup_GtkTreeSelection(_ptr: CValuesRef<CPointerVar<GtkTreeSelection>>?): Unit

@CCall("knifunptr_libgtk37044_glib_listautoptr_cleanup_GtkTreeSelection")
external fun glib_listautoptr_cleanup_GtkTreeSelection(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk37045_glib_slistautoptr_cleanup_GtkTreeSelection")
external fun glib_slistautoptr_cleanup_GtkTreeSelection(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk37046_glib_autoptr_cleanup_GtkTreeSortable")
external fun glib_autoptr_cleanup_GtkTreeSortable(_ptr: CValuesRef<CPointerVar<GtkTreeSortable>>?): Unit

@CCall("knifunptr_libgtk37047_glib_listautoptr_cleanup_GtkTreeSortable")
external fun glib_listautoptr_cleanup_GtkTreeSortable(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk37048_glib_slistautoptr_cleanup_GtkTreeSortable")
external fun glib_slistautoptr_cleanup_GtkTreeSortable(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk37049_glib_autoptr_cleanup_GtkTreeStore")
external fun glib_autoptr_cleanup_GtkTreeStore(_ptr: CValuesRef<CPointerVar<GtkTreeStore>>?): Unit

@CCall("knifunptr_libgtk37050_glib_listautoptr_cleanup_GtkTreeStore")
external fun glib_listautoptr_cleanup_GtkTreeStore(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk37051_glib_slistautoptr_cleanup_GtkTreeStore")
external fun glib_slistautoptr_cleanup_GtkTreeStore(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk37052_glib_autoptr_cleanup_GtkTreeView")
external fun glib_autoptr_cleanup_GtkTreeView(_ptr: CValuesRef<CPointerVar<GtkTreeView>>?): Unit

@CCall("knifunptr_libgtk37053_glib_listautoptr_cleanup_GtkTreeView")
external fun glib_listautoptr_cleanup_GtkTreeView(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk37054_glib_slistautoptr_cleanup_GtkTreeView")
external fun glib_slistautoptr_cleanup_GtkTreeView(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk37055_glib_autoptr_cleanup_GtkTreeViewColumn")
external fun glib_autoptr_cleanup_GtkTreeViewColumn(_ptr: CValuesRef<CPointerVar<GtkTreeViewColumn>>?): Unit

@CCall("knifunptr_libgtk37056_glib_listautoptr_cleanup_GtkTreeViewColumn")
external fun glib_listautoptr_cleanup_GtkTreeViewColumn(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk37057_glib_slistautoptr_cleanup_GtkTreeViewColumn")
external fun glib_slistautoptr_cleanup_GtkTreeViewColumn(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk37058_glib_autoptr_cleanup_GtkViewport")
external fun glib_autoptr_cleanup_GtkViewport(_ptr: CValuesRef<CPointerVar<GtkViewport>>?): Unit

@CCall("knifunptr_libgtk37059_glib_listautoptr_cleanup_GtkViewport")
external fun glib_listautoptr_cleanup_GtkViewport(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk37060_glib_slistautoptr_cleanup_GtkViewport")
external fun glib_slistautoptr_cleanup_GtkViewport(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk37061_glib_autoptr_cleanup_GtkVolumeButton")
external fun glib_autoptr_cleanup_GtkVolumeButton(_ptr: CValuesRef<CPointerVar<GtkVolumeButton>>?): Unit

@CCall("knifunptr_libgtk37062_glib_listautoptr_cleanup_GtkVolumeButton")
external fun glib_listautoptr_cleanup_GtkVolumeButton(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk37063_glib_slistautoptr_cleanup_GtkVolumeButton")
external fun glib_slistautoptr_cleanup_GtkVolumeButton(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk37064_glib_autoptr_cleanup_GtkPaperSize")
external fun glib_autoptr_cleanup_GtkPaperSize(_ptr: CValuesRef<CPointerVar<GtkPaperSize>>?): Unit

@CCall("knifunptr_libgtk37065_glib_listautoptr_cleanup_GtkPaperSize")
external fun glib_listautoptr_cleanup_GtkPaperSize(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk37066_glib_slistautoptr_cleanup_GtkPaperSize")
external fun glib_slistautoptr_cleanup_GtkPaperSize(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk37067_glib_autoptr_cleanup_GtkSelectionData")
external fun glib_autoptr_cleanup_GtkSelectionData(_ptr: CValuesRef<CPointerVar<GtkSelectionData>>?): Unit

@CCall("knifunptr_libgtk37068_glib_listautoptr_cleanup_GtkSelectionData")
external fun glib_listautoptr_cleanup_GtkSelectionData(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk37069_glib_slistautoptr_cleanup_GtkSelectionData")
external fun glib_slistautoptr_cleanup_GtkSelectionData(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk37070_glib_autoptr_cleanup_GtkTargetList")
external fun glib_autoptr_cleanup_GtkTargetList(_ptr: CValuesRef<CPointerVar<GtkTargetList>>?): Unit

@CCall("knifunptr_libgtk37071_glib_listautoptr_cleanup_GtkTargetList")
external fun glib_listautoptr_cleanup_GtkTargetList(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk37072_glib_slistautoptr_cleanup_GtkTargetList")
external fun glib_slistautoptr_cleanup_GtkTargetList(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk37073_glib_autoptr_cleanup_GtkTextAttributes")
external fun glib_autoptr_cleanup_GtkTextAttributes(_ptr: CValuesRef<CPointerVar<GtkTextAttributes>>?): Unit

@CCall("knifunptr_libgtk37074_glib_listautoptr_cleanup_GtkTextAttributes")
external fun glib_listautoptr_cleanup_GtkTextAttributes(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk37075_glib_slistautoptr_cleanup_GtkTextAttributes")
external fun glib_slistautoptr_cleanup_GtkTextAttributes(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk37076_glib_autoptr_cleanup_GtkTextIter")
external fun glib_autoptr_cleanup_GtkTextIter(_ptr: CValuesRef<CPointerVar<GtkTextIter>>?): Unit

@CCall("knifunptr_libgtk37077_glib_listautoptr_cleanup_GtkTextIter")
external fun glib_listautoptr_cleanup_GtkTextIter(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk37078_glib_slistautoptr_cleanup_GtkTextIter")
external fun glib_slistautoptr_cleanup_GtkTextIter(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk37079_glib_autoptr_cleanup_GtkTreeIter")
external fun glib_autoptr_cleanup_GtkTreeIter(_ptr: CValuesRef<CPointerVar<GtkTreeIter>>?): Unit

@CCall("knifunptr_libgtk37080_glib_listautoptr_cleanup_GtkTreeIter")
external fun glib_listautoptr_cleanup_GtkTreeIter(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk37081_glib_slistautoptr_cleanup_GtkTreeIter")
external fun glib_slistautoptr_cleanup_GtkTreeIter(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk37082_glib_autoptr_cleanup_GtkTreePath")
external fun glib_autoptr_cleanup_GtkTreePath(_ptr: CValuesRef<CPointerVar<GtkTreePath>>?): Unit

@CCall("knifunptr_libgtk37083_glib_listautoptr_cleanup_GtkTreePath")
external fun glib_listautoptr_cleanup_GtkTreePath(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk37084_glib_slistautoptr_cleanup_GtkTreePath")
external fun glib_slistautoptr_cleanup_GtkTreePath(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk37085_glib_autoptr_cleanup_GtkTreeRowReference")
external fun glib_autoptr_cleanup_GtkTreeRowReference(_ptr: CValuesRef<CPointerVar<GtkTreeRowReference>>?): Unit

@CCall("knifunptr_libgtk37086_glib_listautoptr_cleanup_GtkTreeRowReference")
external fun glib_listautoptr_cleanup_GtkTreeRowReference(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk37087_glib_slistautoptr_cleanup_GtkTreeRowReference")
external fun glib_slistautoptr_cleanup_GtkTreeRowReference(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk37088_glib_autoptr_cleanup_GtkWidgetPath")
external fun glib_autoptr_cleanup_GtkWidgetPath(_ptr: CValuesRef<CPointerVar<GtkWidgetPath>>?): Unit

@CCall("knifunptr_libgtk37089_glib_listautoptr_cleanup_GtkWidgetPath")
external fun glib_listautoptr_cleanup_GtkWidgetPath(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_libgtk37090_glib_slistautoptr_cleanup_GtkWidgetPath")
external fun glib_slistautoptr_cleanup_GtkWidgetPath(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_libgtk37091_functionFromCInterop")
external fun functionFromCInterop(): Unit

var g_param_spec_types: CPointer<GTypeVar>?
    get() = interpretCPointer<GTypeVar>(kniBridge0())
    set(value) { kniBridge1(value.rawValue) }

const val G_TYPE_FUNDAMENTAL_MAX: Int = 1020

const val G_TYPE_INVALID: GType = 0u

const val G_TYPE_NONE: GType = 4u

const val G_TYPE_INTERFACE: GType = 8u

const val G_TYPE_CHAR: GType = 12u

const val G_TYPE_UCHAR: GType = 16u

const val G_TYPE_BOOLEAN: GType = 20u

const val G_TYPE_INT: GType = 24u

const val G_TYPE_UINT: GType = 28u

const val G_TYPE_LONG: GType = 32u

const val G_TYPE_ULONG: GType = 36u

const val G_TYPE_INT64: GType = 40u

const val G_TYPE_UINT64: GType = 44u

const val G_TYPE_ENUM: GType = 48u

const val G_TYPE_FLAGS: GType = 52u

const val G_TYPE_FLOAT: GType = 56u

const val G_TYPE_DOUBLE: GType = 60u

const val G_TYPE_STRING: GType = 64u

const val G_TYPE_POINTER: GType = 68u

const val G_TYPE_BOXED: GType = 72u

const val G_TYPE_PARAM: GType = 76u

const val G_TYPE_OBJECT: GType = 80u

const val G_TYPE_VARIANT: GType = 84u

const val G_TYPE_FUNDAMENTAL_SHIFT: Int = 2

const val G_TYPE_RESERVED_GLIB_FIRST: Int = 22

const val G_TYPE_RESERVED_GLIB_LAST: Int = 31

const val G_TYPE_RESERVED_BSE_FIRST: Int = 32

const val G_TYPE_RESERVED_BSE_LAST: Int = 48

const val G_TYPE_RESERVED_USER_FIRST: Int = 49

const val G_TYPE_FLAG_RESERVED_ID_BIT: GType = 1u

const val G_VALUE_NOCOPY_CONTENTS: Int = 134217728

const val G_PARAM_STATIC_STRINGS: Int = 224

const val G_PARAM_MASK: Int = 255

const val G_PARAM_USER_SHIFT: Int = 8

const val G_SIGNAL_FLAGS_MASK: Int = 511

const val G_SIGNAL_MATCH_MASK: Int = 63

const val G_SIGNAL_TYPE_STATIC_SCOPE: GType = 1u

val G_FILE_ATTRIBUTE_STANDARD_TYPE: String get() = "standard::type"

val G_FILE_ATTRIBUTE_STANDARD_IS_HIDDEN: String get() = "standard::is\u002Dhidden"

val G_FILE_ATTRIBUTE_STANDARD_IS_BACKUP: String get() = "standard::is\u002Dbackup"

val G_FILE_ATTRIBUTE_STANDARD_IS_SYMLINK: String get() = "standard::is\u002Dsymlink"

val G_FILE_ATTRIBUTE_STANDARD_IS_VIRTUAL: String get() = "standard::is\u002Dvirtual"

val G_FILE_ATTRIBUTE_STANDARD_IS_VOLATILE: String get() = "standard::is\u002Dvolatile"

val G_FILE_ATTRIBUTE_STANDARD_NAME: String get() = "standard::name"

val G_FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME: String get() = "standard::display\u002Dname"

val G_FILE_ATTRIBUTE_STANDARD_EDIT_NAME: String get() = "standard::edit\u002Dname"

val G_FILE_ATTRIBUTE_STANDARD_COPY_NAME: String get() = "standard::copy\u002Dname"

val G_FILE_ATTRIBUTE_STANDARD_DESCRIPTION: String get() = "standard::description"

val G_FILE_ATTRIBUTE_STANDARD_ICON: String get() = "standard::icon"

val G_FILE_ATTRIBUTE_STANDARD_SYMBOLIC_ICON: String get() = "standard::symbolic\u002Dicon"

val G_FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE: String get() = "standard::content\u002Dtype"

val G_FILE_ATTRIBUTE_STANDARD_FAST_CONTENT_TYPE: String get() = "standard::fast\u002Dcontent\u002Dtype"

val G_FILE_ATTRIBUTE_STANDARD_SIZE: String get() = "standard::size"

val G_FILE_ATTRIBUTE_STANDARD_ALLOCATED_SIZE: String get() = "standard::allocated\u002Dsize"

val G_FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET: String get() = "standard::symlink\u002Dtarget"

val G_FILE_ATTRIBUTE_STANDARD_TARGET_URI: String get() = "standard::target\u002Duri"

val G_FILE_ATTRIBUTE_STANDARD_SORT_ORDER: String get() = "standard::sort\u002Dorder"

val G_FILE_ATTRIBUTE_ETAG_VALUE: String get() = "etag::value"

val G_FILE_ATTRIBUTE_ID_FILE: String get() = "id::file"

val G_FILE_ATTRIBUTE_ID_FILESYSTEM: String get() = "id::filesystem"

val G_FILE_ATTRIBUTE_ACCESS_CAN_READ: String get() = "access::can\u002Dread"

val G_FILE_ATTRIBUTE_ACCESS_CAN_WRITE: String get() = "access::can\u002Dwrite"

val G_FILE_ATTRIBUTE_ACCESS_CAN_EXECUTE: String get() = "access::can\u002Dexecute"

val G_FILE_ATTRIBUTE_ACCESS_CAN_DELETE: String get() = "access::can\u002Ddelete"

val G_FILE_ATTRIBUTE_ACCESS_CAN_TRASH: String get() = "access::can\u002Dtrash"

val G_FILE_ATTRIBUTE_ACCESS_CAN_RENAME: String get() = "access::can\u002Drename"

val G_FILE_ATTRIBUTE_MOUNTABLE_CAN_MOUNT: String get() = "mountable::can\u002Dmount"

val G_FILE_ATTRIBUTE_MOUNTABLE_CAN_UNMOUNT: String get() = "mountable::can\u002Dunmount"

val G_FILE_ATTRIBUTE_MOUNTABLE_CAN_EJECT: String get() = "mountable::can\u002Deject"

val G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE: String get() = "mountable::unix\u002Ddevice"

val G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE_FILE: String get() = "mountable::unix\u002Ddevice\u002Dfile"

val G_FILE_ATTRIBUTE_MOUNTABLE_HAL_UDI: String get() = "mountable::hal\u002Dudi"

val G_FILE_ATTRIBUTE_MOUNTABLE_CAN_START: String get() = "mountable::can\u002Dstart"

val G_FILE_ATTRIBUTE_MOUNTABLE_CAN_START_DEGRADED: String get() = "mountable::can\u002Dstart\u002Ddegraded"

val G_FILE_ATTRIBUTE_MOUNTABLE_CAN_STOP: String get() = "mountable::can\u002Dstop"

val G_FILE_ATTRIBUTE_MOUNTABLE_START_STOP_TYPE: String get() = "mountable::start\u002Dstop\u002Dtype"

val G_FILE_ATTRIBUTE_MOUNTABLE_CAN_POLL: String get() = "mountable::can\u002Dpoll"

val G_FILE_ATTRIBUTE_MOUNTABLE_IS_MEDIA_CHECK_AUTOMATIC: String get() = "mountable::is\u002Dmedia\u002Dcheck\u002Dautomatic"

val G_FILE_ATTRIBUTE_TIME_MODIFIED: String get() = "time::modified"

val G_FILE_ATTRIBUTE_TIME_MODIFIED_USEC: String get() = "time::modified\u002Dusec"

val G_FILE_ATTRIBUTE_TIME_ACCESS: String get() = "time::access"

val G_FILE_ATTRIBUTE_TIME_ACCESS_USEC: String get() = "time::access\u002Dusec"

val G_FILE_ATTRIBUTE_TIME_CHANGED: String get() = "time::changed"

val G_FILE_ATTRIBUTE_TIME_CHANGED_USEC: String get() = "time::changed\u002Dusec"

val G_FILE_ATTRIBUTE_TIME_CREATED: String get() = "time::created"

val G_FILE_ATTRIBUTE_TIME_CREATED_USEC: String get() = "time::created\u002Dusec"

val G_FILE_ATTRIBUTE_UNIX_DEVICE: String get() = "unix::device"

val G_FILE_ATTRIBUTE_UNIX_INODE: String get() = "unix::inode"

val G_FILE_ATTRIBUTE_UNIX_MODE: String get() = "unix::mode"

val G_FILE_ATTRIBUTE_UNIX_NLINK: String get() = "unix::nlink"

val G_FILE_ATTRIBUTE_UNIX_UID: String get() = "unix::uid"

val G_FILE_ATTRIBUTE_UNIX_GID: String get() = "unix::gid"

val G_FILE_ATTRIBUTE_UNIX_RDEV: String get() = "unix::rdev"

val G_FILE_ATTRIBUTE_UNIX_BLOCK_SIZE: String get() = "unix::block\u002Dsize"

val G_FILE_ATTRIBUTE_UNIX_BLOCKS: String get() = "unix::blocks"

val G_FILE_ATTRIBUTE_UNIX_IS_MOUNTPOINT: String get() = "unix::is\u002Dmountpoint"

val G_FILE_ATTRIBUTE_DOS_IS_ARCHIVE: String get() = "dos::is\u002Darchive"

val G_FILE_ATTRIBUTE_DOS_IS_SYSTEM: String get() = "dos::is\u002Dsystem"

val G_FILE_ATTRIBUTE_OWNER_USER: String get() = "owner::user"

val G_FILE_ATTRIBUTE_OWNER_USER_REAL: String get() = "owner::user\u002Dreal"

val G_FILE_ATTRIBUTE_OWNER_GROUP: String get() = "owner::group"

val G_FILE_ATTRIBUTE_THUMBNAIL_PATH: String get() = "thumbnail::path"

val G_FILE_ATTRIBUTE_THUMBNAILING_FAILED: String get() = "thumbnail::failed"

val G_FILE_ATTRIBUTE_THUMBNAIL_IS_VALID: String get() = "thumbnail::is\u002Dvalid"

val G_FILE_ATTRIBUTE_PREVIEW_ICON: String get() = "preview::icon"

val G_FILE_ATTRIBUTE_FILESYSTEM_SIZE: String get() = "filesystem::size"

val G_FILE_ATTRIBUTE_FILESYSTEM_FREE: String get() = "filesystem::free"

val G_FILE_ATTRIBUTE_FILESYSTEM_USED: String get() = "filesystem::used"

val G_FILE_ATTRIBUTE_FILESYSTEM_TYPE: String get() = "filesystem::type"

val G_FILE_ATTRIBUTE_FILESYSTEM_READONLY: String get() = "filesystem::readonly"

val G_FILE_ATTRIBUTE_FILESYSTEM_USE_PREVIEW: String get() = "filesystem::use\u002Dpreview"

val G_FILE_ATTRIBUTE_FILESYSTEM_REMOTE: String get() = "filesystem::remote"

val G_FILE_ATTRIBUTE_GVFS_BACKEND: String get() = "gvfs::backend"

val G_FILE_ATTRIBUTE_SELINUX_CONTEXT: String get() = "selinux::context"

val G_FILE_ATTRIBUTE_TRASH_ITEM_COUNT: String get() = "trash::item\u002Dcount"

val G_FILE_ATTRIBUTE_TRASH_ORIG_PATH: String get() = "trash::orig\u002Dpath"

val G_FILE_ATTRIBUTE_TRASH_DELETION_DATE: String get() = "trash::deletion\u002Ddate"

val G_FILE_ATTRIBUTE_RECENT_MODIFIED: String get() = "recent::modified"

val G_VOLUME_MONITOR_EXTENSION_POINT_NAME: String get() = "gio\u002Dvolume\u002Dmonitor"

val G_NATIVE_VOLUME_MONITOR_EXTENSION_POINT_NAME: String get() = "gio\u002Dnative\u002Dvolume\u002Dmonitor"

val G_NETWORK_MONITOR_EXTENSION_POINT_NAME: String get() = "gio\u002Dnetwork\u002Dmonitor"

val G_PROXY_EXTENSION_POINT_NAME: String get() = "gio\u002Dproxy"

val G_PROXY_RESOLVER_EXTENSION_POINT_NAME: String get() = "gio\u002Dproxy\u002Dresolver"

val G_TLS_BACKEND_EXTENSION_POINT_NAME: String get() = "gio\u002Dtls\u002Dbackend"

val G_TLS_DATABASE_PURPOSE_AUTHENTICATE_SERVER: String get() = "1.3.6.1.5.5.7.3.1"

val G_TLS_DATABASE_PURPOSE_AUTHENTICATE_CLIENT: String get() = "1.3.6.1.5.5.7.3.2"

val G_VFS_EXTENSION_POINT_NAME: String get() = "gio\u002Dvfs"

val G_VOLUME_IDENTIFIER_KIND_HAL_UDI: String get() = "hal\u002Dudi"

val G_VOLUME_IDENTIFIER_KIND_UNIX_DEVICE: String get() = "unix\u002Ddevice"

val G_VOLUME_IDENTIFIER_KIND_LABEL: String get() = "label"

val G_VOLUME_IDENTIFIER_KIND_UUID: String get() = "uuid"

val G_VOLUME_IDENTIFIER_KIND_NFS_MOUNT: String get() = "nfs\u002Dmount"

val G_VOLUME_IDENTIFIER_KIND_CLASS: String get() = "class"

val G_MENU_ATTRIBUTE_ACTION: String get() = "action"

val G_MENU_ATTRIBUTE_ACTION_NAMESPACE: String get() = "action\u002Dnamespace"

val G_MENU_ATTRIBUTE_TARGET: String get() = "target"

val G_MENU_ATTRIBUTE_LABEL: String get() = "label"

val G_MENU_ATTRIBUTE_ICON: String get() = "icon"

val G_MENU_LINK_SUBMENU: String get() = "submenu"

val G_MENU_LINK_SECTION: String get() = "section"

const val GTK_UNIT_PIXEL: Int = 0

const val GTK_TREE_SORTABLE_DEFAULT_SORT_COLUMN_ID: Int = -1

const val GTK_TREE_SORTABLE_UNSORTED_SORT_COLUMN_ID: Int = -2

const val GTK_ENTRY_BUFFER_MAX_SIZE: Int = 65535

const val GTK_STYLE_PROVIDER_PRIORITY_FALLBACK: Int = 1

const val GTK_STYLE_PROVIDER_PRIORITY_THEME: Int = 200

const val GTK_STYLE_PROVIDER_PRIORITY_SETTINGS: Int = 400

const val GTK_STYLE_PROVIDER_PRIORITY_APPLICATION: Int = 600

const val GTK_STYLE_PROVIDER_PRIORITY_USER: Int = 800

val GTK_STYLE_PROPERTY_BACKGROUND_COLOR: String get() = "background\u002Dcolor"

val GTK_STYLE_PROPERTY_COLOR: String get() = "color"

val GTK_STYLE_PROPERTY_FONT: String get() = "font"

val GTK_STYLE_PROPERTY_PADDING: String get() = "padding"

val GTK_STYLE_PROPERTY_BORDER_WIDTH: String get() = "border\u002Dwidth"

val GTK_STYLE_PROPERTY_MARGIN: String get() = "margin"

val GTK_STYLE_PROPERTY_BORDER_RADIUS: String get() = "border\u002Dradius"

val GTK_STYLE_PROPERTY_BORDER_STYLE: String get() = "border\u002Dstyle"

val GTK_STYLE_PROPERTY_BORDER_COLOR: String get() = "border\u002Dcolor"

val GTK_STYLE_PROPERTY_BACKGROUND_IMAGE: String get() = "background\u002Dimage"

val GTK_STYLE_CLASS_CELL: String get() = "cell"

val GTK_STYLE_CLASS_DIM_LABEL: String get() = "dim\u002Dlabel"

val GTK_STYLE_CLASS_ENTRY: String get() = "entry"

val GTK_STYLE_CLASS_LABEL: String get() = "label"

val GTK_STYLE_CLASS_COMBOBOX_ENTRY: String get() = "combobox\u002Dentry"

val GTK_STYLE_CLASS_BUTTON: String get() = "button"

val GTK_STYLE_CLASS_LIST: String get() = "list"

val GTK_STYLE_CLASS_LIST_ROW: String get() = "list\u002Drow"

val GTK_STYLE_CLASS_CALENDAR: String get() = "calendar"

val GTK_STYLE_CLASS_SLIDER: String get() = "slider"

val GTK_STYLE_CLASS_BACKGROUND: String get() = "background"

val GTK_STYLE_CLASS_RUBBERBAND: String get() = "rubberband"

val GTK_STYLE_CLASS_CSD: String get() = "csd"

val GTK_STYLE_CLASS_TOOLTIP: String get() = "tooltip"

val GTK_STYLE_CLASS_MENU: String get() = "menu"

val GTK_STYLE_CLASS_CONTEXT_MENU: String get() = "context\u002Dmenu"

val GTK_STYLE_CLASS_TOUCH_SELECTION: String get() = "touch\u002Dselection"

val GTK_STYLE_CLASS_MENUBAR: String get() = "menubar"

val GTK_STYLE_CLASS_MENUITEM: String get() = "menuitem"

val GTK_STYLE_CLASS_TOOLBAR: String get() = "toolbar"

val GTK_STYLE_CLASS_PRIMARY_TOOLBAR: String get() = "primary\u002Dtoolbar"

val GTK_STYLE_CLASS_INLINE_TOOLBAR: String get() = "inline\u002Dtoolbar"

val GTK_STYLE_CLASS_STATUSBAR: String get() = "statusbar"

val GTK_STYLE_CLASS_RADIO: String get() = "radio"

val GTK_STYLE_CLASS_CHECK: String get() = "check"

val GTK_STYLE_CLASS_DEFAULT: String get() = "default"

val GTK_STYLE_CLASS_TROUGH: String get() = "trough"

val GTK_STYLE_CLASS_SCROLLBAR: String get() = "scrollbar"

val GTK_STYLE_CLASS_SCROLLBARS_JUNCTION: String get() = "scrollbars\u002Djunction"

val GTK_STYLE_CLASS_SCALE: String get() = "scale"

val GTK_STYLE_CLASS_SCALE_HAS_MARKS_ABOVE: String get() = "scale\u002Dhas\u002Dmarks\u002Dabove"

val GTK_STYLE_CLASS_SCALE_HAS_MARKS_BELOW: String get() = "scale\u002Dhas\u002Dmarks\u002Dbelow"

val GTK_STYLE_CLASS_HEADER: String get() = "header"

val GTK_STYLE_CLASS_ACCELERATOR: String get() = "accelerator"

val GTK_STYLE_CLASS_RAISED: String get() = "raised"

val GTK_STYLE_CLASS_LINKED: String get() = "linked"

val GTK_STYLE_CLASS_GRIP: String get() = "grip"

val GTK_STYLE_CLASS_DOCK: String get() = "dock"

val GTK_STYLE_CLASS_PROGRESSBAR: String get() = "progressbar"

val GTK_STYLE_CLASS_SPINNER: String get() = "spinner"

val GTK_STYLE_CLASS_MARK: String get() = "mark"

val GTK_STYLE_CLASS_EXPANDER: String get() = "expander"

val GTK_STYLE_CLASS_SPINBUTTON: String get() = "spinbutton"

val GTK_STYLE_CLASS_NOTEBOOK: String get() = "notebook"

val GTK_STYLE_CLASS_VIEW: String get() = "view"

val GTK_STYLE_CLASS_SIDEBAR: String get() = "sidebar"

val GTK_STYLE_CLASS_IMAGE: String get() = "image"

val GTK_STYLE_CLASS_HIGHLIGHT: String get() = "highlight"

val GTK_STYLE_CLASS_FRAME: String get() = "frame"

val GTK_STYLE_CLASS_DND: String get() = "dnd"

val GTK_STYLE_CLASS_PANE_SEPARATOR: String get() = "pane\u002Dseparator"

val GTK_STYLE_CLASS_SEPARATOR: String get() = "separator"

val GTK_STYLE_CLASS_INFO: String get() = "info"

val GTK_STYLE_CLASS_WARNING: String get() = "warning"

val GTK_STYLE_CLASS_QUESTION: String get() = "question"

val GTK_STYLE_CLASS_ERROR: String get() = "error"

val GTK_STYLE_CLASS_HORIZONTAL: String get() = "horizontal"

val GTK_STYLE_CLASS_VERTICAL: String get() = "vertical"

val GTK_STYLE_CLASS_TOP: String get() = "top"

val GTK_STYLE_CLASS_BOTTOM: String get() = "bottom"

val GTK_STYLE_CLASS_LEFT: String get() = "left"

val GTK_STYLE_CLASS_RIGHT: String get() = "right"

val GTK_STYLE_CLASS_PULSE: String get() = "pulse"

val GTK_STYLE_CLASS_ARROW: String get() = "arrow"

val GTK_STYLE_CLASS_OSD: String get() = "osd"

val GTK_STYLE_CLASS_LEVEL_BAR: String get() = "level\u002Dbar"

val GTK_STYLE_CLASS_CURSOR_HANDLE: String get() = "cursor\u002Dhandle"

val GTK_STYLE_CLASS_INSERTION_CURSOR: String get() = "insertion\u002Dcursor"

val GTK_STYLE_CLASS_TITLEBAR: String get() = "titlebar"

val GTK_STYLE_CLASS_TITLE: String get() = "title"

val GTK_STYLE_CLASS_SUBTITLE: String get() = "subtitle"

val GTK_STYLE_CLASS_NEEDS_ATTENTION: String get() = "needs\u002Dattention"

val GTK_STYLE_CLASS_SUGGESTED_ACTION: String get() = "suggested\u002Daction"

val GTK_STYLE_CLASS_DESTRUCTIVE_ACTION: String get() = "destructive\u002Daction"

val GTK_STYLE_CLASS_POPOVER: String get() = "popover"

val GTK_STYLE_CLASS_POPUP: String get() = "popup"

val GTK_STYLE_CLASS_MESSAGE_DIALOG: String get() = "message\u002Ddialog"

val GTK_STYLE_CLASS_FLAT: String get() = "flat"

val GTK_STYLE_CLASS_READ_ONLY: String get() = "read\u002Donly"

val GTK_STYLE_CLASS_OVERSHOOT: String get() = "overshoot"

val GTK_STYLE_CLASS_UNDERSHOOT: String get() = "undershoot"

val GTK_STYLE_CLASS_PAPER: String get() = "paper"

val GTK_STYLE_CLASS_MONOSPACE: String get() = "monospace"

val GTK_STYLE_CLASS_WIDE: String get() = "wide"

val GTK_STYLE_REGION_ROW: String get() = "row"

val GTK_STYLE_REGION_COLUMN: String get() = "column"

val GTK_STYLE_REGION_COLUMN_HEADER: String get() = "column\u002Dheader"

val GTK_STYLE_REGION_TAB: String get() = "tab"

const val GTK_MAX_COMPOSE_LEN: Int = 7

val GTK_LEVEL_BAR_OFFSET_LOW: String get() = "low"

val GTK_LEVEL_BAR_OFFSET_HIGH: String get() = "high"

val GTK_LEVEL_BAR_OFFSET_FULL: String get() = "full"

const val GTK_PRIORITY_RESIZE: Int = 110

val GTK_PAPER_NAME_A3: String get() = "iso_a3"

val GTK_PAPER_NAME_A4: String get() = "iso_a4"

val GTK_PAPER_NAME_A5: String get() = "iso_a5"

val GTK_PAPER_NAME_B5: String get() = "iso_b5"

val GTK_PAPER_NAME_LETTER: String get() = "na_letter"

val GTK_PAPER_NAME_EXECUTIVE: String get() = "na_executive"

val GTK_PAPER_NAME_LEGAL: String get() = "na_legal"

val GTK_PRINT_SETTINGS_PRINTER: String get() = "printer"

val GTK_PRINT_SETTINGS_ORIENTATION: String get() = "orientation"

val GTK_PRINT_SETTINGS_PAPER_FORMAT: String get() = "paper\u002Dformat"

val GTK_PRINT_SETTINGS_PAPER_WIDTH: String get() = "paper\u002Dwidth"

val GTK_PRINT_SETTINGS_PAPER_HEIGHT: String get() = "paper\u002Dheight"

val GTK_PRINT_SETTINGS_N_COPIES: String get() = "n\u002Dcopies"

val GTK_PRINT_SETTINGS_DEFAULT_SOURCE: String get() = "default\u002Dsource"

val GTK_PRINT_SETTINGS_QUALITY: String get() = "quality"

val GTK_PRINT_SETTINGS_RESOLUTION: String get() = "resolution"

val GTK_PRINT_SETTINGS_USE_COLOR: String get() = "use\u002Dcolor"

val GTK_PRINT_SETTINGS_DUPLEX: String get() = "duplex"

val GTK_PRINT_SETTINGS_COLLATE: String get() = "collate"

val GTK_PRINT_SETTINGS_REVERSE: String get() = "reverse"

val GTK_PRINT_SETTINGS_MEDIA_TYPE: String get() = "media\u002Dtype"

val GTK_PRINT_SETTINGS_DITHER: String get() = "dither"

val GTK_PRINT_SETTINGS_SCALE: String get() = "scale"

val GTK_PRINT_SETTINGS_PRINT_PAGES: String get() = "print\u002Dpages"

val GTK_PRINT_SETTINGS_PAGE_RANGES: String get() = "page\u002Dranges"

val GTK_PRINT_SETTINGS_PAGE_SET: String get() = "page\u002Dset"

val GTK_PRINT_SETTINGS_FINISHINGS: String get() = "finishings"

val GTK_PRINT_SETTINGS_NUMBER_UP: String get() = "number\u002Dup"

val GTK_PRINT_SETTINGS_NUMBER_UP_LAYOUT: String get() = "number\u002Dup\u002Dlayout"

val GTK_PRINT_SETTINGS_OUTPUT_BIN: String get() = "output\u002Dbin"

val GTK_PRINT_SETTINGS_RESOLUTION_X: String get() = "resolution\u002Dx"

val GTK_PRINT_SETTINGS_RESOLUTION_Y: String get() = "resolution\u002Dy"

val GTK_PRINT_SETTINGS_PRINTER_LPI: String get() = "printer\u002Dlpi"

val GTK_PRINT_SETTINGS_OUTPUT_DIR: String get() = "output\u002Ddir"

val GTK_PRINT_SETTINGS_OUTPUT_BASENAME: String get() = "output\u002Dbasename"

val GTK_PRINT_SETTINGS_OUTPUT_FILE_FORMAT: String get() = "output\u002Dfile\u002Dformat"

val GTK_PRINT_SETTINGS_OUTPUT_URI: String get() = "output\u002Duri"

val GTK_PRINT_SETTINGS_WIN32_DRIVER_VERSION: String get() = "win32\u002Ddriver\u002Dversion"

val GTK_PRINT_SETTINGS_WIN32_DRIVER_EXTRA: String get() = "win32\u002Ddriver\u002Dextra"

const val GTK_INPUT_ERROR: Int = -1

const val GTK_TEXT_VIEW_PRIORITY_VALIDATE: Int = 125

const val GTK_MAJOR_VERSION: Int = 3

const val GTK_MINOR_VERSION: Int = 22

const val GTK_MICRO_VERSION: Int = 30

const val GTK_BINARY_AGE: Int = 2230

const val GTK_INTERFACE_AGE: Int = 30

val g_cclosure_marshal_BOOL__FLAGS: CPointer<CFunction<(CPointer<GClosure>?, CPointer<GValue>?, guint, CPointer<GValue>?, gpointer?, gpointer?) -> Unit>>?
    get() = interpretCPointer<CFunction<(CPointer<GClosure>?, CPointer<GValue>?, guint, CPointer<GValue>?, gpointer?, gpointer?) -> Unit>>(kniBridge2())

val g_cclosure_marshal_BOOL__BOXED_BOXED: CPointer<CFunction<(CPointer<GClosure>?, CPointer<GValue>?, guint, CPointer<GValue>?, gpointer?, gpointer?) -> Unit>>?
    get() = interpretCPointer<CFunction<(CPointer<GClosure>?, CPointer<GValue>?, guint, CPointer<GValue>?, gpointer?, gpointer?) -> Unit>>(kniBridge3())

val G_TYPE_DATE: GType
    get() = kniBridge4()

val G_TYPE_STRV: GType
    get() = kniBridge5()

val G_TYPE_GSTRING: GType
    get() = kniBridge6()

val G_TYPE_HASH_TABLE: GType
    get() = kniBridge7()

val G_TYPE_REGEX: GType
    get() = kniBridge8()

val G_TYPE_MATCH_INFO: GType
    get() = kniBridge9()

val G_TYPE_ARRAY: GType
    get() = kniBridge10()

val G_TYPE_BYTE_ARRAY: GType
    get() = kniBridge11()

val G_TYPE_PTR_ARRAY: GType
    get() = kniBridge12()

val G_TYPE_BYTES: GType
    get() = kniBridge13()

val G_TYPE_VARIANT_TYPE: GType
    get() = kniBridge14()

val G_TYPE_ERROR: GType
    get() = kniBridge15()

val G_TYPE_DATE_TIME: GType
    get() = kniBridge16()

val G_TYPE_TIME_ZONE: GType
    get() = kniBridge17()

val G_TYPE_IO_CHANNEL: GType
    get() = kniBridge18()

val G_TYPE_IO_CONDITION: GType
    get() = kniBridge19()

val G_TYPE_VARIANT_BUILDER: GType
    get() = kniBridge20()

val G_TYPE_VARIANT_DICT: GType
    get() = kniBridge21()

val G_TYPE_MAIN_LOOP: GType
    get() = kniBridge22()

val G_TYPE_MAIN_CONTEXT: GType
    get() = kniBridge23()

val G_TYPE_SOURCE: GType
    get() = kniBridge24()

val G_TYPE_POLLFD: GType
    get() = kniBridge25()

val G_TYPE_MARKUP_PARSE_CONTEXT: GType
    get() = kniBridge26()

val G_TYPE_KEY_FILE: GType
    get() = kniBridge27()

val G_TYPE_MAPPED_FILE: GType
    get() = kniBridge28()

val G_TYPE_THREAD: GType
    get() = kniBridge29()

val G_TYPE_CHECKSUM: GType
    get() = kniBridge30()

val G_TYPE_OPTION_GROUP: GType
    get() = kniBridge31()

val G_TYPE_CLOSURE: GType
    get() = kniBridge32()

val G_TYPE_VALUE: GType
    get() = kniBridge33()

val G_TYPE_INITIALLY_UNOWNED: GType
    get() = kniBridge34()

val G_TYPE_BINDING_FLAGS: GType
    get() = kniBridge35()

val G_TYPE_BINDING: GType
    get() = kniBridge36()

val G_TYPE_PARAM_CHAR: GType
    get() = kniBridge37()

val G_TYPE_PARAM_UCHAR: GType
    get() = kniBridge38()

val G_TYPE_PARAM_BOOLEAN: GType
    get() = kniBridge39()

val G_TYPE_PARAM_INT: GType
    get() = kniBridge40()

val G_TYPE_PARAM_UINT: GType
    get() = kniBridge41()

val G_TYPE_PARAM_LONG: GType
    get() = kniBridge42()

val G_TYPE_PARAM_ULONG: GType
    get() = kniBridge43()

val G_TYPE_PARAM_INT64: GType
    get() = kniBridge44()

val G_TYPE_PARAM_UINT64: GType
    get() = kniBridge45()

val G_TYPE_PARAM_UNICHAR: GType
    get() = kniBridge46()

val G_TYPE_PARAM_ENUM: GType
    get() = kniBridge47()

val G_TYPE_PARAM_FLAGS: GType
    get() = kniBridge48()

val G_TYPE_PARAM_FLOAT: GType
    get() = kniBridge49()

val G_TYPE_PARAM_DOUBLE: GType
    get() = kniBridge50()

val G_TYPE_PARAM_STRING: GType
    get() = kniBridge51()

val G_TYPE_PARAM_PARAM: GType
    get() = kniBridge52()

val G_TYPE_PARAM_BOXED: GType
    get() = kniBridge53()

val G_TYPE_PARAM_POINTER: GType
    get() = kniBridge54()

val G_TYPE_PARAM_VALUE_ARRAY: GType
    get() = kniBridge55()

val G_TYPE_PARAM_OBJECT: GType
    get() = kniBridge56()

val G_TYPE_PARAM_OVERRIDE: GType
    get() = kniBridge57()

val G_TYPE_PARAM_GTYPE: GType
    get() = kniBridge58()

val G_TYPE_PARAM_VARIANT: GType
    get() = kniBridge59()

val G_TYPE_TYPE_MODULE: GType
    get() = kniBridge60()

val G_TYPE_TYPE_PLUGIN: GType
    get() = kniBridge61()

val G_TYPE_VALUE_ARRAY: GType
    get() = kniBridge62()

val G_TYPE_GTYPE: GType
    get() = kniBridge63()

val G_TYPE_ACTION: GType
    get() = kniBridge64()

val G_TYPE_ACTION_GROUP: GType
    get() = kniBridge65()

val G_TYPE_ACTION_MAP: GType
    get() = kniBridge66()

val G_TYPE_APP_INFO: GType
    get() = kniBridge67()

val G_TYPE_APP_LAUNCH_CONTEXT: GType
    get() = kniBridge68()

val G_TYPE_APP_INFO_MONITOR: GType
    get() = kniBridge69()

val G_TYPE_APPLICATION: GType
    get() = kniBridge70()

val G_TYPE_APPLICATION_COMMAND_LINE: GType
    get() = kniBridge71()

val G_TYPE_INITABLE: GType
    get() = kniBridge72()

val G_TYPE_ASYNC_INITABLE: GType
    get() = kniBridge73()

val G_TYPE_ASYNC_RESULT: GType
    get() = kniBridge74()

val G_TYPE_INPUT_STREAM: GType
    get() = kniBridge75()

val G_TYPE_FILTER_INPUT_STREAM: GType
    get() = kniBridge76()

val G_TYPE_BUFFERED_INPUT_STREAM: GType
    get() = kniBridge77()

val G_TYPE_OUTPUT_STREAM: GType
    get() = kniBridge78()

val G_TYPE_FILTER_OUTPUT_STREAM: GType
    get() = kniBridge79()

val G_TYPE_BUFFERED_OUTPUT_STREAM: GType
    get() = kniBridge80()

val G_TYPE_BYTES_ICON: GType
    get() = kniBridge81()

val G_TYPE_CANCELLABLE: GType
    get() = kniBridge82()

val G_TYPE_CONVERTER: GType
    get() = kniBridge83()

val G_TYPE_CHARSET_CONVERTER: GType
    get() = kniBridge84()

val G_TYPE_CONVERTER_INPUT_STREAM: GType
    get() = kniBridge85()

val G_TYPE_CONVERTER_OUTPUT_STREAM: GType
    get() = kniBridge86()

val G_TYPE_CREDENTIALS: GType
    get() = kniBridge87()

val G_TYPE_DATAGRAM_BASED: GType
    get() = kniBridge88()

val G_TYPE_DATA_INPUT_STREAM: GType
    get() = kniBridge89()

val G_TYPE_DATA_OUTPUT_STREAM: GType
    get() = kniBridge90()

val G_TYPE_DBUS_AUTH_OBSERVER: GType
    get() = kniBridge91()

val G_TYPE_DBUS_CONNECTION: GType
    get() = kniBridge92()

val G_DBUS_ERROR: GQuark
    get() = kniBridge93()

val G_TYPE_DBUS_NODE_INFO: GType
    get() = kniBridge94()

val G_TYPE_DBUS_INTERFACE_INFO: GType
    get() = kniBridge95()

val G_TYPE_DBUS_METHOD_INFO: GType
    get() = kniBridge96()

val G_TYPE_DBUS_SIGNAL_INFO: GType
    get() = kniBridge97()

val G_TYPE_DBUS_PROPERTY_INFO: GType
    get() = kniBridge98()

val G_TYPE_DBUS_ARG_INFO: GType
    get() = kniBridge99()

val G_TYPE_DBUS_ANNOTATION_INFO: GType
    get() = kniBridge100()

val G_TYPE_DBUS_MESSAGE: GType
    get() = kniBridge101()

val G_TYPE_DBUS_METHOD_INVOCATION: GType
    get() = kniBridge102()

val G_TYPE_DBUS_PROXY: GType
    get() = kniBridge103()

val G_TYPE_DBUS_SERVER: GType
    get() = kniBridge104()

val G_TYPE_DRIVE: GType
    get() = kniBridge105()

val G_TYPE_DTLS_CONNECTION: GType
    get() = kniBridge106()

val G_TYPE_DTLS_CLIENT_CONNECTION: GType
    get() = kniBridge107()

val G_TYPE_DTLS_SERVER_CONNECTION: GType
    get() = kniBridge108()

val G_TYPE_ICON: GType
    get() = kniBridge109()

val G_TYPE_EMBLEM: GType
    get() = kniBridge110()

val G_TYPE_EMBLEMED_ICON: GType
    get() = kniBridge111()

val G_TYPE_FILE_ATTRIBUTE_INFO_LIST: GType
    get() = kniBridge112()

val G_TYPE_FILE_ENUMERATOR: GType
    get() = kniBridge113()

val G_TYPE_FILE: GType
    get() = kniBridge114()

val G_TYPE_FILE_ICON: GType
    get() = kniBridge115()

val G_TYPE_FILE_INFO: GType
    get() = kniBridge116()

val G_TYPE_FILE_ATTRIBUTE_MATCHER: GType
    get() = kniBridge117()

val G_TYPE_FILE_INPUT_STREAM: GType
    get() = kniBridge118()

val G_IO_ERROR: GQuark
    get() = kniBridge119()

val G_TYPE_IO_STREAM: GType
    get() = kniBridge120()

val G_TYPE_FILE_IO_STREAM: GType
    get() = kniBridge121()

val G_TYPE_FILE_MONITOR: GType
    get() = kniBridge122()

val G_TYPE_FILENAME_COMPLETER: GType
    get() = kniBridge123()

val G_TYPE_FILE_OUTPUT_STREAM: GType
    get() = kniBridge124()

val G_TYPE_INET_ADDRESS: GType
    get() = kniBridge125()

val G_TYPE_INET_ADDRESS_MASK: GType
    get() = kniBridge126()

val G_TYPE_SOCKET_ADDRESS: GType
    get() = kniBridge127()

val G_TYPE_INET_SOCKET_ADDRESS: GType
    get() = kniBridge128()

val G_TYPE_APP_INFO_CREATE_FLAGS: GType
    get() = kniBridge129()

val G_TYPE_CONVERTER_FLAGS: GType
    get() = kniBridge130()

val G_TYPE_CONVERTER_RESULT: GType
    get() = kniBridge131()

val G_TYPE_DATA_STREAM_BYTE_ORDER: GType
    get() = kniBridge132()

val G_TYPE_DATA_STREAM_NEWLINE_TYPE: GType
    get() = kniBridge133()

val G_TYPE_FILE_ATTRIBUTE_TYPE: GType
    get() = kniBridge134()

val G_TYPE_FILE_ATTRIBUTE_INFO_FLAGS: GType
    get() = kniBridge135()

val G_TYPE_FILE_ATTRIBUTE_STATUS: GType
    get() = kniBridge136()

val G_TYPE_FILE_QUERY_INFO_FLAGS: GType
    get() = kniBridge137()

val G_TYPE_FILE_CREATE_FLAGS: GType
    get() = kniBridge138()

val G_TYPE_FILE_MEASURE_FLAGS: GType
    get() = kniBridge139()

val G_TYPE_MOUNT_MOUNT_FLAGS: GType
    get() = kniBridge140()

val G_TYPE_MOUNT_UNMOUNT_FLAGS: GType
    get() = kniBridge141()

val G_TYPE_DRIVE_START_FLAGS: GType
    get() = kniBridge142()

val G_TYPE_DRIVE_START_STOP_TYPE: GType
    get() = kniBridge143()

val G_TYPE_FILE_COPY_FLAGS: GType
    get() = kniBridge144()

val G_TYPE_FILE_MONITOR_FLAGS: GType
    get() = kniBridge145()

val G_TYPE_FILE_TYPE: GType
    get() = kniBridge146()

val G_TYPE_FILESYSTEM_PREVIEW_TYPE: GType
    get() = kniBridge147()

val G_TYPE_FILE_MONITOR_EVENT: GType
    get() = kniBridge148()

val G_TYPE_IO_ERROR_ENUM: GType
    get() = kniBridge149()

val G_TYPE_ASK_PASSWORD_FLAGS: GType
    get() = kniBridge150()

val G_TYPE_PASSWORD_SAVE: GType
    get() = kniBridge151()

val G_TYPE_MOUNT_OPERATION_RESULT: GType
    get() = kniBridge152()

val G_TYPE_OUTPUT_STREAM_SPLICE_FLAGS: GType
    get() = kniBridge153()

val G_TYPE_IO_STREAM_SPLICE_FLAGS: GType
    get() = kniBridge154()

val G_TYPE_EMBLEM_ORIGIN: GType
    get() = kniBridge155()

val G_TYPE_RESOLVER_ERROR: GType
    get() = kniBridge156()

val G_TYPE_RESOLVER_RECORD_TYPE: GType
    get() = kniBridge157()

val G_TYPE_RESOURCE_ERROR: GType
    get() = kniBridge158()

val G_TYPE_RESOURCE_FLAGS: GType
    get() = kniBridge159()

val G_TYPE_RESOURCE_LOOKUP_FLAGS: GType
    get() = kniBridge160()

val G_TYPE_SOCKET_FAMILY: GType
    get() = kniBridge161()

val G_TYPE_SOCKET_TYPE: GType
    get() = kniBridge162()

val G_TYPE_SOCKET_MSG_FLAGS: GType
    get() = kniBridge163()

val G_TYPE_SOCKET_PROTOCOL: GType
    get() = kniBridge164()

val G_TYPE_ZLIB_COMPRESSOR_FORMAT: GType
    get() = kniBridge165()

val G_TYPE_UNIX_SOCKET_ADDRESS_TYPE: GType
    get() = kniBridge166()

val G_TYPE_BUS_TYPE: GType
    get() = kniBridge167()

val G_TYPE_BUS_NAME_OWNER_FLAGS: GType
    get() = kniBridge168()

val G_TYPE_BUS_NAME_WATCHER_FLAGS: GType
    get() = kniBridge169()

val G_TYPE_DBUS_PROXY_FLAGS: GType
    get() = kniBridge170()

val G_TYPE_DBUS_ERROR: GType
    get() = kniBridge171()

val G_TYPE_DBUS_CONNECTION_FLAGS: GType
    get() = kniBridge172()

val G_TYPE_DBUS_CAPABILITY_FLAGS: GType
    get() = kniBridge173()

val G_TYPE_DBUS_CALL_FLAGS: GType
    get() = kniBridge174()

val G_TYPE_DBUS_MESSAGE_TYPE: GType
    get() = kniBridge175()

val G_TYPE_DBUS_MESSAGE_FLAGS: GType
    get() = kniBridge176()

val G_TYPE_DBUS_MESSAGE_HEADER_FIELD: GType
    get() = kniBridge177()

val G_TYPE_DBUS_PROPERTY_INFO_FLAGS: GType
    get() = kniBridge178()

val G_TYPE_DBUS_SUBTREE_FLAGS: GType
    get() = kniBridge179()

val G_TYPE_DBUS_SERVER_FLAGS: GType
    get() = kniBridge180()

val G_TYPE_DBUS_SIGNAL_FLAGS: GType
    get() = kniBridge181()

val G_TYPE_DBUS_SEND_MESSAGE_FLAGS: GType
    get() = kniBridge182()

val G_TYPE_CREDENTIALS_TYPE: GType
    get() = kniBridge183()

val G_TYPE_DBUS_MESSAGE_BYTE_ORDER: GType
    get() = kniBridge184()

val G_TYPE_APPLICATION_FLAGS: GType
    get() = kniBridge185()

val G_TYPE_TLS_ERROR: GType
    get() = kniBridge186()

val G_TYPE_TLS_CERTIFICATE_FLAGS: GType
    get() = kniBridge187()

val G_TYPE_TLS_AUTHENTICATION_MODE: GType
    get() = kniBridge188()

val G_TYPE_TLS_REHANDSHAKE_MODE: GType
    get() = kniBridge189()

val G_TYPE_TLS_PASSWORD_FLAGS: GType
    get() = kniBridge190()

val G_TYPE_TLS_INTERACTION_RESULT: GType
    get() = kniBridge191()

val G_TYPE_DBUS_INTERFACE_SKELETON_FLAGS: GType
    get() = kniBridge192()

val G_TYPE_DBUS_OBJECT_MANAGER_CLIENT_FLAGS: GType
    get() = kniBridge193()

val G_TYPE_TLS_DATABASE_VERIFY_FLAGS: GType
    get() = kniBridge194()

val G_TYPE_TLS_DATABASE_LOOKUP_FLAGS: GType
    get() = kniBridge195()

val G_TYPE_TLS_CERTIFICATE_REQUEST_FLAGS: GType
    get() = kniBridge196()

val G_TYPE_IO_MODULE_SCOPE_FLAGS: GType
    get() = kniBridge197()

val G_TYPE_SOCKET_CLIENT_EVENT: GType
    get() = kniBridge198()

val G_TYPE_SOCKET_LISTENER_EVENT: GType
    get() = kniBridge199()

val G_TYPE_TEST_DBUS_FLAGS: GType
    get() = kniBridge200()

val G_TYPE_SUBPROCESS_FLAGS: GType
    get() = kniBridge201()

val G_TYPE_NOTIFICATION_PRIORITY: GType
    get() = kniBridge202()

val G_TYPE_NETWORK_CONNECTIVITY: GType
    get() = kniBridge203()

val G_TYPE_SETTINGS_BIND_FLAGS: GType
    get() = kniBridge204()

val G_IO_TYPE_MODULE: GType
    get() = kniBridge205()

val G_TYPE_LOADABLE_ICON: GType
    get() = kniBridge206()

val G_TYPE_MEMORY_INPUT_STREAM: GType
    get() = kniBridge207()

val G_TYPE_MEMORY_OUTPUT_STREAM: GType
    get() = kniBridge208()

val G_TYPE_MOUNT: GType
    get() = kniBridge209()

val G_TYPE_MOUNT_OPERATION: GType
    get() = kniBridge210()

val G_TYPE_VOLUME_MONITOR: GType
    get() = kniBridge211()

val G_TYPE_NATIVE_VOLUME_MONITOR: GType
    get() = kniBridge212()

val G_TYPE_NETWORK_ADDRESS: GType
    get() = kniBridge213()

val G_TYPE_NETWORK_MONITOR: GType
    get() = kniBridge214()

val G_TYPE_NETWORK_SERVICE: GType
    get() = kniBridge215()

val G_TYPE_PERMISSION: GType
    get() = kniBridge216()

val G_TYPE_POLLABLE_INPUT_STREAM: GType
    get() = kniBridge217()

val G_TYPE_POLLABLE_OUTPUT_STREAM: GType
    get() = kniBridge218()

val G_TYPE_PROPERTY_ACTION: GType
    get() = kniBridge219()

val G_TYPE_PROXY: GType
    get() = kniBridge220()

val G_TYPE_PROXY_ADDRESS: GType
    get() = kniBridge221()

val G_TYPE_SOCKET_ADDRESS_ENUMERATOR: GType
    get() = kniBridge222()

val G_TYPE_PROXY_ADDRESS_ENUMERATOR: GType
    get() = kniBridge223()

val G_TYPE_PROXY_RESOLVER: GType
    get() = kniBridge224()

val G_TYPE_RESOLVER: GType
    get() = kniBridge225()

val G_RESOLVER_ERROR: GQuark
    get() = kniBridge226()

val G_TYPE_RESOURCE: GType
    get() = kniBridge227()

val G_RESOURCE_ERROR: GQuark
    get() = kniBridge228()

val G_TYPE_SEEKABLE: GType
    get() = kniBridge229()

val G_TYPE_SETTINGS_SCHEMA_SOURCE: GType
    get() = kniBridge230()

val G_TYPE_SETTINGS_SCHEMA: GType
    get() = kniBridge231()

val G_TYPE_SETTINGS_SCHEMA_KEY: GType
    get() = kniBridge232()

val G_TYPE_SETTINGS: GType
    get() = kniBridge233()

val G_TYPE_SIMPLE_ACTION: GType
    get() = kniBridge234()

val G_TYPE_SIMPLE_ACTION_GROUP: GType
    get() = kniBridge235()

val G_TYPE_SIMPLE_ASYNC_RESULT: GType
    get() = kniBridge236()

val G_TYPE_SIMPLE_IO_STREAM: GType
    get() = kniBridge237()

val G_TYPE_SIMPLE_PERMISSION: GType
    get() = kniBridge238()

val G_TYPE_SOCKET_CLIENT: GType
    get() = kniBridge239()

val G_TYPE_SOCKET_CONNECTABLE: GType
    get() = kniBridge240()

val G_TYPE_SOCKET: GType
    get() = kniBridge241()

val G_TYPE_SOCKET_CONNECTION: GType
    get() = kniBridge242()

val G_TYPE_SOCKET_CONTROL_MESSAGE: GType
    get() = kniBridge243()

val G_TYPE_SOCKET_LISTENER: GType
    get() = kniBridge244()

val G_TYPE_SOCKET_SERVICE: GType
    get() = kniBridge245()

val G_TYPE_SRV_TARGET: GType
    get() = kniBridge246()

val G_TYPE_SIMPLE_PROXY_RESOLVER: GType
    get() = kniBridge247()

val G_TYPE_TASK: GType
    get() = kniBridge248()

val G_TYPE_SUBPROCESS: GType
    get() = kniBridge249()

val G_TYPE_SUBPROCESS_LAUNCHER: GType
    get() = kniBridge250()

val G_TYPE_TCP_CONNECTION: GType
    get() = kniBridge251()

val G_TYPE_TCP_WRAPPER_CONNECTION: GType
    get() = kniBridge252()

val G_TYPE_TEST_DBUS: GType
    get() = kniBridge253()

val G_TYPE_THEMED_ICON: GType
    get() = kniBridge254()

val G_TYPE_THREADED_SOCKET_SERVICE: GType
    get() = kniBridge255()

val G_TYPE_TLS_BACKEND: GType
    get() = kniBridge256()

val G_TYPE_TLS_CERTIFICATE: GType
    get() = kniBridge257()

val G_TYPE_TLS_CONNECTION: GType
    get() = kniBridge258()

val G_TLS_ERROR: GQuark
    get() = kniBridge259()

val G_TYPE_TLS_CLIENT_CONNECTION: GType
    get() = kniBridge260()

val G_TYPE_TLS_DATABASE: GType
    get() = kniBridge261()

val G_TYPE_TLS_FILE_DATABASE: GType
    get() = kniBridge262()

val G_TYPE_TLS_INTERACTION: GType
    get() = kniBridge263()

val G_TYPE_TLS_SERVER_CONNECTION: GType
    get() = kniBridge264()

val G_TYPE_TLS_PASSWORD: GType
    get() = kniBridge265()

val G_TYPE_VFS: GType
    get() = kniBridge266()

val G_TYPE_VOLUME: GType
    get() = kniBridge267()

val G_TYPE_ZLIB_COMPRESSOR: GType
    get() = kniBridge268()

val G_TYPE_ZLIB_DECOMPRESSOR: GType
    get() = kniBridge269()

val G_TYPE_DBUS_INTERFACE: GType
    get() = kniBridge270()

val G_TYPE_DBUS_INTERFACE_SKELETON: GType
    get() = kniBridge271()

val G_TYPE_DBUS_OBJECT: GType
    get() = kniBridge272()

val G_TYPE_DBUS_OBJECT_SKELETON: GType
    get() = kniBridge273()

val G_TYPE_DBUS_OBJECT_PROXY: GType
    get() = kniBridge274()

val G_TYPE_DBUS_OBJECT_MANAGER: GType
    get() = kniBridge275()

val G_TYPE_DBUS_OBJECT_MANAGER_CLIENT: GType
    get() = kniBridge276()

val G_TYPE_DBUS_OBJECT_MANAGER_SERVER: GType
    get() = kniBridge277()

val G_TYPE_DBUS_ACTION_GROUP: GType
    get() = kniBridge278()

val G_TYPE_REMOTE_ACTION_GROUP: GType
    get() = kniBridge279()

val G_TYPE_MENU_MODEL: GType
    get() = kniBridge280()

val G_TYPE_MENU_ATTRIBUTE_ITER: GType
    get() = kniBridge281()

val G_TYPE_MENU_LINK_ITER: GType
    get() = kniBridge282()

val G_TYPE_MENU: GType
    get() = kniBridge283()

val G_TYPE_MENU_ITEM: GType
    get() = kniBridge284()

val G_TYPE_DBUS_MENU_MODEL: GType
    get() = kniBridge285()

val G_TYPE_NOTIFICATION: GType
    get() = kniBridge286()

val G_TYPE_LIST_MODEL: GType
    get() = kniBridge287()

val G_TYPE_LIST_STORE: GType
    get() = kniBridge288()

val GTK_TYPE_ACCEL_GROUP: GType
    get() = kniBridge289()

val GTK_TYPE_BORDER: GType
    get() = kniBridge290()

val GTK_TYPE_WIDGET: GType
    get() = kniBridge291()

val GTK_TYPE_REQUISITION: GType
    get() = kniBridge292()

val GTK_TYPE_APPLICATION: GType
    get() = kniBridge293()

val GTK_TYPE_CONTAINER: GType
    get() = kniBridge294()

val GTK_TYPE_BIN: GType
    get() = kniBridge295()

val GTK_TYPE_WINDOW: GType
    get() = kniBridge296()

val GTK_TYPE_DIALOG: GType
    get() = kniBridge297()

val GTK_TYPE_ABOUT_DIALOG: GType
    get() = kniBridge298()

val GTK_TYPE_MENU_SHELL: GType
    get() = kniBridge299()

val GTK_TYPE_MENU: GType
    get() = kniBridge300()

val GTK_TYPE_LABEL: GType
    get() = kniBridge301()

val GTK_TYPE_ACCEL_LABEL: GType
    get() = kniBridge302()

val GTK_TYPE_ACCEL_MAP: GType
    get() = kniBridge303()

val GTK_TYPE_ACCESSIBLE: GType
    get() = kniBridge304()

val GTK_TYPE_ACTIONABLE: GType
    get() = kniBridge305()

val GTK_TYPE_ACTION_BAR: GType
    get() = kniBridge306()

val GTK_TYPE_ADJUSTMENT: GType
    get() = kniBridge307()

val GTK_TYPE_APP_CHOOSER: GType
    get() = kniBridge308()

val GTK_TYPE_APP_CHOOSER_DIALOG: GType
    get() = kniBridge309()

val GTK_TYPE_BOX: GType
    get() = kniBridge310()

val GTK_TYPE_APP_CHOOSER_WIDGET: GType
    get() = kniBridge311()

val GTK_TYPE_TREE_MODEL: GType
    get() = kniBridge312()

val GTK_TYPE_TREE_ITER: GType
    get() = kniBridge313()

val GTK_TYPE_TREE_PATH: GType
    get() = kniBridge314()

val GTK_TYPE_TREE_ROW_REFERENCE: GType
    get() = kniBridge315()

val GTK_TYPE_CELL_EDITABLE: GType
    get() = kniBridge316()

val GTK_TYPE_CELL_RENDERER: GType
    get() = kniBridge317()

val GTK_TYPE_TREE_SORTABLE: GType
    get() = kniBridge318()

val GTK_TYPE_CELL_AREA: GType
    get() = kniBridge319()

val GTK_TYPE_TREE_VIEW_COLUMN: GType
    get() = kniBridge320()

val GTK_TYPE_TEXT_ATTRIBUTES: GType
    get() = kniBridge321()

val GTK_TYPE_TEXT_CHILD_ANCHOR: GType
    get() = kniBridge322()

val GTK_TYPE_TEXT_TAG: GType
    get() = kniBridge323()

val GTK_TYPE_TEXT_ITER: GType
    get() = kniBridge324()

val GTK_TYPE_SELECTION_DATA: GType
    get() = kniBridge325()

val GTK_TYPE_TARGET_LIST: GType
    get() = kniBridge326()

val GTK_TYPE_EDITABLE: GType
    get() = kniBridge327()

val GTK_TYPE_IM_CONTEXT: GType
    get() = kniBridge328()

val GTK_TYPE_ENTRY_BUFFER: GType
    get() = kniBridge329()

val GTK_TYPE_LIST_STORE: GType
    get() = kniBridge330()

val GTK_TYPE_TREE_MODEL_FILTER: GType
    get() = kniBridge331()

val GTK_TYPE_ENTRY_COMPLETION: GType
    get() = kniBridge332()

val GTK_TYPE_IMAGE: GType
    get() = kniBridge333()

val GTK_TYPE_ENTRY: GType
    get() = kniBridge334()

val GTK_TYPE_TREE_VIEW: GType
    get() = kniBridge335()

val GTK_TYPE_COMBO_BOX: GType
    get() = kniBridge336()

val GTK_TYPE_APP_CHOOSER_BUTTON: GType
    get() = kniBridge337()

val GTK_TYPE_SHORTCUTS_WINDOW: GType
    get() = kniBridge338()

val GTK_TYPE_APPLICATION_WINDOW: GType
    get() = kniBridge339()

val GTK_TYPE_FRAME: GType
    get() = kniBridge340()

val GTK_TYPE_ASPECT_FRAME: GType
    get() = kniBridge341()

val GTK_TYPE_ASSISTANT: GType
    get() = kniBridge342()

val GTK_TYPE_BUTTON_BOX: GType
    get() = kniBridge343()

val GTK_TYPE_BUILDER: GType
    get() = kniBridge344()

val GTK_BUILDER_ERROR: GQuark
    get() = kniBridge345()

val GTK_TYPE_BUILDABLE: GType
    get() = kniBridge346()

val GTK_TYPE_BUTTON: GType
    get() = kniBridge347()

val GTK_TYPE_CALENDAR: GType
    get() = kniBridge348()

val GTK_TYPE_CELL_AREA_BOX: GType
    get() = kniBridge349()

val GTK_TYPE_CELL_AREA_CONTEXT: GType
    get() = kniBridge350()

val GTK_TYPE_CELL_LAYOUT: GType
    get() = kniBridge351()

val GTK_TYPE_CELL_RENDERER_TEXT: GType
    get() = kniBridge352()

val GTK_TYPE_CELL_RENDERER_ACCEL: GType
    get() = kniBridge353()

val GTK_TYPE_CELL_RENDERER_COMBO: GType
    get() = kniBridge354()

val GTK_TYPE_CELL_RENDERER_PIXBUF: GType
    get() = kniBridge355()

val GTK_TYPE_CELL_RENDERER_PROGRESS: GType
    get() = kniBridge356()

val GTK_TYPE_CELL_RENDERER_SPIN: GType
    get() = kniBridge357()

val GTK_TYPE_CELL_RENDERER_SPINNER: GType
    get() = kniBridge358()

val GTK_TYPE_CELL_RENDERER_TOGGLE: GType
    get() = kniBridge359()

val GTK_TYPE_CELL_VIEW: GType
    get() = kniBridge360()

val GTK_TYPE_TOGGLE_BUTTON: GType
    get() = kniBridge361()

val GTK_TYPE_CHECK_BUTTON: GType
    get() = kniBridge362()

val GTK_TYPE_MENU_ITEM: GType
    get() = kniBridge363()

val GTK_TYPE_CHECK_MENU_ITEM: GType
    get() = kniBridge364()

val GTK_TYPE_CLIPBOARD: GType
    get() = kniBridge365()

val GTK_TYPE_COLOR_BUTTON: GType
    get() = kniBridge366()

val GTK_TYPE_COLOR_CHOOSER: GType
    get() = kniBridge367()

val GTK_TYPE_COLOR_CHOOSER_DIALOG: GType
    get() = kniBridge368()

val GTK_TYPE_COLOR_CHOOSER_WIDGET: GType
    get() = kniBridge369()

val GTK_TYPE_COMBO_BOX_TEXT: GType
    get() = kniBridge370()

val GTK_TYPE_CSS_SECTION: GType
    get() = kniBridge371()

val GTK_TYPE_CSS_PROVIDER: GType
    get() = kniBridge372()

val GTK_CSS_PROVIDER_ERROR: GQuark
    get() = kniBridge373()

val GTK_TYPE_DRAWING_AREA: GType
    get() = kniBridge374()

val GTK_TYPE_EVENT_BOX: GType
    get() = kniBridge375()

val GTK_TYPE_EVENT_CONTROLLER: GType
    get() = kniBridge376()

val GTK_TYPE_EXPANDER: GType
    get() = kniBridge377()

val GTK_TYPE_FIXED: GType
    get() = kniBridge378()

val GTK_TYPE_FILE_FILTER: GType
    get() = kniBridge379()

val GTK_TYPE_FILE_CHOOSER: GType
    get() = kniBridge380()

val GTK_FILE_CHOOSER_ERROR: GQuark
    get() = kniBridge381()

val GTK_TYPE_FILE_CHOOSER_BUTTON: GType
    get() = kniBridge382()

val GTK_TYPE_FILE_CHOOSER_DIALOG: GType
    get() = kniBridge383()

val GTK_TYPE_NATIVE_DIALOG: GType
    get() = kniBridge384()

val GTK_TYPE_FILE_CHOOSER_NATIVE: GType
    get() = kniBridge385()

val GTK_TYPE_FILE_CHOOSER_WIDGET: GType
    get() = kniBridge386()

val GTK_TYPE_FLOW_BOX: GType
    get() = kniBridge387()

val GTK_TYPE_FLOW_BOX_CHILD: GType
    get() = kniBridge388()

val GTK_TYPE_FONT_BUTTON: GType
    get() = kniBridge389()

val GTK_TYPE_FONT_CHOOSER: GType
    get() = kniBridge390()

val GTK_TYPE_FONT_CHOOSER_DIALOG: GType
    get() = kniBridge391()

val GTK_TYPE_FONT_CHOOSER_WIDGET: GType
    get() = kniBridge392()

val GTK_TYPE_GESTURE: GType
    get() = kniBridge393()

val GTK_TYPE_GESTURE_SINGLE: GType
    get() = kniBridge394()

val GTK_TYPE_GESTURE_DRAG: GType
    get() = kniBridge395()

val GTK_TYPE_GESTURE_LONG_PRESS: GType
    get() = kniBridge396()

val GTK_TYPE_GESTURE_MULTI_PRESS: GType
    get() = kniBridge397()

val GTK_TYPE_GESTURE_PAN: GType
    get() = kniBridge398()

val GTK_TYPE_GESTURE_ROTATE: GType
    get() = kniBridge399()

val GTK_TYPE_GESTURE_SWIPE: GType
    get() = kniBridge400()

val GTK_TYPE_GESTURE_ZOOM: GType
    get() = kniBridge401()

val GTK_TYPE_GL_AREA: GType
    get() = kniBridge402()

val GTK_TYPE_GRID: GType
    get() = kniBridge403()

val GTK_TYPE_HEADER_BAR: GType
    get() = kniBridge404()

val GTK_TYPE_STYLE_PROVIDER: GType
    get() = kniBridge405()

val GTK_TYPE_STYLE_CONTEXT: GType
    get() = kniBridge406()

val GTK_TYPE_ICON_INFO: GType
    get() = kniBridge407()

val GTK_TYPE_ICON_THEME: GType
    get() = kniBridge408()

val GTK_ICON_THEME_ERROR: GQuark
    get() = kniBridge409()

val GTK_TYPE_TOOLTIP: GType
    get() = kniBridge410()

val GTK_TYPE_ICON_VIEW: GType
    get() = kniBridge411()

val GTK_TYPE_IM_CONTEXT_SIMPLE: GType
    get() = kniBridge412()

val GTK_TYPE_IM_MULTICONTEXT: GType
    get() = kniBridge413()

val GTK_TYPE_INFO_BAR: GType
    get() = kniBridge414()

val GTK_TYPE_INVISIBLE: GType
    get() = kniBridge415()

val GTK_TYPE_LAYOUT: GType
    get() = kniBridge416()

val GTK_TYPE_LEVEL_BAR: GType
    get() = kniBridge417()

val GTK_TYPE_LINK_BUTTON: GType
    get() = kniBridge418()

val GTK_TYPE_LIST_BOX: GType
    get() = kniBridge419()

val GTK_TYPE_LIST_BOX_ROW: GType
    get() = kniBridge420()

val GTK_TYPE_LOCK_BUTTON: GType
    get() = kniBridge421()

val gtk_major_version: guint
    get() = kniBridge422()

val gtk_minor_version: guint
    get() = kniBridge423()

val gtk_micro_version: guint
    get() = kniBridge424()

val gtk_binary_age: guint
    get() = kniBridge425()

val gtk_interface_age: guint
    get() = kniBridge426()

val GTK_TYPE_MENU_BAR: GType
    get() = kniBridge427()

val GTK_TYPE_POPOVER: GType
    get() = kniBridge428()

val GTK_TYPE_MENU_BUTTON: GType
    get() = kniBridge429()

val GTK_TYPE_SIZE_GROUP: GType
    get() = kniBridge430()

val GTK_TYPE_TOOL_ITEM: GType
    get() = kniBridge431()

val GTK_TYPE_TOOL_BUTTON: GType
    get() = kniBridge432()

val GTK_TYPE_MENU_TOOL_BUTTON: GType
    get() = kniBridge433()

val GTK_TYPE_MESSAGE_DIALOG: GType
    get() = kniBridge434()

val GTK_TYPE_MODEL_BUTTON: GType
    get() = kniBridge435()

val GTK_TYPE_MOUNT_OPERATION: GType
    get() = kniBridge436()

val GTK_TYPE_NOTEBOOK: GType
    get() = kniBridge437()

val GTK_TYPE_OFFSCREEN_WINDOW: GType
    get() = kniBridge438()

val GTK_TYPE_ORIENTABLE: GType
    get() = kniBridge439()

val GTK_TYPE_OVERLAY: GType
    get() = kniBridge440()

val GTK_TYPE_PAD_CONTROLLER: GType
    get() = kniBridge441()

val GTK_TYPE_PAPER_SIZE: GType
    get() = kniBridge442()

val GTK_TYPE_PAGE_SETUP: GType
    get() = kniBridge443()

val GTK_TYPE_PANED: GType
    get() = kniBridge444()

val GTK_TYPE_PLACES_SIDEBAR: GType
    get() = kniBridge445()

val GTK_TYPE_POPOVER_MENU: GType
    get() = kniBridge446()

val GTK_TYPE_PRINT_CONTEXT: GType
    get() = kniBridge447()

val GTK_TYPE_PRINT_SETTINGS: GType
    get() = kniBridge448()

val GTK_TYPE_PRINT_OPERATION_PREVIEW: GType
    get() = kniBridge449()

val GTK_TYPE_PRINT_OPERATION: GType
    get() = kniBridge450()

val GTK_PRINT_ERROR: GQuark
    get() = kniBridge451()

val GTK_TYPE_PROGRESS_BAR: GType
    get() = kniBridge452()

val GTK_TYPE_RADIO_BUTTON: GType
    get() = kniBridge453()

val GTK_TYPE_RADIO_MENU_ITEM: GType
    get() = kniBridge454()

val GTK_TYPE_TOGGLE_TOOL_BUTTON: GType
    get() = kniBridge455()

val GTK_TYPE_RADIO_TOOL_BUTTON: GType
    get() = kniBridge456()

val GTK_TYPE_RANGE: GType
    get() = kniBridge457()

val GTK_TYPE_RECENT_INFO: GType
    get() = kniBridge458()

val GTK_TYPE_RECENT_MANAGER: GType
    get() = kniBridge459()

val GTK_RECENT_MANAGER_ERROR: GQuark
    get() = kniBridge460()

val GTK_TYPE_RECENT_FILTER: GType
    get() = kniBridge461()

val GTK_TYPE_RECENT_CHOOSER: GType
    get() = kniBridge462()

val GTK_RECENT_CHOOSER_ERROR: GQuark
    get() = kniBridge463()

val GTK_TYPE_RECENT_CHOOSER_DIALOG: GType
    get() = kniBridge464()

val GTK_TYPE_RECENT_CHOOSER_MENU: GType
    get() = kniBridge465()

val GTK_TYPE_RECENT_CHOOSER_WIDGET: GType
    get() = kniBridge466()

val GTK_TYPE_REVEALER: GType
    get() = kniBridge467()

val GTK_TYPE_SCALE: GType
    get() = kniBridge468()

val GTK_TYPE_SCALE_BUTTON: GType
    get() = kniBridge469()

val GTK_TYPE_SCROLLABLE: GType
    get() = kniBridge470()

val GTK_TYPE_SCROLLBAR: GType
    get() = kniBridge471()

val GTK_TYPE_SCROLLED_WINDOW: GType
    get() = kniBridge472()

val GTK_TYPE_SEARCH_BAR: GType
    get() = kniBridge473()

val GTK_TYPE_SEARCH_ENTRY: GType
    get() = kniBridge474()

val GTK_TYPE_SEPARATOR: GType
    get() = kniBridge475()

val GTK_TYPE_SEPARATOR_MENU_ITEM: GType
    get() = kniBridge476()

val GTK_TYPE_SEPARATOR_TOOL_ITEM: GType
    get() = kniBridge477()

val GTK_TYPE_SETTINGS: GType
    get() = kniBridge478()

val GTK_TYPE_SHORTCUT_LABEL: GType
    get() = kniBridge479()

val GTK_TYPE_SHORTCUTS_GROUP: GType
    get() = kniBridge480()

val GTK_TYPE_SHORTCUTS_SECTION: GType
    get() = kniBridge481()

val GTK_TYPE_SHORTCUTS_SHORTCUT: GType
    get() = kniBridge482()

val GTK_TYPE_STACK: GType
    get() = kniBridge483()

val GTK_TYPE_STACK_SIDEBAR: GType
    get() = kniBridge484()

val GTK_TYPE_SPIN_BUTTON: GType
    get() = kniBridge485()

val GTK_TYPE_SPINNER: GType
    get() = kniBridge486()

val GTK_TYPE_STACK_SWITCHER: GType
    get() = kniBridge487()

val GTK_TYPE_STATUSBAR: GType
    get() = kniBridge488()

val GTK_TYPE_SWITCH: GType
    get() = kniBridge489()

val GTK_TYPE_TEXT_TAG_TABLE: GType
    get() = kniBridge490()

val GTK_TYPE_TEXT_MARK: GType
    get() = kniBridge491()

val GTK_TYPE_TEXT_BUFFER: GType
    get() = kniBridge492()

val GTK_TYPE_TEXT_VIEW: GType
    get() = kniBridge493()

val GTK_TYPE_TOOLBAR: GType
    get() = kniBridge494()

val GTK_TYPE_TOOL_ITEM_GROUP: GType
    get() = kniBridge495()

val GTK_TYPE_TOOL_PALETTE: GType
    get() = kniBridge496()

val GTK_TYPE_TOOL_SHELL: GType
    get() = kniBridge497()

val GTK_TYPE_TREE_DRAG_SOURCE: GType
    get() = kniBridge498()

val GTK_TYPE_TREE_DRAG_DEST: GType
    get() = kniBridge499()

val GTK_TYPE_TREE_MODEL_SORT: GType
    get() = kniBridge500()

val GTK_TYPE_TREE_SELECTION: GType
    get() = kniBridge501()

val GTK_TYPE_TREE_STORE: GType
    get() = kniBridge502()

val GTK_TYPE_RC_FLAGS: GType
    get() = kniBridge503()

val GTK_TYPE_RC_TOKEN_TYPE: GType
    get() = kniBridge504()

val GTK_TYPE_PATH_PRIORITY_TYPE: GType
    get() = kniBridge505()

val GTK_TYPE_PATH_TYPE: GType
    get() = kniBridge506()

val GTK_TYPE_EXPANDER_STYLE: GType
    get() = kniBridge507()

val GTK_TYPE_ATTACH_OPTIONS: GType
    get() = kniBridge508()

val GTK_TYPE_UI_MANAGER_ITEM_TYPE: GType
    get() = kniBridge509()

val GTK_TYPE_LICENSE: GType
    get() = kniBridge510()

val GTK_TYPE_ACCEL_FLAGS: GType
    get() = kniBridge511()

val GTK_TYPE_APPLICATION_INHIBIT_FLAGS: GType
    get() = kniBridge512()

val GTK_TYPE_ASSISTANT_PAGE_TYPE: GType
    get() = kniBridge513()

val GTK_TYPE_BUTTON_BOX_STYLE: GType
    get() = kniBridge514()

val GTK_TYPE_BUILDER_ERROR: GType
    get() = kniBridge515()

val GTK_TYPE_CALENDAR_DISPLAY_OPTIONS: GType
    get() = kniBridge516()

val GTK_TYPE_CELL_RENDERER_STATE: GType
    get() = kniBridge517()

val GTK_TYPE_CELL_RENDERER_MODE: GType
    get() = kniBridge518()

val GTK_TYPE_CELL_RENDERER_ACCEL_MODE: GType
    get() = kniBridge519()

val GTK_TYPE_RESIZE_MODE: GType
    get() = kniBridge520()

val GTK_TYPE_CSS_PROVIDER_ERROR: GType
    get() = kniBridge521()

val GTK_TYPE_CSS_SECTION_TYPE: GType
    get() = kniBridge522()

val GTK_TYPE_DEBUG_FLAG: GType
    get() = kniBridge523()

val GTK_TYPE_DIALOG_FLAGS: GType
    get() = kniBridge524()

val GTK_TYPE_RESPONSE_TYPE: GType
    get() = kniBridge525()

val GTK_TYPE_DEST_DEFAULTS: GType
    get() = kniBridge526()

val GTK_TYPE_ENTRY_ICON_POSITION: GType
    get() = kniBridge527()

val GTK_TYPE_ALIGN: GType
    get() = kniBridge528()

val GTK_TYPE_ARROW_TYPE: GType
    get() = kniBridge529()

val GTK_TYPE_BASELINE_POSITION: GType
    get() = kniBridge530()

val GTK_TYPE_DELETE_TYPE: GType
    get() = kniBridge531()

val GTK_TYPE_DIRECTION_TYPE: GType
    get() = kniBridge532()

val GTK_TYPE_ICON_SIZE: GType
    get() = kniBridge533()

val GTK_TYPE_SENSITIVITY_TYPE: GType
    get() = kniBridge534()

val GTK_TYPE_TEXT_DIRECTION: GType
    get() = kniBridge535()

val GTK_TYPE_JUSTIFICATION: GType
    get() = kniBridge536()

val GTK_TYPE_MENU_DIRECTION_TYPE: GType
    get() = kniBridge537()

val GTK_TYPE_MESSAGE_TYPE: GType
    get() = kniBridge538()

val GTK_TYPE_MOVEMENT_STEP: GType
    get() = kniBridge539()

val GTK_TYPE_SCROLL_STEP: GType
    get() = kniBridge540()

val GTK_TYPE_ORIENTATION: GType
    get() = kniBridge541()

val GTK_TYPE_PACK_TYPE: GType
    get() = kniBridge542()

val GTK_TYPE_POSITION_TYPE: GType
    get() = kniBridge543()

val GTK_TYPE_RELIEF_STYLE: GType
    get() = kniBridge544()

val GTK_TYPE_SCROLL_TYPE: GType
    get() = kniBridge545()

val GTK_TYPE_SELECTION_MODE: GType
    get() = kniBridge546()

val GTK_TYPE_SHADOW_TYPE: GType
    get() = kniBridge547()

val GTK_TYPE_STATE_TYPE: GType
    get() = kniBridge548()

val GTK_TYPE_TOOLBAR_STYLE: GType
    get() = kniBridge549()

val GTK_TYPE_WRAP_MODE: GType
    get() = kniBridge550()

val GTK_TYPE_SORT_TYPE: GType
    get() = kniBridge551()

val GTK_TYPE_IM_PREEDIT_STYLE: GType
    get() = kniBridge552()

val GTK_TYPE_IM_STATUS_STYLE: GType
    get() = kniBridge553()

val GTK_TYPE_PACK_DIRECTION: GType
    get() = kniBridge554()

val GTK_TYPE_PRINT_PAGES: GType
    get() = kniBridge555()

val GTK_TYPE_PAGE_SET: GType
    get() = kniBridge556()

val GTK_TYPE_NUMBER_UP_LAYOUT: GType
    get() = kniBridge557()

val GTK_TYPE_PAGE_ORIENTATION: GType
    get() = kniBridge558()

val GTK_TYPE_PRINT_QUALITY: GType
    get() = kniBridge559()

val GTK_TYPE_PRINT_DUPLEX: GType
    get() = kniBridge560()

val GTK_TYPE_UNIT: GType
    get() = kniBridge561()

val GTK_TYPE_TREE_VIEW_GRID_LINES: GType
    get() = kniBridge562()

val GTK_TYPE_DRAG_RESULT: GType
    get() = kniBridge563()

val GTK_TYPE_SIZE_GROUP_MODE: GType
    get() = kniBridge564()

val GTK_TYPE_SIZE_REQUEST_MODE: GType
    get() = kniBridge565()

val GTK_TYPE_SCROLLABLE_POLICY: GType
    get() = kniBridge566()

val GTK_TYPE_STATE_FLAGS: GType
    get() = kniBridge567()

val GTK_TYPE_REGION_FLAGS: GType
    get() = kniBridge568()

val GTK_TYPE_JUNCTION_SIDES: GType
    get() = kniBridge569()

val GTK_TYPE_BORDER_STYLE: GType
    get() = kniBridge570()

val GTK_TYPE_LEVEL_BAR_MODE: GType
    get() = kniBridge571()

val GTK_TYPE_INPUT_PURPOSE: GType
    get() = kniBridge572()

val GTK_TYPE_INPUT_HINTS: GType
    get() = kniBridge573()

val GTK_TYPE_PROPAGATION_PHASE: GType
    get() = kniBridge574()

val GTK_TYPE_EVENT_SEQUENCE_STATE: GType
    get() = kniBridge575()

val GTK_TYPE_PAN_DIRECTION: GType
    get() = kniBridge576()

val GTK_TYPE_POPOVER_CONSTRAINT: GType
    get() = kniBridge577()

val GTK_TYPE_FILE_CHOOSER_ACTION: GType
    get() = kniBridge578()

val GTK_TYPE_FILE_CHOOSER_CONFIRMATION: GType
    get() = kniBridge579()

val GTK_TYPE_FILE_CHOOSER_ERROR: GType
    get() = kniBridge580()

val GTK_TYPE_FILE_FILTER_FLAGS: GType
    get() = kniBridge581()

val GTK_TYPE_ICON_LOOKUP_FLAGS: GType
    get() = kniBridge582()

val GTK_TYPE_ICON_THEME_ERROR: GType
    get() = kniBridge583()

val GTK_TYPE_ICON_VIEW_DROP_POSITION: GType
    get() = kniBridge584()

val GTK_TYPE_IMAGE_TYPE: GType
    get() = kniBridge585()

val GTK_TYPE_ARROW_PLACEMENT: GType
    get() = kniBridge586()

val GTK_TYPE_BUTTONS_TYPE: GType
    get() = kniBridge587()

val GTK_TYPE_BUTTON_ROLE: GType
    get() = kniBridge588()

val GTK_TYPE_NOTEBOOK_TAB: GType
    get() = kniBridge589()

val GTK_TYPE_PAD_ACTION_TYPE: GType
    get() = kniBridge590()

val GTK_TYPE_PLACES_OPEN_FLAGS: GType
    get() = kniBridge591()

val GTK_TYPE_PRINT_STATUS: GType
    get() = kniBridge592()

val GTK_TYPE_PRINT_OPERATION_RESULT: GType
    get() = kniBridge593()

val GTK_TYPE_PRINT_OPERATION_ACTION: GType
    get() = kniBridge594()

val GTK_TYPE_PRINT_ERROR: GType
    get() = kniBridge595()

val GTK_TYPE_RECENT_SORT_TYPE: GType
    get() = kniBridge596()

val GTK_TYPE_RECENT_CHOOSER_ERROR: GType
    get() = kniBridge597()

val GTK_TYPE_RECENT_FILTER_FLAGS: GType
    get() = kniBridge598()

val GTK_TYPE_RECENT_MANAGER_ERROR: GType
    get() = kniBridge599()

val GTK_TYPE_REVEALER_TRANSITION_TYPE: GType
    get() = kniBridge600()

val GTK_TYPE_CORNER_TYPE: GType
    get() = kniBridge601()

val GTK_TYPE_POLICY_TYPE: GType
    get() = kniBridge602()

val GTK_TYPE_TARGET_FLAGS: GType
    get() = kniBridge603()

val GTK_TYPE_SHORTCUT_TYPE: GType
    get() = kniBridge604()

val GTK_TYPE_SPIN_BUTTON_UPDATE_POLICY: GType
    get() = kniBridge605()

val GTK_TYPE_SPIN_TYPE: GType
    get() = kniBridge606()

val GTK_TYPE_STACK_TRANSITION_TYPE: GType
    get() = kniBridge607()

val GTK_TYPE_STYLE_CONTEXT_PRINT_FLAGS: GType
    get() = kniBridge608()

val GTK_TYPE_TEXT_BUFFER_TARGET_INFO: GType
    get() = kniBridge609()

val GTK_TYPE_TEXT_SEARCH_FLAGS: GType
    get() = kniBridge610()

val GTK_TYPE_TEXT_WINDOW_TYPE: GType
    get() = kniBridge611()

val GTK_TYPE_TEXT_VIEW_LAYER: GType
    get() = kniBridge612()

val GTK_TYPE_TEXT_EXTEND_SELECTION: GType
    get() = kniBridge613()

val GTK_TYPE_TOOLBAR_SPACE_STYLE: GType
    get() = kniBridge614()

val GTK_TYPE_TOOL_PALETTE_DRAG_TARGETS: GType
    get() = kniBridge615()

val GTK_TYPE_TREE_MODEL_FLAGS: GType
    get() = kniBridge616()

val GTK_TYPE_TREE_VIEW_DROP_POSITION: GType
    get() = kniBridge617()

val GTK_TYPE_TREE_VIEW_COLUMN_SIZING: GType
    get() = kniBridge618()

val GTK_TYPE_WIDGET_HELP_TYPE: GType
    get() = kniBridge619()

val GTK_TYPE_WINDOW_TYPE: GType
    get() = kniBridge620()

val GTK_TYPE_WINDOW_POSITION: GType
    get() = kniBridge621()

val GTK_TYPE_VIEWPORT: GType
    get() = kniBridge622()

val GTK_TYPE_VOLUME_BUTTON: GType
    get() = kniBridge623()

val GTK_TYPE_WIDGET_PATH: GType
    get() = kniBridge624()

val GTK_TYPE_WINDOW_GROUP: GType
    get() = kniBridge625()

typealias gsizeVar = ULongVarOf<gsize>

typealias gsize = ULong

typealias GTypeVar = ULongVarOf<GType>

typealias GType = gsize

typealias gintVar = IntVarOf<gint>

typealias gint = Int

typealias guintVar = UIntVarOf<guint>

typealias guint = UInt

typealias glongVar = LongVarOf<glong>

typealias glong = Long

typealias gulongVar = ULongVarOf<gulong>

typealias gulong = ULong

typealias gint64Var = LongVarOf<gint64>

typealias gint64 = Long

typealias guint64Var = ULongVarOf<guint64>

typealias guint64 = ULong

typealias gfloatVar = FloatVarOf<gfloat>

typealias gfloat = Float

typealias gdoubleVar = DoubleVarOf<gdouble>

typealias gdouble = Double

typealias gpointerVar = CPointerVarOf<gpointer>

typealias gpointer = COpaquePointer

typealias GValue = _GValue

typealias GTypeCValue = _GTypeCValue

typealias GTypePlugin = _GTypePlugin

typealias GTypeClass = _GTypeClass

typealias GTypeInterface = _GTypeInterface

typealias GTypeInstance = _GTypeInstance

typealias guint16Var = UShortVarOf<guint16>

typealias guint16 = UShort

typealias GBaseInitFuncVar = CPointerVarOf<GBaseInitFunc>

typealias GBaseInitFunc = CPointer<CFunction<(gpointer?) -> Unit>>

typealias GBaseFinalizeFuncVar = CPointerVarOf<GBaseFinalizeFunc>

typealias GBaseFinalizeFunc = CPointer<CFunction<(gpointer?) -> Unit>>

typealias GClassInitFuncVar = CPointerVarOf<GClassInitFunc>

typealias GClassInitFunc = CPointer<CFunction<(gpointer?, gpointer?) -> Unit>>

typealias GClassFinalizeFuncVar = CPointerVarOf<GClassFinalizeFunc>

typealias GClassFinalizeFunc = CPointer<CFunction<(gpointer?, gpointer?) -> Unit>>

typealias gconstpointerVar = CPointerVarOf<gconstpointer>

typealias gconstpointer = COpaquePointer

typealias GInstanceInitFuncVar = CPointerVarOf<GInstanceInitFunc>

typealias GInstanceInitFunc = CPointer<CFunction<(CPointer<GTypeInstance>?, gpointer?) -> Unit>>

typealias gcharVar = ByteVarOf<gchar>

typealias gchar = Byte

typealias GTypeValueTable = _GTypeValueTable

typealias GTypeInfo = _GTypeInfo

typealias GTypeFundamentalInfo = _GTypeFundamentalInfo

typealias GInterfaceInitFuncVar = CPointerVarOf<GInterfaceInitFunc>

typealias GInterfaceInitFunc = CPointer<CFunction<(gpointer?, gpointer?) -> Unit>>

typealias GInterfaceFinalizeFuncVar = CPointerVarOf<GInterfaceFinalizeFunc>

typealias GInterfaceFinalizeFunc = CPointer<CFunction<(gpointer?, gpointer?) -> Unit>>

typealias GInterfaceInfo = _GInterfaceInfo

typealias GTypeQuery = _GTypeQuery

typealias guint32Var = UIntVarOf<guint32>

typealias guint32 = UInt

typealias GQuarkVar = UIntVarOf<GQuark>

typealias GQuark = guint32

typealias gbooleanVar = IntVarOf<gboolean>

typealias gboolean = gint

typealias GTypeClassCacheFuncVar = CPointerVarOf<GTypeClassCacheFunc>

typealias GTypeClassCacheFunc = CPointer<CFunction<(gpointer?, CPointer<GTypeClass>?) -> gboolean>>

typealias GTypeInterfaceCheckFuncVar = CPointerVarOf<GTypeInterfaceCheckFunc>

typealias GTypeInterfaceCheckFunc = CPointer<CFunction<(gpointer?, gpointer?) -> Unit>>

typealias GValueTransformVar = CPointerVarOf<GValueTransform>

typealias GValueTransform = CPointer<CFunction<(CPointer<GValue>?, CPointer<GValue>?) -> Unit>>

typealias GData = _GData

typealias GParamSpec = _GParamSpec

typealias GParamSpecClass = _GParamSpecClass

typealias GParameter = _GParameter

typealias GParamSpecPool = _GParamSpecPool

typealias GDestroyNotifyVar = CPointerVarOf<GDestroyNotify>

typealias GDestroyNotify = CPointer<CFunction<(gpointer?) -> Unit>>

typealias GParamSpecTypeInfo = _GParamSpecTypeInfo

typealias GList = _GList

typealias GClosure = _GClosure

typealias GClosureNotifyVar = CPointerVarOf<GClosureNotify>

typealias GClosureNotify = CPointer<CFunction<(gpointer?, CPointer<GClosure>?) -> Unit>>

typealias GClosureNotifyData = _GClosureNotifyData

typealias GCallbackVar = CPointerVarOf<GCallback>

typealias GCallback = CPointer<CFunction<() -> Unit>>

typealias GClosureMarshalVar = CPointerVarOf<GClosureMarshal>

typealias GClosureMarshal = CPointer<CFunction<(CPointer<GClosure>?, CPointer<GValue>?, guint, CPointer<GValue>?, gpointer?, gpointer?) -> Unit>>

typealias GVaClosureMarshalVar = CPointerVarOf<GVaClosureMarshal>

typealias GVaClosureMarshal = CPointer<CFunction<(CPointer<GClosure>?, CPointer<GValue>?, gpointer?, platform.posix.va_list?, gpointer?, Int, CPointer<GTypeVar>?) -> Unit>>

typealias GCClosure = _GCClosure

typealias GSignalQuery = _GSignalQuery

typealias GSignalInvocationHint = _GSignalInvocationHint

typealias GSignalCMarshallerVar = CPointerVarOf<GSignalCMarshaller>

typealias GSignalCMarshaller = GClosureMarshal

typealias GSignalCVaMarshallerVar = CPointerVarOf<GSignalCVaMarshaller>

typealias GSignalCVaMarshaller = GVaClosureMarshal

typealias GSignalEmissionHookVar = CPointerVarOf<GSignalEmissionHook>

typealias GSignalEmissionHook = CPointer<CFunction<(CPointer<GSignalInvocationHint>?, guint, CPointer<GValue>?, gpointer?) -> gboolean>>

typealias GSignalAccumulatorVar = CPointerVarOf<GSignalAccumulator>

typealias GSignalAccumulator = CPointer<CFunction<(CPointer<GSignalInvocationHint>?, CPointer<GValue>?, CPointer<GValue>?, gpointer?) -> gboolean>>

typealias GBoxedCopyFuncVar = CPointerVarOf<GBoxedCopyFunc>

typealias GBoxedCopyFunc = CPointer<CFunction<(gpointer?) -> gpointer?>>

typealias GBoxedFreeFuncVar = CPointerVarOf<GBoxedFreeFunc>

typealias GBoxedFreeFunc = CPointer<CFunction<(gpointer?) -> Unit>>

typealias GObject = _GObject

typealias GSList = _GSList

typealias GObjectConstructParam = _GObjectConstructParam

typealias GObjectClass = _GObjectClass

typealias GInitiallyUnowned = _GObject

typealias GInitiallyUnownedClass = _GObjectClass

typealias GObjectGetPropertyFuncVar = CPointerVarOf<GObjectGetPropertyFunc>

typealias GObjectGetPropertyFunc = CPointer<CFunction<(CPointer<GObject>?, guint, CPointer<GValue>?, CPointer<GParamSpec>?) -> Unit>>

typealias GObjectSetPropertyFuncVar = CPointerVarOf<GObjectSetPropertyFunc>

typealias GObjectSetPropertyFunc = CPointer<CFunction<(CPointer<GObject>?, guint, CPointer<GValue>?, CPointer<GParamSpec>?) -> Unit>>

typealias GObjectFinalizeFuncVar = CPointerVarOf<GObjectFinalizeFunc>

typealias GObjectFinalizeFunc = CPointer<CFunction<(CPointer<GObject>?) -> Unit>>

typealias GWeakNotifyVar = CPointerVarOf<GWeakNotify>

typealias GWeakNotify = CPointer<CFunction<(gpointer?, CPointer<GObject>?) -> Unit>>

typealias GToggleNotifyVar = CPointerVarOf<GToggleNotify>

typealias GToggleNotify = CPointer<CFunction<(gpointer?, CPointer<GObject>?, gboolean) -> Unit>>

typealias GDuplicateFuncVar = CPointerVarOf<GDuplicateFunc>

typealias GDuplicateFunc = CPointer<CFunction<(gpointer?, gpointer?) -> gpointer?>>

typealias GBinding = _GBinding

typealias GBindingTransformFuncVar = CPointerVarOf<GBindingTransformFunc>

typealias GBindingTransformFunc = CPointer<CFunction<(CPointer<GBinding>?, CPointer<GValue>?, CPointer<GValue>?, gpointer?) -> gboolean>>

typealias GEnumValue = _GEnumValue

typealias GEnumClass = _GEnumClass

typealias GFlagsValue = _GFlagsValue

typealias GFlagsClass = _GFlagsClass

typealias gint8Var = ByteVarOf<gint8>

typealias gint8 = Byte

typealias GParamSpecChar = _GParamSpecChar

typealias guint8Var = UByteVarOf<guint8>

typealias guint8 = UByte

typealias GParamSpecUChar = _GParamSpecUChar

typealias GParamSpecBoolean = _GParamSpecBoolean

typealias GParamSpecInt = _GParamSpecInt

typealias GParamSpecUInt = _GParamSpecUInt

typealias GParamSpecLong = _GParamSpecLong

typealias GParamSpecULong = _GParamSpecULong

typealias GParamSpecInt64 = _GParamSpecInt64

typealias GParamSpecUInt64 = _GParamSpecUInt64

typealias gunicharVar = UIntVarOf<gunichar>

typealias gunichar = guint32

typealias GParamSpecUnichar = _GParamSpecUnichar

typealias GParamSpecEnum = _GParamSpecEnum

typealias GParamSpecFlags = _GParamSpecFlags

typealias GParamSpecFloat = _GParamSpecFloat

typealias GParamSpecDouble = _GParamSpecDouble

typealias GParamSpecString = _GParamSpecString

typealias GParamSpecParam = _GParamSpecParam

typealias GParamSpecBoxed = _GParamSpecBoxed

typealias GParamSpecPointer = _GParamSpecPointer

typealias GParamSpecValueArray = _GParamSpecValueArray

typealias GParamSpecObject = _GParamSpecObject

typealias GParamSpecOverride = _GParamSpecOverride

typealias GParamSpecGType = _GParamSpecGType

typealias GVariantType = _GVariantType

typealias GVariant = _GVariant

typealias GParamSpecVariant = _GParamSpecVariant

typealias GSource = _GSource

typealias GSourceFuncVar = CPointerVarOf<GSourceFunc>

typealias GSourceFunc = CPointer<CFunction<(gpointer?) -> gboolean>>

typealias GSourceCallbackFuncs = _GSourceCallbackFuncs

typealias GSourceDummyMarshalVar = CPointerVarOf<GSourceDummyMarshal>

typealias GSourceDummyMarshal = CPointer<CFunction<() -> Unit>>

typealias GSourceFuncs = _GSourceFuncs

typealias GMainContext = _GMainContext

typealias GSourcePrivate = _GSourcePrivate

typealias GTypeModule = _GTypeModule

typealias GTypeModuleClass = _GTypeModuleClass

typealias GTypeModule_autoptrVar = CPointerVarOf<GTypeModule_autoptr>

typealias GTypeModule_autoptr = CPointer<GTypeModule>

typealias GTypeModule_listautoptrVar = CPointerVarOf<GTypeModule_listautoptr>

typealias GTypeModule_listautoptr = CPointer<GList>

typealias GTypeModule_slistautoptrVar = CPointerVarOf<GTypeModule_slistautoptr>

typealias GTypeModule_slistautoptr = CPointer<GSList>

typealias GTypePluginUseVar = CPointerVarOf<GTypePluginUse>

typealias GTypePluginUse = CPointer<CFunction<(CPointer<GTypePlugin>?) -> Unit>>

typealias GTypePluginUnuseVar = CPointerVarOf<GTypePluginUnuse>

typealias GTypePluginUnuse = CPointer<CFunction<(CPointer<GTypePlugin>?) -> Unit>>

typealias GTypePluginCompleteTypeInfoVar = CPointerVarOf<GTypePluginCompleteTypeInfo>

typealias GTypePluginCompleteTypeInfo = CPointer<CFunction<(CPointer<GTypePlugin>?, GType, CPointer<GTypeInfo>?, CPointer<GTypeValueTable>?) -> Unit>>

typealias GTypePluginCompleteInterfaceInfoVar = CPointerVarOf<GTypePluginCompleteInterfaceInfo>

typealias GTypePluginCompleteInterfaceInfo = CPointer<CFunction<(CPointer<GTypePlugin>?, GType, GType, CPointer<GInterfaceInfo>?) -> Unit>>

typealias GTypePluginClass = _GTypePluginClass

typealias GValueArray = _GValueArray

typealias GCompareFuncVar = CPointerVarOf<GCompareFunc>

typealias GCompareFunc = CPointer<CFunction<(gconstpointer?, gconstpointer?) -> gint>>

typealias GCompareDataFuncVar = CPointerVarOf<GCompareDataFunc>

typealias GCompareDataFunc = CPointer<CFunction<(gconstpointer?, gconstpointer?, gpointer?) -> gint>>

typealias gucharVar = UByteVarOf<guchar>

typealias guchar = UByte

typealias gchararrayVar = CPointerVarOf<gchararray>

typealias gchararray = CPointer<gcharVar>

typealias GClosure_autoptrVar = CPointerVarOf<GClosure_autoptr>

typealias GClosure_autoptr = CPointer<GClosure>

typealias GClosure_listautoptrVar = CPointerVarOf<GClosure_listautoptr>

typealias GClosure_listautoptr = CPointer<GList>

typealias GClosure_slistautoptrVar = CPointerVarOf<GClosure_slistautoptr>

typealias GClosure_slistautoptr = CPointer<GSList>

typealias GObject_autoptrVar = CPointerVarOf<GObject_autoptr>

typealias GObject_autoptr = CPointer<GObject>

typealias GObject_listautoptrVar = CPointerVarOf<GObject_listautoptr>

typealias GObject_listautoptr = CPointer<GList>

typealias GObject_slistautoptrVar = CPointerVarOf<GObject_slistautoptr>

typealias GObject_slistautoptr = CPointer<GSList>

typealias GInitiallyUnowned_autoptrVar = CPointerVarOf<GInitiallyUnowned_autoptr>

typealias GInitiallyUnowned_autoptr = CPointer<GInitiallyUnowned>

typealias GInitiallyUnowned_listautoptrVar = CPointerVarOf<GInitiallyUnowned_listautoptr>

typealias GInitiallyUnowned_listautoptr = CPointer<GList>

typealias GInitiallyUnowned_slistautoptrVar = CPointerVarOf<GInitiallyUnowned_slistautoptr>

typealias GInitiallyUnowned_slistautoptr = CPointer<GSList>

typealias GTlsPasswordFlagsVar = UIntVarOf<GTlsPasswordFlags>

typealias GTlsPasswordFlags = _GTlsPasswordFlags

typealias GAppLaunchContextPrivate = _GAppLaunchContextPrivate

typealias GAppLaunchContext = _GAppLaunchContext

typealias GAppInfo = _GAppInfo

typealias GAsyncResult = _GAsyncResult

typealias GAsyncInitable = _GAsyncInitable

typealias GInputStreamPrivate = _GInputStreamPrivate

typealias GInputStream = _GInputStream

typealias GFilterInputStream = _GFilterInputStream

typealias GBufferedInputStreamPrivate = _GBufferedInputStreamPrivate

typealias GBufferedInputStream = _GBufferedInputStream

typealias GOutputStreamPrivate = _GOutputStreamPrivate

typealias GOutputStream = _GOutputStream

typealias GFilterOutputStream = _GFilterOutputStream

typealias GBufferedOutputStreamPrivate = _GBufferedOutputStreamPrivate

typealias GBufferedOutputStream = _GBufferedOutputStream

typealias GCancellablePrivate = _GCancellablePrivate

typealias GCancellable = _GCancellable

typealias GCharsetConverter = _GCharsetConverter

typealias GConverter = _GConverter

typealias GConverterInputStreamPrivate = _GConverterInputStreamPrivate

typealias GConverterInputStream = _GConverterInputStream

typealias GConverterOutputStreamPrivate = _GConverterOutputStreamPrivate

typealias GConverterOutputStream = _GConverterOutputStream

typealias GDatagramBased = _GDatagramBased

typealias GDataInputStreamPrivate = _GDataInputStreamPrivate

typealias GDataInputStream = _GDataInputStream

typealias GSimplePermission = _GSimplePermission

typealias GZlibCompressor = _GZlibCompressor

typealias GZlibDecompressor = _GZlibDecompressor

typealias GSimpleActionGroupPrivate = _GSimpleActionGroupPrivate

typealias GSimpleActionGroup = _GSimpleActionGroup

typealias GRemoteActionGroup = _GRemoteActionGroup

typealias GDBusActionGroup = _GDBusActionGroup

typealias GActionMap = _GActionMap

typealias GActionGroup = _GActionGroup

typealias GPropertyAction = _GPropertyAction

typealias GSimpleAction = _GSimpleAction

typealias GAction = _GAction

typealias GApplicationPrivate = _GApplicationPrivate

typealias GApplication = _GApplication

typealias GApplicationCommandLinePrivate = _GApplicationCommandLinePrivate

typealias GApplicationCommandLine = _GApplicationCommandLine

typealias GSettingsBackend = _GSettingsBackend

typealias GSettingsPrivate = _GSettingsPrivate

typealias GSettings = _GSettings

typealias GPermissionPrivate = _GPermissionPrivate

typealias GPermission = _GPermission

typealias GMenuModelPrivate = _GMenuModelPrivate

typealias GMenuModel = _GMenuModel

typealias GNotification = _GNotification

typealias GDrive = _GDrive

typealias GFileEnumeratorPrivate = _GFileEnumeratorPrivate

typealias GFileEnumerator = _GFileEnumerator

typealias GFileMonitorPrivate = _GFileMonitorPrivate

typealias GFileMonitor = _GFileMonitor

typealias GFile = _GFile

typealias GFileInfo = _GFileInfo

typealias GFileAttributeMatcher = _GFileAttributeMatcher

typealias GFileAttributeInfo = _GFileAttributeInfo

typealias GFileAttributeInfoList = _GFileAttributeInfoList

typealias GFileDescriptorBased = _GFileDescriptorBased

typealias GFileInputStreamPrivate = _GFileInputStreamPrivate

typealias GFileInputStream = _GFileInputStream

typealias GFileOutputStreamPrivate = _GFileOutputStreamPrivate

typealias GFileOutputStream = _GFileOutputStream

typealias GIOStreamPrivate = _GIOStreamPrivate

typealias GIOStream = _GIOStream

typealias GFileIOStreamPrivate = _GFileIOStreamPrivate

typealias GFileIOStream = _GFileIOStream

typealias GFileIcon = _GFileIcon

typealias GFilenameCompleter = _GFilenameCompleter

typealias GIcon = _GIcon

typealias GInetAddressPrivate = _GInetAddressPrivate

typealias GInetAddress = _GInetAddress

typealias GInetAddressMaskPrivate = _GInetAddressMaskPrivate

typealias GInetAddressMask = _GInetAddressMask

typealias GSocketAddress = _GSocketAddress

typealias GInetSocketAddressPrivate = _GInetSocketAddressPrivate

typealias GInetSocketAddress = _GInetSocketAddress

typealias GNativeSocketAddress = _GNativeSocketAddress

typealias GInitable = _GInitable

typealias GIOModule = _GIOModule

typealias GIOExtensionPoint = _GIOExtensionPoint

typealias GIOExtension = _GIOExtension

typealias GIOSchedulerJob = _GIOSchedulerJob

typealias GIOStreamAdapter = _GIOStreamAdapter

typealias GLoadableIcon = _GLoadableIcon

typealias GBytesIcon = _GBytesIcon

typealias GMemoryInputStreamPrivate = _GMemoryInputStreamPrivate

typealias GMemoryInputStream = _GMemoryInputStream

typealias GMemoryOutputStreamPrivate = _GMemoryOutputStreamPrivate

typealias GMemoryOutputStream = _GMemoryOutputStream

typealias GMount = _GMount

typealias GMountOperationPrivate = _GMountOperationPrivate

typealias GMountOperation = _GMountOperation

typealias GNetworkAddressPrivate = _GNetworkAddressPrivate

typealias GNetworkAddress = _GNetworkAddress

typealias GNetworkMonitor = _GNetworkMonitor

typealias GNetworkServicePrivate = _GNetworkServicePrivate

typealias GNetworkService = _GNetworkService

typealias GSimpleIOStream = _GSimpleIOStream

typealias GPollableInputStream = _GPollableInputStream

typealias GPollableOutputStream = _GPollableOutputStream

typealias GResolverPrivate = _GResolverPrivate

typealias GResolver = _GResolver

typealias GResource = _GResource

typealias GSeekable = _GSeekable

typealias GSimpleAsyncResult = _GSimpleAsyncResult

typealias GSocketPrivate = _GSocketPrivate

typealias GSocket = _GSocket

typealias GSocketControlMessagePrivate = _GSocketControlMessagePrivate

typealias GSocketControlMessage = _GSocketControlMessage

typealias GSocketClientPrivate = _GSocketClientPrivate

typealias GSocketClient = _GSocketClient

typealias GSocketConnectionPrivate = _GSocketConnectionPrivate

typealias GSocketConnection = _GSocketConnection

typealias GSocketListenerPrivate = _GSocketListenerPrivate

typealias GSocketListener = _GSocketListener

typealias GSocketServicePrivate = _GSocketServicePrivate

typealias GSocketService = _GSocketService

typealias GSocketAddressEnumerator = _GSocketAddressEnumerator

typealias GSocketConnectable = _GSocketConnectable

typealias GSrvTarget = _GSrvTarget

typealias GTask = _GTask

typealias GTcpConnectionPrivate = _GTcpConnectionPrivate

typealias GTcpConnection = _GTcpConnection

typealias GTcpWrapperConnectionPrivate = _GTcpWrapperConnectionPrivate

typealias GTcpWrapperConnection = _GTcpWrapperConnection

typealias GThreadedSocketServicePrivate = _GThreadedSocketServicePrivate

typealias GThreadedSocketService = _GThreadedSocketService

typealias GDtlsConnection = _GDtlsConnection

typealias GDtlsClientConnection = _GDtlsClientConnection

typealias GDtlsServerConnection = _GDtlsServerConnection

typealias GThemedIcon = _GThemedIcon

typealias GTlsCertificatePrivate = _GTlsCertificatePrivate

typealias GTlsCertificate = _GTlsCertificate

typealias GTlsClientConnection = _GTlsClientConnection

typealias GTlsConnectionPrivate = _GTlsConnectionPrivate

typealias GTlsConnection = _GTlsConnection

typealias GTlsDatabasePrivate = _GTlsDatabasePrivate

typealias GTlsDatabase = _GTlsDatabase

typealias GTlsFileDatabase = _GTlsFileDatabase

typealias GTlsInteractionPrivate = _GTlsInteractionPrivate

typealias GTlsInteraction = _GTlsInteraction

typealias GTlsPasswordPrivate = _GTlsPasswordPrivate

typealias GTlsPassword = _GTlsPassword

typealias GTlsServerConnection = _GTlsServerConnection

typealias GVfs = _GVfs

typealias GProxyResolver = _GProxyResolver

typealias GProxy = _GProxy

typealias GProxyAddressPrivate = _GProxyAddressPrivate

typealias GProxyAddress = _GProxyAddress

typealias GProxyAddressEnumeratorPrivate = _GProxyAddressEnumeratorPrivate

typealias GProxyAddressEnumerator = _GProxyAddressEnumerator

typealias GVolume = _GVolume

typealias GVolumeMonitor = _GVolumeMonitor

typealias GAsyncReadyCallbackVar = CPointerVarOf<GAsyncReadyCallback>

typealias GAsyncReadyCallback = CPointer<CFunction<(CPointer<GObject>?, CPointer<GAsyncResult>?, gpointer?) -> Unit>>

typealias goffsetVar = LongVarOf<goffset>

typealias goffset = gint64

typealias GFileProgressCallbackVar = CPointerVarOf<GFileProgressCallback>

typealias GFileProgressCallback = CPointer<CFunction<(goffset, goffset, gpointer?) -> Unit>>

typealias GFileReadMoreCallbackVar = CPointerVarOf<GFileReadMoreCallback>

typealias GFileReadMoreCallback = CPointer<CFunction<(CPointer<ByteVar>?, goffset, gpointer?) -> gboolean>>

typealias GFileMeasureProgressCallbackVar = CPointerVarOf<GFileMeasureProgressCallback>

typealias GFileMeasureProgressCallback = CPointer<CFunction<(gboolean, guint64, guint64, guint64, gpointer?) -> Unit>>

typealias GIOSchedulerJobFuncVar = CPointerVarOf<GIOSchedulerJobFunc>

typealias GIOSchedulerJobFunc = CPointer<CFunction<(CPointer<GIOSchedulerJob>?, CPointer<GCancellable>?, gpointer?) -> gboolean>>

typealias GSimpleAsyncThreadFuncVar = CPointerVarOf<GSimpleAsyncThreadFunc>

typealias GSimpleAsyncThreadFunc = CPointer<CFunction<(CPointer<GSimpleAsyncResult>?, CPointer<GObject>?, CPointer<GCancellable>?) -> Unit>>

typealias GSocketSourceFuncVar = CPointerVarOf<GSocketSourceFunc>

typealias GSocketSourceFunc = CPointer<CFunction<(CPointer<GSocket>?, GIOCondition, gpointer?) -> gboolean>>

typealias GDatagramBasedSourceFuncVar = CPointerVarOf<GDatagramBasedSourceFunc>

typealias GDatagramBasedSourceFunc = CPointer<CFunction<(CPointer<GDatagramBased>?, GIOCondition, gpointer?) -> gboolean>>

typealias GInputVector = _GInputVector

typealias GInputMessage = _GInputMessage

typealias GOutputVector = _GOutputVector

typealias GOutputMessage = _GOutputMessage

typealias GCredentials = _GCredentials

typealias GUnixCredentialsMessage = _GUnixCredentialsMessage

typealias GUnixFDList = _GUnixFDList

typealias GDBusMessage = _GDBusMessage

typealias GDBusConnection = _GDBusConnection

typealias GDBusProxyPrivate = _GDBusProxyPrivate

typealias GDBusProxy = _GDBusProxy

typealias GDBusMethodInvocation = _GDBusMethodInvocation

typealias GDBusServer = _GDBusServer

typealias GDBusAuthObserver = _GDBusAuthObserver

typealias GDBusErrorEntry = _GDBusErrorEntry

typealias GDBusInterfaceMethodCallFuncVar = CPointerVarOf<GDBusInterfaceMethodCallFunc>

typealias GDBusInterfaceMethodCallFunc = CPointer<CFunction<(CPointer<GDBusConnection>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<GVariant>?, CPointer<GDBusMethodInvocation>?, gpointer?) -> Unit>>

typealias GError = _GError

typealias GDBusInterfaceGetPropertyFuncVar = CPointerVarOf<GDBusInterfaceGetPropertyFunc>

typealias GDBusInterfaceGetPropertyFunc = CPointer<CFunction<(CPointer<GDBusConnection>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<CPointerVar<GError>>?, gpointer?) -> CPointer<GVariant>?>>

typealias GDBusInterfaceSetPropertyFuncVar = CPointerVarOf<GDBusInterfaceSetPropertyFunc>

typealias GDBusInterfaceSetPropertyFunc = CPointer<CFunction<(CPointer<GDBusConnection>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<GVariant>?, CPointer<CPointerVar<GError>>?, gpointer?) -> gboolean>>

typealias GDBusInterfaceVTable = _GDBusInterfaceVTable

typealias GDBusSubtreeEnumerateFuncVar = CPointerVarOf<GDBusSubtreeEnumerateFunc>

typealias GDBusSubtreeEnumerateFunc = CPointer<CFunction<(CPointer<GDBusConnection>?, CPointer<gcharVar>?, CPointer<gcharVar>?, gpointer?) -> CPointer<CPointerVar<gcharVar>>?>>

typealias GDBusAnnotationInfo = _GDBusAnnotationInfo

typealias GDBusArgInfo = _GDBusArgInfo

typealias GDBusMethodInfo = _GDBusMethodInfo

typealias GDBusSignalInfo = _GDBusSignalInfo

typealias GDBusPropertyInfo = _GDBusPropertyInfo

typealias GDBusInterfaceInfo = _GDBusInterfaceInfo

typealias GDBusSubtreeIntrospectFuncVar = CPointerVarOf<GDBusSubtreeIntrospectFunc>

typealias GDBusSubtreeIntrospectFunc = CPointer<CFunction<(CPointer<GDBusConnection>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<gcharVar>?, gpointer?) -> CPointer<CPointerVar<GDBusInterfaceInfo>>?>>

typealias GDBusSubtreeDispatchFuncVar = CPointerVarOf<GDBusSubtreeDispatchFunc>

typealias GDBusSubtreeDispatchFunc = CPointer<CFunction<(CPointer<GDBusConnection>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<gpointerVar>?, gpointer?) -> CPointer<GDBusInterfaceVTable>?>>

typealias GDBusSubtreeVTable = _GDBusSubtreeVTable

typealias GDBusNodeInfo = _GDBusNodeInfo

typealias GCancellableSourceFuncVar = CPointerVarOf<GCancellableSourceFunc>

typealias GCancellableSourceFunc = CPointer<CFunction<(CPointer<GCancellable>?, gpointer?) -> gboolean>>

typealias GPollableSourceFuncVar = CPointerVarOf<GPollableSourceFunc>

typealias GPollableSourceFunc = CPointer<CFunction<(CPointer<GObject>?, gpointer?) -> gboolean>>

typealias GDBusInterface = _GDBusInterface

typealias GDBusInterfaceSkeletonPrivate = _GDBusInterfaceSkeletonPrivate

typealias GDBusInterfaceSkeleton = _GDBusInterfaceSkeleton

typealias GDBusObject = _GDBusObject

typealias GDBusObjectSkeletonPrivate = _GDBusObjectSkeletonPrivate

typealias GDBusObjectSkeleton = _GDBusObjectSkeleton

typealias GDBusObjectProxyPrivate = _GDBusObjectProxyPrivate

typealias GDBusObjectProxy = _GDBusObjectProxy

typealias GDBusObjectManager = _GDBusObjectManager

typealias GDBusObjectManagerClientPrivate = _GDBusObjectManagerClientPrivate

typealias GDBusObjectManagerClient = _GDBusObjectManagerClient

typealias GDBusObjectManagerServerPrivate = _GDBusObjectManagerServerPrivate

typealias GDBusObjectManagerServer = _GDBusObjectManagerServer

typealias GDBusProxyTypeFuncVar = CPointerVarOf<GDBusProxyTypeFunc>

typealias GDBusProxyTypeFunc = CPointer<CFunction<(CPointer<GDBusObjectManagerClient>?, CPointer<gcharVar>?, CPointer<gcharVar>?, gpointer?) -> GType>>

typealias GTestDBus = _GTestDBus

typealias GSubprocess = _GSubprocess

typealias GSubprocessLauncher = _GSubprocessLauncher

typealias GActionInterface = _GActionInterface

typealias GActionGroupInterface = _GActionGroupInterface

typealias GActionMapInterface = _GActionMapInterface

typealias GActionEntry = _GActionEntry

typealias GAppLaunchContextClass = _GAppLaunchContextClass

typealias GAppInfoIface = _GAppInfoIface

typealias GAppInfoMonitor = _GAppInfoMonitor

typealias GVariantBuilder = _GVariantBuilder

typealias GVariantDict = _GVariantDict

typealias GApplicationClass = _GApplicationClass

typealias GOptionEntry = _GOptionEntry

typealias GOptionGroup = _GOptionGroup

typealias GApplicationCommandLineClass = _GApplicationCommandLineClass

typealias GInitableIface = _GInitableIface

typealias GAsyncInitableIface = _GAsyncInitableIface

typealias GAsyncResultIface = _GAsyncResultIface

typealias gssizeVar = LongVarOf<gssize>

typealias gssize = Long

typealias GInputStreamClass = _GInputStreamClass

typealias GBytes = _GBytes

typealias GFilterInputStreamClass = _GFilterInputStreamClass

typealias GBufferedInputStreamClass = _GBufferedInputStreamClass

typealias GOutputStreamClass = _GOutputStreamClass

typealias GFilterOutputStreamClass = _GFilterOutputStreamClass

typealias GBufferedOutputStreamClass = _GBufferedOutputStreamClass

typealias GCancellableClass = _GCancellableClass

typealias gushortVar = UShortVarOf<gushort>

typealias gushort = UShort

typealias GPollFD = _GPollFD

typealias GConverterIface = _GConverterIface

typealias GCharsetConverterClass = _GCharsetConverterClass

typealias GConverterInputStreamClass = _GConverterInputStreamClass

typealias GConverterOutputStreamClass = _GConverterOutputStreamClass

typealias GCredentialsClass = _GCredentialsClass

typealias __pid_tVar = IntVarOf<__pid_t>

typealias __pid_t = Int

typealias pid_tVar = IntVarOf<pid_t>

typealias pid_t = __pid_t

typealias __uid_tVar = UIntVarOf<__uid_t>

typealias __uid_t = UInt

typealias uid_tVar = UIntVarOf<uid_t>

typealias uid_t = __uid_t

typealias GDatagramBasedInterface = _GDatagramBasedInterface

typealias GDataInputStreamClass = _GDataInputStreamClass

typealias gint16Var = ShortVarOf<gint16>

typealias gint16 = Short

typealias gint32Var = IntVarOf<gint32>

typealias gint32 = Int

typealias GDataOutputStreamPrivate = _GDataOutputStreamPrivate

typealias GDataOutputStream = _GDataOutputStream

typealias GDataOutputStreamClass = _GDataOutputStreamClass

typealias GDBusSignalCallbackVar = CPointerVarOf<GDBusSignalCallback>

typealias GDBusSignalCallback = CPointer<CFunction<(CPointer<GDBusConnection>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<GVariant>?, gpointer?) -> Unit>>

typealias GDBusMessageFilterFunctionVar = CPointerVarOf<GDBusMessageFilterFunction>

typealias GDBusMessageFilterFunction = CPointer<CFunction<(CPointer<GDBusConnection>?, CPointer<GDBusMessage>?, gboolean, gpointer?) -> CPointer<GDBusMessage>?>>

typealias GString = _GString

typealias GBusAcquiredCallbackVar = CPointerVarOf<GBusAcquiredCallback>

typealias GBusAcquiredCallback = CPointer<CFunction<(CPointer<GDBusConnection>?, CPointer<gcharVar>?, gpointer?) -> Unit>>

typealias GBusNameAcquiredCallbackVar = CPointerVarOf<GBusNameAcquiredCallback>

typealias GBusNameAcquiredCallback = CPointer<CFunction<(CPointer<GDBusConnection>?, CPointer<gcharVar>?, gpointer?) -> Unit>>

typealias GBusNameLostCallbackVar = CPointerVarOf<GBusNameLostCallback>

typealias GBusNameLostCallback = CPointer<CFunction<(CPointer<GDBusConnection>?, CPointer<gcharVar>?, gpointer?) -> Unit>>

typealias GBusNameAppearedCallbackVar = CPointerVarOf<GBusNameAppearedCallback>

typealias GBusNameAppearedCallback = CPointer<CFunction<(CPointer<GDBusConnection>?, CPointer<gcharVar>?, CPointer<gcharVar>?, gpointer?) -> Unit>>

typealias GBusNameVanishedCallbackVar = CPointerVarOf<GBusNameVanishedCallback>

typealias GBusNameVanishedCallback = CPointer<CFunction<(CPointer<GDBusConnection>?, CPointer<gcharVar>?, gpointer?) -> Unit>>

typealias GDBusProxyClass = _GDBusProxyClass

typealias GDriveIface = _GDriveIface

typealias GDtlsConnectionInterface = _GDtlsConnectionInterface

typealias GDtlsClientConnectionInterface = _GDtlsClientConnectionInterface

typealias GDtlsServerConnectionInterface = _GDtlsServerConnectionInterface

typealias GPtrArray = _GPtrArray

typealias GIconIface = _GIconIface

typealias GEmblem = _GEmblem

typealias GEmblemClass = _GEmblemClass

typealias GEmblemedIconPrivate = _GEmblemedIconPrivate

typealias GEmblemedIcon = _GEmblemedIcon

typealias GEmblemedIconClass = _GEmblemedIconClass

typealias GFileEnumeratorClass = _GFileEnumeratorClass

typealias GFileIface = _GFileIface

typealias GFileIconClass = _GFileIconClass

typealias GFileInfoClass = _GFileInfoClass

typealias GDateTime = _GDateTime

typealias GTimeVal = _GTimeVal

typealias GFileInputStreamClass = _GFileInputStreamClass

typealias GIOStreamClass = _GIOStreamClass

typealias GFileIOStreamClass = _GFileIOStreamClass

typealias GFileMonitorClass = _GFileMonitorClass

typealias GFilenameCompleterClass = _GFilenameCompleterClass

typealias GFileOutputStreamClass = _GFileOutputStreamClass

typealias GInetAddressClass = _GInetAddressClass

typealias GInetAddressMaskClass = _GInetAddressMaskClass

typealias GSocketAddressClass = _GSocketAddressClass

typealias GInetSocketAddressClass = _GInetSocketAddressClass

typealias GIOModuleScope = _GIOModuleScope

typealias GIOModuleClass = _GIOModuleClass

typealias GLoadableIconIface = _GLoadableIconIface

typealias GMemoryInputStreamClass = _GMemoryInputStreamClass

typealias GMemoryOutputStreamClass = _GMemoryOutputStreamClass

typealias GReallocFuncVar = CPointerVarOf<GReallocFunc>

typealias GReallocFunc = CPointer<CFunction<(gpointer?, gsize) -> gpointer?>>

typealias GMountIface = _GMountIface

typealias GArray = _GArray

typealias GMountOperationClass = _GMountOperationClass

typealias GVolumeMonitorClass = _GVolumeMonitorClass

typealias GNativeVolumeMonitor = _GNativeVolumeMonitor

typealias GNativeVolumeMonitorClass = _GNativeVolumeMonitorClass

typealias GNetworkAddressClass = _GNetworkAddressClass

typealias GNetworkMonitorInterface = _GNetworkMonitorInterface

typealias GNetworkServiceClass = _GNetworkServiceClass

typealias GPermissionClass = _GPermissionClass

typealias GPollableInputStreamInterface = _GPollableInputStreamInterface

typealias GPollableOutputStreamInterface = _GPollableOutputStreamInterface

typealias GProxyInterface = _GProxyInterface

typealias GProxyAddressClass = _GProxyAddressClass

typealias GSocketAddressEnumeratorClass = _GSocketAddressEnumeratorClass

typealias GProxyAddressEnumeratorClass = _GProxyAddressEnumeratorClass

typealias GProxyResolverInterface = _GProxyResolverInterface

typealias GResolverClass = _GResolverClass

typealias GStaticResource = _GStaticResource

typealias GSeekableIface = _GSeekableIface

typealias GSettingsSchemaSource = _GSettingsSchemaSource

typealias GSettingsSchema = _GSettingsSchema

typealias GSettingsSchemaKey = _GSettingsSchemaKey

typealias GSettingsClass = _GSettingsClass

typealias GSettingsBindSetMappingVar = CPointerVarOf<GSettingsBindSetMapping>

typealias GSettingsBindSetMapping = CPointer<CFunction<(CPointer<GValue>?, CPointer<GVariantType>?, gpointer?) -> CPointer<GVariant>?>>

typealias GSettingsBindGetMappingVar = CPointerVarOf<GSettingsBindGetMapping>

typealias GSettingsBindGetMapping = CPointer<CFunction<(CPointer<GValue>?, CPointer<GVariant>?, gpointer?) -> gboolean>>

typealias GSettingsGetMappingVar = CPointerVarOf<GSettingsGetMapping>

typealias GSettingsGetMapping = CPointer<CFunction<(CPointer<GVariant>?, CPointer<gpointerVar>?, gpointer?) -> gboolean>>

typealias GSimpleActionGroupClass = _GSimpleActionGroupClass

typealias GSimpleAsyncResultClass = _GSimpleAsyncResultClass

typealias GSocketClientClass = _GSocketClientClass

typealias GSocketConnectableIface = _GSocketConnectableIface

typealias GSocketClass = _GSocketClass

typealias GSocketConnectionClass = _GSocketConnectionClass

typealias GSocketControlMessageClass = _GSocketControlMessageClass

typealias GSocketListenerClass = _GSocketListenerClass

typealias GSocketServiceClass = _GSocketServiceClass

typealias GSimpleProxyResolverPrivate = _GSimpleProxyResolverPrivate

typealias GSimpleProxyResolver = _GSimpleProxyResolver

typealias GSimpleProxyResolverClass = _GSimpleProxyResolverClass

typealias GTaskClass = _GTaskClass

typealias GTaskThreadFuncVar = CPointerVarOf<GTaskThreadFunc>

typealias GTaskThreadFunc = CPointer<CFunction<(CPointer<GTask>?, gpointer?, gpointer?, CPointer<GCancellable>?) -> Unit>>

typealias GSpawnChildSetupFuncVar = CPointerVarOf<GSpawnChildSetupFunc>

typealias GSpawnChildSetupFunc = CPointer<CFunction<(gpointer?) -> Unit>>

typealias GTcpConnectionClass = _GTcpConnectionClass

typealias GTcpWrapperConnectionClass = _GTcpWrapperConnectionClass

typealias GThemedIconClass = _GThemedIconClass

typealias GThreadedSocketServiceClass = _GThreadedSocketServiceClass

typealias GTlsBackend = _GTlsBackend

typealias GTlsBackendInterface = _GTlsBackendInterface

typealias GTlsCertificateClass = _GTlsCertificateClass

typealias GTlsConnectionClass = _GTlsConnectionClass

typealias GTlsClientConnectionInterface = _GTlsClientConnectionInterface

typealias GByteArray = _GByteArray

typealias GTlsDatabaseClass = _GTlsDatabaseClass

typealias GTlsFileDatabaseInterface = _GTlsFileDatabaseInterface

typealias GTlsInteractionClass = _GTlsInteractionClass

typealias GTlsServerConnectionInterface = _GTlsServerConnectionInterface

typealias GTlsPasswordClass = _GTlsPasswordClass

typealias GVfsFileLookupFuncVar = CPointerVarOf<GVfsFileLookupFunc>

typealias GVfsFileLookupFunc = CPointer<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?, gpointer?) -> CPointer<GFile>?>>

typealias GVfsClass = _GVfsClass

typealias GVolumeIface = _GVolumeIface

typealias GZlibCompressorClass = _GZlibCompressorClass

typealias GZlibDecompressorClass = _GZlibDecompressorClass

typealias GDBusInterfaceIface = _GDBusInterfaceIface

typealias GDBusInterfaceSkeletonClass = _GDBusInterfaceSkeletonClass

typealias GDBusObjectIface = _GDBusObjectIface

typealias GDBusObjectSkeletonClass = _GDBusObjectSkeletonClass

typealias GDBusObjectProxyClass = _GDBusObjectProxyClass

typealias GDBusObjectManagerIface = _GDBusObjectManagerIface

typealias GDBusObjectManagerClientClass = _GDBusObjectManagerClientClass

typealias GDBusObjectManagerServerClass = _GDBusObjectManagerServerClass

typealias GRemoteActionGroupInterface = _GRemoteActionGroupInterface

typealias GHashTable = _GHashTable

typealias GMenuAttributeIterPrivate = _GMenuAttributeIterPrivate

typealias GMenuAttributeIter = _GMenuAttributeIter

typealias GMenuLinkIterPrivate = _GMenuLinkIterPrivate

typealias GMenuLinkIter = _GMenuLinkIter

typealias GMenuModelClass = _GMenuModelClass

typealias GMenuAttributeIterClass = _GMenuAttributeIterClass

typealias GMenuLinkIterClass = _GMenuLinkIterClass

typealias GMenuItem = _GMenuItem

typealias GMenu = _GMenu

typealias GDBusMenuModel = _GDBusMenuModel

typealias GListModel = _GListModel

typealias GListModelInterface = _GListModelInterface

typealias GListModel_autoptrVar = CPointerVarOf<GListModel_autoptr>

typealias GListModel_autoptr = CPointer<GListModel>

typealias GListStore = _GListStore

typealias GListStore_autoptrVar = CPointerVarOf<GListStore_autoptr>

typealias GListStore_autoptr = CPointer<GListStore>

typealias GAction_autoptrVar = CPointerVarOf<GAction_autoptr>

typealias GAction_autoptr = CPointer<GAction>

typealias GAction_listautoptrVar = CPointerVarOf<GAction_listautoptr>

typealias GAction_listautoptr = CPointer<GList>

typealias GAction_slistautoptrVar = CPointerVarOf<GAction_slistautoptr>

typealias GAction_slistautoptr = CPointer<GSList>

typealias GActionMap_autoptrVar = CPointerVarOf<GActionMap_autoptr>

typealias GActionMap_autoptr = CPointer<GActionMap>

typealias GActionMap_listautoptrVar = CPointerVarOf<GActionMap_listautoptr>

typealias GActionMap_listautoptr = CPointer<GList>

typealias GActionMap_slistautoptrVar = CPointerVarOf<GActionMap_slistautoptr>

typealias GActionMap_slistautoptr = CPointer<GSList>

typealias GAppInfo_autoptrVar = CPointerVarOf<GAppInfo_autoptr>

typealias GAppInfo_autoptr = CPointer<GAppInfo>

typealias GAppInfo_listautoptrVar = CPointerVarOf<GAppInfo_listautoptr>

typealias GAppInfo_listautoptr = CPointer<GList>

typealias GAppInfo_slistautoptrVar = CPointerVarOf<GAppInfo_slistautoptr>

typealias GAppInfo_slistautoptr = CPointer<GSList>

typealias GAppLaunchContext_autoptrVar = CPointerVarOf<GAppLaunchContext_autoptr>

typealias GAppLaunchContext_autoptr = CPointer<GAppLaunchContext>

typealias GAppLaunchContext_listautoptrVar = CPointerVarOf<GAppLaunchContext_listautoptr>

typealias GAppLaunchContext_listautoptr = CPointer<GList>

typealias GAppLaunchContext_slistautoptrVar = CPointerVarOf<GAppLaunchContext_slistautoptr>

typealias GAppLaunchContext_slistautoptr = CPointer<GSList>

typealias GAppInfoMonitor_autoptrVar = CPointerVarOf<GAppInfoMonitor_autoptr>

typealias GAppInfoMonitor_autoptr = CPointer<GAppInfoMonitor>

typealias GAppInfoMonitor_listautoptrVar = CPointerVarOf<GAppInfoMonitor_listautoptr>

typealias GAppInfoMonitor_listautoptr = CPointer<GList>

typealias GAppInfoMonitor_slistautoptrVar = CPointerVarOf<GAppInfoMonitor_slistautoptr>

typealias GAppInfoMonitor_slistautoptr = CPointer<GSList>

typealias GApplicationCommandLine_autoptrVar = CPointerVarOf<GApplicationCommandLine_autoptr>

typealias GApplicationCommandLine_autoptr = CPointer<GApplicationCommandLine>

typealias GApplicationCommandLine_listautoptrVar = CPointerVarOf<GApplicationCommandLine_listautoptr>

typealias GApplicationCommandLine_listautoptr = CPointer<GList>

typealias GApplicationCommandLine_slistautoptrVar = CPointerVarOf<GApplicationCommandLine_slistautoptr>

typealias GApplicationCommandLine_slistautoptr = CPointer<GSList>

typealias GApplication_autoptrVar = CPointerVarOf<GApplication_autoptr>

typealias GApplication_autoptr = CPointer<GApplication>

typealias GApplication_listautoptrVar = CPointerVarOf<GApplication_listautoptr>

typealias GApplication_listautoptr = CPointer<GList>

typealias GApplication_slistautoptrVar = CPointerVarOf<GApplication_slistautoptr>

typealias GApplication_slistautoptr = CPointer<GSList>

typealias GAsyncInitable_autoptrVar = CPointerVarOf<GAsyncInitable_autoptr>

typealias GAsyncInitable_autoptr = CPointer<GAsyncInitable>

typealias GAsyncInitable_listautoptrVar = CPointerVarOf<GAsyncInitable_listautoptr>

typealias GAsyncInitable_listautoptr = CPointer<GList>

typealias GAsyncInitable_slistautoptrVar = CPointerVarOf<GAsyncInitable_slistautoptr>

typealias GAsyncInitable_slistautoptr = CPointer<GSList>

typealias GAsyncResult_autoptrVar = CPointerVarOf<GAsyncResult_autoptr>

typealias GAsyncResult_autoptr = CPointer<GAsyncResult>

typealias GAsyncResult_listautoptrVar = CPointerVarOf<GAsyncResult_listautoptr>

typealias GAsyncResult_listautoptr = CPointer<GList>

typealias GAsyncResult_slistautoptrVar = CPointerVarOf<GAsyncResult_slistautoptr>

typealias GAsyncResult_slistautoptr = CPointer<GSList>

typealias GBufferedInputStream_autoptrVar = CPointerVarOf<GBufferedInputStream_autoptr>

typealias GBufferedInputStream_autoptr = CPointer<GBufferedInputStream>

typealias GBufferedInputStream_listautoptrVar = CPointerVarOf<GBufferedInputStream_listautoptr>

typealias GBufferedInputStream_listautoptr = CPointer<GList>

typealias GBufferedInputStream_slistautoptrVar = CPointerVarOf<GBufferedInputStream_slistautoptr>

typealias GBufferedInputStream_slistautoptr = CPointer<GSList>

typealias GBufferedOutputStream_autoptrVar = CPointerVarOf<GBufferedOutputStream_autoptr>

typealias GBufferedOutputStream_autoptr = CPointer<GBufferedOutputStream>

typealias GBufferedOutputStream_listautoptrVar = CPointerVarOf<GBufferedOutputStream_listautoptr>

typealias GBufferedOutputStream_listautoptr = CPointer<GList>

typealias GBufferedOutputStream_slistautoptrVar = CPointerVarOf<GBufferedOutputStream_slistautoptr>

typealias GBufferedOutputStream_slistautoptr = CPointer<GSList>

typealias GBytesIcon_autoptrVar = CPointerVarOf<GBytesIcon_autoptr>

typealias GBytesIcon_autoptr = CPointer<GBytesIcon>

typealias GBytesIcon_listautoptrVar = CPointerVarOf<GBytesIcon_listautoptr>

typealias GBytesIcon_listautoptr = CPointer<GList>

typealias GBytesIcon_slistautoptrVar = CPointerVarOf<GBytesIcon_slistautoptr>

typealias GBytesIcon_slistautoptr = CPointer<GSList>

typealias GCancellable_autoptrVar = CPointerVarOf<GCancellable_autoptr>

typealias GCancellable_autoptr = CPointer<GCancellable>

typealias GCancellable_listautoptrVar = CPointerVarOf<GCancellable_listautoptr>

typealias GCancellable_listautoptr = CPointer<GList>

typealias GCancellable_slistautoptrVar = CPointerVarOf<GCancellable_slistautoptr>

typealias GCancellable_slistautoptr = CPointer<GSList>

typealias GCharsetConverter_autoptrVar = CPointerVarOf<GCharsetConverter_autoptr>

typealias GCharsetConverter_autoptr = CPointer<GCharsetConverter>

typealias GCharsetConverter_listautoptrVar = CPointerVarOf<GCharsetConverter_listautoptr>

typealias GCharsetConverter_listautoptr = CPointer<GList>

typealias GCharsetConverter_slistautoptrVar = CPointerVarOf<GCharsetConverter_slistautoptr>

typealias GCharsetConverter_slistautoptr = CPointer<GSList>

typealias GConverter_autoptrVar = CPointerVarOf<GConverter_autoptr>

typealias GConverter_autoptr = CPointer<GConverter>

typealias GConverter_listautoptrVar = CPointerVarOf<GConverter_listautoptr>

typealias GConverter_listautoptr = CPointer<GList>

typealias GConverter_slistautoptrVar = CPointerVarOf<GConverter_slistautoptr>

typealias GConverter_slistautoptr = CPointer<GSList>

typealias GConverterInputStream_autoptrVar = CPointerVarOf<GConverterInputStream_autoptr>

typealias GConverterInputStream_autoptr = CPointer<GConverterInputStream>

typealias GConverterInputStream_listautoptrVar = CPointerVarOf<GConverterInputStream_listautoptr>

typealias GConverterInputStream_listautoptr = CPointer<GList>

typealias GConverterInputStream_slistautoptrVar = CPointerVarOf<GConverterInputStream_slistautoptr>

typealias GConverterInputStream_slistautoptr = CPointer<GSList>

typealias GConverterOutputStream_autoptrVar = CPointerVarOf<GConverterOutputStream_autoptr>

typealias GConverterOutputStream_autoptr = CPointer<GConverterOutputStream>

typealias GConverterOutputStream_listautoptrVar = CPointerVarOf<GConverterOutputStream_listautoptr>

typealias GConverterOutputStream_listautoptr = CPointer<GList>

typealias GConverterOutputStream_slistautoptrVar = CPointerVarOf<GConverterOutputStream_slistautoptr>

typealias GConverterOutputStream_slistautoptr = CPointer<GSList>

typealias GCredentials_autoptrVar = CPointerVarOf<GCredentials_autoptr>

typealias GCredentials_autoptr = CPointer<GCredentials>

typealias GCredentials_listautoptrVar = CPointerVarOf<GCredentials_listautoptr>

typealias GCredentials_listautoptr = CPointer<GList>

typealias GCredentials_slistautoptrVar = CPointerVarOf<GCredentials_slistautoptr>

typealias GCredentials_slistautoptr = CPointer<GSList>

typealias GDatagramBased_autoptrVar = CPointerVarOf<GDatagramBased_autoptr>

typealias GDatagramBased_autoptr = CPointer<GDatagramBased>

typealias GDatagramBased_listautoptrVar = CPointerVarOf<GDatagramBased_listautoptr>

typealias GDatagramBased_listautoptr = CPointer<GList>

typealias GDatagramBased_slistautoptrVar = CPointerVarOf<GDatagramBased_slistautoptr>

typealias GDatagramBased_slistautoptr = CPointer<GSList>

typealias GDataInputStream_autoptrVar = CPointerVarOf<GDataInputStream_autoptr>

typealias GDataInputStream_autoptr = CPointer<GDataInputStream>

typealias GDataInputStream_listautoptrVar = CPointerVarOf<GDataInputStream_listautoptr>

typealias GDataInputStream_listautoptr = CPointer<GList>

typealias GDataInputStream_slistautoptrVar = CPointerVarOf<GDataInputStream_slistautoptr>

typealias GDataInputStream_slistautoptr = CPointer<GSList>

typealias GDataOutputStream_autoptrVar = CPointerVarOf<GDataOutputStream_autoptr>

typealias GDataOutputStream_autoptr = CPointer<GDataOutputStream>

typealias GDataOutputStream_listautoptrVar = CPointerVarOf<GDataOutputStream_listautoptr>

typealias GDataOutputStream_listautoptr = CPointer<GList>

typealias GDataOutputStream_slistautoptrVar = CPointerVarOf<GDataOutputStream_slistautoptr>

typealias GDataOutputStream_slistautoptr = CPointer<GSList>

typealias GDBusActionGroup_autoptrVar = CPointerVarOf<GDBusActionGroup_autoptr>

typealias GDBusActionGroup_autoptr = CPointer<GDBusActionGroup>

typealias GDBusActionGroup_listautoptrVar = CPointerVarOf<GDBusActionGroup_listautoptr>

typealias GDBusActionGroup_listautoptr = CPointer<GList>

typealias GDBusActionGroup_slistautoptrVar = CPointerVarOf<GDBusActionGroup_slistautoptr>

typealias GDBusActionGroup_slistautoptr = CPointer<GSList>

typealias GDBusAuthObserver_autoptrVar = CPointerVarOf<GDBusAuthObserver_autoptr>

typealias GDBusAuthObserver_autoptr = CPointer<GDBusAuthObserver>

typealias GDBusAuthObserver_listautoptrVar = CPointerVarOf<GDBusAuthObserver_listautoptr>

typealias GDBusAuthObserver_listautoptr = CPointer<GList>

typealias GDBusAuthObserver_slistautoptrVar = CPointerVarOf<GDBusAuthObserver_slistautoptr>

typealias GDBusAuthObserver_slistautoptr = CPointer<GSList>

typealias GDBusConnection_autoptrVar = CPointerVarOf<GDBusConnection_autoptr>

typealias GDBusConnection_autoptr = CPointer<GDBusConnection>

typealias GDBusConnection_listautoptrVar = CPointerVarOf<GDBusConnection_listautoptr>

typealias GDBusConnection_listautoptr = CPointer<GList>

typealias GDBusConnection_slistautoptrVar = CPointerVarOf<GDBusConnection_slistautoptr>

typealias GDBusConnection_slistautoptr = CPointer<GSList>

typealias GDBusInterface_autoptrVar = CPointerVarOf<GDBusInterface_autoptr>

typealias GDBusInterface_autoptr = CPointer<GDBusInterface>

typealias GDBusInterface_listautoptrVar = CPointerVarOf<GDBusInterface_listautoptr>

typealias GDBusInterface_listautoptr = CPointer<GList>

typealias GDBusInterface_slistautoptrVar = CPointerVarOf<GDBusInterface_slistautoptr>

typealias GDBusInterface_slistautoptr = CPointer<GSList>

typealias GDBusInterfaceSkeleton_autoptrVar = CPointerVarOf<GDBusInterfaceSkeleton_autoptr>

typealias GDBusInterfaceSkeleton_autoptr = CPointer<GDBusInterfaceSkeleton>

typealias GDBusInterfaceSkeleton_listautoptrVar = CPointerVarOf<GDBusInterfaceSkeleton_listautoptr>

typealias GDBusInterfaceSkeleton_listautoptr = CPointer<GList>

typealias GDBusInterfaceSkeleton_slistautoptrVar = CPointerVarOf<GDBusInterfaceSkeleton_slistautoptr>

typealias GDBusInterfaceSkeleton_slistautoptr = CPointer<GSList>

typealias GDBusMenuModel_autoptrVar = CPointerVarOf<GDBusMenuModel_autoptr>

typealias GDBusMenuModel_autoptr = CPointer<GDBusMenuModel>

typealias GDBusMenuModel_listautoptrVar = CPointerVarOf<GDBusMenuModel_listautoptr>

typealias GDBusMenuModel_listautoptr = CPointer<GList>

typealias GDBusMenuModel_slistautoptrVar = CPointerVarOf<GDBusMenuModel_slistautoptr>

typealias GDBusMenuModel_slistautoptr = CPointer<GSList>

typealias GDBusMessage_autoptrVar = CPointerVarOf<GDBusMessage_autoptr>

typealias GDBusMessage_autoptr = CPointer<GDBusMessage>

typealias GDBusMessage_listautoptrVar = CPointerVarOf<GDBusMessage_listautoptr>

typealias GDBusMessage_listautoptr = CPointer<GList>

typealias GDBusMessage_slistautoptrVar = CPointerVarOf<GDBusMessage_slistautoptr>

typealias GDBusMessage_slistautoptr = CPointer<GSList>

typealias GDBusMethodInvocation_autoptrVar = CPointerVarOf<GDBusMethodInvocation_autoptr>

typealias GDBusMethodInvocation_autoptr = CPointer<GDBusMethodInvocation>

typealias GDBusMethodInvocation_listautoptrVar = CPointerVarOf<GDBusMethodInvocation_listautoptr>

typealias GDBusMethodInvocation_listautoptr = CPointer<GList>

typealias GDBusMethodInvocation_slistautoptrVar = CPointerVarOf<GDBusMethodInvocation_slistautoptr>

typealias GDBusMethodInvocation_slistautoptr = CPointer<GSList>

typealias GDBusNodeInfo_autoptrVar = CPointerVarOf<GDBusNodeInfo_autoptr>

typealias GDBusNodeInfo_autoptr = CPointer<GDBusNodeInfo>

typealias GDBusNodeInfo_listautoptrVar = CPointerVarOf<GDBusNodeInfo_listautoptr>

typealias GDBusNodeInfo_listautoptr = CPointer<GList>

typealias GDBusNodeInfo_slistautoptrVar = CPointerVarOf<GDBusNodeInfo_slistautoptr>

typealias GDBusNodeInfo_slistautoptr = CPointer<GSList>

typealias GDBusObject_autoptrVar = CPointerVarOf<GDBusObject_autoptr>

typealias GDBusObject_autoptr = CPointer<GDBusObject>

typealias GDBusObject_listautoptrVar = CPointerVarOf<GDBusObject_listautoptr>

typealias GDBusObject_listautoptr = CPointer<GList>

typealias GDBusObject_slistautoptrVar = CPointerVarOf<GDBusObject_slistautoptr>

typealias GDBusObject_slistautoptr = CPointer<GSList>

typealias GDBusObjectManagerClient_autoptrVar = CPointerVarOf<GDBusObjectManagerClient_autoptr>

typealias GDBusObjectManagerClient_autoptr = CPointer<GDBusObjectManagerClient>

typealias GDBusObjectManagerClient_listautoptrVar = CPointerVarOf<GDBusObjectManagerClient_listautoptr>

typealias GDBusObjectManagerClient_listautoptr = CPointer<GList>

typealias GDBusObjectManagerClient_slistautoptrVar = CPointerVarOf<GDBusObjectManagerClient_slistautoptr>

typealias GDBusObjectManagerClient_slistautoptr = CPointer<GSList>

typealias GDBusObjectManager_autoptrVar = CPointerVarOf<GDBusObjectManager_autoptr>

typealias GDBusObjectManager_autoptr = CPointer<GDBusObjectManager>

typealias GDBusObjectManager_listautoptrVar = CPointerVarOf<GDBusObjectManager_listautoptr>

typealias GDBusObjectManager_listautoptr = CPointer<GList>

typealias GDBusObjectManager_slistautoptrVar = CPointerVarOf<GDBusObjectManager_slistautoptr>

typealias GDBusObjectManager_slistautoptr = CPointer<GSList>

typealias GDBusObjectManagerServer_autoptrVar = CPointerVarOf<GDBusObjectManagerServer_autoptr>

typealias GDBusObjectManagerServer_autoptr = CPointer<GDBusObjectManagerServer>

typealias GDBusObjectManagerServer_listautoptrVar = CPointerVarOf<GDBusObjectManagerServer_listautoptr>

typealias GDBusObjectManagerServer_listautoptr = CPointer<GList>

typealias GDBusObjectManagerServer_slistautoptrVar = CPointerVarOf<GDBusObjectManagerServer_slistautoptr>

typealias GDBusObjectManagerServer_slistautoptr = CPointer<GSList>

typealias GDBusObjectProxy_autoptrVar = CPointerVarOf<GDBusObjectProxy_autoptr>

typealias GDBusObjectProxy_autoptr = CPointer<GDBusObjectProxy>

typealias GDBusObjectProxy_listautoptrVar = CPointerVarOf<GDBusObjectProxy_listautoptr>

typealias GDBusObjectProxy_listautoptr = CPointer<GList>

typealias GDBusObjectProxy_slistautoptrVar = CPointerVarOf<GDBusObjectProxy_slistautoptr>

typealias GDBusObjectProxy_slistautoptr = CPointer<GSList>

typealias GDBusObjectSkeleton_autoptrVar = CPointerVarOf<GDBusObjectSkeleton_autoptr>

typealias GDBusObjectSkeleton_autoptr = CPointer<GDBusObjectSkeleton>

typealias GDBusObjectSkeleton_listautoptrVar = CPointerVarOf<GDBusObjectSkeleton_listautoptr>

typealias GDBusObjectSkeleton_listautoptr = CPointer<GList>

typealias GDBusObjectSkeleton_slistautoptrVar = CPointerVarOf<GDBusObjectSkeleton_slistautoptr>

typealias GDBusObjectSkeleton_slistautoptr = CPointer<GSList>

typealias GDBusProxy_autoptrVar = CPointerVarOf<GDBusProxy_autoptr>

typealias GDBusProxy_autoptr = CPointer<GDBusProxy>

typealias GDBusProxy_listautoptrVar = CPointerVarOf<GDBusProxy_listautoptr>

typealias GDBusProxy_listautoptr = CPointer<GList>

typealias GDBusProxy_slistautoptrVar = CPointerVarOf<GDBusProxy_slistautoptr>

typealias GDBusProxy_slistautoptr = CPointer<GSList>

typealias GDBusServer_autoptrVar = CPointerVarOf<GDBusServer_autoptr>

typealias GDBusServer_autoptr = CPointer<GDBusServer>

typealias GDBusServer_listautoptrVar = CPointerVarOf<GDBusServer_listautoptr>

typealias GDBusServer_listautoptr = CPointer<GList>

typealias GDBusServer_slistautoptrVar = CPointerVarOf<GDBusServer_slistautoptr>

typealias GDBusServer_slistautoptr = CPointer<GSList>

typealias GDrive_autoptrVar = CPointerVarOf<GDrive_autoptr>

typealias GDrive_autoptr = CPointer<GDrive>

typealias GDrive_listautoptrVar = CPointerVarOf<GDrive_listautoptr>

typealias GDrive_listautoptr = CPointer<GList>

typealias GDrive_slistautoptrVar = CPointerVarOf<GDrive_slistautoptr>

typealias GDrive_slistautoptr = CPointer<GSList>

typealias GEmblemedIcon_autoptrVar = CPointerVarOf<GEmblemedIcon_autoptr>

typealias GEmblemedIcon_autoptr = CPointer<GEmblemedIcon>

typealias GEmblemedIcon_listautoptrVar = CPointerVarOf<GEmblemedIcon_listautoptr>

typealias GEmblemedIcon_listautoptr = CPointer<GList>

typealias GEmblemedIcon_slistautoptrVar = CPointerVarOf<GEmblemedIcon_slistautoptr>

typealias GEmblemedIcon_slistautoptr = CPointer<GSList>

typealias GEmblem_autoptrVar = CPointerVarOf<GEmblem_autoptr>

typealias GEmblem_autoptr = CPointer<GEmblem>

typealias GEmblem_listautoptrVar = CPointerVarOf<GEmblem_listautoptr>

typealias GEmblem_listautoptr = CPointer<GList>

typealias GEmblem_slistautoptrVar = CPointerVarOf<GEmblem_slistautoptr>

typealias GEmblem_slistautoptr = CPointer<GSList>

typealias GFileEnumerator_autoptrVar = CPointerVarOf<GFileEnumerator_autoptr>

typealias GFileEnumerator_autoptr = CPointer<GFileEnumerator>

typealias GFileEnumerator_listautoptrVar = CPointerVarOf<GFileEnumerator_listautoptr>

typealias GFileEnumerator_listautoptr = CPointer<GList>

typealias GFileEnumerator_slistautoptrVar = CPointerVarOf<GFileEnumerator_slistautoptr>

typealias GFileEnumerator_slistautoptr = CPointer<GSList>

typealias GFile_autoptrVar = CPointerVarOf<GFile_autoptr>

typealias GFile_autoptr = CPointer<GFile>

typealias GFile_listautoptrVar = CPointerVarOf<GFile_listautoptr>

typealias GFile_listautoptr = CPointer<GList>

typealias GFile_slistautoptrVar = CPointerVarOf<GFile_slistautoptr>

typealias GFile_slistautoptr = CPointer<GSList>

typealias GFileAttributeInfoList_autoptrVar = CPointerVarOf<GFileAttributeInfoList_autoptr>

typealias GFileAttributeInfoList_autoptr = CPointer<GFileAttributeInfoList>

typealias GFileAttributeInfoList_listautoptrVar = CPointerVarOf<GFileAttributeInfoList_listautoptr>

typealias GFileAttributeInfoList_listautoptr = CPointer<GList>

typealias GFileAttributeInfoList_slistautoptrVar = CPointerVarOf<GFileAttributeInfoList_slistautoptr>

typealias GFileAttributeInfoList_slistautoptr = CPointer<GSList>

typealias GFileIcon_autoptrVar = CPointerVarOf<GFileIcon_autoptr>

typealias GFileIcon_autoptr = CPointer<GFileIcon>

typealias GFileIcon_listautoptrVar = CPointerVarOf<GFileIcon_listautoptr>

typealias GFileIcon_listautoptr = CPointer<GList>

typealias GFileIcon_slistautoptrVar = CPointerVarOf<GFileIcon_slistautoptr>

typealias GFileIcon_slistautoptr = CPointer<GSList>

typealias GFileInfo_autoptrVar = CPointerVarOf<GFileInfo_autoptr>

typealias GFileInfo_autoptr = CPointer<GFileInfo>

typealias GFileInfo_listautoptrVar = CPointerVarOf<GFileInfo_listautoptr>

typealias GFileInfo_listautoptr = CPointer<GList>

typealias GFileInfo_slistautoptrVar = CPointerVarOf<GFileInfo_slistautoptr>

typealias GFileInfo_slistautoptr = CPointer<GSList>

typealias GFileInputStream_autoptrVar = CPointerVarOf<GFileInputStream_autoptr>

typealias GFileInputStream_autoptr = CPointer<GFileInputStream>

typealias GFileInputStream_listautoptrVar = CPointerVarOf<GFileInputStream_listautoptr>

typealias GFileInputStream_listautoptr = CPointer<GList>

typealias GFileInputStream_slistautoptrVar = CPointerVarOf<GFileInputStream_slistautoptr>

typealias GFileInputStream_slistautoptr = CPointer<GSList>

typealias GFileIOStream_autoptrVar = CPointerVarOf<GFileIOStream_autoptr>

typealias GFileIOStream_autoptr = CPointer<GFileIOStream>

typealias GFileIOStream_listautoptrVar = CPointerVarOf<GFileIOStream_listautoptr>

typealias GFileIOStream_listautoptr = CPointer<GList>

typealias GFileIOStream_slistautoptrVar = CPointerVarOf<GFileIOStream_slistautoptr>

typealias GFileIOStream_slistautoptr = CPointer<GSList>

typealias GFileMonitor_autoptrVar = CPointerVarOf<GFileMonitor_autoptr>

typealias GFileMonitor_autoptr = CPointer<GFileMonitor>

typealias GFileMonitor_listautoptrVar = CPointerVarOf<GFileMonitor_listautoptr>

typealias GFileMonitor_listautoptr = CPointer<GList>

typealias GFileMonitor_slistautoptrVar = CPointerVarOf<GFileMonitor_slistautoptr>

typealias GFileMonitor_slistautoptr = CPointer<GSList>

typealias GFilenameCompleter_autoptrVar = CPointerVarOf<GFilenameCompleter_autoptr>

typealias GFilenameCompleter_autoptr = CPointer<GFilenameCompleter>

typealias GFilenameCompleter_listautoptrVar = CPointerVarOf<GFilenameCompleter_listautoptr>

typealias GFilenameCompleter_listautoptr = CPointer<GList>

typealias GFilenameCompleter_slistautoptrVar = CPointerVarOf<GFilenameCompleter_slistautoptr>

typealias GFilenameCompleter_slistautoptr = CPointer<GSList>

typealias GFileOutputStream_autoptrVar = CPointerVarOf<GFileOutputStream_autoptr>

typealias GFileOutputStream_autoptr = CPointer<GFileOutputStream>

typealias GFileOutputStream_listautoptrVar = CPointerVarOf<GFileOutputStream_listautoptr>

typealias GFileOutputStream_listautoptr = CPointer<GList>

typealias GFileOutputStream_slistautoptrVar = CPointerVarOf<GFileOutputStream_slistautoptr>

typealias GFileOutputStream_slistautoptr = CPointer<GSList>

typealias GFilterInputStream_autoptrVar = CPointerVarOf<GFilterInputStream_autoptr>

typealias GFilterInputStream_autoptr = CPointer<GFilterInputStream>

typealias GFilterInputStream_listautoptrVar = CPointerVarOf<GFilterInputStream_listautoptr>

typealias GFilterInputStream_listautoptr = CPointer<GList>

typealias GFilterInputStream_slistautoptrVar = CPointerVarOf<GFilterInputStream_slistautoptr>

typealias GFilterInputStream_slistautoptr = CPointer<GSList>

typealias GFilterOutputStream_autoptrVar = CPointerVarOf<GFilterOutputStream_autoptr>

typealias GFilterOutputStream_autoptr = CPointer<GFilterOutputStream>

typealias GFilterOutputStream_listautoptrVar = CPointerVarOf<GFilterOutputStream_listautoptr>

typealias GFilterOutputStream_listautoptr = CPointer<GList>

typealias GFilterOutputStream_slistautoptrVar = CPointerVarOf<GFilterOutputStream_slistautoptr>

typealias GFilterOutputStream_slistautoptr = CPointer<GSList>

typealias GIcon_autoptrVar = CPointerVarOf<GIcon_autoptr>

typealias GIcon_autoptr = CPointer<GIcon>

typealias GIcon_listautoptrVar = CPointerVarOf<GIcon_listautoptr>

typealias GIcon_listautoptr = CPointer<GList>

typealias GIcon_slistautoptrVar = CPointerVarOf<GIcon_slistautoptr>

typealias GIcon_slistautoptr = CPointer<GSList>

typealias GInetAddress_autoptrVar = CPointerVarOf<GInetAddress_autoptr>

typealias GInetAddress_autoptr = CPointer<GInetAddress>

typealias GInetAddress_listautoptrVar = CPointerVarOf<GInetAddress_listautoptr>

typealias GInetAddress_listautoptr = CPointer<GList>

typealias GInetAddress_slistautoptrVar = CPointerVarOf<GInetAddress_slistautoptr>

typealias GInetAddress_slistautoptr = CPointer<GSList>

typealias GInetAddressMask_autoptrVar = CPointerVarOf<GInetAddressMask_autoptr>

typealias GInetAddressMask_autoptr = CPointer<GInetAddressMask>

typealias GInetAddressMask_listautoptrVar = CPointerVarOf<GInetAddressMask_listautoptr>

typealias GInetAddressMask_listautoptr = CPointer<GList>

typealias GInetAddressMask_slistautoptrVar = CPointerVarOf<GInetAddressMask_slistautoptr>

typealias GInetAddressMask_slistautoptr = CPointer<GSList>

typealias GInetSocketAddress_autoptrVar = CPointerVarOf<GInetSocketAddress_autoptr>

typealias GInetSocketAddress_autoptr = CPointer<GInetSocketAddress>

typealias GInetSocketAddress_listautoptrVar = CPointerVarOf<GInetSocketAddress_listautoptr>

typealias GInetSocketAddress_listautoptr = CPointer<GList>

typealias GInetSocketAddress_slistautoptrVar = CPointerVarOf<GInetSocketAddress_slistautoptr>

typealias GInetSocketAddress_slistautoptr = CPointer<GSList>

typealias GInitable_autoptrVar = CPointerVarOf<GInitable_autoptr>

typealias GInitable_autoptr = CPointer<GInitable>

typealias GInitable_listautoptrVar = CPointerVarOf<GInitable_listautoptr>

typealias GInitable_listautoptr = CPointer<GList>

typealias GInitable_slistautoptrVar = CPointerVarOf<GInitable_slistautoptr>

typealias GInitable_slistautoptr = CPointer<GSList>

typealias GInputStream_autoptrVar = CPointerVarOf<GInputStream_autoptr>

typealias GInputStream_autoptr = CPointer<GInputStream>

typealias GInputStream_listautoptrVar = CPointerVarOf<GInputStream_listautoptr>

typealias GInputStream_listautoptr = CPointer<GList>

typealias GInputStream_slistautoptrVar = CPointerVarOf<GInputStream_slistautoptr>

typealias GInputStream_slistautoptr = CPointer<GSList>

typealias GIOModule_autoptrVar = CPointerVarOf<GIOModule_autoptr>

typealias GIOModule_autoptr = CPointer<GIOModule>

typealias GIOModule_listautoptrVar = CPointerVarOf<GIOModule_listautoptr>

typealias GIOModule_listautoptr = CPointer<GList>

typealias GIOModule_slistautoptrVar = CPointerVarOf<GIOModule_slistautoptr>

typealias GIOModule_slistautoptr = CPointer<GSList>

typealias GIOStream_autoptrVar = CPointerVarOf<GIOStream_autoptr>

typealias GIOStream_autoptr = CPointer<GIOStream>

typealias GIOStream_listautoptrVar = CPointerVarOf<GIOStream_listautoptr>

typealias GIOStream_listautoptr = CPointer<GList>

typealias GIOStream_slistautoptrVar = CPointerVarOf<GIOStream_slistautoptr>

typealias GIOStream_slistautoptr = CPointer<GSList>

typealias GLoadableIcon_autoptrVar = CPointerVarOf<GLoadableIcon_autoptr>

typealias GLoadableIcon_autoptr = CPointer<GLoadableIcon>

typealias GLoadableIcon_listautoptrVar = CPointerVarOf<GLoadableIcon_listautoptr>

typealias GLoadableIcon_listautoptr = CPointer<GList>

typealias GLoadableIcon_slistautoptrVar = CPointerVarOf<GLoadableIcon_slistautoptr>

typealias GLoadableIcon_slistautoptr = CPointer<GSList>

typealias GMemoryInputStream_autoptrVar = CPointerVarOf<GMemoryInputStream_autoptr>

typealias GMemoryInputStream_autoptr = CPointer<GMemoryInputStream>

typealias GMemoryInputStream_listautoptrVar = CPointerVarOf<GMemoryInputStream_listautoptr>

typealias GMemoryInputStream_listautoptr = CPointer<GList>

typealias GMemoryInputStream_slistautoptrVar = CPointerVarOf<GMemoryInputStream_slistautoptr>

typealias GMemoryInputStream_slistautoptr = CPointer<GSList>

typealias GMemoryOutputStream_autoptrVar = CPointerVarOf<GMemoryOutputStream_autoptr>

typealias GMemoryOutputStream_autoptr = CPointer<GMemoryOutputStream>

typealias GMemoryOutputStream_listautoptrVar = CPointerVarOf<GMemoryOutputStream_listautoptr>

typealias GMemoryOutputStream_listautoptr = CPointer<GList>

typealias GMemoryOutputStream_slistautoptrVar = CPointerVarOf<GMemoryOutputStream_slistautoptr>

typealias GMemoryOutputStream_slistautoptr = CPointer<GSList>

typealias GMenu_autoptrVar = CPointerVarOf<GMenu_autoptr>

typealias GMenu_autoptr = CPointer<GMenu>

typealias GMenu_listautoptrVar = CPointerVarOf<GMenu_listautoptr>

typealias GMenu_listautoptr = CPointer<GList>

typealias GMenu_slistautoptrVar = CPointerVarOf<GMenu_slistautoptr>

typealias GMenu_slistautoptr = CPointer<GSList>

typealias GMenuItem_autoptrVar = CPointerVarOf<GMenuItem_autoptr>

typealias GMenuItem_autoptr = CPointer<GMenuItem>

typealias GMenuItem_listautoptrVar = CPointerVarOf<GMenuItem_listautoptr>

typealias GMenuItem_listautoptr = CPointer<GList>

typealias GMenuItem_slistautoptrVar = CPointerVarOf<GMenuItem_slistautoptr>

typealias GMenuItem_slistautoptr = CPointer<GSList>

typealias GMenuModel_autoptrVar = CPointerVarOf<GMenuModel_autoptr>

typealias GMenuModel_autoptr = CPointer<GMenuModel>

typealias GMenuModel_listautoptrVar = CPointerVarOf<GMenuModel_listautoptr>

typealias GMenuModel_listautoptr = CPointer<GList>

typealias GMenuModel_slistautoptrVar = CPointerVarOf<GMenuModel_slistautoptr>

typealias GMenuModel_slistautoptr = CPointer<GSList>

typealias GMenuAttributeIter_autoptrVar = CPointerVarOf<GMenuAttributeIter_autoptr>

typealias GMenuAttributeIter_autoptr = CPointer<GMenuAttributeIter>

typealias GMenuAttributeIter_listautoptrVar = CPointerVarOf<GMenuAttributeIter_listautoptr>

typealias GMenuAttributeIter_listautoptr = CPointer<GList>

typealias GMenuAttributeIter_slistautoptrVar = CPointerVarOf<GMenuAttributeIter_slistautoptr>

typealias GMenuAttributeIter_slistautoptr = CPointer<GSList>

typealias GMenuLinkIter_autoptrVar = CPointerVarOf<GMenuLinkIter_autoptr>

typealias GMenuLinkIter_autoptr = CPointer<GMenuLinkIter>

typealias GMenuLinkIter_listautoptrVar = CPointerVarOf<GMenuLinkIter_listautoptr>

typealias GMenuLinkIter_listautoptr = CPointer<GList>

typealias GMenuLinkIter_slistautoptrVar = CPointerVarOf<GMenuLinkIter_slistautoptr>

typealias GMenuLinkIter_slistautoptr = CPointer<GSList>

typealias GMount_autoptrVar = CPointerVarOf<GMount_autoptr>

typealias GMount_autoptr = CPointer<GMount>

typealias GMount_listautoptrVar = CPointerVarOf<GMount_listautoptr>

typealias GMount_listautoptr = CPointer<GList>

typealias GMount_slistautoptrVar = CPointerVarOf<GMount_slistautoptr>

typealias GMount_slistautoptr = CPointer<GSList>

typealias GMountOperation_autoptrVar = CPointerVarOf<GMountOperation_autoptr>

typealias GMountOperation_autoptr = CPointer<GMountOperation>

typealias GMountOperation_listautoptrVar = CPointerVarOf<GMountOperation_listautoptr>

typealias GMountOperation_listautoptr = CPointer<GList>

typealias GMountOperation_slistautoptrVar = CPointerVarOf<GMountOperation_slistautoptr>

typealias GMountOperation_slistautoptr = CPointer<GSList>

typealias GNativeVolumeMonitor_autoptrVar = CPointerVarOf<GNativeVolumeMonitor_autoptr>

typealias GNativeVolumeMonitor_autoptr = CPointer<GNativeVolumeMonitor>

typealias GNativeVolumeMonitor_listautoptrVar = CPointerVarOf<GNativeVolumeMonitor_listautoptr>

typealias GNativeVolumeMonitor_listautoptr = CPointer<GList>

typealias GNativeVolumeMonitor_slistautoptrVar = CPointerVarOf<GNativeVolumeMonitor_slistautoptr>

typealias GNativeVolumeMonitor_slistautoptr = CPointer<GSList>

typealias GNetworkAddress_autoptrVar = CPointerVarOf<GNetworkAddress_autoptr>

typealias GNetworkAddress_autoptr = CPointer<GNetworkAddress>

typealias GNetworkAddress_listautoptrVar = CPointerVarOf<GNetworkAddress_listautoptr>

typealias GNetworkAddress_listautoptr = CPointer<GList>

typealias GNetworkAddress_slistautoptrVar = CPointerVarOf<GNetworkAddress_slistautoptr>

typealias GNetworkAddress_slistautoptr = CPointer<GSList>

typealias GNetworkMonitor_autoptrVar = CPointerVarOf<GNetworkMonitor_autoptr>

typealias GNetworkMonitor_autoptr = CPointer<GNetworkMonitor>

typealias GNetworkMonitor_listautoptrVar = CPointerVarOf<GNetworkMonitor_listautoptr>

typealias GNetworkMonitor_listautoptr = CPointer<GList>

typealias GNetworkMonitor_slistautoptrVar = CPointerVarOf<GNetworkMonitor_slistautoptr>

typealias GNetworkMonitor_slistautoptr = CPointer<GSList>

typealias GNetworkService_autoptrVar = CPointerVarOf<GNetworkService_autoptr>

typealias GNetworkService_autoptr = CPointer<GNetworkService>

typealias GNetworkService_listautoptrVar = CPointerVarOf<GNetworkService_listautoptr>

typealias GNetworkService_listautoptr = CPointer<GList>

typealias GNetworkService_slistautoptrVar = CPointerVarOf<GNetworkService_slistautoptr>

typealias GNetworkService_slistautoptr = CPointer<GSList>

typealias GNotification_autoptrVar = CPointerVarOf<GNotification_autoptr>

typealias GNotification_autoptr = CPointer<GNotification>

typealias GNotification_listautoptrVar = CPointerVarOf<GNotification_listautoptr>

typealias GNotification_listautoptr = CPointer<GList>

typealias GNotification_slistautoptrVar = CPointerVarOf<GNotification_slistautoptr>

typealias GNotification_slistautoptr = CPointer<GSList>

typealias GOutputStream_autoptrVar = CPointerVarOf<GOutputStream_autoptr>

typealias GOutputStream_autoptr = CPointer<GOutputStream>

typealias GOutputStream_listautoptrVar = CPointerVarOf<GOutputStream_listautoptr>

typealias GOutputStream_listautoptr = CPointer<GList>

typealias GOutputStream_slistautoptrVar = CPointerVarOf<GOutputStream_slistautoptr>

typealias GOutputStream_slistautoptr = CPointer<GSList>

typealias GPermission_autoptrVar = CPointerVarOf<GPermission_autoptr>

typealias GPermission_autoptr = CPointer<GPermission>

typealias GPermission_listautoptrVar = CPointerVarOf<GPermission_listautoptr>

typealias GPermission_listautoptr = CPointer<GList>

typealias GPermission_slistautoptrVar = CPointerVarOf<GPermission_slistautoptr>

typealias GPermission_slistautoptr = CPointer<GSList>

typealias GPollableInputStream_autoptrVar = CPointerVarOf<GPollableInputStream_autoptr>

typealias GPollableInputStream_autoptr = CPointer<GPollableInputStream>

typealias GPollableInputStream_listautoptrVar = CPointerVarOf<GPollableInputStream_listautoptr>

typealias GPollableInputStream_listautoptr = CPointer<GList>

typealias GPollableInputStream_slistautoptrVar = CPointerVarOf<GPollableInputStream_slistautoptr>

typealias GPollableInputStream_slistautoptr = CPointer<GSList>

typealias GPollableOutputStream_autoptrVar = CPointerVarOf<GPollableOutputStream_autoptr>

typealias GPollableOutputStream_autoptr = CPointer<GPollableOutputStream>

typealias GPollableOutputStream_listautoptrVar = CPointerVarOf<GPollableOutputStream_listautoptr>

typealias GPollableOutputStream_listautoptr = CPointer<GList>

typealias GPollableOutputStream_slistautoptrVar = CPointerVarOf<GPollableOutputStream_slistautoptr>

typealias GPollableOutputStream_slistautoptr = CPointer<GSList>

typealias GPropertyAction_autoptrVar = CPointerVarOf<GPropertyAction_autoptr>

typealias GPropertyAction_autoptr = CPointer<GPropertyAction>

typealias GPropertyAction_listautoptrVar = CPointerVarOf<GPropertyAction_listautoptr>

typealias GPropertyAction_listautoptr = CPointer<GList>

typealias GPropertyAction_slistautoptrVar = CPointerVarOf<GPropertyAction_slistautoptr>

typealias GPropertyAction_slistautoptr = CPointer<GSList>

typealias GProxyAddressEnumerator_autoptrVar = CPointerVarOf<GProxyAddressEnumerator_autoptr>

typealias GProxyAddressEnumerator_autoptr = CPointer<GProxyAddressEnumerator>

typealias GProxyAddressEnumerator_listautoptrVar = CPointerVarOf<GProxyAddressEnumerator_listautoptr>

typealias GProxyAddressEnumerator_listautoptr = CPointer<GList>

typealias GProxyAddressEnumerator_slistautoptrVar = CPointerVarOf<GProxyAddressEnumerator_slistautoptr>

typealias GProxyAddressEnumerator_slistautoptr = CPointer<GSList>

typealias GProxyAddress_autoptrVar = CPointerVarOf<GProxyAddress_autoptr>

typealias GProxyAddress_autoptr = CPointer<GProxyAddress>

typealias GProxyAddress_listautoptrVar = CPointerVarOf<GProxyAddress_listautoptr>

typealias GProxyAddress_listautoptr = CPointer<GList>

typealias GProxyAddress_slistautoptrVar = CPointerVarOf<GProxyAddress_slistautoptr>

typealias GProxyAddress_slistautoptr = CPointer<GSList>

typealias GProxy_autoptrVar = CPointerVarOf<GProxy_autoptr>

typealias GProxy_autoptr = CPointer<GProxy>

typealias GProxy_listautoptrVar = CPointerVarOf<GProxy_listautoptr>

typealias GProxy_listautoptr = CPointer<GList>

typealias GProxy_slistautoptrVar = CPointerVarOf<GProxy_slistautoptr>

typealias GProxy_slistautoptr = CPointer<GSList>

typealias GProxyResolver_autoptrVar = CPointerVarOf<GProxyResolver_autoptr>

typealias GProxyResolver_autoptr = CPointer<GProxyResolver>

typealias GProxyResolver_listautoptrVar = CPointerVarOf<GProxyResolver_listautoptr>

typealias GProxyResolver_listautoptr = CPointer<GList>

typealias GProxyResolver_slistautoptrVar = CPointerVarOf<GProxyResolver_slistautoptr>

typealias GProxyResolver_slistautoptr = CPointer<GSList>

typealias GRemoteActionGroup_autoptrVar = CPointerVarOf<GRemoteActionGroup_autoptr>

typealias GRemoteActionGroup_autoptr = CPointer<GRemoteActionGroup>

typealias GRemoteActionGroup_listautoptrVar = CPointerVarOf<GRemoteActionGroup_listautoptr>

typealias GRemoteActionGroup_listautoptr = CPointer<GList>

typealias GRemoteActionGroup_slistautoptrVar = CPointerVarOf<GRemoteActionGroup_slistautoptr>

typealias GRemoteActionGroup_slistautoptr = CPointer<GSList>

typealias GResolver_autoptrVar = CPointerVarOf<GResolver_autoptr>

typealias GResolver_autoptr = CPointer<GResolver>

typealias GResolver_listautoptrVar = CPointerVarOf<GResolver_listautoptr>

typealias GResolver_listautoptr = CPointer<GList>

typealias GResolver_slistautoptrVar = CPointerVarOf<GResolver_slistautoptr>

typealias GResolver_slistautoptr = CPointer<GSList>

typealias GSeekable_autoptrVar = CPointerVarOf<GSeekable_autoptr>

typealias GSeekable_autoptr = CPointer<GSeekable>

typealias GSeekable_listautoptrVar = CPointerVarOf<GSeekable_listautoptr>

typealias GSeekable_listautoptr = CPointer<GList>

typealias GSeekable_slistautoptrVar = CPointerVarOf<GSeekable_slistautoptr>

typealias GSeekable_slistautoptr = CPointer<GSList>

typealias GSettingsBackend_autoptrVar = CPointerVarOf<GSettingsBackend_autoptr>

typealias GSettingsBackend_autoptr = CPointer<GSettingsBackend>

typealias GSettingsBackend_listautoptrVar = CPointerVarOf<GSettingsBackend_listautoptr>

typealias GSettingsBackend_listautoptr = CPointer<GList>

typealias GSettingsBackend_slistautoptrVar = CPointerVarOf<GSettingsBackend_slistautoptr>

typealias GSettingsBackend_slistautoptr = CPointer<GSList>

typealias GSettingsSchema_autoptrVar = CPointerVarOf<GSettingsSchema_autoptr>

typealias GSettingsSchema_autoptr = CPointer<GSettingsSchema>

typealias GSettingsSchema_listautoptrVar = CPointerVarOf<GSettingsSchema_listautoptr>

typealias GSettingsSchema_listautoptr = CPointer<GList>

typealias GSettingsSchema_slistautoptrVar = CPointerVarOf<GSettingsSchema_slistautoptr>

typealias GSettingsSchema_slistautoptr = CPointer<GSList>

typealias GSettings_autoptrVar = CPointerVarOf<GSettings_autoptr>

typealias GSettings_autoptr = CPointer<GSettings>

typealias GSettings_listautoptrVar = CPointerVarOf<GSettings_listautoptr>

typealias GSettings_listautoptr = CPointer<GList>

typealias GSettings_slistautoptrVar = CPointerVarOf<GSettings_slistautoptr>

typealias GSettings_slistautoptr = CPointer<GSList>

typealias GSimpleActionGroup_autoptrVar = CPointerVarOf<GSimpleActionGroup_autoptr>

typealias GSimpleActionGroup_autoptr = CPointer<GSimpleActionGroup>

typealias GSimpleActionGroup_listautoptrVar = CPointerVarOf<GSimpleActionGroup_listautoptr>

typealias GSimpleActionGroup_listautoptr = CPointer<GList>

typealias GSimpleActionGroup_slistautoptrVar = CPointerVarOf<GSimpleActionGroup_slistautoptr>

typealias GSimpleActionGroup_slistautoptr = CPointer<GSList>

typealias GSimpleAction_autoptrVar = CPointerVarOf<GSimpleAction_autoptr>

typealias GSimpleAction_autoptr = CPointer<GSimpleAction>

typealias GSimpleAction_listautoptrVar = CPointerVarOf<GSimpleAction_listautoptr>

typealias GSimpleAction_listautoptr = CPointer<GList>

typealias GSimpleAction_slistautoptrVar = CPointerVarOf<GSimpleAction_slistautoptr>

typealias GSimpleAction_slistautoptr = CPointer<GSList>

typealias GSimpleAsyncResult_autoptrVar = CPointerVarOf<GSimpleAsyncResult_autoptr>

typealias GSimpleAsyncResult_autoptr = CPointer<GSimpleAsyncResult>

typealias GSimpleAsyncResult_listautoptrVar = CPointerVarOf<GSimpleAsyncResult_listautoptr>

typealias GSimpleAsyncResult_listautoptr = CPointer<GList>

typealias GSimpleAsyncResult_slistautoptrVar = CPointerVarOf<GSimpleAsyncResult_slistautoptr>

typealias GSimpleAsyncResult_slistautoptr = CPointer<GSList>

typealias GSimplePermission_autoptrVar = CPointerVarOf<GSimplePermission_autoptr>

typealias GSimplePermission_autoptr = CPointer<GSimplePermission>

typealias GSimplePermission_listautoptrVar = CPointerVarOf<GSimplePermission_listautoptr>

typealias GSimplePermission_listautoptr = CPointer<GList>

typealias GSimplePermission_slistautoptrVar = CPointerVarOf<GSimplePermission_slistautoptr>

typealias GSimplePermission_slistautoptr = CPointer<GSList>

typealias GSimpleProxyResolver_autoptrVar = CPointerVarOf<GSimpleProxyResolver_autoptr>

typealias GSimpleProxyResolver_autoptr = CPointer<GSimpleProxyResolver>

typealias GSimpleProxyResolver_listautoptrVar = CPointerVarOf<GSimpleProxyResolver_listautoptr>

typealias GSimpleProxyResolver_listautoptr = CPointer<GList>

typealias GSimpleProxyResolver_slistautoptrVar = CPointerVarOf<GSimpleProxyResolver_slistautoptr>

typealias GSimpleProxyResolver_slistautoptr = CPointer<GSList>

typealias GSocketAddressEnumerator_autoptrVar = CPointerVarOf<GSocketAddressEnumerator_autoptr>

typealias GSocketAddressEnumerator_autoptr = CPointer<GSocketAddressEnumerator>

typealias GSocketAddressEnumerator_listautoptrVar = CPointerVarOf<GSocketAddressEnumerator_listautoptr>

typealias GSocketAddressEnumerator_listautoptr = CPointer<GList>

typealias GSocketAddressEnumerator_slistautoptrVar = CPointerVarOf<GSocketAddressEnumerator_slistautoptr>

typealias GSocketAddressEnumerator_slistautoptr = CPointer<GSList>

typealias GSocketAddress_autoptrVar = CPointerVarOf<GSocketAddress_autoptr>

typealias GSocketAddress_autoptr = CPointer<GSocketAddress>

typealias GSocketAddress_listautoptrVar = CPointerVarOf<GSocketAddress_listautoptr>

typealias GSocketAddress_listautoptr = CPointer<GList>

typealias GSocketAddress_slistautoptrVar = CPointerVarOf<GSocketAddress_slistautoptr>

typealias GSocketAddress_slistautoptr = CPointer<GSList>

typealias GSocketClient_autoptrVar = CPointerVarOf<GSocketClient_autoptr>

typealias GSocketClient_autoptr = CPointer<GSocketClient>

typealias GSocketClient_listautoptrVar = CPointerVarOf<GSocketClient_listautoptr>

typealias GSocketClient_listautoptr = CPointer<GList>

typealias GSocketClient_slistautoptrVar = CPointerVarOf<GSocketClient_slistautoptr>

typealias GSocketClient_slistautoptr = CPointer<GSList>

typealias GSocketConnectable_autoptrVar = CPointerVarOf<GSocketConnectable_autoptr>

typealias GSocketConnectable_autoptr = CPointer<GSocketConnectable>

typealias GSocketConnectable_listautoptrVar = CPointerVarOf<GSocketConnectable_listautoptr>

typealias GSocketConnectable_listautoptr = CPointer<GList>

typealias GSocketConnectable_slistautoptrVar = CPointerVarOf<GSocketConnectable_slistautoptr>

typealias GSocketConnectable_slistautoptr = CPointer<GSList>

typealias GSocketConnection_autoptrVar = CPointerVarOf<GSocketConnection_autoptr>

typealias GSocketConnection_autoptr = CPointer<GSocketConnection>

typealias GSocketConnection_listautoptrVar = CPointerVarOf<GSocketConnection_listautoptr>

typealias GSocketConnection_listautoptr = CPointer<GList>

typealias GSocketConnection_slistautoptrVar = CPointerVarOf<GSocketConnection_slistautoptr>

typealias GSocketConnection_slistautoptr = CPointer<GSList>

typealias GSocketControlMessage_autoptrVar = CPointerVarOf<GSocketControlMessage_autoptr>

typealias GSocketControlMessage_autoptr = CPointer<GSocketControlMessage>

typealias GSocketControlMessage_listautoptrVar = CPointerVarOf<GSocketControlMessage_listautoptr>

typealias GSocketControlMessage_listautoptr = CPointer<GList>

typealias GSocketControlMessage_slistautoptrVar = CPointerVarOf<GSocketControlMessage_slistautoptr>

typealias GSocketControlMessage_slistautoptr = CPointer<GSList>

typealias GSocket_autoptrVar = CPointerVarOf<GSocket_autoptr>

typealias GSocket_autoptr = CPointer<GSocket>

typealias GSocket_listautoptrVar = CPointerVarOf<GSocket_listautoptr>

typealias GSocket_listautoptr = CPointer<GList>

typealias GSocket_slistautoptrVar = CPointerVarOf<GSocket_slistautoptr>

typealias GSocket_slistautoptr = CPointer<GSList>

typealias GSocketListener_autoptrVar = CPointerVarOf<GSocketListener_autoptr>

typealias GSocketListener_autoptr = CPointer<GSocketListener>

typealias GSocketListener_listautoptrVar = CPointerVarOf<GSocketListener_listautoptr>

typealias GSocketListener_listautoptr = CPointer<GList>

typealias GSocketListener_slistautoptrVar = CPointerVarOf<GSocketListener_slistautoptr>

typealias GSocketListener_slistautoptr = CPointer<GSList>

typealias GSocketService_autoptrVar = CPointerVarOf<GSocketService_autoptr>

typealias GSocketService_autoptr = CPointer<GSocketService>

typealias GSocketService_listautoptrVar = CPointerVarOf<GSocketService_listautoptr>

typealias GSocketService_listautoptr = CPointer<GList>

typealias GSocketService_slistautoptrVar = CPointerVarOf<GSocketService_slistautoptr>

typealias GSocketService_slistautoptr = CPointer<GSList>

typealias GSubprocess_autoptrVar = CPointerVarOf<GSubprocess_autoptr>

typealias GSubprocess_autoptr = CPointer<GSubprocess>

typealias GSubprocess_listautoptrVar = CPointerVarOf<GSubprocess_listautoptr>

typealias GSubprocess_listautoptr = CPointer<GList>

typealias GSubprocess_slistautoptrVar = CPointerVarOf<GSubprocess_slistautoptr>

typealias GSubprocess_slistautoptr = CPointer<GSList>

typealias GSubprocessLauncher_autoptrVar = CPointerVarOf<GSubprocessLauncher_autoptr>

typealias GSubprocessLauncher_autoptr = CPointer<GSubprocessLauncher>

typealias GSubprocessLauncher_listautoptrVar = CPointerVarOf<GSubprocessLauncher_listautoptr>

typealias GSubprocessLauncher_listautoptr = CPointer<GList>

typealias GSubprocessLauncher_slistautoptrVar = CPointerVarOf<GSubprocessLauncher_slistautoptr>

typealias GSubprocessLauncher_slistautoptr = CPointer<GSList>

typealias GTask_autoptrVar = CPointerVarOf<GTask_autoptr>

typealias GTask_autoptr = CPointer<GTask>

typealias GTask_listautoptrVar = CPointerVarOf<GTask_listautoptr>

typealias GTask_listautoptr = CPointer<GList>

typealias GTask_slistautoptrVar = CPointerVarOf<GTask_slistautoptr>

typealias GTask_slistautoptr = CPointer<GSList>

typealias GTcpConnection_autoptrVar = CPointerVarOf<GTcpConnection_autoptr>

typealias GTcpConnection_autoptr = CPointer<GTcpConnection>

typealias GTcpConnection_listautoptrVar = CPointerVarOf<GTcpConnection_listautoptr>

typealias GTcpConnection_listautoptr = CPointer<GList>

typealias GTcpConnection_slistautoptrVar = CPointerVarOf<GTcpConnection_slistautoptr>

typealias GTcpConnection_slistautoptr = CPointer<GSList>

typealias GTcpWrapperConnection_autoptrVar = CPointerVarOf<GTcpWrapperConnection_autoptr>

typealias GTcpWrapperConnection_autoptr = CPointer<GTcpWrapperConnection>

typealias GTcpWrapperConnection_listautoptrVar = CPointerVarOf<GTcpWrapperConnection_listautoptr>

typealias GTcpWrapperConnection_listautoptr = CPointer<GList>

typealias GTcpWrapperConnection_slistautoptrVar = CPointerVarOf<GTcpWrapperConnection_slistautoptr>

typealias GTcpWrapperConnection_slistautoptr = CPointer<GSList>

typealias GTestDBus_autoptrVar = CPointerVarOf<GTestDBus_autoptr>

typealias GTestDBus_autoptr = CPointer<GTestDBus>

typealias GTestDBus_listautoptrVar = CPointerVarOf<GTestDBus_listautoptr>

typealias GTestDBus_listautoptr = CPointer<GList>

typealias GTestDBus_slistautoptrVar = CPointerVarOf<GTestDBus_slistautoptr>

typealias GTestDBus_slistautoptr = CPointer<GSList>

typealias GThemedIcon_autoptrVar = CPointerVarOf<GThemedIcon_autoptr>

typealias GThemedIcon_autoptr = CPointer<GThemedIcon>

typealias GThemedIcon_listautoptrVar = CPointerVarOf<GThemedIcon_listautoptr>

typealias GThemedIcon_listautoptr = CPointer<GList>

typealias GThemedIcon_slistautoptrVar = CPointerVarOf<GThemedIcon_slistautoptr>

typealias GThemedIcon_slistautoptr = CPointer<GSList>

typealias GThreadedSocketService_autoptrVar = CPointerVarOf<GThreadedSocketService_autoptr>

typealias GThreadedSocketService_autoptr = CPointer<GThreadedSocketService>

typealias GThreadedSocketService_listautoptrVar = CPointerVarOf<GThreadedSocketService_listautoptr>

typealias GThreadedSocketService_listautoptr = CPointer<GList>

typealias GThreadedSocketService_slistautoptrVar = CPointerVarOf<GThreadedSocketService_slistautoptr>

typealias GThreadedSocketService_slistautoptr = CPointer<GSList>

typealias GTlsBackend_autoptrVar = CPointerVarOf<GTlsBackend_autoptr>

typealias GTlsBackend_autoptr = CPointer<GTlsBackend>

typealias GTlsBackend_listautoptrVar = CPointerVarOf<GTlsBackend_listautoptr>

typealias GTlsBackend_listautoptr = CPointer<GList>

typealias GTlsBackend_slistautoptrVar = CPointerVarOf<GTlsBackend_slistautoptr>

typealias GTlsBackend_slistautoptr = CPointer<GSList>

typealias GTlsCertificate_autoptrVar = CPointerVarOf<GTlsCertificate_autoptr>

typealias GTlsCertificate_autoptr = CPointer<GTlsCertificate>

typealias GTlsCertificate_listautoptrVar = CPointerVarOf<GTlsCertificate_listautoptr>

typealias GTlsCertificate_listautoptr = CPointer<GList>

typealias GTlsCertificate_slistautoptrVar = CPointerVarOf<GTlsCertificate_slistautoptr>

typealias GTlsCertificate_slistautoptr = CPointer<GSList>

typealias GTlsClientConnection_autoptrVar = CPointerVarOf<GTlsClientConnection_autoptr>

typealias GTlsClientConnection_autoptr = CPointer<GTlsClientConnection>

typealias GTlsClientConnection_listautoptrVar = CPointerVarOf<GTlsClientConnection_listautoptr>

typealias GTlsClientConnection_listautoptr = CPointer<GList>

typealias GTlsClientConnection_slistautoptrVar = CPointerVarOf<GTlsClientConnection_slistautoptr>

typealias GTlsClientConnection_slistautoptr = CPointer<GSList>

typealias GTlsConnection_autoptrVar = CPointerVarOf<GTlsConnection_autoptr>

typealias GTlsConnection_autoptr = CPointer<GTlsConnection>

typealias GTlsConnection_listautoptrVar = CPointerVarOf<GTlsConnection_listautoptr>

typealias GTlsConnection_listautoptr = CPointer<GList>

typealias GTlsConnection_slistautoptrVar = CPointerVarOf<GTlsConnection_slistautoptr>

typealias GTlsConnection_slistautoptr = CPointer<GSList>

typealias GTlsDatabase_autoptrVar = CPointerVarOf<GTlsDatabase_autoptr>

typealias GTlsDatabase_autoptr = CPointer<GTlsDatabase>

typealias GTlsDatabase_listautoptrVar = CPointerVarOf<GTlsDatabase_listautoptr>

typealias GTlsDatabase_listautoptr = CPointer<GList>

typealias GTlsDatabase_slistautoptrVar = CPointerVarOf<GTlsDatabase_slistautoptr>

typealias GTlsDatabase_slistautoptr = CPointer<GSList>

typealias GTlsFileDatabase_autoptrVar = CPointerVarOf<GTlsFileDatabase_autoptr>

typealias GTlsFileDatabase_autoptr = CPointer<GTlsFileDatabase>

typealias GTlsFileDatabase_listautoptrVar = CPointerVarOf<GTlsFileDatabase_listautoptr>

typealias GTlsFileDatabase_listautoptr = CPointer<GList>

typealias GTlsFileDatabase_slistautoptrVar = CPointerVarOf<GTlsFileDatabase_slistautoptr>

typealias GTlsFileDatabase_slistautoptr = CPointer<GSList>

typealias GTlsInteraction_autoptrVar = CPointerVarOf<GTlsInteraction_autoptr>

typealias GTlsInteraction_autoptr = CPointer<GTlsInteraction>

typealias GTlsInteraction_listautoptrVar = CPointerVarOf<GTlsInteraction_listautoptr>

typealias GTlsInteraction_listautoptr = CPointer<GList>

typealias GTlsInteraction_slistautoptrVar = CPointerVarOf<GTlsInteraction_slistautoptr>

typealias GTlsInteraction_slistautoptr = CPointer<GSList>

typealias GTlsPassword_autoptrVar = CPointerVarOf<GTlsPassword_autoptr>

typealias GTlsPassword_autoptr = CPointer<GTlsPassword>

typealias GTlsPassword_listautoptrVar = CPointerVarOf<GTlsPassword_listautoptr>

typealias GTlsPassword_listautoptr = CPointer<GList>

typealias GTlsPassword_slistautoptrVar = CPointerVarOf<GTlsPassword_slistautoptr>

typealias GTlsPassword_slistautoptr = CPointer<GSList>

typealias GTlsServerConnection_autoptrVar = CPointerVarOf<GTlsServerConnection_autoptr>

typealias GTlsServerConnection_autoptr = CPointer<GTlsServerConnection>

typealias GTlsServerConnection_listautoptrVar = CPointerVarOf<GTlsServerConnection_listautoptr>

typealias GTlsServerConnection_listautoptr = CPointer<GList>

typealias GTlsServerConnection_slistautoptrVar = CPointerVarOf<GTlsServerConnection_slistautoptr>

typealias GTlsServerConnection_slistautoptr = CPointer<GSList>

typealias GVfs_autoptrVar = CPointerVarOf<GVfs_autoptr>

typealias GVfs_autoptr = CPointer<GVfs>

typealias GVfs_listautoptrVar = CPointerVarOf<GVfs_listautoptr>

typealias GVfs_listautoptr = CPointer<GList>

typealias GVfs_slistautoptrVar = CPointerVarOf<GVfs_slistautoptr>

typealias GVfs_slistautoptr = CPointer<GSList>

typealias GVolume_autoptrVar = CPointerVarOf<GVolume_autoptr>

typealias GVolume_autoptr = CPointer<GVolume>

typealias GVolume_listautoptrVar = CPointerVarOf<GVolume_listautoptr>

typealias GVolume_listautoptr = CPointer<GList>

typealias GVolume_slistautoptrVar = CPointerVarOf<GVolume_slistautoptr>

typealias GVolume_slistautoptr = CPointer<GSList>

typealias GVolumeMonitor_autoptrVar = CPointerVarOf<GVolumeMonitor_autoptr>

typealias GVolumeMonitor_autoptr = CPointer<GVolumeMonitor>

typealias GVolumeMonitor_listautoptrVar = CPointerVarOf<GVolumeMonitor_listautoptr>

typealias GVolumeMonitor_listautoptr = CPointer<GList>

typealias GVolumeMonitor_slistautoptrVar = CPointerVarOf<GVolumeMonitor_slistautoptr>

typealias GVolumeMonitor_slistautoptr = CPointer<GSList>

typealias GZlibCompressor_autoptrVar = CPointerVarOf<GZlibCompressor_autoptr>

typealias GZlibCompressor_autoptr = CPointer<GZlibCompressor>

typealias GZlibCompressor_listautoptrVar = CPointerVarOf<GZlibCompressor_listautoptr>

typealias GZlibCompressor_listautoptr = CPointer<GList>

typealias GZlibCompressor_slistautoptrVar = CPointerVarOf<GZlibCompressor_slistautoptr>

typealias GZlibCompressor_slistautoptr = CPointer<GSList>

typealias GZlibDecompressor_autoptrVar = CPointerVarOf<GZlibDecompressor_autoptr>

typealias GZlibDecompressor_autoptr = CPointer<GZlibDecompressor>

typealias GZlibDecompressor_listautoptrVar = CPointerVarOf<GZlibDecompressor_listautoptr>

typealias GZlibDecompressor_listautoptr = CPointer<GList>

typealias GZlibDecompressor_slistautoptrVar = CPointerVarOf<GZlibDecompressor_slistautoptr>

typealias GZlibDecompressor_slistautoptr = CPointer<GSList>

typealias GtkAccelGroupPrivate = _GtkAccelGroupPrivate

typealias GtkAccelGroup = _GtkAccelGroup

typealias GtkAccelGroupClass = _GtkAccelGroupClass

typealias GtkAccelKey = _GtkAccelKey

typealias GtkAccelGroupEntry = _GtkAccelGroupEntry

typealias GtkAccelGroupActivateVar = CPointerVarOf<GtkAccelGroupActivate>

typealias GtkAccelGroupActivate = CPointer<CFunction<(CPointer<GtkAccelGroup>?, CPointer<GObject>?, guint, GdkModifierType) -> gboolean>>

typealias GtkAccelGroupFindFuncVar = CPointerVarOf<GtkAccelGroupFindFunc>

typealias GtkAccelGroupFindFunc = CPointer<CFunction<(CPointer<GtkAccelKey>?, CPointer<GClosure>?, gpointer?) -> gboolean>>

typealias GdkDisplay = _GdkDisplay

typealias GtkAccelGroup_autoptrVar = CPointerVarOf<GtkAccelGroup_autoptr>

typealias GtkAccelGroup_autoptr = CPointer<GtkAccelGroup>

typealias GtkAccelGroup_listautoptrVar = CPointerVarOf<GtkAccelGroup_listautoptr>

typealias GtkAccelGroup_listautoptr = CPointer<GList>

typealias GtkAccelGroup_slistautoptrVar = CPointerVarOf<GtkAccelGroup_slistautoptr>

typealias GtkAccelGroup_slistautoptr = CPointer<GSList>

typealias GtkBorder = _GtkBorder

typealias GtkBorder_autoptrVar = CPointerVarOf<GtkBorder_autoptr>

typealias GtkBorder_autoptr = CPointer<GtkBorder>

typealias GtkBorder_listautoptrVar = CPointerVarOf<GtkBorder_listautoptr>

typealias GtkBorder_listautoptr = CPointer<GList>

typealias GtkBorder_slistautoptrVar = CPointerVarOf<GtkBorder_slistautoptr>

typealias GtkBorder_slistautoptr = CPointer<GSList>

typealias GtkAdjustmentPrivate = _GtkAdjustmentPrivate

typealias GtkAdjustment = _GtkAdjustment

typealias GtkBuilderPrivate = _GtkBuilderPrivate

typealias GtkBuilder = _GtkBuilder

typealias GtkClipboard = _GtkClipboard

typealias GtkIconSet = _GtkIconSet

typealias GtkIconSource = _GtkIconSource

typealias PangoFontDescription = _PangoFontDescription

typealias GdkColor = _GdkColor

typealias GtkRcStyle = _GtkRcStyle

typealias GtkRequisition = _GtkRequisition

typealias GtkSelectionData = _GtkSelectionData

typealias GtkSettingsPrivate = _GtkSettingsPrivate

typealias GtkSettings = _GtkSettings

typealias cairo_pattern_t = _cairo_pattern

typealias GdkVisual = _GdkVisual

typealias GtkStyle = _GtkStyle

typealias GtkStyleContextPrivate = _GtkStyleContextPrivate

typealias GtkStyleContext = _GtkStyleContext

typealias GtkTooltip = _GtkTooltip

typealias GtkWidgetPrivate = _GtkWidgetPrivate

typealias GtkWidget = _GtkWidget

typealias GtkWidgetPath = _GtkWidgetPath

typealias GtkContainerPrivate = _GtkContainerPrivate

typealias GtkContainer = _GtkContainer

typealias GtkBinPrivate = _GtkBinPrivate

typealias GtkBin = _GtkBin

typealias GtkWindowPrivate = _GtkWindowPrivate

typealias GtkWindow = _GtkWindow

typealias GtkRcPropertyParserVar = CPointerVarOf<GtkRcPropertyParser>

typealias GtkRcPropertyParser = CPointer<CFunction<(CPointer<GParamSpec>?, CPointer<GString>?, CPointer<GValue>?) -> gboolean>>

typealias GtkBuilderConnectFuncVar = CPointerVarOf<GtkBuilderConnectFunc>

typealias GtkBuilderConnectFunc = CPointer<CFunction<(CPointer<GtkBuilder>?, CPointer<GObject>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<GObject>?, GConnectFlags, gpointer?) -> Unit>>

typealias cairo_rectangle_int_t = _cairo_rectangle_int

typealias GdkRectangle = cairo_rectangle_int_t

typealias GtkAllocation = GdkRectangle

typealias cairo_t = _cairo

typealias GdkWindow = _GdkWindow

typealias GdkEventAny = _GdkEventAny

typealias cairo_region_t = _cairo_region

typealias GdkEventExpose = _GdkEventExpose

typealias GdkEventVisibility = _GdkEventVisibility

typealias GdkDevice = _GdkDevice

typealias GdkEventMotion = _GdkEventMotion

typealias GdkEventButton = _GdkEventButton

typealias GdkEventSequence = _GdkEventSequence

typealias GdkEventTouch = _GdkEventTouch

typealias GdkEventScroll = _GdkEventScroll

typealias GdkEventKey = _GdkEventKey

typealias GdkEventCrossing = _GdkEventCrossing

typealias GdkEventFocus = _GdkEventFocus

typealias GdkEventConfigure = _GdkEventConfigure

typealias GdkAtomVar = CPointerVarOf<GdkAtom>

typealias GdkAtom = CPointer<_GdkAtom>

typealias GdkEventProperty = _GdkEventProperty

typealias GdkEventSelection = _GdkEventSelection

typealias GdkEventOwnerChange = _GdkEventOwnerChange

typealias GdkEventProximity = _GdkEventProximity

typealias GdkDragContext = _GdkDragContext

typealias gshortVar = ShortVarOf<gshort>

typealias gshort = Short

typealias GdkEventDND = _GdkEventDND

typealias GdkEventWindowState = _GdkEventWindowState

typealias GdkEventSetting = _GdkEventSetting

typealias GdkEventGrabBroken = _GdkEventGrabBroken

typealias GdkEventTouchpadSwipe = _GdkEventTouchpadSwipe

typealias GdkEventTouchpadPinch = _GdkEventTouchpadPinch

typealias GdkEventPadButton = _GdkEventPadButton

typealias GdkEventPadAxis = _GdkEventPadAxis

typealias GdkEventPadGroupMode = _GdkEventPadGroupMode

typealias GdkEvent = _GdkEvent

typealias AtkObject = _AtkObject

typealias AtkRelationSet = _AtkRelationSet

typealias GdkScreen = _GdkScreen

typealias GtkWidgetClassPrivate = _GtkWidgetClassPrivate

typealias GtkWidgetClass = _GtkWidgetClass

typealias GtkCallbackVar = CPointerVarOf<GtkCallback>

typealias GtkCallback = CPointer<CFunction<(CPointer<GtkWidget>?, gpointer?) -> Unit>>

typealias GdkFrameClock = _GdkFrameClock

typealias GtkTickCallbackVar = CPointerVarOf<GtkTickCallback>

typealias GtkTickCallback = CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GdkFrameClock>?, gpointer?) -> gboolean>>

typealias GdkRGBA = _GdkRGBA

typealias PangoContext = _PangoContext

typealias cairo_font_options_t = _cairo_font_options

typealias PangoLayout = _PangoLayout

typealias GdkPixbuf = _GdkPixbuf

typealias va_listVar = CPointerVarOf<va_list>

typealias va_list = __gnuc_va_list

typealias PangoFontMap = _PangoFontMap

typealias GtkWidget_autoptrVar = CPointerVarOf<GtkWidget_autoptr>

typealias GtkWidget_autoptr = CPointer<GtkWidget>

typealias GtkWidget_listautoptrVar = CPointerVarOf<GtkWidget_listautoptr>

typealias GtkWidget_listautoptr = CPointer<GList>

typealias GtkWidget_slistautoptrVar = CPointerVarOf<GtkWidget_slistautoptr>

typealias GtkWidget_slistautoptr = CPointer<GSList>

typealias GtkRequisition_autoptrVar = CPointerVarOf<GtkRequisition_autoptr>

typealias GtkRequisition_autoptr = CPointer<GtkRequisition>

typealias GtkRequisition_listautoptrVar = CPointerVarOf<GtkRequisition_listautoptr>

typealias GtkRequisition_listautoptr = CPointer<GList>

typealias GtkRequisition_slistautoptrVar = CPointerVarOf<GtkRequisition_slistautoptr>

typealias GtkRequisition_slistautoptr = CPointer<GSList>

typealias GtkApplicationPrivate = _GtkApplicationPrivate

typealias GtkApplication = _GtkApplication

typealias GtkApplicationClass = _GtkApplicationClass

typealias GtkApplication_autoptrVar = CPointerVarOf<GtkApplication_autoptr>

typealias GtkApplication_autoptr = CPointer<GtkApplication>

typealias GtkApplication_listautoptrVar = CPointerVarOf<GtkApplication_listautoptr>

typealias GtkApplication_listautoptr = CPointer<GList>

typealias GtkApplication_slistautoptrVar = CPointerVarOf<GtkApplication_slistautoptr>

typealias GtkApplication_slistautoptr = CPointer<GSList>

typealias GtkContainerClass = _GtkContainerClass

typealias GtkContainer_autoptrVar = CPointerVarOf<GtkContainer_autoptr>

typealias GtkContainer_autoptr = CPointer<GtkContainer>

typealias GtkContainer_listautoptrVar = CPointerVarOf<GtkContainer_listautoptr>

typealias GtkContainer_listautoptr = CPointer<GList>

typealias GtkContainer_slistautoptrVar = CPointerVarOf<GtkContainer_slistautoptr>

typealias GtkContainer_slistautoptr = CPointer<GSList>

typealias GtkBinClass = _GtkBinClass

typealias GtkBin_autoptrVar = CPointerVarOf<GtkBin_autoptr>

typealias GtkBin_autoptr = CPointer<GtkBin>

typealias GtkBin_listautoptrVar = CPointerVarOf<GtkBin_listautoptr>

typealias GtkBin_listautoptr = CPointer<GList>

typealias GtkBin_slistautoptrVar = CPointerVarOf<GtkBin_slistautoptr>

typealias GtkBin_slistautoptr = CPointer<GSList>

typealias GtkWindowClass = _GtkWindowClass

typealias GtkWindowGeometryInfo = _GtkWindowGeometryInfo

typealias GtkWindowGroupPrivate = _GtkWindowGroupPrivate

typealias GtkWindowGroup = _GtkWindowGroup

typealias GtkWindowGroupClass = _GtkWindowGroupClass

typealias GdkGeometry = _GdkGeometry

typealias GtkWindow_autoptrVar = CPointerVarOf<GtkWindow_autoptr>

typealias GtkWindow_autoptr = CPointer<GtkWindow>

typealias GtkWindow_listautoptrVar = CPointerVarOf<GtkWindow_listautoptr>

typealias GtkWindow_listautoptr = CPointer<GList>

typealias GtkWindow_slistautoptrVar = CPointerVarOf<GtkWindow_slistautoptr>

typealias GtkWindow_slistautoptr = CPointer<GSList>

typealias GtkWindowGroup_autoptrVar = CPointerVarOf<GtkWindowGroup_autoptr>

typealias GtkWindowGroup_autoptr = CPointer<GtkWindowGroup>

typealias GtkWindowGroup_listautoptrVar = CPointerVarOf<GtkWindowGroup_listautoptr>

typealias GtkWindowGroup_listautoptr = CPointer<GList>

typealias GtkWindowGroup_slistautoptrVar = CPointerVarOf<GtkWindowGroup_slistautoptr>

typealias GtkWindowGroup_slistautoptr = CPointer<GSList>

typealias GtkDialogPrivate = _GtkDialogPrivate

typealias GtkDialog = _GtkDialog

typealias GtkDialogClass = _GtkDialogClass

typealias GtkDialog_autoptrVar = CPointerVarOf<GtkDialog_autoptr>

typealias GtkDialog_autoptr = CPointer<GtkDialog>

typealias GtkDialog_listautoptrVar = CPointerVarOf<GtkDialog_listautoptr>

typealias GtkDialog_listautoptr = CPointer<GList>

typealias GtkDialog_slistautoptrVar = CPointerVarOf<GtkDialog_slistautoptr>

typealias GtkDialog_slistautoptr = CPointer<GSList>

typealias GtkAboutDialogPrivate = _GtkAboutDialogPrivate

typealias GtkAboutDialog = _GtkAboutDialog

typealias GtkAboutDialogClass = _GtkAboutDialogClass

typealias GtkAboutDialog_autoptrVar = CPointerVarOf<GtkAboutDialog_autoptr>

typealias GtkAboutDialog_autoptr = CPointer<GtkAboutDialog>

typealias GtkAboutDialog_listautoptrVar = CPointerVarOf<GtkAboutDialog_listautoptr>

typealias GtkAboutDialog_listautoptr = CPointer<GList>

typealias GtkAboutDialog_slistautoptrVar = CPointerVarOf<GtkAboutDialog_slistautoptr>

typealias GtkAboutDialog_slistautoptr = CPointer<GSList>

typealias GtkMenuShellPrivate = _GtkMenuShellPrivate

typealias GtkMenuShell = _GtkMenuShell

typealias GtkMenuShellClass = _GtkMenuShellClass

typealias GtkMenuShell_autoptrVar = CPointerVarOf<GtkMenuShell_autoptr>

typealias GtkMenuShell_autoptr = CPointer<GtkMenuShell>

typealias GtkMenuShell_listautoptrVar = CPointerVarOf<GtkMenuShell_listautoptr>

typealias GtkMenuShell_listautoptr = CPointer<GList>

typealias GtkMenuShell_slistautoptrVar = CPointerVarOf<GtkMenuShell_slistautoptr>

typealias GtkMenuShell_slistautoptr = CPointer<GSList>

typealias GtkMenuPrivate = _GtkMenuPrivate

typealias GtkMenu = _GtkMenu

typealias GtkMenuClass = _GtkMenuClass

typealias GtkMenuPositionFuncVar = CPointerVarOf<GtkMenuPositionFunc>

typealias GtkMenuPositionFunc = CPointer<CFunction<(CPointer<GtkMenu>?, CPointer<gintVar>?, CPointer<gintVar>?, CPointer<gbooleanVar>?, gpointer?) -> Unit>>

typealias GtkMenuDetachFuncVar = CPointerVarOf<GtkMenuDetachFunc>

typealias GtkMenuDetachFunc = CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GtkMenu>?) -> Unit>>

typealias GdkMonitor = _GdkMonitor

typealias GtkMenu_autoptrVar = CPointerVarOf<GtkMenu_autoptr>

typealias GtkMenu_autoptr = CPointer<GtkMenu>

typealias GtkMenu_listautoptrVar = CPointerVarOf<GtkMenu_listautoptr>

typealias GtkMenu_listautoptr = CPointer<GList>

typealias GtkMenu_slistautoptrVar = CPointerVarOf<GtkMenu_slistautoptr>

typealias GtkMenu_slistautoptr = CPointer<GSList>

typealias GtkMiscPrivate = _GtkMiscPrivate

typealias GtkMisc = _GtkMisc

typealias GtkLabelPrivate = _GtkLabelPrivate

typealias GtkLabel = _GtkLabel

typealias GtkMiscClass = _GtkMiscClass

typealias GtkLabelClass = _GtkLabelClass

typealias GtkLabelSelectionInfo = _GtkLabelSelectionInfo

typealias PangoAttrList = _PangoAttrList

typealias GtkLabel_autoptrVar = CPointerVarOf<GtkLabel_autoptr>

typealias GtkLabel_autoptr = CPointer<GtkLabel>

typealias GtkLabel_listautoptrVar = CPointerVarOf<GtkLabel_listautoptr>

typealias GtkLabel_listautoptr = CPointer<GList>

typealias GtkLabel_slistautoptrVar = CPointerVarOf<GtkLabel_slistautoptr>

typealias GtkLabel_slistautoptr = CPointer<GSList>

typealias GtkAccelLabelPrivate = _GtkAccelLabelPrivate

typealias GtkAccelLabel = _GtkAccelLabel

typealias GtkAccelLabelClass = _GtkAccelLabelClass

typealias GtkAccelLabel_autoptrVar = CPointerVarOf<GtkAccelLabel_autoptr>

typealias GtkAccelLabel_autoptr = CPointer<GtkAccelLabel>

typealias GtkAccelLabel_listautoptrVar = CPointerVarOf<GtkAccelLabel_listautoptr>

typealias GtkAccelLabel_listautoptr = CPointer<GList>

typealias GtkAccelLabel_slistautoptrVar = CPointerVarOf<GtkAccelLabel_slistautoptr>

typealias GtkAccelLabel_slistautoptr = CPointer<GSList>

typealias GtkAccelMap = _GtkAccelMap

typealias GtkAccelMapClass = _GtkAccelMapClass

typealias GtkAccelMapForeachVar = CPointerVarOf<GtkAccelMapForeach>

typealias GtkAccelMapForeach = CPointer<CFunction<(gpointer?, CPointer<gcharVar>?, guint, GdkModifierType, gboolean) -> Unit>>

typealias GScannerConfig = _GScannerConfig

typealias GTokenValue = _GTokenValue

typealias GScanner = _GScanner

typealias GScannerMsgFuncVar = CPointerVarOf<GScannerMsgFunc>

typealias GScannerMsgFunc = CPointer<CFunction<(CPointer<GScanner>?, CPointer<gcharVar>?, gboolean) -> Unit>>

typealias GtkAccelMap_autoptrVar = CPointerVarOf<GtkAccelMap_autoptr>

typealias GtkAccelMap_autoptr = CPointer<GtkAccelMap>

typealias GtkAccelMap_listautoptrVar = CPointerVarOf<GtkAccelMap_listautoptr>

typealias GtkAccelMap_listautoptr = CPointer<GList>

typealias GtkAccelMap_slistautoptrVar = CPointerVarOf<GtkAccelMap_slistautoptr>

typealias GtkAccelMap_slistautoptr = CPointer<GSList>

typealias GtkAccessiblePrivate = _GtkAccessiblePrivate

typealias GtkAccessible = _GtkAccessible

typealias AtkStateSet = _AtkStateSet

typealias AtkPropertyValues = _AtkPropertyValues

typealias AtkPropertyChangeHandlerVar = CPointerVarOf<AtkPropertyChangeHandler>

typealias AtkPropertyChangeHandler = CPointer<CFunction<(CPointer<AtkObject>?, CPointer<AtkPropertyValues>?) -> Unit>>

typealias AtkAttributeSet = GSList

typealias AtkFunctionVar = CPointerVarOf<AtkFunction>

typealias AtkFunction = CPointer<CFunction<(gpointer?) -> gboolean>>

typealias AtkObjectClass = _AtkObjectClass

typealias GtkAccessibleClass = _GtkAccessibleClass

typealias GtkActionable = _GtkActionable

typealias GtkActionableInterface = _GtkActionableInterface

typealias GtkActionBar = _GtkActionBar

typealias GtkActionBarPrivate = _GtkActionBarPrivate

typealias GtkActionBarClass = _GtkActionBarClass

typealias GtkAdjustmentClass = _GtkAdjustmentClass

typealias GtkAppChooser = _GtkAppChooser

typealias GtkAppChooserDialogPrivate = _GtkAppChooserDialogPrivate

typealias GtkAppChooserDialog = _GtkAppChooserDialog

typealias GtkAppChooserDialogClass = _GtkAppChooserDialogClass

typealias GtkBoxPrivate = _GtkBoxPrivate

typealias GtkBox = _GtkBox

typealias GtkBoxClass = _GtkBoxClass

typealias GtkAppChooserWidgetPrivate = _GtkAppChooserWidgetPrivate

typealias GtkAppChooserWidget = _GtkAppChooserWidget

typealias GtkAppChooserWidgetClass = _GtkAppChooserWidgetClass

typealias GtkTreeIter = _GtkTreeIter

typealias GtkTreePath = _GtkTreePath

typealias GtkTreeRowReference = _GtkTreeRowReference

typealias GtkTreeModel = _GtkTreeModel

typealias GtkTreeModelIface = _GtkTreeModelIface

typealias GtkTreeModelForeachFuncVar = CPointerVarOf<GtkTreeModelForeachFunc>

typealias GtkTreeModelForeachFunc = CPointer<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreePath>?, CPointer<GtkTreeIter>?, gpointer?) -> gboolean>>

typealias GtkCellEditable = _GtkCellEditable

typealias GtkCellEditableIface = _GtkCellEditableIface

typealias GtkCellRendererPrivate = _GtkCellRendererPrivate

typealias GtkCellRenderer = _GtkCellRenderer

typealias GtkCellRendererClassPrivate = _GtkCellRendererClassPrivate

typealias GtkCellRendererClass = _GtkCellRendererClass

typealias GtkTreeSortable = _GtkTreeSortable

typealias GtkTreeIterCompareFuncVar = CPointerVarOf<GtkTreeIterCompareFunc>

typealias GtkTreeIterCompareFunc = CPointer<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?, CPointer<GtkTreeIter>?, gpointer?) -> gint>>

typealias GtkTreeSortableIface = _GtkTreeSortableIface

typealias GtkCellAreaPrivate = _GtkCellAreaPrivate

typealias GtkCellArea = _GtkCellArea

typealias GtkCellCallbackVar = CPointerVarOf<GtkCellCallback>

typealias GtkCellCallback = CPointer<CFunction<(CPointer<GtkCellRenderer>?, gpointer?) -> gboolean>>

typealias GtkCellAreaContextPrivate = _GtkCellAreaContextPrivate

typealias GtkCellAreaContext = _GtkCellAreaContext

typealias GtkCellAllocCallbackVar = CPointerVarOf<GtkCellAllocCallback>

typealias GtkCellAllocCallback = CPointer<CFunction<(CPointer<GtkCellRenderer>?, CPointer<GdkRectangle>?, CPointer<GdkRectangle>?, gpointer?) -> gboolean>>

typealias GtkCellAreaClass = _GtkCellAreaClass

typealias GFuncVar = CPointerVarOf<GFunc>

typealias GFunc = CPointer<CFunction<(gpointer?, gpointer?) -> Unit>>

typealias GtkTreeViewColumnPrivate = _GtkTreeViewColumnPrivate

typealias GtkTreeViewColumn = _GtkTreeViewColumn

typealias GtkTreeViewColumnClass = _GtkTreeViewColumnClass

typealias GtkTreeCellDataFuncVar = CPointerVarOf<GtkTreeCellDataFunc>

typealias GtkTreeCellDataFunc = CPointer<CFunction<(CPointer<GtkTreeViewColumn>?, CPointer<GtkCellRenderer>?, CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?, gpointer?) -> Unit>>

typealias GtkTextAppearance = _GtkTextAppearance

typealias PangoTabArray = _PangoTabArray

typealias PangoLanguage = _PangoLanguage

typealias GtkTextAttributes = _GtkTextAttributes

typealias GtkTextChildAnchor = _GtkTextChildAnchor

typealias GtkTextChildAnchorClass = _GtkTextChildAnchorClass

typealias GtkTextIter = _GtkTextIter

typealias GtkTextTagTablePrivate = _GtkTextTagTablePrivate

typealias GtkTextTagTable = _GtkTextTagTable

typealias GtkTextTagPrivate = _GtkTextTagPrivate

typealias GtkTextTag = _GtkTextTag

typealias GtkTextTagClass = _GtkTextTagClass

typealias GtkTextBufferPrivate = _GtkTextBufferPrivate

typealias GtkTextBuffer = _GtkTextBuffer

typealias GtkTextCharPredicateVar = CPointerVarOf<GtkTextCharPredicate>

typealias GtkTextCharPredicate = CPointer<CFunction<(gunichar, gpointer?) -> gboolean>>

typealias GtkTargetPair = _GtkTargetPair

typealias GtkTargetList = _GtkTargetList

typealias GtkTargetEntry = _GtkTargetEntry

typealias cairo_surface_t = _cairo_surface

typealias GtkEditable = _GtkEditable

typealias GtkEditableInterface = _GtkEditableInterface

typealias GtkIMContext = _GtkIMContext

typealias GtkIMContextClass = _GtkIMContextClass

typealias GtkEntryBufferPrivate = _GtkEntryBufferPrivate

typealias GtkEntryBuffer = _GtkEntryBuffer

typealias GtkEntryBufferClass = _GtkEntryBufferClass

typealias GtkListStorePrivate = _GtkListStorePrivate

typealias GtkListStore = _GtkListStore

typealias GtkListStoreClass = _GtkListStoreClass

typealias GtkTreeModelFilterVisibleFuncVar = CPointerVarOf<GtkTreeModelFilterVisibleFunc>

typealias GtkTreeModelFilterVisibleFunc = CPointer<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?, gpointer?) -> gboolean>>

typealias GtkTreeModelFilterModifyFuncVar = CPointerVarOf<GtkTreeModelFilterModifyFunc>

typealias GtkTreeModelFilterModifyFunc = CPointer<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?, CPointer<GValue>?, gint, gpointer?) -> Unit>>

typealias GtkTreeModelFilterPrivate = _GtkTreeModelFilterPrivate

typealias GtkTreeModelFilter = _GtkTreeModelFilter

typealias GtkTreeModelFilterClass = _GtkTreeModelFilterClass

typealias GtkEntryCompletionPrivate = _GtkEntryCompletionPrivate

typealias GtkEntryCompletion = _GtkEntryCompletion

typealias GtkEntryCompletionClass = _GtkEntryCompletionClass

typealias GtkEntryCompletionMatchFuncVar = CPointerVarOf<GtkEntryCompletionMatchFunc>

typealias GtkEntryCompletionMatchFunc = CPointer<CFunction<(CPointer<GtkEntryCompletion>?, CPointer<gcharVar>?, CPointer<GtkTreeIter>?, gpointer?) -> gboolean>>

typealias GtkImagePrivate = _GtkImagePrivate

typealias GtkImage = _GtkImage

typealias GtkImageClass = _GtkImageClass

typealias GdkPixbufAnimation = _GdkPixbufAnimation

typealias GtkEntryPrivate = _GtkEntryPrivate

typealias GtkEntry = _GtkEntry

typealias GtkEntryClass = _GtkEntryClass

typealias GtkTreeViewPrivate = _GtkTreeViewPrivate

typealias GtkTreeView = _GtkTreeView

typealias GtkTreeViewClass = _GtkTreeViewClass

typealias GtkTreeSelectionPrivate = _GtkTreeSelectionPrivate

typealias GtkTreeSelection = _GtkTreeSelection

typealias GtkTreeSelectionClass = _GtkTreeSelectionClass

typealias GtkTreeViewColumnDropFuncVar = CPointerVarOf<GtkTreeViewColumnDropFunc>

typealias GtkTreeViewColumnDropFunc = CPointer<CFunction<(CPointer<GtkTreeView>?, CPointer<GtkTreeViewColumn>?, CPointer<GtkTreeViewColumn>?, CPointer<GtkTreeViewColumn>?, gpointer?) -> gboolean>>

typealias GtkTreeViewMappingFuncVar = CPointerVarOf<GtkTreeViewMappingFunc>

typealias GtkTreeViewMappingFunc = CPointer<CFunction<(CPointer<GtkTreeView>?, CPointer<GtkTreePath>?, gpointer?) -> Unit>>

typealias GtkTreeViewSearchEqualFuncVar = CPointerVarOf<GtkTreeViewSearchEqualFunc>

typealias GtkTreeViewSearchEqualFunc = CPointer<CFunction<(CPointer<GtkTreeModel>?, gint, CPointer<gcharVar>?, CPointer<GtkTreeIter>?, gpointer?) -> gboolean>>

typealias GtkTreeViewRowSeparatorFuncVar = CPointerVarOf<GtkTreeViewRowSeparatorFunc>

typealias GtkTreeViewRowSeparatorFunc = CPointer<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?, gpointer?) -> gboolean>>

typealias GtkTreeViewSearchPositionFuncVar = CPointerVarOf<GtkTreeViewSearchPositionFunc>

typealias GtkTreeViewSearchPositionFunc = CPointer<CFunction<(CPointer<GtkTreeView>?, CPointer<GtkWidget>?, gpointer?) -> Unit>>

typealias GtkTreeDestroyCountFuncVar = CPointerVarOf<GtkTreeDestroyCountFunc>

typealias GtkTreeDestroyCountFunc = CPointer<CFunction<(CPointer<GtkTreeView>?, CPointer<GtkTreePath>?, gint, gpointer?) -> Unit>>

typealias GtkComboBoxPrivate = _GtkComboBoxPrivate

typealias GtkComboBox = _GtkComboBox

typealias GtkComboBoxClass = _GtkComboBoxClass

typealias GtkAppChooserButtonPrivate = _GtkAppChooserButtonPrivate

typealias GtkAppChooserButton = _GtkAppChooserButton

typealias GtkAppChooserButtonClass = _GtkAppChooserButtonClass

typealias GtkShortcutsWindow = _GtkShortcutsWindow

typealias GtkShortcutsWindowClass = _GtkShortcutsWindowClass

typealias GtkShortcutsWindow_autoptrVar = CPointerVarOf<GtkShortcutsWindow_autoptr>

typealias GtkShortcutsWindow_autoptr = CPointer<GtkShortcutsWindow>

typealias GtkShortcutsWindow_listautoptrVar = CPointerVarOf<GtkShortcutsWindow_listautoptr>

typealias GtkShortcutsWindow_listautoptr = CPointer<GList>

typealias GtkShortcutsWindow_slistautoptrVar = CPointerVarOf<GtkShortcutsWindow_slistautoptr>

typealias GtkShortcutsWindow_slistautoptr = CPointer<GSList>

typealias GtkApplicationWindowPrivate = _GtkApplicationWindowPrivate

typealias GtkApplicationWindowClass = _GtkApplicationWindowClass

typealias GtkApplicationWindow = _GtkApplicationWindow

typealias GtkFramePrivate = _GtkFramePrivate

typealias GtkFrame = _GtkFrame

typealias GtkFrameClass = _GtkFrameClass

typealias GtkAspectFramePrivate = _GtkAspectFramePrivate

typealias GtkAspectFrame = _GtkAspectFrame

typealias GtkAspectFrameClass = _GtkAspectFrameClass

typealias GtkAssistantPrivate = _GtkAssistantPrivate

typealias GtkAssistant = _GtkAssistant

typealias GtkAssistantClass = _GtkAssistantClass

typealias GtkAssistantPageFuncVar = CPointerVarOf<GtkAssistantPageFunc>

typealias GtkAssistantPageFunc = CPointer<CFunction<(gint, gpointer?) -> gint>>

typealias GtkButtonBoxPrivate = _GtkButtonBoxPrivate

typealias GtkButtonBox = _GtkButtonBox

typealias GtkButtonBoxClass = _GtkButtonBoxClass

typealias GtkBindingSet = _GtkBindingSet

typealias GtkBindingEntry = _GtkBindingEntry

typealias GtkBindingSignal = _GtkBindingSignal

typealias GtkBindingArg = _GtkBindingArg

typealias GtkBuilderClass = _GtkBuilderClass

typealias GtkBuildable = _GtkBuildable

typealias GMarkupParseContext = _GMarkupParseContext

typealias GMarkupParser = _GMarkupParser

typealias GtkBuildableIface = _GtkBuildableIface

typealias GtkButtonPrivate = _GtkButtonPrivate

typealias GtkButton = _GtkButton

typealias GtkButtonClass = _GtkButtonClass

typealias GtkCalendarPrivate = _GtkCalendarPrivate

typealias GtkCalendar = _GtkCalendar

typealias GtkCalendarClass = _GtkCalendarClass

typealias GtkCalendarDetailFuncVar = CPointerVarOf<GtkCalendarDetailFunc>

typealias GtkCalendarDetailFunc = CPointer<CFunction<(CPointer<GtkCalendar>?, guint, guint, guint, gpointer?) -> CPointer<gcharVar>?>>

typealias GtkCellAreaBoxPrivate = _GtkCellAreaBoxPrivate

typealias GtkCellAreaBox = _GtkCellAreaBox

typealias GtkCellAreaBoxClass = _GtkCellAreaBoxClass

typealias GtkCellAreaContextClass = _GtkCellAreaContextClass

typealias GtkCellLayout = _GtkCellLayout

typealias GtkCellLayoutDataFuncVar = CPointerVarOf<GtkCellLayoutDataFunc>

typealias GtkCellLayoutDataFunc = CPointer<CFunction<(CPointer<GtkCellLayout>?, CPointer<GtkCellRenderer>?, CPointer<GtkTreeModel>?, CPointer<GtkTreeIter>?, gpointer?) -> Unit>>

typealias GtkCellLayoutIface = _GtkCellLayoutIface

typealias GtkCellRendererTextPrivate = _GtkCellRendererTextPrivate

typealias GtkCellRendererText = _GtkCellRendererText

typealias GtkCellRendererTextClass = _GtkCellRendererTextClass

typealias GtkCellRendererAccelPrivate = _GtkCellRendererAccelPrivate

typealias GtkCellRendererAccel = _GtkCellRendererAccel

typealias GtkCellRendererAccelClass = _GtkCellRendererAccelClass

typealias GtkCellRendererComboPrivate = _GtkCellRendererComboPrivate

typealias GtkCellRendererCombo = _GtkCellRendererCombo

typealias GtkCellRendererComboClass = _GtkCellRendererComboClass

typealias GtkCellRendererPixbufPrivate = _GtkCellRendererPixbufPrivate

typealias GtkCellRendererPixbuf = _GtkCellRendererPixbuf

typealias GtkCellRendererPixbufClass = _GtkCellRendererPixbufClass

typealias GtkCellRendererProgressPrivate = _GtkCellRendererProgressPrivate

typealias GtkCellRendererProgress = _GtkCellRendererProgress

typealias GtkCellRendererProgressClass = _GtkCellRendererProgressClass

typealias GtkCellRendererSpinPrivate = _GtkCellRendererSpinPrivate

typealias GtkCellRendererSpin = _GtkCellRendererSpin

typealias GtkCellRendererSpinClass = _GtkCellRendererSpinClass

typealias GtkCellRendererSpinnerPrivate = _GtkCellRendererSpinnerPrivate

typealias GtkCellRendererSpinner = _GtkCellRendererSpinner

typealias GtkCellRendererSpinnerClass = _GtkCellRendererSpinnerClass

typealias GtkCellRendererTogglePrivate = _GtkCellRendererTogglePrivate

typealias GtkCellRendererToggle = _GtkCellRendererToggle

typealias GtkCellRendererToggleClass = _GtkCellRendererToggleClass

typealias GtkCellViewPrivate = _GtkCellViewPrivate

typealias GtkCellView = _GtkCellView

typealias GtkCellViewClass = _GtkCellViewClass

typealias GtkToggleButtonPrivate = _GtkToggleButtonPrivate

typealias GtkToggleButton = _GtkToggleButton

typealias GtkToggleButtonClass = _GtkToggleButtonClass

typealias GtkCheckButton = _GtkCheckButton

typealias GtkCheckButtonClass = _GtkCheckButtonClass

typealias GtkMenuItemPrivate = _GtkMenuItemPrivate

typealias GtkMenuItem = _GtkMenuItem

typealias GtkMenuItemClass = _GtkMenuItemClass

typealias GtkCheckMenuItemPrivate = _GtkCheckMenuItemPrivate

typealias GtkCheckMenuItem = _GtkCheckMenuItem

typealias GtkCheckMenuItemClass = _GtkCheckMenuItemClass

typealias GtkClipboardReceivedFuncVar = CPointerVarOf<GtkClipboardReceivedFunc>

typealias GtkClipboardReceivedFunc = CPointer<CFunction<(CPointer<GtkClipboard>?, CPointer<GtkSelectionData>?, gpointer?) -> Unit>>

typealias GtkClipboardTextReceivedFuncVar = CPointerVarOf<GtkClipboardTextReceivedFunc>

typealias GtkClipboardTextReceivedFunc = CPointer<CFunction<(CPointer<GtkClipboard>?, CPointer<gcharVar>?, gpointer?) -> Unit>>

typealias GtkClipboardRichTextReceivedFuncVar = CPointerVarOf<GtkClipboardRichTextReceivedFunc>

typealias GtkClipboardRichTextReceivedFunc = CPointer<CFunction<(CPointer<GtkClipboard>?, GdkAtom?, CPointer<guint8Var>?, gsize, gpointer?) -> Unit>>

typealias GtkClipboardImageReceivedFuncVar = CPointerVarOf<GtkClipboardImageReceivedFunc>

typealias GtkClipboardImageReceivedFunc = CPointer<CFunction<(CPointer<GtkClipboard>?, CPointer<GdkPixbuf>?, gpointer?) -> Unit>>

typealias GtkClipboardURIReceivedFuncVar = CPointerVarOf<GtkClipboardURIReceivedFunc>

typealias GtkClipboardURIReceivedFunc = CPointer<CFunction<(CPointer<GtkClipboard>?, CPointer<CPointerVar<gcharVar>>?, gpointer?) -> Unit>>

typealias GtkClipboardTargetsReceivedFuncVar = CPointerVarOf<GtkClipboardTargetsReceivedFunc>

typealias GtkClipboardTargetsReceivedFunc = CPointer<CFunction<(CPointer<GtkClipboard>?, CPointer<GdkAtomVar>?, gint, gpointer?) -> Unit>>

typealias GtkClipboardGetFuncVar = CPointerVarOf<GtkClipboardGetFunc>

typealias GtkClipboardGetFunc = CPointer<CFunction<(CPointer<GtkClipboard>?, CPointer<GtkSelectionData>?, guint, gpointer?) -> Unit>>

typealias GtkClipboardClearFuncVar = CPointerVarOf<GtkClipboardClearFunc>

typealias GtkClipboardClearFunc = CPointer<CFunction<(CPointer<GtkClipboard>?, gpointer?) -> Unit>>

typealias GtkColorButtonPrivate = _GtkColorButtonPrivate

typealias GtkColorButton = _GtkColorButton

typealias GtkColorButtonClass = _GtkColorButtonClass

typealias GtkColorChooser = _GtkColorChooser

typealias GtkColorChooserInterface = _GtkColorChooserInterface

typealias GtkColorChooserDialogPrivate = _GtkColorChooserDialogPrivate

typealias GtkColorChooserDialog = _GtkColorChooserDialog

typealias GtkColorChooserDialogClass = _GtkColorChooserDialogClass

typealias GtkColorChooserWidgetPrivate = _GtkColorChooserWidgetPrivate

typealias GtkColorChooserWidget = _GtkColorChooserWidget

typealias GtkColorChooserWidgetClass = _GtkColorChooserWidgetClass

typealias GtkComboBoxTextPrivate = _GtkComboBoxTextPrivate

typealias GtkComboBoxText = _GtkComboBoxText

typealias GtkComboBoxTextClass = _GtkComboBoxTextClass

typealias GtkCssSection = _GtkCssSection

typealias GtkCssProviderPrivate = _GtkCssProviderPrivate

typealias GtkCssProvider = _GtkCssProvider

typealias GtkCssProviderClass = _GtkCssProviderClass

typealias GtkDrawingArea = _GtkDrawingArea

typealias GtkDrawingAreaClass = _GtkDrawingAreaClass

typealias GtkEventBoxPrivate = _GtkEventBoxPrivate

typealias GtkEventBox = _GtkEventBox

typealias GtkEventBoxClass = _GtkEventBoxClass

typealias GtkEventController = _GtkEventController

typealias GtkEventControllerClass = _GtkEventControllerClass

typealias GtkExpanderPrivate = _GtkExpanderPrivate

typealias GtkExpander = _GtkExpander

typealias GtkExpanderClass = _GtkExpanderClass

typealias GtkFixedPrivate = _GtkFixedPrivate

typealias GtkFixed = _GtkFixed

typealias GtkFixedClass = _GtkFixedClass

typealias GtkFixedChild = _GtkFixedChild

typealias GtkFileFilter = _GtkFileFilter

typealias GtkFileFilterInfo = _GtkFileFilterInfo

typealias GtkFileFilterFuncVar = CPointerVarOf<GtkFileFilterFunc>

typealias GtkFileFilterFunc = CPointer<CFunction<(CPointer<GtkFileFilterInfo>?, gpointer?) -> gboolean>>

typealias GtkFileChooser = _GtkFileChooser

typealias GtkFileChooserButtonPrivate = _GtkFileChooserButtonPrivate

typealias GtkFileChooserButton = _GtkFileChooserButton

typealias GtkFileChooserButtonClass = _GtkFileChooserButtonClass

typealias GtkFileChooserDialogPrivate = _GtkFileChooserDialogPrivate

typealias GtkFileChooserDialog = _GtkFileChooserDialog

typealias GtkFileChooserDialogClass = _GtkFileChooserDialogClass

typealias GtkNativeDialog = _GtkNativeDialog

typealias GtkNativeDialogClass = _GtkNativeDialogClass

typealias GtkNativeDialog_autoptrVar = CPointerVarOf<GtkNativeDialog_autoptr>

typealias GtkNativeDialog_autoptr = CPointer<GtkNativeDialog>

typealias GtkFileChooserNative = _GtkFileChooserNative

typealias GtkFileChooserNative_autoptrVar = CPointerVarOf<GtkFileChooserNative_autoptr>

typealias GtkFileChooserNative_autoptr = CPointer<GtkFileChooserNative>

typealias GtkFileChooserWidgetPrivate = _GtkFileChooserWidgetPrivate

typealias GtkFileChooserWidget = _GtkFileChooserWidget

typealias GtkFileChooserWidgetClass = _GtkFileChooserWidgetClass

typealias GtkFlowBox = _GtkFlowBox

typealias GtkFlowBoxChild = _GtkFlowBoxChild

typealias GtkFlowBoxClass = _GtkFlowBoxClass

typealias GtkFlowBoxChildClass = _GtkFlowBoxChildClass

typealias GtkFlowBoxCreateWidgetFuncVar = CPointerVarOf<GtkFlowBoxCreateWidgetFunc>

typealias GtkFlowBoxCreateWidgetFunc = CPointer<CFunction<(gpointer?, gpointer?) -> CPointer<GtkWidget>?>>

typealias GtkFlowBoxForeachFuncVar = CPointerVarOf<GtkFlowBoxForeachFunc>

typealias GtkFlowBoxForeachFunc = CPointer<CFunction<(CPointer<GtkFlowBox>?, CPointer<GtkFlowBoxChild>?, gpointer?) -> Unit>>

typealias GtkFlowBoxFilterFuncVar = CPointerVarOf<GtkFlowBoxFilterFunc>

typealias GtkFlowBoxFilterFunc = CPointer<CFunction<(CPointer<GtkFlowBoxChild>?, gpointer?) -> gboolean>>

typealias GtkFlowBoxSortFuncVar = CPointerVarOf<GtkFlowBoxSortFunc>

typealias GtkFlowBoxSortFunc = CPointer<CFunction<(CPointer<GtkFlowBoxChild>?, CPointer<GtkFlowBoxChild>?, gpointer?) -> gint>>

typealias GtkFontButtonPrivate = _GtkFontButtonPrivate

typealias GtkFontButton = _GtkFontButton

typealias GtkFontButtonClass = _GtkFontButtonClass

typealias PangoFontFamily = _PangoFontFamily

typealias PangoFontFace = _PangoFontFace

typealias GtkFontFilterFuncVar = CPointerVarOf<GtkFontFilterFunc>

typealias GtkFontFilterFunc = CPointer<CFunction<(CPointer<PangoFontFamily>?, CPointer<PangoFontFace>?, gpointer?) -> gboolean>>

typealias GtkFontChooser = _GtkFontChooser

typealias GtkFontChooserIface = _GtkFontChooserIface

typealias GtkFontChooserDialogPrivate = _GtkFontChooserDialogPrivate

typealias GtkFontChooserDialog = _GtkFontChooserDialog

typealias GtkFontChooserDialogClass = _GtkFontChooserDialogClass

typealias GtkFontChooserWidgetPrivate = _GtkFontChooserWidgetPrivate

typealias GtkFontChooserWidget = _GtkFontChooserWidget

typealias GtkFontChooserWidgetClass = _GtkFontChooserWidgetClass

typealias GtkGesture = _GtkGesture

typealias GtkGestureClass = _GtkGestureClass

typealias GtkGestureSingle = _GtkGestureSingle

typealias GtkGestureSingleClass = _GtkGestureSingleClass

typealias GtkGestureDrag = _GtkGestureDrag

typealias GtkGestureDragClass = _GtkGestureDragClass

typealias GtkGestureLongPress = _GtkGestureLongPress

typealias GtkGestureLongPressClass = _GtkGestureLongPressClass

typealias GtkGestureMultiPress = _GtkGestureMultiPress

typealias GtkGestureMultiPressClass = _GtkGestureMultiPressClass

typealias GtkGesturePan = _GtkGesturePan

typealias GtkGesturePanClass = _GtkGesturePanClass

typealias GtkGestureRotate = _GtkGestureRotate

typealias GtkGestureRotateClass = _GtkGestureRotateClass

typealias GtkGestureSwipe = _GtkGestureSwipe

typealias GtkGestureSwipeClass = _GtkGestureSwipeClass

typealias GtkGestureZoom = _GtkGestureZoom

typealias GtkGestureZoomClass = _GtkGestureZoomClass

typealias GtkGLArea = _GtkGLArea

typealias GdkGLContext = _GdkGLContext

typealias GtkGLAreaClass = _GtkGLAreaClass

typealias GtkGridPrivate = _GtkGridPrivate

typealias GtkGrid = _GtkGrid

typealias GtkGridClass = _GtkGridClass

typealias GtkHeaderBar = _GtkHeaderBar

typealias GtkHeaderBarPrivate = _GtkHeaderBarPrivate

typealias GtkHeaderBarClass = _GtkHeaderBarClass

typealias GtkStylePropertiesPrivate = _GtkStylePropertiesPrivate

typealias GtkStyleProperties = _GtkStyleProperties

typealias GtkStyleProvider = _GtkStyleProvider

typealias GtkIconFactoryPrivate = _GtkIconFactoryPrivate

typealias GtkIconFactory = _GtkIconFactory

typealias GtkStyleProviderIface = _GtkStyleProviderIface

typealias GtkStyleContextClass = _GtkStyleContextClass

typealias GtkIconInfo = _GtkIconInfo

typealias GtkIconInfoClass = _GtkIconInfoClass

typealias GtkIconThemePrivate = _GtkIconThemePrivate

typealias GtkIconTheme = _GtkIconTheme

typealias GtkIconThemeClass = _GtkIconThemeClass

typealias GdkPoint = _GdkPoint

typealias GtkIconViewPrivate = _GtkIconViewPrivate

typealias GtkIconView = _GtkIconView

typealias GtkIconViewClass = _GtkIconViewClass

typealias GtkIconViewForeachFuncVar = CPointerVarOf<GtkIconViewForeachFunc>

typealias GtkIconViewForeachFunc = CPointer<CFunction<(CPointer<GtkIconView>?, CPointer<GtkTreePath>?, gpointer?) -> Unit>>

typealias GtkIMContextInfo = _GtkIMContextInfo

typealias GtkIMContextSimplePrivate = _GtkIMContextSimplePrivate

typealias GtkIMContextSimple = _GtkIMContextSimple

typealias GtkIMContextSimpleClass = _GtkIMContextSimpleClass

typealias GtkIMMulticontextPrivate = _GtkIMMulticontextPrivate

typealias GtkIMMulticontext = _GtkIMMulticontext

typealias GtkIMMulticontextClass = _GtkIMMulticontextClass

typealias GtkInfoBarPrivate = _GtkInfoBarPrivate

typealias GtkInfoBar = _GtkInfoBar

typealias GtkInfoBarClass = _GtkInfoBarClass

typealias GtkInvisiblePrivate = _GtkInvisiblePrivate

typealias GtkInvisible = _GtkInvisible

typealias GtkInvisibleClass = _GtkInvisibleClass

typealias GtkLayoutPrivate = _GtkLayoutPrivate

typealias GtkLayout = _GtkLayout

typealias GtkLayoutClass = _GtkLayoutClass

typealias GtkLevelBarPrivate = _GtkLevelBarPrivate

typealias GtkLevelBar = _GtkLevelBar

typealias GtkLevelBarClass = _GtkLevelBarClass

typealias GtkLinkButtonPrivate = _GtkLinkButtonPrivate

typealias GtkLinkButton = _GtkLinkButton

typealias GtkLinkButtonClass = _GtkLinkButtonClass

typealias GtkListBox = _GtkListBox

typealias GtkListBoxRow = _GtkListBoxRow

typealias GtkListBoxClass = _GtkListBoxClass

typealias GtkListBoxRowClass = _GtkListBoxRowClass

typealias GtkListBoxFilterFuncVar = CPointerVarOf<GtkListBoxFilterFunc>

typealias GtkListBoxFilterFunc = CPointer<CFunction<(CPointer<GtkListBoxRow>?, gpointer?) -> gboolean>>

typealias GtkListBoxSortFuncVar = CPointerVarOf<GtkListBoxSortFunc>

typealias GtkListBoxSortFunc = CPointer<CFunction<(CPointer<GtkListBoxRow>?, CPointer<GtkListBoxRow>?, gpointer?) -> gint>>

typealias GtkListBoxUpdateHeaderFuncVar = CPointerVarOf<GtkListBoxUpdateHeaderFunc>

typealias GtkListBoxUpdateHeaderFunc = CPointer<CFunction<(CPointer<GtkListBoxRow>?, CPointer<GtkListBoxRow>?, gpointer?) -> Unit>>

typealias GtkListBoxCreateWidgetFuncVar = CPointerVarOf<GtkListBoxCreateWidgetFunc>

typealias GtkListBoxCreateWidgetFunc = CPointer<CFunction<(gpointer?, gpointer?) -> CPointer<GtkWidget>?>>

typealias GtkListBoxForeachFuncVar = CPointerVarOf<GtkListBoxForeachFunc>

typealias GtkListBoxForeachFunc = CPointer<CFunction<(CPointer<GtkListBox>?, CPointer<GtkListBoxRow>?, gpointer?) -> Unit>>

typealias GtkListBox_autoptrVar = CPointerVarOf<GtkListBox_autoptr>

typealias GtkListBox_autoptr = CPointer<GtkListBox>

typealias GtkListBox_listautoptrVar = CPointerVarOf<GtkListBox_listautoptr>

typealias GtkListBox_listautoptr = CPointer<GList>

typealias GtkListBox_slistautoptrVar = CPointerVarOf<GtkListBox_slistautoptr>

typealias GtkListBox_slistautoptr = CPointer<GSList>

typealias GtkListBoxRow_autoptrVar = CPointerVarOf<GtkListBoxRow_autoptr>

typealias GtkListBoxRow_autoptr = CPointer<GtkListBoxRow>

typealias GtkListBoxRow_listautoptrVar = CPointerVarOf<GtkListBoxRow_listautoptr>

typealias GtkListBoxRow_listautoptr = CPointer<GList>

typealias GtkListBoxRow_slistautoptrVar = CPointerVarOf<GtkListBoxRow_slistautoptr>

typealias GtkListBoxRow_slistautoptr = CPointer<GSList>

typealias GtkLockButtonPrivate = _GtkLockButtonPrivate

typealias GtkLockButton = _GtkLockButton

typealias GtkLockButtonClass = _GtkLockButtonClass

typealias GtkKeySnoopFuncVar = CPointerVarOf<GtkKeySnoopFunc>

typealias GtkKeySnoopFunc = CPointer<CFunction<(CPointer<GtkWidget>?, CPointer<GdkEventKey>?, gpointer?) -> gint>>

typealias GtkMenuBarPrivate = _GtkMenuBarPrivate

typealias GtkMenuBar = _GtkMenuBar

typealias GtkMenuBarClass = _GtkMenuBarClass

typealias GtkPopoverPrivate = _GtkPopoverPrivate

typealias GtkPopover = _GtkPopover

typealias GtkPopoverClass = _GtkPopoverClass

typealias GtkMenuButtonPrivate = _GtkMenuButtonPrivate

typealias GtkMenuButton = _GtkMenuButton

typealias GtkMenuButtonClass = _GtkMenuButtonClass

typealias GtkSizeGroupPrivate = _GtkSizeGroupPrivate

typealias GtkSizeGroup = _GtkSizeGroup

typealias GtkSizeGroupClass = _GtkSizeGroupClass

typealias GtkToolItemPrivate = _GtkToolItemPrivate

typealias GtkToolItem = _GtkToolItem

typealias GtkToolItemClass = _GtkToolItemClass

typealias GtkToolButtonPrivate = _GtkToolButtonPrivate

typealias GtkToolButton = _GtkToolButton

typealias GtkToolButtonClass = _GtkToolButtonClass

typealias GtkMenuToolButtonPrivate = _GtkMenuToolButtonPrivate

typealias GtkMenuToolButton = _GtkMenuToolButton

typealias GtkMenuToolButtonClass = _GtkMenuToolButtonClass

typealias GtkMessageDialogPrivate = _GtkMessageDialogPrivate

typealias GtkMessageDialog = _GtkMessageDialog

typealias GtkMessageDialogClass = _GtkMessageDialogClass

typealias GtkModelButton = _GtkModelButton

typealias GtkModuleInitFuncVar = CPointerVarOf<GtkModuleInitFunc>

typealias GtkModuleInitFunc = CPointer<CFunction<(CPointer<gintVar>?, CPointer<CPointerVar<CPointerVar<gcharVar>>>?) -> Unit>>

typealias GtkModuleDisplayInitFuncVar = CPointerVarOf<GtkModuleDisplayInitFunc>

typealias GtkModuleDisplayInitFunc = CPointer<CFunction<(CPointer<GdkDisplay>?) -> Unit>>

typealias GtkMountOperationPrivate = _GtkMountOperationPrivate

typealias GtkMountOperation = _GtkMountOperation

typealias GtkMountOperationClass = _GtkMountOperationClass

typealias GtkNotebookPrivate = _GtkNotebookPrivate

typealias GtkNotebook = _GtkNotebook

typealias GtkNotebookClass = _GtkNotebookClass

typealias GtkOffscreenWindow = _GtkOffscreenWindow

typealias GtkOffscreenWindowClass = _GtkOffscreenWindowClass

typealias GtkOrientable = _GtkOrientable

typealias GtkOrientableIface = _GtkOrientableIface

typealias GtkOverlayPrivate = _GtkOverlayPrivate

typealias GtkOverlay = _GtkOverlay

typealias GtkOverlayClass = _GtkOverlayClass

typealias GtkPadController = _GtkPadController

typealias GtkPadControllerClass = _GtkPadControllerClass

typealias GtkPadActionEntry = _GtkPadActionEntry

typealias GtkPaperSize = _GtkPaperSize

typealias GKeyFile = _GKeyFile

typealias GtkPageSetup = _GtkPageSetup

typealias GtkPanedPrivate = _GtkPanedPrivate

typealias GtkPaned = _GtkPaned

typealias GtkPanedClass = _GtkPanedClass

typealias GtkPlacesSidebar = _GtkPlacesSidebar

typealias GtkPlacesSidebarClass = _GtkPlacesSidebarClass

typealias GtkPopoverMenu = _GtkPopoverMenu

typealias GtkPopoverMenuClass = _GtkPopoverMenuClass

typealias GtkPrintContext = _GtkPrintContext

typealias GtkPrintSettings = _GtkPrintSettings

typealias GtkPrintSettingsFuncVar = CPointerVarOf<GtkPrintSettingsFunc>

typealias GtkPrintSettingsFunc = CPointer<CFunction<(CPointer<gcharVar>?, CPointer<gcharVar>?, gpointer?) -> Unit>>

typealias GtkPageRange = _GtkPageRange

typealias GtkPrintOperationPreview = _GtkPrintOperationPreview

typealias GtkPrintOperationPreviewIface = _GtkPrintOperationPreviewIface

typealias GtkPrintOperationPrivate = _GtkPrintOperationPrivate

typealias GtkPrintOperation = _GtkPrintOperation

typealias GtkPrintOperationClass = _GtkPrintOperationClass

typealias GtkPageSetupDoneFuncVar = CPointerVarOf<GtkPageSetupDoneFunc>

typealias GtkPageSetupDoneFunc = CPointer<CFunction<(CPointer<GtkPageSetup>?, gpointer?) -> Unit>>

typealias GtkProgressBarPrivate = _GtkProgressBarPrivate

typealias GtkProgressBar = _GtkProgressBar

typealias GtkProgressBarClass = _GtkProgressBarClass

typealias GtkRadioButtonPrivate = _GtkRadioButtonPrivate

typealias GtkRadioButton = _GtkRadioButton

typealias GtkRadioButtonClass = _GtkRadioButtonClass

typealias GtkRadioMenuItemPrivate = _GtkRadioMenuItemPrivate

typealias GtkRadioMenuItem = _GtkRadioMenuItem

typealias GtkRadioMenuItemClass = _GtkRadioMenuItemClass

typealias GtkToggleToolButtonPrivate = _GtkToggleToolButtonPrivate

typealias GtkToggleToolButton = _GtkToggleToolButton

typealias GtkToggleToolButtonClass = _GtkToggleToolButtonClass

typealias GtkRadioToolButton = _GtkRadioToolButton

typealias GtkRadioToolButtonClass = _GtkRadioToolButtonClass

typealias GtkRangePrivate = _GtkRangePrivate

typealias GtkRange = _GtkRange

typealias GtkRangeClass = _GtkRangeClass

typealias GtkRecentInfo = _GtkRecentInfo

typealias GtkRecentData = _GtkRecentData

typealias GtkRecentManagerPrivate = _GtkRecentManagerPrivate

typealias GtkRecentManager = _GtkRecentManager

typealias GtkRecentManagerClass = _GtkRecentManagerClass

typealias __time_tVar = LongVarOf<__time_t>

typealias __time_t = Long

typealias time_tVar = LongVarOf<time_t>

typealias time_t = __time_t

typealias GtkRecentFilter = _GtkRecentFilter

typealias GtkRecentFilterInfo = _GtkRecentFilterInfo

typealias GtkRecentFilterFuncVar = CPointerVarOf<GtkRecentFilterFunc>

typealias GtkRecentFilterFunc = CPointer<CFunction<(CPointer<GtkRecentFilterInfo>?, gpointer?) -> gboolean>>

typealias GtkRecentSortFuncVar = CPointerVarOf<GtkRecentSortFunc>

typealias GtkRecentSortFunc = CPointer<CFunction<(CPointer<GtkRecentInfo>?, CPointer<GtkRecentInfo>?, gpointer?) -> gint>>

typealias GtkRecentChooser = _GtkRecentChooser

typealias GtkRecentChooserIface = _GtkRecentChooserIface

typealias GtkRecentChooserDialogPrivate = _GtkRecentChooserDialogPrivate

typealias GtkRecentChooserDialog = _GtkRecentChooserDialog

typealias GtkRecentChooserDialogClass = _GtkRecentChooserDialogClass

typealias GtkRecentChooserMenuPrivate = _GtkRecentChooserMenuPrivate

typealias GtkRecentChooserMenu = _GtkRecentChooserMenu

typealias GtkRecentChooserMenuClass = _GtkRecentChooserMenuClass

typealias GtkRecentChooserWidgetPrivate = _GtkRecentChooserWidgetPrivate

typealias GtkRecentChooserWidget = _GtkRecentChooserWidget

typealias GtkRecentChooserWidgetClass = _GtkRecentChooserWidgetClass

typealias GtkRevealer = _GtkRevealer

typealias GtkRevealerClass = _GtkRevealerClass

typealias GtkScalePrivate = _GtkScalePrivate

typealias GtkScale = _GtkScale

typealias GtkScaleClass = _GtkScaleClass

typealias GtkScaleButtonPrivate = _GtkScaleButtonPrivate

typealias GtkScaleButton = _GtkScaleButton

typealias GtkScaleButtonClass = _GtkScaleButtonClass

typealias GtkScrollable = _GtkScrollable

typealias GtkScrollableInterface = _GtkScrollableInterface

typealias GtkScrollbar = _GtkScrollbar

typealias GtkScrollbarClass = _GtkScrollbarClass

typealias GtkScrolledWindowPrivate = _GtkScrolledWindowPrivate

typealias GtkScrolledWindow = _GtkScrolledWindow

typealias GtkScrolledWindowClass = _GtkScrolledWindowClass

typealias GtkSearchBar = _GtkSearchBar

typealias GtkSearchBarClass = _GtkSearchBarClass

typealias GtkSearchEntry = _GtkSearchEntry

typealias GtkSearchEntryClass = _GtkSearchEntryClass

typealias GtkSeparatorPrivate = _GtkSeparatorPrivate

typealias GtkSeparator = _GtkSeparator

typealias GtkSeparatorClass = _GtkSeparatorClass

typealias GtkSeparatorMenuItem = _GtkSeparatorMenuItem

typealias GtkSeparatorMenuItemClass = _GtkSeparatorMenuItemClass

typealias GtkSeparatorToolItemPrivate = _GtkSeparatorToolItemPrivate

typealias GtkSeparatorToolItem = _GtkSeparatorToolItem

typealias GtkSeparatorToolItemClass = _GtkSeparatorToolItemClass

typealias GtkSettingsClass = _GtkSettingsClass

typealias GtkSettingsValue = _GtkSettingsValue

typealias GtkShortcutLabel = _GtkShortcutLabel

typealias GtkShortcutLabelClass = _GtkShortcutLabelClass

typealias GtkShortcutsGroup = _GtkShortcutsGroup

typealias GtkShortcutsGroupClass = _GtkShortcutsGroupClass

typealias GtkShortcutsSection = _GtkShortcutsSection

typealias GtkShortcutsSectionClass = _GtkShortcutsSectionClass

typealias GtkShortcutsShortcut = _GtkShortcutsShortcut

typealias GtkShortcutsShortcutClass = _GtkShortcutsShortcutClass

typealias GtkStack = _GtkStack

typealias GtkStackClass = _GtkStackClass

typealias GtkStackSidebar = _GtkStackSidebar

typealias GtkStackSidebarPrivate = _GtkStackSidebarPrivate

typealias GtkStackSidebarClass = _GtkStackSidebarClass

typealias GtkRequestedSize = _GtkRequestedSize

typealias GtkSpinButtonPrivate = _GtkSpinButtonPrivate

typealias GtkSpinButton = _GtkSpinButton

typealias GtkSpinButtonClass = _GtkSpinButtonClass

typealias GtkSpinnerPrivate = _GtkSpinnerPrivate

typealias GtkSpinner = _GtkSpinner

typealias GtkSpinnerClass = _GtkSpinnerClass

typealias GtkStackSwitcher = _GtkStackSwitcher

typealias GtkStackSwitcherClass = _GtkStackSwitcherClass

typealias GtkStatusbarPrivate = _GtkStatusbarPrivate

typealias GtkStatusbar = _GtkStatusbar

typealias GtkStatusbarClass = _GtkStatusbarClass

typealias GtkSwitchPrivate = _GtkSwitchPrivate

typealias GtkSwitch = _GtkSwitch

typealias GtkSwitchClass = _GtkSwitchClass

typealias GtkTextTagTableForeachVar = CPointerVarOf<GtkTextTagTableForeach>

typealias GtkTextTagTableForeach = CPointer<CFunction<(CPointer<GtkTextTag>?, gpointer?) -> Unit>>

typealias GtkTextTagTableClass = _GtkTextTagTableClass

typealias GtkTextMark = _GtkTextMark

typealias GtkTextMarkClass = _GtkTextMarkClass

typealias GtkTextBTree = _GtkTextBTree

typealias GtkTextBufferClass = _GtkTextBufferClass

typealias GtkTextBufferSerializeFuncVar = CPointerVarOf<GtkTextBufferSerializeFunc>

typealias GtkTextBufferSerializeFunc = CPointer<CFunction<(CPointer<GtkTextBuffer>?, CPointer<GtkTextBuffer>?, CPointer<GtkTextIter>?, CPointer<GtkTextIter>?, CPointer<gsizeVar>?, gpointer?) -> CPointer<guint8Var>?>>

typealias GtkTextBufferDeserializeFuncVar = CPointerVarOf<GtkTextBufferDeserializeFunc>

typealias GtkTextBufferDeserializeFunc = CPointer<CFunction<(CPointer<GtkTextBuffer>?, CPointer<GtkTextBuffer>?, CPointer<GtkTextIter>?, CPointer<guint8Var>?, gsize, gboolean, gpointer?, CPointer<CPointerVar<GError>>?) -> gboolean>>

typealias GtkTextViewPrivate = _GtkTextViewPrivate

typealias GtkTextView = _GtkTextView

typealias GtkTextViewClass = _GtkTextViewClass

typealias GtkToolbarPrivate = _GtkToolbarPrivate

typealias GtkToolbar = _GtkToolbar

typealias GtkToolbarClass = _GtkToolbarClass

typealias GtkToolItemGroupPrivate = _GtkToolItemGroupPrivate

typealias GtkToolItemGroup = _GtkToolItemGroup

typealias GtkToolItemGroupClass = _GtkToolItemGroupClass

typealias GtkToolPalettePrivate = _GtkToolPalettePrivate

typealias GtkToolPalette = _GtkToolPalette

typealias GtkToolPaletteClass = _GtkToolPaletteClass

typealias GtkToolShell = _GtkToolShell

typealias GtkToolShellIface = _GtkToolShellIface

typealias GtkTreeDragSource = _GtkTreeDragSource

typealias GtkTreeDragSourceIface = _GtkTreeDragSourceIface

typealias GtkTreeDragDest = _GtkTreeDragDest

typealias GtkTreeDragDestIface = _GtkTreeDragDestIface

typealias GtkTreeModelSortPrivate = _GtkTreeModelSortPrivate

typealias GtkTreeModelSort = _GtkTreeModelSort

typealias GtkTreeModelSortClass = _GtkTreeModelSortClass

typealias GtkTreeSelectionFuncVar = CPointerVarOf<GtkTreeSelectionFunc>

typealias GtkTreeSelectionFunc = CPointer<CFunction<(CPointer<GtkTreeSelection>?, CPointer<GtkTreeModel>?, CPointer<GtkTreePath>?, gboolean, gpointer?) -> gboolean>>

typealias GtkTreeSelectionForeachFuncVar = CPointerVarOf<GtkTreeSelectionForeachFunc>

typealias GtkTreeSelectionForeachFunc = CPointer<CFunction<(CPointer<GtkTreeModel>?, CPointer<GtkTreePath>?, CPointer<GtkTreeIter>?, gpointer?) -> Unit>>

typealias GtkTreeStorePrivate = _GtkTreeStorePrivate

typealias GtkTreeStore = _GtkTreeStore

typealias GtkTreeStoreClass = _GtkTreeStoreClass

typealias GtkViewportPrivate = _GtkViewportPrivate

typealias GtkViewport = _GtkViewport

typealias GtkViewportClass = _GtkViewportClass

typealias GtkVolumeButton = _GtkVolumeButton

typealias GtkVolumeButtonClass = _GtkVolumeButtonClass

typealias GtkAccessible_autoptrVar = CPointerVarOf<GtkAccessible_autoptr>

typealias GtkAccessible_autoptr = CPointer<GtkAccessible>

typealias GtkAccessible_listautoptrVar = CPointerVarOf<GtkAccessible_listautoptr>

typealias GtkAccessible_listautoptr = CPointer<GList>

typealias GtkAccessible_slistautoptrVar = CPointerVarOf<GtkAccessible_slistautoptr>

typealias GtkAccessible_slistautoptr = CPointer<GSList>

typealias GtkActionBar_autoptrVar = CPointerVarOf<GtkActionBar_autoptr>

typealias GtkActionBar_autoptr = CPointer<GtkActionBar>

typealias GtkActionBar_listautoptrVar = CPointerVarOf<GtkActionBar_listautoptr>

typealias GtkActionBar_listautoptr = CPointer<GList>

typealias GtkActionBar_slistautoptrVar = CPointerVarOf<GtkActionBar_slistautoptr>

typealias GtkActionBar_slistautoptr = CPointer<GSList>

typealias GtkActionable_autoptrVar = CPointerVarOf<GtkActionable_autoptr>

typealias GtkActionable_autoptr = CPointer<GtkActionable>

typealias GtkActionable_listautoptrVar = CPointerVarOf<GtkActionable_listautoptr>

typealias GtkActionable_listautoptr = CPointer<GList>

typealias GtkActionable_slistautoptrVar = CPointerVarOf<GtkActionable_slistautoptr>

typealias GtkActionable_slistautoptr = CPointer<GSList>

typealias GtkAdjustment_autoptrVar = CPointerVarOf<GtkAdjustment_autoptr>

typealias GtkAdjustment_autoptr = CPointer<GtkAdjustment>

typealias GtkAdjustment_listautoptrVar = CPointerVarOf<GtkAdjustment_listautoptr>

typealias GtkAdjustment_listautoptr = CPointer<GList>

typealias GtkAdjustment_slistautoptrVar = CPointerVarOf<GtkAdjustment_slistautoptr>

typealias GtkAdjustment_slistautoptr = CPointer<GSList>

typealias GtkAppChooser_autoptrVar = CPointerVarOf<GtkAppChooser_autoptr>

typealias GtkAppChooser_autoptr = CPointer<GtkAppChooser>

typealias GtkAppChooser_listautoptrVar = CPointerVarOf<GtkAppChooser_listautoptr>

typealias GtkAppChooser_listautoptr = CPointer<GList>

typealias GtkAppChooser_slistautoptrVar = CPointerVarOf<GtkAppChooser_slistautoptr>

typealias GtkAppChooser_slistautoptr = CPointer<GSList>

typealias GtkAppChooserButton_autoptrVar = CPointerVarOf<GtkAppChooserButton_autoptr>

typealias GtkAppChooserButton_autoptr = CPointer<GtkAppChooserButton>

typealias GtkAppChooserButton_listautoptrVar = CPointerVarOf<GtkAppChooserButton_listautoptr>

typealias GtkAppChooserButton_listautoptr = CPointer<GList>

typealias GtkAppChooserButton_slistautoptrVar = CPointerVarOf<GtkAppChooserButton_slistautoptr>

typealias GtkAppChooserButton_slistautoptr = CPointer<GSList>

typealias GtkAppChooserDialog_autoptrVar = CPointerVarOf<GtkAppChooserDialog_autoptr>

typealias GtkAppChooserDialog_autoptr = CPointer<GtkAppChooserDialog>

typealias GtkAppChooserDialog_listautoptrVar = CPointerVarOf<GtkAppChooserDialog_listautoptr>

typealias GtkAppChooserDialog_listautoptr = CPointer<GList>

typealias GtkAppChooserDialog_slistautoptrVar = CPointerVarOf<GtkAppChooserDialog_slistautoptr>

typealias GtkAppChooserDialog_slistautoptr = CPointer<GSList>

typealias GtkAppChooserWidget_autoptrVar = CPointerVarOf<GtkAppChooserWidget_autoptr>

typealias GtkAppChooserWidget_autoptr = CPointer<GtkAppChooserWidget>

typealias GtkAppChooserWidget_listautoptrVar = CPointerVarOf<GtkAppChooserWidget_listautoptr>

typealias GtkAppChooserWidget_listautoptr = CPointer<GList>

typealias GtkAppChooserWidget_slistautoptrVar = CPointerVarOf<GtkAppChooserWidget_slistautoptr>

typealias GtkAppChooserWidget_slistautoptr = CPointer<GSList>

typealias GtkApplicationWindow_autoptrVar = CPointerVarOf<GtkApplicationWindow_autoptr>

typealias GtkApplicationWindow_autoptr = CPointer<GtkApplicationWindow>

typealias GtkApplicationWindow_listautoptrVar = CPointerVarOf<GtkApplicationWindow_listautoptr>

typealias GtkApplicationWindow_listautoptr = CPointer<GList>

typealias GtkApplicationWindow_slistautoptrVar = CPointerVarOf<GtkApplicationWindow_slistautoptr>

typealias GtkApplicationWindow_slistautoptr = CPointer<GSList>

typealias GtkAspectFrame_autoptrVar = CPointerVarOf<GtkAspectFrame_autoptr>

typealias GtkAspectFrame_autoptr = CPointer<GtkAspectFrame>

typealias GtkAspectFrame_listautoptrVar = CPointerVarOf<GtkAspectFrame_listautoptr>

typealias GtkAspectFrame_listautoptr = CPointer<GList>

typealias GtkAspectFrame_slistautoptrVar = CPointerVarOf<GtkAspectFrame_slistautoptr>

typealias GtkAspectFrame_slistautoptr = CPointer<GSList>

typealias GtkAssistant_autoptrVar = CPointerVarOf<GtkAssistant_autoptr>

typealias GtkAssistant_autoptr = CPointer<GtkAssistant>

typealias GtkAssistant_listautoptrVar = CPointerVarOf<GtkAssistant_listautoptr>

typealias GtkAssistant_listautoptr = CPointer<GList>

typealias GtkAssistant_slistautoptrVar = CPointerVarOf<GtkAssistant_slistautoptr>

typealias GtkAssistant_slistautoptr = CPointer<GSList>

typealias GtkBox_autoptrVar = CPointerVarOf<GtkBox_autoptr>

typealias GtkBox_autoptr = CPointer<GtkBox>

typealias GtkBox_listautoptrVar = CPointerVarOf<GtkBox_listautoptr>

typealias GtkBox_listautoptr = CPointer<GList>

typealias GtkBox_slistautoptrVar = CPointerVarOf<GtkBox_slistautoptr>

typealias GtkBox_slistautoptr = CPointer<GSList>

typealias GtkBuildable_autoptrVar = CPointerVarOf<GtkBuildable_autoptr>

typealias GtkBuildable_autoptr = CPointer<GtkBuildable>

typealias GtkBuildable_listautoptrVar = CPointerVarOf<GtkBuildable_listautoptr>

typealias GtkBuildable_listautoptr = CPointer<GList>

typealias GtkBuildable_slistautoptrVar = CPointerVarOf<GtkBuildable_slistautoptr>

typealias GtkBuildable_slistautoptr = CPointer<GSList>

typealias GtkBuilder_autoptrVar = CPointerVarOf<GtkBuilder_autoptr>

typealias GtkBuilder_autoptr = CPointer<GtkBuilder>

typealias GtkBuilder_listautoptrVar = CPointerVarOf<GtkBuilder_listautoptr>

typealias GtkBuilder_listautoptr = CPointer<GList>

typealias GtkBuilder_slistautoptrVar = CPointerVarOf<GtkBuilder_slistautoptr>

typealias GtkBuilder_slistautoptr = CPointer<GSList>

typealias GtkButton_autoptrVar = CPointerVarOf<GtkButton_autoptr>

typealias GtkButton_autoptr = CPointer<GtkButton>

typealias GtkButton_listautoptrVar = CPointerVarOf<GtkButton_listautoptr>

typealias GtkButton_listautoptr = CPointer<GList>

typealias GtkButton_slistautoptrVar = CPointerVarOf<GtkButton_slistautoptr>

typealias GtkButton_slistautoptr = CPointer<GSList>

typealias GtkButtonBox_autoptrVar = CPointerVarOf<GtkButtonBox_autoptr>

typealias GtkButtonBox_autoptr = CPointer<GtkButtonBox>

typealias GtkButtonBox_listautoptrVar = CPointerVarOf<GtkButtonBox_listautoptr>

typealias GtkButtonBox_listautoptr = CPointer<GList>

typealias GtkButtonBox_slistautoptrVar = CPointerVarOf<GtkButtonBox_slistautoptr>

typealias GtkButtonBox_slistautoptr = CPointer<GSList>

typealias GtkCalendar_autoptrVar = CPointerVarOf<GtkCalendar_autoptr>

typealias GtkCalendar_autoptr = CPointer<GtkCalendar>

typealias GtkCalendar_listautoptrVar = CPointerVarOf<GtkCalendar_listautoptr>

typealias GtkCalendar_listautoptr = CPointer<GList>

typealias GtkCalendar_slistautoptrVar = CPointerVarOf<GtkCalendar_slistautoptr>

typealias GtkCalendar_slistautoptr = CPointer<GSList>

typealias GtkCellArea_autoptrVar = CPointerVarOf<GtkCellArea_autoptr>

typealias GtkCellArea_autoptr = CPointer<GtkCellArea>

typealias GtkCellArea_listautoptrVar = CPointerVarOf<GtkCellArea_listautoptr>

typealias GtkCellArea_listautoptr = CPointer<GList>

typealias GtkCellArea_slistautoptrVar = CPointerVarOf<GtkCellArea_slistautoptr>

typealias GtkCellArea_slistautoptr = CPointer<GSList>

typealias GtkCellAreaBox_autoptrVar = CPointerVarOf<GtkCellAreaBox_autoptr>

typealias GtkCellAreaBox_autoptr = CPointer<GtkCellAreaBox>

typealias GtkCellAreaBox_listautoptrVar = CPointerVarOf<GtkCellAreaBox_listautoptr>

typealias GtkCellAreaBox_listautoptr = CPointer<GList>

typealias GtkCellAreaBox_slistautoptrVar = CPointerVarOf<GtkCellAreaBox_slistautoptr>

typealias GtkCellAreaBox_slistautoptr = CPointer<GSList>

typealias GtkCellAreaContext_autoptrVar = CPointerVarOf<GtkCellAreaContext_autoptr>

typealias GtkCellAreaContext_autoptr = CPointer<GtkCellAreaContext>

typealias GtkCellAreaContext_listautoptrVar = CPointerVarOf<GtkCellAreaContext_listautoptr>

typealias GtkCellAreaContext_listautoptr = CPointer<GList>

typealias GtkCellAreaContext_slistautoptrVar = CPointerVarOf<GtkCellAreaContext_slistautoptr>

typealias GtkCellAreaContext_slistautoptr = CPointer<GSList>

typealias GtkCellEditable_autoptrVar = CPointerVarOf<GtkCellEditable_autoptr>

typealias GtkCellEditable_autoptr = CPointer<GtkCellEditable>

typealias GtkCellEditable_listautoptrVar = CPointerVarOf<GtkCellEditable_listautoptr>

typealias GtkCellEditable_listautoptr = CPointer<GList>

typealias GtkCellEditable_slistautoptrVar = CPointerVarOf<GtkCellEditable_slistautoptr>

typealias GtkCellEditable_slistautoptr = CPointer<GSList>

typealias GtkCellLayout_autoptrVar = CPointerVarOf<GtkCellLayout_autoptr>

typealias GtkCellLayout_autoptr = CPointer<GtkCellLayout>

typealias GtkCellLayout_listautoptrVar = CPointerVarOf<GtkCellLayout_listautoptr>

typealias GtkCellLayout_listautoptr = CPointer<GList>

typealias GtkCellLayout_slistautoptrVar = CPointerVarOf<GtkCellLayout_slistautoptr>

typealias GtkCellLayout_slistautoptr = CPointer<GSList>

typealias GtkCellRenderer_autoptrVar = CPointerVarOf<GtkCellRenderer_autoptr>

typealias GtkCellRenderer_autoptr = CPointer<GtkCellRenderer>

typealias GtkCellRenderer_listautoptrVar = CPointerVarOf<GtkCellRenderer_listautoptr>

typealias GtkCellRenderer_listautoptr = CPointer<GList>

typealias GtkCellRenderer_slistautoptrVar = CPointerVarOf<GtkCellRenderer_slistautoptr>

typealias GtkCellRenderer_slistautoptr = CPointer<GSList>

typealias GtkCellRendererAccel_autoptrVar = CPointerVarOf<GtkCellRendererAccel_autoptr>

typealias GtkCellRendererAccel_autoptr = CPointer<GtkCellRendererAccel>

typealias GtkCellRendererAccel_listautoptrVar = CPointerVarOf<GtkCellRendererAccel_listautoptr>

typealias GtkCellRendererAccel_listautoptr = CPointer<GList>

typealias GtkCellRendererAccel_slistautoptrVar = CPointerVarOf<GtkCellRendererAccel_slistautoptr>

typealias GtkCellRendererAccel_slistautoptr = CPointer<GSList>

typealias GtkCellRendererCombo_autoptrVar = CPointerVarOf<GtkCellRendererCombo_autoptr>

typealias GtkCellRendererCombo_autoptr = CPointer<GtkCellRendererCombo>

typealias GtkCellRendererCombo_listautoptrVar = CPointerVarOf<GtkCellRendererCombo_listautoptr>

typealias GtkCellRendererCombo_listautoptr = CPointer<GList>

typealias GtkCellRendererCombo_slistautoptrVar = CPointerVarOf<GtkCellRendererCombo_slistautoptr>

typealias GtkCellRendererCombo_slistautoptr = CPointer<GSList>

typealias GtkCellRendererPixbuf_autoptrVar = CPointerVarOf<GtkCellRendererPixbuf_autoptr>

typealias GtkCellRendererPixbuf_autoptr = CPointer<GtkCellRendererPixbuf>

typealias GtkCellRendererPixbuf_listautoptrVar = CPointerVarOf<GtkCellRendererPixbuf_listautoptr>

typealias GtkCellRendererPixbuf_listautoptr = CPointer<GList>

typealias GtkCellRendererPixbuf_slistautoptrVar = CPointerVarOf<GtkCellRendererPixbuf_slistautoptr>

typealias GtkCellRendererPixbuf_slistautoptr = CPointer<GSList>

typealias GtkCellRendererProgress_autoptrVar = CPointerVarOf<GtkCellRendererProgress_autoptr>

typealias GtkCellRendererProgress_autoptr = CPointer<GtkCellRendererProgress>

typealias GtkCellRendererProgress_listautoptrVar = CPointerVarOf<GtkCellRendererProgress_listautoptr>

typealias GtkCellRendererProgress_listautoptr = CPointer<GList>

typealias GtkCellRendererProgress_slistautoptrVar = CPointerVarOf<GtkCellRendererProgress_slistautoptr>

typealias GtkCellRendererProgress_slistautoptr = CPointer<GSList>

typealias GtkCellRendererSpin_autoptrVar = CPointerVarOf<GtkCellRendererSpin_autoptr>

typealias GtkCellRendererSpin_autoptr = CPointer<GtkCellRendererSpin>

typealias GtkCellRendererSpin_listautoptrVar = CPointerVarOf<GtkCellRendererSpin_listautoptr>

typealias GtkCellRendererSpin_listautoptr = CPointer<GList>

typealias GtkCellRendererSpin_slistautoptrVar = CPointerVarOf<GtkCellRendererSpin_slistautoptr>

typealias GtkCellRendererSpin_slistautoptr = CPointer<GSList>

typealias GtkCellRendererSpinner_autoptrVar = CPointerVarOf<GtkCellRendererSpinner_autoptr>

typealias GtkCellRendererSpinner_autoptr = CPointer<GtkCellRendererSpinner>

typealias GtkCellRendererSpinner_listautoptrVar = CPointerVarOf<GtkCellRendererSpinner_listautoptr>

typealias GtkCellRendererSpinner_listautoptr = CPointer<GList>

typealias GtkCellRendererSpinner_slistautoptrVar = CPointerVarOf<GtkCellRendererSpinner_slistautoptr>

typealias GtkCellRendererSpinner_slistautoptr = CPointer<GSList>

typealias GtkCellRendererText_autoptrVar = CPointerVarOf<GtkCellRendererText_autoptr>

typealias GtkCellRendererText_autoptr = CPointer<GtkCellRendererText>

typealias GtkCellRendererText_listautoptrVar = CPointerVarOf<GtkCellRendererText_listautoptr>

typealias GtkCellRendererText_listautoptr = CPointer<GList>

typealias GtkCellRendererText_slistautoptrVar = CPointerVarOf<GtkCellRendererText_slistautoptr>

typealias GtkCellRendererText_slistautoptr = CPointer<GSList>

typealias GtkCellRendererToggle_autoptrVar = CPointerVarOf<GtkCellRendererToggle_autoptr>

typealias GtkCellRendererToggle_autoptr = CPointer<GtkCellRendererToggle>

typealias GtkCellRendererToggle_listautoptrVar = CPointerVarOf<GtkCellRendererToggle_listautoptr>

typealias GtkCellRendererToggle_listautoptr = CPointer<GList>

typealias GtkCellRendererToggle_slistautoptrVar = CPointerVarOf<GtkCellRendererToggle_slistautoptr>

typealias GtkCellRendererToggle_slistautoptr = CPointer<GSList>

typealias GtkCellView_autoptrVar = CPointerVarOf<GtkCellView_autoptr>

typealias GtkCellView_autoptr = CPointer<GtkCellView>

typealias GtkCellView_listautoptrVar = CPointerVarOf<GtkCellView_listautoptr>

typealias GtkCellView_listautoptr = CPointer<GList>

typealias GtkCellView_slistautoptrVar = CPointerVarOf<GtkCellView_slistautoptr>

typealias GtkCellView_slistautoptr = CPointer<GSList>

typealias GtkCheckButton_autoptrVar = CPointerVarOf<GtkCheckButton_autoptr>

typealias GtkCheckButton_autoptr = CPointer<GtkCheckButton>

typealias GtkCheckButton_listautoptrVar = CPointerVarOf<GtkCheckButton_listautoptr>

typealias GtkCheckButton_listautoptr = CPointer<GList>

typealias GtkCheckButton_slistautoptrVar = CPointerVarOf<GtkCheckButton_slistautoptr>

typealias GtkCheckButton_slistautoptr = CPointer<GSList>

typealias GtkCheckMenuItem_autoptrVar = CPointerVarOf<GtkCheckMenuItem_autoptr>

typealias GtkCheckMenuItem_autoptr = CPointer<GtkCheckMenuItem>

typealias GtkCheckMenuItem_listautoptrVar = CPointerVarOf<GtkCheckMenuItem_listautoptr>

typealias GtkCheckMenuItem_listautoptr = CPointer<GList>

typealias GtkCheckMenuItem_slistautoptrVar = CPointerVarOf<GtkCheckMenuItem_slistautoptr>

typealias GtkCheckMenuItem_slistautoptr = CPointer<GSList>

typealias GtkClipboard_autoptrVar = CPointerVarOf<GtkClipboard_autoptr>

typealias GtkClipboard_autoptr = CPointer<GtkClipboard>

typealias GtkClipboard_listautoptrVar = CPointerVarOf<GtkClipboard_listautoptr>

typealias GtkClipboard_listautoptr = CPointer<GList>

typealias GtkClipboard_slistautoptrVar = CPointerVarOf<GtkClipboard_slistautoptr>

typealias GtkClipboard_slistautoptr = CPointer<GSList>

typealias GtkColorButton_autoptrVar = CPointerVarOf<GtkColorButton_autoptr>

typealias GtkColorButton_autoptr = CPointer<GtkColorButton>

typealias GtkColorButton_listautoptrVar = CPointerVarOf<GtkColorButton_listautoptr>

typealias GtkColorButton_listautoptr = CPointer<GList>

typealias GtkColorButton_slistautoptrVar = CPointerVarOf<GtkColorButton_slistautoptr>

typealias GtkColorButton_slistautoptr = CPointer<GSList>

typealias GtkColorChooser_autoptrVar = CPointerVarOf<GtkColorChooser_autoptr>

typealias GtkColorChooser_autoptr = CPointer<GtkColorChooser>

typealias GtkColorChooser_listautoptrVar = CPointerVarOf<GtkColorChooser_listautoptr>

typealias GtkColorChooser_listautoptr = CPointer<GList>

typealias GtkColorChooser_slistautoptrVar = CPointerVarOf<GtkColorChooser_slistautoptr>

typealias GtkColorChooser_slistautoptr = CPointer<GSList>

typealias GtkColorChooserDialog_autoptrVar = CPointerVarOf<GtkColorChooserDialog_autoptr>

typealias GtkColorChooserDialog_autoptr = CPointer<GtkColorChooserDialog>

typealias GtkColorChooserDialog_listautoptrVar = CPointerVarOf<GtkColorChooserDialog_listautoptr>

typealias GtkColorChooserDialog_listautoptr = CPointer<GList>

typealias GtkColorChooserDialog_slistautoptrVar = CPointerVarOf<GtkColorChooserDialog_slistautoptr>

typealias GtkColorChooserDialog_slistautoptr = CPointer<GSList>

typealias GtkColorChooserWidget_autoptrVar = CPointerVarOf<GtkColorChooserWidget_autoptr>

typealias GtkColorChooserWidget_autoptr = CPointer<GtkColorChooserWidget>

typealias GtkColorChooserWidget_listautoptrVar = CPointerVarOf<GtkColorChooserWidget_listautoptr>

typealias GtkColorChooserWidget_listautoptr = CPointer<GList>

typealias GtkColorChooserWidget_slistautoptrVar = CPointerVarOf<GtkColorChooserWidget_slistautoptr>

typealias GtkColorChooserWidget_slistautoptr = CPointer<GSList>

typealias GtkComboBox_autoptrVar = CPointerVarOf<GtkComboBox_autoptr>

typealias GtkComboBox_autoptr = CPointer<GtkComboBox>

typealias GtkComboBox_listautoptrVar = CPointerVarOf<GtkComboBox_listautoptr>

typealias GtkComboBox_listautoptr = CPointer<GList>

typealias GtkComboBox_slistautoptrVar = CPointerVarOf<GtkComboBox_slistautoptr>

typealias GtkComboBox_slistautoptr = CPointer<GSList>

typealias GtkComboBoxText_autoptrVar = CPointerVarOf<GtkComboBoxText_autoptr>

typealias GtkComboBoxText_autoptr = CPointer<GtkComboBoxText>

typealias GtkComboBoxText_listautoptrVar = CPointerVarOf<GtkComboBoxText_listautoptr>

typealias GtkComboBoxText_listautoptr = CPointer<GList>

typealias GtkComboBoxText_slistautoptrVar = CPointerVarOf<GtkComboBoxText_slistautoptr>

typealias GtkComboBoxText_slistautoptr = CPointer<GSList>

typealias GtkCssProvider_autoptrVar = CPointerVarOf<GtkCssProvider_autoptr>

typealias GtkCssProvider_autoptr = CPointer<GtkCssProvider>

typealias GtkCssProvider_listautoptrVar = CPointerVarOf<GtkCssProvider_listautoptr>

typealias GtkCssProvider_listautoptr = CPointer<GList>

typealias GtkCssProvider_slistautoptrVar = CPointerVarOf<GtkCssProvider_slistautoptr>

typealias GtkCssProvider_slistautoptr = CPointer<GSList>

typealias GtkDrawingArea_autoptrVar = CPointerVarOf<GtkDrawingArea_autoptr>

typealias GtkDrawingArea_autoptr = CPointer<GtkDrawingArea>

typealias GtkDrawingArea_listautoptrVar = CPointerVarOf<GtkDrawingArea_listautoptr>

typealias GtkDrawingArea_listautoptr = CPointer<GList>

typealias GtkDrawingArea_slistautoptrVar = CPointerVarOf<GtkDrawingArea_slistautoptr>

typealias GtkDrawingArea_slistautoptr = CPointer<GSList>

typealias GtkEditable_autoptrVar = CPointerVarOf<GtkEditable_autoptr>

typealias GtkEditable_autoptr = CPointer<GtkEditable>

typealias GtkEditable_listautoptrVar = CPointerVarOf<GtkEditable_listautoptr>

typealias GtkEditable_listautoptr = CPointer<GList>

typealias GtkEditable_slistautoptrVar = CPointerVarOf<GtkEditable_slistautoptr>

typealias GtkEditable_slistautoptr = CPointer<GSList>

typealias GtkEntry_autoptrVar = CPointerVarOf<GtkEntry_autoptr>

typealias GtkEntry_autoptr = CPointer<GtkEntry>

typealias GtkEntry_listautoptrVar = CPointerVarOf<GtkEntry_listautoptr>

typealias GtkEntry_listautoptr = CPointer<GList>

typealias GtkEntry_slistautoptrVar = CPointerVarOf<GtkEntry_slistautoptr>

typealias GtkEntry_slistautoptr = CPointer<GSList>

typealias GtkEntryBuffer_autoptrVar = CPointerVarOf<GtkEntryBuffer_autoptr>

typealias GtkEntryBuffer_autoptr = CPointer<GtkEntryBuffer>

typealias GtkEntryBuffer_listautoptrVar = CPointerVarOf<GtkEntryBuffer_listautoptr>

typealias GtkEntryBuffer_listautoptr = CPointer<GList>

typealias GtkEntryBuffer_slistautoptrVar = CPointerVarOf<GtkEntryBuffer_slistautoptr>

typealias GtkEntryBuffer_slistautoptr = CPointer<GSList>

typealias GtkEntryCompletion_autoptrVar = CPointerVarOf<GtkEntryCompletion_autoptr>

typealias GtkEntryCompletion_autoptr = CPointer<GtkEntryCompletion>

typealias GtkEntryCompletion_listautoptrVar = CPointerVarOf<GtkEntryCompletion_listautoptr>

typealias GtkEntryCompletion_listautoptr = CPointer<GList>

typealias GtkEntryCompletion_slistautoptrVar = CPointerVarOf<GtkEntryCompletion_slistautoptr>

typealias GtkEntryCompletion_slistautoptr = CPointer<GSList>

typealias GtkEventBox_autoptrVar = CPointerVarOf<GtkEventBox_autoptr>

typealias GtkEventBox_autoptr = CPointer<GtkEventBox>

typealias GtkEventBox_listautoptrVar = CPointerVarOf<GtkEventBox_listautoptr>

typealias GtkEventBox_listautoptr = CPointer<GList>

typealias GtkEventBox_slistautoptrVar = CPointerVarOf<GtkEventBox_slistautoptr>

typealias GtkEventBox_slistautoptr = CPointer<GSList>

typealias GtkEventController_autoptrVar = CPointerVarOf<GtkEventController_autoptr>

typealias GtkEventController_autoptr = CPointer<GtkEventController>

typealias GtkEventController_listautoptrVar = CPointerVarOf<GtkEventController_listautoptr>

typealias GtkEventController_listautoptr = CPointer<GList>

typealias GtkEventController_slistautoptrVar = CPointerVarOf<GtkEventController_slistautoptr>

typealias GtkEventController_slistautoptr = CPointer<GSList>

typealias GtkExpander_autoptrVar = CPointerVarOf<GtkExpander_autoptr>

typealias GtkExpander_autoptr = CPointer<GtkExpander>

typealias GtkExpander_listautoptrVar = CPointerVarOf<GtkExpander_listautoptr>

typealias GtkExpander_listautoptr = CPointer<GList>

typealias GtkExpander_slistautoptrVar = CPointerVarOf<GtkExpander_slistautoptr>

typealias GtkExpander_slistautoptr = CPointer<GSList>

typealias GtkFileChooserButton_autoptrVar = CPointerVarOf<GtkFileChooserButton_autoptr>

typealias GtkFileChooserButton_autoptr = CPointer<GtkFileChooserButton>

typealias GtkFileChooserButton_listautoptrVar = CPointerVarOf<GtkFileChooserButton_listautoptr>

typealias GtkFileChooserButton_listautoptr = CPointer<GList>

typealias GtkFileChooserButton_slistautoptrVar = CPointerVarOf<GtkFileChooserButton_slistautoptr>

typealias GtkFileChooserButton_slistautoptr = CPointer<GSList>

typealias GtkFileChooserDialog_autoptrVar = CPointerVarOf<GtkFileChooserDialog_autoptr>

typealias GtkFileChooserDialog_autoptr = CPointer<GtkFileChooserDialog>

typealias GtkFileChooserDialog_listautoptrVar = CPointerVarOf<GtkFileChooserDialog_listautoptr>

typealias GtkFileChooserDialog_listautoptr = CPointer<GList>

typealias GtkFileChooserDialog_slistautoptrVar = CPointerVarOf<GtkFileChooserDialog_slistautoptr>

typealias GtkFileChooserDialog_slistautoptr = CPointer<GSList>

typealias GtkFileChooserWidget_autoptrVar = CPointerVarOf<GtkFileChooserWidget_autoptr>

typealias GtkFileChooserWidget_autoptr = CPointer<GtkFileChooserWidget>

typealias GtkFileChooserWidget_listautoptrVar = CPointerVarOf<GtkFileChooserWidget_listautoptr>

typealias GtkFileChooserWidget_listautoptr = CPointer<GList>

typealias GtkFileChooserWidget_slistautoptrVar = CPointerVarOf<GtkFileChooserWidget_slistautoptr>

typealias GtkFileChooserWidget_slistautoptr = CPointer<GSList>

typealias GtkFileFilter_autoptrVar = CPointerVarOf<GtkFileFilter_autoptr>

typealias GtkFileFilter_autoptr = CPointer<GtkFileFilter>

typealias GtkFileFilter_listautoptrVar = CPointerVarOf<GtkFileFilter_listautoptr>

typealias GtkFileFilter_listautoptr = CPointer<GList>

typealias GtkFileFilter_slistautoptrVar = CPointerVarOf<GtkFileFilter_slistautoptr>

typealias GtkFileFilter_slistautoptr = CPointer<GSList>

typealias GtkFixed_autoptrVar = CPointerVarOf<GtkFixed_autoptr>

typealias GtkFixed_autoptr = CPointer<GtkFixed>

typealias GtkFixed_listautoptrVar = CPointerVarOf<GtkFixed_listautoptr>

typealias GtkFixed_listautoptr = CPointer<GList>

typealias GtkFixed_slistautoptrVar = CPointerVarOf<GtkFixed_slistautoptr>

typealias GtkFixed_slistautoptr = CPointer<GSList>

typealias GtkFlowBox_autoptrVar = CPointerVarOf<GtkFlowBox_autoptr>

typealias GtkFlowBox_autoptr = CPointer<GtkFlowBox>

typealias GtkFlowBox_listautoptrVar = CPointerVarOf<GtkFlowBox_listautoptr>

typealias GtkFlowBox_listautoptr = CPointer<GList>

typealias GtkFlowBox_slistautoptrVar = CPointerVarOf<GtkFlowBox_slistautoptr>

typealias GtkFlowBox_slistautoptr = CPointer<GSList>

typealias GtkFlowBoxChild_autoptrVar = CPointerVarOf<GtkFlowBoxChild_autoptr>

typealias GtkFlowBoxChild_autoptr = CPointer<GtkFlowBoxChild>

typealias GtkFlowBoxChild_listautoptrVar = CPointerVarOf<GtkFlowBoxChild_listautoptr>

typealias GtkFlowBoxChild_listautoptr = CPointer<GList>

typealias GtkFlowBoxChild_slistautoptrVar = CPointerVarOf<GtkFlowBoxChild_slistautoptr>

typealias GtkFlowBoxChild_slistautoptr = CPointer<GSList>

typealias GtkFontButton_autoptrVar = CPointerVarOf<GtkFontButton_autoptr>

typealias GtkFontButton_autoptr = CPointer<GtkFontButton>

typealias GtkFontButton_listautoptrVar = CPointerVarOf<GtkFontButton_listautoptr>

typealias GtkFontButton_listautoptr = CPointer<GList>

typealias GtkFontButton_slistautoptrVar = CPointerVarOf<GtkFontButton_slistautoptr>

typealias GtkFontButton_slistautoptr = CPointer<GSList>

typealias GtkFontChooser_autoptrVar = CPointerVarOf<GtkFontChooser_autoptr>

typealias GtkFontChooser_autoptr = CPointer<GtkFontChooser>

typealias GtkFontChooser_listautoptrVar = CPointerVarOf<GtkFontChooser_listautoptr>

typealias GtkFontChooser_listautoptr = CPointer<GList>

typealias GtkFontChooser_slistautoptrVar = CPointerVarOf<GtkFontChooser_slistautoptr>

typealias GtkFontChooser_slistautoptr = CPointer<GSList>

typealias GtkFontChooserDialog_autoptrVar = CPointerVarOf<GtkFontChooserDialog_autoptr>

typealias GtkFontChooserDialog_autoptr = CPointer<GtkFontChooserDialog>

typealias GtkFontChooserDialog_listautoptrVar = CPointerVarOf<GtkFontChooserDialog_listautoptr>

typealias GtkFontChooserDialog_listautoptr = CPointer<GList>

typealias GtkFontChooserDialog_slistautoptrVar = CPointerVarOf<GtkFontChooserDialog_slistautoptr>

typealias GtkFontChooserDialog_slistautoptr = CPointer<GSList>

typealias GtkFontChooserWidget_autoptrVar = CPointerVarOf<GtkFontChooserWidget_autoptr>

typealias GtkFontChooserWidget_autoptr = CPointer<GtkFontChooserWidget>

typealias GtkFontChooserWidget_listautoptrVar = CPointerVarOf<GtkFontChooserWidget_listautoptr>

typealias GtkFontChooserWidget_listautoptr = CPointer<GList>

typealias GtkFontChooserWidget_slistautoptrVar = CPointerVarOf<GtkFontChooserWidget_slistautoptr>

typealias GtkFontChooserWidget_slistautoptr = CPointer<GSList>

typealias GtkFrame_autoptrVar = CPointerVarOf<GtkFrame_autoptr>

typealias GtkFrame_autoptr = CPointer<GtkFrame>

typealias GtkFrame_listautoptrVar = CPointerVarOf<GtkFrame_listautoptr>

typealias GtkFrame_listautoptr = CPointer<GList>

typealias GtkFrame_slistautoptrVar = CPointerVarOf<GtkFrame_slistautoptr>

typealias GtkFrame_slistautoptr = CPointer<GSList>

typealias GtkGLArea_autoptrVar = CPointerVarOf<GtkGLArea_autoptr>

typealias GtkGLArea_autoptr = CPointer<GtkGLArea>

typealias GtkGLArea_listautoptrVar = CPointerVarOf<GtkGLArea_listautoptr>

typealias GtkGLArea_listautoptr = CPointer<GList>

typealias GtkGLArea_slistautoptrVar = CPointerVarOf<GtkGLArea_slistautoptr>

typealias GtkGLArea_slistautoptr = CPointer<GSList>

typealias GtkGesture_autoptrVar = CPointerVarOf<GtkGesture_autoptr>

typealias GtkGesture_autoptr = CPointer<GtkGesture>

typealias GtkGesture_listautoptrVar = CPointerVarOf<GtkGesture_listautoptr>

typealias GtkGesture_listautoptr = CPointer<GList>

typealias GtkGesture_slistautoptrVar = CPointerVarOf<GtkGesture_slistautoptr>

typealias GtkGesture_slistautoptr = CPointer<GSList>

typealias GtkGestureDrag_autoptrVar = CPointerVarOf<GtkGestureDrag_autoptr>

typealias GtkGestureDrag_autoptr = CPointer<GtkGestureDrag>

typealias GtkGestureDrag_listautoptrVar = CPointerVarOf<GtkGestureDrag_listautoptr>

typealias GtkGestureDrag_listautoptr = CPointer<GList>

typealias GtkGestureDrag_slistautoptrVar = CPointerVarOf<GtkGestureDrag_slistautoptr>

typealias GtkGestureDrag_slistautoptr = CPointer<GSList>

typealias GtkGestureLongPress_autoptrVar = CPointerVarOf<GtkGestureLongPress_autoptr>

typealias GtkGestureLongPress_autoptr = CPointer<GtkGestureLongPress>

typealias GtkGestureLongPress_listautoptrVar = CPointerVarOf<GtkGestureLongPress_listautoptr>

typealias GtkGestureLongPress_listautoptr = CPointer<GList>

typealias GtkGestureLongPress_slistautoptrVar = CPointerVarOf<GtkGestureLongPress_slistautoptr>

typealias GtkGestureLongPress_slistautoptr = CPointer<GSList>

typealias GtkGestureMultiPress_autoptrVar = CPointerVarOf<GtkGestureMultiPress_autoptr>

typealias GtkGestureMultiPress_autoptr = CPointer<GtkGestureMultiPress>

typealias GtkGestureMultiPress_listautoptrVar = CPointerVarOf<GtkGestureMultiPress_listautoptr>

typealias GtkGestureMultiPress_listautoptr = CPointer<GList>

typealias GtkGestureMultiPress_slistautoptrVar = CPointerVarOf<GtkGestureMultiPress_slistautoptr>

typealias GtkGestureMultiPress_slistautoptr = CPointer<GSList>

typealias GtkGesturePan_autoptrVar = CPointerVarOf<GtkGesturePan_autoptr>

typealias GtkGesturePan_autoptr = CPointer<GtkGesturePan>

typealias GtkGesturePan_listautoptrVar = CPointerVarOf<GtkGesturePan_listautoptr>

typealias GtkGesturePan_listautoptr = CPointer<GList>

typealias GtkGesturePan_slistautoptrVar = CPointerVarOf<GtkGesturePan_slistautoptr>

typealias GtkGesturePan_slistautoptr = CPointer<GSList>

typealias GtkGestureRotate_autoptrVar = CPointerVarOf<GtkGestureRotate_autoptr>

typealias GtkGestureRotate_autoptr = CPointer<GtkGestureRotate>

typealias GtkGestureRotate_listautoptrVar = CPointerVarOf<GtkGestureRotate_listautoptr>

typealias GtkGestureRotate_listautoptr = CPointer<GList>

typealias GtkGestureRotate_slistautoptrVar = CPointerVarOf<GtkGestureRotate_slistautoptr>

typealias GtkGestureRotate_slistautoptr = CPointer<GSList>

typealias GtkGestureSingle_autoptrVar = CPointerVarOf<GtkGestureSingle_autoptr>

typealias GtkGestureSingle_autoptr = CPointer<GtkGestureSingle>

typealias GtkGestureSingle_listautoptrVar = CPointerVarOf<GtkGestureSingle_listautoptr>

typealias GtkGestureSingle_listautoptr = CPointer<GList>

typealias GtkGestureSingle_slistautoptrVar = CPointerVarOf<GtkGestureSingle_slistautoptr>

typealias GtkGestureSingle_slistautoptr = CPointer<GSList>

typealias GtkGestureSwipe_autoptrVar = CPointerVarOf<GtkGestureSwipe_autoptr>

typealias GtkGestureSwipe_autoptr = CPointer<GtkGestureSwipe>

typealias GtkGestureSwipe_listautoptrVar = CPointerVarOf<GtkGestureSwipe_listautoptr>

typealias GtkGestureSwipe_listautoptr = CPointer<GList>

typealias GtkGestureSwipe_slistautoptrVar = CPointerVarOf<GtkGestureSwipe_slistautoptr>

typealias GtkGestureSwipe_slistautoptr = CPointer<GSList>

typealias GtkGestureZoom_autoptrVar = CPointerVarOf<GtkGestureZoom_autoptr>

typealias GtkGestureZoom_autoptr = CPointer<GtkGestureZoom>

typealias GtkGestureZoom_listautoptrVar = CPointerVarOf<GtkGestureZoom_listautoptr>

typealias GtkGestureZoom_listautoptr = CPointer<GList>

typealias GtkGestureZoom_slistautoptrVar = CPointerVarOf<GtkGestureZoom_slistautoptr>

typealias GtkGestureZoom_slistautoptr = CPointer<GSList>

typealias GtkGrid_autoptrVar = CPointerVarOf<GtkGrid_autoptr>

typealias GtkGrid_autoptr = CPointer<GtkGrid>

typealias GtkGrid_listautoptrVar = CPointerVarOf<GtkGrid_listautoptr>

typealias GtkGrid_listautoptr = CPointer<GList>

typealias GtkGrid_slistautoptrVar = CPointerVarOf<GtkGrid_slistautoptr>

typealias GtkGrid_slistautoptr = CPointer<GSList>

typealias GtkHeaderBar_autoptrVar = CPointerVarOf<GtkHeaderBar_autoptr>

typealias GtkHeaderBar_autoptr = CPointer<GtkHeaderBar>

typealias GtkHeaderBar_listautoptrVar = CPointerVarOf<GtkHeaderBar_listautoptr>

typealias GtkHeaderBar_listautoptr = CPointer<GList>

typealias GtkHeaderBar_slistautoptrVar = CPointerVarOf<GtkHeaderBar_slistautoptr>

typealias GtkHeaderBar_slistautoptr = CPointer<GSList>

typealias GtkIMContext_autoptrVar = CPointerVarOf<GtkIMContext_autoptr>

typealias GtkIMContext_autoptr = CPointer<GtkIMContext>

typealias GtkIMContext_listautoptrVar = CPointerVarOf<GtkIMContext_listautoptr>

typealias GtkIMContext_listautoptr = CPointer<GList>

typealias GtkIMContext_slistautoptrVar = CPointerVarOf<GtkIMContext_slistautoptr>

typealias GtkIMContext_slistautoptr = CPointer<GSList>

typealias GtkIMContextSimple_autoptrVar = CPointerVarOf<GtkIMContextSimple_autoptr>

typealias GtkIMContextSimple_autoptr = CPointer<GtkIMContextSimple>

typealias GtkIMContextSimple_listautoptrVar = CPointerVarOf<GtkIMContextSimple_listautoptr>

typealias GtkIMContextSimple_listautoptr = CPointer<GList>

typealias GtkIMContextSimple_slistautoptrVar = CPointerVarOf<GtkIMContextSimple_slistautoptr>

typealias GtkIMContextSimple_slistautoptr = CPointer<GSList>

typealias GtkIMMulticontext_autoptrVar = CPointerVarOf<GtkIMMulticontext_autoptr>

typealias GtkIMMulticontext_autoptr = CPointer<GtkIMMulticontext>

typealias GtkIMMulticontext_listautoptrVar = CPointerVarOf<GtkIMMulticontext_listautoptr>

typealias GtkIMMulticontext_listautoptr = CPointer<GList>

typealias GtkIMMulticontext_slistautoptrVar = CPointerVarOf<GtkIMMulticontext_slistautoptr>

typealias GtkIMMulticontext_slistautoptr = CPointer<GSList>

typealias GtkIconInfo_autoptrVar = CPointerVarOf<GtkIconInfo_autoptr>

typealias GtkIconInfo_autoptr = CPointer<GtkIconInfo>

typealias GtkIconInfo_listautoptrVar = CPointerVarOf<GtkIconInfo_listautoptr>

typealias GtkIconInfo_listautoptr = CPointer<GList>

typealias GtkIconInfo_slistautoptrVar = CPointerVarOf<GtkIconInfo_slistautoptr>

typealias GtkIconInfo_slistautoptr = CPointer<GSList>

typealias GtkIconTheme_autoptrVar = CPointerVarOf<GtkIconTheme_autoptr>

typealias GtkIconTheme_autoptr = CPointer<GtkIconTheme>

typealias GtkIconTheme_listautoptrVar = CPointerVarOf<GtkIconTheme_listautoptr>

typealias GtkIconTheme_listautoptr = CPointer<GList>

typealias GtkIconTheme_slistautoptrVar = CPointerVarOf<GtkIconTheme_slistautoptr>

typealias GtkIconTheme_slistautoptr = CPointer<GSList>

typealias GtkIconView_autoptrVar = CPointerVarOf<GtkIconView_autoptr>

typealias GtkIconView_autoptr = CPointer<GtkIconView>

typealias GtkIconView_listautoptrVar = CPointerVarOf<GtkIconView_listautoptr>

typealias GtkIconView_listautoptr = CPointer<GList>

typealias GtkIconView_slistautoptrVar = CPointerVarOf<GtkIconView_slistautoptr>

typealias GtkIconView_slistautoptr = CPointer<GSList>

typealias GtkImage_autoptrVar = CPointerVarOf<GtkImage_autoptr>

typealias GtkImage_autoptr = CPointer<GtkImage>

typealias GtkImage_listautoptrVar = CPointerVarOf<GtkImage_listautoptr>

typealias GtkImage_listautoptr = CPointer<GList>

typealias GtkImage_slistautoptrVar = CPointerVarOf<GtkImage_slistautoptr>

typealias GtkImage_slistautoptr = CPointer<GSList>

typealias GtkInfoBar_autoptrVar = CPointerVarOf<GtkInfoBar_autoptr>

typealias GtkInfoBar_autoptr = CPointer<GtkInfoBar>

typealias GtkInfoBar_listautoptrVar = CPointerVarOf<GtkInfoBar_listautoptr>

typealias GtkInfoBar_listautoptr = CPointer<GList>

typealias GtkInfoBar_slistautoptrVar = CPointerVarOf<GtkInfoBar_slistautoptr>

typealias GtkInfoBar_slistautoptr = CPointer<GSList>

typealias GtkInvisible_autoptrVar = CPointerVarOf<GtkInvisible_autoptr>

typealias GtkInvisible_autoptr = CPointer<GtkInvisible>

typealias GtkInvisible_listautoptrVar = CPointerVarOf<GtkInvisible_listautoptr>

typealias GtkInvisible_listautoptr = CPointer<GList>

typealias GtkInvisible_slistautoptrVar = CPointerVarOf<GtkInvisible_slistautoptr>

typealias GtkInvisible_slistautoptr = CPointer<GSList>

typealias GtkLayout_autoptrVar = CPointerVarOf<GtkLayout_autoptr>

typealias GtkLayout_autoptr = CPointer<GtkLayout>

typealias GtkLayout_listautoptrVar = CPointerVarOf<GtkLayout_listautoptr>

typealias GtkLayout_listautoptr = CPointer<GList>

typealias GtkLayout_slistautoptrVar = CPointerVarOf<GtkLayout_slistautoptr>

typealias GtkLayout_slistautoptr = CPointer<GSList>

typealias GtkLevelBar_autoptrVar = CPointerVarOf<GtkLevelBar_autoptr>

typealias GtkLevelBar_autoptr = CPointer<GtkLevelBar>

typealias GtkLevelBar_listautoptrVar = CPointerVarOf<GtkLevelBar_listautoptr>

typealias GtkLevelBar_listautoptr = CPointer<GList>

typealias GtkLevelBar_slistautoptrVar = CPointerVarOf<GtkLevelBar_slistautoptr>

typealias GtkLevelBar_slistautoptr = CPointer<GSList>

typealias GtkLinkButton_autoptrVar = CPointerVarOf<GtkLinkButton_autoptr>

typealias GtkLinkButton_autoptr = CPointer<GtkLinkButton>

typealias GtkLinkButton_listautoptrVar = CPointerVarOf<GtkLinkButton_listautoptr>

typealias GtkLinkButton_listautoptr = CPointer<GList>

typealias GtkLinkButton_slistautoptrVar = CPointerVarOf<GtkLinkButton_slistautoptr>

typealias GtkLinkButton_slistautoptr = CPointer<GSList>

typealias GtkListStore_autoptrVar = CPointerVarOf<GtkListStore_autoptr>

typealias GtkListStore_autoptr = CPointer<GtkListStore>

typealias GtkListStore_listautoptrVar = CPointerVarOf<GtkListStore_listautoptr>

typealias GtkListStore_listautoptr = CPointer<GList>

typealias GtkListStore_slistautoptrVar = CPointerVarOf<GtkListStore_slistautoptr>

typealias GtkListStore_slistautoptr = CPointer<GSList>

typealias GtkLockButton_autoptrVar = CPointerVarOf<GtkLockButton_autoptr>

typealias GtkLockButton_autoptr = CPointer<GtkLockButton>

typealias GtkLockButton_listautoptrVar = CPointerVarOf<GtkLockButton_listautoptr>

typealias GtkLockButton_listautoptr = CPointer<GList>

typealias GtkLockButton_slistautoptrVar = CPointerVarOf<GtkLockButton_slistautoptr>

typealias GtkLockButton_slistautoptr = CPointer<GSList>

typealias GtkMenuBar_autoptrVar = CPointerVarOf<GtkMenuBar_autoptr>

typealias GtkMenuBar_autoptr = CPointer<GtkMenuBar>

typealias GtkMenuBar_listautoptrVar = CPointerVarOf<GtkMenuBar_listautoptr>

typealias GtkMenuBar_listautoptr = CPointer<GList>

typealias GtkMenuBar_slistautoptrVar = CPointerVarOf<GtkMenuBar_slistautoptr>

typealias GtkMenuBar_slistautoptr = CPointer<GSList>

typealias GtkMenuButton_autoptrVar = CPointerVarOf<GtkMenuButton_autoptr>

typealias GtkMenuButton_autoptr = CPointer<GtkMenuButton>

typealias GtkMenuButton_listautoptrVar = CPointerVarOf<GtkMenuButton_listautoptr>

typealias GtkMenuButton_listautoptr = CPointer<GList>

typealias GtkMenuButton_slistautoptrVar = CPointerVarOf<GtkMenuButton_slistautoptr>

typealias GtkMenuButton_slistautoptr = CPointer<GSList>

typealias GtkMenuItem_autoptrVar = CPointerVarOf<GtkMenuItem_autoptr>

typealias GtkMenuItem_autoptr = CPointer<GtkMenuItem>

typealias GtkMenuItem_listautoptrVar = CPointerVarOf<GtkMenuItem_listautoptr>

typealias GtkMenuItem_listautoptr = CPointer<GList>

typealias GtkMenuItem_slistautoptrVar = CPointerVarOf<GtkMenuItem_slistautoptr>

typealias GtkMenuItem_slistautoptr = CPointer<GSList>

typealias GtkMenuToolButton_autoptrVar = CPointerVarOf<GtkMenuToolButton_autoptr>

typealias GtkMenuToolButton_autoptr = CPointer<GtkMenuToolButton>

typealias GtkMenuToolButton_listautoptrVar = CPointerVarOf<GtkMenuToolButton_listautoptr>

typealias GtkMenuToolButton_listautoptr = CPointer<GList>

typealias GtkMenuToolButton_slistautoptrVar = CPointerVarOf<GtkMenuToolButton_slistautoptr>

typealias GtkMenuToolButton_slistautoptr = CPointer<GSList>

typealias GtkMessageDialog_autoptrVar = CPointerVarOf<GtkMessageDialog_autoptr>

typealias GtkMessageDialog_autoptr = CPointer<GtkMessageDialog>

typealias GtkMessageDialog_listautoptrVar = CPointerVarOf<GtkMessageDialog_listautoptr>

typealias GtkMessageDialog_listautoptr = CPointer<GList>

typealias GtkMessageDialog_slistautoptrVar = CPointerVarOf<GtkMessageDialog_slistautoptr>

typealias GtkMessageDialog_slistautoptr = CPointer<GSList>

typealias GtkMountOperation_autoptrVar = CPointerVarOf<GtkMountOperation_autoptr>

typealias GtkMountOperation_autoptr = CPointer<GtkMountOperation>

typealias GtkMountOperation_listautoptrVar = CPointerVarOf<GtkMountOperation_listautoptr>

typealias GtkMountOperation_listautoptr = CPointer<GList>

typealias GtkMountOperation_slistautoptrVar = CPointerVarOf<GtkMountOperation_slistautoptr>

typealias GtkMountOperation_slistautoptr = CPointer<GSList>

typealias GtkNotebook_autoptrVar = CPointerVarOf<GtkNotebook_autoptr>

typealias GtkNotebook_autoptr = CPointer<GtkNotebook>

typealias GtkNotebook_listautoptrVar = CPointerVarOf<GtkNotebook_listautoptr>

typealias GtkNotebook_listautoptr = CPointer<GList>

typealias GtkNotebook_slistautoptrVar = CPointerVarOf<GtkNotebook_slistautoptr>

typealias GtkNotebook_slistautoptr = CPointer<GSList>

typealias GtkOffscreenWindow_autoptrVar = CPointerVarOf<GtkOffscreenWindow_autoptr>

typealias GtkOffscreenWindow_autoptr = CPointer<GtkOffscreenWindow>

typealias GtkOffscreenWindow_listautoptrVar = CPointerVarOf<GtkOffscreenWindow_listautoptr>

typealias GtkOffscreenWindow_listautoptr = CPointer<GList>

typealias GtkOffscreenWindow_slistautoptrVar = CPointerVarOf<GtkOffscreenWindow_slistautoptr>

typealias GtkOffscreenWindow_slistautoptr = CPointer<GSList>

typealias GtkOrientable_autoptrVar = CPointerVarOf<GtkOrientable_autoptr>

typealias GtkOrientable_autoptr = CPointer<GtkOrientable>

typealias GtkOrientable_listautoptrVar = CPointerVarOf<GtkOrientable_listautoptr>

typealias GtkOrientable_listautoptr = CPointer<GList>

typealias GtkOrientable_slistautoptrVar = CPointerVarOf<GtkOrientable_slistautoptr>

typealias GtkOrientable_slistautoptr = CPointer<GSList>

typealias GtkOverlay_autoptrVar = CPointerVarOf<GtkOverlay_autoptr>

typealias GtkOverlay_autoptr = CPointer<GtkOverlay>

typealias GtkOverlay_listautoptrVar = CPointerVarOf<GtkOverlay_listautoptr>

typealias GtkOverlay_listautoptr = CPointer<GList>

typealias GtkOverlay_slistautoptrVar = CPointerVarOf<GtkOverlay_slistautoptr>

typealias GtkOverlay_slistautoptr = CPointer<GSList>

typealias GtkPageSetup_autoptrVar = CPointerVarOf<GtkPageSetup_autoptr>

typealias GtkPageSetup_autoptr = CPointer<GtkPageSetup>

typealias GtkPageSetup_listautoptrVar = CPointerVarOf<GtkPageSetup_listautoptr>

typealias GtkPageSetup_listautoptr = CPointer<GList>

typealias GtkPageSetup_slistautoptrVar = CPointerVarOf<GtkPageSetup_slistautoptr>

typealias GtkPageSetup_slistautoptr = CPointer<GSList>

typealias GtkPaned_autoptrVar = CPointerVarOf<GtkPaned_autoptr>

typealias GtkPaned_autoptr = CPointer<GtkPaned>

typealias GtkPaned_listautoptrVar = CPointerVarOf<GtkPaned_listautoptr>

typealias GtkPaned_listautoptr = CPointer<GList>

typealias GtkPaned_slistautoptrVar = CPointerVarOf<GtkPaned_slistautoptr>

typealias GtkPaned_slistautoptr = CPointer<GSList>

typealias GtkPlacesSidebar_autoptrVar = CPointerVarOf<GtkPlacesSidebar_autoptr>

typealias GtkPlacesSidebar_autoptr = CPointer<GtkPlacesSidebar>

typealias GtkPlacesSidebar_listautoptrVar = CPointerVarOf<GtkPlacesSidebar_listautoptr>

typealias GtkPlacesSidebar_listautoptr = CPointer<GList>

typealias GtkPlacesSidebar_slistautoptrVar = CPointerVarOf<GtkPlacesSidebar_slistautoptr>

typealias GtkPlacesSidebar_slistautoptr = CPointer<GSList>

typealias GtkPopover_autoptrVar = CPointerVarOf<GtkPopover_autoptr>

typealias GtkPopover_autoptr = CPointer<GtkPopover>

typealias GtkPopover_listautoptrVar = CPointerVarOf<GtkPopover_listautoptr>

typealias GtkPopover_listautoptr = CPointer<GList>

typealias GtkPopover_slistautoptrVar = CPointerVarOf<GtkPopover_slistautoptr>

typealias GtkPopover_slistautoptr = CPointer<GSList>

typealias GtkPopoverMenu_autoptrVar = CPointerVarOf<GtkPopoverMenu_autoptr>

typealias GtkPopoverMenu_autoptr = CPointer<GtkPopoverMenu>

typealias GtkPopoverMenu_listautoptrVar = CPointerVarOf<GtkPopoverMenu_listautoptr>

typealias GtkPopoverMenu_listautoptr = CPointer<GList>

typealias GtkPopoverMenu_slistautoptrVar = CPointerVarOf<GtkPopoverMenu_slistautoptr>

typealias GtkPopoverMenu_slistautoptr = CPointer<GSList>

typealias GtkPrintContext_autoptrVar = CPointerVarOf<GtkPrintContext_autoptr>

typealias GtkPrintContext_autoptr = CPointer<GtkPrintContext>

typealias GtkPrintContext_listautoptrVar = CPointerVarOf<GtkPrintContext_listautoptr>

typealias GtkPrintContext_listautoptr = CPointer<GList>

typealias GtkPrintContext_slistautoptrVar = CPointerVarOf<GtkPrintContext_slistautoptr>

typealias GtkPrintContext_slistautoptr = CPointer<GSList>

typealias GtkPrintOperation_autoptrVar = CPointerVarOf<GtkPrintOperation_autoptr>

typealias GtkPrintOperation_autoptr = CPointer<GtkPrintOperation>

typealias GtkPrintOperation_listautoptrVar = CPointerVarOf<GtkPrintOperation_listautoptr>

typealias GtkPrintOperation_listautoptr = CPointer<GList>

typealias GtkPrintOperation_slistautoptrVar = CPointerVarOf<GtkPrintOperation_slistautoptr>

typealias GtkPrintOperation_slistautoptr = CPointer<GSList>

typealias GtkPrintOperationPreview_autoptrVar = CPointerVarOf<GtkPrintOperationPreview_autoptr>

typealias GtkPrintOperationPreview_autoptr = CPointer<GtkPrintOperationPreview>

typealias GtkPrintOperationPreview_listautoptrVar = CPointerVarOf<GtkPrintOperationPreview_listautoptr>

typealias GtkPrintOperationPreview_listautoptr = CPointer<GList>

typealias GtkPrintOperationPreview_slistautoptrVar = CPointerVarOf<GtkPrintOperationPreview_slistautoptr>

typealias GtkPrintOperationPreview_slistautoptr = CPointer<GSList>

typealias GtkPrintSettings_autoptrVar = CPointerVarOf<GtkPrintSettings_autoptr>

typealias GtkPrintSettings_autoptr = CPointer<GtkPrintSettings>

typealias GtkPrintSettings_listautoptrVar = CPointerVarOf<GtkPrintSettings_listautoptr>

typealias GtkPrintSettings_listautoptr = CPointer<GList>

typealias GtkPrintSettings_slistautoptrVar = CPointerVarOf<GtkPrintSettings_slistautoptr>

typealias GtkPrintSettings_slistautoptr = CPointer<GSList>

typealias GtkProgressBar_autoptrVar = CPointerVarOf<GtkProgressBar_autoptr>

typealias GtkProgressBar_autoptr = CPointer<GtkProgressBar>

typealias GtkProgressBar_listautoptrVar = CPointerVarOf<GtkProgressBar_listautoptr>

typealias GtkProgressBar_listautoptr = CPointer<GList>

typealias GtkProgressBar_slistautoptrVar = CPointerVarOf<GtkProgressBar_slistautoptr>

typealias GtkProgressBar_slistautoptr = CPointer<GSList>

typealias GtkRadioButton_autoptrVar = CPointerVarOf<GtkRadioButton_autoptr>

typealias GtkRadioButton_autoptr = CPointer<GtkRadioButton>

typealias GtkRadioButton_listautoptrVar = CPointerVarOf<GtkRadioButton_listautoptr>

typealias GtkRadioButton_listautoptr = CPointer<GList>

typealias GtkRadioButton_slistautoptrVar = CPointerVarOf<GtkRadioButton_slistautoptr>

typealias GtkRadioButton_slistautoptr = CPointer<GSList>

typealias GtkRadioMenuItem_autoptrVar = CPointerVarOf<GtkRadioMenuItem_autoptr>

typealias GtkRadioMenuItem_autoptr = CPointer<GtkRadioMenuItem>

typealias GtkRadioMenuItem_listautoptrVar = CPointerVarOf<GtkRadioMenuItem_listautoptr>

typealias GtkRadioMenuItem_listautoptr = CPointer<GList>

typealias GtkRadioMenuItem_slistautoptrVar = CPointerVarOf<GtkRadioMenuItem_slistautoptr>

typealias GtkRadioMenuItem_slistautoptr = CPointer<GSList>

typealias GtkRadioToolButton_autoptrVar = CPointerVarOf<GtkRadioToolButton_autoptr>

typealias GtkRadioToolButton_autoptr = CPointer<GtkRadioToolButton>

typealias GtkRadioToolButton_listautoptrVar = CPointerVarOf<GtkRadioToolButton_listautoptr>

typealias GtkRadioToolButton_listautoptr = CPointer<GList>

typealias GtkRadioToolButton_slistautoptrVar = CPointerVarOf<GtkRadioToolButton_slistautoptr>

typealias GtkRadioToolButton_slistautoptr = CPointer<GSList>

typealias GtkRange_autoptrVar = CPointerVarOf<GtkRange_autoptr>

typealias GtkRange_autoptr = CPointer<GtkRange>

typealias GtkRange_listautoptrVar = CPointerVarOf<GtkRange_listautoptr>

typealias GtkRange_listautoptr = CPointer<GList>

typealias GtkRange_slistautoptrVar = CPointerVarOf<GtkRange_slistautoptr>

typealias GtkRange_slistautoptr = CPointer<GSList>

typealias GtkRcStyle_autoptrVar = CPointerVarOf<GtkRcStyle_autoptr>

typealias GtkRcStyle_autoptr = CPointer<GtkRcStyle>

typealias GtkRcStyle_listautoptrVar = CPointerVarOf<GtkRcStyle_listautoptr>

typealias GtkRcStyle_listautoptr = CPointer<GList>

typealias GtkRcStyle_slistautoptrVar = CPointerVarOf<GtkRcStyle_slistautoptr>

typealias GtkRcStyle_slistautoptr = CPointer<GSList>

typealias GtkRecentChooser_autoptrVar = CPointerVarOf<GtkRecentChooser_autoptr>

typealias GtkRecentChooser_autoptr = CPointer<GtkRecentChooser>

typealias GtkRecentChooser_listautoptrVar = CPointerVarOf<GtkRecentChooser_listautoptr>

typealias GtkRecentChooser_listautoptr = CPointer<GList>

typealias GtkRecentChooser_slistautoptrVar = CPointerVarOf<GtkRecentChooser_slistautoptr>

typealias GtkRecentChooser_slistautoptr = CPointer<GSList>

typealias GtkRecentChooserDialog_autoptrVar = CPointerVarOf<GtkRecentChooserDialog_autoptr>

typealias GtkRecentChooserDialog_autoptr = CPointer<GtkRecentChooserDialog>

typealias GtkRecentChooserDialog_listautoptrVar = CPointerVarOf<GtkRecentChooserDialog_listautoptr>

typealias GtkRecentChooserDialog_listautoptr = CPointer<GList>

typealias GtkRecentChooserDialog_slistautoptrVar = CPointerVarOf<GtkRecentChooserDialog_slistautoptr>

typealias GtkRecentChooserDialog_slistautoptr = CPointer<GSList>

typealias GtkRecentChooserMenu_autoptrVar = CPointerVarOf<GtkRecentChooserMenu_autoptr>

typealias GtkRecentChooserMenu_autoptr = CPointer<GtkRecentChooserMenu>

typealias GtkRecentChooserMenu_listautoptrVar = CPointerVarOf<GtkRecentChooserMenu_listautoptr>

typealias GtkRecentChooserMenu_listautoptr = CPointer<GList>

typealias GtkRecentChooserMenu_slistautoptrVar = CPointerVarOf<GtkRecentChooserMenu_slistautoptr>

typealias GtkRecentChooserMenu_slistautoptr = CPointer<GSList>

typealias GtkRecentChooserWidget_autoptrVar = CPointerVarOf<GtkRecentChooserWidget_autoptr>

typealias GtkRecentChooserWidget_autoptr = CPointer<GtkRecentChooserWidget>

typealias GtkRecentChooserWidget_listautoptrVar = CPointerVarOf<GtkRecentChooserWidget_listautoptr>

typealias GtkRecentChooserWidget_listautoptr = CPointer<GList>

typealias GtkRecentChooserWidget_slistautoptrVar = CPointerVarOf<GtkRecentChooserWidget_slistautoptr>

typealias GtkRecentChooserWidget_slistautoptr = CPointer<GSList>

typealias GtkRecentFilter_autoptrVar = CPointerVarOf<GtkRecentFilter_autoptr>

typealias GtkRecentFilter_autoptr = CPointer<GtkRecentFilter>

typealias GtkRecentFilter_listautoptrVar = CPointerVarOf<GtkRecentFilter_listautoptr>

typealias GtkRecentFilter_listautoptr = CPointer<GList>

typealias GtkRecentFilter_slistautoptrVar = CPointerVarOf<GtkRecentFilter_slistautoptr>

typealias GtkRecentFilter_slistautoptr = CPointer<GSList>

typealias GtkRecentManager_autoptrVar = CPointerVarOf<GtkRecentManager_autoptr>

typealias GtkRecentManager_autoptr = CPointer<GtkRecentManager>

typealias GtkRecentManager_listautoptrVar = CPointerVarOf<GtkRecentManager_listautoptr>

typealias GtkRecentManager_listautoptr = CPointer<GList>

typealias GtkRecentManager_slistautoptrVar = CPointerVarOf<GtkRecentManager_slistautoptr>

typealias GtkRecentManager_slistautoptr = CPointer<GSList>

typealias GtkRevealer_autoptrVar = CPointerVarOf<GtkRevealer_autoptr>

typealias GtkRevealer_autoptr = CPointer<GtkRevealer>

typealias GtkRevealer_listautoptrVar = CPointerVarOf<GtkRevealer_listautoptr>

typealias GtkRevealer_listautoptr = CPointer<GList>

typealias GtkRevealer_slistautoptrVar = CPointerVarOf<GtkRevealer_slistautoptr>

typealias GtkRevealer_slistautoptr = CPointer<GSList>

typealias GtkScale_autoptrVar = CPointerVarOf<GtkScale_autoptr>

typealias GtkScale_autoptr = CPointer<GtkScale>

typealias GtkScale_listautoptrVar = CPointerVarOf<GtkScale_listautoptr>

typealias GtkScale_listautoptr = CPointer<GList>

typealias GtkScale_slistautoptrVar = CPointerVarOf<GtkScale_slistautoptr>

typealias GtkScale_slistautoptr = CPointer<GSList>

typealias GtkScaleButton_autoptrVar = CPointerVarOf<GtkScaleButton_autoptr>

typealias GtkScaleButton_autoptr = CPointer<GtkScaleButton>

typealias GtkScaleButton_listautoptrVar = CPointerVarOf<GtkScaleButton_listautoptr>

typealias GtkScaleButton_listautoptr = CPointer<GList>

typealias GtkScaleButton_slistautoptrVar = CPointerVarOf<GtkScaleButton_slistautoptr>

typealias GtkScaleButton_slistautoptr = CPointer<GSList>

typealias GtkScrollable_autoptrVar = CPointerVarOf<GtkScrollable_autoptr>

typealias GtkScrollable_autoptr = CPointer<GtkScrollable>

typealias GtkScrollable_listautoptrVar = CPointerVarOf<GtkScrollable_listautoptr>

typealias GtkScrollable_listautoptr = CPointer<GList>

typealias GtkScrollable_slistautoptrVar = CPointerVarOf<GtkScrollable_slistautoptr>

typealias GtkScrollable_slistautoptr = CPointer<GSList>

typealias GtkScrollbar_autoptrVar = CPointerVarOf<GtkScrollbar_autoptr>

typealias GtkScrollbar_autoptr = CPointer<GtkScrollbar>

typealias GtkScrollbar_listautoptrVar = CPointerVarOf<GtkScrollbar_listautoptr>

typealias GtkScrollbar_listautoptr = CPointer<GList>

typealias GtkScrollbar_slistautoptrVar = CPointerVarOf<GtkScrollbar_slistautoptr>

typealias GtkScrollbar_slistautoptr = CPointer<GSList>

typealias GtkScrolledWindow_autoptrVar = CPointerVarOf<GtkScrolledWindow_autoptr>

typealias GtkScrolledWindow_autoptr = CPointer<GtkScrolledWindow>

typealias GtkScrolledWindow_listautoptrVar = CPointerVarOf<GtkScrolledWindow_listautoptr>

typealias GtkScrolledWindow_listautoptr = CPointer<GList>

typealias GtkScrolledWindow_slistautoptrVar = CPointerVarOf<GtkScrolledWindow_slistautoptr>

typealias GtkScrolledWindow_slistautoptr = CPointer<GSList>

typealias GtkSearchBar_autoptrVar = CPointerVarOf<GtkSearchBar_autoptr>

typealias GtkSearchBar_autoptr = CPointer<GtkSearchBar>

typealias GtkSearchBar_listautoptrVar = CPointerVarOf<GtkSearchBar_listautoptr>

typealias GtkSearchBar_listautoptr = CPointer<GList>

typealias GtkSearchBar_slistautoptrVar = CPointerVarOf<GtkSearchBar_slistautoptr>

typealias GtkSearchBar_slistautoptr = CPointer<GSList>

typealias GtkSearchEntry_autoptrVar = CPointerVarOf<GtkSearchEntry_autoptr>

typealias GtkSearchEntry_autoptr = CPointer<GtkSearchEntry>

typealias GtkSearchEntry_listautoptrVar = CPointerVarOf<GtkSearchEntry_listautoptr>

typealias GtkSearchEntry_listautoptr = CPointer<GList>

typealias GtkSearchEntry_slistautoptrVar = CPointerVarOf<GtkSearchEntry_slistautoptr>

typealias GtkSearchEntry_slistautoptr = CPointer<GSList>

typealias GtkSeparator_autoptrVar = CPointerVarOf<GtkSeparator_autoptr>

typealias GtkSeparator_autoptr = CPointer<GtkSeparator>

typealias GtkSeparator_listautoptrVar = CPointerVarOf<GtkSeparator_listautoptr>

typealias GtkSeparator_listautoptr = CPointer<GList>

typealias GtkSeparator_slistautoptrVar = CPointerVarOf<GtkSeparator_slistautoptr>

typealias GtkSeparator_slistautoptr = CPointer<GSList>

typealias GtkSeparatorMenuItem_autoptrVar = CPointerVarOf<GtkSeparatorMenuItem_autoptr>

typealias GtkSeparatorMenuItem_autoptr = CPointer<GtkSeparatorMenuItem>

typealias GtkSeparatorMenuItem_listautoptrVar = CPointerVarOf<GtkSeparatorMenuItem_listautoptr>

typealias GtkSeparatorMenuItem_listautoptr = CPointer<GList>

typealias GtkSeparatorMenuItem_slistautoptrVar = CPointerVarOf<GtkSeparatorMenuItem_slistautoptr>

typealias GtkSeparatorMenuItem_slistautoptr = CPointer<GSList>

typealias GtkSeparatorToolItem_autoptrVar = CPointerVarOf<GtkSeparatorToolItem_autoptr>

typealias GtkSeparatorToolItem_autoptr = CPointer<GtkSeparatorToolItem>

typealias GtkSeparatorToolItem_listautoptrVar = CPointerVarOf<GtkSeparatorToolItem_listautoptr>

typealias GtkSeparatorToolItem_listautoptr = CPointer<GList>

typealias GtkSeparatorToolItem_slistautoptrVar = CPointerVarOf<GtkSeparatorToolItem_slistautoptr>

typealias GtkSeparatorToolItem_slistautoptr = CPointer<GSList>

typealias GtkSettings_autoptrVar = CPointerVarOf<GtkSettings_autoptr>

typealias GtkSettings_autoptr = CPointer<GtkSettings>

typealias GtkSettings_listautoptrVar = CPointerVarOf<GtkSettings_listautoptr>

typealias GtkSettings_listautoptr = CPointer<GList>

typealias GtkSettings_slistautoptrVar = CPointerVarOf<GtkSettings_slistautoptr>

typealias GtkSettings_slistautoptr = CPointer<GSList>

typealias GtkStackSidebar_autoptrVar = CPointerVarOf<GtkStackSidebar_autoptr>

typealias GtkStackSidebar_autoptr = CPointer<GtkStackSidebar>

typealias GtkStackSidebar_listautoptrVar = CPointerVarOf<GtkStackSidebar_listautoptr>

typealias GtkStackSidebar_listautoptr = CPointer<GList>

typealias GtkStackSidebar_slistautoptrVar = CPointerVarOf<GtkStackSidebar_slistautoptr>

typealias GtkStackSidebar_slistautoptr = CPointer<GSList>

typealias GtkSizeGroup_autoptrVar = CPointerVarOf<GtkSizeGroup_autoptr>

typealias GtkSizeGroup_autoptr = CPointer<GtkSizeGroup>

typealias GtkSizeGroup_listautoptrVar = CPointerVarOf<GtkSizeGroup_listautoptr>

typealias GtkSizeGroup_listautoptr = CPointer<GList>

typealias GtkSizeGroup_slistautoptrVar = CPointerVarOf<GtkSizeGroup_slistautoptr>

typealias GtkSizeGroup_slistautoptr = CPointer<GSList>

typealias GtkSpinButton_autoptrVar = CPointerVarOf<GtkSpinButton_autoptr>

typealias GtkSpinButton_autoptr = CPointer<GtkSpinButton>

typealias GtkSpinButton_listautoptrVar = CPointerVarOf<GtkSpinButton_listautoptr>

typealias GtkSpinButton_listautoptr = CPointer<GList>

typealias GtkSpinButton_slistautoptrVar = CPointerVarOf<GtkSpinButton_slistautoptr>

typealias GtkSpinButton_slistautoptr = CPointer<GSList>

typealias GtkSpinner_autoptrVar = CPointerVarOf<GtkSpinner_autoptr>

typealias GtkSpinner_autoptr = CPointer<GtkSpinner>

typealias GtkSpinner_listautoptrVar = CPointerVarOf<GtkSpinner_listautoptr>

typealias GtkSpinner_listautoptr = CPointer<GList>

typealias GtkSpinner_slistautoptrVar = CPointerVarOf<GtkSpinner_slistautoptr>

typealias GtkSpinner_slistautoptr = CPointer<GSList>

typealias GtkStack_autoptrVar = CPointerVarOf<GtkStack_autoptr>

typealias GtkStack_autoptr = CPointer<GtkStack>

typealias GtkStack_listautoptrVar = CPointerVarOf<GtkStack_listautoptr>

typealias GtkStack_listautoptr = CPointer<GList>

typealias GtkStack_slistautoptrVar = CPointerVarOf<GtkStack_slistautoptr>

typealias GtkStack_slistautoptr = CPointer<GSList>

typealias GtkStackSwitcher_autoptrVar = CPointerVarOf<GtkStackSwitcher_autoptr>

typealias GtkStackSwitcher_autoptr = CPointer<GtkStackSwitcher>

typealias GtkStackSwitcher_listautoptrVar = CPointerVarOf<GtkStackSwitcher_listautoptr>

typealias GtkStackSwitcher_listautoptr = CPointer<GList>

typealias GtkStackSwitcher_slistautoptrVar = CPointerVarOf<GtkStackSwitcher_slistautoptr>

typealias GtkStackSwitcher_slistautoptr = CPointer<GSList>

typealias GtkStatusbar_autoptrVar = CPointerVarOf<GtkStatusbar_autoptr>

typealias GtkStatusbar_autoptr = CPointer<GtkStatusbar>

typealias GtkStatusbar_listautoptrVar = CPointerVarOf<GtkStatusbar_listautoptr>

typealias GtkStatusbar_listautoptr = CPointer<GList>

typealias GtkStatusbar_slistautoptrVar = CPointerVarOf<GtkStatusbar_slistautoptr>

typealias GtkStatusbar_slistautoptr = CPointer<GSList>

typealias GtkStyle_autoptrVar = CPointerVarOf<GtkStyle_autoptr>

typealias GtkStyle_autoptr = CPointer<GtkStyle>

typealias GtkStyle_listautoptrVar = CPointerVarOf<GtkStyle_listautoptr>

typealias GtkStyle_listautoptr = CPointer<GList>

typealias GtkStyle_slistautoptrVar = CPointerVarOf<GtkStyle_slistautoptr>

typealias GtkStyle_slistautoptr = CPointer<GSList>

typealias GtkStyleContext_autoptrVar = CPointerVarOf<GtkStyleContext_autoptr>

typealias GtkStyleContext_autoptr = CPointer<GtkStyleContext>

typealias GtkStyleContext_listautoptrVar = CPointerVarOf<GtkStyleContext_listautoptr>

typealias GtkStyleContext_listautoptr = CPointer<GList>

typealias GtkStyleContext_slistautoptrVar = CPointerVarOf<GtkStyleContext_slistautoptr>

typealias GtkStyleContext_slistautoptr = CPointer<GSList>

typealias GtkStyleProperties_autoptrVar = CPointerVarOf<GtkStyleProperties_autoptr>

typealias GtkStyleProperties_autoptr = CPointer<GtkStyleProperties>

typealias GtkStyleProperties_listautoptrVar = CPointerVarOf<GtkStyleProperties_listautoptr>

typealias GtkStyleProperties_listautoptr = CPointer<GList>

typealias GtkStyleProperties_slistautoptrVar = CPointerVarOf<GtkStyleProperties_slistautoptr>

typealias GtkStyleProperties_slistautoptr = CPointer<GSList>

typealias GtkStyleProvider_autoptrVar = CPointerVarOf<GtkStyleProvider_autoptr>

typealias GtkStyleProvider_autoptr = CPointer<GtkStyleProvider>

typealias GtkStyleProvider_listautoptrVar = CPointerVarOf<GtkStyleProvider_listautoptr>

typealias GtkStyleProvider_listautoptr = CPointer<GList>

typealias GtkStyleProvider_slistautoptrVar = CPointerVarOf<GtkStyleProvider_slistautoptr>

typealias GtkStyleProvider_slistautoptr = CPointer<GSList>

typealias GtkSwitch_autoptrVar = CPointerVarOf<GtkSwitch_autoptr>

typealias GtkSwitch_autoptr = CPointer<GtkSwitch>

typealias GtkSwitch_listautoptrVar = CPointerVarOf<GtkSwitch_listautoptr>

typealias GtkSwitch_listautoptr = CPointer<GList>

typealias GtkSwitch_slistautoptrVar = CPointerVarOf<GtkSwitch_slistautoptr>

typealias GtkSwitch_slistautoptr = CPointer<GSList>

typealias GtkTextBuffer_autoptrVar = CPointerVarOf<GtkTextBuffer_autoptr>

typealias GtkTextBuffer_autoptr = CPointer<GtkTextBuffer>

typealias GtkTextBuffer_listautoptrVar = CPointerVarOf<GtkTextBuffer_listautoptr>

typealias GtkTextBuffer_listautoptr = CPointer<GList>

typealias GtkTextBuffer_slistautoptrVar = CPointerVarOf<GtkTextBuffer_slistautoptr>

typealias GtkTextBuffer_slistautoptr = CPointer<GSList>

typealias GtkTextChildAnchor_autoptrVar = CPointerVarOf<GtkTextChildAnchor_autoptr>

typealias GtkTextChildAnchor_autoptr = CPointer<GtkTextChildAnchor>

typealias GtkTextChildAnchor_listautoptrVar = CPointerVarOf<GtkTextChildAnchor_listautoptr>

typealias GtkTextChildAnchor_listautoptr = CPointer<GList>

typealias GtkTextChildAnchor_slistautoptrVar = CPointerVarOf<GtkTextChildAnchor_slistautoptr>

typealias GtkTextChildAnchor_slistautoptr = CPointer<GSList>

typealias GtkTextMark_autoptrVar = CPointerVarOf<GtkTextMark_autoptr>

typealias GtkTextMark_autoptr = CPointer<GtkTextMark>

typealias GtkTextMark_listautoptrVar = CPointerVarOf<GtkTextMark_listautoptr>

typealias GtkTextMark_listautoptr = CPointer<GList>

typealias GtkTextMark_slistautoptrVar = CPointerVarOf<GtkTextMark_slistautoptr>

typealias GtkTextMark_slistautoptr = CPointer<GSList>

typealias GtkTextTag_autoptrVar = CPointerVarOf<GtkTextTag_autoptr>

typealias GtkTextTag_autoptr = CPointer<GtkTextTag>

typealias GtkTextTag_listautoptrVar = CPointerVarOf<GtkTextTag_listautoptr>

typealias GtkTextTag_listautoptr = CPointer<GList>

typealias GtkTextTag_slistautoptrVar = CPointerVarOf<GtkTextTag_slistautoptr>

typealias GtkTextTag_slistautoptr = CPointer<GSList>

typealias GtkTextTagTable_autoptrVar = CPointerVarOf<GtkTextTagTable_autoptr>

typealias GtkTextTagTable_autoptr = CPointer<GtkTextTagTable>

typealias GtkTextTagTable_listautoptrVar = CPointerVarOf<GtkTextTagTable_listautoptr>

typealias GtkTextTagTable_listautoptr = CPointer<GList>

typealias GtkTextTagTable_slistautoptrVar = CPointerVarOf<GtkTextTagTable_slistautoptr>

typealias GtkTextTagTable_slistautoptr = CPointer<GSList>

typealias GtkTextView_autoptrVar = CPointerVarOf<GtkTextView_autoptr>

typealias GtkTextView_autoptr = CPointer<GtkTextView>

typealias GtkTextView_listautoptrVar = CPointerVarOf<GtkTextView_listautoptr>

typealias GtkTextView_listautoptr = CPointer<GList>

typealias GtkTextView_slistautoptrVar = CPointerVarOf<GtkTextView_slistautoptr>

typealias GtkTextView_slistautoptr = CPointer<GSList>

typealias GtkToggleButton_autoptrVar = CPointerVarOf<GtkToggleButton_autoptr>

typealias GtkToggleButton_autoptr = CPointer<GtkToggleButton>

typealias GtkToggleButton_listautoptrVar = CPointerVarOf<GtkToggleButton_listautoptr>

typealias GtkToggleButton_listautoptr = CPointer<GList>

typealias GtkToggleButton_slistautoptrVar = CPointerVarOf<GtkToggleButton_slistautoptr>

typealias GtkToggleButton_slistautoptr = CPointer<GSList>

typealias GtkToggleToolButton_autoptrVar = CPointerVarOf<GtkToggleToolButton_autoptr>

typealias GtkToggleToolButton_autoptr = CPointer<GtkToggleToolButton>

typealias GtkToggleToolButton_listautoptrVar = CPointerVarOf<GtkToggleToolButton_listautoptr>

typealias GtkToggleToolButton_listautoptr = CPointer<GList>

typealias GtkToggleToolButton_slistautoptrVar = CPointerVarOf<GtkToggleToolButton_slistautoptr>

typealias GtkToggleToolButton_slistautoptr = CPointer<GSList>

typealias GtkToolButton_autoptrVar = CPointerVarOf<GtkToolButton_autoptr>

typealias GtkToolButton_autoptr = CPointer<GtkToolButton>

typealias GtkToolButton_listautoptrVar = CPointerVarOf<GtkToolButton_listautoptr>

typealias GtkToolButton_listautoptr = CPointer<GList>

typealias GtkToolButton_slistautoptrVar = CPointerVarOf<GtkToolButton_slistautoptr>

typealias GtkToolButton_slistautoptr = CPointer<GSList>

typealias GtkToolItem_autoptrVar = CPointerVarOf<GtkToolItem_autoptr>

typealias GtkToolItem_autoptr = CPointer<GtkToolItem>

typealias GtkToolItem_listautoptrVar = CPointerVarOf<GtkToolItem_listautoptr>

typealias GtkToolItem_listautoptr = CPointer<GList>

typealias GtkToolItem_slistautoptrVar = CPointerVarOf<GtkToolItem_slistautoptr>

typealias GtkToolItem_slistautoptr = CPointer<GSList>

typealias GtkToolItemGroup_autoptrVar = CPointerVarOf<GtkToolItemGroup_autoptr>

typealias GtkToolItemGroup_autoptr = CPointer<GtkToolItemGroup>

typealias GtkToolItemGroup_listautoptrVar = CPointerVarOf<GtkToolItemGroup_listautoptr>

typealias GtkToolItemGroup_listautoptr = CPointer<GList>

typealias GtkToolItemGroup_slistautoptrVar = CPointerVarOf<GtkToolItemGroup_slistautoptr>

typealias GtkToolItemGroup_slistautoptr = CPointer<GSList>

typealias GtkToolPalette_autoptrVar = CPointerVarOf<GtkToolPalette_autoptr>

typealias GtkToolPalette_autoptr = CPointer<GtkToolPalette>

typealias GtkToolPalette_listautoptrVar = CPointerVarOf<GtkToolPalette_listautoptr>

typealias GtkToolPalette_listautoptr = CPointer<GList>

typealias GtkToolPalette_slistautoptrVar = CPointerVarOf<GtkToolPalette_slistautoptr>

typealias GtkToolPalette_slistautoptr = CPointer<GSList>

typealias GtkToolShell_autoptrVar = CPointerVarOf<GtkToolShell_autoptr>

typealias GtkToolShell_autoptr = CPointer<GtkToolShell>

typealias GtkToolShell_listautoptrVar = CPointerVarOf<GtkToolShell_listautoptr>

typealias GtkToolShell_listautoptr = CPointer<GList>

typealias GtkToolShell_slistautoptrVar = CPointerVarOf<GtkToolShell_slistautoptr>

typealias GtkToolShell_slistautoptr = CPointer<GSList>

typealias GtkToolbar_autoptrVar = CPointerVarOf<GtkToolbar_autoptr>

typealias GtkToolbar_autoptr = CPointer<GtkToolbar>

typealias GtkToolbar_listautoptrVar = CPointerVarOf<GtkToolbar_listautoptr>

typealias GtkToolbar_listautoptr = CPointer<GList>

typealias GtkToolbar_slistautoptrVar = CPointerVarOf<GtkToolbar_slistautoptr>

typealias GtkToolbar_slistautoptr = CPointer<GSList>

typealias GtkTooltip_autoptrVar = CPointerVarOf<GtkTooltip_autoptr>

typealias GtkTooltip_autoptr = CPointer<GtkTooltip>

typealias GtkTooltip_listautoptrVar = CPointerVarOf<GtkTooltip_listautoptr>

typealias GtkTooltip_listautoptr = CPointer<GList>

typealias GtkTooltip_slistautoptrVar = CPointerVarOf<GtkTooltip_slistautoptr>

typealias GtkTooltip_slistautoptr = CPointer<GSList>

typealias GtkTreeDragDest_autoptrVar = CPointerVarOf<GtkTreeDragDest_autoptr>

typealias GtkTreeDragDest_autoptr = CPointer<GtkTreeDragDest>

typealias GtkTreeDragDest_listautoptrVar = CPointerVarOf<GtkTreeDragDest_listautoptr>

typealias GtkTreeDragDest_listautoptr = CPointer<GList>

typealias GtkTreeDragDest_slistautoptrVar = CPointerVarOf<GtkTreeDragDest_slistautoptr>

typealias GtkTreeDragDest_slistautoptr = CPointer<GSList>

typealias GtkTreeDragSource_autoptrVar = CPointerVarOf<GtkTreeDragSource_autoptr>

typealias GtkTreeDragSource_autoptr = CPointer<GtkTreeDragSource>

typealias GtkTreeDragSource_listautoptrVar = CPointerVarOf<GtkTreeDragSource_listautoptr>

typealias GtkTreeDragSource_listautoptr = CPointer<GList>

typealias GtkTreeDragSource_slistautoptrVar = CPointerVarOf<GtkTreeDragSource_slistautoptr>

typealias GtkTreeDragSource_slistautoptr = CPointer<GSList>

typealias GtkTreeModel_autoptrVar = CPointerVarOf<GtkTreeModel_autoptr>

typealias GtkTreeModel_autoptr = CPointer<GtkTreeModel>

typealias GtkTreeModel_listautoptrVar = CPointerVarOf<GtkTreeModel_listautoptr>

typealias GtkTreeModel_listautoptr = CPointer<GList>

typealias GtkTreeModel_slistautoptrVar = CPointerVarOf<GtkTreeModel_slistautoptr>

typealias GtkTreeModel_slistautoptr = CPointer<GSList>

typealias GtkTreeModelFilter_autoptrVar = CPointerVarOf<GtkTreeModelFilter_autoptr>

typealias GtkTreeModelFilter_autoptr = CPointer<GtkTreeModelFilter>

typealias GtkTreeModelFilter_listautoptrVar = CPointerVarOf<GtkTreeModelFilter_listautoptr>

typealias GtkTreeModelFilter_listautoptr = CPointer<GList>

typealias GtkTreeModelFilter_slistautoptrVar = CPointerVarOf<GtkTreeModelFilter_slistautoptr>

typealias GtkTreeModelFilter_slistautoptr = CPointer<GSList>

typealias GtkTreeModelSort_autoptrVar = CPointerVarOf<GtkTreeModelSort_autoptr>

typealias GtkTreeModelSort_autoptr = CPointer<GtkTreeModelSort>

typealias GtkTreeModelSort_listautoptrVar = CPointerVarOf<GtkTreeModelSort_listautoptr>

typealias GtkTreeModelSort_listautoptr = CPointer<GList>

typealias GtkTreeModelSort_slistautoptrVar = CPointerVarOf<GtkTreeModelSort_slistautoptr>

typealias GtkTreeModelSort_slistautoptr = CPointer<GSList>

typealias GtkTreeSelection_autoptrVar = CPointerVarOf<GtkTreeSelection_autoptr>

typealias GtkTreeSelection_autoptr = CPointer<GtkTreeSelection>

typealias GtkTreeSelection_listautoptrVar = CPointerVarOf<GtkTreeSelection_listautoptr>

typealias GtkTreeSelection_listautoptr = CPointer<GList>

typealias GtkTreeSelection_slistautoptrVar = CPointerVarOf<GtkTreeSelection_slistautoptr>

typealias GtkTreeSelection_slistautoptr = CPointer<GSList>

typealias GtkTreeSortable_autoptrVar = CPointerVarOf<GtkTreeSortable_autoptr>

typealias GtkTreeSortable_autoptr = CPointer<GtkTreeSortable>

typealias GtkTreeSortable_listautoptrVar = CPointerVarOf<GtkTreeSortable_listautoptr>

typealias GtkTreeSortable_listautoptr = CPointer<GList>

typealias GtkTreeSortable_slistautoptrVar = CPointerVarOf<GtkTreeSortable_slistautoptr>

typealias GtkTreeSortable_slistautoptr = CPointer<GSList>

typealias GtkTreeStore_autoptrVar = CPointerVarOf<GtkTreeStore_autoptr>

typealias GtkTreeStore_autoptr = CPointer<GtkTreeStore>

typealias GtkTreeStore_listautoptrVar = CPointerVarOf<GtkTreeStore_listautoptr>

typealias GtkTreeStore_listautoptr = CPointer<GList>

typealias GtkTreeStore_slistautoptrVar = CPointerVarOf<GtkTreeStore_slistautoptr>

typealias GtkTreeStore_slistautoptr = CPointer<GSList>

typealias GtkTreeView_autoptrVar = CPointerVarOf<GtkTreeView_autoptr>

typealias GtkTreeView_autoptr = CPointer<GtkTreeView>

typealias GtkTreeView_listautoptrVar = CPointerVarOf<GtkTreeView_listautoptr>

typealias GtkTreeView_listautoptr = CPointer<GList>

typealias GtkTreeView_slistautoptrVar = CPointerVarOf<GtkTreeView_slistautoptr>

typealias GtkTreeView_slistautoptr = CPointer<GSList>

typealias GtkTreeViewColumn_autoptrVar = CPointerVarOf<GtkTreeViewColumn_autoptr>

typealias GtkTreeViewColumn_autoptr = CPointer<GtkTreeViewColumn>

typealias GtkTreeViewColumn_listautoptrVar = CPointerVarOf<GtkTreeViewColumn_listautoptr>

typealias GtkTreeViewColumn_listautoptr = CPointer<GList>

typealias GtkTreeViewColumn_slistautoptrVar = CPointerVarOf<GtkTreeViewColumn_slistautoptr>

typealias GtkTreeViewColumn_slistautoptr = CPointer<GSList>

typealias GtkViewport_autoptrVar = CPointerVarOf<GtkViewport_autoptr>

typealias GtkViewport_autoptr = CPointer<GtkViewport>

typealias GtkViewport_listautoptrVar = CPointerVarOf<GtkViewport_listautoptr>

typealias GtkViewport_listautoptr = CPointer<GList>

typealias GtkViewport_slistautoptrVar = CPointerVarOf<GtkViewport_slistautoptr>

typealias GtkViewport_slistautoptr = CPointer<GSList>

typealias GtkVolumeButton_autoptrVar = CPointerVarOf<GtkVolumeButton_autoptr>

typealias GtkVolumeButton_autoptr = CPointer<GtkVolumeButton>

typealias GtkVolumeButton_listautoptrVar = CPointerVarOf<GtkVolumeButton_listautoptr>

typealias GtkVolumeButton_listautoptr = CPointer<GList>

typealias GtkVolumeButton_slistautoptrVar = CPointerVarOf<GtkVolumeButton_slistautoptr>

typealias GtkVolumeButton_slistautoptr = CPointer<GSList>

typealias GtkPaperSize_autoptrVar = CPointerVarOf<GtkPaperSize_autoptr>

typealias GtkPaperSize_autoptr = CPointer<GtkPaperSize>

typealias GtkPaperSize_listautoptrVar = CPointerVarOf<GtkPaperSize_listautoptr>

typealias GtkPaperSize_listautoptr = CPointer<GList>

typealias GtkPaperSize_slistautoptrVar = CPointerVarOf<GtkPaperSize_slistautoptr>

typealias GtkPaperSize_slistautoptr = CPointer<GSList>

typealias GtkSelectionData_autoptrVar = CPointerVarOf<GtkSelectionData_autoptr>

typealias GtkSelectionData_autoptr = CPointer<GtkSelectionData>

typealias GtkSelectionData_listautoptrVar = CPointerVarOf<GtkSelectionData_listautoptr>

typealias GtkSelectionData_listautoptr = CPointer<GList>

typealias GtkSelectionData_slistautoptrVar = CPointerVarOf<GtkSelectionData_slistautoptr>

typealias GtkSelectionData_slistautoptr = CPointer<GSList>

typealias GtkTargetList_autoptrVar = CPointerVarOf<GtkTargetList_autoptr>

typealias GtkTargetList_autoptr = CPointer<GtkTargetList>

typealias GtkTargetList_listautoptrVar = CPointerVarOf<GtkTargetList_listautoptr>

typealias GtkTargetList_listautoptr = CPointer<GList>

typealias GtkTargetList_slistautoptrVar = CPointerVarOf<GtkTargetList_slistautoptr>

typealias GtkTargetList_slistautoptr = CPointer<GSList>

typealias GtkTextAttributes_autoptrVar = CPointerVarOf<GtkTextAttributes_autoptr>

typealias GtkTextAttributes_autoptr = CPointer<GtkTextAttributes>

typealias GtkTextAttributes_listautoptrVar = CPointerVarOf<GtkTextAttributes_listautoptr>

typealias GtkTextAttributes_listautoptr = CPointer<GList>

typealias GtkTextAttributes_slistautoptrVar = CPointerVarOf<GtkTextAttributes_slistautoptr>

typealias GtkTextAttributes_slistautoptr = CPointer<GSList>

typealias GtkTextIter_autoptrVar = CPointerVarOf<GtkTextIter_autoptr>

typealias GtkTextIter_autoptr = CPointer<GtkTextIter>

typealias GtkTextIter_listautoptrVar = CPointerVarOf<GtkTextIter_listautoptr>

typealias GtkTextIter_listautoptr = CPointer<GList>

typealias GtkTextIter_slistautoptrVar = CPointerVarOf<GtkTextIter_slistautoptr>

typealias GtkTextIter_slistautoptr = CPointer<GSList>

typealias GtkTreeIter_autoptrVar = CPointerVarOf<GtkTreeIter_autoptr>

typealias GtkTreeIter_autoptr = CPointer<GtkTreeIter>

typealias GtkTreeIter_listautoptrVar = CPointerVarOf<GtkTreeIter_listautoptr>

typealias GtkTreeIter_listautoptr = CPointer<GList>

typealias GtkTreeIter_slistautoptrVar = CPointerVarOf<GtkTreeIter_slistautoptr>

typealias GtkTreeIter_slistautoptr = CPointer<GSList>

typealias GtkTreePath_autoptrVar = CPointerVarOf<GtkTreePath_autoptr>

typealias GtkTreePath_autoptr = CPointer<GtkTreePath>

typealias GtkTreePath_listautoptrVar = CPointerVarOf<GtkTreePath_listautoptr>

typealias GtkTreePath_listautoptr = CPointer<GList>

typealias GtkTreePath_slistautoptrVar = CPointerVarOf<GtkTreePath_slistautoptr>

typealias GtkTreePath_slistautoptr = CPointer<GSList>

typealias GtkTreeRowReference_autoptrVar = CPointerVarOf<GtkTreeRowReference_autoptr>

typealias GtkTreeRowReference_autoptr = CPointer<GtkTreeRowReference>

typealias GtkTreeRowReference_listautoptrVar = CPointerVarOf<GtkTreeRowReference_listautoptr>

typealias GtkTreeRowReference_listautoptr = CPointer<GList>

typealias GtkTreeRowReference_slistautoptrVar = CPointerVarOf<GtkTreeRowReference_slistautoptr>

typealias GtkTreeRowReference_slistautoptr = CPointer<GSList>

typealias GtkWidgetPath_autoptrVar = CPointerVarOf<GtkWidgetPath_autoptr>

typealias GtkWidgetPath_autoptr = CPointer<GtkWidgetPath>

typealias GtkWidgetPath_listautoptrVar = CPointerVarOf<GtkWidgetPath_listautoptr>

typealias GtkWidgetPath_listautoptr = CPointer<GList>

typealias GtkWidgetPath_slistautoptrVar = CPointerVarOf<GtkWidgetPath_slistautoptr>

typealias GtkWidgetPath_slistautoptr = CPointer<GSList>


val G_TYPE_FLAG_CLASSED: GTypeFundamentalFlags get() = 1u

val G_TYPE_FLAG_INSTANTIATABLE: GTypeFundamentalFlags get() = 2u

val G_TYPE_FLAG_DERIVABLE: GTypeFundamentalFlags get() = 4u

val G_TYPE_FLAG_DEEP_DERIVABLE: GTypeFundamentalFlags get() = 8u

typealias GTypeFundamentalFlagsVar = UIntVarOf<GTypeFundamentalFlags>

typealias GTypeFundamentalFlags = UInt


val G_TYPE_DEBUG_NONE: GTypeDebugFlags get() = 0u

val G_TYPE_DEBUG_OBJECTS: GTypeDebugFlags get() = 1u

val G_TYPE_DEBUG_SIGNALS: GTypeDebugFlags get() = 2u

val G_TYPE_DEBUG_INSTANCE_COUNT: GTypeDebugFlags get() = 4u

val G_TYPE_DEBUG_MASK: GTypeDebugFlags get() = 7u

typealias GTypeDebugFlagsVar = UIntVarOf<GTypeDebugFlags>

typealias GTypeDebugFlags = UInt


val G_TYPE_FLAG_ABSTRACT: GTypeFlags get() = 16u

val G_TYPE_FLAG_VALUE_ABSTRACT: GTypeFlags get() = 32u

typealias GTypeFlagsVar = UIntVarOf<GTypeFlags>

typealias GTypeFlags = UInt


val G_PARAM_READABLE: GParamFlags get() = 1

val G_PARAM_WRITABLE: GParamFlags get() = 2

val G_PARAM_READWRITE: GParamFlags get() = 3

val G_PARAM_CONSTRUCT: GParamFlags get() = 4

val G_PARAM_CONSTRUCT_ONLY: GParamFlags get() = 8

val G_PARAM_LAX_VALIDATION: GParamFlags get() = 16

val G_PARAM_STATIC_NAME: GParamFlags get() = 32

val G_PARAM_PRIVATE: GParamFlags get() = 32

val G_PARAM_STATIC_NICK: GParamFlags get() = 64

val G_PARAM_STATIC_BLURB: GParamFlags get() = 128

val G_PARAM_EXPLICIT_NOTIFY: GParamFlags get() = 1073741824

val G_PARAM_DEPRECATED: GParamFlags get() = -2147483648

typealias GParamFlagsVar = IntVarOf<GParamFlags>

typealias GParamFlags = Int


val G_SIGNAL_RUN_FIRST: GSignalFlags get() = 1u

val G_SIGNAL_RUN_LAST: GSignalFlags get() = 2u

val G_SIGNAL_RUN_CLEANUP: GSignalFlags get() = 4u

val G_SIGNAL_NO_RECURSE: GSignalFlags get() = 8u

val G_SIGNAL_DETAILED: GSignalFlags get() = 16u

val G_SIGNAL_ACTION: GSignalFlags get() = 32u

val G_SIGNAL_NO_HOOKS: GSignalFlags get() = 64u

val G_SIGNAL_MUST_COLLECT: GSignalFlags get() = 128u

val G_SIGNAL_DEPRECATED: GSignalFlags get() = 256u

typealias GSignalFlagsVar = UIntVarOf<GSignalFlags>

typealias GSignalFlags = UInt


val G_CONNECT_AFTER: GConnectFlags get() = 1u

val G_CONNECT_SWAPPED: GConnectFlags get() = 2u

typealias GConnectFlagsVar = UIntVarOf<GConnectFlags>

typealias GConnectFlags = UInt


val G_SIGNAL_MATCH_ID: GSignalMatchType get() = 1u

val G_SIGNAL_MATCH_DETAIL: GSignalMatchType get() = 2u

val G_SIGNAL_MATCH_CLOSURE: GSignalMatchType get() = 4u

val G_SIGNAL_MATCH_FUNC: GSignalMatchType get() = 8u

val G_SIGNAL_MATCH_DATA: GSignalMatchType get() = 16u

val G_SIGNAL_MATCH_UNBLOCKED: GSignalMatchType get() = 32u

typealias GSignalMatchTypeVar = UIntVarOf<GSignalMatchType>

typealias GSignalMatchType = UInt


val G_BINDING_DEFAULT: GBindingFlags get() = 0u

val G_BINDING_BIDIRECTIONAL: GBindingFlags get() = 1u

val G_BINDING_SYNC_CREATE: GBindingFlags get() = 2u

val G_BINDING_INVERT_BOOLEAN: GBindingFlags get() = 4u

typealias GBindingFlagsVar = UIntVarOf<GBindingFlags>

typealias GBindingFlags = UInt


val G_APP_INFO_CREATE_NONE: GAppInfoCreateFlags get() = 0u

val G_APP_INFO_CREATE_NEEDS_TERMINAL: GAppInfoCreateFlags get() = 1u

val G_APP_INFO_CREATE_SUPPORTS_URIS: GAppInfoCreateFlags get() = 2u

val G_APP_INFO_CREATE_SUPPORTS_STARTUP_NOTIFICATION: GAppInfoCreateFlags get() = 4u

typealias GAppInfoCreateFlagsVar = UIntVarOf<GAppInfoCreateFlags>

typealias GAppInfoCreateFlags = UInt


val G_CONVERTER_NO_FLAGS: GConverterFlags get() = 0u

val G_CONVERTER_INPUT_AT_END: GConverterFlags get() = 1u

val G_CONVERTER_FLUSH: GConverterFlags get() = 2u

typealias GConverterFlagsVar = UIntVarOf<GConverterFlags>

typealias GConverterFlags = UInt


val G_CONVERTER_ERROR: GConverterResult get() = 0u

val G_CONVERTER_CONVERTED: GConverterResult get() = 1u

val G_CONVERTER_FINISHED: GConverterResult get() = 2u

val G_CONVERTER_FLUSHED: GConverterResult get() = 3u

typealias GConverterResultVar = UIntVarOf<GConverterResult>

typealias GConverterResult = UInt


val G_FILE_ATTRIBUTE_TYPE_INVALID: GFileAttributeType get() = 0u

val G_FILE_ATTRIBUTE_TYPE_STRING: GFileAttributeType get() = 1u

val G_FILE_ATTRIBUTE_TYPE_BYTE_STRING: GFileAttributeType get() = 2u

val G_FILE_ATTRIBUTE_TYPE_BOOLEAN: GFileAttributeType get() = 3u

val G_FILE_ATTRIBUTE_TYPE_UINT32: GFileAttributeType get() = 4u

val G_FILE_ATTRIBUTE_TYPE_INT32: GFileAttributeType get() = 5u

val G_FILE_ATTRIBUTE_TYPE_UINT64: GFileAttributeType get() = 6u

val G_FILE_ATTRIBUTE_TYPE_INT64: GFileAttributeType get() = 7u

val G_FILE_ATTRIBUTE_TYPE_OBJECT: GFileAttributeType get() = 8u

val G_FILE_ATTRIBUTE_TYPE_STRINGV: GFileAttributeType get() = 9u

typealias GFileAttributeTypeVar = UIntVarOf<GFileAttributeType>

typealias GFileAttributeType = UInt


val G_FILE_ATTRIBUTE_INFO_NONE: GFileAttributeInfoFlags get() = 0u

val G_FILE_ATTRIBUTE_INFO_COPY_WITH_FILE: GFileAttributeInfoFlags get() = 1u

val G_FILE_ATTRIBUTE_INFO_COPY_WHEN_MOVED: GFileAttributeInfoFlags get() = 2u

typealias GFileAttributeInfoFlagsVar = UIntVarOf<GFileAttributeInfoFlags>

typealias GFileAttributeInfoFlags = UInt


val G_FILE_ATTRIBUTE_STATUS_UNSET: GFileAttributeStatus get() = 0u

val G_FILE_ATTRIBUTE_STATUS_SET: GFileAttributeStatus get() = 1u

val G_FILE_ATTRIBUTE_STATUS_ERROR_SETTING: GFileAttributeStatus get() = 2u

typealias GFileAttributeStatusVar = UIntVarOf<GFileAttributeStatus>

typealias GFileAttributeStatus = UInt


val G_FILE_QUERY_INFO_NONE: GFileQueryInfoFlags get() = 0u

val G_FILE_QUERY_INFO_NOFOLLOW_SYMLINKS: GFileQueryInfoFlags get() = 1u

typealias GFileQueryInfoFlagsVar = UIntVarOf<GFileQueryInfoFlags>

typealias GFileQueryInfoFlags = UInt


val G_FILE_CREATE_NONE: GFileCreateFlags get() = 0u

val G_FILE_CREATE_PRIVATE: GFileCreateFlags get() = 1u

val G_FILE_CREATE_REPLACE_DESTINATION: GFileCreateFlags get() = 2u

typealias GFileCreateFlagsVar = UIntVarOf<GFileCreateFlags>

typealias GFileCreateFlags = UInt


val G_FILE_MEASURE_NONE: GFileMeasureFlags get() = 0u

val G_FILE_MEASURE_REPORT_ANY_ERROR: GFileMeasureFlags get() = 2u

val G_FILE_MEASURE_APPARENT_SIZE: GFileMeasureFlags get() = 4u

val G_FILE_MEASURE_NO_XDEV: GFileMeasureFlags get() = 8u

typealias GFileMeasureFlagsVar = UIntVarOf<GFileMeasureFlags>

typealias GFileMeasureFlags = UInt


val G_MOUNT_MOUNT_NONE: GMountMountFlags get() = 0u

typealias GMountMountFlagsVar = UIntVarOf<GMountMountFlags>

typealias GMountMountFlags = UInt


val G_MOUNT_UNMOUNT_NONE: GMountUnmountFlags get() = 0u

val G_MOUNT_UNMOUNT_FORCE: GMountUnmountFlags get() = 1u

typealias GMountUnmountFlagsVar = UIntVarOf<GMountUnmountFlags>

typealias GMountUnmountFlags = UInt


val G_DRIVE_START_NONE: GDriveStartFlags get() = 0u

typealias GDriveStartFlagsVar = UIntVarOf<GDriveStartFlags>

typealias GDriveStartFlags = UInt


val G_FILE_COPY_NONE: GFileCopyFlags get() = 0u

val G_FILE_COPY_OVERWRITE: GFileCopyFlags get() = 1u

val G_FILE_COPY_BACKUP: GFileCopyFlags get() = 2u

val G_FILE_COPY_NOFOLLOW_SYMLINKS: GFileCopyFlags get() = 4u

val G_FILE_COPY_ALL_METADATA: GFileCopyFlags get() = 8u

val G_FILE_COPY_NO_FALLBACK_FOR_MOVE: GFileCopyFlags get() = 16u

val G_FILE_COPY_TARGET_DEFAULT_PERMS: GFileCopyFlags get() = 32u

typealias GFileCopyFlagsVar = UIntVarOf<GFileCopyFlags>

typealias GFileCopyFlags = UInt


val G_FILE_MONITOR_NONE: GFileMonitorFlags get() = 0u

val G_FILE_MONITOR_WATCH_MOUNTS: GFileMonitorFlags get() = 1u

val G_FILE_MONITOR_SEND_MOVED: GFileMonitorFlags get() = 2u

val G_FILE_MONITOR_WATCH_HARD_LINKS: GFileMonitorFlags get() = 4u

val G_FILE_MONITOR_WATCH_MOVES: GFileMonitorFlags get() = 8u

typealias GFileMonitorFlagsVar = UIntVarOf<GFileMonitorFlags>

typealias GFileMonitorFlags = UInt


val G_FILE_TYPE_UNKNOWN: GFileType get() = 0u

val G_FILE_TYPE_REGULAR: GFileType get() = 1u

val G_FILE_TYPE_DIRECTORY: GFileType get() = 2u

val G_FILE_TYPE_SYMBOLIC_LINK: GFileType get() = 3u

val G_FILE_TYPE_SPECIAL: GFileType get() = 4u

val G_FILE_TYPE_SHORTCUT: GFileType get() = 5u

val G_FILE_TYPE_MOUNTABLE: GFileType get() = 6u

typealias GFileTypeVar = UIntVarOf<GFileType>

typealias GFileType = UInt


val G_FILESYSTEM_PREVIEW_TYPE_IF_ALWAYS: GFilesystemPreviewType get() = 0u

val G_FILESYSTEM_PREVIEW_TYPE_IF_LOCAL: GFilesystemPreviewType get() = 1u

val G_FILESYSTEM_PREVIEW_TYPE_NEVER: GFilesystemPreviewType get() = 2u

typealias GFilesystemPreviewTypeVar = UIntVarOf<GFilesystemPreviewType>

typealias GFilesystemPreviewType = UInt


val G_IO_ERROR_FAILED: GIOErrorEnum get() = 0u

val G_IO_ERROR_NOT_FOUND: GIOErrorEnum get() = 1u

val G_IO_ERROR_EXISTS: GIOErrorEnum get() = 2u

val G_IO_ERROR_IS_DIRECTORY: GIOErrorEnum get() = 3u

val G_IO_ERROR_NOT_DIRECTORY: GIOErrorEnum get() = 4u

val G_IO_ERROR_NOT_EMPTY: GIOErrorEnum get() = 5u

val G_IO_ERROR_NOT_REGULAR_FILE: GIOErrorEnum get() = 6u

val G_IO_ERROR_NOT_SYMBOLIC_LINK: GIOErrorEnum get() = 7u

val G_IO_ERROR_NOT_MOUNTABLE_FILE: GIOErrorEnum get() = 8u

val G_IO_ERROR_FILENAME_TOO_LONG: GIOErrorEnum get() = 9u

val G_IO_ERROR_INVALID_FILENAME: GIOErrorEnum get() = 10u

val G_IO_ERROR_TOO_MANY_LINKS: GIOErrorEnum get() = 11u

val G_IO_ERROR_NO_SPACE: GIOErrorEnum get() = 12u

val G_IO_ERROR_INVALID_ARGUMENT: GIOErrorEnum get() = 13u

val G_IO_ERROR_PERMISSION_DENIED: GIOErrorEnum get() = 14u

val G_IO_ERROR_NOT_SUPPORTED: GIOErrorEnum get() = 15u

val G_IO_ERROR_NOT_MOUNTED: GIOErrorEnum get() = 16u

val G_IO_ERROR_ALREADY_MOUNTED: GIOErrorEnum get() = 17u

val G_IO_ERROR_CLOSED: GIOErrorEnum get() = 18u

val G_IO_ERROR_CANCELLED: GIOErrorEnum get() = 19u

val G_IO_ERROR_PENDING: GIOErrorEnum get() = 20u

val G_IO_ERROR_READ_ONLY: GIOErrorEnum get() = 21u

val G_IO_ERROR_CANT_CREATE_BACKUP: GIOErrorEnum get() = 22u

val G_IO_ERROR_WRONG_ETAG: GIOErrorEnum get() = 23u

val G_IO_ERROR_TIMED_OUT: GIOErrorEnum get() = 24u

val G_IO_ERROR_WOULD_RECURSE: GIOErrorEnum get() = 25u

val G_IO_ERROR_BUSY: GIOErrorEnum get() = 26u

val G_IO_ERROR_WOULD_BLOCK: GIOErrorEnum get() = 27u

val G_IO_ERROR_HOST_NOT_FOUND: GIOErrorEnum get() = 28u

val G_IO_ERROR_WOULD_MERGE: GIOErrorEnum get() = 29u

val G_IO_ERROR_FAILED_HANDLED: GIOErrorEnum get() = 30u

val G_IO_ERROR_TOO_MANY_OPEN_FILES: GIOErrorEnum get() = 31u

val G_IO_ERROR_NOT_INITIALIZED: GIOErrorEnum get() = 32u

val G_IO_ERROR_ADDRESS_IN_USE: GIOErrorEnum get() = 33u

val G_IO_ERROR_PARTIAL_INPUT: GIOErrorEnum get() = 34u

val G_IO_ERROR_INVALID_DATA: GIOErrorEnum get() = 35u

val G_IO_ERROR_DBUS_ERROR: GIOErrorEnum get() = 36u

val G_IO_ERROR_HOST_UNREACHABLE: GIOErrorEnum get() = 37u

val G_IO_ERROR_NETWORK_UNREACHABLE: GIOErrorEnum get() = 38u

val G_IO_ERROR_CONNECTION_REFUSED: GIOErrorEnum get() = 39u

val G_IO_ERROR_PROXY_FAILED: GIOErrorEnum get() = 40u

val G_IO_ERROR_PROXY_AUTH_FAILED: GIOErrorEnum get() = 41u

val G_IO_ERROR_PROXY_NEED_AUTH: GIOErrorEnum get() = 42u

val G_IO_ERROR_PROXY_NOT_ALLOWED: GIOErrorEnum get() = 43u

val G_IO_ERROR_BROKEN_PIPE: GIOErrorEnum get() = 44u

val G_IO_ERROR_CONNECTION_CLOSED: GIOErrorEnum get() = 44u

val G_IO_ERROR_NOT_CONNECTED: GIOErrorEnum get() = 45u

val G_IO_ERROR_MESSAGE_TOO_LARGE: GIOErrorEnum get() = 46u

typealias GIOErrorEnumVar = UIntVarOf<GIOErrorEnum>

typealias GIOErrorEnum = UInt


val G_ASK_PASSWORD_NEED_PASSWORD: GAskPasswordFlags get() = 1u

val G_ASK_PASSWORD_NEED_USERNAME: GAskPasswordFlags get() = 2u

val G_ASK_PASSWORD_NEED_DOMAIN: GAskPasswordFlags get() = 4u

val G_ASK_PASSWORD_SAVING_SUPPORTED: GAskPasswordFlags get() = 8u

val G_ASK_PASSWORD_ANONYMOUS_SUPPORTED: GAskPasswordFlags get() = 16u

typealias GAskPasswordFlagsVar = UIntVarOf<GAskPasswordFlags>

typealias GAskPasswordFlags = UInt


val G_OUTPUT_STREAM_SPLICE_NONE: GOutputStreamSpliceFlags get() = 0u

val G_OUTPUT_STREAM_SPLICE_CLOSE_SOURCE: GOutputStreamSpliceFlags get() = 1u

val G_OUTPUT_STREAM_SPLICE_CLOSE_TARGET: GOutputStreamSpliceFlags get() = 2u

typealias GOutputStreamSpliceFlagsVar = UIntVarOf<GOutputStreamSpliceFlags>

typealias GOutputStreamSpliceFlags = UInt


val G_IO_STREAM_SPLICE_NONE: GIOStreamSpliceFlags get() = 0u

val G_IO_STREAM_SPLICE_CLOSE_STREAM1: GIOStreamSpliceFlags get() = 1u

val G_IO_STREAM_SPLICE_CLOSE_STREAM2: GIOStreamSpliceFlags get() = 2u

val G_IO_STREAM_SPLICE_WAIT_FOR_BOTH: GIOStreamSpliceFlags get() = 4u

typealias GIOStreamSpliceFlagsVar = UIntVarOf<GIOStreamSpliceFlags>

typealias GIOStreamSpliceFlags = UInt


val G_RESOLVER_RECORD_SRV: GResolverRecordType get() = 1u

val G_RESOLVER_RECORD_MX: GResolverRecordType get() = 2u

val G_RESOLVER_RECORD_TXT: GResolverRecordType get() = 3u

val G_RESOLVER_RECORD_SOA: GResolverRecordType get() = 4u

val G_RESOLVER_RECORD_NS: GResolverRecordType get() = 5u

typealias GResolverRecordTypeVar = UIntVarOf<GResolverRecordType>

typealias GResolverRecordType = UInt


val G_RESOURCE_FLAGS_NONE: GResourceFlags get() = 0u

val G_RESOURCE_FLAGS_COMPRESSED: GResourceFlags get() = 1u

typealias GResourceFlagsVar = UIntVarOf<GResourceFlags>

typealias GResourceFlags = UInt


val G_RESOURCE_LOOKUP_FLAGS_NONE: GResourceLookupFlags get() = 0u

typealias GResourceLookupFlagsVar = UIntVarOf<GResourceLookupFlags>

typealias GResourceLookupFlags = UInt


val G_SOCKET_FAMILY_INVALID: GSocketFamily get() = 0u

val G_SOCKET_FAMILY_UNIX: GSocketFamily get() = 1u

val G_SOCKET_FAMILY_IPV4: GSocketFamily get() = 2u

val G_SOCKET_FAMILY_IPV6: GSocketFamily get() = 10u

typealias GSocketFamilyVar = UIntVarOf<GSocketFamily>

typealias GSocketFamily = UInt


val G_SOCKET_MSG_NONE: GSocketMsgFlags get() = 0u

val G_SOCKET_MSG_OOB: GSocketMsgFlags get() = 1u

val G_SOCKET_MSG_PEEK: GSocketMsgFlags get() = 2u

val G_SOCKET_MSG_DONTROUTE: GSocketMsgFlags get() = 4u

typealias GSocketMsgFlagsVar = UIntVarOf<GSocketMsgFlags>

typealias GSocketMsgFlags = UInt


val G_SOCKET_PROTOCOL_UNKNOWN: GSocketProtocol get() = -1

val G_SOCKET_PROTOCOL_DEFAULT: GSocketProtocol get() = 0

val G_SOCKET_PROTOCOL_TCP: GSocketProtocol get() = 6

val G_SOCKET_PROTOCOL_UDP: GSocketProtocol get() = 17

val G_SOCKET_PROTOCOL_SCTP: GSocketProtocol get() = 132

typealias GSocketProtocolVar = IntVarOf<GSocketProtocol>

typealias GSocketProtocol = Int


val G_BUS_TYPE_STARTER: GBusType get() = -1

val G_BUS_TYPE_NONE: GBusType get() = 0

val G_BUS_TYPE_SYSTEM: GBusType get() = 1

val G_BUS_TYPE_SESSION: GBusType get() = 2

typealias GBusTypeVar = IntVarOf<GBusType>

typealias GBusType = Int


val G_BUS_NAME_OWNER_FLAGS_NONE: GBusNameOwnerFlags get() = 0u

val G_BUS_NAME_OWNER_FLAGS_ALLOW_REPLACEMENT: GBusNameOwnerFlags get() = 1u

val G_BUS_NAME_OWNER_FLAGS_REPLACE: GBusNameOwnerFlags get() = 2u

val G_BUS_NAME_OWNER_FLAGS_DO_NOT_QUEUE: GBusNameOwnerFlags get() = 4u

typealias GBusNameOwnerFlagsVar = UIntVarOf<GBusNameOwnerFlags>

typealias GBusNameOwnerFlags = UInt


val G_BUS_NAME_WATCHER_FLAGS_NONE: GBusNameWatcherFlags get() = 0u

val G_BUS_NAME_WATCHER_FLAGS_AUTO_START: GBusNameWatcherFlags get() = 1u

typealias GBusNameWatcherFlagsVar = UIntVarOf<GBusNameWatcherFlags>

typealias GBusNameWatcherFlags = UInt


val G_DBUS_PROXY_FLAGS_NONE: GDBusProxyFlags get() = 0u

val G_DBUS_PROXY_FLAGS_DO_NOT_LOAD_PROPERTIES: GDBusProxyFlags get() = 1u

val G_DBUS_PROXY_FLAGS_DO_NOT_CONNECT_SIGNALS: GDBusProxyFlags get() = 2u

val G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START: GDBusProxyFlags get() = 4u

val G_DBUS_PROXY_FLAGS_GET_INVALIDATED_PROPERTIES: GDBusProxyFlags get() = 8u

val G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START_AT_CONSTRUCTION: GDBusProxyFlags get() = 16u

typealias GDBusProxyFlagsVar = UIntVarOf<GDBusProxyFlags>

typealias GDBusProxyFlags = UInt


val G_DBUS_CONNECTION_FLAGS_NONE: GDBusConnectionFlags get() = 0u

val G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_CLIENT: GDBusConnectionFlags get() = 1u

val G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_SERVER: GDBusConnectionFlags get() = 2u

val G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS: GDBusConnectionFlags get() = 4u

val G_DBUS_CONNECTION_FLAGS_MESSAGE_BUS_CONNECTION: GDBusConnectionFlags get() = 8u

val G_DBUS_CONNECTION_FLAGS_DELAY_MESSAGE_PROCESSING: GDBusConnectionFlags get() = 16u

typealias GDBusConnectionFlagsVar = UIntVarOf<GDBusConnectionFlags>

typealias GDBusConnectionFlags = UInt


val G_DBUS_CAPABILITY_FLAGS_NONE: GDBusCapabilityFlags get() = 0u

val G_DBUS_CAPABILITY_FLAGS_UNIX_FD_PASSING: GDBusCapabilityFlags get() = 1u

typealias GDBusCapabilityFlagsVar = UIntVarOf<GDBusCapabilityFlags>

typealias GDBusCapabilityFlags = UInt


val G_DBUS_CALL_FLAGS_NONE: GDBusCallFlags get() = 0u

val G_DBUS_CALL_FLAGS_NO_AUTO_START: GDBusCallFlags get() = 1u

val G_DBUS_CALL_FLAGS_ALLOW_INTERACTIVE_AUTHORIZATION: GDBusCallFlags get() = 2u

typealias GDBusCallFlagsVar = UIntVarOf<GDBusCallFlags>

typealias GDBusCallFlags = UInt


val G_DBUS_MESSAGE_FLAGS_NONE: GDBusMessageFlags get() = 0u

val G_DBUS_MESSAGE_FLAGS_NO_REPLY_EXPECTED: GDBusMessageFlags get() = 1u

val G_DBUS_MESSAGE_FLAGS_NO_AUTO_START: GDBusMessageFlags get() = 2u

val G_DBUS_MESSAGE_FLAGS_ALLOW_INTERACTIVE_AUTHORIZATION: GDBusMessageFlags get() = 4u

typealias GDBusMessageFlagsVar = UIntVarOf<GDBusMessageFlags>

typealias GDBusMessageFlags = UInt


val G_DBUS_PROPERTY_INFO_FLAGS_NONE: GDBusPropertyInfoFlags get() = 0u

val G_DBUS_PROPERTY_INFO_FLAGS_READABLE: GDBusPropertyInfoFlags get() = 1u

val G_DBUS_PROPERTY_INFO_FLAGS_WRITABLE: GDBusPropertyInfoFlags get() = 2u

typealias GDBusPropertyInfoFlagsVar = UIntVarOf<GDBusPropertyInfoFlags>

typealias GDBusPropertyInfoFlags = UInt


val G_DBUS_SUBTREE_FLAGS_NONE: GDBusSubtreeFlags get() = 0u

val G_DBUS_SUBTREE_FLAGS_DISPATCH_TO_UNENUMERATED_NODES: GDBusSubtreeFlags get() = 1u

typealias GDBusSubtreeFlagsVar = UIntVarOf<GDBusSubtreeFlags>

typealias GDBusSubtreeFlags = UInt


val G_DBUS_SERVER_FLAGS_NONE: GDBusServerFlags get() = 0u

val G_DBUS_SERVER_FLAGS_RUN_IN_THREAD: GDBusServerFlags get() = 1u

val G_DBUS_SERVER_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS: GDBusServerFlags get() = 2u

typealias GDBusServerFlagsVar = UIntVarOf<GDBusServerFlags>

typealias GDBusServerFlags = UInt


val G_DBUS_SIGNAL_FLAGS_NONE: GDBusSignalFlags get() = 0u

val G_DBUS_SIGNAL_FLAGS_NO_MATCH_RULE: GDBusSignalFlags get() = 1u

val G_DBUS_SIGNAL_FLAGS_MATCH_ARG0_NAMESPACE: GDBusSignalFlags get() = 2u

val G_DBUS_SIGNAL_FLAGS_MATCH_ARG0_PATH: GDBusSignalFlags get() = 4u

typealias GDBusSignalFlagsVar = UIntVarOf<GDBusSignalFlags>

typealias GDBusSignalFlags = UInt


val G_DBUS_SEND_MESSAGE_FLAGS_NONE: GDBusSendMessageFlags get() = 0u

val G_DBUS_SEND_MESSAGE_FLAGS_PRESERVE_SERIAL: GDBusSendMessageFlags get() = 1u

typealias GDBusSendMessageFlagsVar = UIntVarOf<GDBusSendMessageFlags>

typealias GDBusSendMessageFlags = UInt


val G_DBUS_MESSAGE_BYTE_ORDER_BIG_ENDIAN: GDBusMessageByteOrder get() = 66u

val G_DBUS_MESSAGE_BYTE_ORDER_LITTLE_ENDIAN: GDBusMessageByteOrder get() = 108u

typealias GDBusMessageByteOrderVar = UIntVarOf<GDBusMessageByteOrder>

typealias GDBusMessageByteOrder = UInt


val G_APPLICATION_FLAGS_NONE: GApplicationFlags get() = 0u

val G_APPLICATION_IS_SERVICE: GApplicationFlags get() = 1u

val G_APPLICATION_IS_LAUNCHER: GApplicationFlags get() = 2u

val G_APPLICATION_HANDLES_OPEN: GApplicationFlags get() = 4u

val G_APPLICATION_HANDLES_COMMAND_LINE: GApplicationFlags get() = 8u

val G_APPLICATION_SEND_ENVIRONMENT: GApplicationFlags get() = 16u

val G_APPLICATION_NON_UNIQUE: GApplicationFlags get() = 32u

val G_APPLICATION_CAN_OVERRIDE_APP_ID: GApplicationFlags get() = 64u

typealias GApplicationFlagsVar = UIntVarOf<GApplicationFlags>

typealias GApplicationFlags = UInt


val G_TLS_CERTIFICATE_UNKNOWN_CA: GTlsCertificateFlags get() = 1u

val G_TLS_CERTIFICATE_BAD_IDENTITY: GTlsCertificateFlags get() = 2u

val G_TLS_CERTIFICATE_NOT_ACTIVATED: GTlsCertificateFlags get() = 4u

val G_TLS_CERTIFICATE_EXPIRED: GTlsCertificateFlags get() = 8u

val G_TLS_CERTIFICATE_REVOKED: GTlsCertificateFlags get() = 16u

val G_TLS_CERTIFICATE_INSECURE: GTlsCertificateFlags get() = 32u

val G_TLS_CERTIFICATE_GENERIC_ERROR: GTlsCertificateFlags get() = 64u

val G_TLS_CERTIFICATE_VALIDATE_ALL: GTlsCertificateFlags get() = 127u

typealias GTlsCertificateFlagsVar = UIntVarOf<GTlsCertificateFlags>

typealias GTlsCertificateFlags = UInt


val G_TLS_PASSWORD_NONE: _GTlsPasswordFlags get() = 0u

val G_TLS_PASSWORD_RETRY: _GTlsPasswordFlags get() = 2u

val G_TLS_PASSWORD_MANY_TRIES: _GTlsPasswordFlags get() = 4u

val G_TLS_PASSWORD_FINAL_TRY: _GTlsPasswordFlags get() = 8u

typealias _GTlsPasswordFlagsVar = UIntVarOf<_GTlsPasswordFlags>

typealias _GTlsPasswordFlags = UInt


val G_DBUS_INTERFACE_SKELETON_FLAGS_NONE: GDBusInterfaceSkeletonFlags get() = 0u

val G_DBUS_INTERFACE_SKELETON_FLAGS_HANDLE_METHOD_INVOCATIONS_IN_THREAD: GDBusInterfaceSkeletonFlags get() = 1u

typealias GDBusInterfaceSkeletonFlagsVar = UIntVarOf<GDBusInterfaceSkeletonFlags>

typealias GDBusInterfaceSkeletonFlags = UInt


val G_DBUS_OBJECT_MANAGER_CLIENT_FLAGS_NONE: GDBusObjectManagerClientFlags get() = 0u

val G_DBUS_OBJECT_MANAGER_CLIENT_FLAGS_DO_NOT_AUTO_START: GDBusObjectManagerClientFlags get() = 1u

typealias GDBusObjectManagerClientFlagsVar = UIntVarOf<GDBusObjectManagerClientFlags>

typealias GDBusObjectManagerClientFlags = UInt


val G_TLS_DATABASE_VERIFY_NONE: GTlsDatabaseVerifyFlags get() = 0u

typealias GTlsDatabaseVerifyFlagsVar = UIntVarOf<GTlsDatabaseVerifyFlags>

typealias GTlsDatabaseVerifyFlags = UInt


val G_TLS_DATABASE_LOOKUP_NONE: GTlsDatabaseLookupFlags get() = 0u

val G_TLS_DATABASE_LOOKUP_KEYPAIR: GTlsDatabaseLookupFlags get() = 1u

typealias GTlsDatabaseLookupFlagsVar = UIntVarOf<GTlsDatabaseLookupFlags>

typealias GTlsDatabaseLookupFlags = UInt


val G_TLS_CERTIFICATE_REQUEST_NONE: GTlsCertificateRequestFlags get() = 0u

typealias GTlsCertificateRequestFlagsVar = UIntVarOf<GTlsCertificateRequestFlags>

typealias GTlsCertificateRequestFlags = UInt


val G_TEST_DBUS_NONE: GTestDBusFlags get() = 0u

typealias GTestDBusFlagsVar = UIntVarOf<GTestDBusFlags>

typealias GTestDBusFlags = UInt


val G_SUBPROCESS_FLAGS_NONE: GSubprocessFlags get() = 0u

val G_SUBPROCESS_FLAGS_STDIN_PIPE: GSubprocessFlags get() = 1u

val G_SUBPROCESS_FLAGS_STDIN_INHERIT: GSubprocessFlags get() = 2u

val G_SUBPROCESS_FLAGS_STDOUT_PIPE: GSubprocessFlags get() = 4u

val G_SUBPROCESS_FLAGS_STDOUT_SILENCE: GSubprocessFlags get() = 8u

val G_SUBPROCESS_FLAGS_STDERR_PIPE: GSubprocessFlags get() = 16u

val G_SUBPROCESS_FLAGS_STDERR_SILENCE: GSubprocessFlags get() = 32u

val G_SUBPROCESS_FLAGS_STDERR_MERGE: GSubprocessFlags get() = 64u

val G_SUBPROCESS_FLAGS_INHERIT_FDS: GSubprocessFlags get() = 128u

typealias GSubprocessFlagsVar = UIntVarOf<GSubprocessFlags>

typealias GSubprocessFlags = UInt


val G_NETWORK_CONNECTIVITY_LOCAL: GNetworkConnectivity get() = 1u

val G_NETWORK_CONNECTIVITY_LIMITED: GNetworkConnectivity get() = 2u

val G_NETWORK_CONNECTIVITY_PORTAL: GNetworkConnectivity get() = 3u

val G_NETWORK_CONNECTIVITY_FULL: GNetworkConnectivity get() = 4u

typealias GNetworkConnectivityVar = UIntVarOf<GNetworkConnectivity>

typealias GNetworkConnectivity = UInt


val G_IO_IN: GIOCondition get() = 1u

val G_IO_OUT: GIOCondition get() = 4u

val G_IO_PRI: GIOCondition get() = 2u

val G_IO_ERR: GIOCondition get() = 8u

val G_IO_HUP: GIOCondition get() = 16u

val G_IO_NVAL: GIOCondition get() = 32u

typealias GIOConditionVar = UIntVarOf<GIOCondition>

typealias GIOCondition = UInt


val G_OPTION_FLAG_NONE: GOptionFlags get() = 0u

val G_OPTION_FLAG_HIDDEN: GOptionFlags get() = 1u

val G_OPTION_FLAG_IN_MAIN: GOptionFlags get() = 2u

val G_OPTION_FLAG_REVERSE: GOptionFlags get() = 4u

val G_OPTION_FLAG_NO_ARG: GOptionFlags get() = 8u

val G_OPTION_FLAG_FILENAME: GOptionFlags get() = 16u

val G_OPTION_FLAG_OPTIONAL_ARG: GOptionFlags get() = 32u

val G_OPTION_FLAG_NOALIAS: GOptionFlags get() = 64u

typealias GOptionFlagsVar = UIntVarOf<GOptionFlags>

typealias GOptionFlags = UInt


val G_SETTINGS_BIND_DEFAULT: GSettingsBindFlags get() = 0u

val G_SETTINGS_BIND_GET: GSettingsBindFlags get() = 1u

val G_SETTINGS_BIND_SET: GSettingsBindFlags get() = 2u

val G_SETTINGS_BIND_NO_SENSITIVITY: GSettingsBindFlags get() = 4u

val G_SETTINGS_BIND_GET_NO_CHANGES: GSettingsBindFlags get() = 8u

val G_SETTINGS_BIND_INVERT_BOOLEAN: GSettingsBindFlags get() = 16u

typealias GSettingsBindFlagsVar = UIntVarOf<GSettingsBindFlags>

typealias GSettingsBindFlags = UInt


val GTK_SIZE_REQUEST_HEIGHT_FOR_WIDTH: GtkSizeRequestMode get() = 0u

val GTK_SIZE_REQUEST_WIDTH_FOR_HEIGHT: GtkSizeRequestMode get() = 1u

val GTK_SIZE_REQUEST_CONSTANT_SIZE: GtkSizeRequestMode get() = 2u

typealias GtkSizeRequestModeVar = UIntVarOf<GtkSizeRequestMode>

typealias GtkSizeRequestMode = UInt


val GTK_SCROLL_MINIMUM: GtkScrollablePolicy get() = 0u

val GTK_SCROLL_NATURAL: GtkScrollablePolicy get() = 1u

typealias GtkScrollablePolicyVar = UIntVarOf<GtkScrollablePolicy>

typealias GtkScrollablePolicy = UInt


val GTK_STATE_FLAG_NORMAL: GtkStateFlags get() = 0u

val GTK_STATE_FLAG_ACTIVE: GtkStateFlags get() = 1u

val GTK_STATE_FLAG_PRELIGHT: GtkStateFlags get() = 2u

val GTK_STATE_FLAG_SELECTED: GtkStateFlags get() = 4u

val GTK_STATE_FLAG_INSENSITIVE: GtkStateFlags get() = 8u

val GTK_STATE_FLAG_INCONSISTENT: GtkStateFlags get() = 16u

val GTK_STATE_FLAG_FOCUSED: GtkStateFlags get() = 32u

val GTK_STATE_FLAG_BACKDROP: GtkStateFlags get() = 64u

val GTK_STATE_FLAG_DIR_LTR: GtkStateFlags get() = 128u

val GTK_STATE_FLAG_DIR_RTL: GtkStateFlags get() = 256u

val GTK_STATE_FLAG_LINK: GtkStateFlags get() = 512u

val GTK_STATE_FLAG_VISITED: GtkStateFlags get() = 1024u

val GTK_STATE_FLAG_CHECKED: GtkStateFlags get() = 2048u

val GTK_STATE_FLAG_DROP_ACTIVE: GtkStateFlags get() = 4096u

typealias GtkStateFlagsVar = UIntVarOf<GtkStateFlags>

typealias GtkStateFlags = UInt


val GTK_REGION_EVEN: GtkRegionFlags get() = 1u

val GTK_REGION_ODD: GtkRegionFlags get() = 2u

val GTK_REGION_FIRST: GtkRegionFlags get() = 4u

val GTK_REGION_LAST: GtkRegionFlags get() = 8u

val GTK_REGION_ONLY: GtkRegionFlags get() = 16u

val GTK_REGION_SORTED: GtkRegionFlags get() = 32u

typealias GtkRegionFlagsVar = UIntVarOf<GtkRegionFlags>

typealias GtkRegionFlags = UInt


val GTK_JUNCTION_NONE: GtkJunctionSides get() = 0u

val GTK_JUNCTION_CORNER_TOPLEFT: GtkJunctionSides get() = 1u

val GTK_JUNCTION_CORNER_TOPRIGHT: GtkJunctionSides get() = 2u

val GTK_JUNCTION_CORNER_BOTTOMLEFT: GtkJunctionSides get() = 4u

val GTK_JUNCTION_CORNER_BOTTOMRIGHT: GtkJunctionSides get() = 8u

val GTK_JUNCTION_TOP: GtkJunctionSides get() = 3u

val GTK_JUNCTION_BOTTOM: GtkJunctionSides get() = 12u

val GTK_JUNCTION_LEFT: GtkJunctionSides get() = 5u

val GTK_JUNCTION_RIGHT: GtkJunctionSides get() = 10u

typealias GtkJunctionSidesVar = UIntVarOf<GtkJunctionSides>

typealias GtkJunctionSides = UInt


val GTK_INPUT_HINT_NONE: GtkInputHints get() = 0u

val GTK_INPUT_HINT_SPELLCHECK: GtkInputHints get() = 1u

val GTK_INPUT_HINT_NO_SPELLCHECK: GtkInputHints get() = 2u

val GTK_INPUT_HINT_WORD_COMPLETION: GtkInputHints get() = 4u

val GTK_INPUT_HINT_LOWERCASE: GtkInputHints get() = 8u

val GTK_INPUT_HINT_UPPERCASE_CHARS: GtkInputHints get() = 16u

val GTK_INPUT_HINT_UPPERCASE_WORDS: GtkInputHints get() = 32u

val GTK_INPUT_HINT_UPPERCASE_SENTENCES: GtkInputHints get() = 64u

val GTK_INPUT_HINT_INHIBIT_OSK: GtkInputHints get() = 128u

val GTK_INPUT_HINT_VERTICAL_WRITING: GtkInputHints get() = 256u

val GTK_INPUT_HINT_EMOJI: GtkInputHints get() = 512u

val GTK_INPUT_HINT_NO_EMOJI: GtkInputHints get() = 1024u

typealias GtkInputHintsVar = UIntVarOf<GtkInputHints>

typealias GtkInputHints = UInt


val GTK_ACCEL_VISIBLE: GtkAccelFlags get() = 1u

val GTK_ACCEL_LOCKED: GtkAccelFlags get() = 2u

val GTK_ACCEL_MASK: GtkAccelFlags get() = 7u

typealias GtkAccelFlagsVar = UIntVarOf<GtkAccelFlags>

typealias GtkAccelFlags = UInt


val GDK_SHIFT_MASK: GdkModifierType get() = 1u

val GDK_LOCK_MASK: GdkModifierType get() = 2u

val GDK_CONTROL_MASK: GdkModifierType get() = 4u

val GDK_MOD1_MASK: GdkModifierType get() = 8u

val GDK_MOD2_MASK: GdkModifierType get() = 16u

val GDK_MOD3_MASK: GdkModifierType get() = 32u

val GDK_MOD4_MASK: GdkModifierType get() = 64u

val GDK_MOD5_MASK: GdkModifierType get() = 128u

val GDK_BUTTON1_MASK: GdkModifierType get() = 256u

val GDK_BUTTON2_MASK: GdkModifierType get() = 512u

val GDK_BUTTON3_MASK: GdkModifierType get() = 1024u

val GDK_BUTTON4_MASK: GdkModifierType get() = 2048u

val GDK_BUTTON5_MASK: GdkModifierType get() = 4096u

val GDK_MODIFIER_RESERVED_13_MASK: GdkModifierType get() = 8192u

val GDK_MODIFIER_RESERVED_14_MASK: GdkModifierType get() = 16384u

val GDK_MODIFIER_RESERVED_15_MASK: GdkModifierType get() = 32768u

val GDK_MODIFIER_RESERVED_16_MASK: GdkModifierType get() = 65536u

val GDK_MODIFIER_RESERVED_17_MASK: GdkModifierType get() = 131072u

val GDK_MODIFIER_RESERVED_18_MASK: GdkModifierType get() = 262144u

val GDK_MODIFIER_RESERVED_19_MASK: GdkModifierType get() = 524288u

val GDK_MODIFIER_RESERVED_20_MASK: GdkModifierType get() = 1048576u

val GDK_MODIFIER_RESERVED_21_MASK: GdkModifierType get() = 2097152u

val GDK_MODIFIER_RESERVED_22_MASK: GdkModifierType get() = 4194304u

val GDK_MODIFIER_RESERVED_23_MASK: GdkModifierType get() = 8388608u

val GDK_MODIFIER_RESERVED_24_MASK: GdkModifierType get() = 16777216u

val GDK_MODIFIER_RESERVED_25_MASK: GdkModifierType get() = 33554432u

val GDK_SUPER_MASK: GdkModifierType get() = 67108864u

val GDK_HYPER_MASK: GdkModifierType get() = 134217728u

val GDK_META_MASK: GdkModifierType get() = 268435456u

val GDK_MODIFIER_RESERVED_29_MASK: GdkModifierType get() = 536870912u

val GDK_RELEASE_MASK: GdkModifierType get() = 1073741824u

val GDK_MODIFIER_MASK: GdkModifierType get() = 1543512063u

typealias GdkModifierTypeVar = UIntVarOf<GdkModifierType>

typealias GdkModifierType = UInt


val GTK_RC_FG: GtkRcFlags get() = 1u

val GTK_RC_BG: GtkRcFlags get() = 2u

val GTK_RC_TEXT: GtkRcFlags get() = 4u

val GTK_RC_BASE: GtkRcFlags get() = 8u

typealias GtkRcFlagsVar = UIntVarOf<GtkRcFlags>

typealias GtkRcFlags = UInt


val GDK_NOTHING: GdkEventType get() = -1

val GDK_DELETE: GdkEventType get() = 0

val GDK_DESTROY: GdkEventType get() = 1

val GDK_EXPOSE: GdkEventType get() = 2

val GDK_MOTION_NOTIFY: GdkEventType get() = 3

val GDK_BUTTON_PRESS: GdkEventType get() = 4

val GDK_2BUTTON_PRESS: GdkEventType get() = 5

val GDK_DOUBLE_BUTTON_PRESS: GdkEventType get() = 5

val GDK_3BUTTON_PRESS: GdkEventType get() = 6

val GDK_TRIPLE_BUTTON_PRESS: GdkEventType get() = 6

val GDK_BUTTON_RELEASE: GdkEventType get() = 7

val GDK_KEY_PRESS: GdkEventType get() = 8

val GDK_KEY_RELEASE: GdkEventType get() = 9

val GDK_ENTER_NOTIFY: GdkEventType get() = 10

val GDK_LEAVE_NOTIFY: GdkEventType get() = 11

val GDK_FOCUS_CHANGE: GdkEventType get() = 12

val GDK_CONFIGURE: GdkEventType get() = 13

val GDK_MAP: GdkEventType get() = 14

val GDK_UNMAP: GdkEventType get() = 15

val GDK_PROPERTY_NOTIFY: GdkEventType get() = 16

val GDK_SELECTION_CLEAR: GdkEventType get() = 17

val GDK_SELECTION_REQUEST: GdkEventType get() = 18

val GDK_SELECTION_NOTIFY: GdkEventType get() = 19

val GDK_PROXIMITY_IN: GdkEventType get() = 20

val GDK_PROXIMITY_OUT: GdkEventType get() = 21

val GDK_DRAG_ENTER: GdkEventType get() = 22

val GDK_DRAG_LEAVE: GdkEventType get() = 23

val GDK_DRAG_MOTION: GdkEventType get() = 24

val GDK_DRAG_STATUS: GdkEventType get() = 25

val GDK_DROP_START: GdkEventType get() = 26

val GDK_DROP_FINISHED: GdkEventType get() = 27

val GDK_CLIENT_EVENT: GdkEventType get() = 28

val GDK_VISIBILITY_NOTIFY: GdkEventType get() = 29

val GDK_SCROLL: GdkEventType get() = 31

val GDK_WINDOW_STATE: GdkEventType get() = 32

val GDK_SETTING: GdkEventType get() = 33

val GDK_OWNER_CHANGE: GdkEventType get() = 34

val GDK_GRAB_BROKEN: GdkEventType get() = 35

val GDK_DAMAGE: GdkEventType get() = 36

val GDK_TOUCH_BEGIN: GdkEventType get() = 37

val GDK_TOUCH_UPDATE: GdkEventType get() = 38

val GDK_TOUCH_END: GdkEventType get() = 39

val GDK_TOUCH_CANCEL: GdkEventType get() = 40

val GDK_TOUCHPAD_SWIPE: GdkEventType get() = 41

val GDK_TOUCHPAD_PINCH: GdkEventType get() = 42

val GDK_PAD_BUTTON_PRESS: GdkEventType get() = 43

val GDK_PAD_BUTTON_RELEASE: GdkEventType get() = 44

val GDK_PAD_RING: GdkEventType get() = 45

val GDK_PAD_STRIP: GdkEventType get() = 46

val GDK_PAD_GROUP_MODE: GdkEventType get() = 47

val GDK_EVENT_LAST: GdkEventType get() = 48

typealias GdkEventTypeVar = IntVarOf<GdkEventType>

typealias GdkEventType = Int


val GDK_NOTIFY_ANCESTOR: GdkNotifyType get() = 0u

val GDK_NOTIFY_VIRTUAL: GdkNotifyType get() = 1u

val GDK_NOTIFY_INFERIOR: GdkNotifyType get() = 2u

val GDK_NOTIFY_NONLINEAR: GdkNotifyType get() = 3u

val GDK_NOTIFY_NONLINEAR_VIRTUAL: GdkNotifyType get() = 4u

val GDK_NOTIFY_UNKNOWN: GdkNotifyType get() = 5u

typealias GdkNotifyTypeVar = UIntVarOf<GdkNotifyType>

typealias GdkNotifyType = UInt


val GDK_WINDOW_STATE_WITHDRAWN: GdkWindowState get() = 1u

val GDK_WINDOW_STATE_ICONIFIED: GdkWindowState get() = 2u

val GDK_WINDOW_STATE_MAXIMIZED: GdkWindowState get() = 4u

val GDK_WINDOW_STATE_STICKY: GdkWindowState get() = 8u

val GDK_WINDOW_STATE_FULLSCREEN: GdkWindowState get() = 16u

val GDK_WINDOW_STATE_ABOVE: GdkWindowState get() = 32u

val GDK_WINDOW_STATE_BELOW: GdkWindowState get() = 64u

val GDK_WINDOW_STATE_FOCUSED: GdkWindowState get() = 128u

val GDK_WINDOW_STATE_TILED: GdkWindowState get() = 256u

val GDK_WINDOW_STATE_TOP_TILED: GdkWindowState get() = 512u

val GDK_WINDOW_STATE_TOP_RESIZABLE: GdkWindowState get() = 1024u

val GDK_WINDOW_STATE_RIGHT_TILED: GdkWindowState get() = 2048u

val GDK_WINDOW_STATE_RIGHT_RESIZABLE: GdkWindowState get() = 4096u

val GDK_WINDOW_STATE_BOTTOM_TILED: GdkWindowState get() = 8192u

val GDK_WINDOW_STATE_BOTTOM_RESIZABLE: GdkWindowState get() = 16384u

val GDK_WINDOW_STATE_LEFT_TILED: GdkWindowState get() = 32768u

val GDK_WINDOW_STATE_LEFT_RESIZABLE: GdkWindowState get() = 65536u

typealias GdkWindowStateVar = UIntVarOf<GdkWindowState>

typealias GdkWindowState = UInt


val ATK_ROLE_INVALID: AtkRole get() = 0u

val ATK_ROLE_ACCEL_LABEL: AtkRole get() = 1u

val ATK_ROLE_ALERT: AtkRole get() = 2u

val ATK_ROLE_ANIMATION: AtkRole get() = 3u

val ATK_ROLE_ARROW: AtkRole get() = 4u

val ATK_ROLE_CALENDAR: AtkRole get() = 5u

val ATK_ROLE_CANVAS: AtkRole get() = 6u

val ATK_ROLE_CHECK_BOX: AtkRole get() = 7u

val ATK_ROLE_CHECK_MENU_ITEM: AtkRole get() = 8u

val ATK_ROLE_COLOR_CHOOSER: AtkRole get() = 9u

val ATK_ROLE_COLUMN_HEADER: AtkRole get() = 10u

val ATK_ROLE_COMBO_BOX: AtkRole get() = 11u

val ATK_ROLE_DATE_EDITOR: AtkRole get() = 12u

val ATK_ROLE_DESKTOP_ICON: AtkRole get() = 13u

val ATK_ROLE_DESKTOP_FRAME: AtkRole get() = 14u

val ATK_ROLE_DIAL: AtkRole get() = 15u

val ATK_ROLE_DIALOG: AtkRole get() = 16u

val ATK_ROLE_DIRECTORY_PANE: AtkRole get() = 17u

val ATK_ROLE_DRAWING_AREA: AtkRole get() = 18u

val ATK_ROLE_FILE_CHOOSER: AtkRole get() = 19u

val ATK_ROLE_FILLER: AtkRole get() = 20u

val ATK_ROLE_FONT_CHOOSER: AtkRole get() = 21u

val ATK_ROLE_FRAME: AtkRole get() = 22u

val ATK_ROLE_GLASS_PANE: AtkRole get() = 23u

val ATK_ROLE_HTML_CONTAINER: AtkRole get() = 24u

val ATK_ROLE_ICON: AtkRole get() = 25u

val ATK_ROLE_IMAGE: AtkRole get() = 26u

val ATK_ROLE_INTERNAL_FRAME: AtkRole get() = 27u

val ATK_ROLE_LABEL: AtkRole get() = 28u

val ATK_ROLE_LAYERED_PANE: AtkRole get() = 29u

val ATK_ROLE_LIST: AtkRole get() = 30u

val ATK_ROLE_LIST_ITEM: AtkRole get() = 31u

val ATK_ROLE_MENU: AtkRole get() = 32u

val ATK_ROLE_MENU_BAR: AtkRole get() = 33u

val ATK_ROLE_MENU_ITEM: AtkRole get() = 34u

val ATK_ROLE_OPTION_PANE: AtkRole get() = 35u

val ATK_ROLE_PAGE_TAB: AtkRole get() = 36u

val ATK_ROLE_PAGE_TAB_LIST: AtkRole get() = 37u

val ATK_ROLE_PANEL: AtkRole get() = 38u

val ATK_ROLE_PASSWORD_TEXT: AtkRole get() = 39u

val ATK_ROLE_POPUP_MENU: AtkRole get() = 40u

val ATK_ROLE_PROGRESS_BAR: AtkRole get() = 41u

val ATK_ROLE_PUSH_BUTTON: AtkRole get() = 42u

val ATK_ROLE_RADIO_BUTTON: AtkRole get() = 43u

val ATK_ROLE_RADIO_MENU_ITEM: AtkRole get() = 44u

val ATK_ROLE_ROOT_PANE: AtkRole get() = 45u

val ATK_ROLE_ROW_HEADER: AtkRole get() = 46u

val ATK_ROLE_SCROLL_BAR: AtkRole get() = 47u

val ATK_ROLE_SCROLL_PANE: AtkRole get() = 48u

val ATK_ROLE_SEPARATOR: AtkRole get() = 49u

val ATK_ROLE_SLIDER: AtkRole get() = 50u

val ATK_ROLE_SPLIT_PANE: AtkRole get() = 51u

val ATK_ROLE_SPIN_BUTTON: AtkRole get() = 52u

val ATK_ROLE_STATUSBAR: AtkRole get() = 53u

val ATK_ROLE_TABLE: AtkRole get() = 54u

val ATK_ROLE_TABLE_CELL: AtkRole get() = 55u

val ATK_ROLE_TABLE_COLUMN_HEADER: AtkRole get() = 56u

val ATK_ROLE_TABLE_ROW_HEADER: AtkRole get() = 57u

val ATK_ROLE_TEAR_OFF_MENU_ITEM: AtkRole get() = 58u

val ATK_ROLE_TERMINAL: AtkRole get() = 59u

val ATK_ROLE_TEXT: AtkRole get() = 60u

val ATK_ROLE_TOGGLE_BUTTON: AtkRole get() = 61u

val ATK_ROLE_TOOL_BAR: AtkRole get() = 62u

val ATK_ROLE_TOOL_TIP: AtkRole get() = 63u

val ATK_ROLE_TREE: AtkRole get() = 64u

val ATK_ROLE_TREE_TABLE: AtkRole get() = 65u

val ATK_ROLE_UNKNOWN: AtkRole get() = 66u

val ATK_ROLE_VIEWPORT: AtkRole get() = 67u

val ATK_ROLE_WINDOW: AtkRole get() = 68u

val ATK_ROLE_HEADER: AtkRole get() = 69u

val ATK_ROLE_FOOTER: AtkRole get() = 70u

val ATK_ROLE_PARAGRAPH: AtkRole get() = 71u

val ATK_ROLE_RULER: AtkRole get() = 72u

val ATK_ROLE_APPLICATION: AtkRole get() = 73u

val ATK_ROLE_AUTOCOMPLETE: AtkRole get() = 74u

val ATK_ROLE_EDITBAR: AtkRole get() = 75u

val ATK_ROLE_EMBEDDED: AtkRole get() = 76u

val ATK_ROLE_ENTRY: AtkRole get() = 77u

val ATK_ROLE_CHART: AtkRole get() = 78u

val ATK_ROLE_CAPTION: AtkRole get() = 79u

val ATK_ROLE_DOCUMENT_FRAME: AtkRole get() = 80u

val ATK_ROLE_HEADING: AtkRole get() = 81u

val ATK_ROLE_PAGE: AtkRole get() = 82u

val ATK_ROLE_SECTION: AtkRole get() = 83u

val ATK_ROLE_REDUNDANT_OBJECT: AtkRole get() = 84u

val ATK_ROLE_FORM: AtkRole get() = 85u

val ATK_ROLE_LINK: AtkRole get() = 86u

val ATK_ROLE_INPUT_METHOD_WINDOW: AtkRole get() = 87u

val ATK_ROLE_TABLE_ROW: AtkRole get() = 88u

val ATK_ROLE_TREE_ITEM: AtkRole get() = 89u

val ATK_ROLE_DOCUMENT_SPREADSHEET: AtkRole get() = 90u

val ATK_ROLE_DOCUMENT_PRESENTATION: AtkRole get() = 91u

val ATK_ROLE_DOCUMENT_TEXT: AtkRole get() = 92u

val ATK_ROLE_DOCUMENT_WEB: AtkRole get() = 93u

val ATK_ROLE_DOCUMENT_EMAIL: AtkRole get() = 94u

val ATK_ROLE_COMMENT: AtkRole get() = 95u

val ATK_ROLE_LIST_BOX: AtkRole get() = 96u

val ATK_ROLE_GROUPING: AtkRole get() = 97u

val ATK_ROLE_IMAGE_MAP: AtkRole get() = 98u

val ATK_ROLE_NOTIFICATION: AtkRole get() = 99u

val ATK_ROLE_INFO_BAR: AtkRole get() = 100u

val ATK_ROLE_LEVEL_BAR: AtkRole get() = 101u

val ATK_ROLE_TITLE_BAR: AtkRole get() = 102u

val ATK_ROLE_BLOCK_QUOTE: AtkRole get() = 103u

val ATK_ROLE_AUDIO: AtkRole get() = 104u

val ATK_ROLE_VIDEO: AtkRole get() = 105u

val ATK_ROLE_DEFINITION: AtkRole get() = 106u

val ATK_ROLE_ARTICLE: AtkRole get() = 107u

val ATK_ROLE_LANDMARK: AtkRole get() = 108u

val ATK_ROLE_LOG: AtkRole get() = 109u

val ATK_ROLE_MARQUEE: AtkRole get() = 110u

val ATK_ROLE_MATH: AtkRole get() = 111u

val ATK_ROLE_RATING: AtkRole get() = 112u

val ATK_ROLE_TIMER: AtkRole get() = 113u

val ATK_ROLE_DESCRIPTION_LIST: AtkRole get() = 114u

val ATK_ROLE_DESCRIPTION_TERM: AtkRole get() = 115u

val ATK_ROLE_DESCRIPTION_VALUE: AtkRole get() = 116u

val ATK_ROLE_STATIC: AtkRole get() = 117u

val ATK_ROLE_MATH_FRACTION: AtkRole get() = 118u

val ATK_ROLE_MATH_ROOT: AtkRole get() = 119u

val ATK_ROLE_SUBSCRIPT: AtkRole get() = 120u

val ATK_ROLE_SUPERSCRIPT: AtkRole get() = 121u

val ATK_ROLE_FOOTNOTE: AtkRole get() = 122u

val ATK_ROLE_LAST_DEFINED: AtkRole get() = 123u

typealias AtkRoleVar = UIntVarOf<AtkRole>

typealias AtkRole = UInt


val GDK_EXPOSURE_MASK: GdkEventMask get() = 2u

val GDK_POINTER_MOTION_MASK: GdkEventMask get() = 4u

val GDK_POINTER_MOTION_HINT_MASK: GdkEventMask get() = 8u

val GDK_BUTTON_MOTION_MASK: GdkEventMask get() = 16u

val GDK_BUTTON1_MOTION_MASK: GdkEventMask get() = 32u

val GDK_BUTTON2_MOTION_MASK: GdkEventMask get() = 64u

val GDK_BUTTON3_MOTION_MASK: GdkEventMask get() = 128u

val GDK_BUTTON_PRESS_MASK: GdkEventMask get() = 256u

val GDK_BUTTON_RELEASE_MASK: GdkEventMask get() = 512u

val GDK_KEY_PRESS_MASK: GdkEventMask get() = 1024u

val GDK_KEY_RELEASE_MASK: GdkEventMask get() = 2048u

val GDK_ENTER_NOTIFY_MASK: GdkEventMask get() = 4096u

val GDK_LEAVE_NOTIFY_MASK: GdkEventMask get() = 8192u

val GDK_FOCUS_CHANGE_MASK: GdkEventMask get() = 16384u

val GDK_STRUCTURE_MASK: GdkEventMask get() = 32768u

val GDK_PROPERTY_CHANGE_MASK: GdkEventMask get() = 65536u

val GDK_VISIBILITY_NOTIFY_MASK: GdkEventMask get() = 131072u

val GDK_PROXIMITY_IN_MASK: GdkEventMask get() = 262144u

val GDK_PROXIMITY_OUT_MASK: GdkEventMask get() = 524288u

val GDK_SUBSTRUCTURE_MASK: GdkEventMask get() = 1048576u

val GDK_SCROLL_MASK: GdkEventMask get() = 2097152u

val GDK_TOUCH_MASK: GdkEventMask get() = 4194304u

val GDK_SMOOTH_SCROLL_MASK: GdkEventMask get() = 8388608u

val GDK_TOUCHPAD_GESTURE_MASK: GdkEventMask get() = 16777216u

val GDK_TABLET_PAD_MASK: GdkEventMask get() = 33554432u

val GDK_ALL_EVENTS_MASK: GdkEventMask get() = 67108862u

typealias GdkEventMaskVar = UIntVarOf<GdkEventMask>

typealias GdkEventMask = UInt


val GTK_APPLICATION_INHIBIT_LOGOUT: GtkApplicationInhibitFlags get() = 1u

val GTK_APPLICATION_INHIBIT_SWITCH: GtkApplicationInhibitFlags get() = 2u

val GTK_APPLICATION_INHIBIT_SUSPEND: GtkApplicationInhibitFlags get() = 4u

val GTK_APPLICATION_INHIBIT_IDLE: GtkApplicationInhibitFlags get() = 8u

typealias GtkApplicationInhibitFlagsVar = UIntVarOf<GtkApplicationInhibitFlags>

typealias GtkApplicationInhibitFlags = UInt


val GDK_GRAVITY_NORTH_WEST: GdkGravity get() = 1u

val GDK_GRAVITY_NORTH: GdkGravity get() = 2u

val GDK_GRAVITY_NORTH_EAST: GdkGravity get() = 3u

val GDK_GRAVITY_WEST: GdkGravity get() = 4u

val GDK_GRAVITY_CENTER: GdkGravity get() = 5u

val GDK_GRAVITY_EAST: GdkGravity get() = 6u

val GDK_GRAVITY_SOUTH_WEST: GdkGravity get() = 7u

val GDK_GRAVITY_SOUTH: GdkGravity get() = 8u

val GDK_GRAVITY_SOUTH_EAST: GdkGravity get() = 9u

val GDK_GRAVITY_STATIC: GdkGravity get() = 10u

typealias GdkGravityVar = UIntVarOf<GdkGravity>

typealias GdkGravity = UInt


val GDK_HINT_POS: GdkWindowHints get() = 1u

val GDK_HINT_MIN_SIZE: GdkWindowHints get() = 2u

val GDK_HINT_MAX_SIZE: GdkWindowHints get() = 4u

val GDK_HINT_BASE_SIZE: GdkWindowHints get() = 8u

val GDK_HINT_ASPECT: GdkWindowHints get() = 16u

val GDK_HINT_RESIZE_INC: GdkWindowHints get() = 32u

val GDK_HINT_WIN_GRAVITY: GdkWindowHints get() = 64u

val GDK_HINT_USER_POS: GdkWindowHints get() = 128u

val GDK_HINT_USER_SIZE: GdkWindowHints get() = 256u

typealias GdkWindowHintsVar = UIntVarOf<GdkWindowHints>

typealias GdkWindowHints = UInt


val GTK_DIALOG_MODAL: GtkDialogFlags get() = 1u

val GTK_DIALOG_DESTROY_WITH_PARENT: GtkDialogFlags get() = 2u

val GTK_DIALOG_USE_HEADER_BAR: GtkDialogFlags get() = 4u

typealias GtkDialogFlagsVar = UIntVarOf<GtkDialogFlags>

typealias GtkDialogFlags = UInt


val GTK_RESPONSE_NONE: GtkResponseType get() = -1

val GTK_RESPONSE_REJECT: GtkResponseType get() = -2

val GTK_RESPONSE_ACCEPT: GtkResponseType get() = -3

val GTK_RESPONSE_DELETE_EVENT: GtkResponseType get() = -4

val GTK_RESPONSE_OK: GtkResponseType get() = -5

val GTK_RESPONSE_CANCEL: GtkResponseType get() = -6

val GTK_RESPONSE_CLOSE: GtkResponseType get() = -7

val GTK_RESPONSE_YES: GtkResponseType get() = -8

val GTK_RESPONSE_NO: GtkResponseType get() = -9

val GTK_RESPONSE_APPLY: GtkResponseType get() = -10

val GTK_RESPONSE_HELP: GtkResponseType get() = -11

typealias GtkResponseTypeVar = IntVarOf<GtkResponseType>

typealias GtkResponseType = Int


val G_TOKEN_EOF: GTokenType get() = 0u

val G_TOKEN_LEFT_PAREN: GTokenType get() = 40u

val G_TOKEN_RIGHT_PAREN: GTokenType get() = 41u

val G_TOKEN_LEFT_CURLY: GTokenType get() = 123u

val G_TOKEN_RIGHT_CURLY: GTokenType get() = 125u

val G_TOKEN_LEFT_BRACE: GTokenType get() = 91u

val G_TOKEN_RIGHT_BRACE: GTokenType get() = 93u

val G_TOKEN_EQUAL_SIGN: GTokenType get() = 61u

val G_TOKEN_COMMA: GTokenType get() = 44u

val G_TOKEN_NONE: GTokenType get() = 256u

val G_TOKEN_ERROR: GTokenType get() = 257u

val G_TOKEN_CHAR: GTokenType get() = 258u

val G_TOKEN_BINARY: GTokenType get() = 259u

val G_TOKEN_OCTAL: GTokenType get() = 260u

val G_TOKEN_INT: GTokenType get() = 261u

val G_TOKEN_HEX: GTokenType get() = 262u

val G_TOKEN_FLOAT: GTokenType get() = 263u

val G_TOKEN_STRING: GTokenType get() = 264u

val G_TOKEN_SYMBOL: GTokenType get() = 265u

val G_TOKEN_IDENTIFIER: GTokenType get() = 266u

val G_TOKEN_IDENTIFIER_NULL: GTokenType get() = 267u

val G_TOKEN_COMMENT_SINGLE: GTokenType get() = 268u

val G_TOKEN_COMMENT_MULTI: GTokenType get() = 269u

val G_TOKEN_LAST: GTokenType get() = 270u

typealias GTokenTypeVar = UIntVarOf<GTokenType>

typealias GTokenType = UInt


val GTK_TREE_MODEL_ITERS_PERSIST: GtkTreeModelFlags get() = 1u

val GTK_TREE_MODEL_LIST_ONLY: GtkTreeModelFlags get() = 2u

typealias GtkTreeModelFlagsVar = UIntVarOf<GtkTreeModelFlags>

typealias GtkTreeModelFlags = UInt


val GTK_CELL_RENDERER_SELECTED: GtkCellRendererState get() = 1u

val GTK_CELL_RENDERER_PRELIT: GtkCellRendererState get() = 2u

val GTK_CELL_RENDERER_INSENSITIVE: GtkCellRendererState get() = 4u

val GTK_CELL_RENDERER_SORTED: GtkCellRendererState get() = 8u

val GTK_CELL_RENDERER_FOCUSED: GtkCellRendererState get() = 16u

val GTK_CELL_RENDERER_EXPANDABLE: GtkCellRendererState get() = 32u

val GTK_CELL_RENDERER_EXPANDED: GtkCellRendererState get() = 64u

typealias GtkCellRendererStateVar = UIntVarOf<GtkCellRendererState>

typealias GtkCellRendererState = UInt


val GTK_TEXT_SEARCH_VISIBLE_ONLY: GtkTextSearchFlags get() = 1u

val GTK_TEXT_SEARCH_TEXT_ONLY: GtkTextSearchFlags get() = 2u

val GTK_TEXT_SEARCH_CASE_INSENSITIVE: GtkTextSearchFlags get() = 4u

typealias GtkTextSearchFlagsVar = UIntVarOf<GtkTextSearchFlags>

typealias GtkTextSearchFlags = UInt


val GTK_TARGET_SAME_APP: GtkTargetFlags get() = 1u

val GTK_TARGET_SAME_WIDGET: GtkTargetFlags get() = 2u

val GTK_TARGET_OTHER_APP: GtkTargetFlags get() = 4u

val GTK_TARGET_OTHER_WIDGET: GtkTargetFlags get() = 8u

typealias GtkTargetFlagsVar = UIntVarOf<GtkTargetFlags>

typealias GtkTargetFlags = UInt


val GDK_ACTION_DEFAULT: GdkDragAction get() = 1u

val GDK_ACTION_COPY: GdkDragAction get() = 2u

val GDK_ACTION_MOVE: GdkDragAction get() = 4u

val GDK_ACTION_LINK: GdkDragAction get() = 8u

val GDK_ACTION_PRIVATE: GdkDragAction get() = 16u

val GDK_ACTION_ASK: GdkDragAction get() = 32u

typealias GdkDragActionVar = UIntVarOf<GdkDragAction>

typealias GdkDragAction = UInt


val GTK_BUTTONBOX_SPREAD: GtkButtonBoxStyle get() = 1u

val GTK_BUTTONBOX_EDGE: GtkButtonBoxStyle get() = 2u

val GTK_BUTTONBOX_START: GtkButtonBoxStyle get() = 3u

val GTK_BUTTONBOX_END: GtkButtonBoxStyle get() = 4u

val GTK_BUTTONBOX_CENTER: GtkButtonBoxStyle get() = 5u

val GTK_BUTTONBOX_EXPAND: GtkButtonBoxStyle get() = 6u

typealias GtkButtonBoxStyleVar = UIntVarOf<GtkButtonBoxStyle>

typealias GtkButtonBoxStyle = UInt


val GTK_CALENDAR_SHOW_HEADING: GtkCalendarDisplayOptions get() = 1u

val GTK_CALENDAR_SHOW_DAY_NAMES: GtkCalendarDisplayOptions get() = 2u

val GTK_CALENDAR_NO_MONTH_CHANGE: GtkCalendarDisplayOptions get() = 4u

val GTK_CALENDAR_SHOW_WEEK_NUMBERS: GtkCalendarDisplayOptions get() = 8u

val GTK_CALENDAR_SHOW_DETAILS: GtkCalendarDisplayOptions get() = 32u

typealias GtkCalendarDisplayOptionsVar = UIntVarOf<GtkCalendarDisplayOptions>

typealias GtkCalendarDisplayOptions = UInt


val GTK_DEBUG_MISC: GtkDebugFlag get() = 1u

val GTK_DEBUG_PLUGSOCKET: GtkDebugFlag get() = 2u

val GTK_DEBUG_TEXT: GtkDebugFlag get() = 4u

val GTK_DEBUG_TREE: GtkDebugFlag get() = 8u

val GTK_DEBUG_UPDATES: GtkDebugFlag get() = 16u

val GTK_DEBUG_KEYBINDINGS: GtkDebugFlag get() = 32u

val GTK_DEBUG_MULTIHEAD: GtkDebugFlag get() = 64u

val GTK_DEBUG_MODULES: GtkDebugFlag get() = 128u

val GTK_DEBUG_GEOMETRY: GtkDebugFlag get() = 256u

val GTK_DEBUG_ICONTHEME: GtkDebugFlag get() = 512u

val GTK_DEBUG_PRINTING: GtkDebugFlag get() = 1024u

val GTK_DEBUG_BUILDER: GtkDebugFlag get() = 2048u

val GTK_DEBUG_SIZE_REQUEST: GtkDebugFlag get() = 4096u

val GTK_DEBUG_NO_CSS_CACHE: GtkDebugFlag get() = 8192u

val GTK_DEBUG_BASELINES: GtkDebugFlag get() = 16384u

val GTK_DEBUG_PIXEL_CACHE: GtkDebugFlag get() = 32768u

val GTK_DEBUG_NO_PIXEL_CACHE: GtkDebugFlag get() = 65536u

val GTK_DEBUG_INTERACTIVE: GtkDebugFlag get() = 131072u

val GTK_DEBUG_TOUCHSCREEN: GtkDebugFlag get() = 262144u

val GTK_DEBUG_ACTIONS: GtkDebugFlag get() = 524288u

val GTK_DEBUG_RESIZE: GtkDebugFlag get() = 1048576u

val GTK_DEBUG_LAYOUT: GtkDebugFlag get() = 2097152u

typealias GtkDebugFlagVar = UIntVarOf<GtkDebugFlag>

typealias GtkDebugFlag = UInt


val GTK_DEST_DEFAULT_MOTION: GtkDestDefaults get() = 1u

val GTK_DEST_DEFAULT_HIGHLIGHT: GtkDestDefaults get() = 2u

val GTK_DEST_DEFAULT_DROP: GtkDestDefaults get() = 4u

val GTK_DEST_DEFAULT_ALL: GtkDestDefaults get() = 7u

typealias GtkDestDefaultsVar = UIntVarOf<GtkDestDefaults>

typealias GtkDestDefaults = UInt


val GDK_DRAG_PROTO_NONE: GdkDragProtocol get() = 0u

val GDK_DRAG_PROTO_MOTIF: GdkDragProtocol get() = 1u

val GDK_DRAG_PROTO_XDND: GdkDragProtocol get() = 2u

val GDK_DRAG_PROTO_ROOTWIN: GdkDragProtocol get() = 3u

val GDK_DRAG_PROTO_WIN32_DROPFILES: GdkDragProtocol get() = 4u

val GDK_DRAG_PROTO_OLE2: GdkDragProtocol get() = 5u

val GDK_DRAG_PROTO_LOCAL: GdkDragProtocol get() = 6u

val GDK_DRAG_PROTO_WAYLAND: GdkDragProtocol get() = 7u

typealias GdkDragProtocolVar = UIntVarOf<GdkDragProtocol>

typealias GdkDragProtocol = UInt


val GTK_FILE_FILTER_FILENAME: GtkFileFilterFlags get() = 1u

val GTK_FILE_FILTER_URI: GtkFileFilterFlags get() = 2u

val GTK_FILE_FILTER_DISPLAY_NAME: GtkFileFilterFlags get() = 4u

val GTK_FILE_FILTER_MIME_TYPE: GtkFileFilterFlags get() = 8u

typealias GtkFileFilterFlagsVar = UIntVarOf<GtkFileFilterFlags>

typealias GtkFileFilterFlags = UInt


val GTK_STYLE_CONTEXT_PRINT_NONE: GtkStyleContextPrintFlags get() = 0u

val GTK_STYLE_CONTEXT_PRINT_RECURSE: GtkStyleContextPrintFlags get() = 1u

val GTK_STYLE_CONTEXT_PRINT_SHOW_STYLE: GtkStyleContextPrintFlags get() = 2u

typealias GtkStyleContextPrintFlagsVar = UIntVarOf<GtkStyleContextPrintFlags>

typealias GtkStyleContextPrintFlags = UInt


val GTK_ICON_LOOKUP_NO_SVG: GtkIconLookupFlags get() = 1u

val GTK_ICON_LOOKUP_FORCE_SVG: GtkIconLookupFlags get() = 2u

val GTK_ICON_LOOKUP_USE_BUILTIN: GtkIconLookupFlags get() = 4u

val GTK_ICON_LOOKUP_GENERIC_FALLBACK: GtkIconLookupFlags get() = 8u

val GTK_ICON_LOOKUP_FORCE_SIZE: GtkIconLookupFlags get() = 16u

val GTK_ICON_LOOKUP_FORCE_REGULAR: GtkIconLookupFlags get() = 32u

val GTK_ICON_LOOKUP_FORCE_SYMBOLIC: GtkIconLookupFlags get() = 64u

val GTK_ICON_LOOKUP_DIR_LTR: GtkIconLookupFlags get() = 128u

val GTK_ICON_LOOKUP_DIR_RTL: GtkIconLookupFlags get() = 256u

typealias GtkIconLookupFlagsVar = UIntVarOf<GtkIconLookupFlags>

typealias GtkIconLookupFlags = UInt


val GTK_PLACES_OPEN_NORMAL: GtkPlacesOpenFlags get() = 1u

val GTK_PLACES_OPEN_NEW_TAB: GtkPlacesOpenFlags get() = 2u

val GTK_PLACES_OPEN_NEW_WINDOW: GtkPlacesOpenFlags get() = 4u

typealias GtkPlacesOpenFlagsVar = UIntVarOf<GtkPlacesOpenFlags>

typealias GtkPlacesOpenFlags = UInt


val GTK_RECENT_FILTER_URI: GtkRecentFilterFlags get() = 1u

val GTK_RECENT_FILTER_DISPLAY_NAME: GtkRecentFilterFlags get() = 2u

val GTK_RECENT_FILTER_MIME_TYPE: GtkRecentFilterFlags get() = 4u

val GTK_RECENT_FILTER_APPLICATION: GtkRecentFilterFlags get() = 8u

val GTK_RECENT_FILTER_GROUP: GtkRecentFilterFlags get() = 16u

val GTK_RECENT_FILTER_AGE: GtkRecentFilterFlags get() = 32u

typealias GtkRecentFilterFlagsVar = UIntVarOf<GtkRecentFilterFlags>

typealias GtkRecentFilterFlags = UInt


val GTK_RECENT_SORT_NONE: GtkRecentSortType get() = 0u

val GTK_RECENT_SORT_MRU: GtkRecentSortType get() = 1u

val GTK_RECENT_SORT_LRU: GtkRecentSortType get() = 2u

val GTK_RECENT_SORT_CUSTOM: GtkRecentSortType get() = 3u

typealias GtkRecentSortTypeVar = UIntVarOf<GtkRecentSortType>

typealias GtkRecentSortType = UInt


val GTK_TEXT_BUFFER_TARGET_INFO_BUFFER_CONTENTS: GtkTextBufferTargetInfo get() = -1

val GTK_TEXT_BUFFER_TARGET_INFO_RICH_TEXT: GtkTextBufferTargetInfo get() = -2

val GTK_TEXT_BUFFER_TARGET_INFO_TEXT: GtkTextBufferTargetInfo get() = -3

typealias GtkTextBufferTargetInfoVar = IntVarOf<GtkTextBufferTargetInfo>

typealias GtkTextBufferTargetInfo = Int


val GTK_TOOL_PALETTE_DRAG_ITEMS: GtkToolPaletteDragTargets get() = 1u

val GTK_TOOL_PALETTE_DRAG_GROUPS: GtkToolPaletteDragTargets get() = 2u

typealias GtkToolPaletteDragTargetsVar = UIntVarOf<GtkToolPaletteDragTargets>

typealias GtkToolPaletteDragTargets = UInt
@SymbolName("libgtk3_kniBridge0")
private external fun kniBridge0(): NativePtr
@SymbolName("libgtk3_kniBridge1")
private external fun kniBridge1(p0: NativePtr): Unit
@SymbolName("libgtk3_kniBridge2")
private external fun kniBridge2(): NativePtr
@SymbolName("libgtk3_kniBridge3")
private external fun kniBridge3(): NativePtr
@SymbolName("libgtk3_kniBridge4")
private external fun kniBridge4(): ULong
@SymbolName("libgtk3_kniBridge5")
private external fun kniBridge5(): ULong
@SymbolName("libgtk3_kniBridge6")
private external fun kniBridge6(): ULong
@SymbolName("libgtk3_kniBridge7")
private external fun kniBridge7(): ULong
@SymbolName("libgtk3_kniBridge8")
private external fun kniBridge8(): ULong
@SymbolName("libgtk3_kniBridge9")
private external fun kniBridge9(): ULong
@SymbolName("libgtk3_kniBridge10")
private external fun kniBridge10(): ULong
@SymbolName("libgtk3_kniBridge11")
private external fun kniBridge11(): ULong
@SymbolName("libgtk3_kniBridge12")
private external fun kniBridge12(): ULong
@SymbolName("libgtk3_kniBridge13")
private external fun kniBridge13(): ULong
@SymbolName("libgtk3_kniBridge14")
private external fun kniBridge14(): ULong
@SymbolName("libgtk3_kniBridge15")
private external fun kniBridge15(): ULong
@SymbolName("libgtk3_kniBridge16")
private external fun kniBridge16(): ULong
@SymbolName("libgtk3_kniBridge17")
private external fun kniBridge17(): ULong
@SymbolName("libgtk3_kniBridge18")
private external fun kniBridge18(): ULong
@SymbolName("libgtk3_kniBridge19")
private external fun kniBridge19(): ULong
@SymbolName("libgtk3_kniBridge20")
private external fun kniBridge20(): ULong
@SymbolName("libgtk3_kniBridge21")
private external fun kniBridge21(): ULong
@SymbolName("libgtk3_kniBridge22")
private external fun kniBridge22(): ULong
@SymbolName("libgtk3_kniBridge23")
private external fun kniBridge23(): ULong
@SymbolName("libgtk3_kniBridge24")
private external fun kniBridge24(): ULong
@SymbolName("libgtk3_kniBridge25")
private external fun kniBridge25(): ULong
@SymbolName("libgtk3_kniBridge26")
private external fun kniBridge26(): ULong
@SymbolName("libgtk3_kniBridge27")
private external fun kniBridge27(): ULong
@SymbolName("libgtk3_kniBridge28")
private external fun kniBridge28(): ULong
@SymbolName("libgtk3_kniBridge29")
private external fun kniBridge29(): ULong
@SymbolName("libgtk3_kniBridge30")
private external fun kniBridge30(): ULong
@SymbolName("libgtk3_kniBridge31")
private external fun kniBridge31(): ULong
@SymbolName("libgtk3_kniBridge32")
private external fun kniBridge32(): ULong
@SymbolName("libgtk3_kniBridge33")
private external fun kniBridge33(): ULong
@SymbolName("libgtk3_kniBridge34")
private external fun kniBridge34(): ULong
@SymbolName("libgtk3_kniBridge35")
private external fun kniBridge35(): ULong
@SymbolName("libgtk3_kniBridge36")
private external fun kniBridge36(): ULong
@SymbolName("libgtk3_kniBridge37")
private external fun kniBridge37(): ULong
@SymbolName("libgtk3_kniBridge38")
private external fun kniBridge38(): ULong
@SymbolName("libgtk3_kniBridge39")
private external fun kniBridge39(): ULong
@SymbolName("libgtk3_kniBridge40")
private external fun kniBridge40(): ULong
@SymbolName("libgtk3_kniBridge41")
private external fun kniBridge41(): ULong
@SymbolName("libgtk3_kniBridge42")
private external fun kniBridge42(): ULong
@SymbolName("libgtk3_kniBridge43")
private external fun kniBridge43(): ULong
@SymbolName("libgtk3_kniBridge44")
private external fun kniBridge44(): ULong
@SymbolName("libgtk3_kniBridge45")
private external fun kniBridge45(): ULong
@SymbolName("libgtk3_kniBridge46")
private external fun kniBridge46(): ULong
@SymbolName("libgtk3_kniBridge47")
private external fun kniBridge47(): ULong
@SymbolName("libgtk3_kniBridge48")
private external fun kniBridge48(): ULong
@SymbolName("libgtk3_kniBridge49")
private external fun kniBridge49(): ULong
@SymbolName("libgtk3_kniBridge50")
private external fun kniBridge50(): ULong
@SymbolName("libgtk3_kniBridge51")
private external fun kniBridge51(): ULong
@SymbolName("libgtk3_kniBridge52")
private external fun kniBridge52(): ULong
@SymbolName("libgtk3_kniBridge53")
private external fun kniBridge53(): ULong
@SymbolName("libgtk3_kniBridge54")
private external fun kniBridge54(): ULong
@SymbolName("libgtk3_kniBridge55")
private external fun kniBridge55(): ULong
@SymbolName("libgtk3_kniBridge56")
private external fun kniBridge56(): ULong
@SymbolName("libgtk3_kniBridge57")
private external fun kniBridge57(): ULong
@SymbolName("libgtk3_kniBridge58")
private external fun kniBridge58(): ULong
@SymbolName("libgtk3_kniBridge59")
private external fun kniBridge59(): ULong
@SymbolName("libgtk3_kniBridge60")
private external fun kniBridge60(): ULong
@SymbolName("libgtk3_kniBridge61")
private external fun kniBridge61(): ULong
@SymbolName("libgtk3_kniBridge62")
private external fun kniBridge62(): ULong
@SymbolName("libgtk3_kniBridge63")
private external fun kniBridge63(): ULong
@SymbolName("libgtk3_kniBridge64")
private external fun kniBridge64(): ULong
@SymbolName("libgtk3_kniBridge65")
private external fun kniBridge65(): ULong
@SymbolName("libgtk3_kniBridge66")
private external fun kniBridge66(): ULong
@SymbolName("libgtk3_kniBridge67")
private external fun kniBridge67(): ULong
@SymbolName("libgtk3_kniBridge68")
private external fun kniBridge68(): ULong
@SymbolName("libgtk3_kniBridge69")
private external fun kniBridge69(): ULong
@SymbolName("libgtk3_kniBridge70")
private external fun kniBridge70(): ULong
@SymbolName("libgtk3_kniBridge71")
private external fun kniBridge71(): ULong
@SymbolName("libgtk3_kniBridge72")
private external fun kniBridge72(): ULong
@SymbolName("libgtk3_kniBridge73")
private external fun kniBridge73(): ULong
@SymbolName("libgtk3_kniBridge74")
private external fun kniBridge74(): ULong
@SymbolName("libgtk3_kniBridge75")
private external fun kniBridge75(): ULong
@SymbolName("libgtk3_kniBridge76")
private external fun kniBridge76(): ULong
@SymbolName("libgtk3_kniBridge77")
private external fun kniBridge77(): ULong
@SymbolName("libgtk3_kniBridge78")
private external fun kniBridge78(): ULong
@SymbolName("libgtk3_kniBridge79")
private external fun kniBridge79(): ULong
@SymbolName("libgtk3_kniBridge80")
private external fun kniBridge80(): ULong
@SymbolName("libgtk3_kniBridge81")
private external fun kniBridge81(): ULong
@SymbolName("libgtk3_kniBridge82")
private external fun kniBridge82(): ULong
@SymbolName("libgtk3_kniBridge83")
private external fun kniBridge83(): ULong
@SymbolName("libgtk3_kniBridge84")
private external fun kniBridge84(): ULong
@SymbolName("libgtk3_kniBridge85")
private external fun kniBridge85(): ULong
@SymbolName("libgtk3_kniBridge86")
private external fun kniBridge86(): ULong
@SymbolName("libgtk3_kniBridge87")
private external fun kniBridge87(): ULong
@SymbolName("libgtk3_kniBridge88")
private external fun kniBridge88(): ULong
@SymbolName("libgtk3_kniBridge89")
private external fun kniBridge89(): ULong
@SymbolName("libgtk3_kniBridge90")
private external fun kniBridge90(): ULong
@SymbolName("libgtk3_kniBridge91")
private external fun kniBridge91(): ULong
@SymbolName("libgtk3_kniBridge92")
private external fun kniBridge92(): ULong
@SymbolName("libgtk3_kniBridge93")
private external fun kniBridge93(): UInt
@SymbolName("libgtk3_kniBridge94")
private external fun kniBridge94(): ULong
@SymbolName("libgtk3_kniBridge95")
private external fun kniBridge95(): ULong
@SymbolName("libgtk3_kniBridge96")
private external fun kniBridge96(): ULong
@SymbolName("libgtk3_kniBridge97")
private external fun kniBridge97(): ULong
@SymbolName("libgtk3_kniBridge98")
private external fun kniBridge98(): ULong
@SymbolName("libgtk3_kniBridge99")
private external fun kniBridge99(): ULong
@SymbolName("libgtk3_kniBridge100")
private external fun kniBridge100(): ULong
@SymbolName("libgtk3_kniBridge101")
private external fun kniBridge101(): ULong
@SymbolName("libgtk3_kniBridge102")
private external fun kniBridge102(): ULong
@SymbolName("libgtk3_kniBridge103")
private external fun kniBridge103(): ULong
@SymbolName("libgtk3_kniBridge104")
private external fun kniBridge104(): ULong
@SymbolName("libgtk3_kniBridge105")
private external fun kniBridge105(): ULong
@SymbolName("libgtk3_kniBridge106")
private external fun kniBridge106(): ULong
@SymbolName("libgtk3_kniBridge107")
private external fun kniBridge107(): ULong
@SymbolName("libgtk3_kniBridge108")
private external fun kniBridge108(): ULong
@SymbolName("libgtk3_kniBridge109")
private external fun kniBridge109(): ULong
@SymbolName("libgtk3_kniBridge110")
private external fun kniBridge110(): ULong
@SymbolName("libgtk3_kniBridge111")
private external fun kniBridge111(): ULong
@SymbolName("libgtk3_kniBridge112")
private external fun kniBridge112(): ULong
@SymbolName("libgtk3_kniBridge113")
private external fun kniBridge113(): ULong
@SymbolName("libgtk3_kniBridge114")
private external fun kniBridge114(): ULong
@SymbolName("libgtk3_kniBridge115")
private external fun kniBridge115(): ULong
@SymbolName("libgtk3_kniBridge116")
private external fun kniBridge116(): ULong
@SymbolName("libgtk3_kniBridge117")
private external fun kniBridge117(): ULong
@SymbolName("libgtk3_kniBridge118")
private external fun kniBridge118(): ULong
@SymbolName("libgtk3_kniBridge119")
private external fun kniBridge119(): UInt
@SymbolName("libgtk3_kniBridge120")
private external fun kniBridge120(): ULong
@SymbolName("libgtk3_kniBridge121")
private external fun kniBridge121(): ULong
@SymbolName("libgtk3_kniBridge122")
private external fun kniBridge122(): ULong
@SymbolName("libgtk3_kniBridge123")
private external fun kniBridge123(): ULong
@SymbolName("libgtk3_kniBridge124")
private external fun kniBridge124(): ULong
@SymbolName("libgtk3_kniBridge125")
private external fun kniBridge125(): ULong
@SymbolName("libgtk3_kniBridge126")
private external fun kniBridge126(): ULong
@SymbolName("libgtk3_kniBridge127")
private external fun kniBridge127(): ULong
@SymbolName("libgtk3_kniBridge128")
private external fun kniBridge128(): ULong
@SymbolName("libgtk3_kniBridge129")
private external fun kniBridge129(): ULong
@SymbolName("libgtk3_kniBridge130")
private external fun kniBridge130(): ULong
@SymbolName("libgtk3_kniBridge131")
private external fun kniBridge131(): ULong
@SymbolName("libgtk3_kniBridge132")
private external fun kniBridge132(): ULong
@SymbolName("libgtk3_kniBridge133")
private external fun kniBridge133(): ULong
@SymbolName("libgtk3_kniBridge134")
private external fun kniBridge134(): ULong
@SymbolName("libgtk3_kniBridge135")
private external fun kniBridge135(): ULong
@SymbolName("libgtk3_kniBridge136")
private external fun kniBridge136(): ULong
@SymbolName("libgtk3_kniBridge137")
private external fun kniBridge137(): ULong
@SymbolName("libgtk3_kniBridge138")
private external fun kniBridge138(): ULong
@SymbolName("libgtk3_kniBridge139")
private external fun kniBridge139(): ULong
@SymbolName("libgtk3_kniBridge140")
private external fun kniBridge140(): ULong
@SymbolName("libgtk3_kniBridge141")
private external fun kniBridge141(): ULong
@SymbolName("libgtk3_kniBridge142")
private external fun kniBridge142(): ULong
@SymbolName("libgtk3_kniBridge143")
private external fun kniBridge143(): ULong
@SymbolName("libgtk3_kniBridge144")
private external fun kniBridge144(): ULong
@SymbolName("libgtk3_kniBridge145")
private external fun kniBridge145(): ULong
@SymbolName("libgtk3_kniBridge146")
private external fun kniBridge146(): ULong
@SymbolName("libgtk3_kniBridge147")
private external fun kniBridge147(): ULong
@SymbolName("libgtk3_kniBridge148")
private external fun kniBridge148(): ULong
@SymbolName("libgtk3_kniBridge149")
private external fun kniBridge149(): ULong
@SymbolName("libgtk3_kniBridge150")
private external fun kniBridge150(): ULong
@SymbolName("libgtk3_kniBridge151")
private external fun kniBridge151(): ULong
@SymbolName("libgtk3_kniBridge152")
private external fun kniBridge152(): ULong
@SymbolName("libgtk3_kniBridge153")
private external fun kniBridge153(): ULong
@SymbolName("libgtk3_kniBridge154")
private external fun kniBridge154(): ULong
@SymbolName("libgtk3_kniBridge155")
private external fun kniBridge155(): ULong
@SymbolName("libgtk3_kniBridge156")
private external fun kniBridge156(): ULong
@SymbolName("libgtk3_kniBridge157")
private external fun kniBridge157(): ULong
@SymbolName("libgtk3_kniBridge158")
private external fun kniBridge158(): ULong
@SymbolName("libgtk3_kniBridge159")
private external fun kniBridge159(): ULong
@SymbolName("libgtk3_kniBridge160")
private external fun kniBridge160(): ULong
@SymbolName("libgtk3_kniBridge161")
private external fun kniBridge161(): ULong
@SymbolName("libgtk3_kniBridge162")
private external fun kniBridge162(): ULong
@SymbolName("libgtk3_kniBridge163")
private external fun kniBridge163(): ULong
@SymbolName("libgtk3_kniBridge164")
private external fun kniBridge164(): ULong
@SymbolName("libgtk3_kniBridge165")
private external fun kniBridge165(): ULong
@SymbolName("libgtk3_kniBridge166")
private external fun kniBridge166(): ULong
@SymbolName("libgtk3_kniBridge167")
private external fun kniBridge167(): ULong
@SymbolName("libgtk3_kniBridge168")
private external fun kniBridge168(): ULong
@SymbolName("libgtk3_kniBridge169")
private external fun kniBridge169(): ULong
@SymbolName("libgtk3_kniBridge170")
private external fun kniBridge170(): ULong
@SymbolName("libgtk3_kniBridge171")
private external fun kniBridge171(): ULong
@SymbolName("libgtk3_kniBridge172")
private external fun kniBridge172(): ULong
@SymbolName("libgtk3_kniBridge173")
private external fun kniBridge173(): ULong
@SymbolName("libgtk3_kniBridge174")
private external fun kniBridge174(): ULong
@SymbolName("libgtk3_kniBridge175")
private external fun kniBridge175(): ULong
@SymbolName("libgtk3_kniBridge176")
private external fun kniBridge176(): ULong
@SymbolName("libgtk3_kniBridge177")
private external fun kniBridge177(): ULong
@SymbolName("libgtk3_kniBridge178")
private external fun kniBridge178(): ULong
@SymbolName("libgtk3_kniBridge179")
private external fun kniBridge179(): ULong
@SymbolName("libgtk3_kniBridge180")
private external fun kniBridge180(): ULong
@SymbolName("libgtk3_kniBridge181")
private external fun kniBridge181(): ULong
@SymbolName("libgtk3_kniBridge182")
private external fun kniBridge182(): ULong
@SymbolName("libgtk3_kniBridge183")
private external fun kniBridge183(): ULong
@SymbolName("libgtk3_kniBridge184")
private external fun kniBridge184(): ULong
@SymbolName("libgtk3_kniBridge185")
private external fun kniBridge185(): ULong
@SymbolName("libgtk3_kniBridge186")
private external fun kniBridge186(): ULong
@SymbolName("libgtk3_kniBridge187")
private external fun kniBridge187(): ULong
@SymbolName("libgtk3_kniBridge188")
private external fun kniBridge188(): ULong
@SymbolName("libgtk3_kniBridge189")
private external fun kniBridge189(): ULong
@SymbolName("libgtk3_kniBridge190")
private external fun kniBridge190(): ULong
@SymbolName("libgtk3_kniBridge191")
private external fun kniBridge191(): ULong
@SymbolName("libgtk3_kniBridge192")
private external fun kniBridge192(): ULong
@SymbolName("libgtk3_kniBridge193")
private external fun kniBridge193(): ULong
@SymbolName("libgtk3_kniBridge194")
private external fun kniBridge194(): ULong
@SymbolName("libgtk3_kniBridge195")
private external fun kniBridge195(): ULong
@SymbolName("libgtk3_kniBridge196")
private external fun kniBridge196(): ULong
@SymbolName("libgtk3_kniBridge197")
private external fun kniBridge197(): ULong
@SymbolName("libgtk3_kniBridge198")
private external fun kniBridge198(): ULong
@SymbolName("libgtk3_kniBridge199")
private external fun kniBridge199(): ULong
@SymbolName("libgtk3_kniBridge200")
private external fun kniBridge200(): ULong
@SymbolName("libgtk3_kniBridge201")
private external fun kniBridge201(): ULong
@SymbolName("libgtk3_kniBridge202")
private external fun kniBridge202(): ULong
@SymbolName("libgtk3_kniBridge203")
private external fun kniBridge203(): ULong
@SymbolName("libgtk3_kniBridge204")
private external fun kniBridge204(): ULong
@SymbolName("libgtk3_kniBridge205")
private external fun kniBridge205(): ULong
@SymbolName("libgtk3_kniBridge206")
private external fun kniBridge206(): ULong
@SymbolName("libgtk3_kniBridge207")
private external fun kniBridge207(): ULong
@SymbolName("libgtk3_kniBridge208")
private external fun kniBridge208(): ULong
@SymbolName("libgtk3_kniBridge209")
private external fun kniBridge209(): ULong
@SymbolName("libgtk3_kniBridge210")
private external fun kniBridge210(): ULong
@SymbolName("libgtk3_kniBridge211")
private external fun kniBridge211(): ULong
@SymbolName("libgtk3_kniBridge212")
private external fun kniBridge212(): ULong
@SymbolName("libgtk3_kniBridge213")
private external fun kniBridge213(): ULong
@SymbolName("libgtk3_kniBridge214")
private external fun kniBridge214(): ULong
@SymbolName("libgtk3_kniBridge215")
private external fun kniBridge215(): ULong
@SymbolName("libgtk3_kniBridge216")
private external fun kniBridge216(): ULong
@SymbolName("libgtk3_kniBridge217")
private external fun kniBridge217(): ULong
@SymbolName("libgtk3_kniBridge218")
private external fun kniBridge218(): ULong
@SymbolName("libgtk3_kniBridge219")
private external fun kniBridge219(): ULong
@SymbolName("libgtk3_kniBridge220")
private external fun kniBridge220(): ULong
@SymbolName("libgtk3_kniBridge221")
private external fun kniBridge221(): ULong
@SymbolName("libgtk3_kniBridge222")
private external fun kniBridge222(): ULong
@SymbolName("libgtk3_kniBridge223")
private external fun kniBridge223(): ULong
@SymbolName("libgtk3_kniBridge224")
private external fun kniBridge224(): ULong
@SymbolName("libgtk3_kniBridge225")
private external fun kniBridge225(): ULong
@SymbolName("libgtk3_kniBridge226")
private external fun kniBridge226(): UInt
@SymbolName("libgtk3_kniBridge227")
private external fun kniBridge227(): ULong
@SymbolName("libgtk3_kniBridge228")
private external fun kniBridge228(): UInt
@SymbolName("libgtk3_kniBridge229")
private external fun kniBridge229(): ULong
@SymbolName("libgtk3_kniBridge230")
private external fun kniBridge230(): ULong
@SymbolName("libgtk3_kniBridge231")
private external fun kniBridge231(): ULong
@SymbolName("libgtk3_kniBridge232")
private external fun kniBridge232(): ULong
@SymbolName("libgtk3_kniBridge233")
private external fun kniBridge233(): ULong
@SymbolName("libgtk3_kniBridge234")
private external fun kniBridge234(): ULong
@SymbolName("libgtk3_kniBridge235")
private external fun kniBridge235(): ULong
@SymbolName("libgtk3_kniBridge236")
private external fun kniBridge236(): ULong
@SymbolName("libgtk3_kniBridge237")
private external fun kniBridge237(): ULong
@SymbolName("libgtk3_kniBridge238")
private external fun kniBridge238(): ULong
@SymbolName("libgtk3_kniBridge239")
private external fun kniBridge239(): ULong
@SymbolName("libgtk3_kniBridge240")
private external fun kniBridge240(): ULong
@SymbolName("libgtk3_kniBridge241")
private external fun kniBridge241(): ULong
@SymbolName("libgtk3_kniBridge242")
private external fun kniBridge242(): ULong
@SymbolName("libgtk3_kniBridge243")
private external fun kniBridge243(): ULong
@SymbolName("libgtk3_kniBridge244")
private external fun kniBridge244(): ULong
@SymbolName("libgtk3_kniBridge245")
private external fun kniBridge245(): ULong
@SymbolName("libgtk3_kniBridge246")
private external fun kniBridge246(): ULong
@SymbolName("libgtk3_kniBridge247")
private external fun kniBridge247(): ULong
@SymbolName("libgtk3_kniBridge248")
private external fun kniBridge248(): ULong
@SymbolName("libgtk3_kniBridge249")
private external fun kniBridge249(): ULong
@SymbolName("libgtk3_kniBridge250")
private external fun kniBridge250(): ULong
@SymbolName("libgtk3_kniBridge251")
private external fun kniBridge251(): ULong
@SymbolName("libgtk3_kniBridge252")
private external fun kniBridge252(): ULong
@SymbolName("libgtk3_kniBridge253")
private external fun kniBridge253(): ULong
@SymbolName("libgtk3_kniBridge254")
private external fun kniBridge254(): ULong
@SymbolName("libgtk3_kniBridge255")
private external fun kniBridge255(): ULong
@SymbolName("libgtk3_kniBridge256")
private external fun kniBridge256(): ULong
@SymbolName("libgtk3_kniBridge257")
private external fun kniBridge257(): ULong
@SymbolName("libgtk3_kniBridge258")
private external fun kniBridge258(): ULong
@SymbolName("libgtk3_kniBridge259")
private external fun kniBridge259(): UInt
@SymbolName("libgtk3_kniBridge260")
private external fun kniBridge260(): ULong
@SymbolName("libgtk3_kniBridge261")
private external fun kniBridge261(): ULong
@SymbolName("libgtk3_kniBridge262")
private external fun kniBridge262(): ULong
@SymbolName("libgtk3_kniBridge263")
private external fun kniBridge263(): ULong
@SymbolName("libgtk3_kniBridge264")
private external fun kniBridge264(): ULong
@SymbolName("libgtk3_kniBridge265")
private external fun kniBridge265(): ULong
@SymbolName("libgtk3_kniBridge266")
private external fun kniBridge266(): ULong
@SymbolName("libgtk3_kniBridge267")
private external fun kniBridge267(): ULong
@SymbolName("libgtk3_kniBridge268")
private external fun kniBridge268(): ULong
@SymbolName("libgtk3_kniBridge269")
private external fun kniBridge269(): ULong
@SymbolName("libgtk3_kniBridge270")
private external fun kniBridge270(): ULong
@SymbolName("libgtk3_kniBridge271")
private external fun kniBridge271(): ULong
@SymbolName("libgtk3_kniBridge272")
private external fun kniBridge272(): ULong
@SymbolName("libgtk3_kniBridge273")
private external fun kniBridge273(): ULong
@SymbolName("libgtk3_kniBridge274")
private external fun kniBridge274(): ULong
@SymbolName("libgtk3_kniBridge275")
private external fun kniBridge275(): ULong
@SymbolName("libgtk3_kniBridge276")
private external fun kniBridge276(): ULong
@SymbolName("libgtk3_kniBridge277")
private external fun kniBridge277(): ULong
@SymbolName("libgtk3_kniBridge278")
private external fun kniBridge278(): ULong
@SymbolName("libgtk3_kniBridge279")
private external fun kniBridge279(): ULong
@SymbolName("libgtk3_kniBridge280")
private external fun kniBridge280(): ULong
@SymbolName("libgtk3_kniBridge281")
private external fun kniBridge281(): ULong
@SymbolName("libgtk3_kniBridge282")
private external fun kniBridge282(): ULong
@SymbolName("libgtk3_kniBridge283")
private external fun kniBridge283(): ULong
@SymbolName("libgtk3_kniBridge284")
private external fun kniBridge284(): ULong
@SymbolName("libgtk3_kniBridge285")
private external fun kniBridge285(): ULong
@SymbolName("libgtk3_kniBridge286")
private external fun kniBridge286(): ULong
@SymbolName("libgtk3_kniBridge287")
private external fun kniBridge287(): ULong
@SymbolName("libgtk3_kniBridge288")
private external fun kniBridge288(): ULong
@SymbolName("libgtk3_kniBridge289")
private external fun kniBridge289(): ULong
@SymbolName("libgtk3_kniBridge290")
private external fun kniBridge290(): ULong
@SymbolName("libgtk3_kniBridge291")
private external fun kniBridge291(): ULong
@SymbolName("libgtk3_kniBridge292")
private external fun kniBridge292(): ULong
@SymbolName("libgtk3_kniBridge293")
private external fun kniBridge293(): ULong
@SymbolName("libgtk3_kniBridge294")
private external fun kniBridge294(): ULong
@SymbolName("libgtk3_kniBridge295")
private external fun kniBridge295(): ULong
@SymbolName("libgtk3_kniBridge296")
private external fun kniBridge296(): ULong
@SymbolName("libgtk3_kniBridge297")
private external fun kniBridge297(): ULong
@SymbolName("libgtk3_kniBridge298")
private external fun kniBridge298(): ULong
@SymbolName("libgtk3_kniBridge299")
private external fun kniBridge299(): ULong
@SymbolName("libgtk3_kniBridge300")
private external fun kniBridge300(): ULong
@SymbolName("libgtk3_kniBridge301")
private external fun kniBridge301(): ULong
@SymbolName("libgtk3_kniBridge302")
private external fun kniBridge302(): ULong
@SymbolName("libgtk3_kniBridge303")
private external fun kniBridge303(): ULong
@SymbolName("libgtk3_kniBridge304")
private external fun kniBridge304(): ULong
@SymbolName("libgtk3_kniBridge305")
private external fun kniBridge305(): ULong
@SymbolName("libgtk3_kniBridge306")
private external fun kniBridge306(): ULong
@SymbolName("libgtk3_kniBridge307")
private external fun kniBridge307(): ULong
@SymbolName("libgtk3_kniBridge308")
private external fun kniBridge308(): ULong
@SymbolName("libgtk3_kniBridge309")
private external fun kniBridge309(): ULong
@SymbolName("libgtk3_kniBridge310")
private external fun kniBridge310(): ULong
@SymbolName("libgtk3_kniBridge311")
private external fun kniBridge311(): ULong
@SymbolName("libgtk3_kniBridge312")
private external fun kniBridge312(): ULong
@SymbolName("libgtk3_kniBridge313")
private external fun kniBridge313(): ULong
@SymbolName("libgtk3_kniBridge314")
private external fun kniBridge314(): ULong
@SymbolName("libgtk3_kniBridge315")
private external fun kniBridge315(): ULong
@SymbolName("libgtk3_kniBridge316")
private external fun kniBridge316(): ULong
@SymbolName("libgtk3_kniBridge317")
private external fun kniBridge317(): ULong
@SymbolName("libgtk3_kniBridge318")
private external fun kniBridge318(): ULong
@SymbolName("libgtk3_kniBridge319")
private external fun kniBridge319(): ULong
@SymbolName("libgtk3_kniBridge320")
private external fun kniBridge320(): ULong
@SymbolName("libgtk3_kniBridge321")
private external fun kniBridge321(): ULong
@SymbolName("libgtk3_kniBridge322")
private external fun kniBridge322(): ULong
@SymbolName("libgtk3_kniBridge323")
private external fun kniBridge323(): ULong
@SymbolName("libgtk3_kniBridge324")
private external fun kniBridge324(): ULong
@SymbolName("libgtk3_kniBridge325")
private external fun kniBridge325(): ULong
@SymbolName("libgtk3_kniBridge326")
private external fun kniBridge326(): ULong
@SymbolName("libgtk3_kniBridge327")
private external fun kniBridge327(): ULong
@SymbolName("libgtk3_kniBridge328")
private external fun kniBridge328(): ULong
@SymbolName("libgtk3_kniBridge329")
private external fun kniBridge329(): ULong
@SymbolName("libgtk3_kniBridge330")
private external fun kniBridge330(): ULong
@SymbolName("libgtk3_kniBridge331")
private external fun kniBridge331(): ULong
@SymbolName("libgtk3_kniBridge332")
private external fun kniBridge332(): ULong
@SymbolName("libgtk3_kniBridge333")
private external fun kniBridge333(): ULong
@SymbolName("libgtk3_kniBridge334")
private external fun kniBridge334(): ULong
@SymbolName("libgtk3_kniBridge335")
private external fun kniBridge335(): ULong
@SymbolName("libgtk3_kniBridge336")
private external fun kniBridge336(): ULong
@SymbolName("libgtk3_kniBridge337")
private external fun kniBridge337(): ULong
@SymbolName("libgtk3_kniBridge338")
private external fun kniBridge338(): ULong
@SymbolName("libgtk3_kniBridge339")
private external fun kniBridge339(): ULong
@SymbolName("libgtk3_kniBridge340")
private external fun kniBridge340(): ULong
@SymbolName("libgtk3_kniBridge341")
private external fun kniBridge341(): ULong
@SymbolName("libgtk3_kniBridge342")
private external fun kniBridge342(): ULong
@SymbolName("libgtk3_kniBridge343")
private external fun kniBridge343(): ULong
@SymbolName("libgtk3_kniBridge344")
private external fun kniBridge344(): ULong
@SymbolName("libgtk3_kniBridge345")
private external fun kniBridge345(): UInt
@SymbolName("libgtk3_kniBridge346")
private external fun kniBridge346(): ULong
@SymbolName("libgtk3_kniBridge347")
private external fun kniBridge347(): ULong
@SymbolName("libgtk3_kniBridge348")
private external fun kniBridge348(): ULong
@SymbolName("libgtk3_kniBridge349")
private external fun kniBridge349(): ULong
@SymbolName("libgtk3_kniBridge350")
private external fun kniBridge350(): ULong
@SymbolName("libgtk3_kniBridge351")
private external fun kniBridge351(): ULong
@SymbolName("libgtk3_kniBridge352")
private external fun kniBridge352(): ULong
@SymbolName("libgtk3_kniBridge353")
private external fun kniBridge353(): ULong
@SymbolName("libgtk3_kniBridge354")
private external fun kniBridge354(): ULong
@SymbolName("libgtk3_kniBridge355")
private external fun kniBridge355(): ULong
@SymbolName("libgtk3_kniBridge356")
private external fun kniBridge356(): ULong
@SymbolName("libgtk3_kniBridge357")
private external fun kniBridge357(): ULong
@SymbolName("libgtk3_kniBridge358")
private external fun kniBridge358(): ULong
@SymbolName("libgtk3_kniBridge359")
private external fun kniBridge359(): ULong
@SymbolName("libgtk3_kniBridge360")
private external fun kniBridge360(): ULong
@SymbolName("libgtk3_kniBridge361")
private external fun kniBridge361(): ULong
@SymbolName("libgtk3_kniBridge362")
private external fun kniBridge362(): ULong
@SymbolName("libgtk3_kniBridge363")
private external fun kniBridge363(): ULong
@SymbolName("libgtk3_kniBridge364")
private external fun kniBridge364(): ULong
@SymbolName("libgtk3_kniBridge365")
private external fun kniBridge365(): ULong
@SymbolName("libgtk3_kniBridge366")
private external fun kniBridge366(): ULong
@SymbolName("libgtk3_kniBridge367")
private external fun kniBridge367(): ULong
@SymbolName("libgtk3_kniBridge368")
private external fun kniBridge368(): ULong
@SymbolName("libgtk3_kniBridge369")
private external fun kniBridge369(): ULong
@SymbolName("libgtk3_kniBridge370")
private external fun kniBridge370(): ULong
@SymbolName("libgtk3_kniBridge371")
private external fun kniBridge371(): ULong
@SymbolName("libgtk3_kniBridge372")
private external fun kniBridge372(): ULong
@SymbolName("libgtk3_kniBridge373")
private external fun kniBridge373(): UInt
@SymbolName("libgtk3_kniBridge374")
private external fun kniBridge374(): ULong
@SymbolName("libgtk3_kniBridge375")
private external fun kniBridge375(): ULong
@SymbolName("libgtk3_kniBridge376")
private external fun kniBridge376(): ULong
@SymbolName("libgtk3_kniBridge377")
private external fun kniBridge377(): ULong
@SymbolName("libgtk3_kniBridge378")
private external fun kniBridge378(): ULong
@SymbolName("libgtk3_kniBridge379")
private external fun kniBridge379(): ULong
@SymbolName("libgtk3_kniBridge380")
private external fun kniBridge380(): ULong
@SymbolName("libgtk3_kniBridge381")
private external fun kniBridge381(): UInt
@SymbolName("libgtk3_kniBridge382")
private external fun kniBridge382(): ULong
@SymbolName("libgtk3_kniBridge383")
private external fun kniBridge383(): ULong
@SymbolName("libgtk3_kniBridge384")
private external fun kniBridge384(): ULong
@SymbolName("libgtk3_kniBridge385")
private external fun kniBridge385(): ULong
@SymbolName("libgtk3_kniBridge386")
private external fun kniBridge386(): ULong
@SymbolName("libgtk3_kniBridge387")
private external fun kniBridge387(): ULong
@SymbolName("libgtk3_kniBridge388")
private external fun kniBridge388(): ULong
@SymbolName("libgtk3_kniBridge389")
private external fun kniBridge389(): ULong
@SymbolName("libgtk3_kniBridge390")
private external fun kniBridge390(): ULong
@SymbolName("libgtk3_kniBridge391")
private external fun kniBridge391(): ULong
@SymbolName("libgtk3_kniBridge392")
private external fun kniBridge392(): ULong
@SymbolName("libgtk3_kniBridge393")
private external fun kniBridge393(): ULong
@SymbolName("libgtk3_kniBridge394")
private external fun kniBridge394(): ULong
@SymbolName("libgtk3_kniBridge395")
private external fun kniBridge395(): ULong
@SymbolName("libgtk3_kniBridge396")
private external fun kniBridge396(): ULong
@SymbolName("libgtk3_kniBridge397")
private external fun kniBridge397(): ULong
@SymbolName("libgtk3_kniBridge398")
private external fun kniBridge398(): ULong
@SymbolName("libgtk3_kniBridge399")
private external fun kniBridge399(): ULong
@SymbolName("libgtk3_kniBridge400")
private external fun kniBridge400(): ULong
@SymbolName("libgtk3_kniBridge401")
private external fun kniBridge401(): ULong
@SymbolName("libgtk3_kniBridge402")
private external fun kniBridge402(): ULong
@SymbolName("libgtk3_kniBridge403")
private external fun kniBridge403(): ULong
@SymbolName("libgtk3_kniBridge404")
private external fun kniBridge404(): ULong
@SymbolName("libgtk3_kniBridge405")
private external fun kniBridge405(): ULong
@SymbolName("libgtk3_kniBridge406")
private external fun kniBridge406(): ULong
@SymbolName("libgtk3_kniBridge407")
private external fun kniBridge407(): ULong
@SymbolName("libgtk3_kniBridge408")
private external fun kniBridge408(): ULong
@SymbolName("libgtk3_kniBridge409")
private external fun kniBridge409(): UInt
@SymbolName("libgtk3_kniBridge410")
private external fun kniBridge410(): ULong
@SymbolName("libgtk3_kniBridge411")
private external fun kniBridge411(): ULong
@SymbolName("libgtk3_kniBridge412")
private external fun kniBridge412(): ULong
@SymbolName("libgtk3_kniBridge413")
private external fun kniBridge413(): ULong
@SymbolName("libgtk3_kniBridge414")
private external fun kniBridge414(): ULong
@SymbolName("libgtk3_kniBridge415")
private external fun kniBridge415(): ULong
@SymbolName("libgtk3_kniBridge416")
private external fun kniBridge416(): ULong
@SymbolName("libgtk3_kniBridge417")
private external fun kniBridge417(): ULong
@SymbolName("libgtk3_kniBridge418")
private external fun kniBridge418(): ULong
@SymbolName("libgtk3_kniBridge419")
private external fun kniBridge419(): ULong
@SymbolName("libgtk3_kniBridge420")
private external fun kniBridge420(): ULong
@SymbolName("libgtk3_kniBridge421")
private external fun kniBridge421(): ULong
@SymbolName("libgtk3_kniBridge422")
private external fun kniBridge422(): UInt
@SymbolName("libgtk3_kniBridge423")
private external fun kniBridge423(): UInt
@SymbolName("libgtk3_kniBridge424")
private external fun kniBridge424(): UInt
@SymbolName("libgtk3_kniBridge425")
private external fun kniBridge425(): UInt
@SymbolName("libgtk3_kniBridge426")
private external fun kniBridge426(): UInt
@SymbolName("libgtk3_kniBridge427")
private external fun kniBridge427(): ULong
@SymbolName("libgtk3_kniBridge428")
private external fun kniBridge428(): ULong
@SymbolName("libgtk3_kniBridge429")
private external fun kniBridge429(): ULong
@SymbolName("libgtk3_kniBridge430")
private external fun kniBridge430(): ULong
@SymbolName("libgtk3_kniBridge431")
private external fun kniBridge431(): ULong
@SymbolName("libgtk3_kniBridge432")
private external fun kniBridge432(): ULong
@SymbolName("libgtk3_kniBridge433")
private external fun kniBridge433(): ULong
@SymbolName("libgtk3_kniBridge434")
private external fun kniBridge434(): ULong
@SymbolName("libgtk3_kniBridge435")
private external fun kniBridge435(): ULong
@SymbolName("libgtk3_kniBridge436")
private external fun kniBridge436(): ULong
@SymbolName("libgtk3_kniBridge437")
private external fun kniBridge437(): ULong
@SymbolName("libgtk3_kniBridge438")
private external fun kniBridge438(): ULong
@SymbolName("libgtk3_kniBridge439")
private external fun kniBridge439(): ULong
@SymbolName("libgtk3_kniBridge440")
private external fun kniBridge440(): ULong
@SymbolName("libgtk3_kniBridge441")
private external fun kniBridge441(): ULong
@SymbolName("libgtk3_kniBridge442")
private external fun kniBridge442(): ULong
@SymbolName("libgtk3_kniBridge443")
private external fun kniBridge443(): ULong
@SymbolName("libgtk3_kniBridge444")
private external fun kniBridge444(): ULong
@SymbolName("libgtk3_kniBridge445")
private external fun kniBridge445(): ULong
@SymbolName("libgtk3_kniBridge446")
private external fun kniBridge446(): ULong
@SymbolName("libgtk3_kniBridge447")
private external fun kniBridge447(): ULong
@SymbolName("libgtk3_kniBridge448")
private external fun kniBridge448(): ULong
@SymbolName("libgtk3_kniBridge449")
private external fun kniBridge449(): ULong
@SymbolName("libgtk3_kniBridge450")
private external fun kniBridge450(): ULong
@SymbolName("libgtk3_kniBridge451")
private external fun kniBridge451(): UInt
@SymbolName("libgtk3_kniBridge452")
private external fun kniBridge452(): ULong
@SymbolName("libgtk3_kniBridge453")
private external fun kniBridge453(): ULong
@SymbolName("libgtk3_kniBridge454")
private external fun kniBridge454(): ULong
@SymbolName("libgtk3_kniBridge455")
private external fun kniBridge455(): ULong
@SymbolName("libgtk3_kniBridge456")
private external fun kniBridge456(): ULong
@SymbolName("libgtk3_kniBridge457")
private external fun kniBridge457(): ULong
@SymbolName("libgtk3_kniBridge458")
private external fun kniBridge458(): ULong
@SymbolName("libgtk3_kniBridge459")
private external fun kniBridge459(): ULong
@SymbolName("libgtk3_kniBridge460")
private external fun kniBridge460(): UInt
@SymbolName("libgtk3_kniBridge461")
private external fun kniBridge461(): ULong
@SymbolName("libgtk3_kniBridge462")
private external fun kniBridge462(): ULong
@SymbolName("libgtk3_kniBridge463")
private external fun kniBridge463(): UInt
@SymbolName("libgtk3_kniBridge464")
private external fun kniBridge464(): ULong
@SymbolName("libgtk3_kniBridge465")
private external fun kniBridge465(): ULong
@SymbolName("libgtk3_kniBridge466")
private external fun kniBridge466(): ULong
@SymbolName("libgtk3_kniBridge467")
private external fun kniBridge467(): ULong
@SymbolName("libgtk3_kniBridge468")
private external fun kniBridge468(): ULong
@SymbolName("libgtk3_kniBridge469")
private external fun kniBridge469(): ULong
@SymbolName("libgtk3_kniBridge470")
private external fun kniBridge470(): ULong
@SymbolName("libgtk3_kniBridge471")
private external fun kniBridge471(): ULong
@SymbolName("libgtk3_kniBridge472")
private external fun kniBridge472(): ULong
@SymbolName("libgtk3_kniBridge473")
private external fun kniBridge473(): ULong
@SymbolName("libgtk3_kniBridge474")
private external fun kniBridge474(): ULong
@SymbolName("libgtk3_kniBridge475")
private external fun kniBridge475(): ULong
@SymbolName("libgtk3_kniBridge476")
private external fun kniBridge476(): ULong
@SymbolName("libgtk3_kniBridge477")
private external fun kniBridge477(): ULong
@SymbolName("libgtk3_kniBridge478")
private external fun kniBridge478(): ULong
@SymbolName("libgtk3_kniBridge479")
private external fun kniBridge479(): ULong
@SymbolName("libgtk3_kniBridge480")
private external fun kniBridge480(): ULong
@SymbolName("libgtk3_kniBridge481")
private external fun kniBridge481(): ULong
@SymbolName("libgtk3_kniBridge482")
private external fun kniBridge482(): ULong
@SymbolName("libgtk3_kniBridge483")
private external fun kniBridge483(): ULong
@SymbolName("libgtk3_kniBridge484")
private external fun kniBridge484(): ULong
@SymbolName("libgtk3_kniBridge485")
private external fun kniBridge485(): ULong
@SymbolName("libgtk3_kniBridge486")
private external fun kniBridge486(): ULong
@SymbolName("libgtk3_kniBridge487")
private external fun kniBridge487(): ULong
@SymbolName("libgtk3_kniBridge488")
private external fun kniBridge488(): ULong
@SymbolName("libgtk3_kniBridge489")
private external fun kniBridge489(): ULong
@SymbolName("libgtk3_kniBridge490")
private external fun kniBridge490(): ULong
@SymbolName("libgtk3_kniBridge491")
private external fun kniBridge491(): ULong
@SymbolName("libgtk3_kniBridge492")
private external fun kniBridge492(): ULong
@SymbolName("libgtk3_kniBridge493")
private external fun kniBridge493(): ULong
@SymbolName("libgtk3_kniBridge494")
private external fun kniBridge494(): ULong
@SymbolName("libgtk3_kniBridge495")
private external fun kniBridge495(): ULong
@SymbolName("libgtk3_kniBridge496")
private external fun kniBridge496(): ULong
@SymbolName("libgtk3_kniBridge497")
private external fun kniBridge497(): ULong
@SymbolName("libgtk3_kniBridge498")
private external fun kniBridge498(): ULong
@SymbolName("libgtk3_kniBridge499")
private external fun kniBridge499(): ULong
@SymbolName("libgtk3_kniBridge500")
private external fun kniBridge500(): ULong
@SymbolName("libgtk3_kniBridge501")
private external fun kniBridge501(): ULong
@SymbolName("libgtk3_kniBridge502")
private external fun kniBridge502(): ULong
@SymbolName("libgtk3_kniBridge503")
private external fun kniBridge503(): ULong
@SymbolName("libgtk3_kniBridge504")
private external fun kniBridge504(): ULong
@SymbolName("libgtk3_kniBridge505")
private external fun kniBridge505(): ULong
@SymbolName("libgtk3_kniBridge506")
private external fun kniBridge506(): ULong
@SymbolName("libgtk3_kniBridge507")
private external fun kniBridge507(): ULong
@SymbolName("libgtk3_kniBridge508")
private external fun kniBridge508(): ULong
@SymbolName("libgtk3_kniBridge509")
private external fun kniBridge509(): ULong
@SymbolName("libgtk3_kniBridge510")
private external fun kniBridge510(): ULong
@SymbolName("libgtk3_kniBridge511")
private external fun kniBridge511(): ULong
@SymbolName("libgtk3_kniBridge512")
private external fun kniBridge512(): ULong
@SymbolName("libgtk3_kniBridge513")
private external fun kniBridge513(): ULong
@SymbolName("libgtk3_kniBridge514")
private external fun kniBridge514(): ULong
@SymbolName("libgtk3_kniBridge515")
private external fun kniBridge515(): ULong
@SymbolName("libgtk3_kniBridge516")
private external fun kniBridge516(): ULong
@SymbolName("libgtk3_kniBridge517")
private external fun kniBridge517(): ULong
@SymbolName("libgtk3_kniBridge518")
private external fun kniBridge518(): ULong
@SymbolName("libgtk3_kniBridge519")
private external fun kniBridge519(): ULong
@SymbolName("libgtk3_kniBridge520")
private external fun kniBridge520(): ULong
@SymbolName("libgtk3_kniBridge521")
private external fun kniBridge521(): ULong
@SymbolName("libgtk3_kniBridge522")
private external fun kniBridge522(): ULong
@SymbolName("libgtk3_kniBridge523")
private external fun kniBridge523(): ULong
@SymbolName("libgtk3_kniBridge524")
private external fun kniBridge524(): ULong
@SymbolName("libgtk3_kniBridge525")
private external fun kniBridge525(): ULong
@SymbolName("libgtk3_kniBridge526")
private external fun kniBridge526(): ULong
@SymbolName("libgtk3_kniBridge527")
private external fun kniBridge527(): ULong
@SymbolName("libgtk3_kniBridge528")
private external fun kniBridge528(): ULong
@SymbolName("libgtk3_kniBridge529")
private external fun kniBridge529(): ULong
@SymbolName("libgtk3_kniBridge530")
private external fun kniBridge530(): ULong
@SymbolName("libgtk3_kniBridge531")
private external fun kniBridge531(): ULong
@SymbolName("libgtk3_kniBridge532")
private external fun kniBridge532(): ULong
@SymbolName("libgtk3_kniBridge533")
private external fun kniBridge533(): ULong
@SymbolName("libgtk3_kniBridge534")
private external fun kniBridge534(): ULong
@SymbolName("libgtk3_kniBridge535")
private external fun kniBridge535(): ULong
@SymbolName("libgtk3_kniBridge536")
private external fun kniBridge536(): ULong
@SymbolName("libgtk3_kniBridge537")
private external fun kniBridge537(): ULong
@SymbolName("libgtk3_kniBridge538")
private external fun kniBridge538(): ULong
@SymbolName("libgtk3_kniBridge539")
private external fun kniBridge539(): ULong
@SymbolName("libgtk3_kniBridge540")
private external fun kniBridge540(): ULong
@SymbolName("libgtk3_kniBridge541")
private external fun kniBridge541(): ULong
@SymbolName("libgtk3_kniBridge542")
private external fun kniBridge542(): ULong
@SymbolName("libgtk3_kniBridge543")
private external fun kniBridge543(): ULong
@SymbolName("libgtk3_kniBridge544")
private external fun kniBridge544(): ULong
@SymbolName("libgtk3_kniBridge545")
private external fun kniBridge545(): ULong
@SymbolName("libgtk3_kniBridge546")
private external fun kniBridge546(): ULong
@SymbolName("libgtk3_kniBridge547")
private external fun kniBridge547(): ULong
@SymbolName("libgtk3_kniBridge548")
private external fun kniBridge548(): ULong
@SymbolName("libgtk3_kniBridge549")
private external fun kniBridge549(): ULong
@SymbolName("libgtk3_kniBridge550")
private external fun kniBridge550(): ULong
@SymbolName("libgtk3_kniBridge551")
private external fun kniBridge551(): ULong
@SymbolName("libgtk3_kniBridge552")
private external fun kniBridge552(): ULong
@SymbolName("libgtk3_kniBridge553")
private external fun kniBridge553(): ULong
@SymbolName("libgtk3_kniBridge554")
private external fun kniBridge554(): ULong
@SymbolName("libgtk3_kniBridge555")
private external fun kniBridge555(): ULong
@SymbolName("libgtk3_kniBridge556")
private external fun kniBridge556(): ULong
@SymbolName("libgtk3_kniBridge557")
private external fun kniBridge557(): ULong
@SymbolName("libgtk3_kniBridge558")
private external fun kniBridge558(): ULong
@SymbolName("libgtk3_kniBridge559")
private external fun kniBridge559(): ULong
@SymbolName("libgtk3_kniBridge560")
private external fun kniBridge560(): ULong
@SymbolName("libgtk3_kniBridge561")
private external fun kniBridge561(): ULong
@SymbolName("libgtk3_kniBridge562")
private external fun kniBridge562(): ULong
@SymbolName("libgtk3_kniBridge563")
private external fun kniBridge563(): ULong
@SymbolName("libgtk3_kniBridge564")
private external fun kniBridge564(): ULong
@SymbolName("libgtk3_kniBridge565")
private external fun kniBridge565(): ULong
@SymbolName("libgtk3_kniBridge566")
private external fun kniBridge566(): ULong
@SymbolName("libgtk3_kniBridge567")
private external fun kniBridge567(): ULong
@SymbolName("libgtk3_kniBridge568")
private external fun kniBridge568(): ULong
@SymbolName("libgtk3_kniBridge569")
private external fun kniBridge569(): ULong
@SymbolName("libgtk3_kniBridge570")
private external fun kniBridge570(): ULong
@SymbolName("libgtk3_kniBridge571")
private external fun kniBridge571(): ULong
@SymbolName("libgtk3_kniBridge572")
private external fun kniBridge572(): ULong
@SymbolName("libgtk3_kniBridge573")
private external fun kniBridge573(): ULong
@SymbolName("libgtk3_kniBridge574")
private external fun kniBridge574(): ULong
@SymbolName("libgtk3_kniBridge575")
private external fun kniBridge575(): ULong
@SymbolName("libgtk3_kniBridge576")
private external fun kniBridge576(): ULong
@SymbolName("libgtk3_kniBridge577")
private external fun kniBridge577(): ULong
@SymbolName("libgtk3_kniBridge578")
private external fun kniBridge578(): ULong
@SymbolName("libgtk3_kniBridge579")
private external fun kniBridge579(): ULong
@SymbolName("libgtk3_kniBridge580")
private external fun kniBridge580(): ULong
@SymbolName("libgtk3_kniBridge581")
private external fun kniBridge581(): ULong
@SymbolName("libgtk3_kniBridge582")
private external fun kniBridge582(): ULong
@SymbolName("libgtk3_kniBridge583")
private external fun kniBridge583(): ULong
@SymbolName("libgtk3_kniBridge584")
private external fun kniBridge584(): ULong
@SymbolName("libgtk3_kniBridge585")
private external fun kniBridge585(): ULong
@SymbolName("libgtk3_kniBridge586")
private external fun kniBridge586(): ULong
@SymbolName("libgtk3_kniBridge587")
private external fun kniBridge587(): ULong
@SymbolName("libgtk3_kniBridge588")
private external fun kniBridge588(): ULong
@SymbolName("libgtk3_kniBridge589")
private external fun kniBridge589(): ULong
@SymbolName("libgtk3_kniBridge590")
private external fun kniBridge590(): ULong
@SymbolName("libgtk3_kniBridge591")
private external fun kniBridge591(): ULong
@SymbolName("libgtk3_kniBridge592")
private external fun kniBridge592(): ULong
@SymbolName("libgtk3_kniBridge593")
private external fun kniBridge593(): ULong
@SymbolName("libgtk3_kniBridge594")
private external fun kniBridge594(): ULong
@SymbolName("libgtk3_kniBridge595")
private external fun kniBridge595(): ULong
@SymbolName("libgtk3_kniBridge596")
private external fun kniBridge596(): ULong
@SymbolName("libgtk3_kniBridge597")
private external fun kniBridge597(): ULong
@SymbolName("libgtk3_kniBridge598")
private external fun kniBridge598(): ULong
@SymbolName("libgtk3_kniBridge599")
private external fun kniBridge599(): ULong
@SymbolName("libgtk3_kniBridge600")
private external fun kniBridge600(): ULong
@SymbolName("libgtk3_kniBridge601")
private external fun kniBridge601(): ULong
@SymbolName("libgtk3_kniBridge602")
private external fun kniBridge602(): ULong
@SymbolName("libgtk3_kniBridge603")
private external fun kniBridge603(): ULong
@SymbolName("libgtk3_kniBridge604")
private external fun kniBridge604(): ULong
@SymbolName("libgtk3_kniBridge605")
private external fun kniBridge605(): ULong
@SymbolName("libgtk3_kniBridge606")
private external fun kniBridge606(): ULong
@SymbolName("libgtk3_kniBridge607")
private external fun kniBridge607(): ULong
@SymbolName("libgtk3_kniBridge608")
private external fun kniBridge608(): ULong
@SymbolName("libgtk3_kniBridge609")
private external fun kniBridge609(): ULong
@SymbolName("libgtk3_kniBridge610")
private external fun kniBridge610(): ULong
@SymbolName("libgtk3_kniBridge611")
private external fun kniBridge611(): ULong
@SymbolName("libgtk3_kniBridge612")
private external fun kniBridge612(): ULong
@SymbolName("libgtk3_kniBridge613")
private external fun kniBridge613(): ULong
@SymbolName("libgtk3_kniBridge614")
private external fun kniBridge614(): ULong
@SymbolName("libgtk3_kniBridge615")
private external fun kniBridge615(): ULong
@SymbolName("libgtk3_kniBridge616")
private external fun kniBridge616(): ULong
@SymbolName("libgtk3_kniBridge617")
private external fun kniBridge617(): ULong
@SymbolName("libgtk3_kniBridge618")
private external fun kniBridge618(): ULong
@SymbolName("libgtk3_kniBridge619")
private external fun kniBridge619(): ULong
@SymbolName("libgtk3_kniBridge620")
private external fun kniBridge620(): ULong
@SymbolName("libgtk3_kniBridge621")
private external fun kniBridge621(): ULong
@SymbolName("libgtk3_kniBridge622")
private external fun kniBridge622(): ULong
@SymbolName("libgtk3_kniBridge623")
private external fun kniBridge623(): ULong
@SymbolName("libgtk3_kniBridge624")
private external fun kniBridge624(): ULong
@SymbolName("libgtk3_kniBridge625")
private external fun kniBridge625(): ULong
