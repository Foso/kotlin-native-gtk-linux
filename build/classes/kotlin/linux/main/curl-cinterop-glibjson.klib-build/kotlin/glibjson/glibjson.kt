@file:kotlinx.cinterop.InteropStubs
@file:Suppress("UNUSED_VARIABLE", "UNUSED_EXPRESSION")
package glibjson

import kotlin.native.SymbolName
import kotlinx.cinterop.internal.*
import kotlinx.cinterop.*
import cnames.structs.GTestCase
import cnames.structs.GTestSuite
import cnames.structs._GAction
import cnames.structs._GActionGroup
import cnames.structs._GActionMap
import cnames.structs._GAllocator
import cnames.structs._GAppInfo
import cnames.structs._GAppInfoMonitor
import cnames.structs._GAppLaunchContextPrivate
import cnames.structs._GApplicationCommandLinePrivate
import cnames.structs._GApplicationPrivate
import cnames.structs._GAsyncInitable
import cnames.structs._GAsyncQueue
import cnames.structs._GAsyncResult
import cnames.structs._GBinding
import cnames.structs._GBookmarkFile
import cnames.structs._GBufferedInputStreamPrivate
import cnames.structs._GBufferedOutputStreamPrivate
import cnames.structs._GBytes
import cnames.structs._GBytesIcon
import cnames.structs._GCache
import cnames.structs._GCancellablePrivate
import cnames.structs._GCharsetConverter
import cnames.structs._GChecksum
import cnames.structs._GConverter
import cnames.structs._GConverterInputStreamPrivate
import cnames.structs._GConverterOutputStreamPrivate
import cnames.structs._GCredentials
import cnames.structs._GCredentialsClass
import cnames.structs._GDBusActionGroup
import cnames.structs._GDBusAuthObserver
import cnames.structs._GDBusConnection
import cnames.structs._GDBusInterface
import cnames.structs._GDBusInterfaceSkeletonPrivate
import cnames.structs._GDBusMenuModel
import cnames.structs._GDBusMessage
import cnames.structs._GDBusMethodInvocation
import cnames.structs._GDBusObject
import cnames.structs._GDBusObjectManager
import cnames.structs._GDBusObjectManagerClientPrivate
import cnames.structs._GDBusObjectManagerServerPrivate
import cnames.structs._GDBusObjectProxyPrivate
import cnames.structs._GDBusObjectSkeletonPrivate
import cnames.structs._GDBusProxyPrivate
import cnames.structs._GDBusServer
import cnames.structs._GData
import cnames.structs._GDataInputStreamPrivate
import cnames.structs._GDataOutputStreamPrivate
import cnames.structs._GDatagramBased
import cnames.structs._GDateTime
import cnames.structs._GDir
import cnames.structs._GDrive
import cnames.structs._GDtlsClientConnection
import cnames.structs._GDtlsConnection
import cnames.structs._GDtlsServerConnection
import cnames.structs._GEmblem
import cnames.structs._GEmblemClass
import cnames.structs._GEmblemedIconPrivate
import cnames.structs._GFile
import cnames.structs._GFileAttributeMatcher
import cnames.structs._GFileDescriptorBased
import cnames.structs._GFileEnumeratorPrivate
import cnames.structs._GFileIOStreamPrivate
import cnames.structs._GFileIcon
import cnames.structs._GFileIconClass
import cnames.structs._GFileInfo
import cnames.structs._GFileInfoClass
import cnames.structs._GFileInputStreamPrivate
import cnames.structs._GFileMonitorPrivate
import cnames.structs._GFileOutputStreamPrivate
import cnames.structs._GFilenameCompleter
import cnames.structs._GHashTable
import cnames.structs._GHmac
import cnames.structs._GIConv
import cnames.structs._GIOExtension
import cnames.structs._GIOExtensionPoint
import cnames.structs._GIOModule
import cnames.structs._GIOModuleClass
import cnames.structs._GIOModuleScope
import cnames.structs._GIOSchedulerJob
import cnames.structs._GIOStreamAdapter
import cnames.structs._GIOStreamPrivate
import cnames.structs._GIcon
import cnames.structs._GInetAddressMaskPrivate
import cnames.structs._GInetAddressPrivate
import cnames.structs._GInetSocketAddressPrivate
import cnames.structs._GInitable
import cnames.structs._GInputStreamPrivate
import cnames.structs._GKeyFile
import cnames.structs._GListModel
import cnames.structs._GListStore
import cnames.structs._GLoadableIcon
import cnames.structs._GMainContext
import cnames.structs._GMainLoop
import cnames.structs._GMappedFile
import cnames.structs._GMarkupParseContext
import cnames.structs._GMatchInfo
import cnames.structs._GMemChunk
import cnames.structs._GMemoryInputStreamPrivate
import cnames.structs._GMemoryOutputStreamPrivate
import cnames.structs._GMenu
import cnames.structs._GMenuAttributeIterPrivate
import cnames.structs._GMenuItem
import cnames.structs._GMenuLinkIterPrivate
import cnames.structs._GMenuModelPrivate
import cnames.structs._GModule
import cnames.structs._GMount
import cnames.structs._GMountOperationPrivate
import cnames.structs._GNativeSocketAddress
import cnames.structs._GNetworkAddressPrivate
import cnames.structs._GNetworkMonitor
import cnames.structs._GNetworkServicePrivate
import cnames.structs._GNotification
import cnames.structs._GOptionContext
import cnames.structs._GOptionGroup
import cnames.structs._GOutputStreamPrivate
import cnames.structs._GParamSpecPool
import cnames.structs._GPatternSpec
import cnames.structs._GPermissionPrivate
import cnames.structs._GPollableInputStream
import cnames.structs._GPollableOutputStream
import cnames.structs._GPropertyAction
import cnames.structs._GProxy
import cnames.structs._GProxyAddressEnumeratorPrivate
import cnames.structs._GProxyAddressPrivate
import cnames.structs._GProxyResolver
import cnames.structs._GRand
import cnames.structs._GRegex
import cnames.structs._GRelation
import cnames.structs._GRemoteActionGroup
import cnames.structs._GResolverPrivate
import cnames.structs._GResource
import cnames.structs._GSeekable
import cnames.structs._GSequence
import cnames.structs._GSequenceNode
import cnames.structs._GSettingsBackend
import cnames.structs._GSettingsPrivate
import cnames.structs._GSettingsSchema
import cnames.structs._GSettingsSchemaKey
import cnames.structs._GSettingsSchemaSource
import cnames.structs._GSimpleAction
import cnames.structs._GSimpleActionGroupPrivate
import cnames.structs._GSimpleAsyncResult
import cnames.structs._GSimpleAsyncResultClass
import cnames.structs._GSimpleIOStream
import cnames.structs._GSimplePermission
import cnames.structs._GSimpleProxyResolverPrivate
import cnames.structs._GSocketClientPrivate
import cnames.structs._GSocketConnectable
import cnames.structs._GSocketConnectionPrivate
import cnames.structs._GSocketControlMessagePrivate
import cnames.structs._GSocketListenerPrivate
import cnames.structs._GSocketPrivate
import cnames.structs._GSocketServicePrivate
import cnames.structs._GSourcePrivate
import cnames.structs._GSrvTarget
import cnames.structs._GStringChunk
import cnames.structs._GSubprocess
import cnames.structs._GSubprocessLauncher
import cnames.structs._GTask
import cnames.structs._GTaskClass
import cnames.structs._GTcpConnectionPrivate
import cnames.structs._GTcpWrapperConnectionPrivate
import cnames.structs._GTestDBus
import cnames.structs._GThemedIcon
import cnames.structs._GThemedIconClass
import cnames.structs._GThreadedSocketServicePrivate
import cnames.structs._GTimeZone
import cnames.structs._GTimer
import cnames.structs._GTlsBackend
import cnames.structs._GTlsCertificatePrivate
import cnames.structs._GTlsClientConnection
import cnames.structs._GTlsConnectionPrivate
import cnames.structs._GTlsDatabasePrivate
import cnames.structs._GTlsFileDatabase
import cnames.structs._GTlsInteractionPrivate
import cnames.structs._GTlsPasswordPrivate
import cnames.structs._GTlsServerConnection
import cnames.structs._GTree
import cnames.structs._GTypeCValue
import cnames.structs._GTypePlugin
import cnames.structs._GUnixCredentialsMessage
import cnames.structs._GUnixFDList
import cnames.structs._GVariant
import cnames.structs._GVariantType
import cnames.structs._GVolume
import cnames.structs._GZlibCompressor
import cnames.structs._GZlibDecompressor
import cnames.structs._JsonArray
import cnames.structs._JsonBuilderPrivate
import cnames.structs._JsonGeneratorPrivate
import cnames.structs._JsonNode
import cnames.structs._JsonObject
import cnames.structs._JsonParserPrivate
import cnames.structs._JsonPath
import cnames.structs._JsonPathClass
import cnames.structs._JsonReaderPrivate
import cnames.structs._JsonSerializable
import platform.posix.pid_t
import platform.posix.pthread_mutex_t
import platform.posix.pthread_t
import platform.posix.pthread_tVar
import platform.posix.time_t
import platform.posix.time_tVar
import platform.posix.tm
import platform.posix.uid_t
import platform.posix.va_list

// NOTE THIS FILE IS AUTO-GENERATED

@CStruct("union { double p0; null p1; }")
class _GDoubleIEEE754(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(8, 8)
    
    var v_double: gdouble
        get() = memberAt<gdoubleVar>(0).value
        set(value) { memberAt<gdoubleVar>(0).value = value }
    
    val mpn: anonymousStruct1
        get() = memberAt(0)
}

class anonymousStruct1(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(8, 4)
    
    var mantissa_low: guint
        get() = readBits(this.rawPtr, 0, 32, false).toUInt()
        set(value) { writeBits(this.rawPtr, 0, 32, value.toLong()) }
    
    var mantissa_high: guint
        get() = readBits(this.rawPtr, 32, 20, false).toUInt()
        set(value) { writeBits(this.rawPtr, 32, 20, value.toLong()) }
    
    var biased_exponent: guint
        get() = readBits(this.rawPtr, 52, 11, false).toUInt()
        set(value) { writeBits(this.rawPtr, 52, 11, value.toLong()) }
    
    var sign: guint
        get() = readBits(this.rawPtr, 63, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 63, 1, value.toLong()) }
}

@CStruct("union { float p0; null p1; }")
class _GFloatIEEE754(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(4, 4)
    
    var v_float: gfloat
        get() = memberAt<gfloatVar>(0).value
        set(value) { memberAt<gfloatVar>(0).value = value }
    
    val mpn: anonymousStruct2
        get() = memberAt(0)
}

class anonymousStruct2(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(4, 4)
    
    var mantissa: guint
        get() = readBits(this.rawPtr, 0, 23, false).toUInt()
        set(value) { writeBits(this.rawPtr, 0, 23, value.toLong()) }
    
    var biased_exponent: guint
        get() = readBits(this.rawPtr, 23, 8, false).toUInt()
        set(value) { writeBits(this.rawPtr, 23, 8, value.toLong()) }
    
    var sign: guint
        get() = readBits(this.rawPtr, 31, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 31, 1, value.toLong()) }
}

@CStruct("struct { long p0; long p1; }")
class _GTimeVal(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    var tv_sec: glong
        get() = memberAt<glongVar>(0).value
        set(value) { memberAt<glongVar>(0).value = value }
    
    var tv_usec: glong
        get() = memberAt<glongVar>(8).value
        set(value) { memberAt<glongVar>(8).value = value }
}

@CStruct("struct { void* p0; unsigned int p1; }")
class _GArray(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    var data: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(0).value
        set(value) { memberAt<CPointerVar<gcharVar>>(0).value = value }
    
    var len: guint
        get() = memberAt<guintVar>(8).value
        set(value) { memberAt<guintVar>(8).value = value }
}

@CStruct("struct { void* p0; unsigned int p1; }")
class _GByteArray(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    var data: CPointer<guint8Var>?
        get() = memberAt<CPointerVar<guint8Var>>(0).value
        set(value) { memberAt<CPointerVar<guint8Var>>(0).value = value }
    
    var len: guint
        get() = memberAt<guintVar>(8).value
        set(value) { memberAt<guintVar>(8).value = value }
}

@CStruct("struct { void* p0; unsigned int p1; }")
class _GPtrArray(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    var pdata: CPointer<gpointerVar>?
        get() = memberAt<CPointerVar<gpointerVar>>(0).value
        set(value) { memberAt<CPointerVar<gpointerVar>>(0).value = value }
    
    var len: guint
        get() = memberAt<guintVar>(8).value
        set(value) { memberAt<guintVar>(8).value = value }
}

@CStruct("struct { unsigned int p0; int p1; void* p2; }")
class _GError(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    var domain: GQuark
        get() = memberAt<GQuarkVar>(0).value
        set(value) { memberAt<GQuarkVar>(0).value = value }
    
    var code: gint
        get() = memberAt<gintVar>(4).value
        set(value) { memberAt<gintVar>(4).value = value }
    
    var message: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(8).value
        set(value) { memberAt<CPointerVar<gcharVar>>(8).value = value }
}

@CStruct("struct { void* p0; unsigned int p1; }")
class _GDebugKey(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    var key: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(0).value
        set(value) { memberAt<CPointerVar<gcharVar>>(0).value = value }
    
    var value: guint
        get() = memberAt<guintVar>(8).value
        set(value) { memberAt<guintVar>(8).value = value }
}

@CStruct("struct { void* p0; void* p1; int p2; unsigned int p3; }")
class _GThread(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    var func: GThreadFunc?
        get() = memberAt<GThreadFuncVar>(0).value
        set(value) { memberAt<GThreadFuncVar>(0).value = value }
    
    var data: gpointer?
        get() = memberAt<gpointerVar>(8).value
        set(value) { memberAt<gpointerVar>(8).value = value }
    
    var joinable: gboolean
        get() = memberAt<gbooleanVar>(16).value
        set(value) { memberAt<gbooleanVar>(16).value = value }
    
    var priority: GThreadPriority
        get() = memberAt<GThreadPriority.Var>(20).value
        set(value) { memberAt<GThreadPriority.Var>(20).value = value }
}

@CStruct("union { void* p0; unsigned int p1[2]; }")
class _GMutex(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(8, 8)
    
    var p: gpointer?
        get() = memberAt<gpointerVar>(0).value
        set(value) { memberAt<gpointerVar>(0).value = value }
    
    val i: CArrayPointer<guintVar>
        get() = arrayMemberAt(0)
}

@CStruct("struct { void* p0; unsigned int p1[2]; }")
class _GRecMutex(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    var p: gpointer?
        get() = memberAt<gpointerVar>(0).value
        set(value) { memberAt<gpointerVar>(0).value = value }
    
    val i: CArrayPointer<guintVar>
        get() = arrayMemberAt(8)
}

@CStruct("struct { void* p0; unsigned int p1[2]; }")
class _GRWLock(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    var p: gpointer?
        get() = memberAt<gpointerVar>(0).value
        set(value) { memberAt<gpointerVar>(0).value = value }
    
    val i: CArrayPointer<guintVar>
        get() = arrayMemberAt(8)
}

@CStruct("struct { void* p0; unsigned int p1[2]; }")
class _GCond(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    var p: gpointer?
        get() = memberAt<gpointerVar>(0).value
        set(value) { memberAt<gpointerVar>(0).value = value }
    
    val i: CArrayPointer<guintVar>
        get() = arrayMemberAt(8)
}

@CStruct("struct { void* p0; void* p1; void* p2[2]; }")
class _GPrivate(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    var p: gpointer?
        get() = memberAt<gpointerVar>(0).value
        set(value) { memberAt<gpointerVar>(0).value = value }
    
    var notify: GDestroyNotify?
        get() = memberAt<GDestroyNotifyVar>(8).value
        set(value) { memberAt<GDestroyNotifyVar>(8).value = value }
    
    val future: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(16)
}

@CStruct("struct { unsigned int p0; void* p1; }")
class _GOnce(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    var status: GOnceStatus
        get() = memberAt<GOnceStatus.Var>(0).value
        set(value) { memberAt<GOnceStatus.Var>(0).value = value }
    
    var retval: gpointer?
        get() = memberAt<gpointerVar>(8).value
        set(value) { memberAt<gpointerVar>(8).value = value }
}

class _GDate(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(8, 4)
    
    var julian_days: guint
        get() = readBits(this.rawPtr, 0, 32, false).toUInt()
        set(value) { writeBits(this.rawPtr, 0, 32, value.toLong()) }
    
    var julian: guint
        get() = readBits(this.rawPtr, 32, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 32, 1, value.toLong()) }
    
    var dmy: guint
        get() = readBits(this.rawPtr, 33, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 33, 1, value.toLong()) }
    
    var day: guint
        get() = readBits(this.rawPtr, 34, 6, false).toUInt()
        set(value) { writeBits(this.rawPtr, 34, 6, value.toLong()) }
    
    var month: guint
        get() = readBits(this.rawPtr, 40, 4, false).toUInt()
        set(value) { writeBits(this.rawPtr, 40, 4, value.toLong()) }
    
    var year: guint
        get() = readBits(this.rawPtr, 44, 16, false).toUInt()
        set(value) { writeBits(this.rawPtr, 44, 16, value.toLong()) }
}

@CStruct("struct { void* p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GMemVTable(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    var malloc: CPointer<CFunction<(gsize) -> gpointer?>>?
        get() = memberAt<CPointerVar<CFunction<(gsize) -> gpointer?>>>(0).value
        set(value) { memberAt<CPointerVar<CFunction<(gsize) -> gpointer?>>>(0).value = value }
    
    var realloc: CPointer<CFunction<(gpointer?, gsize) -> gpointer?>>?
        get() = memberAt<CPointerVar<CFunction<(gpointer?, gsize) -> gpointer?>>>(8).value
        set(value) { memberAt<CPointerVar<CFunction<(gpointer?, gsize) -> gpointer?>>>(8).value = value }
    
    var free: CPointer<CFunction<(gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(gpointer?) -> Unit>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(gpointer?) -> Unit>>>(16).value = value }
    
    var calloc: CPointer<CFunction<(gsize, gsize) -> gpointer?>>?
        get() = memberAt<CPointerVar<CFunction<(gsize, gsize) -> gpointer?>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(gsize, gsize) -> gpointer?>>>(24).value = value }
    
    var try_malloc: CPointer<CFunction<(gsize) -> gpointer?>>?
        get() = memberAt<CPointerVar<CFunction<(gsize) -> gpointer?>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(gsize) -> gpointer?>>>(32).value = value }
    
    var try_realloc: CPointer<CFunction<(gpointer?, gsize) -> gpointer?>>?
        get() = memberAt<CPointerVar<CFunction<(gpointer?, gsize) -> gpointer?>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(gpointer?, gsize) -> gpointer?>>>(40).value = value }
}

@CStruct("struct { void* p0; void* p1; void* p2; void* p3; void* p4; }")
class _GNode(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    var data: gpointer?
        get() = memberAt<gpointerVar>(0).value
        set(value) { memberAt<gpointerVar>(0).value = value }
    
    var next: CPointer<GNode>?
        get() = memberAt<CPointerVar<GNode>>(8).value
        set(value) { memberAt<CPointerVar<GNode>>(8).value = value }
    
    var prev: CPointer<GNode>?
        get() = memberAt<CPointerVar<GNode>>(16).value
        set(value) { memberAt<CPointerVar<GNode>>(16).value = value }
    
    var parent: CPointer<GNode>?
        get() = memberAt<CPointerVar<GNode>>(24).value
        set(value) { memberAt<CPointerVar<GNode>>(24).value = value }
    
    var children: CPointer<GNode>?
        get() = memberAt<CPointerVar<GNode>>(32).value
        set(value) { memberAt<CPointerVar<GNode>>(32).value = value }
}

@CStruct("struct { void* p0; void* p1; void* p2; }")
class _GList(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    var data: gpointer?
        get() = memberAt<gpointerVar>(0).value
        set(value) { memberAt<gpointerVar>(0).value = value }
    
    var next: CPointer<GList>?
        get() = memberAt<CPointerVar<GList>>(8).value
        set(value) { memberAt<CPointerVar<GList>>(8).value = value }
    
    var prev: CPointer<GList>?
        get() = memberAt<CPointerVar<GList>>(16).value
        set(value) { memberAt<CPointerVar<GList>>(16).value = value }
}

@CStruct("struct { void* p0; void* p1; void* p2; int p3; int p4; void* p5; }")
class _GHashTableIter(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    var dummy1: gpointer?
        get() = memberAt<gpointerVar>(0).value
        set(value) { memberAt<gpointerVar>(0).value = value }
    
    var dummy2: gpointer?
        get() = memberAt<gpointerVar>(8).value
        set(value) { memberAt<gpointerVar>(8).value = value }
    
    var dummy3: gpointer?
        get() = memberAt<gpointerVar>(16).value
        set(value) { memberAt<gpointerVar>(16).value = value }
    
    var dummy4: Int
        get() = memberAt<IntVar>(24).value
        set(value) { memberAt<IntVar>(24).value = value }
    
    var dummy5: gboolean
        get() = memberAt<gbooleanVar>(28).value
        set(value) { memberAt<gbooleanVar>(28).value = value }
    
    var dummy6: gpointer?
        get() = memberAt<gpointerVar>(32).value
        set(value) { memberAt<gpointerVar>(32).value = value }
}

@CStruct("struct { void* p0; void* p1; void* p2; unsigned int p3; unsigned long p4; unsigned int p5; void* p6; void* p7; }")
class _GHook(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(64, 8)
    
    var data: gpointer?
        get() = memberAt<gpointerVar>(0).value
        set(value) { memberAt<gpointerVar>(0).value = value }
    
    var next: CPointer<GHook>?
        get() = memberAt<CPointerVar<GHook>>(8).value
        set(value) { memberAt<CPointerVar<GHook>>(8).value = value }
    
    var prev: CPointer<GHook>?
        get() = memberAt<CPointerVar<GHook>>(16).value
        set(value) { memberAt<CPointerVar<GHook>>(16).value = value }
    
    var ref_count: guint
        get() = memberAt<guintVar>(24).value
        set(value) { memberAt<guintVar>(24).value = value }
    
    var hook_id: gulong
        get() = memberAt<gulongVar>(32).value
        set(value) { memberAt<gulongVar>(32).value = value }
    
    var flags: guint
        get() = memberAt<guintVar>(40).value
        set(value) { memberAt<guintVar>(40).value = value }
    
    var func: gpointer?
        get() = memberAt<gpointerVar>(48).value
        set(value) { memberAt<gpointerVar>(48).value = value }
    
    var destroy: GDestroyNotify?
        get() = memberAt<GDestroyNotifyVar>(56).value
        set(value) { memberAt<GDestroyNotifyVar>(56).value = value }
}

class _GHookList(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    var seq_id: gulong
        get() = memberAt<gulongVar>(0).value
        set(value) { memberAt<gulongVar>(0).value = value }
    
    var hooks: CPointer<GHook>?
        get() = memberAt<CPointerVar<GHook>>(16).value
        set(value) { memberAt<CPointerVar<GHook>>(16).value = value }
    
    var dummy3: gpointer?
        get() = memberAt<gpointerVar>(24).value
        set(value) { memberAt<gpointerVar>(24).value = value }
    
    var finalize_hook: GHookFinalizeFunc?
        get() = memberAt<GHookFinalizeFuncVar>(32).value
        set(value) { memberAt<GHookFinalizeFuncVar>(32).value = value }
    
    val dummy: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(40)
    
    var hook_size: guint
        get() = readBits(this.rawPtr, 64, 16, false).toUInt()
        set(value) { writeBits(this.rawPtr, 64, 16, value.toLong()) }
    
    var is_setup: guint
        get() = readBits(this.rawPtr, 80, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 80, 1, value.toLong()) }
}

@CStruct("struct { int p0; unsigned short p1; unsigned short p2; }")
class _GPollFD(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(8, 4)
    
    var fd: gint
        get() = memberAt<gintVar>(0).value
        set(value) { memberAt<gintVar>(0).value = value }
    
    var events: gushort
        get() = memberAt<gushortVar>(4).value
        set(value) { memberAt<gushortVar>(4).value = value }
    
    var revents: gushort
        get() = memberAt<gushortVar>(6).value
        set(value) { memberAt<gushortVar>(6).value = value }
}

@CStruct("struct { void* p0; void* p1; }")
class _GSList(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    var data: gpointer?
        get() = memberAt<gpointerVar>(0).value
        set(value) { memberAt<gpointerVar>(0).value = value }
    
    var next: CPointer<GSList>?
        get() = memberAt<CPointerVar<GSList>>(8).value
        set(value) { memberAt<CPointerVar<GSList>>(8).value = value }
}

@CStruct("struct { void* p0; void* p1; void* p2; unsigned int p3; void* p4; int p5; unsigned int p6; unsigned int p7; void* p8; void* p9; void* p10; void* p11; void* p12; }")
class _GSource(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(96, 8)
    
    var callback_data: gpointer?
        get() = memberAt<gpointerVar>(0).value
        set(value) { memberAt<gpointerVar>(0).value = value }
    
    var callback_funcs: CPointer<GSourceCallbackFuncs>?
        get() = memberAt<CPointerVar<GSourceCallbackFuncs>>(8).value
        set(value) { memberAt<CPointerVar<GSourceCallbackFuncs>>(8).value = value }
    
    var source_funcs: CPointer<GSourceFuncs>?
        get() = memberAt<CPointerVar<GSourceFuncs>>(16).value
        set(value) { memberAt<CPointerVar<GSourceFuncs>>(16).value = value }
    
    var ref_count: guint
        get() = memberAt<guintVar>(24).value
        set(value) { memberAt<guintVar>(24).value = value }
    
    var context: CPointer<GMainContext>?
        get() = memberAt<CPointerVar<GMainContext>>(32).value
        set(value) { memberAt<CPointerVar<GMainContext>>(32).value = value }
    
    var priority: gint
        get() = memberAt<gintVar>(40).value
        set(value) { memberAt<gintVar>(40).value = value }
    
    var flags: guint
        get() = memberAt<guintVar>(44).value
        set(value) { memberAt<guintVar>(44).value = value }
    
    var source_id: guint
        get() = memberAt<guintVar>(48).value
        set(value) { memberAt<guintVar>(48).value = value }
    
    var poll_fds: CPointer<GSList>?
        get() = memberAt<CPointerVar<GSList>>(56).value
        set(value) { memberAt<CPointerVar<GSList>>(56).value = value }
    
    var prev: CPointer<GSource>?
        get() = memberAt<CPointerVar<GSource>>(64).value
        set(value) { memberAt<CPointerVar<GSource>>(64).value = value }
    
    var next: CPointer<GSource>?
        get() = memberAt<CPointerVar<GSource>>(72).value
        set(value) { memberAt<CPointerVar<GSource>>(72).value = value }
    
    var name: CPointer<ByteVar>?
        get() = memberAt<CPointerVar<ByteVar>>(80).value
        set(value) { memberAt<CPointerVar<ByteVar>>(80).value = value }
    
    var priv: CPointer<GSourcePrivate>?
        get() = memberAt<CPointerVar<GSourcePrivate>>(88).value
        set(value) { memberAt<CPointerVar<GSourcePrivate>>(88).value = value }
}

@CStruct("struct { void* p0; void* p1; void* p2; }")
class _GSourceCallbackFuncs(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    var ref: CPointer<CFunction<(gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(gpointer?) -> Unit>>>(0).value
        set(value) { memberAt<CPointerVar<CFunction<(gpointer?) -> Unit>>>(0).value = value }
    
    var unref: CPointer<CFunction<(gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(gpointer?) -> Unit>>>(8).value
        set(value) { memberAt<CPointerVar<CFunction<(gpointer?) -> Unit>>>(8).value = value }
    
    var get: CPointer<CFunction<(gpointer?, CPointer<GSource>?, CPointer<GSourceFuncVar>?, CPointer<gpointerVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(gpointer?, CPointer<GSource>?, CPointer<GSourceFuncVar>?, CPointer<gpointerVar>?) -> Unit>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(gpointer?, CPointer<GSource>?, CPointer<GSourceFuncVar>?, CPointer<gpointerVar>?) -> Unit>>>(16).value = value }
}

@CStruct("struct { void* p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GSourceFuncs(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    var prepare: CPointer<CFunction<(CPointer<GSource>?, CPointer<gintVar>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSource>?, CPointer<gintVar>?) -> gboolean>>>(0).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSource>?, CPointer<gintVar>?) -> gboolean>>>(0).value = value }
    
    var check: CPointer<CFunction<(CPointer<GSource>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSource>?) -> gboolean>>>(8).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSource>?) -> gboolean>>>(8).value = value }
    
    var dispatch: CPointer<CFunction<(CPointer<GSource>?, GSourceFunc?, gpointer?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSource>?, GSourceFunc?, gpointer?) -> gboolean>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSource>?, GSourceFunc?, gpointer?) -> gboolean>>>(16).value = value }
    
    var finalize: CPointer<CFunction<(CPointer<GSource>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSource>?) -> Unit>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSource>?) -> Unit>>>(24).value = value }
    
    var closure_callback: GSourceFunc?
        get() = memberAt<GSourceFuncVar>(32).value
        set(value) { memberAt<GSourceFuncVar>(32).value = value }
    
    var closure_marshal: GSourceDummyMarshal?
        get() = memberAt<GSourceDummyMarshalVar>(40).value
        set(value) { memberAt<GSourceDummyMarshalVar>(40).value = value }
}

@CStruct("struct { void* p0; unsigned long p1; unsigned long p2; }")
class _GString(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    var str: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(0).value
        set(value) { memberAt<CPointerVar<gcharVar>>(0).value = value }
    
    var len: gsize
        get() = memberAt<gsizeVar>(8).value
        set(value) { memberAt<gsizeVar>(8).value = value }
    
    var allocated_len: gsize
        get() = memberAt<gsizeVar>(16).value
        set(value) { memberAt<gsizeVar>(16).value = value }
}

class _GIOChannel(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(112, 8)
    
    var ref_count: gint
        get() = memberAt<gintVar>(0).value
        set(value) { memberAt<gintVar>(0).value = value }
    
    var funcs: CPointer<GIOFuncs>?
        get() = memberAt<CPointerVar<GIOFuncs>>(8).value
        set(value) { memberAt<CPointerVar<GIOFuncs>>(8).value = value }
    
    var encoding: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(16).value
        set(value) { memberAt<CPointerVar<gcharVar>>(16).value = value }
    
    var read_cd: GIConv?
        get() = memberAt<GIConvVar>(24).value
        set(value) { memberAt<GIConvVar>(24).value = value }
    
    var write_cd: GIConv?
        get() = memberAt<GIConvVar>(32).value
        set(value) { memberAt<GIConvVar>(32).value = value }
    
    var line_term: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(40).value
        set(value) { memberAt<CPointerVar<gcharVar>>(40).value = value }
    
    var line_term_len: guint
        get() = memberAt<guintVar>(48).value
        set(value) { memberAt<guintVar>(48).value = value }
    
    var buf_size: gsize
        get() = memberAt<gsizeVar>(56).value
        set(value) { memberAt<gsizeVar>(56).value = value }
    
    var read_buf: CPointer<GString>?
        get() = memberAt<CPointerVar<GString>>(64).value
        set(value) { memberAt<CPointerVar<GString>>(64).value = value }
    
    var encoded_read_buf: CPointer<GString>?
        get() = memberAt<CPointerVar<GString>>(72).value
        set(value) { memberAt<CPointerVar<GString>>(72).value = value }
    
    var write_buf: CPointer<GString>?
        get() = memberAt<CPointerVar<GString>>(80).value
        set(value) { memberAt<CPointerVar<GString>>(80).value = value }
    
    val partial_write_buf: CArrayPointer<gcharVar>
        get() = arrayMemberAt(88)
    
    var reserved1: gpointer?
        get() = memberAt<gpointerVar>(96).value
        set(value) { memberAt<gpointerVar>(96).value = value }
    
    var reserved2: gpointer?
        get() = memberAt<gpointerVar>(104).value
        set(value) { memberAt<gpointerVar>(104).value = value }
    
    var use_buffer: guint
        get() = readBits(this.rawPtr, 752, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 752, 1, value.toLong()) }
    
    var do_encode: guint
        get() = readBits(this.rawPtr, 753, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 753, 1, value.toLong()) }
    
    var close_on_unref: guint
        get() = readBits(this.rawPtr, 754, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 754, 1, value.toLong()) }
    
    var is_readable: guint
        get() = readBits(this.rawPtr, 755, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 755, 1, value.toLong()) }
    
    var is_writeable: guint
        get() = readBits(this.rawPtr, 756, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 756, 1, value.toLong()) }
    
    var is_seekable: guint
        get() = readBits(this.rawPtr, 757, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 757, 1, value.toLong()) }
}

@CStruct("struct { void* p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; }")
class _GIOFuncs(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(64, 8)
    
    var io_read: CPointer<CFunction<(CPointer<GIOChannel>?, CPointer<gcharVar>?, gsize, CPointer<gsizeVar>?, CPointer<CPointerVar<GError>>?) -> GIOStatus>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GIOChannel>?, CPointer<gcharVar>?, gsize, CPointer<gsizeVar>?, CPointer<CPointerVar<GError>>?) -> GIOStatus>>>(0).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GIOChannel>?, CPointer<gcharVar>?, gsize, CPointer<gsizeVar>?, CPointer<CPointerVar<GError>>?) -> GIOStatus>>>(0).value = value }
    
    var io_write: CPointer<CFunction<(CPointer<GIOChannel>?, CPointer<gcharVar>?, gsize, CPointer<gsizeVar>?, CPointer<CPointerVar<GError>>?) -> GIOStatus>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GIOChannel>?, CPointer<gcharVar>?, gsize, CPointer<gsizeVar>?, CPointer<CPointerVar<GError>>?) -> GIOStatus>>>(8).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GIOChannel>?, CPointer<gcharVar>?, gsize, CPointer<gsizeVar>?, CPointer<CPointerVar<GError>>?) -> GIOStatus>>>(8).value = value }
    
    var io_seek: CPointer<CFunction<(CPointer<GIOChannel>?, gint64, GSeekType, CPointer<CPointerVar<GError>>?) -> GIOStatus>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GIOChannel>?, gint64, GSeekType, CPointer<CPointerVar<GError>>?) -> GIOStatus>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GIOChannel>?, gint64, GSeekType, CPointer<CPointerVar<GError>>?) -> GIOStatus>>>(16).value = value }
    
    var io_close: CPointer<CFunction<(CPointer<GIOChannel>?, CPointer<CPointerVar<GError>>?) -> GIOStatus>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GIOChannel>?, CPointer<CPointerVar<GError>>?) -> GIOStatus>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GIOChannel>?, CPointer<CPointerVar<GError>>?) -> GIOStatus>>>(24).value = value }
    
    var io_create_watch: CPointer<CFunction<(CPointer<GIOChannel>?, GIOCondition) -> CPointer<GSource>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GIOChannel>?, GIOCondition) -> CPointer<GSource>?>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GIOChannel>?, GIOCondition) -> CPointer<GSource>?>>>(32).value = value }
    
    var io_free: CPointer<CFunction<(CPointer<GIOChannel>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GIOChannel>?) -> Unit>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GIOChannel>?) -> Unit>>>(40).value = value }
    
    var io_set_flags: CPointer<CFunction<(CPointer<GIOChannel>?, GIOFlags, CPointer<CPointerVar<GError>>?) -> GIOStatus>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GIOChannel>?, GIOFlags, CPointer<CPointerVar<GError>>?) -> GIOStatus>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GIOChannel>?, GIOFlags, CPointer<CPointerVar<GError>>?) -> GIOStatus>>>(48).value = value }
    
    var io_get_flags: CPointer<CFunction<(CPointer<GIOChannel>?) -> GIOFlags>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GIOChannel>?) -> GIOFlags>>>(56).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GIOChannel>?) -> GIOFlags>>>(56).value = value }
}

@CStruct("struct { void* p0; void* p1; void* p2; void* p3; void* p4; }")
class _GMarkupParser(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    var start_element: CPointer<CFunction<(CPointer<GMarkupParseContext>?, CPointer<gcharVar>?, CPointer<CPointerVar<gcharVar>>?, CPointer<CPointerVar<gcharVar>>?, gpointer?, CPointer<CPointerVar<GError>>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMarkupParseContext>?, CPointer<gcharVar>?, CPointer<CPointerVar<gcharVar>>?, CPointer<CPointerVar<gcharVar>>?, gpointer?, CPointer<CPointerVar<GError>>?) -> Unit>>>(0).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMarkupParseContext>?, CPointer<gcharVar>?, CPointer<CPointerVar<gcharVar>>?, CPointer<CPointerVar<gcharVar>>?, gpointer?, CPointer<CPointerVar<GError>>?) -> Unit>>>(0).value = value }
    
    var end_element: CPointer<CFunction<(CPointer<GMarkupParseContext>?, CPointer<gcharVar>?, gpointer?, CPointer<CPointerVar<GError>>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMarkupParseContext>?, CPointer<gcharVar>?, gpointer?, CPointer<CPointerVar<GError>>?) -> Unit>>>(8).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMarkupParseContext>?, CPointer<gcharVar>?, gpointer?, CPointer<CPointerVar<GError>>?) -> Unit>>>(8).value = value }
    
    var text: CPointer<CFunction<(CPointer<GMarkupParseContext>?, CPointer<gcharVar>?, gsize, gpointer?, CPointer<CPointerVar<GError>>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMarkupParseContext>?, CPointer<gcharVar>?, gsize, gpointer?, CPointer<CPointerVar<GError>>?) -> Unit>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMarkupParseContext>?, CPointer<gcharVar>?, gsize, gpointer?, CPointer<CPointerVar<GError>>?) -> Unit>>>(16).value = value }
    
    var passthrough: CPointer<CFunction<(CPointer<GMarkupParseContext>?, CPointer<gcharVar>?, gsize, gpointer?, CPointer<CPointerVar<GError>>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMarkupParseContext>?, CPointer<gcharVar>?, gsize, gpointer?, CPointer<CPointerVar<GError>>?) -> Unit>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMarkupParseContext>?, CPointer<gcharVar>?, gsize, gpointer?, CPointer<CPointerVar<GError>>?) -> Unit>>>(24).value = value }
    
    var error: CPointer<CFunction<(CPointer<GMarkupParseContext>?, CPointer<GError>?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMarkupParseContext>?, CPointer<GError>?, gpointer?) -> Unit>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMarkupParseContext>?, CPointer<GError>?, gpointer?) -> Unit>>>(32).value = value }
}

@CStruct("struct { unsigned long p0[16]; }")
class _GVariantIter(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(128, 8)
    
    val x: CArrayPointer<gsizeVar>
        get() = arrayMemberAt(0)
}

@CStruct("struct { union { struct { unsigned long p0; void* p1; unsigned long p2[14]; } p0; unsigned long p1[16]; } p0; }")
class _GVariantBuilder(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(128, 8)
    
    val u: anonymousStruct3
        get() = memberAt(0)
}

@CStruct("union { struct { unsigned long p0; void* p1; unsigned long p2[14]; } p0; unsigned long p1[16]; }")
class anonymousStruct3(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(128, 8)
    
    val s: anonymousStruct4
        get() = memberAt(0)
    
    val x: CArrayPointer<gsizeVar>
        get() = arrayMemberAt(0)
}

@CStruct("struct { unsigned long p0; void* p1; unsigned long p2[14]; }")
class anonymousStruct4(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(128, 8)
    
    var partial_magic: gsize
        get() = memberAt<gsizeVar>(0).value
        set(value) { memberAt<gsizeVar>(0).value = value }
    
    var type: CPointer<GVariantType>?
        get() = memberAt<CPointerVar<GVariantType>>(8).value
        set(value) { memberAt<CPointerVar<GVariantType>>(8).value = value }
    
    val y: CArrayPointer<gsizeVar>
        get() = arrayMemberAt(16)
}

@CStruct("struct { union { struct { void* p0; unsigned long p1; unsigned long p2[14]; } p0; unsigned long p1[16]; } p0; }")
class _GVariantDict(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(128, 8)
    
    val u: anonymousStruct5
        get() = memberAt(0)
}

@CStruct("union { struct { void* p0; unsigned long p1; unsigned long p2[14]; } p0; unsigned long p1[16]; }")
class anonymousStruct5(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(128, 8)
    
    val s: anonymousStruct6
        get() = memberAt(0)
    
    val x: CArrayPointer<gsizeVar>
        get() = arrayMemberAt(0)
}

@CStruct("struct { void* p0; unsigned long p1; unsigned long p2[14]; }")
class anonymousStruct6(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(128, 8)
    
    var asv: CPointer<GVariant>?
        get() = memberAt<CPointerVar<GVariant>>(0).value
        set(value) { memberAt<CPointerVar<GVariant>>(0).value = value }
    
    var partial_magic: gsize
        get() = memberAt<gsizeVar>(8).value
        set(value) { memberAt<gsizeVar>(8).value = value }
    
    val y: CArrayPointer<gsizeVar>
        get() = arrayMemberAt(16)
}

@CStruct("struct { void* p0; void* p1; long p2; }")
class _GLogField(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    var key: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(0).value
        set(value) { memberAt<CPointerVar<gcharVar>>(0).value = value }
    
    var value: gconstpointer?
        get() = memberAt<gconstpointerVar>(8).value
        set(value) { memberAt<gconstpointerVar>(8).value = value }
    
    var length: gssize
        get() = memberAt<gssizeVar>(16).value
        set(value) { memberAt<gssizeVar>(16).value = value }
}

@CStruct("struct { void* p0; char p1; int p2; unsigned int p3; void* p4; void* p5; void* p6; }")
class _GOptionEntry(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    var long_name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(0).value
        set(value) { memberAt<CPointerVar<gcharVar>>(0).value = value }
    
    var short_name: gchar
        get() = memberAt<gcharVar>(8).value
        set(value) { memberAt<gcharVar>(8).value = value }
    
    var flags: gint
        get() = memberAt<gintVar>(12).value
        set(value) { memberAt<gintVar>(12).value = value }
    
    var arg: GOptionArg
        get() = memberAt<GOptionArg.Var>(16).value
        set(value) { memberAt<GOptionArg.Var>(16).value = value }
    
    var arg_data: gpointer?
        get() = memberAt<gpointerVar>(24).value
        set(value) { memberAt<gpointerVar>(24).value = value }
    
    var description: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(32).value
        set(value) { memberAt<CPointerVar<gcharVar>>(32).value = value }
    
    var arg_description: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(40).value
        set(value) { memberAt<CPointerVar<gcharVar>>(40).value = value }
}

@CStruct("struct { void* p0; void* p1; unsigned int p2; }")
class _GQueue(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    var head: CPointer<GList>?
        get() = memberAt<CPointerVar<GList>>(0).value
        set(value) { memberAt<CPointerVar<GList>>(0).value = value }
    
    var tail: CPointer<GList>?
        get() = memberAt<CPointerVar<GList>>(8).value
        set(value) { memberAt<CPointerVar<GList>>(8).value = value }
    
    var length: guint
        get() = memberAt<guintVar>(16).value
        set(value) { memberAt<guintVar>(16).value = value }
}

@CStruct("struct { void* p0; unsigned int p1; unsigned int p2; void* p3; void* p4; void* p5; unsigned int p6; union { void* p0; void* p1; unsigned long p2; unsigned long p3; unsigned long p4; unsigned long p5; double p6; unsigned long p7; void* p8; void* p9; unsigned char p10; unsigned int p11; } p7; unsigned int p8; unsigned int p9; unsigned int p10; union { void* p0; void* p1; unsigned long p2; unsigned long p3; unsigned long p4; unsigned long p5; double p6; unsigned long p7; void* p8; void* p9; unsigned char p10; unsigned int p11; } p11; unsigned int p12; unsigned int p13; void* p14; int p15; void* p16; void* p17; void* p18; unsigned int p19; void* p20; }")
class _GScanner(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(144, 8)
    
    var user_data: gpointer?
        get() = memberAt<gpointerVar>(0).value
        set(value) { memberAt<gpointerVar>(0).value = value }
    
    var max_parse_errors: guint
        get() = memberAt<guintVar>(8).value
        set(value) { memberAt<guintVar>(8).value = value }
    
    var parse_errors: guint
        get() = memberAt<guintVar>(12).value
        set(value) { memberAt<guintVar>(12).value = value }
    
    var input_name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(16).value
        set(value) { memberAt<CPointerVar<gcharVar>>(16).value = value }
    
    var qdata: CPointer<GData>?
        get() = memberAt<CPointerVar<GData>>(24).value
        set(value) { memberAt<CPointerVar<GData>>(24).value = value }
    
    var config: CPointer<GScannerConfig>?
        get() = memberAt<CPointerVar<GScannerConfig>>(32).value
        set(value) { memberAt<CPointerVar<GScannerConfig>>(32).value = value }
    
    var token: GTokenType
        get() = memberAt<GTokenTypeVar>(40).value
        set(value) { memberAt<GTokenTypeVar>(40).value = value }
    
    val value: GTokenValue
        get() = memberAt(48)
    
    var line: guint
        get() = memberAt<guintVar>(56).value
        set(value) { memberAt<guintVar>(56).value = value }
    
    var position: guint
        get() = memberAt<guintVar>(60).value
        set(value) { memberAt<guintVar>(60).value = value }
    
    var next_token: GTokenType
        get() = memberAt<GTokenTypeVar>(64).value
        set(value) { memberAt<GTokenTypeVar>(64).value = value }
    
    val next_value: GTokenValue
        get() = memberAt(72)
    
    var next_line: guint
        get() = memberAt<guintVar>(80).value
        set(value) { memberAt<guintVar>(80).value = value }
    
    var next_position: guint
        get() = memberAt<guintVar>(84).value
        set(value) { memberAt<guintVar>(84).value = value }
    
    var symbol_table: CPointer<GHashTable>?
        get() = memberAt<CPointerVar<GHashTable>>(88).value
        set(value) { memberAt<CPointerVar<GHashTable>>(88).value = value }
    
    var input_fd: gint
        get() = memberAt<gintVar>(96).value
        set(value) { memberAt<gintVar>(96).value = value }
    
    var text: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(104).value
        set(value) { memberAt<CPointerVar<gcharVar>>(104).value = value }
    
    var text_end: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(112).value
        set(value) { memberAt<CPointerVar<gcharVar>>(112).value = value }
    
    var buffer: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(120).value
        set(value) { memberAt<CPointerVar<gcharVar>>(120).value = value }
    
    var scope_id: guint
        get() = memberAt<guintVar>(128).value
        set(value) { memberAt<guintVar>(128).value = value }
    
    var msg_handler: GScannerMsgFunc?
        get() = memberAt<GScannerMsgFuncVar>(136).value
        set(value) { memberAt<GScannerMsgFuncVar>(136).value = value }
}

class _GScannerConfig(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    var cset_skip_characters: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(0).value
        set(value) { memberAt<CPointerVar<gcharVar>>(0).value = value }
    
    var cset_identifier_first: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(8).value
        set(value) { memberAt<CPointerVar<gcharVar>>(8).value = value }
    
    var cset_identifier_nth: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(16).value
        set(value) { memberAt<CPointerVar<gcharVar>>(16).value = value }
    
    var cpair_comment_single: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(24).value
        set(value) { memberAt<CPointerVar<gcharVar>>(24).value = value }
    
    var padding_dummy: guint
        get() = memberAt<guintVar>(36).value
        set(value) { memberAt<guintVar>(36).value = value }
    
    var case_sensitive: guint
        get() = readBits(this.rawPtr, 256, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 256, 1, value.toLong()) }
    
    var skip_comment_multi: guint
        get() = readBits(this.rawPtr, 257, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 257, 1, value.toLong()) }
    
    var skip_comment_single: guint
        get() = readBits(this.rawPtr, 258, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 258, 1, value.toLong()) }
    
    var scan_comment_multi: guint
        get() = readBits(this.rawPtr, 259, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 259, 1, value.toLong()) }
    
    var scan_identifier: guint
        get() = readBits(this.rawPtr, 260, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 260, 1, value.toLong()) }
    
    var scan_identifier_1char: guint
        get() = readBits(this.rawPtr, 261, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 261, 1, value.toLong()) }
    
    var scan_identifier_NULL: guint
        get() = readBits(this.rawPtr, 262, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 262, 1, value.toLong()) }
    
    var scan_symbols: guint
        get() = readBits(this.rawPtr, 263, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 263, 1, value.toLong()) }
    
    var scan_binary: guint
        get() = readBits(this.rawPtr, 264, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 264, 1, value.toLong()) }
    
    var scan_octal: guint
        get() = readBits(this.rawPtr, 265, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 265, 1, value.toLong()) }
    
    var scan_float: guint
        get() = readBits(this.rawPtr, 266, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 266, 1, value.toLong()) }
    
    var scan_hex: guint
        get() = readBits(this.rawPtr, 267, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 267, 1, value.toLong()) }
    
    var scan_hex_dollar: guint
        get() = readBits(this.rawPtr, 268, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 268, 1, value.toLong()) }
    
    var scan_string_sq: guint
        get() = readBits(this.rawPtr, 269, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 269, 1, value.toLong()) }
    
    var scan_string_dq: guint
        get() = readBits(this.rawPtr, 270, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 270, 1, value.toLong()) }
    
    var numbers_2_int: guint
        get() = readBits(this.rawPtr, 271, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 271, 1, value.toLong()) }
    
    var int_2_float: guint
        get() = readBits(this.rawPtr, 272, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 272, 1, value.toLong()) }
    
    var identifier_2_string: guint
        get() = readBits(this.rawPtr, 273, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 273, 1, value.toLong()) }
    
    var char_2_token: guint
        get() = readBits(this.rawPtr, 274, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 274, 1, value.toLong()) }
    
    var symbol_2_token: guint
        get() = readBits(this.rawPtr, 275, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 275, 1, value.toLong()) }
    
    var scope_0_fallback: guint
        get() = readBits(this.rawPtr, 276, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 276, 1, value.toLong()) }
    
    var store_int64: guint
        get() = readBits(this.rawPtr, 277, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 277, 1, value.toLong()) }
}

@CStruct("union { void* p0; void* p1; unsigned long p2; unsigned long p3; unsigned long p4; unsigned long p5; double p6; unsigned long p7; void* p8; void* p9; unsigned char p10; unsigned int p11; }")
class _GTokenValue(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(8, 8)
    
    var v_symbol: gpointer?
        get() = memberAt<gpointerVar>(0).value
        set(value) { memberAt<gpointerVar>(0).value = value }
    
    var v_identifier: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(0).value
        set(value) { memberAt<CPointerVar<gcharVar>>(0).value = value }
    
    var v_binary: gulong
        get() = memberAt<gulongVar>(0).value
        set(value) { memberAt<gulongVar>(0).value = value }
    
    var v_octal: gulong
        get() = memberAt<gulongVar>(0).value
        set(value) { memberAt<gulongVar>(0).value = value }
    
    var v_int: gulong
        get() = memberAt<gulongVar>(0).value
        set(value) { memberAt<gulongVar>(0).value = value }
    
    var v_int64: guint64
        get() = memberAt<guint64Var>(0).value
        set(value) { memberAt<guint64Var>(0).value = value }
    
    var v_float: gdouble
        get() = memberAt<gdoubleVar>(0).value
        set(value) { memberAt<gdoubleVar>(0).value = value }
    
    var v_hex: gulong
        get() = memberAt<gulongVar>(0).value
        set(value) { memberAt<gulongVar>(0).value = value }
    
    var v_string: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(0).value
        set(value) { memberAt<CPointerVar<gcharVar>>(0).value = value }
    
    var v_comment: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(0).value
        set(value) { memberAt<CPointerVar<gcharVar>>(0).value = value }
    
    var v_char: guchar
        get() = memberAt<gucharVar>(0).value
        set(value) { memberAt<gucharVar>(0).value = value }
    
    var v_error: guint
        get() = memberAt<guintVar>(0).value
        set(value) { memberAt<guintVar>(0).value = value }
}

@CStruct("struct { int p0; int p1; int p2; int p3; int p4; int p5; }")
class GTestConfig(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 4)
    
    var test_initialized: gboolean
        get() = memberAt<gbooleanVar>(0).value
        set(value) { memberAt<gbooleanVar>(0).value = value }
    
    var test_quick: gboolean
        get() = memberAt<gbooleanVar>(4).value
        set(value) { memberAt<gbooleanVar>(4).value = value }
    
    var test_perf: gboolean
        get() = memberAt<gbooleanVar>(8).value
        set(value) { memberAt<gbooleanVar>(8).value = value }
    
    var test_verbose: gboolean
        get() = memberAt<gbooleanVar>(12).value
        set(value) { memberAt<gbooleanVar>(12).value = value }
    
    var test_quiet: gboolean
        get() = memberAt<gbooleanVar>(16).value
        set(value) { memberAt<gbooleanVar>(16).value = value }
    
    var test_undefined: gboolean
        get() = memberAt<gbooleanVar>(20).value
        set(value) { memberAt<gbooleanVar>(20).value = value }
}

@CStruct("struct { unsigned int p0; unsigned int p1; void* p2; unsigned int p3; void* p4; }")
class GTestLogMsg(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    var log_type: GTestLogType
        get() = memberAt<GTestLogType.Var>(0).value
        set(value) { memberAt<GTestLogType.Var>(0).value = value }
    
    var n_strings: guint
        get() = memberAt<guintVar>(4).value
        set(value) { memberAt<guintVar>(4).value = value }
    
    var strings: CPointer<CPointerVar<gcharVar>>?
        get() = memberAt<CPointerVar<CPointerVar<gcharVar>>>(8).value
        set(value) { memberAt<CPointerVar<CPointerVar<gcharVar>>>(8).value = value }
    
    var n_nums: guint
        get() = memberAt<guintVar>(16).value
        set(value) { memberAt<guintVar>(16).value = value }
    
    var nums: COpaquePointer?
        get() = memberAt<COpaquePointerVar>(24).value
        set(value) { memberAt<COpaquePointerVar>(24).value = value }
}

@CStruct("struct { void* p0; void* p1; }")
class GTestLogBuffer(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    var data: CPointer<GString>?
        get() = memberAt<CPointerVar<GString>>(0).value
        set(value) { memberAt<CPointerVar<GString>>(0).value = value }
    
    var msgs: CPointer<GSList>?
        get() = memberAt<CPointerVar<GSList>>(8).value
        set(value) { memberAt<CPointerVar<GSList>>(8).value = value }
}

@CStruct("struct { void* p0; void* p1; int p2; }")
class _GThreadPool(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    var func: GFunc?
        get() = memberAt<GFuncVar>(0).value
        set(value) { memberAt<GFuncVar>(0).value = value }
    
    var user_data: gpointer?
        get() = memberAt<gpointerVar>(8).value
        set(value) { memberAt<gpointerVar>(8).value = value }
    
    var exclusive: gboolean
        get() = memberAt<gbooleanVar>(16).value
        set(value) { memberAt<gbooleanVar>(16).value = value }
}

@CStruct("struct { void* p0; }")
class _GTrashStack(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(8, 8)
    
    var next: CPointer<GTrashStack>?
        get() = memberAt<CPointerVar<GTrashStack>>(0).value
        set(value) { memberAt<CPointerVar<GTrashStack>>(0).value = value }
}

@CStruct("struct { void* p0; void* p1; void* p2; void* p3; void* p4; }")
class _GCompletion(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    var items: CPointer<GList>?
        get() = memberAt<CPointerVar<GList>>(0).value
        set(value) { memberAt<CPointerVar<GList>>(0).value = value }
    
    var func: GCompletionFunc?
        get() = memberAt<GCompletionFuncVar>(8).value
        set(value) { memberAt<GCompletionFuncVar>(8).value = value }
    
    var prefix: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(16).value
        set(value) { memberAt<CPointerVar<gcharVar>>(16).value = value }
    
    var cache: CPointer<GList>?
        get() = memberAt<CPointerVar<GList>>(24).value
        set(value) { memberAt<CPointerVar<GList>>(24).value = value }
    
    var strncmp_func: GCompletionStrncmpFunc?
        get() = memberAt<GCompletionStrncmpFuncVar>(32).value
        set(value) { memberAt<GCompletionStrncmpFuncVar>(32).value = value }
}

@CStruct("struct { unsigned int p0; }")
class _GTuples(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(4, 4)
    
    var len: guint
        get() = memberAt<guintVar>(0).value
        set(value) { memberAt<guintVar>(0).value = value }
}

@CStruct("struct { void* p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; }")
class _GThreadFunctions(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(168, 8)
    
    var mutex_new: CPointer<CFunction<() -> CPointer<GMutex>?>>?
        get() = memberAt<CPointerVar<CFunction<() -> CPointer<GMutex>?>>>(0).value
        set(value) { memberAt<CPointerVar<CFunction<() -> CPointer<GMutex>?>>>(0).value = value }
    
    var mutex_lock: CPointer<CFunction<(CPointer<GMutex>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMutex>?) -> Unit>>>(8).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMutex>?) -> Unit>>>(8).value = value }
    
    var mutex_trylock: CPointer<CFunction<(CPointer<GMutex>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMutex>?) -> gboolean>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMutex>?) -> gboolean>>>(16).value = value }
    
    var mutex_unlock: CPointer<CFunction<(CPointer<GMutex>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMutex>?) -> Unit>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMutex>?) -> Unit>>>(24).value = value }
    
    var mutex_free: CPointer<CFunction<(CPointer<GMutex>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMutex>?) -> Unit>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMutex>?) -> Unit>>>(32).value = value }
    
    var cond_new: CPointer<CFunction<() -> CPointer<GCond>?>>?
        get() = memberAt<CPointerVar<CFunction<() -> CPointer<GCond>?>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<() -> CPointer<GCond>?>>>(40).value = value }
    
    var cond_signal: CPointer<CFunction<(CPointer<GCond>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GCond>?) -> Unit>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GCond>?) -> Unit>>>(48).value = value }
    
    var cond_broadcast: CPointer<CFunction<(CPointer<GCond>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GCond>?) -> Unit>>>(56).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GCond>?) -> Unit>>>(56).value = value }
    
    var cond_wait: CPointer<CFunction<(CPointer<GCond>?, CPointer<GMutex>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GCond>?, CPointer<GMutex>?) -> Unit>>>(64).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GCond>?, CPointer<GMutex>?) -> Unit>>>(64).value = value }
    
    var cond_timed_wait: CPointer<CFunction<(CPointer<GCond>?, CPointer<GMutex>?, CPointer<GTimeVal>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GCond>?, CPointer<GMutex>?, CPointer<GTimeVal>?) -> gboolean>>>(72).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GCond>?, CPointer<GMutex>?, CPointer<GTimeVal>?) -> gboolean>>>(72).value = value }
    
    var cond_free: CPointer<CFunction<(CPointer<GCond>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GCond>?) -> Unit>>>(80).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GCond>?) -> Unit>>>(80).value = value }
    
    var private_new: CPointer<CFunction<(GDestroyNotify?) -> CPointer<GPrivate>?>>?
        get() = memberAt<CPointerVar<CFunction<(GDestroyNotify?) -> CPointer<GPrivate>?>>>(88).value
        set(value) { memberAt<CPointerVar<CFunction<(GDestroyNotify?) -> CPointer<GPrivate>?>>>(88).value = value }
    
    var private_get: CPointer<CFunction<(CPointer<GPrivate>?) -> gpointer?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GPrivate>?) -> gpointer?>>>(96).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GPrivate>?) -> gpointer?>>>(96).value = value }
    
    var private_set: CPointer<CFunction<(CPointer<GPrivate>?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GPrivate>?, gpointer?) -> Unit>>>(104).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GPrivate>?, gpointer?) -> Unit>>>(104).value = value }
    
    var thread_create: CPointer<CFunction<(GThreadFunc?, gpointer?, gulong, gboolean, gboolean, GThreadPriority, gpointer?, CPointer<CPointerVar<GError>>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(GThreadFunc?, gpointer?, gulong, gboolean, gboolean, GThreadPriority, gpointer?, CPointer<CPointerVar<GError>>?) -> Unit>>>(112).value
        set(value) { memberAt<CPointerVar<CFunction<(GThreadFunc?, gpointer?, gulong, gboolean, gboolean, GThreadPriority, gpointer?, CPointer<CPointerVar<GError>>?) -> Unit>>>(112).value = value }
    
    var thread_yield: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(120).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(120).value = value }
    
    var thread_join: CPointer<CFunction<(gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(gpointer?) -> Unit>>>(128).value
        set(value) { memberAt<CPointerVar<CFunction<(gpointer?) -> Unit>>>(128).value = value }
    
    var thread_exit: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(136).value = value }
    
    var thread_set_priority: CPointer<CFunction<(gpointer?, GThreadPriority) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(gpointer?, GThreadPriority) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(gpointer?, GThreadPriority) -> Unit>>>(144).value = value }
    
    var thread_self: CPointer<CFunction<(gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(gpointer?) -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(gpointer?) -> Unit>>>(152).value = value }
    
    var thread_equal: CPointer<CFunction<(gpointer?, gpointer?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(gpointer?, gpointer?) -> gboolean>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(gpointer?, gpointer?) -> gboolean>>>(160).value = value }
}

@CStruct("struct { void* p0; union { struct { int p0; unsigned int p1; int p2; unsigned int p3; int p4; short p5; short p6; struct { void* p0; void* p1; } p7; } p0; char p1[40]; long p2; } p1; }")
class GStaticMutex(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    var mutex: CPointer<GMutex>?
        get() = memberAt<CPointerVar<GMutex>>(0).value
        set(value) { memberAt<CPointerVar<GMutex>>(0).value = value }
    
    val unused: pthread_mutex_t
        get() = memberAt(8)
}

@CStruct("struct { struct { void* p0; union { struct { int p0; unsigned int p1; int p2; unsigned int p3; int p4; short p5; short p6; struct { void* p0; void* p1; } p7; } p0; char p1[40]; long p2; } p1; } p0; unsigned int p1; union { unsigned long p0; double p1; } p2; }")
class _GStaticRecMutex(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(64, 8)
    
    val mutex: GStaticMutex
        get() = memberAt(0)
    
    var depth: guint
        get() = memberAt<guintVar>(48).value
        set(value) { memberAt<guintVar>(48).value = value }
    
    val unused: anonymousStruct7
        get() = memberAt(56)
}

@CStruct("union { unsigned long p0; double p1; }")
class anonymousStruct7(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(8, 8)
    
    var owner: pthread_t
        get() = memberAt<pthread_tVar>(0).value
        set(value) { memberAt<pthread_tVar>(0).value = value }
    
    var dummy: gdouble
        get() = memberAt<gdoubleVar>(0).value
        set(value) { memberAt<gdoubleVar>(0).value = value }
}

@CStruct("struct { struct { void* p0; union { struct { int p0; unsigned int p1; int p2; unsigned int p3; int p4; short p5; short p6; struct { void* p0; void* p1; } p7; } p0; char p1[40]; long p2; } p1; } p0; void* p1; void* p2; unsigned int p3; int p4; unsigned int p5; unsigned int p6; }")
class _GStaticRWLock(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(80, 8)
    
    val mutex: GStaticMutex
        get() = memberAt(0)
    
    var read_cond: CPointer<GCond>?
        get() = memberAt<CPointerVar<GCond>>(48).value
        set(value) { memberAt<CPointerVar<GCond>>(48).value = value }
    
    var write_cond: CPointer<GCond>?
        get() = memberAt<CPointerVar<GCond>>(56).value
        set(value) { memberAt<CPointerVar<GCond>>(56).value = value }
    
    var read_counter: guint
        get() = memberAt<guintVar>(64).value
        set(value) { memberAt<guintVar>(64).value = value }
    
    var have_writer: gboolean
        get() = memberAt<gbooleanVar>(68).value
        set(value) { memberAt<gbooleanVar>(68).value = value }
    
    var want_to_read: guint
        get() = memberAt<guintVar>(72).value
        set(value) { memberAt<guintVar>(72).value = value }
    
    var want_to_write: guint
        get() = memberAt<guintVar>(76).value
        set(value) { memberAt<guintVar>(76).value = value }
}

@CStruct("struct { unsigned int p0; }")
class _GStaticPrivate(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(4, 4)
    
    var index: guint
        get() = memberAt<guintVar>(0).value
        set(value) { memberAt<guintVar>(0).value = value }
}

@CStruct("struct { unsigned long p0; union { int p0; unsigned int p1; long p2; unsigned long p3; long p4; unsigned long p5; float p6; double p7; void* p8; } p1[2]; }")
class _GValue(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    var g_type: GType
        get() = memberAt<GTypeVar>(0).value
        set(value) { memberAt<GTypeVar>(0).value = value }
    
    val data: CArrayPointer<anonymousStruct8>
        get() = arrayMemberAt(8)
}

@CStruct("union { int p0; unsigned int p1; long p2; unsigned long p3; long p4; unsigned long p5; float p6; double p7; void* p8; }")
class anonymousStruct8(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(8, 8)
    
    var v_int: gint
        get() = memberAt<gintVar>(0).value
        set(value) { memberAt<gintVar>(0).value = value }
    
    var v_uint: guint
        get() = memberAt<guintVar>(0).value
        set(value) { memberAt<guintVar>(0).value = value }
    
    var v_long: glong
        get() = memberAt<glongVar>(0).value
        set(value) { memberAt<glongVar>(0).value = value }
    
    var v_ulong: gulong
        get() = memberAt<gulongVar>(0).value
        set(value) { memberAt<gulongVar>(0).value = value }
    
    var v_int64: gint64
        get() = memberAt<gint64Var>(0).value
        set(value) { memberAt<gint64Var>(0).value = value }
    
    var v_uint64: guint64
        get() = memberAt<guint64Var>(0).value
        set(value) { memberAt<guint64Var>(0).value = value }
    
    var v_float: gfloat
        get() = memberAt<gfloatVar>(0).value
        set(value) { memberAt<gfloatVar>(0).value = value }
    
    var v_double: gdouble
        get() = memberAt<gdoubleVar>(0).value
        set(value) { memberAt<gdoubleVar>(0).value = value }
    
    var v_pointer: gpointer?
        get() = memberAt<gpointerVar>(0).value
        set(value) { memberAt<gpointerVar>(0).value = value }
}

@CStruct("struct { unsigned long p0; }")
class _GTypeClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(8, 8)
    
    var g_type: GType
        get() = memberAt<GTypeVar>(0).value
        set(value) { memberAt<GTypeVar>(0).value = value }
}

@CStruct("struct { unsigned long p0; unsigned long p1; }")
class _GTypeInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    var g_type: GType
        get() = memberAt<GTypeVar>(0).value
        set(value) { memberAt<GTypeVar>(0).value = value }
    
    var g_instance_type: GType
        get() = memberAt<GTypeVar>(8).value
        set(value) { memberAt<GTypeVar>(8).value = value }
}

@CStruct("struct { void* p0; }")
class _GTypeInstance(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(8, 8)
    
    var g_class: CPointer<GTypeClass>?
        get() = memberAt<CPointerVar<GTypeClass>>(0).value
        set(value) { memberAt<CPointerVar<GTypeClass>>(0).value = value }
}

@CStruct("struct { unsigned short p0; void* p1; void* p2; void* p3; void* p4; void* p5; unsigned short p6; unsigned short p7; void* p8; void* p9; }")
class _GTypeInfo(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(72, 8)
    
    var class_size: guint16
        get() = memberAt<guint16Var>(0).value
        set(value) { memberAt<guint16Var>(0).value = value }
    
    var base_init: GBaseInitFunc?
        get() = memberAt<GBaseInitFuncVar>(8).value
        set(value) { memberAt<GBaseInitFuncVar>(8).value = value }
    
    var base_finalize: GBaseFinalizeFunc?
        get() = memberAt<GBaseFinalizeFuncVar>(16).value
        set(value) { memberAt<GBaseFinalizeFuncVar>(16).value = value }
    
    var class_init: GClassInitFunc?
        get() = memberAt<GClassInitFuncVar>(24).value
        set(value) { memberAt<GClassInitFuncVar>(24).value = value }
    
    var class_finalize: GClassFinalizeFunc?
        get() = memberAt<GClassFinalizeFuncVar>(32).value
        set(value) { memberAt<GClassFinalizeFuncVar>(32).value = value }
    
    var class_data: gconstpointer?
        get() = memberAt<gconstpointerVar>(40).value
        set(value) { memberAt<gconstpointerVar>(40).value = value }
    
    var instance_size: guint16
        get() = memberAt<guint16Var>(48).value
        set(value) { memberAt<guint16Var>(48).value = value }
    
    var n_preallocs: guint16
        get() = memberAt<guint16Var>(50).value
        set(value) { memberAt<guint16Var>(50).value = value }
    
    var instance_init: GInstanceInitFunc?
        get() = memberAt<GInstanceInitFuncVar>(56).value
        set(value) { memberAt<GInstanceInitFuncVar>(56).value = value }
    
    var value_table: CPointer<GTypeValueTable>?
        get() = memberAt<CPointerVar<GTypeValueTable>>(64).value
        set(value) { memberAt<CPointerVar<GTypeValueTable>>(64).value = value }
}

@CStruct("struct { void* p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; }")
class _GTypeValueTable(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(64, 8)
    
    var value_init: CPointer<CFunction<(CPointer<GValue>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GValue>?) -> Unit>>>(0).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GValue>?) -> Unit>>>(0).value = value }
    
    var value_free: CPointer<CFunction<(CPointer<GValue>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GValue>?) -> Unit>>>(8).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GValue>?) -> Unit>>>(8).value = value }
    
    var value_copy: CPointer<CFunction<(CPointer<GValue>?, CPointer<GValue>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GValue>?, CPointer<GValue>?) -> Unit>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GValue>?, CPointer<GValue>?) -> Unit>>>(16).value = value }
    
    var value_peek_pointer: CPointer<CFunction<(CPointer<GValue>?) -> gpointer?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GValue>?) -> gpointer?>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GValue>?) -> gpointer?>>>(24).value = value }
    
    var collect_format: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(32).value
        set(value) { memberAt<CPointerVar<gcharVar>>(32).value = value }
    
    var collect_value: CPointer<CFunction<(CPointer<GValue>?, guint, CPointer<GTypeCValue>?, guint) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GValue>?, guint, CPointer<GTypeCValue>?, guint) -> CPointer<gcharVar>?>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GValue>?, guint, CPointer<GTypeCValue>?, guint) -> CPointer<gcharVar>?>>>(40).value = value }
    
    var lcopy_format: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(48).value
        set(value) { memberAt<CPointerVar<gcharVar>>(48).value = value }
    
    var lcopy_value: CPointer<CFunction<(CPointer<GValue>?, guint, CPointer<GTypeCValue>?, guint) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GValue>?, guint, CPointer<GTypeCValue>?, guint) -> CPointer<gcharVar>?>>>(56).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GValue>?, guint, CPointer<GTypeCValue>?, guint) -> CPointer<gcharVar>?>>>(56).value = value }
}

@CStruct("struct { unsigned int p0; }")
class _GTypeFundamentalInfo(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(4, 4)
    
    var type_flags: GTypeFundamentalFlags
        get() = memberAt<GTypeFundamentalFlagsVar>(0).value
        set(value) { memberAt<GTypeFundamentalFlagsVar>(0).value = value }
}

@CStruct("struct { void* p0; void* p1; void* p2; }")
class _GInterfaceInfo(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    var interface_init: GInterfaceInitFunc?
        get() = memberAt<GInterfaceInitFuncVar>(0).value
        set(value) { memberAt<GInterfaceInitFuncVar>(0).value = value }
    
    var interface_finalize: GInterfaceFinalizeFunc?
        get() = memberAt<GInterfaceFinalizeFuncVar>(8).value
        set(value) { memberAt<GInterfaceFinalizeFuncVar>(8).value = value }
    
    var interface_data: gpointer?
        get() = memberAt<gpointerVar>(16).value
        set(value) { memberAt<gpointerVar>(16).value = value }
}

@CStruct("struct { unsigned long p0; void* p1; unsigned int p2; unsigned int p3; }")
class _GTypeQuery(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    var type: GType
        get() = memberAt<GTypeVar>(0).value
        set(value) { memberAt<GTypeVar>(0).value = value }
    
    var type_name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(8).value
        set(value) { memberAt<CPointerVar<gcharVar>>(8).value = value }
    
    var class_size: guint
        get() = memberAt<guintVar>(16).value
        set(value) { memberAt<guintVar>(16).value = value }
    
    var instance_size: guint
        get() = memberAt<guintVar>(20).value
        set(value) { memberAt<guintVar>(20).value = value }
}

@CStruct("struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; }")
class _GParamSpec(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(72, 8)
    
    val g_type_instance: GTypeInstance
        get() = memberAt(0)
    
    var name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(8).value
        set(value) { memberAt<CPointerVar<gcharVar>>(8).value = value }
    
    var flags: GParamFlags
        get() = memberAt<GParamFlagsVar>(16).value
        set(value) { memberAt<GParamFlagsVar>(16).value = value }
    
    var value_type: GType
        get() = memberAt<GTypeVar>(24).value
        set(value) { memberAt<GTypeVar>(24).value = value }
    
    var owner_type: GType
        get() = memberAt<GTypeVar>(32).value
        set(value) { memberAt<GTypeVar>(32).value = value }
    
    var _nick: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(40).value
        set(value) { memberAt<CPointerVar<gcharVar>>(40).value = value }
    
    var _blurb: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(48).value
        set(value) { memberAt<CPointerVar<gcharVar>>(48).value = value }
    
    var qdata: CPointer<GData>?
        get() = memberAt<CPointerVar<GData>>(56).value
        set(value) { memberAt<CPointerVar<GData>>(56).value = value }
    
    var ref_count: guint
        get() = memberAt<guintVar>(64).value
        set(value) { memberAt<guintVar>(64).value = value }
    
    var param_id: guint
        get() = memberAt<guintVar>(68).value
        set(value) { memberAt<guintVar>(68).value = value }
}

@CStruct("struct { struct { unsigned long p0; } p0; unsigned long p1; void* p2; void* p3; void* p4; void* p5; void* p6[4]; }")
class _GParamSpecClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(80, 8)
    
    val g_type_class: GTypeClass
        get() = memberAt(0)
    
    var value_type: GType
        get() = memberAt<GTypeVar>(8).value
        set(value) { memberAt<GTypeVar>(8).value = value }
    
    var finalize: CPointer<CFunction<(CPointer<GParamSpec>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GParamSpec>?) -> Unit>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GParamSpec>?) -> Unit>>>(16).value = value }
    
    var value_set_default: CPointer<CFunction<(CPointer<GParamSpec>?, CPointer<GValue>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GParamSpec>?, CPointer<GValue>?) -> Unit>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GParamSpec>?, CPointer<GValue>?) -> Unit>>>(24).value = value }
    
    var value_validate: CPointer<CFunction<(CPointer<GParamSpec>?, CPointer<GValue>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GParamSpec>?, CPointer<GValue>?) -> gboolean>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GParamSpec>?, CPointer<GValue>?) -> gboolean>>>(32).value = value }
    
    var values_cmp: CPointer<CFunction<(CPointer<GParamSpec>?, CPointer<GValue>?, CPointer<GValue>?) -> gint>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GParamSpec>?, CPointer<GValue>?, CPointer<GValue>?) -> gint>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GParamSpec>?, CPointer<GValue>?, CPointer<GValue>?) -> gint>>>(40).value = value }
    
    val dummy: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(48)
}

@CStruct("struct { void* p0; struct { unsigned long p0; union { int p0; unsigned int p1; long p2; unsigned long p3; long p4; unsigned long p5; float p6; double p7; void* p8; } p1[2]; } p1; }")
class _GParameter(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    var name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(0).value
        set(value) { memberAt<CPointerVar<gcharVar>>(0).value = value }
    
    val value: GValue
        get() = memberAt(8)
}

@CStruct("struct { unsigned short p0; unsigned short p1; void* p2; unsigned long p3; void* p4; void* p5; void* p6; void* p7; }")
class _GParamSpecTypeInfo(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    var instance_size: guint16
        get() = memberAt<guint16Var>(0).value
        set(value) { memberAt<guint16Var>(0).value = value }
    
    var n_preallocs: guint16
        get() = memberAt<guint16Var>(2).value
        set(value) { memberAt<guint16Var>(2).value = value }
    
    var instance_init: CPointer<CFunction<(CPointer<GParamSpec>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GParamSpec>?) -> Unit>>>(8).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GParamSpec>?) -> Unit>>>(8).value = value }
    
    var value_type: GType
        get() = memberAt<GTypeVar>(16).value
        set(value) { memberAt<GTypeVar>(16).value = value }
    
    var finalize: CPointer<CFunction<(CPointer<GParamSpec>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GParamSpec>?) -> Unit>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GParamSpec>?) -> Unit>>>(24).value = value }
    
    var value_set_default: CPointer<CFunction<(CPointer<GParamSpec>?, CPointer<GValue>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GParamSpec>?, CPointer<GValue>?) -> Unit>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GParamSpec>?, CPointer<GValue>?) -> Unit>>>(32).value = value }
    
    var value_validate: CPointer<CFunction<(CPointer<GParamSpec>?, CPointer<GValue>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GParamSpec>?, CPointer<GValue>?) -> gboolean>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GParamSpec>?, CPointer<GValue>?) -> gboolean>>>(40).value = value }
    
    var values_cmp: CPointer<CFunction<(CPointer<GParamSpec>?, CPointer<GValue>?, CPointer<GValue>?) -> gint>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GParamSpec>?, CPointer<GValue>?, CPointer<GValue>?) -> gint>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GParamSpec>?, CPointer<GValue>?, CPointer<GValue>?) -> gint>>>(48).value = value }
}

class _GClosure(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    var marshal: CPointer<CFunction<(CPointer<GClosure>?, CPointer<GValue>?, guint, CPointer<GValue>?, gpointer?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GClosure>?, CPointer<GValue>?, guint, CPointer<GValue>?, gpointer?, gpointer?) -> Unit>>>(8).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GClosure>?, CPointer<GValue>?, guint, CPointer<GValue>?, gpointer?, gpointer?) -> Unit>>>(8).value = value }
    
    var data: gpointer?
        get() = memberAt<gpointerVar>(16).value
        set(value) { memberAt<gpointerVar>(16).value = value }
    
    var notifiers: CPointer<GClosureNotifyData>?
        get() = memberAt<CPointerVar<GClosureNotifyData>>(24).value
        set(value) { memberAt<CPointerVar<GClosureNotifyData>>(24).value = value }
    
    var ref_count: guint
        get() = readBits(this.rawPtr, 0, 15, false).toUInt()
        set(value) { writeBits(this.rawPtr, 0, 15, value.toLong()) }
    
    var meta_marshal_nouse: guint
        get() = readBits(this.rawPtr, 15, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 15, 1, value.toLong()) }
    
    var n_guards: guint
        get() = readBits(this.rawPtr, 16, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 16, 1, value.toLong()) }
    
    var n_fnotifiers: guint
        get() = readBits(this.rawPtr, 17, 2, false).toUInt()
        set(value) { writeBits(this.rawPtr, 17, 2, value.toLong()) }
    
    var n_inotifiers: guint
        get() = readBits(this.rawPtr, 19, 8, false).toUInt()
        set(value) { writeBits(this.rawPtr, 19, 8, value.toLong()) }
    
    var in_inotify: guint
        get() = readBits(this.rawPtr, 27, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 27, 1, value.toLong()) }
    
    var floating: guint
        get() = readBits(this.rawPtr, 28, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 28, 1, value.toLong()) }
    
    var derivative_flag: guint
        get() = readBits(this.rawPtr, 29, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 29, 1, value.toLong()) }
    
    var in_marshal: guint
        get() = readBits(this.rawPtr, 30, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 30, 1, value.toLong()) }
    
    var is_invalid: guint
        get() = readBits(this.rawPtr, 31, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 31, 1, value.toLong()) }
}

@CStruct("struct { void* p0; void* p1; }")
class _GClosureNotifyData(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    var data: gpointer?
        get() = memberAt<gpointerVar>(0).value
        set(value) { memberAt<gpointerVar>(0).value = value }
    
    var notify: GClosureNotify?
        get() = memberAt<GClosureNotifyVar>(8).value
        set(value) { memberAt<GClosureNotifyVar>(8).value = value }
}

@CStruct("struct { null p0; void* p1; }")
class _GCClosure(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val closure: GClosure
        get() = memberAt(0)
    
    var callback: gpointer?
        get() = memberAt<gpointerVar>(32).value
        set(value) { memberAt<gpointerVar>(32).value = value }
}

@CStruct("struct { unsigned int p0; void* p1; unsigned long p2; unsigned int p3; unsigned long p4; unsigned int p5; void* p6; }")
class _GSignalQuery(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    var signal_id: guint
        get() = memberAt<guintVar>(0).value
        set(value) { memberAt<guintVar>(0).value = value }
    
    var signal_name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(8).value
        set(value) { memberAt<CPointerVar<gcharVar>>(8).value = value }
    
    var itype: GType
        get() = memberAt<GTypeVar>(16).value
        set(value) { memberAt<GTypeVar>(16).value = value }
    
    var signal_flags: GSignalFlags
        get() = memberAt<GSignalFlagsVar>(24).value
        set(value) { memberAt<GSignalFlagsVar>(24).value = value }
    
    var return_type: GType
        get() = memberAt<GTypeVar>(32).value
        set(value) { memberAt<GTypeVar>(32).value = value }
    
    var n_params: guint
        get() = memberAt<guintVar>(40).value
        set(value) { memberAt<guintVar>(40).value = value }
    
    var param_types: CPointer<GTypeVar>?
        get() = memberAt<CPointerVar<GTypeVar>>(48).value
        set(value) { memberAt<CPointerVar<GTypeVar>>(48).value = value }
}

@CStruct("struct { unsigned int p0; unsigned int p1; unsigned int p2; }")
class _GSignalInvocationHint(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(12, 4)
    
    var signal_id: guint
        get() = memberAt<guintVar>(0).value
        set(value) { memberAt<guintVar>(0).value = value }
    
    var detail: GQuark
        get() = memberAt<GQuarkVar>(4).value
        set(value) { memberAt<GQuarkVar>(4).value = value }
    
    var run_type: GSignalFlags
        get() = memberAt<GSignalFlagsVar>(8).value
        set(value) { memberAt<GSignalFlagsVar>(8).value = value }
}

@CStruct("struct { struct { void* p0; } p0; unsigned int p1; void* p2; }")
class _GObject(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    val g_type_instance: GTypeInstance
        get() = memberAt(0)
    
    var ref_count: guint
        get() = memberAt<guintVar>(8).value
        set(value) { memberAt<guintVar>(8).value = value }
    
    var qdata: CPointer<GData>?
        get() = memberAt<CPointerVar<GData>>(16).value
        set(value) { memberAt<CPointerVar<GData>>(16).value = value }
}

@CStruct("struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; }")
class _GObjectClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(136, 8)
    
    val g_type_class: GTypeClass
        get() = memberAt(0)
    
    var construct_properties: CPointer<GSList>?
        get() = memberAt<CPointerVar<GSList>>(8).value
        set(value) { memberAt<CPointerVar<GSList>>(8).value = value }
    
    var constructor: CPointer<CFunction<(GType, guint, CPointer<GObjectConstructParam>?) -> CPointer<GObject>?>>?
        get() = memberAt<CPointerVar<CFunction<(GType, guint, CPointer<GObjectConstructParam>?) -> CPointer<GObject>?>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(GType, guint, CPointer<GObjectConstructParam>?) -> CPointer<GObject>?>>>(16).value = value }
    
    var set_property: CPointer<CFunction<(CPointer<GObject>?, guint, CPointer<GValue>?, CPointer<GParamSpec>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GObject>?, guint, CPointer<GValue>?, CPointer<GParamSpec>?) -> Unit>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GObject>?, guint, CPointer<GValue>?, CPointer<GParamSpec>?) -> Unit>>>(24).value = value }
    
    var get_property: CPointer<CFunction<(CPointer<GObject>?, guint, CPointer<GValue>?, CPointer<GParamSpec>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GObject>?, guint, CPointer<GValue>?, CPointer<GParamSpec>?) -> Unit>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GObject>?, guint, CPointer<GValue>?, CPointer<GParamSpec>?) -> Unit>>>(32).value = value }
    
    var dispose: CPointer<CFunction<(CPointer<GObject>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GObject>?) -> Unit>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GObject>?) -> Unit>>>(40).value = value }
    
    var finalize: CPointer<CFunction<(CPointer<GObject>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GObject>?) -> Unit>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GObject>?) -> Unit>>>(48).value = value }
    
    var dispatch_properties_changed: CPointer<CFunction<(CPointer<GObject>?, guint, CPointer<CPointerVar<GParamSpec>>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GObject>?, guint, CPointer<CPointerVar<GParamSpec>>?) -> Unit>>>(56).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GObject>?, guint, CPointer<CPointerVar<GParamSpec>>?) -> Unit>>>(56).value = value }
    
    var notify: CPointer<CFunction<(CPointer<GObject>?, CPointer<GParamSpec>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GObject>?, CPointer<GParamSpec>?) -> Unit>>>(64).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GObject>?, CPointer<GParamSpec>?) -> Unit>>>(64).value = value }
    
    var constructed: CPointer<CFunction<(CPointer<GObject>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GObject>?) -> Unit>>>(72).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GObject>?) -> Unit>>>(72).value = value }
    
    var flags: gsize
        get() = memberAt<gsizeVar>(80).value
        set(value) { memberAt<gsizeVar>(80).value = value }
    
    val pdummy: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(88)
}

@CStruct("struct { void* p0; void* p1; }")
class _GObjectConstructParam(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    var pspec: CPointer<GParamSpec>?
        get() = memberAt<CPointerVar<GParamSpec>>(0).value
        set(value) { memberAt<CPointerVar<GParamSpec>>(0).value = value }
    
    var value: CPointer<GValue>?
        get() = memberAt<CPointerVar<GValue>>(8).value
        set(value) { memberAt<CPointerVar<GValue>>(8).value = value }
}

@CStruct("struct { union { void* p0; } p0; }")
class GWeakRef(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(8, 8)
    
    val priv: anonymousStruct9
        get() = memberAt(0)
}

@CStruct("union { void* p0; }")
class anonymousStruct9(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(8, 8)
    
    var p: gpointer?
        get() = memberAt<gpointerVar>(0).value
        set(value) { memberAt<gpointerVar>(0).value = value }
}

@CStruct("struct { struct { unsigned long p0; } p0; int p1; int p2; unsigned int p3; void* p4; }")
class _GEnumClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val g_type_class: GTypeClass
        get() = memberAt(0)
    
    var minimum: gint
        get() = memberAt<gintVar>(8).value
        set(value) { memberAt<gintVar>(8).value = value }
    
    var maximum: gint
        get() = memberAt<gintVar>(12).value
        set(value) { memberAt<gintVar>(12).value = value }
    
    var n_values: guint
        get() = memberAt<guintVar>(16).value
        set(value) { memberAt<guintVar>(16).value = value }
    
    var values: CPointer<GEnumValue>?
        get() = memberAt<CPointerVar<GEnumValue>>(24).value
        set(value) { memberAt<CPointerVar<GEnumValue>>(24).value = value }
}

@CStruct("struct { int p0; void* p1; void* p2; }")
class _GEnumValue(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    var value: gint
        get() = memberAt<gintVar>(0).value
        set(value) { memberAt<gintVar>(0).value = value }
    
    var value_name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(8).value
        set(value) { memberAt<CPointerVar<gcharVar>>(8).value = value }
    
    var value_nick: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(16).value
        set(value) { memberAt<CPointerVar<gcharVar>>(16).value = value }
}

@CStruct("struct { struct { unsigned long p0; } p0; unsigned int p1; unsigned int p2; void* p3; }")
class _GFlagsClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    val g_type_class: GTypeClass
        get() = memberAt(0)
    
    var mask: guint
        get() = memberAt<guintVar>(8).value
        set(value) { memberAt<guintVar>(8).value = value }
    
    var n_values: guint
        get() = memberAt<guintVar>(12).value
        set(value) { memberAt<guintVar>(12).value = value }
    
    var values: CPointer<GFlagsValue>?
        get() = memberAt<CPointerVar<GFlagsValue>>(16).value
        set(value) { memberAt<CPointerVar<GFlagsValue>>(16).value = value }
}

@CStruct("struct { unsigned int p0; void* p1; void* p2; }")
class _GFlagsValue(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    var value: guint
        get() = memberAt<guintVar>(0).value
        set(value) { memberAt<guintVar>(0).value = value }
    
    var value_name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(8).value
        set(value) { memberAt<CPointerVar<gcharVar>>(8).value = value }
    
    var value_nick: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(16).value
        set(value) { memberAt<CPointerVar<gcharVar>>(16).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; signed char p1; signed char p2; signed char p3; }")
class _GParamSpecChar(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(80, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
    
    var minimum: gint8
        get() = memberAt<gint8Var>(72).value
        set(value) { memberAt<gint8Var>(72).value = value }
    
    var maximum: gint8
        get() = memberAt<gint8Var>(73).value
        set(value) { memberAt<gint8Var>(73).value = value }
    
    var default_value: gint8
        get() = memberAt<gint8Var>(74).value
        set(value) { memberAt<gint8Var>(74).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; unsigned char p1; unsigned char p2; unsigned char p3; }")
class _GParamSpecUChar(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(80, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
    
    var minimum: guint8
        get() = memberAt<guint8Var>(72).value
        set(value) { memberAt<guint8Var>(72).value = value }
    
    var maximum: guint8
        get() = memberAt<guint8Var>(73).value
        set(value) { memberAt<guint8Var>(73).value = value }
    
    var default_value: guint8
        get() = memberAt<guint8Var>(74).value
        set(value) { memberAt<guint8Var>(74).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; int p1; }")
class _GParamSpecBoolean(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(80, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
    
    var default_value: gboolean
        get() = memberAt<gbooleanVar>(72).value
        set(value) { memberAt<gbooleanVar>(72).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; int p1; int p2; int p3; }")
class _GParamSpecInt(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(88, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
    
    var minimum: gint
        get() = memberAt<gintVar>(72).value
        set(value) { memberAt<gintVar>(72).value = value }
    
    var maximum: gint
        get() = memberAt<gintVar>(76).value
        set(value) { memberAt<gintVar>(76).value = value }
    
    var default_value: gint
        get() = memberAt<gintVar>(80).value
        set(value) { memberAt<gintVar>(80).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; unsigned int p1; unsigned int p2; unsigned int p3; }")
class _GParamSpecUInt(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(88, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
    
    var minimum: guint
        get() = memberAt<guintVar>(72).value
        set(value) { memberAt<guintVar>(72).value = value }
    
    var maximum: guint
        get() = memberAt<guintVar>(76).value
        set(value) { memberAt<guintVar>(76).value = value }
    
    var default_value: guint
        get() = memberAt<guintVar>(80).value
        set(value) { memberAt<guintVar>(80).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; long p1; long p2; long p3; }")
class _GParamSpecLong(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(96, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
    
    var minimum: glong
        get() = memberAt<glongVar>(72).value
        set(value) { memberAt<glongVar>(72).value = value }
    
    var maximum: glong
        get() = memberAt<glongVar>(80).value
        set(value) { memberAt<glongVar>(80).value = value }
    
    var default_value: glong
        get() = memberAt<glongVar>(88).value
        set(value) { memberAt<glongVar>(88).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; unsigned long p1; unsigned long p2; unsigned long p3; }")
class _GParamSpecULong(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(96, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
    
    var minimum: gulong
        get() = memberAt<gulongVar>(72).value
        set(value) { memberAt<gulongVar>(72).value = value }
    
    var maximum: gulong
        get() = memberAt<gulongVar>(80).value
        set(value) { memberAt<gulongVar>(80).value = value }
    
    var default_value: gulong
        get() = memberAt<gulongVar>(88).value
        set(value) { memberAt<gulongVar>(88).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; long p1; long p2; long p3; }")
class _GParamSpecInt64(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(96, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
    
    var minimum: gint64
        get() = memberAt<gint64Var>(72).value
        set(value) { memberAt<gint64Var>(72).value = value }
    
    var maximum: gint64
        get() = memberAt<gint64Var>(80).value
        set(value) { memberAt<gint64Var>(80).value = value }
    
    var default_value: gint64
        get() = memberAt<gint64Var>(88).value
        set(value) { memberAt<gint64Var>(88).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; unsigned long p1; unsigned long p2; unsigned long p3; }")
class _GParamSpecUInt64(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(96, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
    
    var minimum: guint64
        get() = memberAt<guint64Var>(72).value
        set(value) { memberAt<guint64Var>(72).value = value }
    
    var maximum: guint64
        get() = memberAt<guint64Var>(80).value
        set(value) { memberAt<guint64Var>(80).value = value }
    
    var default_value: guint64
        get() = memberAt<guint64Var>(88).value
        set(value) { memberAt<guint64Var>(88).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; unsigned int p1; }")
class _GParamSpecUnichar(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(80, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
    
    var default_value: gunichar
        get() = memberAt<gunicharVar>(72).value
        set(value) { memberAt<gunicharVar>(72).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; void* p1; int p2; }")
class _GParamSpecEnum(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(88, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
    
    var enum_class: CPointer<GEnumClass>?
        get() = memberAt<CPointerVar<GEnumClass>>(72).value
        set(value) { memberAt<CPointerVar<GEnumClass>>(72).value = value }
    
    var default_value: gint
        get() = memberAt<gintVar>(80).value
        set(value) { memberAt<gintVar>(80).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; void* p1; unsigned int p2; }")
class _GParamSpecFlags(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(88, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
    
    var flags_class: CPointer<GFlagsClass>?
        get() = memberAt<CPointerVar<GFlagsClass>>(72).value
        set(value) { memberAt<CPointerVar<GFlagsClass>>(72).value = value }
    
    var default_value: guint
        get() = memberAt<guintVar>(80).value
        set(value) { memberAt<guintVar>(80).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; float p1; float p2; float p3; float p4; }")
class _GParamSpecFloat(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(88, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
    
    var minimum: gfloat
        get() = memberAt<gfloatVar>(72).value
        set(value) { memberAt<gfloatVar>(72).value = value }
    
    var maximum: gfloat
        get() = memberAt<gfloatVar>(76).value
        set(value) { memberAt<gfloatVar>(76).value = value }
    
    var default_value: gfloat
        get() = memberAt<gfloatVar>(80).value
        set(value) { memberAt<gfloatVar>(80).value = value }
    
    var epsilon: gfloat
        get() = memberAt<gfloatVar>(84).value
        set(value) { memberAt<gfloatVar>(84).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; double p1; double p2; double p3; double p4; }")
class _GParamSpecDouble(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(104, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
    
    var minimum: gdouble
        get() = memberAt<gdoubleVar>(72).value
        set(value) { memberAt<gdoubleVar>(72).value = value }
    
    var maximum: gdouble
        get() = memberAt<gdoubleVar>(80).value
        set(value) { memberAt<gdoubleVar>(80).value = value }
    
    var default_value: gdouble
        get() = memberAt<gdoubleVar>(88).value
        set(value) { memberAt<gdoubleVar>(88).value = value }
    
    var epsilon: gdouble
        get() = memberAt<gdoubleVar>(96).value
        set(value) { memberAt<gdoubleVar>(96).value = value }
}

class _GParamSpecString(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(104, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
    
    var default_value: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(72).value
        set(value) { memberAt<CPointerVar<gcharVar>>(72).value = value }
    
    var cset_first: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(80).value
        set(value) { memberAt<CPointerVar<gcharVar>>(80).value = value }
    
    var cset_nth: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(88).value
        set(value) { memberAt<CPointerVar<gcharVar>>(88).value = value }
    
    var substitutor: gchar
        get() = memberAt<gcharVar>(96).value
        set(value) { memberAt<gcharVar>(96).value = value }
    
    var null_fold_if_empty: guint
        get() = readBits(this.rawPtr, 776, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 776, 1, value.toLong()) }
    
    var ensure_non_null: guint
        get() = readBits(this.rawPtr, 777, 1, false).toUInt()
        set(value) { writeBits(this.rawPtr, 777, 1, value.toLong()) }
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; }")
class _GParamSpecParam(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(72, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; }")
class _GParamSpecBoxed(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(72, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; }")
class _GParamSpecPointer(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(72, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; void* p1; unsigned int p2; }")
class _GParamSpecValueArray(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(88, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
    
    var element_spec: CPointer<GParamSpec>?
        get() = memberAt<CPointerVar<GParamSpec>>(72).value
        set(value) { memberAt<CPointerVar<GParamSpec>>(72).value = value }
    
    var fixed_n_elements: guint
        get() = memberAt<guintVar>(80).value
        set(value) { memberAt<guintVar>(80).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; }")
class _GParamSpecObject(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(72, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; void* p1; }")
class _GParamSpecOverride(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(80, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
    
    var overridden: CPointer<GParamSpec>?
        get() = memberAt<CPointerVar<GParamSpec>>(72).value
        set(value) { memberAt<CPointerVar<GParamSpec>>(72).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; unsigned long p1; }")
class _GParamSpecGType(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(80, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
    
    var is_a_type: GType
        get() = memberAt<GTypeVar>(72).value
        set(value) { memberAt<GTypeVar>(72).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; void* p1; int p2; unsigned long p3; unsigned long p4; void* p5; void* p6; void* p7; unsigned int p8; unsigned int p9; } p0; void* p1; void* p2; void* p3[4]; }")
class _GParamSpecVariant(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(120, 8)
    
    val parent_instance: GParamSpec
        get() = memberAt(0)
    
    var type: CPointer<GVariantType>?
        get() = memberAt<CPointerVar<GVariantType>>(72).value
        set(value) { memberAt<CPointerVar<GVariantType>>(72).value = value }
    
    var default_value: CPointer<GVariant>?
        get() = memberAt<CPointerVar<GVariant>>(80).value
        set(value) { memberAt<CPointerVar<GVariant>>(80).value = value }
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(88)
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; unsigned int p1; void* p2; void* p3; void* p4; }")
class _GTypeModule(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var use_count: guint
        get() = memberAt<guintVar>(24).value
        set(value) { memberAt<guintVar>(24).value = value }
    
    var type_infos: CPointer<GSList>?
        get() = memberAt<CPointerVar<GSList>>(32).value
        set(value) { memberAt<CPointerVar<GSList>>(32).value = value }
    
    var interface_infos: CPointer<GSList>?
        get() = memberAt<CPointerVar<GSList>>(40).value
        set(value) { memberAt<CPointerVar<GSList>>(40).value = value }
    
    var name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(48).value
        set(value) { memberAt<CPointerVar<gcharVar>>(48).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; }")
class _GTypeModuleClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(184, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var load: CPointer<CFunction<(CPointer<GTypeModule>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTypeModule>?) -> gboolean>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTypeModule>?) -> gboolean>>>(136).value = value }
    
    var unload: CPointer<CFunction<(CPointer<GTypeModule>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTypeModule>?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTypeModule>?) -> Unit>>>(144).value = value }
    
    var reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value = value }
    
    var reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
    
    var reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value = value }
    
    var reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GTypePluginClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val base_iface: GTypeInterface
        get() = memberAt(0)
    
    var use_plugin: GTypePluginUse?
        get() = memberAt<GTypePluginUseVar>(16).value
        set(value) { memberAt<GTypePluginUseVar>(16).value = value }
    
    var unuse_plugin: GTypePluginUnuse?
        get() = memberAt<GTypePluginUnuseVar>(24).value
        set(value) { memberAt<GTypePluginUnuseVar>(24).value = value }
    
    var complete_type_info: GTypePluginCompleteTypeInfo?
        get() = memberAt<GTypePluginCompleteTypeInfoVar>(32).value
        set(value) { memberAt<GTypePluginCompleteTypeInfoVar>(32).value = value }
    
    var complete_interface_info: GTypePluginCompleteInterfaceInfo?
        get() = memberAt<GTypePluginCompleteInterfaceInfoVar>(40).value
        set(value) { memberAt<GTypePluginCompleteInterfaceInfoVar>(40).value = value }
}

@CStruct("struct { unsigned int p0; void* p1; unsigned int p2; }")
class _GValueArray(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    var n_values: guint
        get() = memberAt<guintVar>(0).value
        set(value) { memberAt<guintVar>(0).value = value }
    
    var values: CPointer<GValue>?
        get() = memberAt<CPointerVar<GValue>>(8).value
        set(value) { memberAt<CPointerVar<GValue>>(8).value = value }
    
    var n_prealloced: guint
        get() = memberAt<guintVar>(16).value
        set(value) { memberAt<guintVar>(16).value = value }
}

@CStruct("struct { void* p0[6]; int p1[2]; int p2[1]; }")
class JsonObjectIter(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(64, 8)
    
    val priv_pointer: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(0)
    
    val priv_int: CArrayPointer<IntVar>
        get() = arrayMemberAt(48)
    
    val priv_boolean: CArrayPointer<gbooleanVar>
        get() = arrayMemberAt(56)
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _JsonBuilder(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<JsonBuilderPrivate>?
        get() = memberAt<CPointerVar<JsonBuilderPrivate>>(24).value
        set(value) { memberAt<CPointerVar<JsonBuilderPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; }")
class _JsonBuilderClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(152, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var _json_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(136).value = value }
    
    var _json_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GAppLaunchContext(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GAppLaunchContextPrivate>?
        get() = memberAt<CPointerVar<GAppLaunchContextPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GAppLaunchContextPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GBufferedInputStream(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val parent_instance: GFilterInputStream
        get() = memberAt(0)
    
    var priv: CPointer<GBufferedInputStreamPrivate>?
        get() = memberAt<CPointerVar<GBufferedInputStreamPrivate>>(40).value
        set(value) { memberAt<CPointerVar<GBufferedInputStreamPrivate>>(40).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GFilterInputStream(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val parent_instance: GInputStream
        get() = memberAt(0)
    
    var base_stream: CPointer<GInputStream>?
        get() = memberAt<CPointerVar<GInputStream>>(32).value
        set(value) { memberAt<CPointerVar<GInputStream>>(32).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GInputStream(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GInputStreamPrivate>?
        get() = memberAt<CPointerVar<GInputStreamPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GInputStreamPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GBufferedOutputStream(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val parent_instance: GFilterOutputStream
        get() = memberAt(0)
    
    var priv: CPointer<GBufferedOutputStreamPrivate>?
        get() = memberAt<CPointerVar<GBufferedOutputStreamPrivate>>(40).value
        set(value) { memberAt<CPointerVar<GBufferedOutputStreamPrivate>>(40).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GFilterOutputStream(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val parent_instance: GOutputStream
        get() = memberAt(0)
    
    var base_stream: CPointer<GOutputStream>?
        get() = memberAt<CPointerVar<GOutputStream>>(32).value
        set(value) { memberAt<CPointerVar<GOutputStream>>(32).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GOutputStream(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GOutputStreamPrivate>?
        get() = memberAt<CPointerVar<GOutputStreamPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GOutputStreamPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GCancellable(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GCancellablePrivate>?
        get() = memberAt<CPointerVar<GCancellablePrivate>>(24).value
        set(value) { memberAt<CPointerVar<GCancellablePrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GConverterInputStream(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val parent_instance: GFilterInputStream
        get() = memberAt(0)
    
    var priv: CPointer<GConverterInputStreamPrivate>?
        get() = memberAt<CPointerVar<GConverterInputStreamPrivate>>(40).value
        set(value) { memberAt<CPointerVar<GConverterInputStreamPrivate>>(40).value = value }
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GConverterOutputStream(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val parent_instance: GFilterOutputStream
        get() = memberAt(0)
    
    var priv: CPointer<GConverterOutputStreamPrivate>?
        get() = memberAt<CPointerVar<GConverterOutputStreamPrivate>>(40).value
        set(value) { memberAt<CPointerVar<GConverterOutputStreamPrivate>>(40).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GDataInputStream(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val parent_instance: GBufferedInputStream
        get() = memberAt(0)
    
    var priv: CPointer<GDataInputStreamPrivate>?
        get() = memberAt<CPointerVar<GDataInputStreamPrivate>>(48).value
        set(value) { memberAt<CPointerVar<GDataInputStreamPrivate>>(48).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GSimpleActionGroup(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GSimpleActionGroupPrivate>?
        get() = memberAt<CPointerVar<GSimpleActionGroupPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GSimpleActionGroupPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GApplication(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GApplicationPrivate>?
        get() = memberAt<CPointerVar<GApplicationPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GApplicationPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GApplicationCommandLine(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GApplicationCommandLinePrivate>?
        get() = memberAt<CPointerVar<GApplicationCommandLinePrivate>>(24).value
        set(value) { memberAt<CPointerVar<GApplicationCommandLinePrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GSettings(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GSettingsPrivate>?
        get() = memberAt<CPointerVar<GSettingsPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GSettingsPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GPermission(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GPermissionPrivate>?
        get() = memberAt<CPointerVar<GPermissionPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GPermissionPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GMenuModel(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GMenuModelPrivate>?
        get() = memberAt<CPointerVar<GMenuModelPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GMenuModelPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GFileEnumerator(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GFileEnumeratorPrivate>?
        get() = memberAt<CPointerVar<GFileEnumeratorPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GFileEnumeratorPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GFileMonitor(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GFileMonitorPrivate>?
        get() = memberAt<CPointerVar<GFileMonitorPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GFileMonitorPrivate>>(24).value = value }
}

@CStruct("struct { void* p0; unsigned int p1; unsigned int p2; }")
class _GFileAttributeInfo(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    var name: CPointer<ByteVar>?
        get() = memberAt<CPointerVar<ByteVar>>(0).value
        set(value) { memberAt<CPointerVar<ByteVar>>(0).value = value }
    
    var type: GFileAttributeType
        get() = memberAt<GFileAttributeTypeVar>(8).value
        set(value) { memberAt<GFileAttributeTypeVar>(8).value = value }
    
    var flags: GFileAttributeInfoFlags
        get() = memberAt<GFileAttributeInfoFlagsVar>(12).value
        set(value) { memberAt<GFileAttributeInfoFlagsVar>(12).value = value }
}

@CStruct("struct { void* p0; int p1; }")
class _GFileAttributeInfoList(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    var infos: CPointer<GFileAttributeInfo>?
        get() = memberAt<CPointerVar<GFileAttributeInfo>>(0).value
        set(value) { memberAt<CPointerVar<GFileAttributeInfo>>(0).value = value }
    
    var n_infos: Int
        get() = memberAt<IntVar>(8).value
        set(value) { memberAt<IntVar>(8).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GFileInputStream(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val parent_instance: GInputStream
        get() = memberAt(0)
    
    var priv: CPointer<GFileInputStreamPrivate>?
        get() = memberAt<CPointerVar<GFileInputStreamPrivate>>(32).value
        set(value) { memberAt<CPointerVar<GFileInputStreamPrivate>>(32).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GFileOutputStream(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val parent_instance: GOutputStream
        get() = memberAt(0)
    
    var priv: CPointer<GFileOutputStreamPrivate>?
        get() = memberAt<CPointerVar<GFileOutputStreamPrivate>>(32).value
        set(value) { memberAt<CPointerVar<GFileOutputStreamPrivate>>(32).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GFileIOStream(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val parent_instance: GIOStream
        get() = memberAt(0)
    
    var priv: CPointer<GFileIOStreamPrivate>?
        get() = memberAt<CPointerVar<GFileIOStreamPrivate>>(32).value
        set(value) { memberAt<CPointerVar<GFileIOStreamPrivate>>(32).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GIOStream(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GIOStreamPrivate>?
        get() = memberAt<CPointerVar<GIOStreamPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GIOStreamPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GInetAddress(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GInetAddressPrivate>?
        get() = memberAt<CPointerVar<GInetAddressPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GInetAddressPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GInetAddressMask(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GInetAddressMaskPrivate>?
        get() = memberAt<CPointerVar<GInetAddressMaskPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GInetAddressMaskPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; } p0; void* p1; }")
class _GInetSocketAddress(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GSocketAddress
        get() = memberAt(0)
    
    var priv: CPointer<GInetSocketAddressPrivate>?
        get() = memberAt<CPointerVar<GInetSocketAddressPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GInetSocketAddressPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; }")
class _GSocketAddress(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GMemoryInputStream(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val parent_instance: GInputStream
        get() = memberAt(0)
    
    var priv: CPointer<GMemoryInputStreamPrivate>?
        get() = memberAt<CPointerVar<GMemoryInputStreamPrivate>>(32).value
        set(value) { memberAt<CPointerVar<GMemoryInputStreamPrivate>>(32).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GMemoryOutputStream(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val parent_instance: GOutputStream
        get() = memberAt(0)
    
    var priv: CPointer<GMemoryOutputStreamPrivate>?
        get() = memberAt<CPointerVar<GMemoryOutputStreamPrivate>>(32).value
        set(value) { memberAt<CPointerVar<GMemoryOutputStreamPrivate>>(32).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GMountOperation(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GMountOperationPrivate>?
        get() = memberAt<CPointerVar<GMountOperationPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GMountOperationPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GNetworkAddress(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GNetworkAddressPrivate>?
        get() = memberAt<CPointerVar<GNetworkAddressPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GNetworkAddressPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GNetworkService(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GNetworkServicePrivate>?
        get() = memberAt<CPointerVar<GNetworkServicePrivate>>(24).value
        set(value) { memberAt<CPointerVar<GNetworkServicePrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GResolver(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GResolverPrivate>?
        get() = memberAt<CPointerVar<GResolverPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GResolverPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GSocket(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GSocketPrivate>?
        get() = memberAt<CPointerVar<GSocketPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GSocketPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GSocketControlMessage(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GSocketControlMessagePrivate>?
        get() = memberAt<CPointerVar<GSocketControlMessagePrivate>>(24).value
        set(value) { memberAt<CPointerVar<GSocketControlMessagePrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GSocketClient(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GSocketClientPrivate>?
        get() = memberAt<CPointerVar<GSocketClientPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GSocketClientPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GSocketConnection(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val parent_instance: GIOStream
        get() = memberAt(0)
    
    var priv: CPointer<GSocketConnectionPrivate>?
        get() = memberAt<CPointerVar<GSocketConnectionPrivate>>(32).value
        set(value) { memberAt<CPointerVar<GSocketConnectionPrivate>>(32).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GSocketListener(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GSocketListenerPrivate>?
        get() = memberAt<CPointerVar<GSocketListenerPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GSocketListenerPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GSocketService(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val parent_instance: GSocketListener
        get() = memberAt(0)
    
    var priv: CPointer<GSocketServicePrivate>?
        get() = memberAt<CPointerVar<GSocketServicePrivate>>(32).value
        set(value) { memberAt<CPointerVar<GSocketServicePrivate>>(32).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; }")
class _GSocketAddressEnumerator(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GTcpConnection(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val parent_instance: GSocketConnection
        get() = memberAt(0)
    
    var priv: CPointer<GTcpConnectionPrivate>?
        get() = memberAt<CPointerVar<GTcpConnectionPrivate>>(40).value
        set(value) { memberAt<CPointerVar<GTcpConnectionPrivate>>(40).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GTcpWrapperConnection(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val parent_instance: GTcpConnection
        get() = memberAt(0)
    
    var priv: CPointer<GTcpWrapperConnectionPrivate>?
        get() = memberAt<CPointerVar<GTcpWrapperConnectionPrivate>>(48).value
        set(value) { memberAt<CPointerVar<GTcpWrapperConnectionPrivate>>(48).value = value }
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GThreadedSocketService(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val parent_instance: GSocketService
        get() = memberAt(0)
    
    var priv: CPointer<GThreadedSocketServicePrivate>?
        get() = memberAt<CPointerVar<GThreadedSocketServicePrivate>>(40).value
        set(value) { memberAt<CPointerVar<GThreadedSocketServicePrivate>>(40).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GTlsCertificate(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GTlsCertificatePrivate>?
        get() = memberAt<CPointerVar<GTlsCertificatePrivate>>(24).value
        set(value) { memberAt<CPointerVar<GTlsCertificatePrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; }")
class _GTlsConnection(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val parent_instance: GIOStream
        get() = memberAt(0)
    
    var priv: CPointer<GTlsConnectionPrivate>?
        get() = memberAt<CPointerVar<GTlsConnectionPrivate>>(32).value
        set(value) { memberAt<CPointerVar<GTlsConnectionPrivate>>(32).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GTlsDatabase(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GTlsDatabasePrivate>?
        get() = memberAt<CPointerVar<GTlsDatabasePrivate>>(24).value
        set(value) { memberAt<CPointerVar<GTlsDatabasePrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GTlsInteraction(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GTlsInteractionPrivate>?
        get() = memberAt<CPointerVar<GTlsInteractionPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GTlsInteractionPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GTlsPassword(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GTlsPasswordPrivate>?
        get() = memberAt<CPointerVar<GTlsPasswordPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GTlsPasswordPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; }")
class _GVfs(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; } p0; void* p1; } p0; void* p1; }")
class _GProxyAddress(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val parent_instance: GInetSocketAddress
        get() = memberAt(0)
    
    var priv: CPointer<GProxyAddressPrivate>?
        get() = memberAt<CPointerVar<GProxyAddressPrivate>>(32).value
        set(value) { memberAt<CPointerVar<GProxyAddressPrivate>>(32).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; } p0; void* p1; }")
class _GProxyAddressEnumerator(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GSocketAddressEnumerator
        get() = memberAt(0)
    
    var priv: CPointer<GProxyAddressEnumeratorPrivate>?
        get() = memberAt<CPointerVar<GProxyAddressEnumeratorPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GProxyAddressEnumeratorPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GVolumeMonitor(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: gpointer?
        get() = memberAt<gpointerVar>(24).value
        set(value) { memberAt<gpointerVar>(24).value = value }
}

@CStruct("struct { void* p0; unsigned long p1; }")
class _GInputVector(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    var buffer: gpointer?
        get() = memberAt<gpointerVar>(0).value
        set(value) { memberAt<gpointerVar>(0).value = value }
    
    var size: gsize
        get() = memberAt<gsizeVar>(8).value
        set(value) { memberAt<gsizeVar>(8).value = value }
}

@CStruct("struct { void* p0; void* p1; unsigned int p2; unsigned long p3; int p4; void* p5; void* p6; }")
class _GInputMessage(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    var address: CPointer<CPointerVar<GSocketAddress>>?
        get() = memberAt<CPointerVar<CPointerVar<GSocketAddress>>>(0).value
        set(value) { memberAt<CPointerVar<CPointerVar<GSocketAddress>>>(0).value = value }
    
    var vectors: CPointer<GInputVector>?
        get() = memberAt<CPointerVar<GInputVector>>(8).value
        set(value) { memberAt<CPointerVar<GInputVector>>(8).value = value }
    
    var num_vectors: guint
        get() = memberAt<guintVar>(16).value
        set(value) { memberAt<guintVar>(16).value = value }
    
    var bytes_received: gsize
        get() = memberAt<gsizeVar>(24).value
        set(value) { memberAt<gsizeVar>(24).value = value }
    
    var flags: gint
        get() = memberAt<gintVar>(32).value
        set(value) { memberAt<gintVar>(32).value = value }
    
    var control_messages: CPointer<CPointerVar<CPointerVar<GSocketControlMessage>>>?
        get() = memberAt<CPointerVar<CPointerVar<CPointerVar<GSocketControlMessage>>>>(40).value
        set(value) { memberAt<CPointerVar<CPointerVar<CPointerVar<GSocketControlMessage>>>>(40).value = value }
    
    var num_control_messages: CPointer<guintVar>?
        get() = memberAt<CPointerVar<guintVar>>(48).value
        set(value) { memberAt<CPointerVar<guintVar>>(48).value = value }
}

@CStruct("struct { void* p0; unsigned long p1; }")
class _GOutputVector(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    var buffer: gconstpointer?
        get() = memberAt<gconstpointerVar>(0).value
        set(value) { memberAt<gconstpointerVar>(0).value = value }
    
    var size: gsize
        get() = memberAt<gsizeVar>(8).value
        set(value) { memberAt<gsizeVar>(8).value = value }
}

@CStruct("struct { void* p0; void* p1; unsigned int p2; unsigned int p3; void* p4; unsigned int p5; }")
class _GOutputMessage(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    var address: CPointer<GSocketAddress>?
        get() = memberAt<CPointerVar<GSocketAddress>>(0).value
        set(value) { memberAt<CPointerVar<GSocketAddress>>(0).value = value }
    
    var vectors: CPointer<GOutputVector>?
        get() = memberAt<CPointerVar<GOutputVector>>(8).value
        set(value) { memberAt<CPointerVar<GOutputVector>>(8).value = value }
    
    var num_vectors: guint
        get() = memberAt<guintVar>(16).value
        set(value) { memberAt<guintVar>(16).value = value }
    
    var bytes_sent: guint
        get() = memberAt<guintVar>(20).value
        set(value) { memberAt<guintVar>(20).value = value }
    
    var control_messages: CPointer<CPointerVar<GSocketControlMessage>>?
        get() = memberAt<CPointerVar<CPointerVar<GSocketControlMessage>>>(24).value
        set(value) { memberAt<CPointerVar<CPointerVar<GSocketControlMessage>>>(24).value = value }
    
    var num_control_messages: guint
        get() = memberAt<guintVar>(32).value
        set(value) { memberAt<guintVar>(32).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GDBusProxy(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GDBusProxyPrivate>?
        get() = memberAt<CPointerVar<GDBusProxyPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GDBusProxyPrivate>>(24).value = value }
}

@CStruct("struct { int p0; void* p1; }")
class _GDBusErrorEntry(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    var error_code: gint
        get() = memberAt<gintVar>(0).value
        set(value) { memberAt<gintVar>(0).value = value }
    
    var dbus_error_name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(8).value
        set(value) { memberAt<CPointerVar<gcharVar>>(8).value = value }
}

@CStruct("struct { void* p0; void* p1; void* p2; void* p3[8]; }")
class _GDBusInterfaceVTable(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(88, 8)
    
    var method_call: GDBusInterfaceMethodCallFunc?
        get() = memberAt<GDBusInterfaceMethodCallFuncVar>(0).value
        set(value) { memberAt<GDBusInterfaceMethodCallFuncVar>(0).value = value }
    
    var get_property: GDBusInterfaceGetPropertyFunc?
        get() = memberAt<GDBusInterfaceGetPropertyFuncVar>(8).value
        set(value) { memberAt<GDBusInterfaceGetPropertyFuncVar>(8).value = value }
    
    var set_property: GDBusInterfaceSetPropertyFunc?
        get() = memberAt<GDBusInterfaceSetPropertyFuncVar>(16).value
        set(value) { memberAt<GDBusInterfaceSetPropertyFuncVar>(16).value = value }
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(24)
}

@CStruct("struct { void* p0; void* p1; void* p2; void* p3[8]; }")
class _GDBusSubtreeVTable(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(88, 8)
    
    var enumerate: GDBusSubtreeEnumerateFunc?
        get() = memberAt<GDBusSubtreeEnumerateFuncVar>(0).value
        set(value) { memberAt<GDBusSubtreeEnumerateFuncVar>(0).value = value }
    
    var introspect: GDBusSubtreeIntrospectFunc?
        get() = memberAt<GDBusSubtreeIntrospectFuncVar>(8).value
        set(value) { memberAt<GDBusSubtreeIntrospectFuncVar>(8).value = value }
    
    var dispatch: GDBusSubtreeDispatchFunc?
        get() = memberAt<GDBusSubtreeDispatchFuncVar>(16).value
        set(value) { memberAt<GDBusSubtreeDispatchFuncVar>(16).value = value }
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(24)
}

@CStruct("struct { int p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GDBusInterfaceInfo(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    var ref_count: gint
        get() = memberAt<gintVar>(0).value
        set(value) { memberAt<gintVar>(0).value = value }
    
    var name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(8).value
        set(value) { memberAt<CPointerVar<gcharVar>>(8).value = value }
    
    var methods: CPointer<CPointerVar<GDBusMethodInfo>>?
        get() = memberAt<CPointerVar<CPointerVar<GDBusMethodInfo>>>(16).value
        set(value) { memberAt<CPointerVar<CPointerVar<GDBusMethodInfo>>>(16).value = value }
    
    var signals: CPointer<CPointerVar<GDBusSignalInfo>>?
        get() = memberAt<CPointerVar<CPointerVar<GDBusSignalInfo>>>(24).value
        set(value) { memberAt<CPointerVar<CPointerVar<GDBusSignalInfo>>>(24).value = value }
    
    var properties: CPointer<CPointerVar<GDBusPropertyInfo>>?
        get() = memberAt<CPointerVar<CPointerVar<GDBusPropertyInfo>>>(32).value
        set(value) { memberAt<CPointerVar<CPointerVar<GDBusPropertyInfo>>>(32).value = value }
    
    var annotations: CPointer<CPointerVar<GDBusAnnotationInfo>>?
        get() = memberAt<CPointerVar<CPointerVar<GDBusAnnotationInfo>>>(40).value
        set(value) { memberAt<CPointerVar<CPointerVar<GDBusAnnotationInfo>>>(40).value = value }
}

@CStruct("struct { int p0; void* p1; void* p2; void* p3; void* p4; }")
class _GDBusMethodInfo(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    var ref_count: gint
        get() = memberAt<gintVar>(0).value
        set(value) { memberAt<gintVar>(0).value = value }
    
    var name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(8).value
        set(value) { memberAt<CPointerVar<gcharVar>>(8).value = value }
    
    var in_args: CPointer<CPointerVar<GDBusArgInfo>>?
        get() = memberAt<CPointerVar<CPointerVar<GDBusArgInfo>>>(16).value
        set(value) { memberAt<CPointerVar<CPointerVar<GDBusArgInfo>>>(16).value = value }
    
    var out_args: CPointer<CPointerVar<GDBusArgInfo>>?
        get() = memberAt<CPointerVar<CPointerVar<GDBusArgInfo>>>(24).value
        set(value) { memberAt<CPointerVar<CPointerVar<GDBusArgInfo>>>(24).value = value }
    
    var annotations: CPointer<CPointerVar<GDBusAnnotationInfo>>?
        get() = memberAt<CPointerVar<CPointerVar<GDBusAnnotationInfo>>>(32).value
        set(value) { memberAt<CPointerVar<CPointerVar<GDBusAnnotationInfo>>>(32).value = value }
}

@CStruct("struct { int p0; void* p1; void* p2; void* p3; }")
class _GDBusArgInfo(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    var ref_count: gint
        get() = memberAt<gintVar>(0).value
        set(value) { memberAt<gintVar>(0).value = value }
    
    var name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(8).value
        set(value) { memberAt<CPointerVar<gcharVar>>(8).value = value }
    
    var signature: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(16).value
        set(value) { memberAt<CPointerVar<gcharVar>>(16).value = value }
    
    var annotations: CPointer<CPointerVar<GDBusAnnotationInfo>>?
        get() = memberAt<CPointerVar<CPointerVar<GDBusAnnotationInfo>>>(24).value
        set(value) { memberAt<CPointerVar<CPointerVar<GDBusAnnotationInfo>>>(24).value = value }
}

@CStruct("struct { int p0; void* p1; void* p2; void* p3; }")
class _GDBusAnnotationInfo(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    var ref_count: gint
        get() = memberAt<gintVar>(0).value
        set(value) { memberAt<gintVar>(0).value = value }
    
    var key: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(8).value
        set(value) { memberAt<CPointerVar<gcharVar>>(8).value = value }
    
    var value: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(16).value
        set(value) { memberAt<CPointerVar<gcharVar>>(16).value = value }
    
    var annotations: CPointer<CPointerVar<GDBusAnnotationInfo>>?
        get() = memberAt<CPointerVar<CPointerVar<GDBusAnnotationInfo>>>(24).value
        set(value) { memberAt<CPointerVar<CPointerVar<GDBusAnnotationInfo>>>(24).value = value }
}

@CStruct("struct { int p0; void* p1; void* p2; void* p3; }")
class _GDBusSignalInfo(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    var ref_count: gint
        get() = memberAt<gintVar>(0).value
        set(value) { memberAt<gintVar>(0).value = value }
    
    var name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(8).value
        set(value) { memberAt<CPointerVar<gcharVar>>(8).value = value }
    
    var args: CPointer<CPointerVar<GDBusArgInfo>>?
        get() = memberAt<CPointerVar<CPointerVar<GDBusArgInfo>>>(16).value
        set(value) { memberAt<CPointerVar<CPointerVar<GDBusArgInfo>>>(16).value = value }
    
    var annotations: CPointer<CPointerVar<GDBusAnnotationInfo>>?
        get() = memberAt<CPointerVar<CPointerVar<GDBusAnnotationInfo>>>(24).value
        set(value) { memberAt<CPointerVar<CPointerVar<GDBusAnnotationInfo>>>(24).value = value }
}

@CStruct("struct { int p0; void* p1; void* p2; unsigned int p3; void* p4; }")
class _GDBusPropertyInfo(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    var ref_count: gint
        get() = memberAt<gintVar>(0).value
        set(value) { memberAt<gintVar>(0).value = value }
    
    var name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(8).value
        set(value) { memberAt<CPointerVar<gcharVar>>(8).value = value }
    
    var signature: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(16).value
        set(value) { memberAt<CPointerVar<gcharVar>>(16).value = value }
    
    var flags: GDBusPropertyInfoFlags
        get() = memberAt<GDBusPropertyInfoFlagsVar>(24).value
        set(value) { memberAt<GDBusPropertyInfoFlagsVar>(24).value = value }
    
    var annotations: CPointer<CPointerVar<GDBusAnnotationInfo>>?
        get() = memberAt<CPointerVar<CPointerVar<GDBusAnnotationInfo>>>(32).value
        set(value) { memberAt<CPointerVar<CPointerVar<GDBusAnnotationInfo>>>(32).value = value }
}

@CStruct("struct { int p0; void* p1; void* p2; void* p3; void* p4; }")
class _GDBusNodeInfo(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    var ref_count: gint
        get() = memberAt<gintVar>(0).value
        set(value) { memberAt<gintVar>(0).value = value }
    
    var path: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(8).value
        set(value) { memberAt<CPointerVar<gcharVar>>(8).value = value }
    
    var interfaces: CPointer<CPointerVar<GDBusInterfaceInfo>>?
        get() = memberAt<CPointerVar<CPointerVar<GDBusInterfaceInfo>>>(16).value
        set(value) { memberAt<CPointerVar<CPointerVar<GDBusInterfaceInfo>>>(16).value = value }
    
    var nodes: CPointer<CPointerVar<GDBusNodeInfo>>?
        get() = memberAt<CPointerVar<CPointerVar<GDBusNodeInfo>>>(24).value
        set(value) { memberAt<CPointerVar<CPointerVar<GDBusNodeInfo>>>(24).value = value }
    
    var annotations: CPointer<CPointerVar<GDBusAnnotationInfo>>?
        get() = memberAt<CPointerVar<CPointerVar<GDBusAnnotationInfo>>>(32).value
        set(value) { memberAt<CPointerVar<CPointerVar<GDBusAnnotationInfo>>>(32).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GDBusInterfaceSkeleton(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GDBusInterfaceSkeletonPrivate>?
        get() = memberAt<CPointerVar<GDBusInterfaceSkeletonPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GDBusInterfaceSkeletonPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GDBusObjectSkeleton(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GDBusObjectSkeletonPrivate>?
        get() = memberAt<CPointerVar<GDBusObjectSkeletonPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GDBusObjectSkeletonPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GDBusObjectProxy(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GDBusObjectProxyPrivate>?
        get() = memberAt<CPointerVar<GDBusObjectProxyPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GDBusObjectProxyPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GDBusObjectManagerClient(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GDBusObjectManagerClientPrivate>?
        get() = memberAt<CPointerVar<GDBusObjectManagerClientPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GDBusObjectManagerClientPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GDBusObjectManagerServer(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GDBusObjectManagerServerPrivate>?
        get() = memberAt<CPointerVar<GDBusObjectManagerServerPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GDBusObjectManagerServerPrivate>>(24).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; }")
class _GActionInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(80, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var get_name: CPointer<CFunction<(CPointer<GAction>?) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAction>?) -> CPointer<gcharVar>?>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAction>?) -> CPointer<gcharVar>?>>>(16).value = value }
    
    var get_parameter_type: CPointer<CFunction<(CPointer<GAction>?) -> CPointer<GVariantType>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAction>?) -> CPointer<GVariantType>?>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAction>?) -> CPointer<GVariantType>?>>>(24).value = value }
    
    var get_state_type: CPointer<CFunction<(CPointer<GAction>?) -> CPointer<GVariantType>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAction>?) -> CPointer<GVariantType>?>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAction>?) -> CPointer<GVariantType>?>>>(32).value = value }
    
    var get_state_hint: CPointer<CFunction<(CPointer<GAction>?) -> CPointer<GVariant>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAction>?) -> CPointer<GVariant>?>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAction>?) -> CPointer<GVariant>?>>>(40).value = value }
    
    var get_enabled: CPointer<CFunction<(CPointer<GAction>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAction>?) -> gboolean>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAction>?) -> gboolean>>>(48).value = value }
    
    var get_state: CPointer<CFunction<(CPointer<GAction>?) -> CPointer<GVariant>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAction>?) -> CPointer<GVariant>?>>>(56).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAction>?) -> CPointer<GVariant>?>>>(56).value = value }
    
    var change_state: CPointer<CFunction<(CPointer<GAction>?, CPointer<GVariant>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAction>?, CPointer<GVariant>?) -> Unit>>>(64).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAction>?, CPointer<GVariant>?) -> Unit>>>(64).value = value }
    
    var activate: CPointer<CFunction<(CPointer<GAction>?, CPointer<GVariant>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAction>?, CPointer<GVariant>?) -> Unit>>>(72).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAction>?, CPointer<GVariant>?) -> Unit>>>(72).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; }")
class _GActionGroupInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(128, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var has_action: CPointer<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> gboolean>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> gboolean>>>(16).value = value }
    
    var list_actions: CPointer<CFunction<(CPointer<GActionGroup>?) -> CPointer<CPointerVar<gcharVar>>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?) -> CPointer<CPointerVar<gcharVar>>?>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?) -> CPointer<CPointerVar<gcharVar>>?>>>(24).value = value }
    
    var get_action_enabled: CPointer<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> gboolean>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> gboolean>>>(32).value = value }
    
    var get_action_parameter_type: CPointer<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> CPointer<GVariantType>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> CPointer<GVariantType>?>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> CPointer<GVariantType>?>>>(40).value = value }
    
    var get_action_state_type: CPointer<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> CPointer<GVariantType>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> CPointer<GVariantType>?>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> CPointer<GVariantType>?>>>(48).value = value }
    
    var get_action_state_hint: CPointer<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> CPointer<GVariant>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> CPointer<GVariant>?>>>(56).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> CPointer<GVariant>?>>>(56).value = value }
    
    var get_action_state: CPointer<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> CPointer<GVariant>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> CPointer<GVariant>?>>>(64).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> CPointer<GVariant>?>>>(64).value = value }
    
    var change_action_state: CPointer<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?, CPointer<GVariant>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?, CPointer<GVariant>?) -> Unit>>>(72).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?, CPointer<GVariant>?) -> Unit>>>(72).value = value }
    
    var activate_action: CPointer<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?, CPointer<GVariant>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?, CPointer<GVariant>?) -> Unit>>>(80).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?, CPointer<GVariant>?) -> Unit>>>(80).value = value }
    
    var action_added: CPointer<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> Unit>>>(88).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> Unit>>>(88).value = value }
    
    var action_removed: CPointer<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> Unit>>>(96).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?) -> Unit>>>(96).value = value }
    
    var action_enabled_changed: CPointer<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?, gboolean) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?, gboolean) -> Unit>>>(104).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?, gboolean) -> Unit>>>(104).value = value }
    
    var action_state_changed: CPointer<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?, CPointer<GVariant>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?, CPointer<GVariant>?) -> Unit>>>(112).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?, CPointer<GVariant>?) -> Unit>>>(112).value = value }
    
    var query_action: CPointer<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?, CPointer<gbooleanVar>?, CPointer<CPointerVar<GVariantType>>?, CPointer<CPointerVar<GVariantType>>?, CPointer<CPointerVar<GVariant>>?, CPointer<CPointerVar<GVariant>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?, CPointer<gbooleanVar>?, CPointer<CPointerVar<GVariantType>>?, CPointer<CPointerVar<GVariantType>>?, CPointer<CPointerVar<GVariant>>?, CPointer<CPointerVar<GVariant>>?) -> gboolean>>>(120).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GActionGroup>?, CPointer<gcharVar>?, CPointer<gbooleanVar>?, CPointer<CPointerVar<GVariantType>>?, CPointer<CPointerVar<GVariantType>>?, CPointer<CPointerVar<GVariant>>?, CPointer<CPointerVar<GVariant>>?) -> gboolean>>>(120).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; }")
class _GActionMapInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var lookup_action: CPointer<CFunction<(CPointer<GActionMap>?, CPointer<gcharVar>?) -> CPointer<GAction>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GActionMap>?, CPointer<gcharVar>?) -> CPointer<GAction>?>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GActionMap>?, CPointer<gcharVar>?) -> CPointer<GAction>?>>>(16).value = value }
    
    var add_action: CPointer<CFunction<(CPointer<GActionMap>?, CPointer<GAction>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GActionMap>?, CPointer<GAction>?) -> Unit>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GActionMap>?, CPointer<GAction>?) -> Unit>>>(24).value = value }
    
    var remove_action: CPointer<CFunction<(CPointer<GActionMap>?, CPointer<gcharVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GActionMap>?, CPointer<gcharVar>?) -> Unit>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GActionMap>?, CPointer<gcharVar>?) -> Unit>>>(32).value = value }
}

@CStruct("struct { void* p0; void* p1; void* p2; void* p3; void* p4; unsigned long p5[3]; }")
class _GActionEntry(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(64, 8)
    
    var name: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(0).value
        set(value) { memberAt<CPointerVar<gcharVar>>(0).value = value }
    
    var activate: CPointer<CFunction<(CPointer<GSimpleAction>?, CPointer<GVariant>?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSimpleAction>?, CPointer<GVariant>?, gpointer?) -> Unit>>>(8).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSimpleAction>?, CPointer<GVariant>?, gpointer?) -> Unit>>>(8).value = value }
    
    var parameter_type: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(16).value
        set(value) { memberAt<CPointerVar<gcharVar>>(16).value = value }
    
    var state: CPointer<gcharVar>?
        get() = memberAt<CPointerVar<gcharVar>>(24).value
        set(value) { memberAt<CPointerVar<gcharVar>>(24).value = value }
    
    var change_state: CPointer<CFunction<(CPointer<GSimpleAction>?, CPointer<GVariant>?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSimpleAction>?, CPointer<GVariant>?, gpointer?) -> Unit>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSimpleAction>?, CPointer<GVariant>?, gpointer?) -> Unit>>>(32).value = value }
    
    val padding: CArrayPointer<gsizeVar>
        get() = arrayMemberAt(40)
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; }")
class _GAppLaunchContextClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(200, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var get_display: CPointer<CFunction<(CPointer<GAppLaunchContext>?, CPointer<GAppInfo>?, CPointer<GList>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppLaunchContext>?, CPointer<GAppInfo>?, CPointer<GList>?) -> CPointer<ByteVar>?>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppLaunchContext>?, CPointer<GAppInfo>?, CPointer<GList>?) -> CPointer<ByteVar>?>>>(136).value = value }
    
    var get_startup_notify_id: CPointer<CFunction<(CPointer<GAppLaunchContext>?, CPointer<GAppInfo>?, CPointer<GList>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppLaunchContext>?, CPointer<GAppInfo>?, CPointer<GList>?) -> CPointer<ByteVar>?>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppLaunchContext>?, CPointer<GAppInfo>?, CPointer<GList>?) -> CPointer<ByteVar>?>>>(144).value = value }
    
    var launch_failed: CPointer<CFunction<(CPointer<GAppLaunchContext>?, CPointer<ByteVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppLaunchContext>?, CPointer<ByteVar>?) -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppLaunchContext>?, CPointer<ByteVar>?) -> Unit>>>(152).value = value }
    
    var launched: CPointer<CFunction<(CPointer<GAppLaunchContext>?, CPointer<GAppInfo>?, CPointer<GVariant>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppLaunchContext>?, CPointer<GAppInfo>?, CPointer<GVariant>?) -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppLaunchContext>?, CPointer<GAppInfo>?, CPointer<GVariant>?) -> Unit>>>(160).value = value }
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(192).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; void* p23; }")
class _GAppInfoIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(200, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var dup: CPointer<CFunction<(CPointer<GAppInfo>?) -> CPointer<GAppInfo>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> CPointer<GAppInfo>?>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> CPointer<GAppInfo>?>>>(16).value = value }
    
    var equal: CPointer<CFunction<(CPointer<GAppInfo>?, CPointer<GAppInfo>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?, CPointer<GAppInfo>?) -> gboolean>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?, CPointer<GAppInfo>?) -> gboolean>>>(24).value = value }
    
    var get_id: CPointer<CFunction<(CPointer<GAppInfo>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> CPointer<ByteVar>?>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> CPointer<ByteVar>?>>>(32).value = value }
    
    var get_name: CPointer<CFunction<(CPointer<GAppInfo>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> CPointer<ByteVar>?>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> CPointer<ByteVar>?>>>(40).value = value }
    
    var get_description: CPointer<CFunction<(CPointer<GAppInfo>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> CPointer<ByteVar>?>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> CPointer<ByteVar>?>>>(48).value = value }
    
    var get_executable: CPointer<CFunction<(CPointer<GAppInfo>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> CPointer<ByteVar>?>>>(56).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> CPointer<ByteVar>?>>>(56).value = value }
    
    var get_icon: CPointer<CFunction<(CPointer<GAppInfo>?) -> CPointer<GIcon>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> CPointer<GIcon>?>>>(64).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> CPointer<GIcon>?>>>(64).value = value }
    
    var launch: CPointer<CFunction<(CPointer<GAppInfo>?, CPointer<GList>?, CPointer<GAppLaunchContext>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?, CPointer<GList>?, CPointer<GAppLaunchContext>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(72).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?, CPointer<GList>?, CPointer<GAppLaunchContext>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(72).value = value }
    
    var supports_uris: CPointer<CFunction<(CPointer<GAppInfo>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> gboolean>>>(80).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> gboolean>>>(80).value = value }
    
    var supports_files: CPointer<CFunction<(CPointer<GAppInfo>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> gboolean>>>(88).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> gboolean>>>(88).value = value }
    
    var launch_uris: CPointer<CFunction<(CPointer<GAppInfo>?, CPointer<GList>?, CPointer<GAppLaunchContext>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?, CPointer<GList>?, CPointer<GAppLaunchContext>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(96).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?, CPointer<GList>?, CPointer<GAppLaunchContext>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(96).value = value }
    
    var should_show: CPointer<CFunction<(CPointer<GAppInfo>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> gboolean>>>(104).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> gboolean>>>(104).value = value }
    
    var set_as_default_for_type: CPointer<CFunction<(CPointer<GAppInfo>?, CPointer<ByteVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?, CPointer<ByteVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(112).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?, CPointer<ByteVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(112).value = value }
    
    var set_as_default_for_extension: CPointer<CFunction<(CPointer<GAppInfo>?, CPointer<ByteVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?, CPointer<ByteVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(120).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?, CPointer<ByteVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(120).value = value }
    
    var add_supports_type: CPointer<CFunction<(CPointer<GAppInfo>?, CPointer<ByteVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?, CPointer<ByteVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(128).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?, CPointer<ByteVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(128).value = value }
    
    var can_remove_supports_type: CPointer<CFunction<(CPointer<GAppInfo>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> gboolean>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> gboolean>>>(136).value = value }
    
    var remove_supports_type: CPointer<CFunction<(CPointer<GAppInfo>?, CPointer<ByteVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?, CPointer<ByteVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?, CPointer<ByteVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(144).value = value }
    
    var can_delete: CPointer<CFunction<(CPointer<GAppInfo>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> gboolean>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> gboolean>>>(152).value = value }
    
    var do_delete: CPointer<CFunction<(CPointer<GAppInfo>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> gboolean>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> gboolean>>>(160).value = value }
    
    var get_commandline: CPointer<CFunction<(CPointer<GAppInfo>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> CPointer<ByteVar>?>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> CPointer<ByteVar>?>>>(168).value = value }
    
    var get_display_name: CPointer<CFunction<(CPointer<GAppInfo>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> CPointer<ByteVar>?>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> CPointer<ByteVar>?>>>(176).value = value }
    
    var set_as_last_used_for_type: CPointer<CFunction<(CPointer<GAppInfo>?, CPointer<ByteVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?, CPointer<ByteVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?, CPointer<ByteVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(184).value = value }
    
    var get_supported_types: CPointer<CFunction<(CPointer<GAppInfo>?) -> CPointer<CPointerVar<ByteVar>>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> CPointer<CPointerVar<ByteVar>>?>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAppInfo>?) -> CPointer<CPointerVar<ByteVar>>?>>>(192).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15[8]; }")
class _GApplicationClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(312, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var startup: CPointer<CFunction<(CPointer<GApplication>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GApplication>?) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GApplication>?) -> Unit>>>(136).value = value }
    
    var activate: CPointer<CFunction<(CPointer<GApplication>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GApplication>?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GApplication>?) -> Unit>>>(144).value = value }
    
    var open: CPointer<CFunction<(CPointer<GApplication>?, CPointer<CPointerVar<GFile>>?, gint, CPointer<gcharVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GApplication>?, CPointer<CPointerVar<GFile>>?, gint, CPointer<gcharVar>?) -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GApplication>?, CPointer<CPointerVar<GFile>>?, gint, CPointer<gcharVar>?) -> Unit>>>(152).value = value }
    
    var command_line: CPointer<CFunction<(CPointer<GApplication>?, CPointer<GApplicationCommandLine>?) -> Int>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GApplication>?, CPointer<GApplicationCommandLine>?) -> Int>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GApplication>?, CPointer<GApplicationCommandLine>?) -> Int>>>(160).value = value }
    
    var local_command_line: CPointer<CFunction<(CPointer<GApplication>?, CPointer<CPointerVar<CPointerVar<gcharVar>>>?, CPointer<IntVar>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GApplication>?, CPointer<CPointerVar<CPointerVar<gcharVar>>>?, CPointer<IntVar>?) -> gboolean>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GApplication>?, CPointer<CPointerVar<CPointerVar<gcharVar>>>?, CPointer<IntVar>?) -> gboolean>>>(168).value = value }
    
    var before_emit: CPointer<CFunction<(CPointer<GApplication>?, CPointer<GVariant>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GApplication>?, CPointer<GVariant>?) -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GApplication>?, CPointer<GVariant>?) -> Unit>>>(176).value = value }
    
    var after_emit: CPointer<CFunction<(CPointer<GApplication>?, CPointer<GVariant>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GApplication>?, CPointer<GVariant>?) -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GApplication>?, CPointer<GVariant>?) -> Unit>>>(184).value = value }
    
    var add_platform_data: CPointer<CFunction<(CPointer<GApplication>?, CPointer<GVariantBuilder>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GApplication>?, CPointer<GVariantBuilder>?) -> Unit>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GApplication>?, CPointer<GVariantBuilder>?) -> Unit>>>(192).value = value }
    
    var quit_mainloop: CPointer<CFunction<(CPointer<GApplication>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GApplication>?) -> Unit>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GApplication>?) -> Unit>>>(200).value = value }
    
    var run_mainloop: CPointer<CFunction<(CPointer<GApplication>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GApplication>?) -> Unit>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GApplication>?) -> Unit>>>(208).value = value }
    
    var shutdown: CPointer<CFunction<(CPointer<GApplication>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GApplication>?) -> Unit>>>(216).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GApplication>?) -> Unit>>>(216).value = value }
    
    var dbus_register: CPointer<CFunction<(CPointer<GApplication>?, CPointer<GDBusConnection>?, CPointer<gcharVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GApplication>?, CPointer<GDBusConnection>?, CPointer<gcharVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(224).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GApplication>?, CPointer<GDBusConnection>?, CPointer<gcharVar>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(224).value = value }
    
    var dbus_unregister: CPointer<CFunction<(CPointer<GApplication>?, CPointer<GDBusConnection>?, CPointer<gcharVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GApplication>?, CPointer<GDBusConnection>?, CPointer<gcharVar>?) -> Unit>>>(232).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GApplication>?, CPointer<GDBusConnection>?, CPointer<gcharVar>?) -> Unit>>>(232).value = value }
    
    var handle_local_options: CPointer<CFunction<(CPointer<GApplication>?, CPointer<GVariantDict>?) -> gint>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GApplication>?, CPointer<GVariantDict>?) -> gint>>>(240).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GApplication>?, CPointer<GVariantDict>?) -> gint>>>(240).value = value }
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(248)
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4[11]; }")
class _GApplicationCommandLineClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(248, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var print_literal: CPointer<CFunction<(CPointer<GApplicationCommandLine>?, CPointer<gcharVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GApplicationCommandLine>?, CPointer<gcharVar>?) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GApplicationCommandLine>?, CPointer<gcharVar>?) -> Unit>>>(136).value = value }
    
    var printerr_literal: CPointer<CFunction<(CPointer<GApplicationCommandLine>?, CPointer<gcharVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GApplicationCommandLine>?, CPointer<gcharVar>?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GApplicationCommandLine>?, CPointer<gcharVar>?) -> Unit>>>(144).value = value }
    
    var get_stdin: CPointer<CFunction<(CPointer<GApplicationCommandLine>?) -> CPointer<GInputStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GApplicationCommandLine>?) -> CPointer<GInputStream>?>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GApplicationCommandLine>?) -> CPointer<GInputStream>?>>>(152).value = value }
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(160)
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; }")
class _GInitableIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var init: CPointer<CFunction<(CPointer<GInitable>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GInitable>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GInitable>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(16).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; }")
class _GAsyncInitableIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var init_async: CPointer<CFunction<(CPointer<GAsyncInitable>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAsyncInitable>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAsyncInitable>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(16).value = value }
    
    var init_finish: CPointer<CFunction<(CPointer<GAsyncInitable>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAsyncInitable>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAsyncInitable>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(24).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; }")
class _GAsyncResultIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var get_user_data: CPointer<CFunction<(CPointer<GAsyncResult>?) -> gpointer?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAsyncResult>?) -> gpointer?>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAsyncResult>?) -> gpointer?>>>(16).value = value }
    
    var get_source_object: CPointer<CFunction<(CPointer<GAsyncResult>?) -> CPointer<GObject>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAsyncResult>?) -> CPointer<GObject>?>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAsyncResult>?) -> CPointer<GObject>?>>>(24).value = value }
    
    var is_tagged: CPointer<CFunction<(CPointer<GAsyncResult>?, gpointer?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GAsyncResult>?, gpointer?) -> gboolean>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GAsyncResult>?, gpointer?) -> gboolean>>>(32).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; }")
class _GInputStreamClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(248, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var read_fn: CPointer<CFunction<(CPointer<GInputStream>?, COpaquePointer?, gsize, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gssize>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GInputStream>?, COpaquePointer?, gsize, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GInputStream>?, COpaquePointer?, gsize, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(136).value = value }
    
    var skip: CPointer<CFunction<(CPointer<GInputStream>?, gsize, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gssize>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GInputStream>?, gsize, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GInputStream>?, gsize, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(144).value = value }
    
    var close_fn: CPointer<CFunction<(CPointer<GInputStream>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GInputStream>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GInputStream>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(152).value = value }
    
    var read_async: CPointer<CFunction<(CPointer<GInputStream>?, COpaquePointer?, gsize, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GInputStream>?, COpaquePointer?, gsize, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GInputStream>?, COpaquePointer?, gsize, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(160).value = value }
    
    var read_finish: CPointer<CFunction<(CPointer<GInputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gssize>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GInputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GInputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(168).value = value }
    
    var skip_async: CPointer<CFunction<(CPointer<GInputStream>?, gsize, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GInputStream>?, gsize, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GInputStream>?, gsize, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(176).value = value }
    
    var skip_finish: CPointer<CFunction<(CPointer<GInputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gssize>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GInputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GInputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(184).value = value }
    
    var close_async: CPointer<CFunction<(CPointer<GInputStream>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GInputStream>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GInputStream>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(192).value = value }
    
    var close_finish: CPointer<CFunction<(CPointer<GInputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GInputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GInputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(200).value = value }
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(208).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(216).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(216).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(224).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(224).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(232).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(232).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(240).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(240).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; } p0; void* p1; void* p2; void* p3; }")
class _GFilterInputStreamClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(272, 8)
    
    val parent_class: GInputStreamClass
        get() = memberAt(0)
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(248).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(248).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(256).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(256).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value = value }
}

@CStruct("struct { struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; } p0; void* p1; void* p2; void* p3; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; }")
class _GBufferedInputStreamClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(336, 8)
    
    val parent_class: GFilterInputStreamClass
        get() = memberAt(0)
    
    var fill: CPointer<CFunction<(CPointer<GBufferedInputStream>?, gssize, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gssize>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GBufferedInputStream>?, gssize, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(272).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GBufferedInputStream>?, gssize, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(272).value = value }
    
    var fill_async: CPointer<CFunction<(CPointer<GBufferedInputStream>?, gssize, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GBufferedInputStream>?, gssize, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(280).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GBufferedInputStream>?, gssize, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(280).value = value }
    
    var fill_finish: CPointer<CFunction<(CPointer<GBufferedInputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gssize>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GBufferedInputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(288).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GBufferedInputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(288).value = value }
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(304).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(304).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(312).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(312).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(320).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(320).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; }")
class _GOutputStreamClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(296, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var write_fn: CPointer<CFunction<(CPointer<GOutputStream>?, COpaquePointer?, gsize, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gssize>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, COpaquePointer?, gsize, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, COpaquePointer?, gsize, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(136).value = value }
    
    var splice: CPointer<CFunction<(CPointer<GOutputStream>?, CPointer<GInputStream>?, GOutputStreamSpliceFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gssize>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, CPointer<GInputStream>?, GOutputStreamSpliceFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, CPointer<GInputStream>?, GOutputStreamSpliceFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(144).value = value }
    
    var flush: CPointer<CFunction<(CPointer<GOutputStream>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(152).value = value }
    
    var close_fn: CPointer<CFunction<(CPointer<GOutputStream>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(160).value = value }
    
    var write_async: CPointer<CFunction<(CPointer<GOutputStream>?, COpaquePointer?, gsize, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, COpaquePointer?, gsize, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, COpaquePointer?, gsize, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(168).value = value }
    
    var write_finish: CPointer<CFunction<(CPointer<GOutputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gssize>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(176).value = value }
    
    var splice_async: CPointer<CFunction<(CPointer<GOutputStream>?, CPointer<GInputStream>?, GOutputStreamSpliceFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, CPointer<GInputStream>?, GOutputStreamSpliceFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, CPointer<GInputStream>?, GOutputStreamSpliceFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(184).value = value }
    
    var splice_finish: CPointer<CFunction<(CPointer<GOutputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gssize>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gssize>>>(192).value = value }
    
    var flush_async: CPointer<CFunction<(CPointer<GOutputStream>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(200).value = value }
    
    var flush_finish: CPointer<CFunction<(CPointer<GOutputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(208).value = value }
    
    var close_async: CPointer<CFunction<(CPointer<GOutputStream>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(216).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(216).value = value }
    
    var close_finish: CPointer<CFunction<(CPointer<GOutputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(224).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GOutputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(224).value = value }
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(232).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(232).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(240).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(240).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(248).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(248).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(256).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(256).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value = value }
    
    var _g_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value = value }
    
    var _g_reserved7: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(280).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(280).value = value }
    
    var _g_reserved8: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(288).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(288).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; } p0; void* p1; void* p2; void* p3; }")
class _GFilterOutputStreamClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(320, 8)
    
    val parent_class: GOutputStreamClass
        get() = memberAt(0)
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(304).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(304).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(312).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(312).value = value }
}

@CStruct("struct { struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; } p0; void* p1; void* p2; void* p3; } p0; void* p1; void* p2; }")
class _GBufferedOutputStreamClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(336, 8)
    
    val parent_class: GFilterOutputStreamClass
        get() = memberAt(0)
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(320).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(320).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; }")
class _GCancellableClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(184, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var cancelled: CPointer<CFunction<(CPointer<GCancellable>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GCancellable>?) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GCancellable>?) -> Unit>>>(136).value = value }
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; }")
class _GConverterIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var convert: CPointer<CFunction<(CPointer<GConverter>?, COpaquePointer?, gsize, COpaquePointer?, gsize, GConverterFlags, CPointer<gsizeVar>?, CPointer<gsizeVar>?, CPointer<CPointerVar<GError>>?) -> GConverterResult>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GConverter>?, COpaquePointer?, gsize, COpaquePointer?, gsize, GConverterFlags, CPointer<gsizeVar>?, CPointer<gsizeVar>?, CPointer<CPointerVar<GError>>?) -> GConverterResult>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GConverter>?, COpaquePointer?, gsize, COpaquePointer?, gsize, GConverterFlags, CPointer<gsizeVar>?, CPointer<gsizeVar>?, CPointer<CPointerVar<GError>>?) -> GConverterResult>>>(16).value = value }
    
    var reset: CPointer<CFunction<(CPointer<GConverter>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GConverter>?) -> Unit>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GConverter>?) -> Unit>>>(24).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; }")
class _GCharsetConverterClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(136, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; } p0; void* p1; void* p2; void* p3; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GConverterInputStreamClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(312, 8)
    
    val parent_class: GFilterInputStreamClass
        get() = memberAt(0)
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(280).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(280).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(288).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(288).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(304).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(304).value = value }
}

@CStruct("struct { struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; } p0; void* p1; void* p2; void* p3; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GConverterOutputStreamClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(360, 8)
    
    val parent_class: GFilterOutputStreamClass
        get() = memberAt(0)
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(320).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(320).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(336).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(336).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(344).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(344).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(352).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(352).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GDatagramBasedInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var receive_messages: CPointer<CFunction<(CPointer<GDatagramBased>?, CPointer<GInputMessage>?, guint, gint, gint64, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gint>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDatagramBased>?, CPointer<GInputMessage>?, guint, gint, gint64, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gint>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDatagramBased>?, CPointer<GInputMessage>?, guint, gint, gint64, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gint>>>(16).value = value }
    
    var send_messages: CPointer<CFunction<(CPointer<GDatagramBased>?, CPointer<GOutputMessage>?, guint, gint, gint64, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gint>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDatagramBased>?, CPointer<GOutputMessage>?, guint, gint, gint64, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gint>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDatagramBased>?, CPointer<GOutputMessage>?, guint, gint, gint64, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gint>>>(24).value = value }
    
    var create_source: CPointer<CFunction<(CPointer<GDatagramBased>?, GIOCondition, CPointer<GCancellable>?) -> CPointer<GSource>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDatagramBased>?, GIOCondition, CPointer<GCancellable>?) -> CPointer<GSource>?>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDatagramBased>?, GIOCondition, CPointer<GCancellable>?) -> CPointer<GSource>?>>>(32).value = value }
    
    var condition_check: CPointer<CFunction<(CPointer<GDatagramBased>?, GIOCondition) -> GIOCondition>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDatagramBased>?, GIOCondition) -> GIOCondition>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDatagramBased>?, GIOCondition) -> GIOCondition>>>(40).value = value }
    
    var condition_wait: CPointer<CFunction<(CPointer<GDatagramBased>?, GIOCondition, gint64, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDatagramBased>?, GIOCondition, gint64, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDatagramBased>?, GIOCondition, gint64, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(48).value = value }
}

@CStruct("struct { struct { struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; } p0; void* p1; void* p2; void* p3; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GDataInputStreamClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(376, 8)
    
    val parent_class: GBufferedInputStreamClass
        get() = memberAt(0)
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(336).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(336).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(344).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(344).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(352).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(352).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(360).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(360).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(368).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(368).value = value }
}

@CStruct("struct { struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; void* p1; } p0; void* p1; }")
class _GDataOutputStream(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val parent_instance: GFilterOutputStream
        get() = memberAt(0)
    
    var priv: CPointer<GDataOutputStreamPrivate>?
        get() = memberAt<CPointerVar<GDataOutputStreamPrivate>>(40).value
        set(value) { memberAt<CPointerVar<GDataOutputStreamPrivate>>(40).value = value }
}

@CStruct("struct { struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; } p0; void* p1; void* p2; void* p3; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GDataOutputStreamClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(360, 8)
    
    val parent_class: GFilterOutputStreamClass
        get() = memberAt(0)
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(320).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(320).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(336).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(336).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(344).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(344).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(352).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(352).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3[32]; }")
class _GDBusProxyClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(408, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var g_properties_changed: CPointer<CFunction<(CPointer<GDBusProxy>?, CPointer<GVariant>?, CPointer<CPointerVar<gcharVar>>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusProxy>?, CPointer<GVariant>?, CPointer<CPointerVar<gcharVar>>?) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusProxy>?, CPointer<GVariant>?, CPointer<CPointerVar<gcharVar>>?) -> Unit>>>(136).value = value }
    
    var g_signal: CPointer<CFunction<(CPointer<GDBusProxy>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<GVariant>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusProxy>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<GVariant>?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusProxy>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<GVariant>?) -> Unit>>>(144).value = value }
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(152)
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; void* p23; void* p24; void* p25; void* p26; void* p27; void* p28; void* p29; void* p30; void* p31; void* p32; }")
class _GDriveIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(272, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var changed: CPointer<CFunction<(CPointer<GDrive>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> Unit>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> Unit>>>(16).value = value }
    
    var disconnected: CPointer<CFunction<(CPointer<GDrive>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> Unit>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> Unit>>>(24).value = value }
    
    var eject_button: CPointer<CFunction<(CPointer<GDrive>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> Unit>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> Unit>>>(32).value = value }
    
    var get_name: CPointer<CFunction<(CPointer<GDrive>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> CPointer<ByteVar>?>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> CPointer<ByteVar>?>>>(40).value = value }
    
    var get_icon: CPointer<CFunction<(CPointer<GDrive>?) -> CPointer<GIcon>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> CPointer<GIcon>?>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> CPointer<GIcon>?>>>(48).value = value }
    
    var has_volumes: CPointer<CFunction<(CPointer<GDrive>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(56).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(56).value = value }
    
    var get_volumes: CPointer<CFunction<(CPointer<GDrive>?) -> CPointer<GList>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> CPointer<GList>?>>>(64).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> CPointer<GList>?>>>(64).value = value }
    
    var is_media_removable: CPointer<CFunction<(CPointer<GDrive>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(72).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(72).value = value }
    
    var has_media: CPointer<CFunction<(CPointer<GDrive>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(80).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(80).value = value }
    
    var is_media_check_automatic: CPointer<CFunction<(CPointer<GDrive>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(88).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(88).value = value }
    
    var can_eject: CPointer<CFunction<(CPointer<GDrive>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(96).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(96).value = value }
    
    var can_poll_for_media: CPointer<CFunction<(CPointer<GDrive>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(104).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(104).value = value }
    
    var eject: CPointer<CFunction<(CPointer<GDrive>?, GMountUnmountFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, GMountUnmountFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(112).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, GMountUnmountFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(112).value = value }
    
    var eject_finish: CPointer<CFunction<(CPointer<GDrive>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(120).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(120).value = value }
    
    var poll_for_media: CPointer<CFunction<(CPointer<GDrive>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(128).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(128).value = value }
    
    var poll_for_media_finish: CPointer<CFunction<(CPointer<GDrive>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(136).value = value }
    
    var get_identifier: CPointer<CFunction<(CPointer<GDrive>?, CPointer<ByteVar>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, CPointer<ByteVar>?) -> CPointer<ByteVar>?>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, CPointer<ByteVar>?) -> CPointer<ByteVar>?>>>(144).value = value }
    
    var enumerate_identifiers: CPointer<CFunction<(CPointer<GDrive>?) -> CPointer<CPointerVar<ByteVar>>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> CPointer<CPointerVar<ByteVar>>?>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> CPointer<CPointerVar<ByteVar>>?>>>(152).value = value }
    
    var get_start_stop_type: CPointer<CFunction<(CPointer<GDrive>?) -> GDriveStartStopType>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> GDriveStartStopType>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> GDriveStartStopType>>>(160).value = value }
    
    var can_start: CPointer<CFunction<(CPointer<GDrive>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(168).value = value }
    
    var can_start_degraded: CPointer<CFunction<(CPointer<GDrive>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(176).value = value }
    
    var start: CPointer<CFunction<(CPointer<GDrive>?, GDriveStartFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, GDriveStartFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, GDriveStartFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(184).value = value }
    
    var start_finish: CPointer<CFunction<(CPointer<GDrive>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(192).value = value }
    
    var can_stop: CPointer<CFunction<(CPointer<GDrive>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(200).value = value }
    
    var stop: CPointer<CFunction<(CPointer<GDrive>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(208).value = value }
    
    var stop_finish: CPointer<CFunction<(CPointer<GDrive>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(216).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(216).value = value }
    
    var stop_button: CPointer<CFunction<(CPointer<GDrive>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> Unit>>>(224).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> Unit>>>(224).value = value }
    
    var eject_with_operation: CPointer<CFunction<(CPointer<GDrive>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(232).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(232).value = value }
    
    var eject_with_operation_finish: CPointer<CFunction<(CPointer<GDrive>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(240).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(240).value = value }
    
    var get_sort_key: CPointer<CFunction<(CPointer<GDrive>?) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> CPointer<gcharVar>?>>>(248).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> CPointer<gcharVar>?>>>(248).value = value }
    
    var get_symbolic_icon: CPointer<CFunction<(CPointer<GDrive>?) -> CPointer<GIcon>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> CPointer<GIcon>?>>>(256).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> CPointer<GIcon>?>>>(256).value = value }
    
    var is_removable: CPointer<CFunction<(CPointer<GDrive>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(264).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDrive>?) -> gboolean>>>(264).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; }")
class _GDtlsConnectionInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(72, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var accept_certificate: CPointer<CFunction<(CPointer<GDtlsConnection>?, CPointer<GTlsCertificate>?, GTlsCertificateFlags) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDtlsConnection>?, CPointer<GTlsCertificate>?, GTlsCertificateFlags) -> gboolean>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDtlsConnection>?, CPointer<GTlsCertificate>?, GTlsCertificateFlags) -> gboolean>>>(16).value = value }
    
    var handshake: CPointer<CFunction<(CPointer<GDtlsConnection>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDtlsConnection>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDtlsConnection>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(24).value = value }
    
    var handshake_async: CPointer<CFunction<(CPointer<GDtlsConnection>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDtlsConnection>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDtlsConnection>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(32).value = value }
    
    var handshake_finish: CPointer<CFunction<(CPointer<GDtlsConnection>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDtlsConnection>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDtlsConnection>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(40).value = value }
    
    var shutdown: CPointer<CFunction<(CPointer<GDtlsConnection>?, gboolean, gboolean, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDtlsConnection>?, gboolean, gboolean, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDtlsConnection>?, gboolean, gboolean, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(48).value = value }
    
    var shutdown_async: CPointer<CFunction<(CPointer<GDtlsConnection>?, gboolean, gboolean, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDtlsConnection>?, gboolean, gboolean, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(56).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDtlsConnection>?, gboolean, gboolean, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(56).value = value }
    
    var shutdown_finish: CPointer<CFunction<(CPointer<GDtlsConnection>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDtlsConnection>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(64).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDtlsConnection>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(64).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; }")
class _GDtlsClientConnectionInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; }")
class _GDtlsServerConnectionInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GIconIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var hash: CPointer<CFunction<(CPointer<GIcon>?) -> guint>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GIcon>?) -> guint>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GIcon>?) -> guint>>>(16).value = value }
    
    var equal: CPointer<CFunction<(CPointer<GIcon>?, CPointer<GIcon>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GIcon>?, CPointer<GIcon>?) -> gboolean>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GIcon>?, CPointer<GIcon>?) -> gboolean>>>(24).value = value }
    
    var to_tokens: CPointer<CFunction<(CPointer<GIcon>?, CPointer<GPtrArray>?, CPointer<gintVar>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GIcon>?, CPointer<GPtrArray>?, CPointer<gintVar>?) -> gboolean>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GIcon>?, CPointer<GPtrArray>?, CPointer<gintVar>?) -> gboolean>>>(32).value = value }
    
    var from_tokens: CPointer<CFunction<(CPointer<CPointerVar<gcharVar>>?, gint, gint, CPointer<CPointerVar<GError>>?) -> CPointer<GIcon>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<CPointerVar<gcharVar>>?, gint, gint, CPointer<CPointerVar<GError>>?) -> CPointer<GIcon>?>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<CPointerVar<gcharVar>>?, gint, gint, CPointer<CPointerVar<GError>>?) -> CPointer<GIcon>?>>>(40).value = value }
    
    var serialize: CPointer<CFunction<(CPointer<GIcon>?) -> CPointer<GVariant>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GIcon>?) -> CPointer<GVariant>?>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GIcon>?) -> CPointer<GVariant>?>>>(48).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GEmblemedIcon(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GEmblemedIconPrivate>?
        get() = memberAt<CPointerVar<GEmblemedIconPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GEmblemedIconPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; }")
class _GEmblemedIconClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(136, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; }")
class _GFileEnumeratorClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(240, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var next_file: CPointer<CFunction<(CPointer<GFileEnumerator>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileEnumerator>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileEnumerator>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(136).value = value }
    
    var close_fn: CPointer<CFunction<(CPointer<GFileEnumerator>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileEnumerator>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileEnumerator>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(144).value = value }
    
    var next_files_async: CPointer<CFunction<(CPointer<GFileEnumerator>?, Int, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileEnumerator>?, Int, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileEnumerator>?, Int, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(152).value = value }
    
    var next_files_finish: CPointer<CFunction<(CPointer<GFileEnumerator>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileEnumerator>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileEnumerator>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>>(160).value = value }
    
    var close_async: CPointer<CFunction<(CPointer<GFileEnumerator>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileEnumerator>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileEnumerator>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(168).value = value }
    
    var close_finish: CPointer<CFunction<(CPointer<GFileEnumerator>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileEnumerator>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileEnumerator>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(176).value = value }
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(192).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(200).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(208).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(216).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(216).value = value }
    
    var _g_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(224).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(224).value = value }
    
    var _g_reserved7: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(232).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(232).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; void* p23; void* p24; void* p25; void* p26; void* p27; void* p28; void* p29; void* p30; void* p31; void* p32; void* p33; void* p34; void* p35; void* p36; void* p37; void* p38; void* p39; void* p40; void* p41; void* p42; void* p43; void* p44; void* p45; void* p46; void* p47; void* p48; void* p49; void* p50; void* p51; void* p52; void* p53; void* p54; void* p55; void* p56; void* p57; void* p58; void* p59; void* p60; void* p61; void* p62; void* p63; void* p64; void* p65; void* p66; void* p67; void* p68; void* p69; void* p70; void* p71; void* p72; void* p73; void* p74; void* p75; void* p76; void* p77; void* p78; void* p79; void* p80; void* p81; void* p82; void* p83; void* p84; void* p85; void* p86; void* p87; void* p88; void* p89; void* p90; void* p91; void* p92; void* p93; int p94; void* p95; void* p96; void* p97; void* p98; void* p99; void* p100; void* p101; void* p102; void* p103; }")
class _GFileIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(840, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var dup: CPointer<CFunction<(CPointer<GFile>?) -> CPointer<GFile>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?) -> CPointer<GFile>?>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?) -> CPointer<GFile>?>>>(16).value = value }
    
    var hash: CPointer<CFunction<(CPointer<GFile>?) -> guint>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?) -> guint>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?) -> guint>>>(24).value = value }
    
    var equal: CPointer<CFunction<(CPointer<GFile>?, CPointer<GFile>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GFile>?) -> gboolean>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GFile>?) -> gboolean>>>(32).value = value }
    
    var is_native: CPointer<CFunction<(CPointer<GFile>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?) -> gboolean>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?) -> gboolean>>>(40).value = value }
    
    var has_uri_scheme: CPointer<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?) -> gboolean>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?) -> gboolean>>>(48).value = value }
    
    var get_uri_scheme: CPointer<CFunction<(CPointer<GFile>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?) -> CPointer<ByteVar>?>>>(56).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?) -> CPointer<ByteVar>?>>>(56).value = value }
    
    var get_basename: CPointer<CFunction<(CPointer<GFile>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?) -> CPointer<ByteVar>?>>>(64).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?) -> CPointer<ByteVar>?>>>(64).value = value }
    
    var get_path: CPointer<CFunction<(CPointer<GFile>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?) -> CPointer<ByteVar>?>>>(72).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?) -> CPointer<ByteVar>?>>>(72).value = value }
    
    var get_uri: CPointer<CFunction<(CPointer<GFile>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?) -> CPointer<ByteVar>?>>>(80).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?) -> CPointer<ByteVar>?>>>(80).value = value }
    
    var get_parse_name: CPointer<CFunction<(CPointer<GFile>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?) -> CPointer<ByteVar>?>>>(88).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?) -> CPointer<ByteVar>?>>>(88).value = value }
    
    var get_parent: CPointer<CFunction<(CPointer<GFile>?) -> CPointer<GFile>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?) -> CPointer<GFile>?>>>(96).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?) -> CPointer<GFile>?>>>(96).value = value }
    
    var prefix_matches: CPointer<CFunction<(CPointer<GFile>?, CPointer<GFile>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GFile>?) -> gboolean>>>(104).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GFile>?) -> gboolean>>>(104).value = value }
    
    var get_relative_path: CPointer<CFunction<(CPointer<GFile>?, CPointer<GFile>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GFile>?) -> CPointer<ByteVar>?>>>(112).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GFile>?) -> CPointer<ByteVar>?>>>(112).value = value }
    
    var resolve_relative_path: CPointer<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?) -> CPointer<GFile>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?) -> CPointer<GFile>?>>>(120).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?) -> CPointer<GFile>?>>>(120).value = value }
    
    var get_child_for_display_name: CPointer<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFile>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFile>?>>>(128).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFile>?>>>(128).value = value }
    
    var enumerate_children: CPointer<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, GFileQueryInfoFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileEnumerator>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, GFileQueryInfoFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileEnumerator>?>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, GFileQueryInfoFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileEnumerator>?>>>(136).value = value }
    
    var enumerate_children_async: CPointer<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, GFileQueryInfoFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, GFileQueryInfoFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, GFileQueryInfoFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(144).value = value }
    
    var enumerate_children_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileEnumerator>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileEnumerator>?>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileEnumerator>?>>>(152).value = value }
    
    var query_info: CPointer<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, GFileQueryInfoFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, GFileQueryInfoFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, GFileQueryInfoFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(160).value = value }
    
    var query_info_async: CPointer<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, GFileQueryInfoFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, GFileQueryInfoFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, GFileQueryInfoFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(168).value = value }
    
    var query_info_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(176).value = value }
    
    var query_filesystem_info: CPointer<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(184).value = value }
    
    var query_filesystem_info_async: CPointer<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(192).value = value }
    
    var query_filesystem_info_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(200).value = value }
    
    var find_enclosing_mount: CPointer<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GMount>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GMount>?>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GMount>?>>>(208).value = value }
    
    var find_enclosing_mount_async: CPointer<CFunction<(CPointer<GFile>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(216).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(216).value = value }
    
    var find_enclosing_mount_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GMount>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GMount>?>>>(224).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GMount>?>>>(224).value = value }
    
    var set_display_name: CPointer<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFile>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFile>?>>>(232).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFile>?>>>(232).value = value }
    
    var set_display_name_async: CPointer<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(240).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(240).value = value }
    
    var set_display_name_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFile>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFile>?>>>(248).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFile>?>>>(248).value = value }
    
    var query_settable_attributes: CPointer<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileAttributeInfoList>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileAttributeInfoList>?>>>(256).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileAttributeInfoList>?>>>(256).value = value }
    
    var _query_settable_attributes_async: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value = value }
    
    var _query_settable_attributes_finish: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value = value }
    
    var query_writable_namespaces: CPointer<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileAttributeInfoList>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileAttributeInfoList>?>>>(280).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileAttributeInfoList>?>>>(280).value = value }
    
    var _query_writable_namespaces_async: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(288).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(288).value = value }
    
    var _query_writable_namespaces_finish: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value = value }
    
    var set_attribute: CPointer<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, GFileAttributeType, gpointer?, GFileQueryInfoFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, GFileAttributeType, gpointer?, GFileQueryInfoFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(304).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, GFileAttributeType, gpointer?, GFileQueryInfoFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(304).value = value }
    
    var set_attributes_from_info: CPointer<CFunction<(CPointer<GFile>?, CPointer<GFileInfo>?, GFileQueryInfoFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GFileInfo>?, GFileQueryInfoFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(312).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GFileInfo>?, GFileQueryInfoFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(312).value = value }
    
    var set_attributes_async: CPointer<CFunction<(CPointer<GFile>?, CPointer<GFileInfo>?, GFileQueryInfoFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GFileInfo>?, GFileQueryInfoFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(320).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GFileInfo>?, GFileQueryInfoFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(320).value = value }
    
    var set_attributes_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GFileInfo>>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GFileInfo>>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(328).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GFileInfo>>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(328).value = value }
    
    var read_fn: CPointer<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInputStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInputStream>?>>>(336).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInputStream>?>>>(336).value = value }
    
    var read_async: CPointer<CFunction<(CPointer<GFile>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(344).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(344).value = value }
    
    var read_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInputStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInputStream>?>>>(352).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInputStream>?>>>(352).value = value }
    
    var append_to: CPointer<CFunction<(CPointer<GFile>?, GFileCreateFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileOutputStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileCreateFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileOutputStream>?>>>(360).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileCreateFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileOutputStream>?>>>(360).value = value }
    
    var append_to_async: CPointer<CFunction<(CPointer<GFile>?, GFileCreateFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileCreateFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(368).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileCreateFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(368).value = value }
    
    var append_to_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileOutputStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileOutputStream>?>>>(376).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileOutputStream>?>>>(376).value = value }
    
    var create: CPointer<CFunction<(CPointer<GFile>?, GFileCreateFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileOutputStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileCreateFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileOutputStream>?>>>(384).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileCreateFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileOutputStream>?>>>(384).value = value }
    
    var create_async: CPointer<CFunction<(CPointer<GFile>?, GFileCreateFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileCreateFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(392).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileCreateFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(392).value = value }
    
    var create_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileOutputStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileOutputStream>?>>>(400).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileOutputStream>?>>>(400).value = value }
    
    var replace: CPointer<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, gboolean, GFileCreateFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileOutputStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, gboolean, GFileCreateFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileOutputStream>?>>>(408).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, gboolean, GFileCreateFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileOutputStream>?>>>(408).value = value }
    
    var replace_async: CPointer<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, gboolean, GFileCreateFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, gboolean, GFileCreateFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(416).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, gboolean, GFileCreateFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(416).value = value }
    
    var replace_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileOutputStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileOutputStream>?>>>(424).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileOutputStream>?>>>(424).value = value }
    
    var delete_file: CPointer<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(432).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(432).value = value }
    
    var delete_file_async: CPointer<CFunction<(CPointer<GFile>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(440).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(440).value = value }
    
    var delete_file_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(448).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(448).value = value }
    
    var trash: CPointer<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(456).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(456).value = value }
    
    var trash_async: CPointer<CFunction<(CPointer<GFile>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(464).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(464).value = value }
    
    var trash_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(472).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(472).value = value }
    
    var make_directory: CPointer<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(480).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(480).value = value }
    
    var make_directory_async: CPointer<CFunction<(CPointer<GFile>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(488).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(488).value = value }
    
    var make_directory_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(496).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(496).value = value }
    
    var make_symbolic_link: CPointer<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(504).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(504).value = value }
    
    var _make_symbolic_link_async: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(512).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(512).value = value }
    
    var _make_symbolic_link_finish: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(520).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(520).value = value }
    
    var copy: CPointer<CFunction<(CPointer<GFile>?, CPointer<GFile>?, GFileCopyFlags, CPointer<GCancellable>?, GFileProgressCallback?, gpointer?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GFile>?, GFileCopyFlags, CPointer<GCancellable>?, GFileProgressCallback?, gpointer?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(528).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GFile>?, GFileCopyFlags, CPointer<GCancellable>?, GFileProgressCallback?, gpointer?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(528).value = value }
    
    var copy_async: CPointer<CFunction<(CPointer<GFile>?, CPointer<GFile>?, GFileCopyFlags, Int, CPointer<GCancellable>?, GFileProgressCallback?, gpointer?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GFile>?, GFileCopyFlags, Int, CPointer<GCancellable>?, GFileProgressCallback?, gpointer?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(536).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GFile>?, GFileCopyFlags, Int, CPointer<GCancellable>?, GFileProgressCallback?, gpointer?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(536).value = value }
    
    var copy_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(544).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(544).value = value }
    
    var move: CPointer<CFunction<(CPointer<GFile>?, CPointer<GFile>?, GFileCopyFlags, CPointer<GCancellable>?, GFileProgressCallback?, gpointer?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GFile>?, GFileCopyFlags, CPointer<GCancellable>?, GFileProgressCallback?, gpointer?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(552).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GFile>?, GFileCopyFlags, CPointer<GCancellable>?, GFileProgressCallback?, gpointer?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(552).value = value }
    
    var _move_async: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(560).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(560).value = value }
    
    var _move_finish: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(568).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(568).value = value }
    
    var mount_mountable: CPointer<CFunction<(CPointer<GFile>?, GMountMountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GMountMountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(576).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GMountMountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(576).value = value }
    
    var mount_mountable_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFile>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFile>?>>>(584).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFile>?>>>(584).value = value }
    
    var unmount_mountable: CPointer<CFunction<(CPointer<GFile>?, GMountUnmountFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GMountUnmountFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(592).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GMountUnmountFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(592).value = value }
    
    var unmount_mountable_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(600).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(600).value = value }
    
    var eject_mountable: CPointer<CFunction<(CPointer<GFile>?, GMountUnmountFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GMountUnmountFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(608).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GMountUnmountFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(608).value = value }
    
    var eject_mountable_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(616).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(616).value = value }
    
    var mount_enclosing_volume: CPointer<CFunction<(CPointer<GFile>?, GMountMountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GMountMountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(624).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GMountMountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(624).value = value }
    
    var mount_enclosing_volume_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(632).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(632).value = value }
    
    var monitor_dir: CPointer<CFunction<(CPointer<GFile>?, GFileMonitorFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileMonitor>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileMonitorFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileMonitor>?>>>(640).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileMonitorFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileMonitor>?>>>(640).value = value }
    
    var monitor_file: CPointer<CFunction<(CPointer<GFile>?, GFileMonitorFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileMonitor>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileMonitorFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileMonitor>?>>>(648).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileMonitorFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileMonitor>?>>>(648).value = value }
    
    var open_readwrite: CPointer<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileIOStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileIOStream>?>>>(656).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileIOStream>?>>>(656).value = value }
    
    var open_readwrite_async: CPointer<CFunction<(CPointer<GFile>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(664).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(664).value = value }
    
    var open_readwrite_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileIOStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileIOStream>?>>>(672).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileIOStream>?>>>(672).value = value }
    
    var create_readwrite: CPointer<CFunction<(CPointer<GFile>?, GFileCreateFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileIOStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileCreateFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileIOStream>?>>>(680).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileCreateFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileIOStream>?>>>(680).value = value }
    
    var create_readwrite_async: CPointer<CFunction<(CPointer<GFile>?, GFileCreateFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileCreateFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(688).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileCreateFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(688).value = value }
    
    var create_readwrite_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileIOStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileIOStream>?>>>(696).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileIOStream>?>>>(696).value = value }
    
    var replace_readwrite: CPointer<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, gboolean, GFileCreateFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileIOStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, gboolean, GFileCreateFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileIOStream>?>>>(704).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, gboolean, GFileCreateFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileIOStream>?>>>(704).value = value }
    
    var replace_readwrite_async: CPointer<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, gboolean, GFileCreateFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, gboolean, GFileCreateFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(712).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<ByteVar>?, gboolean, GFileCreateFlags, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(712).value = value }
    
    var replace_readwrite_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileIOStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileIOStream>?>>>(720).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileIOStream>?>>>(720).value = value }
    
    var start_mountable: CPointer<CFunction<(CPointer<GFile>?, GDriveStartFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GDriveStartFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(728).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GDriveStartFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(728).value = value }
    
    var start_mountable_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(736).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(736).value = value }
    
    var stop_mountable: CPointer<CFunction<(CPointer<GFile>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(744).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(744).value = value }
    
    var stop_mountable_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(752).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(752).value = value }
    
    var supports_thread_contexts: gboolean
        get() = memberAt<gbooleanVar>(760).value
        set(value) { memberAt<gbooleanVar>(760).value = value }
    
    var unmount_mountable_with_operation: CPointer<CFunction<(CPointer<GFile>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(768).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(768).value = value }
    
    var unmount_mountable_with_operation_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(776).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(776).value = value }
    
    var eject_mountable_with_operation: CPointer<CFunction<(CPointer<GFile>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(784).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(784).value = value }
    
    var eject_mountable_with_operation_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(792).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(792).value = value }
    
    var poll_mountable: CPointer<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(800).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(800).value = value }
    
    var poll_mountable_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(808).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(808).value = value }
    
    var measure_disk_usage: CPointer<CFunction<(CPointer<GFile>?, GFileMeasureFlags, CPointer<GCancellable>?, GFileMeasureProgressCallback?, gpointer?, CPointer<guint64Var>?, CPointer<guint64Var>?, CPointer<guint64Var>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileMeasureFlags, CPointer<GCancellable>?, GFileMeasureProgressCallback?, gpointer?, CPointer<guint64Var>?, CPointer<guint64Var>?, CPointer<guint64Var>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(816).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileMeasureFlags, CPointer<GCancellable>?, GFileMeasureProgressCallback?, gpointer?, CPointer<guint64Var>?, CPointer<guint64Var>?, CPointer<guint64Var>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(816).value = value }
    
    var measure_disk_usage_async: CPointer<CFunction<(CPointer<GFile>?, GFileMeasureFlags, gint, CPointer<GCancellable>?, GFileMeasureProgressCallback?, gpointer?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileMeasureFlags, gint, CPointer<GCancellable>?, GFileMeasureProgressCallback?, gpointer?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(824).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, GFileMeasureFlags, gint, CPointer<GCancellable>?, GFileMeasureProgressCallback?, gpointer?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(824).value = value }
    
    var measure_disk_usage_finish: CPointer<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<guint64Var>?, CPointer<guint64Var>?, CPointer<guint64Var>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<guint64Var>?, CPointer<guint64Var>?, CPointer<guint64Var>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(832).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFile>?, CPointer<GAsyncResult>?, CPointer<guint64Var>?, CPointer<guint64Var>?, CPointer<guint64Var>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(832).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; }")
class _GFileInputStreamClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(336, 8)
    
    val parent_class: GInputStreamClass
        get() = memberAt(0)
    
    var tell: CPointer<CFunction<(CPointer<GFileInputStream>?) -> goffset>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileInputStream>?) -> goffset>>>(248).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileInputStream>?) -> goffset>>>(248).value = value }
    
    var can_seek: CPointer<CFunction<(CPointer<GFileInputStream>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileInputStream>?) -> gboolean>>>(256).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileInputStream>?) -> gboolean>>>(256).value = value }
    
    var seek: CPointer<CFunction<(CPointer<GFileInputStream>?, goffset, GSeekType, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileInputStream>?, goffset, GSeekType, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(264).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileInputStream>?, goffset, GSeekType, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(264).value = value }
    
    var query_info: CPointer<CFunction<(CPointer<GFileInputStream>?, CPointer<ByteVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileInputStream>?, CPointer<ByteVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(272).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileInputStream>?, CPointer<ByteVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(272).value = value }
    
    var query_info_async: CPointer<CFunction<(CPointer<GFileInputStream>?, CPointer<ByteVar>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileInputStream>?, CPointer<ByteVar>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(280).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileInputStream>?, CPointer<ByteVar>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(280).value = value }
    
    var query_info_finish: CPointer<CFunction<(CPointer<GFileInputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileInputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(288).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileInputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(288).value = value }
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(304).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(304).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(312).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(312).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(320).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(320).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; }")
class _GIOStreamClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(256, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var get_input_stream: CPointer<CFunction<(CPointer<GIOStream>?) -> CPointer<GInputStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GIOStream>?) -> CPointer<GInputStream>?>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GIOStream>?) -> CPointer<GInputStream>?>>>(136).value = value }
    
    var get_output_stream: CPointer<CFunction<(CPointer<GIOStream>?) -> CPointer<GOutputStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GIOStream>?) -> CPointer<GOutputStream>?>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GIOStream>?) -> CPointer<GOutputStream>?>>>(144).value = value }
    
    var close_fn: CPointer<CFunction<(CPointer<GIOStream>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GIOStream>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GIOStream>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(152).value = value }
    
    var close_async: CPointer<CFunction<(CPointer<GIOStream>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GIOStream>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GIOStream>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(160).value = value }
    
    var close_finish: CPointer<CFunction<(CPointer<GIOStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GIOStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GIOStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(168).value = value }
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(192).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(200).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(208).value = value }
    
    var _g_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(216).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(216).value = value }
    
    var _g_reserved7: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(224).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(224).value = value }
    
    var _g_reserved8: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(232).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(232).value = value }
    
    var _g_reserved9: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(240).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(240).value = value }
    
    var _g_reserved10: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(248).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(248).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; }")
class _GFileIOStreamClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(368, 8)
    
    val parent_class: GIOStreamClass
        get() = memberAt(0)
    
    var tell: CPointer<CFunction<(CPointer<GFileIOStream>?) -> goffset>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileIOStream>?) -> goffset>>>(256).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileIOStream>?) -> goffset>>>(256).value = value }
    
    var can_seek: CPointer<CFunction<(CPointer<GFileIOStream>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileIOStream>?) -> gboolean>>>(264).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileIOStream>?) -> gboolean>>>(264).value = value }
    
    var seek: CPointer<CFunction<(CPointer<GFileIOStream>?, goffset, GSeekType, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileIOStream>?, goffset, GSeekType, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(272).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileIOStream>?, goffset, GSeekType, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(272).value = value }
    
    var can_truncate: CPointer<CFunction<(CPointer<GFileIOStream>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileIOStream>?) -> gboolean>>>(280).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileIOStream>?) -> gboolean>>>(280).value = value }
    
    var truncate_fn: CPointer<CFunction<(CPointer<GFileIOStream>?, goffset, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileIOStream>?, goffset, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(288).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileIOStream>?, goffset, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(288).value = value }
    
    var query_info: CPointer<CFunction<(CPointer<GFileIOStream>?, CPointer<ByteVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileIOStream>?, CPointer<ByteVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(296).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileIOStream>?, CPointer<ByteVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(296).value = value }
    
    var query_info_async: CPointer<CFunction<(CPointer<GFileIOStream>?, CPointer<ByteVar>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileIOStream>?, CPointer<ByteVar>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(304).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileIOStream>?, CPointer<ByteVar>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(304).value = value }
    
    var query_info_finish: CPointer<CFunction<(CPointer<GFileIOStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileIOStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(312).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileIOStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(312).value = value }
    
    var get_etag: CPointer<CFunction<(CPointer<GFileIOStream>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileIOStream>?) -> CPointer<ByteVar>?>>>(320).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileIOStream>?) -> CPointer<ByteVar>?>>>(320).value = value }
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(336).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(336).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(344).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(344).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(352).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(352).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(360).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(360).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; }")
class _GFileMonitorClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(192, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var changed: CPointer<CFunction<(CPointer<GFileMonitor>?, CPointer<GFile>?, CPointer<GFile>?, GFileMonitorEvent) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileMonitor>?, CPointer<GFile>?, CPointer<GFile>?, GFileMonitorEvent) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileMonitor>?, CPointer<GFile>?, CPointer<GFile>?, GFileMonitorEvent) -> Unit>>>(136).value = value }
    
    var cancel: CPointer<CFunction<(CPointer<GFileMonitor>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileMonitor>?) -> gboolean>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileMonitor>?) -> gboolean>>>(144).value = value }
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GFilenameCompleterClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(168, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var got_completion_data: CPointer<CFunction<(CPointer<GFilenameCompleter>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFilenameCompleter>?) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFilenameCompleter>?) -> Unit>>>(136).value = value }
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; }")
class _GFileOutputStreamClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(408, 8)
    
    val parent_class: GOutputStreamClass
        get() = memberAt(0)
    
    var tell: CPointer<CFunction<(CPointer<GFileOutputStream>?) -> goffset>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileOutputStream>?) -> goffset>>>(296).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileOutputStream>?) -> goffset>>>(296).value = value }
    
    var can_seek: CPointer<CFunction<(CPointer<GFileOutputStream>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileOutputStream>?) -> gboolean>>>(304).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileOutputStream>?) -> gboolean>>>(304).value = value }
    
    var seek: CPointer<CFunction<(CPointer<GFileOutputStream>?, goffset, GSeekType, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileOutputStream>?, goffset, GSeekType, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(312).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileOutputStream>?, goffset, GSeekType, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(312).value = value }
    
    var can_truncate: CPointer<CFunction<(CPointer<GFileOutputStream>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileOutputStream>?) -> gboolean>>>(320).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileOutputStream>?) -> gboolean>>>(320).value = value }
    
    var truncate_fn: CPointer<CFunction<(CPointer<GFileOutputStream>?, goffset, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileOutputStream>?, goffset, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(328).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileOutputStream>?, goffset, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(328).value = value }
    
    var query_info: CPointer<CFunction<(CPointer<GFileOutputStream>?, CPointer<ByteVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileOutputStream>?, CPointer<ByteVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(336).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileOutputStream>?, CPointer<ByteVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(336).value = value }
    
    var query_info_async: CPointer<CFunction<(CPointer<GFileOutputStream>?, CPointer<ByteVar>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileOutputStream>?, CPointer<ByteVar>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(344).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileOutputStream>?, CPointer<ByteVar>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(344).value = value }
    
    var query_info_finish: CPointer<CFunction<(CPointer<GFileOutputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileOutputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(352).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileOutputStream>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GFileInfo>?>>>(352).value = value }
    
    var get_etag: CPointer<CFunction<(CPointer<GFileOutputStream>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GFileOutputStream>?) -> CPointer<ByteVar>?>>>(360).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GFileOutputStream>?) -> CPointer<ByteVar>?>>>(360).value = value }
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(368).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(368).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(376).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(376).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(384).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(384).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(392).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(392).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(400).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(400).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; }")
class _GInetAddressClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(152, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var to_string: CPointer<CFunction<(CPointer<GInetAddress>?) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GInetAddress>?) -> CPointer<gcharVar>?>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GInetAddress>?) -> CPointer<gcharVar>?>>>(136).value = value }
    
    var to_bytes: CPointer<CFunction<(CPointer<GInetAddress>?) -> CPointer<guint8Var>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GInetAddress>?) -> CPointer<guint8Var>?>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GInetAddress>?) -> CPointer<guint8Var>?>>>(144).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; }")
class _GInetAddressMaskClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(136, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; }")
class _GSocketAddressClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(160, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var get_family: CPointer<CFunction<(CPointer<GSocketAddress>?) -> GSocketFamily>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSocketAddress>?) -> GSocketFamily>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSocketAddress>?) -> GSocketFamily>>>(136).value = value }
    
    var get_native_size: CPointer<CFunction<(CPointer<GSocketAddress>?) -> gssize>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSocketAddress>?) -> gssize>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSocketAddress>?) -> gssize>>>(144).value = value }
    
    var to_native: CPointer<CFunction<(CPointer<GSocketAddress>?, gpointer?, gsize, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSocketAddress>?, gpointer?, gsize, CPointer<CPointerVar<GError>>?) -> gboolean>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSocketAddress>?, gpointer?, gsize, CPointer<CPointerVar<GError>>?) -> gboolean>>>(152).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; } p0; }")
class _GInetSocketAddressClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(160, 8)
    
    val parent_class: GSocketAddressClass
        get() = memberAt(0)
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; }")
class _GLoadableIconIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var load: CPointer<CFunction<(CPointer<GLoadableIcon>?, Int, CPointer<CPointerVar<ByteVar>>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GInputStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GLoadableIcon>?, Int, CPointer<CPointerVar<ByteVar>>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GInputStream>?>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GLoadableIcon>?, Int, CPointer<CPointerVar<ByteVar>>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GInputStream>?>>>(16).value = value }
    
    var load_async: CPointer<CFunction<(CPointer<GLoadableIcon>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GLoadableIcon>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GLoadableIcon>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(24).value = value }
    
    var load_finish: CPointer<CFunction<(CPointer<GLoadableIcon>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<ByteVar>>?, CPointer<CPointerVar<GError>>?) -> CPointer<GInputStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GLoadableIcon>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<ByteVar>>?, CPointer<CPointerVar<GError>>?) -> CPointer<GInputStream>?>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GLoadableIcon>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<ByteVar>>?, CPointer<CPointerVar<GError>>?) -> CPointer<GInputStream>?>>>(32).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GMemoryInputStreamClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(288, 8)
    
    val parent_class: GInputStreamClass
        get() = memberAt(0)
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(248).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(248).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(256).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(256).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(280).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(280).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GMemoryOutputStreamClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(336, 8)
    
    val parent_class: GOutputStreamClass
        get() = memberAt(0)
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(304).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(304).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(312).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(312).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(320).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(320).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; void* p23; void* p24; void* p25; void* p26; void* p27; }")
class _GMountIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(232, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var changed: CPointer<CFunction<(CPointer<GMount>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> Unit>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> Unit>>>(16).value = value }
    
    var unmounted: CPointer<CFunction<(CPointer<GMount>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> Unit>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> Unit>>>(24).value = value }
    
    var get_root: CPointer<CFunction<(CPointer<GMount>?) -> CPointer<GFile>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> CPointer<GFile>?>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> CPointer<GFile>?>>>(32).value = value }
    
    var get_name: CPointer<CFunction<(CPointer<GMount>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> CPointer<ByteVar>?>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> CPointer<ByteVar>?>>>(40).value = value }
    
    var get_icon: CPointer<CFunction<(CPointer<GMount>?) -> CPointer<GIcon>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> CPointer<GIcon>?>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> CPointer<GIcon>?>>>(48).value = value }
    
    var get_uuid: CPointer<CFunction<(CPointer<GMount>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> CPointer<ByteVar>?>>>(56).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> CPointer<ByteVar>?>>>(56).value = value }
    
    var get_volume: CPointer<CFunction<(CPointer<GMount>?) -> CPointer<GVolume>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> CPointer<GVolume>?>>>(64).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> CPointer<GVolume>?>>>(64).value = value }
    
    var get_drive: CPointer<CFunction<(CPointer<GMount>?) -> CPointer<GDrive>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> CPointer<GDrive>?>>>(72).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> CPointer<GDrive>?>>>(72).value = value }
    
    var can_unmount: CPointer<CFunction<(CPointer<GMount>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> gboolean>>>(80).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> gboolean>>>(80).value = value }
    
    var can_eject: CPointer<CFunction<(CPointer<GMount>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> gboolean>>>(88).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> gboolean>>>(88).value = value }
    
    var unmount: CPointer<CFunction<(CPointer<GMount>?, GMountUnmountFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?, GMountUnmountFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(96).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?, GMountUnmountFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(96).value = value }
    
    var unmount_finish: CPointer<CFunction<(CPointer<GMount>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(104).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(104).value = value }
    
    var eject: CPointer<CFunction<(CPointer<GMount>?, GMountUnmountFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?, GMountUnmountFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(112).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?, GMountUnmountFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(112).value = value }
    
    var eject_finish: CPointer<CFunction<(CPointer<GMount>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(120).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(120).value = value }
    
    var remount: CPointer<CFunction<(CPointer<GMount>?, GMountMountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?, GMountMountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(128).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?, GMountMountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(128).value = value }
    
    var remount_finish: CPointer<CFunction<(CPointer<GMount>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(136).value = value }
    
    var guess_content_type: CPointer<CFunction<(CPointer<GMount>?, gboolean, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?, gboolean, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?, gboolean, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(144).value = value }
    
    var guess_content_type_finish: CPointer<CFunction<(CPointer<GMount>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<CPointerVar<gcharVar>>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<CPointerVar<gcharVar>>?>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<CPointerVar<gcharVar>>?>>>(152).value = value }
    
    var guess_content_type_sync: CPointer<CFunction<(CPointer<GMount>?, gboolean, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<CPointerVar<gcharVar>>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?, gboolean, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<CPointerVar<gcharVar>>?>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?, gboolean, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<CPointerVar<gcharVar>>?>>>(160).value = value }
    
    var pre_unmount: CPointer<CFunction<(CPointer<GMount>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> Unit>>>(168).value = value }
    
    var unmount_with_operation: CPointer<CFunction<(CPointer<GMount>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(176).value = value }
    
    var unmount_with_operation_finish: CPointer<CFunction<(CPointer<GMount>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(184).value = value }
    
    var eject_with_operation: CPointer<CFunction<(CPointer<GMount>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(192).value = value }
    
    var eject_with_operation_finish: CPointer<CFunction<(CPointer<GMount>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(200).value = value }
    
    var get_default_location: CPointer<CFunction<(CPointer<GMount>?) -> CPointer<GFile>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> CPointer<GFile>?>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> CPointer<GFile>?>>>(208).value = value }
    
    var get_sort_key: CPointer<CFunction<(CPointer<GMount>?) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> CPointer<gcharVar>?>>>(216).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> CPointer<gcharVar>?>>>(216).value = value }
    
    var get_symbolic_icon: CPointer<CFunction<(CPointer<GMount>?) -> CPointer<GIcon>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> CPointer<GIcon>?>>>(224).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?) -> CPointer<GIcon>?>>>(224).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; }")
class _GMountOperationClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(256, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var ask_password: CPointer<CFunction<(CPointer<GMountOperation>?, CPointer<ByteVar>?, CPointer<ByteVar>?, CPointer<ByteVar>?, GAskPasswordFlags) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMountOperation>?, CPointer<ByteVar>?, CPointer<ByteVar>?, CPointer<ByteVar>?, GAskPasswordFlags) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMountOperation>?, CPointer<ByteVar>?, CPointer<ByteVar>?, CPointer<ByteVar>?, GAskPasswordFlags) -> Unit>>>(136).value = value }
    
    var ask_question: CPointer<CFunction<(CPointer<GMountOperation>?, CPointer<ByteVar>?, CArrayPointer<CPointerVar<ByteVar>>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMountOperation>?, CPointer<ByteVar>?, CArrayPointer<CPointerVar<ByteVar>>?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMountOperation>?, CPointer<ByteVar>?, CArrayPointer<CPointerVar<ByteVar>>?) -> Unit>>>(144).value = value }
    
    var reply: CPointer<CFunction<(CPointer<GMountOperation>?, GMountOperationResult) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMountOperation>?, GMountOperationResult) -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMountOperation>?, GMountOperationResult) -> Unit>>>(152).value = value }
    
    var aborted: CPointer<CFunction<(CPointer<GMountOperation>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMountOperation>?) -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMountOperation>?) -> Unit>>>(160).value = value }
    
    var show_processes: CPointer<CFunction<(CPointer<GMountOperation>?, CPointer<gcharVar>?, CPointer<GArray>?, CArrayPointer<CPointerVar<gcharVar>>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMountOperation>?, CPointer<gcharVar>?, CPointer<GArray>?, CArrayPointer<CPointerVar<gcharVar>>?) -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMountOperation>?, CPointer<gcharVar>?, CPointer<GArray>?, CArrayPointer<CPointerVar<gcharVar>>?) -> Unit>>>(168).value = value }
    
    var show_unmount_progress: CPointer<CFunction<(CPointer<GMountOperation>?, CPointer<gcharVar>?, gint64, gint64) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMountOperation>?, CPointer<gcharVar>?, gint64, gint64) -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMountOperation>?, CPointer<gcharVar>?, gint64, gint64) -> Unit>>>(176).value = value }
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(192).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(200).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(208).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(216).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(216).value = value }
    
    var _g_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(224).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(224).value = value }
    
    var _g_reserved7: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(232).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(232).value = value }
    
    var _g_reserved8: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(240).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(240).value = value }
    
    var _g_reserved9: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(248).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(248).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; void* p23; void* p24; void* p25; }")
class _GVolumeMonitorClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(336, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var volume_added: CPointer<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GVolume>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GVolume>?) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GVolume>?) -> Unit>>>(136).value = value }
    
    var volume_removed: CPointer<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GVolume>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GVolume>?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GVolume>?) -> Unit>>>(144).value = value }
    
    var volume_changed: CPointer<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GVolume>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GVolume>?) -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GVolume>?) -> Unit>>>(152).value = value }
    
    var mount_added: CPointer<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GMount>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GMount>?) -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GMount>?) -> Unit>>>(160).value = value }
    
    var mount_removed: CPointer<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GMount>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GMount>?) -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GMount>?) -> Unit>>>(168).value = value }
    
    var mount_pre_unmount: CPointer<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GMount>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GMount>?) -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GMount>?) -> Unit>>>(176).value = value }
    
    var mount_changed: CPointer<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GMount>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GMount>?) -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GMount>?) -> Unit>>>(184).value = value }
    
    var drive_connected: CPointer<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GDrive>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GDrive>?) -> Unit>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GDrive>?) -> Unit>>>(192).value = value }
    
    var drive_disconnected: CPointer<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GDrive>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GDrive>?) -> Unit>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GDrive>?) -> Unit>>>(200).value = value }
    
    var drive_changed: CPointer<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GDrive>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GDrive>?) -> Unit>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GDrive>?) -> Unit>>>(208).value = value }
    
    var is_supported: CPointer<CFunction<() -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<() -> gboolean>>>(216).value
        set(value) { memberAt<CPointerVar<CFunction<() -> gboolean>>>(216).value = value }
    
    var get_connected_drives: CPointer<CFunction<(CPointer<GVolumeMonitor>?) -> CPointer<GList>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?) -> CPointer<GList>?>>>(224).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?) -> CPointer<GList>?>>>(224).value = value }
    
    var get_volumes: CPointer<CFunction<(CPointer<GVolumeMonitor>?) -> CPointer<GList>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?) -> CPointer<GList>?>>>(232).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?) -> CPointer<GList>?>>>(232).value = value }
    
    var get_mounts: CPointer<CFunction<(CPointer<GVolumeMonitor>?) -> CPointer<GList>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?) -> CPointer<GList>?>>>(240).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?) -> CPointer<GList>?>>>(240).value = value }
    
    var get_volume_for_uuid: CPointer<CFunction<(CPointer<GVolumeMonitor>?, CPointer<ByteVar>?) -> CPointer<GVolume>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<ByteVar>?) -> CPointer<GVolume>?>>>(248).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<ByteVar>?) -> CPointer<GVolume>?>>>(248).value = value }
    
    var get_mount_for_uuid: CPointer<CFunction<(CPointer<GVolumeMonitor>?, CPointer<ByteVar>?) -> CPointer<GMount>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<ByteVar>?) -> CPointer<GMount>?>>>(256).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<ByteVar>?) -> CPointer<GMount>?>>>(256).value = value }
    
    var adopt_orphan_mount: CPointer<CFunction<(CPointer<GMount>?, CPointer<GVolumeMonitor>?) -> CPointer<GVolume>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMount>?, CPointer<GVolumeMonitor>?) -> CPointer<GVolume>?>>>(264).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMount>?, CPointer<GVolumeMonitor>?) -> CPointer<GVolume>?>>>(264).value = value }
    
    var drive_eject_button: CPointer<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GDrive>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GDrive>?) -> Unit>>>(272).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GDrive>?) -> Unit>>>(272).value = value }
    
    var drive_stop_button: CPointer<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GDrive>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GDrive>?) -> Unit>>>(280).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolumeMonitor>?, CPointer<GDrive>?) -> Unit>>>(280).value = value }
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(288).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(288).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(304).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(304).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(312).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(312).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(320).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(320).value = value }
    
    var _g_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(328).value = value }
}

@CStruct("struct { struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; } p0; }")
class _GNativeVolumeMonitor(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GVolumeMonitor
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; void* p22; void* p23; void* p24; void* p25; } p0; void* p1; }")
class _GNativeVolumeMonitorClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(344, 8)
    
    val parent_class: GVolumeMonitorClass
        get() = memberAt(0)
    
    var get_mount_for_mount_path: CPointer<CFunction<(CPointer<ByteVar>?, CPointer<GCancellable>?) -> CPointer<GMount>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<ByteVar>?, CPointer<GCancellable>?) -> CPointer<GMount>?>>>(336).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<ByteVar>?, CPointer<GCancellable>?) -> CPointer<GMount>?>>>(336).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; }")
class _GNetworkAddressClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(136, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GNetworkMonitorInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var network_changed: CPointer<CFunction<(CPointer<GNetworkMonitor>?, gboolean) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GNetworkMonitor>?, gboolean) -> Unit>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GNetworkMonitor>?, gboolean) -> Unit>>>(16).value = value }
    
    var can_reach: CPointer<CFunction<(CPointer<GNetworkMonitor>?, CPointer<GSocketConnectable>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GNetworkMonitor>?, CPointer<GSocketConnectable>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GNetworkMonitor>?, CPointer<GSocketConnectable>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(24).value = value }
    
    var can_reach_async: CPointer<CFunction<(CPointer<GNetworkMonitor>?, CPointer<GSocketConnectable>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GNetworkMonitor>?, CPointer<GSocketConnectable>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GNetworkMonitor>?, CPointer<GSocketConnectable>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(32).value = value }
    
    var can_reach_finish: CPointer<CFunction<(CPointer<GNetworkMonitor>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GNetworkMonitor>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GNetworkMonitor>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(40).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; }")
class _GNetworkServiceClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(136, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7[16]; }")
class _GPermissionClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(312, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var acquire: CPointer<CFunction<(CPointer<GPermission>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GPermission>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GPermission>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(136).value = value }
    
    var acquire_async: CPointer<CFunction<(CPointer<GPermission>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GPermission>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GPermission>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(144).value = value }
    
    var acquire_finish: CPointer<CFunction<(CPointer<GPermission>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GPermission>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GPermission>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(152).value = value }
    
    var release: CPointer<CFunction<(CPointer<GPermission>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GPermission>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GPermission>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(160).value = value }
    
    var release_async: CPointer<CFunction<(CPointer<GPermission>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GPermission>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GPermission>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(168).value = value }
    
    var release_finish: CPointer<CFunction<(CPointer<GPermission>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GPermission>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GPermission>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(176).value = value }
    
    val reserved: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(184)
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GPollableInputStreamInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var can_poll: CPointer<CFunction<(CPointer<GPollableInputStream>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GPollableInputStream>?) -> gboolean>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GPollableInputStream>?) -> gboolean>>>(16).value = value }
    
    var is_readable: CPointer<CFunction<(CPointer<GPollableInputStream>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GPollableInputStream>?) -> gboolean>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GPollableInputStream>?) -> gboolean>>>(24).value = value }
    
    var create_source: CPointer<CFunction<(CPointer<GPollableInputStream>?, CPointer<GCancellable>?) -> CPointer<GSource>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GPollableInputStream>?, CPointer<GCancellable>?) -> CPointer<GSource>?>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GPollableInputStream>?, CPointer<GCancellable>?) -> CPointer<GSource>?>>>(32).value = value }
    
    var read_nonblocking: CPointer<CFunction<(CPointer<GPollableInputStream>?, COpaquePointer?, gsize, CPointer<CPointerVar<GError>>?) -> gssize>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GPollableInputStream>?, COpaquePointer?, gsize, CPointer<CPointerVar<GError>>?) -> gssize>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GPollableInputStream>?, COpaquePointer?, gsize, CPointer<CPointerVar<GError>>?) -> gssize>>>(40).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GPollableOutputStreamInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var can_poll: CPointer<CFunction<(CPointer<GPollableOutputStream>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GPollableOutputStream>?) -> gboolean>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GPollableOutputStream>?) -> gboolean>>>(16).value = value }
    
    var is_writable: CPointer<CFunction<(CPointer<GPollableOutputStream>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GPollableOutputStream>?) -> gboolean>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GPollableOutputStream>?) -> gboolean>>>(24).value = value }
    
    var create_source: CPointer<CFunction<(CPointer<GPollableOutputStream>?, CPointer<GCancellable>?) -> CPointer<GSource>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GPollableOutputStream>?, CPointer<GCancellable>?) -> CPointer<GSource>?>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GPollableOutputStream>?, CPointer<GCancellable>?) -> CPointer<GSource>?>>>(32).value = value }
    
    var write_nonblocking: CPointer<CFunction<(CPointer<GPollableOutputStream>?, COpaquePointer?, gsize, CPointer<CPointerVar<GError>>?) -> gssize>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GPollableOutputStream>?, COpaquePointer?, gsize, CPointer<CPointerVar<GError>>?) -> gssize>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GPollableOutputStream>?, COpaquePointer?, gsize, CPointer<CPointerVar<GError>>?) -> gssize>>>(40).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GProxyInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var connect: CPointer<CFunction<(CPointer<GProxy>?, CPointer<GIOStream>?, CPointer<GProxyAddress>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GIOStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GProxy>?, CPointer<GIOStream>?, CPointer<GProxyAddress>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GIOStream>?>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GProxy>?, CPointer<GIOStream>?, CPointer<GProxyAddress>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GIOStream>?>>>(16).value = value }
    
    var connect_async: CPointer<CFunction<(CPointer<GProxy>?, CPointer<GIOStream>?, CPointer<GProxyAddress>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GProxy>?, CPointer<GIOStream>?, CPointer<GProxyAddress>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GProxy>?, CPointer<GIOStream>?, CPointer<GProxyAddress>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(24).value = value }
    
    var connect_finish: CPointer<CFunction<(CPointer<GProxy>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GIOStream>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GProxy>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GIOStream>?>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GProxy>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GIOStream>?>>>(32).value = value }
    
    var supports_hostname: CPointer<CFunction<(CPointer<GProxy>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GProxy>?) -> gboolean>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GProxy>?) -> gboolean>>>(40).value = value }
}

@CStruct("struct { struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; } p0; } p0; }")
class _GProxyAddressClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(160, 8)
    
    val parent_class: GInetSocketAddressClass
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; }")
class _GSocketAddressEnumeratorClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(160, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var next: CPointer<CFunction<(CPointer<GSocketAddressEnumerator>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GSocketAddress>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSocketAddressEnumerator>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GSocketAddress>?>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSocketAddressEnumerator>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GSocketAddress>?>>>(136).value = value }
    
    var next_async: CPointer<CFunction<(CPointer<GSocketAddressEnumerator>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSocketAddressEnumerator>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSocketAddressEnumerator>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(144).value = value }
    
    var next_finish: CPointer<CFunction<(CPointer<GSocketAddressEnumerator>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GSocketAddress>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSocketAddressEnumerator>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GSocketAddress>?>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSocketAddressEnumerator>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GSocketAddress>?>>>(152).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; }")
class _GProxyAddressEnumeratorClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(216, 8)
    
    val parent_class: GSocketAddressEnumeratorClass
        get() = memberAt(0)
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(192).value = value }
    
    var _g_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(200).value = value }
    
    var _g_reserved7: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(208).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GProxyResolverInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var is_supported: CPointer<CFunction<(CPointer<GProxyResolver>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GProxyResolver>?) -> gboolean>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GProxyResolver>?) -> gboolean>>>(16).value = value }
    
    var lookup: CPointer<CFunction<(CPointer<GProxyResolver>?, CPointer<gcharVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<CPointerVar<gcharVar>>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GProxyResolver>?, CPointer<gcharVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<CPointerVar<gcharVar>>?>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GProxyResolver>?, CPointer<gcharVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<CPointerVar<gcharVar>>?>>>(24).value = value }
    
    var lookup_async: CPointer<CFunction<(CPointer<GProxyResolver>?, CPointer<gcharVar>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GProxyResolver>?, CPointer<gcharVar>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GProxyResolver>?, CPointer<gcharVar>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(32).value = value }
    
    var lookup_finish: CPointer<CFunction<(CPointer<GProxyResolver>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<CPointerVar<gcharVar>>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GProxyResolver>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<CPointerVar<gcharVar>>?>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GProxyResolver>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<CPointerVar<gcharVar>>?>>>(40).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; }")
class _GResolverClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(264, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var reload: CPointer<CFunction<(CPointer<GResolver>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GResolver>?) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GResolver>?) -> Unit>>>(136).value = value }
    
    var lookup_by_name: CPointer<CFunction<(CPointer<GResolver>?, CPointer<gcharVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<gcharVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<gcharVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>>(144).value = value }
    
    var lookup_by_name_async: CPointer<CFunction<(CPointer<GResolver>?, CPointer<gcharVar>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<gcharVar>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<gcharVar>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(152).value = value }
    
    var lookup_by_name_finish: CPointer<CFunction<(CPointer<GResolver>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>>(160).value = value }
    
    var lookup_by_address: CPointer<CFunction<(CPointer<GResolver>?, CPointer<GInetAddress>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<GInetAddress>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<gcharVar>?>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<GInetAddress>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<gcharVar>?>>>(168).value = value }
    
    var lookup_by_address_async: CPointer<CFunction<(CPointer<GResolver>?, CPointer<GInetAddress>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<GInetAddress>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<GInetAddress>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(176).value = value }
    
    var lookup_by_address_finish: CPointer<CFunction<(CPointer<GResolver>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<gcharVar>?>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<gcharVar>?>>>(184).value = value }
    
    var lookup_service: CPointer<CFunction<(CPointer<GResolver>?, CPointer<gcharVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<gcharVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<gcharVar>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>>(192).value = value }
    
    var lookup_service_async: CPointer<CFunction<(CPointer<GResolver>?, CPointer<gcharVar>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<gcharVar>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<gcharVar>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(200).value = value }
    
    var lookup_service_finish: CPointer<CFunction<(CPointer<GResolver>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>>(208).value = value }
    
    var lookup_records: CPointer<CFunction<(CPointer<GResolver>?, CPointer<gcharVar>?, GResolverRecordType, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<gcharVar>?, GResolverRecordType, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>>(216).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<gcharVar>?, GResolverRecordType, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>>(216).value = value }
    
    var lookup_records_async: CPointer<CFunction<(CPointer<GResolver>?, CPointer<gcharVar>?, GResolverRecordType, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<gcharVar>?, GResolverRecordType, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(224).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<gcharVar>?, GResolverRecordType, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(224).value = value }
    
    var lookup_records_finish: CPointer<CFunction<(CPointer<GResolver>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>>(232).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GResolver>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>>(232).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(240).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(240).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(248).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(248).value = value }
    
    var _g_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(256).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(256).value = value }
}

@CStruct("struct { void* p0; unsigned long p1; void* p2; void* p3; void* p4; }")
class _GStaticResource(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    var data: CPointer<guint8Var>?
        get() = memberAt<CPointerVar<guint8Var>>(0).value
        set(value) { memberAt<CPointerVar<guint8Var>>(0).value = value }
    
    var data_len: gsize
        get() = memberAt<gsizeVar>(8).value
        set(value) { memberAt<gsizeVar>(8).value = value }
    
    var resource: CPointer<GResource>?
        get() = memberAt<CPointerVar<GResource>>(16).value
        set(value) { memberAt<CPointerVar<GResource>>(16).value = value }
    
    var next: CPointer<GStaticResource>?
        get() = memberAt<CPointerVar<GStaticResource>>(24).value
        set(value) { memberAt<CPointerVar<GStaticResource>>(24).value = value }
    
    var padding: gpointer?
        get() = memberAt<gpointerVar>(32).value
        set(value) { memberAt<gpointerVar>(32).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GSeekableIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var tell: CPointer<CFunction<(CPointer<GSeekable>?) -> goffset>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSeekable>?) -> goffset>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSeekable>?) -> goffset>>>(16).value = value }
    
    var can_seek: CPointer<CFunction<(CPointer<GSeekable>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSeekable>?) -> gboolean>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSeekable>?) -> gboolean>>>(24).value = value }
    
    var seek: CPointer<CFunction<(CPointer<GSeekable>?, goffset, GSeekType, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSeekable>?, goffset, GSeekType, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSeekable>?, goffset, GSeekType, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(32).value = value }
    
    var can_truncate: CPointer<CFunction<(CPointer<GSeekable>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSeekable>?) -> gboolean>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSeekable>?) -> gboolean>>>(40).value = value }
    
    var truncate_fn: CPointer<CFunction<(CPointer<GSeekable>?, goffset, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSeekable>?, goffset, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSeekable>?, goffset, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(48).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5[20]; }")
class _GSettingsClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(328, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var writable_changed: CPointer<CFunction<(CPointer<GSettings>?, CPointer<gcharVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSettings>?, CPointer<gcharVar>?) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSettings>?, CPointer<gcharVar>?) -> Unit>>>(136).value = value }
    
    var changed: CPointer<CFunction<(CPointer<GSettings>?, CPointer<gcharVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSettings>?, CPointer<gcharVar>?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSettings>?, CPointer<gcharVar>?) -> Unit>>>(144).value = value }
    
    var writable_change_event: CPointer<CFunction<(CPointer<GSettings>?, GQuark) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSettings>?, GQuark) -> gboolean>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSettings>?, GQuark) -> gboolean>>>(152).value = value }
    
    var change_event: CPointer<CFunction<(CPointer<GSettings>?, CPointer<GQuarkVar>?, gint) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSettings>?, CPointer<GQuarkVar>?, gint) -> gboolean>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSettings>?, CPointer<GQuarkVar>?, gint) -> gboolean>>>(160).value = value }
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(168)
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1[12]; }")
class _GSimpleActionGroupClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(232, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(136)
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GSocketClientClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(176, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var event: CPointer<CFunction<(CPointer<GSocketClient>?, GSocketClientEvent, CPointer<GSocketConnectable>?, CPointer<GIOStream>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSocketClient>?, GSocketClientEvent, CPointer<GSocketConnectable>?, CPointer<GIOStream>?) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSocketClient>?, GSocketClientEvent, CPointer<GSocketConnectable>?, CPointer<GIOStream>?) -> Unit>>>(136).value = value }
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; }")
class _GSocketConnectableIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var enumerate: CPointer<CFunction<(CPointer<GSocketConnectable>?) -> CPointer<GSocketAddressEnumerator>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSocketConnectable>?) -> CPointer<GSocketAddressEnumerator>?>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSocketConnectable>?) -> CPointer<GSocketAddressEnumerator>?>>>(16).value = value }
    
    var proxy_enumerate: CPointer<CFunction<(CPointer<GSocketConnectable>?) -> CPointer<GSocketAddressEnumerator>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSocketConnectable>?) -> CPointer<GSocketAddressEnumerator>?>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSocketConnectable>?) -> CPointer<GSocketAddressEnumerator>?>>>(24).value = value }
    
    var to_string: CPointer<CFunction<(CPointer<GSocketConnectable>?) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSocketConnectable>?) -> CPointer<gcharVar>?>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSocketConnectable>?) -> CPointer<gcharVar>?>>>(32).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; }")
class _GSocketClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(216, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(136).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value = value }
    
    var _g_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value = value }
    
    var _g_reserved7: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value = value }
    
    var _g_reserved8: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(192).value = value }
    
    var _g_reserved9: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(200).value = value }
    
    var _g_reserved10: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(208).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; }")
class _GSocketConnectionClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(304, 8)
    
    val parent_class: GIOStreamClass
        get() = memberAt(0)
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(256).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(256).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(280).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(280).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(288).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(288).value = value }
    
    var _g_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(296).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; }")
class _GSocketControlMessageClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(216, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var get_size: CPointer<CFunction<(CPointer<GSocketControlMessage>?) -> gsize>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSocketControlMessage>?) -> gsize>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSocketControlMessage>?) -> gsize>>>(136).value = value }
    
    var get_level: CPointer<CFunction<(CPointer<GSocketControlMessage>?) -> Int>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSocketControlMessage>?) -> Int>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSocketControlMessage>?) -> Int>>>(144).value = value }
    
    var get_type: CPointer<CFunction<(CPointer<GSocketControlMessage>?) -> Int>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSocketControlMessage>?) -> Int>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSocketControlMessage>?) -> Int>>>(152).value = value }
    
    var serialize: CPointer<CFunction<(CPointer<GSocketControlMessage>?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSocketControlMessage>?, gpointer?) -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSocketControlMessage>?, gpointer?) -> Unit>>>(160).value = value }
    
    var deserialize: CPointer<CFunction<(Int, Int, gsize, gpointer?) -> CPointer<GSocketControlMessage>?>>?
        get() = memberAt<CPointerVar<CFunction<(Int, Int, gsize, gpointer?) -> CPointer<GSocketControlMessage>?>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(Int, Int, gsize, gpointer?) -> CPointer<GSocketControlMessage>?>>>(168).value = value }
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(192).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(200).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(208).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; }")
class _GSocketListenerClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(192, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var changed: CPointer<CFunction<(CPointer<GSocketListener>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSocketListener>?) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSocketListener>?) -> Unit>>>(136).value = value }
    
    var event: CPointer<CFunction<(CPointer<GSocketListener>?, GSocketListenerEvent, CPointer<GSocket>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSocketListener>?, GSocketListenerEvent, CPointer<GSocket>?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSocketListener>?, GSocketListenerEvent, CPointer<GSocket>?) -> Unit>>>(144).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(176).value = value }
    
    var _g_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(184).value = value }
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; }")
class _GSocketServiceClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(248, 8)
    
    val parent_class: GSocketListenerClass
        get() = memberAt(0)
    
    var incoming: CPointer<CFunction<(CPointer<GSocketService>?, CPointer<GSocketConnection>?, CPointer<GObject>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GSocketService>?, CPointer<GSocketConnection>?, CPointer<GObject>?) -> gboolean>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GSocketService>?, CPointer<GSocketConnection>?, CPointer<GObject>?) -> gboolean>>>(192).value = value }
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(200).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(208).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(216).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(216).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(224).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(224).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(232).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(232).value = value }
    
    var _g_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(240).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(240).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GSimpleProxyResolver(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GSimpleProxyResolverPrivate>?
        get() = memberAt<CPointerVar<GSimpleProxyResolverPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GSimpleProxyResolverPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GSimpleProxyResolverClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(176, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(136).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value = value }
}

@CStruct("struct { struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; } p0; }")
class _GTcpConnectionClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(304, 8)
    
    val parent_class: GSocketConnectionClass
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; } p0; } p0; }")
class _GTcpWrapperConnectionClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(304, 8)
    
    val parent_class: GTcpConnectionClass
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; }")
class _GThreadedSocketServiceClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(296, 8)
    
    val parent_class: GSocketServiceClass
        get() = memberAt(0)
    
    var run: CPointer<CFunction<(CPointer<GThreadedSocketService>?, CPointer<GSocketConnection>?, CPointer<GObject>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GThreadedSocketService>?, CPointer<GSocketConnection>?, CPointer<GObject>?) -> gboolean>>>(248).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GThreadedSocketService>?, CPointer<GSocketConnection>?, CPointer<GObject>?) -> gboolean>>>(248).value = value }
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(256).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(256).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(272).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(280).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(280).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(288).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(288).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; }")
class _GTlsBackendInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(88, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var supports_tls: CPointer<CFunction<(CPointer<GTlsBackend>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsBackend>?) -> gboolean>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsBackend>?) -> gboolean>>>(16).value = value }
    
    var get_certificate_type: CPointer<CFunction<() -> GType>>?
        get() = memberAt<CPointerVar<CFunction<() -> GType>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<() -> GType>>>(24).value = value }
    
    var get_client_connection_type: CPointer<CFunction<() -> GType>>?
        get() = memberAt<CPointerVar<CFunction<() -> GType>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<() -> GType>>>(32).value = value }
    
    var get_server_connection_type: CPointer<CFunction<() -> GType>>?
        get() = memberAt<CPointerVar<CFunction<() -> GType>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<() -> GType>>>(40).value = value }
    
    var get_file_database_type: CPointer<CFunction<() -> GType>>?
        get() = memberAt<CPointerVar<CFunction<() -> GType>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<() -> GType>>>(48).value = value }
    
    var get_default_database: CPointer<CFunction<(CPointer<GTlsBackend>?) -> CPointer<GTlsDatabase>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsBackend>?) -> CPointer<GTlsDatabase>?>>>(56).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsBackend>?) -> CPointer<GTlsDatabase>?>>>(56).value = value }
    
    var supports_dtls: CPointer<CFunction<(CPointer<GTlsBackend>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsBackend>?) -> gboolean>>>(64).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsBackend>?) -> gboolean>>>(64).value = value }
    
    var get_dtls_client_connection_type: CPointer<CFunction<() -> GType>>?
        get() = memberAt<CPointerVar<CFunction<() -> GType>>>(72).value
        set(value) { memberAt<CPointerVar<CFunction<() -> GType>>>(72).value = value }
    
    var get_dtls_server_connection_type: CPointer<CFunction<() -> GType>>?
        get() = memberAt<CPointerVar<CFunction<() -> GType>>>(80).value
        set(value) { memberAt<CPointerVar<CFunction<() -> GType>>>(80).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2[8]; }")
class _GTlsCertificateClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(208, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var verify: CPointer<CFunction<(CPointer<GTlsCertificate>?, CPointer<GSocketConnectable>?, CPointer<GTlsCertificate>?) -> GTlsCertificateFlags>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsCertificate>?, CPointer<GSocketConnectable>?, CPointer<GTlsCertificate>?) -> GTlsCertificateFlags>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsCertificate>?, CPointer<GSocketConnectable>?, CPointer<GTlsCertificate>?) -> GTlsCertificateFlags>>>(136).value = value }
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(144)
}

@CStruct("struct { struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; } p0; void* p1; void* p2; void* p3; void* p4; void* p5[8]; }")
class _GTlsConnectionClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(352, 8)
    
    val parent_class: GIOStreamClass
        get() = memberAt(0)
    
    var accept_certificate: CPointer<CFunction<(CPointer<GTlsConnection>?, CPointer<GTlsCertificate>?, GTlsCertificateFlags) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsConnection>?, CPointer<GTlsCertificate>?, GTlsCertificateFlags) -> gboolean>>>(256).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsConnection>?, CPointer<GTlsCertificate>?, GTlsCertificateFlags) -> gboolean>>>(256).value = value }
    
    var handshake: CPointer<CFunction<(CPointer<GTlsConnection>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsConnection>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(264).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsConnection>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(264).value = value }
    
    var handshake_async: CPointer<CFunction<(CPointer<GTlsConnection>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsConnection>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(272).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsConnection>?, Int, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(272).value = value }
    
    var handshake_finish: CPointer<CFunction<(CPointer<GTlsConnection>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsConnection>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(280).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsConnection>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(280).value = value }
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(288)
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; }")
class _GTlsClientConnectionInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(24, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var copy_session_state: CPointer<CFunction<(CPointer<GTlsClientConnection>?, CPointer<GTlsClientConnection>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsClientConnection>?, CPointer<GTlsClientConnection>?) -> Unit>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsClientConnection>?, CPointer<GTlsClientConnection>?) -> Unit>>>(16).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14[16]; }")
class _GTlsDatabaseClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(368, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var verify_chain: CPointer<CFunction<(CPointer<GTlsDatabase>?, CPointer<GTlsCertificate>?, CPointer<gcharVar>?, CPointer<GSocketConnectable>?, CPointer<GTlsInteraction>?, GTlsDatabaseVerifyFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> GTlsCertificateFlags>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GTlsCertificate>?, CPointer<gcharVar>?, CPointer<GSocketConnectable>?, CPointer<GTlsInteraction>?, GTlsDatabaseVerifyFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> GTlsCertificateFlags>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GTlsCertificate>?, CPointer<gcharVar>?, CPointer<GSocketConnectable>?, CPointer<GTlsInteraction>?, GTlsDatabaseVerifyFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> GTlsCertificateFlags>>>(136).value = value }
    
    var verify_chain_async: CPointer<CFunction<(CPointer<GTlsDatabase>?, CPointer<GTlsCertificate>?, CPointer<gcharVar>?, CPointer<GSocketConnectable>?, CPointer<GTlsInteraction>?, GTlsDatabaseVerifyFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GTlsCertificate>?, CPointer<gcharVar>?, CPointer<GSocketConnectable>?, CPointer<GTlsInteraction>?, GTlsDatabaseVerifyFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GTlsCertificate>?, CPointer<gcharVar>?, CPointer<GSocketConnectable>?, CPointer<GTlsInteraction>?, GTlsDatabaseVerifyFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(144).value = value }
    
    var verify_chain_finish: CPointer<CFunction<(CPointer<GTlsDatabase>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> GTlsCertificateFlags>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> GTlsCertificateFlags>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> GTlsCertificateFlags>>>(152).value = value }
    
    var create_certificate_handle: CPointer<CFunction<(CPointer<GTlsDatabase>?, CPointer<GTlsCertificate>?) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GTlsCertificate>?) -> CPointer<gcharVar>?>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GTlsCertificate>?) -> CPointer<gcharVar>?>>>(160).value = value }
    
    var lookup_certificate_for_handle: CPointer<CFunction<(CPointer<GTlsDatabase>?, CPointer<gcharVar>?, CPointer<GTlsInteraction>?, GTlsDatabaseLookupFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GTlsCertificate>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<gcharVar>?, CPointer<GTlsInteraction>?, GTlsDatabaseLookupFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GTlsCertificate>?>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<gcharVar>?, CPointer<GTlsInteraction>?, GTlsDatabaseLookupFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GTlsCertificate>?>>>(168).value = value }
    
    var lookup_certificate_for_handle_async: CPointer<CFunction<(CPointer<GTlsDatabase>?, CPointer<gcharVar>?, CPointer<GTlsInteraction>?, GTlsDatabaseLookupFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<gcharVar>?, CPointer<GTlsInteraction>?, GTlsDatabaseLookupFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<gcharVar>?, CPointer<GTlsInteraction>?, GTlsDatabaseLookupFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(176).value = value }
    
    var lookup_certificate_for_handle_finish: CPointer<CFunction<(CPointer<GTlsDatabase>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GTlsCertificate>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GTlsCertificate>?>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GTlsCertificate>?>>>(184).value = value }
    
    var lookup_certificate_issuer: CPointer<CFunction<(CPointer<GTlsDatabase>?, CPointer<GTlsCertificate>?, CPointer<GTlsInteraction>?, GTlsDatabaseLookupFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GTlsCertificate>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GTlsCertificate>?, CPointer<GTlsInteraction>?, GTlsDatabaseLookupFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GTlsCertificate>?>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GTlsCertificate>?, CPointer<GTlsInteraction>?, GTlsDatabaseLookupFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GTlsCertificate>?>>>(192).value = value }
    
    var lookup_certificate_issuer_async: CPointer<CFunction<(CPointer<GTlsDatabase>?, CPointer<GTlsCertificate>?, CPointer<GTlsInteraction>?, GTlsDatabaseLookupFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GTlsCertificate>?, CPointer<GTlsInteraction>?, GTlsDatabaseLookupFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GTlsCertificate>?, CPointer<GTlsInteraction>?, GTlsDatabaseLookupFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(200).value = value }
    
    var lookup_certificate_issuer_finish: CPointer<CFunction<(CPointer<GTlsDatabase>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GTlsCertificate>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GTlsCertificate>?>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GTlsCertificate>?>>>(208).value = value }
    
    var lookup_certificates_issued_by: CPointer<CFunction<(CPointer<GTlsDatabase>?, CPointer<GByteArray>?, CPointer<GTlsInteraction>?, GTlsDatabaseLookupFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GByteArray>?, CPointer<GTlsInteraction>?, GTlsDatabaseLookupFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>>(216).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GByteArray>?, CPointer<GTlsInteraction>?, GTlsDatabaseLookupFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>>(216).value = value }
    
    var lookup_certificates_issued_by_async: CPointer<CFunction<(CPointer<GTlsDatabase>?, CPointer<GByteArray>?, CPointer<GTlsInteraction>?, GTlsDatabaseLookupFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GByteArray>?, CPointer<GTlsInteraction>?, GTlsDatabaseLookupFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(224).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GByteArray>?, CPointer<GTlsInteraction>?, GTlsDatabaseLookupFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(224).value = value }
    
    var lookup_certificates_issued_by_finish: CPointer<CFunction<(CPointer<GTlsDatabase>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>>(232).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsDatabase>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> CPointer<GList>?>>>(232).value = value }
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(240)
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1[8]; }")
class _GTlsFileDatabaseInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(80, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(16)
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7[21]; }")
class _GTlsInteractionClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(352, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var ask_password: CPointer<CFunction<(CPointer<GTlsInteraction>?, CPointer<GTlsPassword>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> GTlsInteractionResult>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsInteraction>?, CPointer<GTlsPassword>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> GTlsInteractionResult>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsInteraction>?, CPointer<GTlsPassword>?, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> GTlsInteractionResult>>>(136).value = value }
    
    var ask_password_async: CPointer<CFunction<(CPointer<GTlsInteraction>?, CPointer<GTlsPassword>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsInteraction>?, CPointer<GTlsPassword>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsInteraction>?, CPointer<GTlsPassword>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(144).value = value }
    
    var ask_password_finish: CPointer<CFunction<(CPointer<GTlsInteraction>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> GTlsInteractionResult>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsInteraction>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> GTlsInteractionResult>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsInteraction>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> GTlsInteractionResult>>>(152).value = value }
    
    var request_certificate: CPointer<CFunction<(CPointer<GTlsInteraction>?, CPointer<GTlsConnection>?, GTlsCertificateRequestFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> GTlsInteractionResult>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsInteraction>?, CPointer<GTlsConnection>?, GTlsCertificateRequestFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> GTlsInteractionResult>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsInteraction>?, CPointer<GTlsConnection>?, GTlsCertificateRequestFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> GTlsInteractionResult>>>(160).value = value }
    
    var request_certificate_async: CPointer<CFunction<(CPointer<GTlsInteraction>?, CPointer<GTlsConnection>?, GTlsCertificateRequestFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsInteraction>?, CPointer<GTlsConnection>?, GTlsCertificateRequestFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsInteraction>?, CPointer<GTlsConnection>?, GTlsCertificateRequestFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(168).value = value }
    
    var request_certificate_finish: CPointer<CFunction<(CPointer<GTlsInteraction>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> GTlsInteractionResult>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsInteraction>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> GTlsInteractionResult>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsInteraction>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> GTlsInteractionResult>>>(176).value = value }
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(184)
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; }")
class _GTlsServerConnectionInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(16, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4[4]; }")
class _GTlsPasswordClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(192, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var get_value: CPointer<CFunction<(CPointer<GTlsPassword>?, CPointer<gsizeVar>?) -> CPointer<gucharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsPassword>?, CPointer<gsizeVar>?) -> CPointer<gucharVar>?>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsPassword>?, CPointer<gsizeVar>?) -> CPointer<gucharVar>?>>>(136).value = value }
    
    var set_value: CPointer<CFunction<(CPointer<GTlsPassword>?, CPointer<gucharVar>?, gssize, GDestroyNotify?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsPassword>?, CPointer<gucharVar>?, gssize, GDestroyNotify?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsPassword>?, CPointer<gucharVar>?, gssize, GDestroyNotify?) -> Unit>>>(144).value = value }
    
    var get_default_warning: CPointer<CFunction<(CPointer<GTlsPassword>?) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GTlsPassword>?) -> CPointer<gcharVar>?>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GTlsPassword>?) -> CPointer<gcharVar>?>>>(152).value = value }
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(160)
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; }")
class _GVfsClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(272, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var is_active: CPointer<CFunction<(CPointer<GVfs>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVfs>?) -> gboolean>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVfs>?) -> gboolean>>>(136).value = value }
    
    var get_file_for_path: CPointer<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?) -> CPointer<GFile>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?) -> CPointer<GFile>?>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?) -> CPointer<GFile>?>>>(144).value = value }
    
    var get_file_for_uri: CPointer<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?) -> CPointer<GFile>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?) -> CPointer<GFile>?>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?) -> CPointer<GFile>?>>>(152).value = value }
    
    var get_supported_uri_schemes: CPointer<CFunction<(CPointer<GVfs>?) -> CPointer<CPointerVar<gcharVar>>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVfs>?) -> CPointer<CPointerVar<gcharVar>>?>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVfs>?) -> CPointer<CPointerVar<gcharVar>>?>>>(160).value = value }
    
    var parse_name: CPointer<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?) -> CPointer<GFile>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?) -> CPointer<GFile>?>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?) -> CPointer<GFile>?>>>(168).value = value }
    
    var local_file_add_info: CPointer<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?, guint64, CPointer<GFileAttributeMatcher>?, CPointer<GFileInfo>?, CPointer<GCancellable>?, CPointer<gpointerVar>?, CPointer<GDestroyNotifyVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?, guint64, CPointer<GFileAttributeMatcher>?, CPointer<GFileInfo>?, CPointer<GCancellable>?, CPointer<gpointerVar>?, CPointer<GDestroyNotifyVar>?) -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?, guint64, CPointer<GFileAttributeMatcher>?, CPointer<GFileInfo>?, CPointer<GCancellable>?, CPointer<gpointerVar>?, CPointer<GDestroyNotifyVar>?) -> Unit>>>(176).value = value }
    
    var add_writable_namespaces: CPointer<CFunction<(CPointer<GVfs>?, CPointer<GFileAttributeInfoList>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVfs>?, CPointer<GFileAttributeInfoList>?) -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVfs>?, CPointer<GFileAttributeInfoList>?) -> Unit>>>(184).value = value }
    
    var local_file_set_attributes: CPointer<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?, CPointer<GFileInfo>?, GFileQueryInfoFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?, CPointer<GFileInfo>?, GFileQueryInfoFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?, CPointer<GFileInfo>?, GFileQueryInfoFlags, CPointer<GCancellable>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(192).value = value }
    
    var local_file_removed: CPointer<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?) -> Unit>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?) -> Unit>>>(200).value = value }
    
    var local_file_moved: CPointer<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?, CPointer<ByteVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?, CPointer<ByteVar>?) -> Unit>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?, CPointer<ByteVar>?) -> Unit>>>(208).value = value }
    
    var deserialize_icon: CPointer<CFunction<(CPointer<GVfs>?, CPointer<GVariant>?) -> CPointer<GIcon>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVfs>?, CPointer<GVariant>?) -> CPointer<GIcon>?>>>(216).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVfs>?, CPointer<GVariant>?) -> CPointer<GIcon>?>>>(216).value = value }
    
    var _g_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(224).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(224).value = value }
    
    var _g_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(232).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(232).value = value }
    
    var _g_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(240).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(240).value = value }
    
    var _g_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(248).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(248).value = value }
    
    var _g_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(256).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(256).value = value }
    
    var _g_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; void* p21; }")
class _GVolumeIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(184, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var changed: CPointer<CFunction<(CPointer<GVolume>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> Unit>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> Unit>>>(16).value = value }
    
    var removed: CPointer<CFunction<(CPointer<GVolume>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> Unit>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> Unit>>>(24).value = value }
    
    var get_name: CPointer<CFunction<(CPointer<GVolume>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> CPointer<ByteVar>?>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> CPointer<ByteVar>?>>>(32).value = value }
    
    var get_icon: CPointer<CFunction<(CPointer<GVolume>?) -> CPointer<GIcon>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> CPointer<GIcon>?>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> CPointer<GIcon>?>>>(40).value = value }
    
    var get_uuid: CPointer<CFunction<(CPointer<GVolume>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> CPointer<ByteVar>?>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> CPointer<ByteVar>?>>>(48).value = value }
    
    var get_drive: CPointer<CFunction<(CPointer<GVolume>?) -> CPointer<GDrive>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> CPointer<GDrive>?>>>(56).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> CPointer<GDrive>?>>>(56).value = value }
    
    var get_mount: CPointer<CFunction<(CPointer<GVolume>?) -> CPointer<GMount>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> CPointer<GMount>?>>>(64).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> CPointer<GMount>?>>>(64).value = value }
    
    var can_mount: CPointer<CFunction<(CPointer<GVolume>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> gboolean>>>(72).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> gboolean>>>(72).value = value }
    
    var can_eject: CPointer<CFunction<(CPointer<GVolume>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> gboolean>>>(80).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> gboolean>>>(80).value = value }
    
    var mount_fn: CPointer<CFunction<(CPointer<GVolume>?, GMountMountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?, GMountMountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(88).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?, GMountMountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(88).value = value }
    
    var mount_finish: CPointer<CFunction<(CPointer<GVolume>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(96).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(96).value = value }
    
    var eject: CPointer<CFunction<(CPointer<GVolume>?, GMountUnmountFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?, GMountUnmountFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(104).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?, GMountUnmountFlags, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(104).value = value }
    
    var eject_finish: CPointer<CFunction<(CPointer<GVolume>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(112).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(112).value = value }
    
    var get_identifier: CPointer<CFunction<(CPointer<GVolume>?, CPointer<ByteVar>?) -> CPointer<ByteVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?, CPointer<ByteVar>?) -> CPointer<ByteVar>?>>>(120).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?, CPointer<ByteVar>?) -> CPointer<ByteVar>?>>>(120).value = value }
    
    var enumerate_identifiers: CPointer<CFunction<(CPointer<GVolume>?) -> CPointer<CPointerVar<ByteVar>>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> CPointer<CPointerVar<ByteVar>>?>>>(128).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> CPointer<CPointerVar<ByteVar>>?>>>(128).value = value }
    
    var should_automount: CPointer<CFunction<(CPointer<GVolume>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> gboolean>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> gboolean>>>(136).value = value }
    
    var get_activation_root: CPointer<CFunction<(CPointer<GVolume>?) -> CPointer<GFile>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> CPointer<GFile>?>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> CPointer<GFile>?>>>(144).value = value }
    
    var eject_with_operation: CPointer<CFunction<(CPointer<GVolume>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?, GMountUnmountFlags, CPointer<GMountOperation>?, CPointer<GCancellable>?, GAsyncReadyCallback?, gpointer?) -> Unit>>>(152).value = value }
    
    var eject_with_operation_finish: CPointer<CFunction<(CPointer<GVolume>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?, CPointer<GAsyncResult>?, CPointer<CPointerVar<GError>>?) -> gboolean>>>(160).value = value }
    
    var get_sort_key: CPointer<CFunction<(CPointer<GVolume>?) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> CPointer<gcharVar>?>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> CPointer<gcharVar>?>>>(168).value = value }
    
    var get_symbolic_icon: CPointer<CFunction<(CPointer<GVolume>?) -> CPointer<GIcon>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> CPointer<GIcon>?>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GVolume>?) -> CPointer<GIcon>?>>>(176).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; }")
class _GZlibCompressorClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(136, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; }")
class _GZlibDecompressorClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(136, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _GDBusInterfaceIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(48, 8)
    
    val parent_iface: GTypeInterface
        get() = memberAt(0)
    
    var get_info: CPointer<CFunction<(CPointer<GDBusInterface>?) -> CPointer<GDBusInterfaceInfo>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusInterface>?) -> CPointer<GDBusInterfaceInfo>?>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusInterface>?) -> CPointer<GDBusInterfaceInfo>?>>>(16).value = value }
    
    var get_object: CPointer<CFunction<(CPointer<GDBusInterface>?) -> CPointer<GDBusObject>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusInterface>?) -> CPointer<GDBusObject>?>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusInterface>?) -> CPointer<GDBusObject>?>>>(24).value = value }
    
    var set_object: CPointer<CFunction<(CPointer<GDBusInterface>?, CPointer<GDBusObject>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusInterface>?, CPointer<GDBusObject>?) -> Unit>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusInterface>?, CPointer<GDBusObject>?) -> Unit>>>(32).value = value }
    
    var dup_object: CPointer<CFunction<(CPointer<GDBusInterface>?) -> CPointer<GDBusObject>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusInterface>?) -> CPointer<GDBusObject>?>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusInterface>?) -> CPointer<GDBusObject>?>>>(40).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5[8]; void* p6; void* p7[8]; }")
class _GDBusInterfaceSkeletonClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(304, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var get_info: CPointer<CFunction<(CPointer<GDBusInterfaceSkeleton>?) -> CPointer<GDBusInterfaceInfo>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusInterfaceSkeleton>?) -> CPointer<GDBusInterfaceInfo>?>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusInterfaceSkeleton>?) -> CPointer<GDBusInterfaceInfo>?>>>(136).value = value }
    
    var get_vtable: CPointer<CFunction<(CPointer<GDBusInterfaceSkeleton>?) -> CPointer<GDBusInterfaceVTable>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusInterfaceSkeleton>?) -> CPointer<GDBusInterfaceVTable>?>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusInterfaceSkeleton>?) -> CPointer<GDBusInterfaceVTable>?>>>(144).value = value }
    
    var get_properties: CPointer<CFunction<(CPointer<GDBusInterfaceSkeleton>?) -> CPointer<GVariant>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusInterfaceSkeleton>?) -> CPointer<GVariant>?>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusInterfaceSkeleton>?) -> CPointer<GVariant>?>>>(152).value = value }
    
    var flush: CPointer<CFunction<(CPointer<GDBusInterfaceSkeleton>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusInterfaceSkeleton>?) -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusInterfaceSkeleton>?) -> Unit>>>(160).value = value }
    
    val vfunc_padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(168)
    
    var g_authorize_method: CPointer<CFunction<(CPointer<GDBusInterfaceSkeleton>?, CPointer<GDBusMethodInvocation>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusInterfaceSkeleton>?, CPointer<GDBusMethodInvocation>?) -> gboolean>>>(232).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusInterfaceSkeleton>?, CPointer<GDBusMethodInvocation>?) -> gboolean>>>(232).value = value }
    
    val signal_padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(240)
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _GDBusObjectIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(56, 8)
    
    val parent_iface: GTypeInterface
        get() = memberAt(0)
    
    var get_object_path: CPointer<CFunction<(CPointer<GDBusObject>?) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusObject>?) -> CPointer<gcharVar>?>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusObject>?) -> CPointer<gcharVar>?>>>(16).value = value }
    
    var get_interfaces: CPointer<CFunction<(CPointer<GDBusObject>?) -> CPointer<GList>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusObject>?) -> CPointer<GList>?>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusObject>?) -> CPointer<GList>?>>>(24).value = value }
    
    var get_interface: CPointer<CFunction<(CPointer<GDBusObject>?, CPointer<gcharVar>?) -> CPointer<GDBusInterface>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusObject>?, CPointer<gcharVar>?) -> CPointer<GDBusInterface>?>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusObject>?, CPointer<gcharVar>?) -> CPointer<GDBusInterface>?>>>(32).value = value }
    
    var interface_added: CPointer<CFunction<(CPointer<GDBusObject>?, CPointer<GDBusInterface>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusObject>?, CPointer<GDBusInterface>?) -> Unit>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusObject>?, CPointer<GDBusInterface>?) -> Unit>>>(40).value = value }
    
    var interface_removed: CPointer<CFunction<(CPointer<GDBusObject>?, CPointer<GDBusInterface>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusObject>?, CPointer<GDBusInterface>?) -> Unit>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusObject>?, CPointer<GDBusInterface>?) -> Unit>>>(48).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2[8]; }")
class _GDBusObjectSkeletonClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(208, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var authorize_method: CPointer<CFunction<(CPointer<GDBusObjectSkeleton>?, CPointer<GDBusInterfaceSkeleton>?, CPointer<GDBusMethodInvocation>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectSkeleton>?, CPointer<GDBusInterfaceSkeleton>?, CPointer<GDBusMethodInvocation>?) -> gboolean>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectSkeleton>?, CPointer<GDBusInterfaceSkeleton>?, CPointer<GDBusMethodInvocation>?) -> gboolean>>>(136).value = value }
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(144)
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1[8]; }")
class _GDBusObjectProxyClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(200, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(136)
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; }")
class _GDBusObjectManagerIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(80, 8)
    
    val parent_iface: GTypeInterface
        get() = memberAt(0)
    
    var get_object_path: CPointer<CFunction<(CPointer<GDBusObjectManager>?) -> CPointer<gcharVar>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManager>?) -> CPointer<gcharVar>?>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManager>?) -> CPointer<gcharVar>?>>>(16).value = value }
    
    var get_objects: CPointer<CFunction<(CPointer<GDBusObjectManager>?) -> CPointer<GList>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManager>?) -> CPointer<GList>?>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManager>?) -> CPointer<GList>?>>>(24).value = value }
    
    var get_object: CPointer<CFunction<(CPointer<GDBusObjectManager>?, CPointer<gcharVar>?) -> CPointer<GDBusObject>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManager>?, CPointer<gcharVar>?) -> CPointer<GDBusObject>?>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManager>?, CPointer<gcharVar>?) -> CPointer<GDBusObject>?>>>(32).value = value }
    
    var get_interface: CPointer<CFunction<(CPointer<GDBusObjectManager>?, CPointer<gcharVar>?, CPointer<gcharVar>?) -> CPointer<GDBusInterface>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManager>?, CPointer<gcharVar>?, CPointer<gcharVar>?) -> CPointer<GDBusInterface>?>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManager>?, CPointer<gcharVar>?, CPointer<gcharVar>?) -> CPointer<GDBusInterface>?>>>(40).value = value }
    
    var object_added: CPointer<CFunction<(CPointer<GDBusObjectManager>?, CPointer<GDBusObject>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManager>?, CPointer<GDBusObject>?) -> Unit>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManager>?, CPointer<GDBusObject>?) -> Unit>>>(48).value = value }
    
    var object_removed: CPointer<CFunction<(CPointer<GDBusObjectManager>?, CPointer<GDBusObject>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManager>?, CPointer<GDBusObject>?) -> Unit>>>(56).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManager>?, CPointer<GDBusObject>?) -> Unit>>>(56).value = value }
    
    var interface_added: CPointer<CFunction<(CPointer<GDBusObjectManager>?, CPointer<GDBusObject>?, CPointer<GDBusInterface>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManager>?, CPointer<GDBusObject>?, CPointer<GDBusInterface>?) -> Unit>>>(64).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManager>?, CPointer<GDBusObject>?, CPointer<GDBusInterface>?) -> Unit>>>(64).value = value }
    
    var interface_removed: CPointer<CFunction<(CPointer<GDBusObjectManager>?, CPointer<GDBusObject>?, CPointer<GDBusInterface>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManager>?, CPointer<GDBusObject>?, CPointer<GDBusInterface>?) -> Unit>>>(72).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManager>?, CPointer<GDBusObject>?, CPointer<GDBusInterface>?) -> Unit>>>(72).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3[8]; }")
class _GDBusObjectManagerClientClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(216, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var interface_proxy_signal: CPointer<CFunction<(CPointer<GDBusObjectManagerClient>?, CPointer<GDBusObjectProxy>?, CPointer<GDBusProxy>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<GVariant>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManagerClient>?, CPointer<GDBusObjectProxy>?, CPointer<GDBusProxy>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<GVariant>?) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManagerClient>?, CPointer<GDBusObjectProxy>?, CPointer<GDBusProxy>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<GVariant>?) -> Unit>>>(136).value = value }
    
    var interface_proxy_properties_changed: CPointer<CFunction<(CPointer<GDBusObjectManagerClient>?, CPointer<GDBusObjectProxy>?, CPointer<GDBusProxy>?, CPointer<GVariant>?, CPointer<CPointerVar<gcharVar>>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManagerClient>?, CPointer<GDBusObjectProxy>?, CPointer<GDBusProxy>?, CPointer<GVariant>?, CPointer<CPointerVar<gcharVar>>?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GDBusObjectManagerClient>?, CPointer<GDBusObjectProxy>?, CPointer<GDBusProxy>?, CPointer<GVariant>?, CPointer<CPointerVar<gcharVar>>?) -> Unit>>>(144).value = value }
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(152)
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1[8]; }")
class _GDBusObjectManagerServerClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(200, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    val padding: CArrayPointer<gpointerVar>
        get() = arrayMemberAt(136)
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; }")
class _GRemoteActionGroupInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var activate_action_full: CPointer<CFunction<(CPointer<GRemoteActionGroup>?, CPointer<gcharVar>?, CPointer<GVariant>?, CPointer<GVariant>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GRemoteActionGroup>?, CPointer<gcharVar>?, CPointer<GVariant>?, CPointer<GVariant>?) -> Unit>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GRemoteActionGroup>?, CPointer<gcharVar>?, CPointer<GVariant>?, CPointer<GVariant>?) -> Unit>>>(16).value = value }
    
    var change_action_state_full: CPointer<CFunction<(CPointer<GRemoteActionGroup>?, CPointer<gcharVar>?, CPointer<GVariant>?, CPointer<GVariant>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GRemoteActionGroup>?, CPointer<gcharVar>?, CPointer<GVariant>?, CPointer<GVariant>?) -> Unit>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GRemoteActionGroup>?, CPointer<gcharVar>?, CPointer<GVariant>?, CPointer<GVariant>?) -> Unit>>>(24).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; }")
class _GMenuModelClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(200, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var is_mutable: CPointer<CFunction<(CPointer<GMenuModel>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMenuModel>?) -> gboolean>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMenuModel>?) -> gboolean>>>(136).value = value }
    
    var get_n_items: CPointer<CFunction<(CPointer<GMenuModel>?) -> gint>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMenuModel>?) -> gint>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMenuModel>?) -> gint>>>(144).value = value }
    
    var get_item_attributes: CPointer<CFunction<(CPointer<GMenuModel>?, gint, CPointer<CPointerVar<GHashTable>>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMenuModel>?, gint, CPointer<CPointerVar<GHashTable>>?) -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMenuModel>?, gint, CPointer<CPointerVar<GHashTable>>?) -> Unit>>>(152).value = value }
    
    var iterate_item_attributes: CPointer<CFunction<(CPointer<GMenuModel>?, gint) -> CPointer<GMenuAttributeIter>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMenuModel>?, gint) -> CPointer<GMenuAttributeIter>?>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMenuModel>?, gint) -> CPointer<GMenuAttributeIter>?>>>(160).value = value }
    
    var get_item_attribute_value: CPointer<CFunction<(CPointer<GMenuModel>?, gint, CPointer<gcharVar>?, CPointer<GVariantType>?) -> CPointer<GVariant>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMenuModel>?, gint, CPointer<gcharVar>?, CPointer<GVariantType>?) -> CPointer<GVariant>?>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMenuModel>?, gint, CPointer<gcharVar>?, CPointer<GVariantType>?) -> CPointer<GVariant>?>>>(168).value = value }
    
    var get_item_links: CPointer<CFunction<(CPointer<GMenuModel>?, gint, CPointer<CPointerVar<GHashTable>>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMenuModel>?, gint, CPointer<CPointerVar<GHashTable>>?) -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMenuModel>?, gint, CPointer<CPointerVar<GHashTable>>?) -> Unit>>>(176).value = value }
    
    var iterate_item_links: CPointer<CFunction<(CPointer<GMenuModel>?, gint) -> CPointer<GMenuLinkIter>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMenuModel>?, gint) -> CPointer<GMenuLinkIter>?>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMenuModel>?, gint) -> CPointer<GMenuLinkIter>?>>>(184).value = value }
    
    var get_item_link: CPointer<CFunction<(CPointer<GMenuModel>?, gint, CPointer<gcharVar>?) -> CPointer<GMenuModel>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMenuModel>?, gint, CPointer<gcharVar>?) -> CPointer<GMenuModel>?>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMenuModel>?, gint, CPointer<gcharVar>?) -> CPointer<GMenuModel>?>>>(192).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GMenuAttributeIter(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GMenuAttributeIterPrivate>?
        get() = memberAt<CPointerVar<GMenuAttributeIterPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GMenuAttributeIterPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _GMenuLinkIter(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<GMenuLinkIterPrivate>?
        get() = memberAt<CPointerVar<GMenuLinkIterPrivate>>(24).value
        set(value) { memberAt<CPointerVar<GMenuLinkIterPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; }")
class _GMenuAttributeIterClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(144, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var get_next: CPointer<CFunction<(CPointer<GMenuAttributeIter>?, CPointer<CPointerVar<gcharVar>>?, CPointer<CPointerVar<GVariant>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMenuAttributeIter>?, CPointer<CPointerVar<gcharVar>>?, CPointer<CPointerVar<GVariant>>?) -> gboolean>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMenuAttributeIter>?, CPointer<CPointerVar<gcharVar>>?, CPointer<CPointerVar<GVariant>>?) -> gboolean>>>(136).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; }")
class _GMenuLinkIterClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(144, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var get_next: CPointer<CFunction<(CPointer<GMenuLinkIter>?, CPointer<CPointerVar<gcharVar>>?, CPointer<CPointerVar<GMenuModel>>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GMenuLinkIter>?, CPointer<CPointerVar<gcharVar>>?, CPointer<CPointerVar<GMenuModel>>?) -> gboolean>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GMenuLinkIter>?, CPointer<CPointerVar<gcharVar>>?, CPointer<CPointerVar<GMenuModel>>?) -> gboolean>>>(136).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; }")
class _GListModelInterface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(40, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var get_item_type: CPointer<CFunction<(CPointer<GListModel>?) -> GType>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GListModel>?) -> GType>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GListModel>?) -> GType>>>(16).value = value }
    
    var get_n_items: CPointer<CFunction<(CPointer<GListModel>?) -> guint>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GListModel>?) -> guint>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GListModel>?) -> guint>>>(24).value = value }
    
    var get_item: CPointer<CFunction<(CPointer<GListModel>?, guint) -> gpointer?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<GListModel>?, guint) -> gpointer?>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<GListModel>?, guint) -> gpointer?>>>(32).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; }")
class GListStoreClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(136, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _JsonGenerator(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<JsonGeneratorPrivate>?
        get() = memberAt<CPointerVar<JsonGeneratorPrivate>>(24).value
        set(value) { memberAt<CPointerVar<JsonGeneratorPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; }")
class _JsonGeneratorClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(168, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var _json_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(136).value = value }
    
    var _json_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value = value }
    
    var _json_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value = value }
    
    var _json_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _JsonParser(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<JsonParserPrivate>?
        get() = memberAt<CPointerVar<JsonParserPrivate>>(24).value
        set(value) { memberAt<CPointerVar<JsonParserPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; }")
class _JsonParserClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(272, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var parse_start: CPointer<CFunction<(CPointer<JsonParser>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<JsonParser>?) -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<JsonParser>?) -> Unit>>>(136).value = value }
    
    var object_start: CPointer<CFunction<(CPointer<JsonParser>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<JsonParser>?) -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<JsonParser>?) -> Unit>>>(144).value = value }
    
    var object_member: CPointer<CFunction<(CPointer<JsonParser>?, CPointer<JsonObject>?, CPointer<gcharVar>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<JsonParser>?, CPointer<JsonObject>?, CPointer<gcharVar>?) -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<JsonParser>?, CPointer<JsonObject>?, CPointer<gcharVar>?) -> Unit>>>(152).value = value }
    
    var object_end: CPointer<CFunction<(CPointer<JsonParser>?, CPointer<JsonObject>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<JsonParser>?, CPointer<JsonObject>?) -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<JsonParser>?, CPointer<JsonObject>?) -> Unit>>>(160).value = value }
    
    var array_start: CPointer<CFunction<(CPointer<JsonParser>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<JsonParser>?) -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<JsonParser>?) -> Unit>>>(168).value = value }
    
    var array_element: CPointer<CFunction<(CPointer<JsonParser>?, CPointer<JsonArray>?, gint) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<JsonParser>?, CPointer<JsonArray>?, gint) -> Unit>>>(176).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<JsonParser>?, CPointer<JsonArray>?, gint) -> Unit>>>(176).value = value }
    
    var array_end: CPointer<CFunction<(CPointer<JsonParser>?, CPointer<JsonArray>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<JsonParser>?, CPointer<JsonArray>?) -> Unit>>>(184).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<JsonParser>?, CPointer<JsonArray>?) -> Unit>>>(184).value = value }
    
    var parse_end: CPointer<CFunction<(CPointer<JsonParser>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<JsonParser>?) -> Unit>>>(192).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<JsonParser>?) -> Unit>>>(192).value = value }
    
    var error: CPointer<CFunction<(CPointer<JsonParser>?, CPointer<GError>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<JsonParser>?, CPointer<GError>?) -> Unit>>>(200).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<JsonParser>?, CPointer<GError>?) -> Unit>>>(200).value = value }
    
    var _json_reserved1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(208).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(208).value = value }
    
    var _json_reserved2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(216).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(216).value = value }
    
    var _json_reserved3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(224).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(224).value = value }
    
    var _json_reserved4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(232).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(232).value = value }
    
    var _json_reserved5: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(240).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(240).value = value }
    
    var _json_reserved6: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(248).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(248).value = value }
    
    var _json_reserved7: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(256).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(256).value = value }
    
    var _json_reserved8: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(264).value = value }
}

@CStruct("struct { struct { struct { void* p0; } p0; unsigned int p1; void* p2; } p0; void* p1; }")
class _JsonReader(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(32, 8)
    
    val parent_instance: GObject
        get() = memberAt(0)
    
    var priv: CPointer<JsonReaderPrivate>?
        get() = memberAt<CPointerVar<JsonReaderPrivate>>(24).value
        set(value) { memberAt<CPointerVar<JsonReaderPrivate>>(24).value = value }
}

@CStruct("struct { struct { struct { unsigned long p0; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; unsigned long p10; void* p11[6]; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class _JsonReaderClass(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(176, 8)
    
    val parent_class: GObjectClass
        get() = memberAt(0)
    
    var _json_padding0: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(136).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(136).value = value }
    
    var _json_padding1: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(144).value = value }
    
    var _json_padding2: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(152).value = value }
    
    var _json_padding3: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(160).value = value }
    
    var _json_padding4: CPointer<CFunction<() -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value
        set(value) { memberAt<CPointerVar<CFunction<() -> Unit>>>(168).value = value }
}

@CStruct("struct { struct { unsigned long p0; unsigned long p1; } p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; }")
class _JsonSerializableIface(rawPtr: NativePtr) : CStructVar(rawPtr) {
    
    companion object : Type(64, 8)
    
    val g_iface: GTypeInterface
        get() = memberAt(0)
    
    var serialize_property: CPointer<CFunction<(CPointer<JsonSerializable>?, CPointer<gcharVar>?, CPointer<GValue>?, CPointer<GParamSpec>?) -> CPointer<JsonNode>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<JsonSerializable>?, CPointer<gcharVar>?, CPointer<GValue>?, CPointer<GParamSpec>?) -> CPointer<JsonNode>?>>>(16).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<JsonSerializable>?, CPointer<gcharVar>?, CPointer<GValue>?, CPointer<GParamSpec>?) -> CPointer<JsonNode>?>>>(16).value = value }
    
    var deserialize_property: CPointer<CFunction<(CPointer<JsonSerializable>?, CPointer<gcharVar>?, CPointer<GValue>?, CPointer<GParamSpec>?, CPointer<JsonNode>?) -> gboolean>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<JsonSerializable>?, CPointer<gcharVar>?, CPointer<GValue>?, CPointer<GParamSpec>?, CPointer<JsonNode>?) -> gboolean>>>(24).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<JsonSerializable>?, CPointer<gcharVar>?, CPointer<GValue>?, CPointer<GParamSpec>?, CPointer<JsonNode>?) -> gboolean>>>(24).value = value }
    
    var find_property: CPointer<CFunction<(CPointer<JsonSerializable>?, CPointer<ByteVar>?) -> CPointer<GParamSpec>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<JsonSerializable>?, CPointer<ByteVar>?) -> CPointer<GParamSpec>?>>>(32).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<JsonSerializable>?, CPointer<ByteVar>?) -> CPointer<GParamSpec>?>>>(32).value = value }
    
    var list_properties: CPointer<CFunction<(CPointer<JsonSerializable>?, CPointer<guintVar>?) -> CPointer<CPointerVar<GParamSpec>>?>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<JsonSerializable>?, CPointer<guintVar>?) -> CPointer<CPointerVar<GParamSpec>>?>>>(40).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<JsonSerializable>?, CPointer<guintVar>?) -> CPointer<CPointerVar<GParamSpec>>?>>>(40).value = value }
    
    var set_property: CPointer<CFunction<(CPointer<JsonSerializable>?, CPointer<GParamSpec>?, CPointer<GValue>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<JsonSerializable>?, CPointer<GParamSpec>?, CPointer<GValue>?) -> Unit>>>(48).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<JsonSerializable>?, CPointer<GParamSpec>?, CPointer<GValue>?) -> Unit>>>(48).value = value }
    
    var get_property: CPointer<CFunction<(CPointer<JsonSerializable>?, CPointer<GParamSpec>?, CPointer<GValue>?) -> Unit>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<JsonSerializable>?, CPointer<GParamSpec>?, CPointer<GValue>?) -> Unit>>>(56).value
        set(value) { memberAt<CPointerVar<CFunction<(CPointer<JsonSerializable>?, CPointer<GParamSpec>?, CPointer<GValue>?) -> Unit>>>(56).value = value }
}

enum class GUserDirectory(override val value: UInt) : CEnum {
    G_USER_DIRECTORY_DESKTOP(0u),
    G_USER_DIRECTORY_DOCUMENTS(1u),
    G_USER_DIRECTORY_DOWNLOAD(2u),
    G_USER_DIRECTORY_MUSIC(3u),
    G_USER_DIRECTORY_PICTURES(4u),
    G_USER_DIRECTORY_PUBLIC_SHARE(5u),
    G_USER_DIRECTORY_TEMPLATES(6u),
    G_USER_DIRECTORY_VIDEOS(7u),
    G_USER_N_DIRECTORIES(8u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GUserDirectory.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GUserDirectory
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GThreadError(override val value: UInt) : CEnum {
    G_THREAD_ERROR_AGAIN(0u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GThreadError.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GThreadError
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GThreadPriority(override val value: UInt) : CEnum {
    G_THREAD_PRIORITY_LOW(0u),
    G_THREAD_PRIORITY_NORMAL(1u),
    G_THREAD_PRIORITY_HIGH(2u),
    G_THREAD_PRIORITY_URGENT(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GThreadPriority.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GThreadPriority
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GOnceStatus(override val value: UInt) : CEnum {
    G_ONCE_STATUS_NOTCALLED(0u),
    G_ONCE_STATUS_PROGRESS(1u),
    G_ONCE_STATUS_READY(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GOnceStatus.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GOnceStatus
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GBookmarkFileError(override val value: UInt) : CEnum {
    G_BOOKMARK_FILE_ERROR_INVALID_URI(0u),
    G_BOOKMARK_FILE_ERROR_INVALID_VALUE(1u),
    G_BOOKMARK_FILE_ERROR_APP_NOT_REGISTERED(2u),
    G_BOOKMARK_FILE_ERROR_URI_NOT_FOUND(3u),
    G_BOOKMARK_FILE_ERROR_READ(4u),
    G_BOOKMARK_FILE_ERROR_UNKNOWN_ENCODING(5u),
    G_BOOKMARK_FILE_ERROR_WRITE(6u),
    G_BOOKMARK_FILE_ERROR_FILE_NOT_FOUND(7u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GBookmarkFileError.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GBookmarkFileError
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GChecksumType(override val value: UInt) : CEnum {
    G_CHECKSUM_MD5(0u),
    G_CHECKSUM_SHA1(1u),
    G_CHECKSUM_SHA256(2u),
    G_CHECKSUM_SHA512(3u),
    G_CHECKSUM_SHA384(4u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GChecksumType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GChecksumType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GConvertError(override val value: UInt) : CEnum {
    G_CONVERT_ERROR_NO_CONVERSION(0u),
    G_CONVERT_ERROR_ILLEGAL_SEQUENCE(1u),
    G_CONVERT_ERROR_FAILED(2u),
    G_CONVERT_ERROR_PARTIAL_INPUT(3u),
    G_CONVERT_ERROR_BAD_URI(4u),
    G_CONVERT_ERROR_NOT_ABSOLUTE_PATH(5u),
    G_CONVERT_ERROR_NO_MEMORY(6u),
    G_CONVERT_ERROR_EMBEDDED_NUL(7u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GConvertError.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GConvertError
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GTimeType(override val value: UInt) : CEnum {
    G_TIME_TYPE_STANDARD(0u),
    G_TIME_TYPE_DAYLIGHT(1u),
    G_TIME_TYPE_UNIVERSAL(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GTimeType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GTimeType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GFileError(override val value: UInt) : CEnum {
    G_FILE_ERROR_EXIST(0u),
    G_FILE_ERROR_ISDIR(1u),
    G_FILE_ERROR_ACCES(2u),
    G_FILE_ERROR_NAMETOOLONG(3u),
    G_FILE_ERROR_NOENT(4u),
    G_FILE_ERROR_NOTDIR(5u),
    G_FILE_ERROR_NXIO(6u),
    G_FILE_ERROR_NODEV(7u),
    G_FILE_ERROR_ROFS(8u),
    G_FILE_ERROR_TXTBSY(9u),
    G_FILE_ERROR_FAULT(10u),
    G_FILE_ERROR_LOOP(11u),
    G_FILE_ERROR_NOSPC(12u),
    G_FILE_ERROR_NOMEM(13u),
    G_FILE_ERROR_MFILE(14u),
    G_FILE_ERROR_NFILE(15u),
    G_FILE_ERROR_BADF(16u),
    G_FILE_ERROR_INVAL(17u),
    G_FILE_ERROR_PIPE(18u),
    G_FILE_ERROR_AGAIN(19u),
    G_FILE_ERROR_INTR(20u),
    G_FILE_ERROR_IO(21u),
    G_FILE_ERROR_PERM(22u),
    G_FILE_ERROR_NOSYS(23u),
    G_FILE_ERROR_FAILED(24u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GFileError.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GFileError
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GTraverseType(override val value: UInt) : CEnum {
    G_IN_ORDER(0u),
    G_PRE_ORDER(1u),
    G_POST_ORDER(2u),
    G_LEVEL_ORDER(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GTraverseType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GTraverseType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GUnicodeType(override val value: UInt) : CEnum {
    G_UNICODE_CONTROL(0u),
    G_UNICODE_FORMAT(1u),
    G_UNICODE_UNASSIGNED(2u),
    G_UNICODE_PRIVATE_USE(3u),
    G_UNICODE_SURROGATE(4u),
    G_UNICODE_LOWERCASE_LETTER(5u),
    G_UNICODE_MODIFIER_LETTER(6u),
    G_UNICODE_OTHER_LETTER(7u),
    G_UNICODE_TITLECASE_LETTER(8u),
    G_UNICODE_UPPERCASE_LETTER(9u),
    G_UNICODE_SPACING_MARK(10u),
    G_UNICODE_ENCLOSING_MARK(11u),
    G_UNICODE_NON_SPACING_MARK(12u),
    G_UNICODE_DECIMAL_NUMBER(13u),
    G_UNICODE_LETTER_NUMBER(14u),
    G_UNICODE_OTHER_NUMBER(15u),
    G_UNICODE_CONNECT_PUNCTUATION(16u),
    G_UNICODE_DASH_PUNCTUATION(17u),
    G_UNICODE_CLOSE_PUNCTUATION(18u),
    G_UNICODE_FINAL_PUNCTUATION(19u),
    G_UNICODE_INITIAL_PUNCTUATION(20u),
    G_UNICODE_OTHER_PUNCTUATION(21u),
    G_UNICODE_OPEN_PUNCTUATION(22u),
    G_UNICODE_CURRENCY_SYMBOL(23u),
    G_UNICODE_MODIFIER_SYMBOL(24u),
    G_UNICODE_MATH_SYMBOL(25u),
    G_UNICODE_OTHER_SYMBOL(26u),
    G_UNICODE_LINE_SEPARATOR(27u),
    G_UNICODE_PARAGRAPH_SEPARATOR(28u),
    G_UNICODE_SPACE_SEPARATOR(29u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GUnicodeType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GUnicodeType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GUnicodeBreakType(override val value: UInt) : CEnum {
    G_UNICODE_BREAK_MANDATORY(0u),
    G_UNICODE_BREAK_CARRIAGE_RETURN(1u),
    G_UNICODE_BREAK_LINE_FEED(2u),
    G_UNICODE_BREAK_COMBINING_MARK(3u),
    G_UNICODE_BREAK_SURROGATE(4u),
    G_UNICODE_BREAK_ZERO_WIDTH_SPACE(5u),
    G_UNICODE_BREAK_INSEPARABLE(6u),
    G_UNICODE_BREAK_NON_BREAKING_GLUE(7u),
    G_UNICODE_BREAK_CONTINGENT(8u),
    G_UNICODE_BREAK_SPACE(9u),
    G_UNICODE_BREAK_AFTER(10u),
    G_UNICODE_BREAK_BEFORE(11u),
    G_UNICODE_BREAK_BEFORE_AND_AFTER(12u),
    G_UNICODE_BREAK_HYPHEN(13u),
    G_UNICODE_BREAK_NON_STARTER(14u),
    G_UNICODE_BREAK_OPEN_PUNCTUATION(15u),
    G_UNICODE_BREAK_CLOSE_PUNCTUATION(16u),
    G_UNICODE_BREAK_QUOTATION(17u),
    G_UNICODE_BREAK_EXCLAMATION(18u),
    G_UNICODE_BREAK_IDEOGRAPHIC(19u),
    G_UNICODE_BREAK_NUMERIC(20u),
    G_UNICODE_BREAK_INFIX_SEPARATOR(21u),
    G_UNICODE_BREAK_SYMBOL(22u),
    G_UNICODE_BREAK_ALPHABETIC(23u),
    G_UNICODE_BREAK_PREFIX(24u),
    G_UNICODE_BREAK_POSTFIX(25u),
    G_UNICODE_BREAK_COMPLEX_CONTEXT(26u),
    G_UNICODE_BREAK_AMBIGUOUS(27u),
    G_UNICODE_BREAK_UNKNOWN(28u),
    G_UNICODE_BREAK_NEXT_LINE(29u),
    G_UNICODE_BREAK_WORD_JOINER(30u),
    G_UNICODE_BREAK_HANGUL_L_JAMO(31u),
    G_UNICODE_BREAK_HANGUL_V_JAMO(32u),
    G_UNICODE_BREAK_HANGUL_T_JAMO(33u),
    G_UNICODE_BREAK_HANGUL_LV_SYLLABLE(34u),
    G_UNICODE_BREAK_HANGUL_LVT_SYLLABLE(35u),
    G_UNICODE_BREAK_CLOSE_PARANTHESIS(36u),
    G_UNICODE_BREAK_CONDITIONAL_JAPANESE_STARTER(37u),
    G_UNICODE_BREAK_HEBREW_LETTER(38u),
    G_UNICODE_BREAK_REGIONAL_INDICATOR(39u),
    G_UNICODE_BREAK_EMOJI_BASE(40u),
    G_UNICODE_BREAK_EMOJI_MODIFIER(41u),
    G_UNICODE_BREAK_ZERO_WIDTH_JOINER(42u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GUnicodeBreakType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GUnicodeBreakType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GIOStatus(override val value: UInt) : CEnum {
    G_IO_STATUS_ERROR(0u),
    G_IO_STATUS_NORMAL(1u),
    G_IO_STATUS_EOF(2u),
    G_IO_STATUS_AGAIN(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GIOStatus.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GIOStatus
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GSeekType(override val value: UInt) : CEnum {
    G_SEEK_CUR(0u),
    G_SEEK_SET(1u),
    G_SEEK_END(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GSeekType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GSeekType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GIOError(override val value: UInt) : CEnum {
    G_IO_ERROR_NONE(0u),
    G_IO_ERROR_AGAIN(1u),
    G_IO_ERROR_INVAL(2u),
    G_IO_ERROR_UNKNOWN(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GIOError.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GIOError
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GIOChannelError(override val value: UInt) : CEnum {
    G_IO_CHANNEL_ERROR_FBIG(0u),
    G_IO_CHANNEL_ERROR_INVAL(1u),
    G_IO_CHANNEL_ERROR_IO(2u),
    G_IO_CHANNEL_ERROR_ISDIR(3u),
    G_IO_CHANNEL_ERROR_NOSPC(4u),
    G_IO_CHANNEL_ERROR_NXIO(5u),
    G_IO_CHANNEL_ERROR_OVERFLOW(6u),
    G_IO_CHANNEL_ERROR_PIPE(7u),
    G_IO_CHANNEL_ERROR_FAILED(8u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GIOChannelError.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GIOChannelError
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GKeyFileError(override val value: UInt) : CEnum {
    G_KEY_FILE_ERROR_UNKNOWN_ENCODING(0u),
    G_KEY_FILE_ERROR_PARSE(1u),
    G_KEY_FILE_ERROR_NOT_FOUND(2u),
    G_KEY_FILE_ERROR_KEY_NOT_FOUND(3u),
    G_KEY_FILE_ERROR_GROUP_NOT_FOUND(4u),
    G_KEY_FILE_ERROR_INVALID_VALUE(5u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GKeyFileError.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GKeyFileError
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GMarkupError(override val value: UInt) : CEnum {
    G_MARKUP_ERROR_BAD_UTF8(0u),
    G_MARKUP_ERROR_EMPTY(1u),
    G_MARKUP_ERROR_PARSE(2u),
    G_MARKUP_ERROR_UNKNOWN_ELEMENT(3u),
    G_MARKUP_ERROR_UNKNOWN_ATTRIBUTE(4u),
    G_MARKUP_ERROR_INVALID_CONTENT(5u),
    G_MARKUP_ERROR_MISSING_ATTRIBUTE(6u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GMarkupError.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GMarkupError
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GVariantParseError(override val value: UInt) : CEnum {
    G_VARIANT_PARSE_ERROR_FAILED(0u),
    G_VARIANT_PARSE_ERROR_BASIC_TYPE_EXPECTED(1u),
    G_VARIANT_PARSE_ERROR_CANNOT_INFER_TYPE(2u),
    G_VARIANT_PARSE_ERROR_DEFINITE_TYPE_EXPECTED(3u),
    G_VARIANT_PARSE_ERROR_INPUT_NOT_AT_END(4u),
    G_VARIANT_PARSE_ERROR_INVALID_CHARACTER(5u),
    G_VARIANT_PARSE_ERROR_INVALID_FORMAT_STRING(6u),
    G_VARIANT_PARSE_ERROR_INVALID_OBJECT_PATH(7u),
    G_VARIANT_PARSE_ERROR_INVALID_SIGNATURE(8u),
    G_VARIANT_PARSE_ERROR_INVALID_TYPE_STRING(9u),
    G_VARIANT_PARSE_ERROR_NO_COMMON_TYPE(10u),
    G_VARIANT_PARSE_ERROR_NUMBER_OUT_OF_RANGE(11u),
    G_VARIANT_PARSE_ERROR_NUMBER_TOO_BIG(12u),
    G_VARIANT_PARSE_ERROR_TYPE_ERROR(13u),
    G_VARIANT_PARSE_ERROR_UNEXPECTED_TOKEN(14u),
    G_VARIANT_PARSE_ERROR_UNKNOWN_KEYWORD(15u),
    G_VARIANT_PARSE_ERROR_UNTERMINATED_STRING_CONSTANT(16u),
    G_VARIANT_PARSE_ERROR_VALUE_EXPECTED(17u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GVariantParseError.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GVariantParseError
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GOptionArg(override val value: UInt) : CEnum {
    G_OPTION_ARG_NONE(0u),
    G_OPTION_ARG_STRING(1u),
    G_OPTION_ARG_INT(2u),
    G_OPTION_ARG_CALLBACK(3u),
    G_OPTION_ARG_FILENAME(4u),
    G_OPTION_ARG_STRING_ARRAY(5u),
    G_OPTION_ARG_FILENAME_ARRAY(6u),
    G_OPTION_ARG_DOUBLE(7u),
    G_OPTION_ARG_INT64(8u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GOptionArg.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GOptionArg
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GOptionError(override val value: UInt) : CEnum {
    G_OPTION_ERROR_UNKNOWN_OPTION(0u),
    G_OPTION_ERROR_BAD_VALUE(1u),
    G_OPTION_ERROR_FAILED(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GOptionError.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GOptionError
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GErrorType(override val value: UInt) : CEnum {
    G_ERR_UNKNOWN(0u),
    G_ERR_UNEXP_EOF(1u),
    G_ERR_UNEXP_EOF_IN_STRING(2u),
    G_ERR_UNEXP_EOF_IN_COMMENT(3u),
    G_ERR_NON_DIGIT_IN_CONST(4u),
    G_ERR_DIGIT_RADIX(5u),
    G_ERR_FLOAT_RADIX(6u),
    G_ERR_FLOAT_MALFORMED(7u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GErrorType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GErrorType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GShellError(override val value: UInt) : CEnum {
    G_SHELL_ERROR_BAD_QUOTING(0u),
    G_SHELL_ERROR_EMPTY_STRING(1u),
    G_SHELL_ERROR_FAILED(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GShellError.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GShellError
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GNumberParserError(override val value: UInt) : CEnum {
    G_NUMBER_PARSER_ERROR_INVALID(0u),
    G_NUMBER_PARSER_ERROR_OUT_OF_BOUNDS(1u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GNumberParserError.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GNumberParserError
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GTestResult(override val value: UInt) : CEnum {
    G_TEST_RUN_SUCCESS(0u),
    G_TEST_RUN_SKIPPED(1u),
    G_TEST_RUN_FAILURE(2u),
    G_TEST_RUN_INCOMPLETE(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GTestResult.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GTestResult
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GTestLogType(override val value: UInt) : CEnum {
    G_TEST_LOG_NONE(0u),
    G_TEST_LOG_ERROR(1u),
    G_TEST_LOG_START_BINARY(2u),
    G_TEST_LOG_LIST_CASE(3u),
    G_TEST_LOG_SKIP_CASE(4u),
    G_TEST_LOG_START_CASE(5u),
    G_TEST_LOG_STOP_CASE(6u),
    G_TEST_LOG_MIN_RESULT(7u),
    G_TEST_LOG_MAX_RESULT(8u),
    G_TEST_LOG_MESSAGE(9u),
    G_TEST_LOG_START_SUITE(10u),
    G_TEST_LOG_STOP_SUITE(11u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GTestLogType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GTestLogType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GTestFileType(override val value: UInt) : CEnum {
    G_TEST_DIST(0u),
    G_TEST_BUILT(1u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GTestFileType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GTestFileType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class JsonNodeType(override val value: UInt) : CEnum {
    JSON_NODE_OBJECT(0u),
    JSON_NODE_ARRAY(1u),
    JSON_NODE_VALUE(2u),
    JSON_NODE_NULL(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = JsonNodeType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: JsonNodeType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GDataStreamByteOrder(override val value: UInt) : CEnum {
    G_DATA_STREAM_BYTE_ORDER_BIG_ENDIAN(0u),
    G_DATA_STREAM_BYTE_ORDER_LITTLE_ENDIAN(1u),
    G_DATA_STREAM_BYTE_ORDER_HOST_ENDIAN(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GDataStreamByteOrder.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GDataStreamByteOrder
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GDataStreamNewlineType(override val value: UInt) : CEnum {
    G_DATA_STREAM_NEWLINE_TYPE_LF(0u),
    G_DATA_STREAM_NEWLINE_TYPE_CR(1u),
    G_DATA_STREAM_NEWLINE_TYPE_CR_LF(2u),
    G_DATA_STREAM_NEWLINE_TYPE_ANY(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GDataStreamNewlineType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GDataStreamNewlineType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GDriveStartStopType(override val value: UInt) : CEnum {
    G_DRIVE_START_STOP_TYPE_UNKNOWN(0u),
    G_DRIVE_START_STOP_TYPE_SHUTDOWN(1u),
    G_DRIVE_START_STOP_TYPE_NETWORK(2u),
    G_DRIVE_START_STOP_TYPE_MULTIDISK(3u),
    G_DRIVE_START_STOP_TYPE_PASSWORD(4u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GDriveStartStopType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GDriveStartStopType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GFileMonitorEvent(override val value: UInt) : CEnum {
    G_FILE_MONITOR_EVENT_CHANGED(0u),
    G_FILE_MONITOR_EVENT_CHANGES_DONE_HINT(1u),
    G_FILE_MONITOR_EVENT_DELETED(2u),
    G_FILE_MONITOR_EVENT_CREATED(3u),
    G_FILE_MONITOR_EVENT_ATTRIBUTE_CHANGED(4u),
    G_FILE_MONITOR_EVENT_PRE_UNMOUNT(5u),
    G_FILE_MONITOR_EVENT_UNMOUNTED(6u),
    G_FILE_MONITOR_EVENT_MOVED(7u),
    G_FILE_MONITOR_EVENT_RENAMED(8u),
    G_FILE_MONITOR_EVENT_MOVED_IN(9u),
    G_FILE_MONITOR_EVENT_MOVED_OUT(10u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GFileMonitorEvent.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GFileMonitorEvent
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GPasswordSave(override val value: UInt) : CEnum {
    G_PASSWORD_SAVE_NEVER(0u),
    G_PASSWORD_SAVE_FOR_SESSION(1u),
    G_PASSWORD_SAVE_PERMANENTLY(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GPasswordSave.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GPasswordSave
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GMountOperationResult(override val value: UInt) : CEnum {
    G_MOUNT_OPERATION_HANDLED(0u),
    G_MOUNT_OPERATION_ABORTED(1u),
    G_MOUNT_OPERATION_UNHANDLED(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GMountOperationResult.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GMountOperationResult
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GEmblemOrigin(override val value: UInt) : CEnum {
    G_EMBLEM_ORIGIN_UNKNOWN(0u),
    G_EMBLEM_ORIGIN_DEVICE(1u),
    G_EMBLEM_ORIGIN_LIVEMETADATA(2u),
    G_EMBLEM_ORIGIN_TAG(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GEmblemOrigin.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GEmblemOrigin
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GResolverError(override val value: UInt) : CEnum {
    G_RESOLVER_ERROR_NOT_FOUND(0u),
    G_RESOLVER_ERROR_TEMPORARY_FAILURE(1u),
    G_RESOLVER_ERROR_INTERNAL(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GResolverError.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GResolverError
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GResourceError(override val value: UInt) : CEnum {
    G_RESOURCE_ERROR_NOT_FOUND(0u),
    G_RESOURCE_ERROR_INTERNAL(1u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GResourceError.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GResourceError
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GSocketType(override val value: UInt) : CEnum {
    G_SOCKET_TYPE_INVALID(0u),
    G_SOCKET_TYPE_STREAM(1u),
    G_SOCKET_TYPE_DATAGRAM(2u),
    G_SOCKET_TYPE_SEQPACKET(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GSocketType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GSocketType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GZlibCompressorFormat(override val value: UInt) : CEnum {
    G_ZLIB_COMPRESSOR_FORMAT_ZLIB(0u),
    G_ZLIB_COMPRESSOR_FORMAT_GZIP(1u),
    G_ZLIB_COMPRESSOR_FORMAT_RAW(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GZlibCompressorFormat.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GZlibCompressorFormat
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GUnixSocketAddressType(override val value: UInt) : CEnum {
    G_UNIX_SOCKET_ADDRESS_INVALID(0u),
    G_UNIX_SOCKET_ADDRESS_ANONYMOUS(1u),
    G_UNIX_SOCKET_ADDRESS_PATH(2u),
    G_UNIX_SOCKET_ADDRESS_ABSTRACT(3u),
    G_UNIX_SOCKET_ADDRESS_ABSTRACT_PADDED(4u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GUnixSocketAddressType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GUnixSocketAddressType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GDBusError(override val value: UInt) : CEnum {
    G_DBUS_ERROR_FAILED(0u),
    G_DBUS_ERROR_NO_MEMORY(1u),
    G_DBUS_ERROR_SERVICE_UNKNOWN(2u),
    G_DBUS_ERROR_NAME_HAS_NO_OWNER(3u),
    G_DBUS_ERROR_NO_REPLY(4u),
    G_DBUS_ERROR_IO_ERROR(5u),
    G_DBUS_ERROR_BAD_ADDRESS(6u),
    G_DBUS_ERROR_NOT_SUPPORTED(7u),
    G_DBUS_ERROR_LIMITS_EXCEEDED(8u),
    G_DBUS_ERROR_ACCESS_DENIED(9u),
    G_DBUS_ERROR_AUTH_FAILED(10u),
    G_DBUS_ERROR_NO_SERVER(11u),
    G_DBUS_ERROR_TIMEOUT(12u),
    G_DBUS_ERROR_NO_NETWORK(13u),
    G_DBUS_ERROR_ADDRESS_IN_USE(14u),
    G_DBUS_ERROR_DISCONNECTED(15u),
    G_DBUS_ERROR_INVALID_ARGS(16u),
    G_DBUS_ERROR_FILE_NOT_FOUND(17u),
    G_DBUS_ERROR_FILE_EXISTS(18u),
    G_DBUS_ERROR_UNKNOWN_METHOD(19u),
    G_DBUS_ERROR_TIMED_OUT(20u),
    G_DBUS_ERROR_MATCH_RULE_NOT_FOUND(21u),
    G_DBUS_ERROR_MATCH_RULE_INVALID(22u),
    G_DBUS_ERROR_SPAWN_EXEC_FAILED(23u),
    G_DBUS_ERROR_SPAWN_FORK_FAILED(24u),
    G_DBUS_ERROR_SPAWN_CHILD_EXITED(25u),
    G_DBUS_ERROR_SPAWN_CHILD_SIGNALED(26u),
    G_DBUS_ERROR_SPAWN_FAILED(27u),
    G_DBUS_ERROR_SPAWN_SETUP_FAILED(28u),
    G_DBUS_ERROR_SPAWN_CONFIG_INVALID(29u),
    G_DBUS_ERROR_SPAWN_SERVICE_INVALID(30u),
    G_DBUS_ERROR_SPAWN_SERVICE_NOT_FOUND(31u),
    G_DBUS_ERROR_SPAWN_PERMISSIONS_INVALID(32u),
    G_DBUS_ERROR_SPAWN_FILE_INVALID(33u),
    G_DBUS_ERROR_SPAWN_NO_MEMORY(34u),
    G_DBUS_ERROR_UNIX_PROCESS_ID_UNKNOWN(35u),
    G_DBUS_ERROR_INVALID_SIGNATURE(36u),
    G_DBUS_ERROR_INVALID_FILE_CONTENT(37u),
    G_DBUS_ERROR_SELINUX_SECURITY_CONTEXT_UNKNOWN(38u),
    G_DBUS_ERROR_ADT_AUDIT_DATA_UNKNOWN(39u),
    G_DBUS_ERROR_OBJECT_PATH_IN_USE(40u),
    G_DBUS_ERROR_UNKNOWN_OBJECT(41u),
    G_DBUS_ERROR_UNKNOWN_INTERFACE(42u),
    G_DBUS_ERROR_UNKNOWN_PROPERTY(43u),
    G_DBUS_ERROR_PROPERTY_READ_ONLY(44u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GDBusError.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GDBusError
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GDBusMessageType(override val value: UInt) : CEnum {
    G_DBUS_MESSAGE_TYPE_INVALID(0u),
    G_DBUS_MESSAGE_TYPE_METHOD_CALL(1u),
    G_DBUS_MESSAGE_TYPE_METHOD_RETURN(2u),
    G_DBUS_MESSAGE_TYPE_ERROR(3u),
    G_DBUS_MESSAGE_TYPE_SIGNAL(4u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GDBusMessageType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GDBusMessageType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GDBusMessageHeaderField(override val value: UInt) : CEnum {
    G_DBUS_MESSAGE_HEADER_FIELD_INVALID(0u),
    G_DBUS_MESSAGE_HEADER_FIELD_PATH(1u),
    G_DBUS_MESSAGE_HEADER_FIELD_INTERFACE(2u),
    G_DBUS_MESSAGE_HEADER_FIELD_MEMBER(3u),
    G_DBUS_MESSAGE_HEADER_FIELD_ERROR_NAME(4u),
    G_DBUS_MESSAGE_HEADER_FIELD_REPLY_SERIAL(5u),
    G_DBUS_MESSAGE_HEADER_FIELD_DESTINATION(6u),
    G_DBUS_MESSAGE_HEADER_FIELD_SENDER(7u),
    G_DBUS_MESSAGE_HEADER_FIELD_SIGNATURE(8u),
    G_DBUS_MESSAGE_HEADER_FIELD_NUM_UNIX_FDS(9u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GDBusMessageHeaderField.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GDBusMessageHeaderField
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GCredentialsType(override val value: UInt) : CEnum {
    G_CREDENTIALS_TYPE_INVALID(0u),
    G_CREDENTIALS_TYPE_LINUX_UCRED(1u),
    G_CREDENTIALS_TYPE_FREEBSD_CMSGCRED(2u),
    G_CREDENTIALS_TYPE_OPENBSD_SOCKPEERCRED(3u),
    G_CREDENTIALS_TYPE_SOLARIS_UCRED(4u),
    G_CREDENTIALS_TYPE_NETBSD_UNPCBID(5u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GCredentialsType.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GCredentialsType
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GTlsError(override val value: UInt) : CEnum {
    G_TLS_ERROR_UNAVAILABLE(0u),
    G_TLS_ERROR_MISC(1u),
    G_TLS_ERROR_BAD_CERTIFICATE(2u),
    G_TLS_ERROR_NOT_TLS(3u),
    G_TLS_ERROR_HANDSHAKE(4u),
    G_TLS_ERROR_CERTIFICATE_REQUIRED(5u),
    G_TLS_ERROR_EOF(6u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GTlsError.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GTlsError
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GTlsAuthenticationMode(override val value: UInt) : CEnum {
    G_TLS_AUTHENTICATION_NONE(0u),
    G_TLS_AUTHENTICATION_REQUESTED(1u),
    G_TLS_AUTHENTICATION_REQUIRED(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GTlsAuthenticationMode.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GTlsAuthenticationMode
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GTlsRehandshakeMode(override val value: UInt) : CEnum {
    G_TLS_REHANDSHAKE_NEVER(0u),
    G_TLS_REHANDSHAKE_SAFELY(1u),
    G_TLS_REHANDSHAKE_UNSAFELY(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GTlsRehandshakeMode.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GTlsRehandshakeMode
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GTlsInteractionResult(override val value: UInt) : CEnum {
    G_TLS_INTERACTION_UNHANDLED(0u),
    G_TLS_INTERACTION_HANDLED(1u),
    G_TLS_INTERACTION_FAILED(2u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GTlsInteractionResult.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GTlsInteractionResult
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GIOModuleScopeFlags(override val value: UInt) : CEnum {
    G_IO_MODULE_SCOPE_NONE(0u),
    G_IO_MODULE_SCOPE_BLOCK_DUPLICATES(1u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GIOModuleScopeFlags.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GIOModuleScopeFlags
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GSocketClientEvent(override val value: UInt) : CEnum {
    G_SOCKET_CLIENT_RESOLVING(0u),
    G_SOCKET_CLIENT_RESOLVED(1u),
    G_SOCKET_CLIENT_CONNECTING(2u),
    G_SOCKET_CLIENT_CONNECTED(3u),
    G_SOCKET_CLIENT_PROXY_NEGOTIATING(4u),
    G_SOCKET_CLIENT_PROXY_NEGOTIATED(5u),
    G_SOCKET_CLIENT_TLS_HANDSHAKING(6u),
    G_SOCKET_CLIENT_TLS_HANDSHAKED(7u),
    G_SOCKET_CLIENT_COMPLETE(8u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GSocketClientEvent.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GSocketClientEvent
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GSocketListenerEvent(override val value: UInt) : CEnum {
    G_SOCKET_LISTENER_BINDING(0u),
    G_SOCKET_LISTENER_BOUND(1u),
    G_SOCKET_LISTENER_LISTENING(2u),
    G_SOCKET_LISTENER_LISTENED(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GSocketListenerEvent.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GSocketListenerEvent
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class GNotificationPriority(override val value: UInt) : CEnum {
    G_NOTIFICATION_PRIORITY_NORMAL(0u),
    G_NOTIFICATION_PRIORITY_LOW(1u),
    G_NOTIFICATION_PRIORITY_HIGH(2u),
    G_NOTIFICATION_PRIORITY_URGENT(3u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = GNotificationPriority.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: GNotificationPriority
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class JsonParserError(override val value: UInt) : CEnum {
    JSON_PARSER_ERROR_PARSE(0u),
    JSON_PARSER_ERROR_TRAILING_COMMA(1u),
    JSON_PARSER_ERROR_MISSING_COMMA(2u),
    JSON_PARSER_ERROR_MISSING_COLON(3u),
    JSON_PARSER_ERROR_INVALID_BAREWORD(4u),
    JSON_PARSER_ERROR_EMPTY_MEMBER_NAME(5u),
    JSON_PARSER_ERROR_INVALID_DATA(6u),
    JSON_PARSER_ERROR_UNKNOWN(7u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = JsonParserError.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: JsonParserError
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class JsonPathError(override val value: UInt) : CEnum {
    JSON_PATH_ERROR_INVALID_QUERY(0u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = JsonPathError.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: JsonPathError
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

enum class JsonReaderError(override val value: UInt) : CEnum {
    JSON_READER_ERROR_NO_ARRAY(0u),
    JSON_READER_ERROR_INVALID_INDEX(1u),
    JSON_READER_ERROR_NO_OBJECT(2u),
    JSON_READER_ERROR_INVALID_MEMBER(3u),
    JSON_READER_ERROR_INVALID_NODE(4u),
    JSON_READER_ERROR_NO_VALUE(5u),
    JSON_READER_ERROR_INVALID_TYPE(6u),
    ;
    
    companion object {
        
        fun byValue(value: UInt) = JsonReaderError.values().find { it.value == value }!!
    }
    
    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())
        var value: JsonReaderError
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) { this.reinterpret<UIntVar>().value = value.value }
    }
}

@CCall("knifunptr_glibjson0__GLIB_CHECKED_ADD_U32")
external fun _GLIB_CHECKED_ADD_U32(dest: CValuesRef<guint32Var>?, a: guint32, b: guint32): gboolean

@CCall("knifunptr_glibjson1__GLIB_CHECKED_MUL_U32")
external fun _GLIB_CHECKED_MUL_U32(dest: CValuesRef<guint32Var>?, a: guint32, b: guint32): gboolean

@CCall("knifunptr_glibjson2__GLIB_CHECKED_ADD_U64")
external fun _GLIB_CHECKED_ADD_U64(dest: CValuesRef<guint64Var>?, a: guint64, b: guint64): gboolean

@CCall("knifunptr_glibjson3__GLIB_CHECKED_MUL_U64")
external fun _GLIB_CHECKED_MUL_U64(dest: CValuesRef<guint64Var>?, a: guint64, b: guint64): gboolean

@CCall("knifunptr_glibjson4_g_array_new")
external fun g_array_new(zero_terminated: gboolean, clear_: gboolean, element_size: guint): CPointer<GArray>?

@CCall("knifunptr_glibjson5_g_array_sized_new")
external fun g_array_sized_new(zero_terminated: gboolean, clear_: gboolean, element_size: guint, reserved_size: guint): CPointer<GArray>?

@CCall("knifunptr_glibjson6_g_array_free")
external fun g_array_free(array: CValuesRef<GArray>?, free_segment: gboolean): CPointer<gcharVar>?

@CCall("knifunptr_glibjson7_g_array_ref")
external fun g_array_ref(array: CValuesRef<GArray>?): CPointer<GArray>?

@CCall("knifunptr_glibjson8_g_array_unref")
external fun g_array_unref(array: CValuesRef<GArray>?): Unit

@CCall("knifunptr_glibjson9_g_array_get_element_size")
external fun g_array_get_element_size(array: CValuesRef<GArray>?): guint

@CCall("knifunptr_glibjson10_g_array_append_vals")
external fun g_array_append_vals(array: CValuesRef<GArray>?, data: gconstpointer?, len: guint): CPointer<GArray>?

@CCall("knifunptr_glibjson11_g_array_prepend_vals")
external fun g_array_prepend_vals(array: CValuesRef<GArray>?, data: gconstpointer?, len: guint): CPointer<GArray>?

@CCall("knifunptr_glibjson12_g_array_insert_vals")
external fun g_array_insert_vals(array: CValuesRef<GArray>?, index_: guint, data: gconstpointer?, len: guint): CPointer<GArray>?

@CCall("knifunptr_glibjson13_g_array_set_size")
external fun g_array_set_size(array: CValuesRef<GArray>?, length: guint): CPointer<GArray>?

@CCall("knifunptr_glibjson14_g_array_remove_index")
external fun g_array_remove_index(array: CValuesRef<GArray>?, index_: guint): CPointer<GArray>?

@CCall("knifunptr_glibjson15_g_array_remove_index_fast")
external fun g_array_remove_index_fast(array: CValuesRef<GArray>?, index_: guint): CPointer<GArray>?

@CCall("knifunptr_glibjson16_g_array_remove_range")
external fun g_array_remove_range(array: CValuesRef<GArray>?, index_: guint, length: guint): CPointer<GArray>?

@CCall("knifunptr_glibjson17_g_array_sort")
external fun g_array_sort(array: CValuesRef<GArray>?, compare_func: GCompareFunc?): Unit

@CCall("knifunptr_glibjson18_g_array_sort_with_data")
external fun g_array_sort_with_data(array: CValuesRef<GArray>?, compare_func: GCompareDataFunc?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson19_g_array_set_clear_func")
external fun g_array_set_clear_func(array: CValuesRef<GArray>?, clear_func: GDestroyNotify?): Unit

@CCall("knifunptr_glibjson20_g_ptr_array_new")
external fun g_ptr_array_new(): CPointer<GPtrArray>?

@CCall("knifunptr_glibjson21_g_ptr_array_new_with_free_func")
external fun g_ptr_array_new_with_free_func(element_free_func: GDestroyNotify?): CPointer<GPtrArray>?

@CCall("knifunptr_glibjson22_g_ptr_array_sized_new")
external fun g_ptr_array_sized_new(reserved_size: guint): CPointer<GPtrArray>?

@CCall("knifunptr_glibjson23_g_ptr_array_new_full")
external fun g_ptr_array_new_full(reserved_size: guint, element_free_func: GDestroyNotify?): CPointer<GPtrArray>?

@CCall("knifunptr_glibjson24_g_ptr_array_free")
external fun g_ptr_array_free(array: CValuesRef<GPtrArray>?, free_seg: gboolean): CPointer<gpointerVar>?

@CCall("knifunptr_glibjson25_g_ptr_array_ref")
external fun g_ptr_array_ref(array: CValuesRef<GPtrArray>?): CPointer<GPtrArray>?

@CCall("knifunptr_glibjson26_g_ptr_array_unref")
external fun g_ptr_array_unref(array: CValuesRef<GPtrArray>?): Unit

@CCall("knifunptr_glibjson27_g_ptr_array_set_free_func")
external fun g_ptr_array_set_free_func(array: CValuesRef<GPtrArray>?, element_free_func: GDestroyNotify?): Unit

@CCall("knifunptr_glibjson28_g_ptr_array_set_size")
external fun g_ptr_array_set_size(array: CValuesRef<GPtrArray>?, length: gint): Unit

@CCall("knifunptr_glibjson29_g_ptr_array_remove_index")
external fun g_ptr_array_remove_index(array: CValuesRef<GPtrArray>?, index_: guint): gpointer?

@CCall("knifunptr_glibjson30_g_ptr_array_remove_index_fast")
external fun g_ptr_array_remove_index_fast(array: CValuesRef<GPtrArray>?, index_: guint): gpointer?

@CCall("knifunptr_glibjson31_g_ptr_array_remove")
external fun g_ptr_array_remove(array: CValuesRef<GPtrArray>?, data: gpointer?): gboolean

@CCall("knifunptr_glibjson32_g_ptr_array_remove_fast")
external fun g_ptr_array_remove_fast(array: CValuesRef<GPtrArray>?, data: gpointer?): gboolean

@CCall("knifunptr_glibjson33_g_ptr_array_remove_range")
external fun g_ptr_array_remove_range(array: CValuesRef<GPtrArray>?, index_: guint, length: guint): CPointer<GPtrArray>?

@CCall("knifunptr_glibjson34_g_ptr_array_add")
external fun g_ptr_array_add(array: CValuesRef<GPtrArray>?, data: gpointer?): Unit

@CCall("knifunptr_glibjson35_g_ptr_array_insert")
external fun g_ptr_array_insert(array: CValuesRef<GPtrArray>?, index_: gint, data: gpointer?): Unit

@CCall("knifunptr_glibjson36_g_ptr_array_sort")
external fun g_ptr_array_sort(array: CValuesRef<GPtrArray>?, compare_func: GCompareFunc?): Unit

@CCall("knifunptr_glibjson37_g_ptr_array_sort_with_data")
external fun g_ptr_array_sort_with_data(array: CValuesRef<GPtrArray>?, compare_func: GCompareDataFunc?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson38_g_ptr_array_foreach")
external fun g_ptr_array_foreach(array: CValuesRef<GPtrArray>?, func: GFunc?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson39_g_ptr_array_find")
external fun g_ptr_array_find(haystack: CValuesRef<GPtrArray>?, needle: gconstpointer?, index_: CValuesRef<guintVar>?): gboolean

@CCall("knifunptr_glibjson40_g_ptr_array_find_with_equal_func")
external fun g_ptr_array_find_with_equal_func(haystack: CValuesRef<GPtrArray>?, needle: gconstpointer?, equal_func: GEqualFunc?, index_: CValuesRef<guintVar>?): gboolean

@CCall("knifunptr_glibjson41_g_byte_array_new")
external fun g_byte_array_new(): CPointer<GByteArray>?

@CCall("knifunptr_glibjson42_g_byte_array_new_take")
external fun g_byte_array_new_take(data: CValuesRef<guint8Var>?, len: gsize): CPointer<GByteArray>?

@CCall("knifunptr_glibjson43_g_byte_array_sized_new")
external fun g_byte_array_sized_new(reserved_size: guint): CPointer<GByteArray>?

@CCall("knifunptr_glibjson44_g_byte_array_free")
external fun g_byte_array_free(array: CValuesRef<GByteArray>?, free_segment: gboolean): CPointer<guint8Var>?

@CCall("knifunptr_glibjson45_g_byte_array_free_to_bytes")
external fun g_byte_array_free_to_bytes(array: CValuesRef<GByteArray>?): CPointer<GBytes>?

@CCall("knifunptr_glibjson46_g_byte_array_ref")
external fun g_byte_array_ref(array: CValuesRef<GByteArray>?): CPointer<GByteArray>?

@CCall("knifunptr_glibjson47_g_byte_array_unref")
external fun g_byte_array_unref(array: CValuesRef<GByteArray>?): Unit

@CCall("knifunptr_glibjson48_g_byte_array_append")
external fun g_byte_array_append(array: CValuesRef<GByteArray>?, data: CValuesRef<guint8Var>?, len: guint): CPointer<GByteArray>?

@CCall("knifunptr_glibjson49_g_byte_array_prepend")
external fun g_byte_array_prepend(array: CValuesRef<GByteArray>?, data: CValuesRef<guint8Var>?, len: guint): CPointer<GByteArray>?

@CCall("knifunptr_glibjson50_g_byte_array_set_size")
external fun g_byte_array_set_size(array: CValuesRef<GByteArray>?, length: guint): CPointer<GByteArray>?

@CCall("knifunptr_glibjson51_g_byte_array_remove_index")
external fun g_byte_array_remove_index(array: CValuesRef<GByteArray>?, index_: guint): CPointer<GByteArray>?

@CCall("knifunptr_glibjson52_g_byte_array_remove_index_fast")
external fun g_byte_array_remove_index_fast(array: CValuesRef<GByteArray>?, index_: guint): CPointer<GByteArray>?

@CCall("knifunptr_glibjson53_g_byte_array_remove_range")
external fun g_byte_array_remove_range(array: CValuesRef<GByteArray>?, index_: guint, length: guint): CPointer<GByteArray>?

@CCall("knifunptr_glibjson54_g_byte_array_sort")
external fun g_byte_array_sort(array: CValuesRef<GByteArray>?, compare_func: GCompareFunc?): Unit

@CCall("knifunptr_glibjson55_g_byte_array_sort_with_data")
external fun g_byte_array_sort_with_data(array: CValuesRef<GByteArray>?, compare_func: GCompareDataFunc?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson56_g_atomic_int_get")
external fun g_atomic_int_get(atomic: CValuesRef<gintVar>?): gint

@CCall("knifunptr_glibjson57_g_atomic_int_set")
external fun g_atomic_int_set(atomic: CValuesRef<gintVar>?, newval: gint): Unit

@CCall("knifunptr_glibjson58_g_atomic_int_inc")
external fun g_atomic_int_inc(atomic: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_glibjson59_g_atomic_int_dec_and_test")
external fun g_atomic_int_dec_and_test(atomic: CValuesRef<gintVar>?): gboolean

@CCall("knifunptr_glibjson60_g_atomic_int_compare_and_exchange")
external fun g_atomic_int_compare_and_exchange(atomic: CValuesRef<gintVar>?, oldval: gint, newval: gint): gboolean

@CCall("knifunptr_glibjson61_g_atomic_int_add")
external fun g_atomic_int_add(atomic: CValuesRef<gintVar>?, `val`: gint): gint

@CCall("knifunptr_glibjson62_g_atomic_int_and")
external fun g_atomic_int_and(atomic: CValuesRef<guintVar>?, `val`: guint): guint

@CCall("knifunptr_glibjson63_g_atomic_int_or")
external fun g_atomic_int_or(atomic: CValuesRef<guintVar>?, `val`: guint): guint

@CCall("knifunptr_glibjson64_g_atomic_int_xor")
external fun g_atomic_int_xor(atomic: CValuesRef<guintVar>?, `val`: guint): guint

@Deprecated("Unable to import this declaration", level = DeprecationLevel.ERROR)
fun g_atomic_pointer_get(atomic: CValuesRef<*>?): gpointer? = throw UnsupportedOperationException()

@Deprecated("Unable to import this declaration", level = DeprecationLevel.ERROR)
fun g_atomic_pointer_set(atomic: CValuesRef<*>?, newval: gpointer?): Unit = throw UnsupportedOperationException()

@Deprecated("Unable to import this declaration", level = DeprecationLevel.ERROR)
fun g_atomic_pointer_compare_and_exchange(atomic: CValuesRef<*>?, oldval: gpointer?, newval: gpointer?): gboolean = throw UnsupportedOperationException()

@Deprecated("Unable to import this declaration", level = DeprecationLevel.ERROR)
fun g_atomic_pointer_add(atomic: CValuesRef<*>?, `val`: gssize): gssize = throw UnsupportedOperationException()

@Deprecated("Unable to import this declaration", level = DeprecationLevel.ERROR)
fun g_atomic_pointer_and(atomic: CValuesRef<*>?, `val`: gsize): gsize = throw UnsupportedOperationException()

@Deprecated("Unable to import this declaration", level = DeprecationLevel.ERROR)
fun g_atomic_pointer_or(atomic: CValuesRef<*>?, `val`: gsize): gsize = throw UnsupportedOperationException()

@Deprecated("Unable to import this declaration", level = DeprecationLevel.ERROR)
fun g_atomic_pointer_xor(atomic: CValuesRef<*>?, `val`: gsize): gsize = throw UnsupportedOperationException()

@CCall("knifunptr_glibjson72_g_atomic_int_exchange_and_add")
external fun g_atomic_int_exchange_and_add(atomic: CValuesRef<gintVar>?, `val`: gint): gint

@CCall("knifunptr_glibjson73_g_quark_try_string")
external fun g_quark_try_string(@CCall.CString string: String?): GQuark

@CCall("knifunptr_glibjson74_g_quark_from_static_string")
external fun g_quark_from_static_string(@CCall.CString string: String?): GQuark

@CCall("knifunptr_glibjson75_g_quark_from_string")
external fun g_quark_from_string(@CCall.CString string: String?): GQuark

@CCall("knifunptr_glibjson76_g_quark_to_string")
external fun g_quark_to_string(quark: GQuark): CPointer<gcharVar>?

@CCall("knifunptr_glibjson77_g_intern_string")
external fun g_intern_string(@CCall.CString string: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson78_g_intern_static_string")
external fun g_intern_static_string(@CCall.CString string: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson79_g_error_new")
external fun g_error_new(domain: GQuark, code: gint, @CCall.CString format: String?, vararg variadicArguments: Any?): CPointer<GError>?

@CCall("knifunptr_glibjson80_g_error_new_literal")
external fun g_error_new_literal(domain: GQuark, code: gint, @CCall.CString message: String?): CPointer<GError>?

@CCall("knifunptr_glibjson81_g_error_new_valist")
external fun g_error_new_valist(domain: GQuark, code: gint, @CCall.CString format: String?, args: va_list?): CPointer<GError>?

@CCall("knifunptr_glibjson82_g_error_free")
external fun g_error_free(error: CValuesRef<GError>?): Unit

@CCall("knifunptr_glibjson83_g_error_copy")
external fun g_error_copy(error: CValuesRef<GError>?): CPointer<GError>?

@CCall("knifunptr_glibjson84_g_error_matches")
external fun g_error_matches(error: CValuesRef<GError>?, domain: GQuark, code: gint): gboolean

@CCall("knifunptr_glibjson85_g_set_error")
external fun g_set_error(err: CValuesRef<CPointerVar<GError>>?, domain: GQuark, code: gint, @CCall.CString format: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson86_g_set_error_literal")
external fun g_set_error_literal(err: CValuesRef<CPointerVar<GError>>?, domain: GQuark, code: gint, @CCall.CString message: String?): Unit

@CCall("knifunptr_glibjson87_g_propagate_error")
external fun g_propagate_error(dest: CValuesRef<CPointerVar<GError>>?, src: CValuesRef<GError>?): Unit

@CCall("knifunptr_glibjson88_g_clear_error")
external fun g_clear_error(err: CValuesRef<CPointerVar<GError>>?): Unit

@CCall("knifunptr_glibjson89_g_prefix_error")
external fun g_prefix_error(err: CValuesRef<CPointerVar<GError>>?, @CCall.CString format: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson90_g_propagate_prefixed_error")
external fun g_propagate_prefixed_error(dest: CValuesRef<CPointerVar<GError>>?, src: CValuesRef<GError>?, @CCall.CString format: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson91_g_get_user_name")
external fun g_get_user_name(): CPointer<gcharVar>?

@CCall("knifunptr_glibjson92_g_get_real_name")
external fun g_get_real_name(): CPointer<gcharVar>?

@CCall("knifunptr_glibjson93_g_get_home_dir")
external fun g_get_home_dir(): CPointer<gcharVar>?

@CCall("knifunptr_glibjson94_g_get_tmp_dir")
external fun g_get_tmp_dir(): CPointer<gcharVar>?

@CCall("knifunptr_glibjson95_g_get_host_name")
external fun g_get_host_name(): CPointer<gcharVar>?

@CCall("knifunptr_glibjson96_g_get_prgname")
external fun g_get_prgname(): CPointer<gcharVar>?

@CCall("knifunptr_glibjson97_g_set_prgname")
external fun g_set_prgname(@CCall.CString prgname: String?): Unit

@CCall("knifunptr_glibjson98_g_get_application_name")
external fun g_get_application_name(): CPointer<gcharVar>?

@CCall("knifunptr_glibjson99_g_set_application_name")
external fun g_set_application_name(@CCall.CString application_name: String?): Unit

@CCall("knifunptr_glibjson100_g_reload_user_special_dirs_cache")
external fun g_reload_user_special_dirs_cache(): Unit

@CCall("knifunptr_glibjson101_g_get_user_data_dir")
external fun g_get_user_data_dir(): CPointer<gcharVar>?

@CCall("knifunptr_glibjson102_g_get_user_config_dir")
external fun g_get_user_config_dir(): CPointer<gcharVar>?

@CCall("knifunptr_glibjson103_g_get_user_cache_dir")
external fun g_get_user_cache_dir(): CPointer<gcharVar>?

@CCall("knifunptr_glibjson104_g_get_system_data_dirs")
external fun g_get_system_data_dirs(): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson105_g_get_system_config_dirs")
external fun g_get_system_config_dirs(): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson106_g_get_user_runtime_dir")
external fun g_get_user_runtime_dir(): CPointer<gcharVar>?

@CCall("knifunptr_glibjson107_g_get_user_special_dir")
external fun g_get_user_special_dir(directory: GUserDirectory): CPointer<gcharVar>?

@CCall("knifunptr_glibjson108_g_parse_debug_string")
external fun g_parse_debug_string(@CCall.CString string: String?, keys: CValuesRef<GDebugKey>?, nkeys: guint): guint

@CCall("knifunptr_glibjson109_g_snprintf")
external fun g_snprintf(string: CValuesRef<gcharVar>?, n: gulong, @CCall.CString format: String?, vararg variadicArguments: Any?): gint

@CCall("knifunptr_glibjson110_g_vsnprintf")
external fun g_vsnprintf(string: CValuesRef<gcharVar>?, n: gulong, @CCall.CString format: String?, args: va_list?): gint

@CCall("knifunptr_glibjson111_g_nullify_pointer")
external fun g_nullify_pointer(nullify_location: CValuesRef<gpointerVar>?): Unit

@CCall("knifunptr_glibjson112_g_format_size_full")
external fun g_format_size_full(size: guint64, flags: GFormatSizeFlags): CPointer<gcharVar>?

@CCall("knifunptr_glibjson113_g_format_size")
external fun g_format_size(size: guint64): CPointer<gcharVar>?

@CCall("knifunptr_glibjson114_g_format_size_for_display")
external fun g_format_size_for_display(size: goffset): CPointer<gcharVar>?

@CCall("knifunptr_glibjson115_g_atexit")
external fun g_atexit(func: GVoidFunc?): Unit

@CCall("knifunptr_glibjson116_g_find_program_in_path")
external fun g_find_program_in_path(@CCall.CString program: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson117_g_bit_nth_lsf")
external fun g_bit_nth_lsf(mask: gulong, nth_bit: gint): gint

@CCall("knifunptr_glibjson118_g_bit_nth_msf")
external fun g_bit_nth_msf(mask: gulong, nth_bit: gint): gint

@CCall("knifunptr_glibjson119_g_bit_storage")
external fun g_bit_storage(number: gulong): guint

@CCall("knifunptr_glibjson120_g_bit_nth_lsf_impl")
external fun g_bit_nth_lsf_impl(mask: gulong, nth_bit: gint): gint

@CCall("knifunptr_glibjson121_g_bit_nth_msf_impl")
external fun g_bit_nth_msf_impl(mask: gulong, nth_bit: gint): gint

@CCall("knifunptr_glibjson122_g_bit_storage_impl")
external fun g_bit_storage_impl(number: gulong): guint

@CCall("knifunptr_glibjson123_g_thread_error_quark")
external fun g_thread_error_quark(): GQuark

@CCall("knifunptr_glibjson124_g_thread_ref")
external fun g_thread_ref(thread: CValuesRef<GThread>?): CPointer<GThread>?

@CCall("knifunptr_glibjson125_g_thread_unref")
external fun g_thread_unref(thread: CValuesRef<GThread>?): Unit

@CCall("knifunptr_glibjson126_g_thread_new")
external fun g_thread_new(@CCall.CString name: String?, func: GThreadFunc?, data: gpointer?): CPointer<GThread>?

@CCall("knifunptr_glibjson127_g_thread_try_new")
external fun g_thread_try_new(@CCall.CString name: String?, func: GThreadFunc?, data: gpointer?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GThread>?

@CCall("knifunptr_glibjson128_g_thread_self")
external fun g_thread_self(): CPointer<GThread>?

@CCall("knifunptr_glibjson129_g_thread_exit")
external fun g_thread_exit(retval: gpointer?): Unit

@CCall("knifunptr_glibjson130_g_thread_join")
external fun g_thread_join(thread: CValuesRef<GThread>?): gpointer?

@CCall("knifunptr_glibjson131_g_thread_yield")
external fun g_thread_yield(): Unit

@CCall("knifunptr_glibjson132_g_mutex_init")
external fun g_mutex_init(mutex: CValuesRef<GMutex>?): Unit

@CCall("knifunptr_glibjson133_g_mutex_clear")
external fun g_mutex_clear(mutex: CValuesRef<GMutex>?): Unit

@CCall("knifunptr_glibjson134_g_mutex_lock")
external fun g_mutex_lock(mutex: CValuesRef<GMutex>?): Unit

@CCall("knifunptr_glibjson135_g_mutex_trylock")
external fun g_mutex_trylock(mutex: CValuesRef<GMutex>?): gboolean

@CCall("knifunptr_glibjson136_g_mutex_unlock")
external fun g_mutex_unlock(mutex: CValuesRef<GMutex>?): Unit

@CCall("knifunptr_glibjson137_g_rw_lock_init")
external fun g_rw_lock_init(rw_lock: CValuesRef<GRWLock>?): Unit

@CCall("knifunptr_glibjson138_g_rw_lock_clear")
external fun g_rw_lock_clear(rw_lock: CValuesRef<GRWLock>?): Unit

@CCall("knifunptr_glibjson139_g_rw_lock_writer_lock")
external fun g_rw_lock_writer_lock(rw_lock: CValuesRef<GRWLock>?): Unit

@CCall("knifunptr_glibjson140_g_rw_lock_writer_trylock")
external fun g_rw_lock_writer_trylock(rw_lock: CValuesRef<GRWLock>?): gboolean

@CCall("knifunptr_glibjson141_g_rw_lock_writer_unlock")
external fun g_rw_lock_writer_unlock(rw_lock: CValuesRef<GRWLock>?): Unit

@CCall("knifunptr_glibjson142_g_rw_lock_reader_lock")
external fun g_rw_lock_reader_lock(rw_lock: CValuesRef<GRWLock>?): Unit

@CCall("knifunptr_glibjson143_g_rw_lock_reader_trylock")
external fun g_rw_lock_reader_trylock(rw_lock: CValuesRef<GRWLock>?): gboolean

@CCall("knifunptr_glibjson144_g_rw_lock_reader_unlock")
external fun g_rw_lock_reader_unlock(rw_lock: CValuesRef<GRWLock>?): Unit

@CCall("knifunptr_glibjson145_g_rec_mutex_init")
external fun g_rec_mutex_init(rec_mutex: CValuesRef<GRecMutex>?): Unit

@CCall("knifunptr_glibjson146_g_rec_mutex_clear")
external fun g_rec_mutex_clear(rec_mutex: CValuesRef<GRecMutex>?): Unit

@CCall("knifunptr_glibjson147_g_rec_mutex_lock")
external fun g_rec_mutex_lock(rec_mutex: CValuesRef<GRecMutex>?): Unit

@CCall("knifunptr_glibjson148_g_rec_mutex_trylock")
external fun g_rec_mutex_trylock(rec_mutex: CValuesRef<GRecMutex>?): gboolean

@CCall("knifunptr_glibjson149_g_rec_mutex_unlock")
external fun g_rec_mutex_unlock(rec_mutex: CValuesRef<GRecMutex>?): Unit

@CCall("knifunptr_glibjson150_g_cond_init")
external fun g_cond_init(cond: CValuesRef<GCond>?): Unit

@CCall("knifunptr_glibjson151_g_cond_clear")
external fun g_cond_clear(cond: CValuesRef<GCond>?): Unit

@CCall("knifunptr_glibjson152_g_cond_wait")
external fun g_cond_wait(cond: CValuesRef<GCond>?, mutex: CValuesRef<GMutex>?): Unit

@CCall("knifunptr_glibjson153_g_cond_signal")
external fun g_cond_signal(cond: CValuesRef<GCond>?): Unit

@CCall("knifunptr_glibjson154_g_cond_broadcast")
external fun g_cond_broadcast(cond: CValuesRef<GCond>?): Unit

@CCall("knifunptr_glibjson155_g_cond_wait_until")
external fun g_cond_wait_until(cond: CValuesRef<GCond>?, mutex: CValuesRef<GMutex>?, end_time: gint64): gboolean

@CCall("knifunptr_glibjson156_g_private_get")
external fun g_private_get(key: CValuesRef<GPrivate>?): gpointer?

@CCall("knifunptr_glibjson157_g_private_set")
external fun g_private_set(key: CValuesRef<GPrivate>?, value: gpointer?): Unit

@CCall("knifunptr_glibjson158_g_private_replace")
external fun g_private_replace(key: CValuesRef<GPrivate>?, value: gpointer?): Unit

@CCall("knifunptr_glibjson159_g_once_impl")
external fun g_once_impl(once: CValuesRef<GOnce>?, func: GThreadFunc?, arg: gpointer?): gpointer?

@Deprecated("Unable to import this declaration", level = DeprecationLevel.ERROR)
fun g_once_init_enter(location: CValuesRef<*>?): gboolean = throw UnsupportedOperationException()

@Deprecated("Unable to import this declaration", level = DeprecationLevel.ERROR)
fun g_once_init_leave(location: CValuesRef<*>?, result: gsize): Unit = throw UnsupportedOperationException()

@CCall("knifunptr_glibjson162_g_get_num_processors")
external fun g_get_num_processors(): guint

@CCall("knifunptr_glibjson163_g_mutex_locker_new")
external fun g_mutex_locker_new(mutex: CValuesRef<GMutex>?): COpaquePointer?

@CCall("knifunptr_glibjson164_g_mutex_locker_free")
external fun g_mutex_locker_free(locker: CValuesRef<*>?): Unit

@CCall("knifunptr_glibjson165_g_async_queue_new")
external fun g_async_queue_new(): CPointer<GAsyncQueue>?

@CCall("knifunptr_glibjson166_g_async_queue_new_full")
external fun g_async_queue_new_full(item_free_func: GDestroyNotify?): CPointer<GAsyncQueue>?

@CCall("knifunptr_glibjson167_g_async_queue_lock")
external fun g_async_queue_lock(queue: CValuesRef<GAsyncQueue>?): Unit

@CCall("knifunptr_glibjson168_g_async_queue_unlock")
external fun g_async_queue_unlock(queue: CValuesRef<GAsyncQueue>?): Unit

@CCall("knifunptr_glibjson169_g_async_queue_ref")
external fun g_async_queue_ref(queue: CValuesRef<GAsyncQueue>?): CPointer<GAsyncQueue>?

@CCall("knifunptr_glibjson170_g_async_queue_unref")
external fun g_async_queue_unref(queue: CValuesRef<GAsyncQueue>?): Unit

@CCall("knifunptr_glibjson171_g_async_queue_ref_unlocked")
external fun g_async_queue_ref_unlocked(queue: CValuesRef<GAsyncQueue>?): Unit

@CCall("knifunptr_glibjson172_g_async_queue_unref_and_unlock")
external fun g_async_queue_unref_and_unlock(queue: CValuesRef<GAsyncQueue>?): Unit

@CCall("knifunptr_glibjson173_g_async_queue_push")
external fun g_async_queue_push(queue: CValuesRef<GAsyncQueue>?, data: gpointer?): Unit

@CCall("knifunptr_glibjson174_g_async_queue_push_unlocked")
external fun g_async_queue_push_unlocked(queue: CValuesRef<GAsyncQueue>?, data: gpointer?): Unit

@CCall("knifunptr_glibjson175_g_async_queue_push_sorted")
external fun g_async_queue_push_sorted(queue: CValuesRef<GAsyncQueue>?, data: gpointer?, func: GCompareDataFunc?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson176_g_async_queue_push_sorted_unlocked")
external fun g_async_queue_push_sorted_unlocked(queue: CValuesRef<GAsyncQueue>?, data: gpointer?, func: GCompareDataFunc?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson177_g_async_queue_pop")
external fun g_async_queue_pop(queue: CValuesRef<GAsyncQueue>?): gpointer?

@CCall("knifunptr_glibjson178_g_async_queue_pop_unlocked")
external fun g_async_queue_pop_unlocked(queue: CValuesRef<GAsyncQueue>?): gpointer?

@CCall("knifunptr_glibjson179_g_async_queue_try_pop")
external fun g_async_queue_try_pop(queue: CValuesRef<GAsyncQueue>?): gpointer?

@CCall("knifunptr_glibjson180_g_async_queue_try_pop_unlocked")
external fun g_async_queue_try_pop_unlocked(queue: CValuesRef<GAsyncQueue>?): gpointer?

@CCall("knifunptr_glibjson181_g_async_queue_timeout_pop")
external fun g_async_queue_timeout_pop(queue: CValuesRef<GAsyncQueue>?, timeout: guint64): gpointer?

@CCall("knifunptr_glibjson182_g_async_queue_timeout_pop_unlocked")
external fun g_async_queue_timeout_pop_unlocked(queue: CValuesRef<GAsyncQueue>?, timeout: guint64): gpointer?

@CCall("knifunptr_glibjson183_g_async_queue_length")
external fun g_async_queue_length(queue: CValuesRef<GAsyncQueue>?): gint

@CCall("knifunptr_glibjson184_g_async_queue_length_unlocked")
external fun g_async_queue_length_unlocked(queue: CValuesRef<GAsyncQueue>?): gint

@CCall("knifunptr_glibjson185_g_async_queue_sort")
external fun g_async_queue_sort(queue: CValuesRef<GAsyncQueue>?, func: GCompareDataFunc?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson186_g_async_queue_sort_unlocked")
external fun g_async_queue_sort_unlocked(queue: CValuesRef<GAsyncQueue>?, func: GCompareDataFunc?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson187_g_async_queue_remove")
external fun g_async_queue_remove(queue: CValuesRef<GAsyncQueue>?, item: gpointer?): gboolean

@CCall("knifunptr_glibjson188_g_async_queue_remove_unlocked")
external fun g_async_queue_remove_unlocked(queue: CValuesRef<GAsyncQueue>?, item: gpointer?): gboolean

@CCall("knifunptr_glibjson189_g_async_queue_push_front")
external fun g_async_queue_push_front(queue: CValuesRef<GAsyncQueue>?, item: gpointer?): Unit

@CCall("knifunptr_glibjson190_g_async_queue_push_front_unlocked")
external fun g_async_queue_push_front_unlocked(queue: CValuesRef<GAsyncQueue>?, item: gpointer?): Unit

@CCall("knifunptr_glibjson191_g_async_queue_timed_pop")
external fun g_async_queue_timed_pop(queue: CValuesRef<GAsyncQueue>?, end_time: CValuesRef<GTimeVal>?): gpointer?

@CCall("knifunptr_glibjson192_g_async_queue_timed_pop_unlocked")
external fun g_async_queue_timed_pop_unlocked(queue: CValuesRef<GAsyncQueue>?, end_time: CValuesRef<GTimeVal>?): gpointer?

@CCall("knifunptr_glibjson193_g_on_error_query")
external fun g_on_error_query(@CCall.CString prg_name: String?): Unit

@CCall("knifunptr_glibjson194_g_on_error_stack_trace")
external fun g_on_error_stack_trace(@CCall.CString prg_name: String?): Unit

@CCall("knifunptr_glibjson195_g_base64_encode_step")
external fun g_base64_encode_step(`in`: CValuesRef<gucharVar>?, len: gsize, break_lines: gboolean, out: CValuesRef<gcharVar>?, state: CValuesRef<gintVar>?, save: CValuesRef<gintVar>?): gsize

@CCall("knifunptr_glibjson196_g_base64_encode_close")
external fun g_base64_encode_close(break_lines: gboolean, out: CValuesRef<gcharVar>?, state: CValuesRef<gintVar>?, save: CValuesRef<gintVar>?): gsize

@CCall("knifunptr_glibjson197_g_base64_encode")
external fun g_base64_encode(data: CValuesRef<gucharVar>?, len: gsize): CPointer<gcharVar>?

@CCall("knifunptr_glibjson198_g_base64_decode_step")
external fun g_base64_decode_step(@CCall.CString `in`: String?, len: gsize, out: CValuesRef<gucharVar>?, state: CValuesRef<gintVar>?, save: CValuesRef<guintVar>?): gsize

@CCall("knifunptr_glibjson199_g_base64_decode")
external fun g_base64_decode(@CCall.CString text: String?, out_len: CValuesRef<gsizeVar>?): CPointer<gucharVar>?

@CCall("knifunptr_glibjson200_g_base64_decode_inplace")
external fun g_base64_decode_inplace(text: CValuesRef<gcharVar>?, out_len: CValuesRef<gsizeVar>?): CPointer<gucharVar>?

@CCall("knifunptr_glibjson201_g_bit_lock")
external fun g_bit_lock(address: CValuesRef<gintVar>?, lock_bit: gint): Unit

@CCall("knifunptr_glibjson202_g_bit_trylock")
external fun g_bit_trylock(address: CValuesRef<gintVar>?, lock_bit: gint): gboolean

@CCall("knifunptr_glibjson203_g_bit_unlock")
external fun g_bit_unlock(address: CValuesRef<gintVar>?, lock_bit: gint): Unit

@Deprecated("Unable to import this declaration", level = DeprecationLevel.ERROR)
fun g_pointer_bit_lock(address: CValuesRef<*>?, lock_bit: gint): Unit = throw UnsupportedOperationException()

@Deprecated("Unable to import this declaration", level = DeprecationLevel.ERROR)
fun g_pointer_bit_trylock(address: CValuesRef<*>?, lock_bit: gint): gboolean = throw UnsupportedOperationException()

@Deprecated("Unable to import this declaration", level = DeprecationLevel.ERROR)
fun g_pointer_bit_unlock(address: CValuesRef<*>?, lock_bit: gint): Unit = throw UnsupportedOperationException()

@CCall("knifunptr_glibjson207_g_bookmark_file_error_quark")
external fun g_bookmark_file_error_quark(): GQuark

@CCall("knifunptr_glibjson208_g_bookmark_file_new")
external fun g_bookmark_file_new(): CPointer<GBookmarkFile>?

@CCall("knifunptr_glibjson209_g_bookmark_file_free")
external fun g_bookmark_file_free(bookmark: CValuesRef<GBookmarkFile>?): Unit

@CCall("knifunptr_glibjson210_g_bookmark_file_load_from_file")
external fun g_bookmark_file_load_from_file(bookmark: CValuesRef<GBookmarkFile>?, @CCall.CString filename: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson211_g_bookmark_file_load_from_data")
external fun g_bookmark_file_load_from_data(bookmark: CValuesRef<GBookmarkFile>?, @CCall.CString data: String?, length: gsize, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson212_g_bookmark_file_load_from_data_dirs")
external fun g_bookmark_file_load_from_data_dirs(bookmark: CValuesRef<GBookmarkFile>?, @CCall.CString file: String?, full_path: CValuesRef<CPointerVar<gcharVar>>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson213_g_bookmark_file_to_data")
external fun g_bookmark_file_to_data(bookmark: CValuesRef<GBookmarkFile>?, length: CValuesRef<gsizeVar>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson214_g_bookmark_file_to_file")
external fun g_bookmark_file_to_file(bookmark: CValuesRef<GBookmarkFile>?, @CCall.CString filename: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson215_g_bookmark_file_set_title")
external fun g_bookmark_file_set_title(bookmark: CValuesRef<GBookmarkFile>?, @CCall.CString uri: String?, @CCall.CString title: String?): Unit

@CCall("knifunptr_glibjson216_g_bookmark_file_get_title")
external fun g_bookmark_file_get_title(bookmark: CValuesRef<GBookmarkFile>?, @CCall.CString uri: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson217_g_bookmark_file_set_description")
external fun g_bookmark_file_set_description(bookmark: CValuesRef<GBookmarkFile>?, @CCall.CString uri: String?, @CCall.CString description: String?): Unit

@CCall("knifunptr_glibjson218_g_bookmark_file_get_description")
external fun g_bookmark_file_get_description(bookmark: CValuesRef<GBookmarkFile>?, @CCall.CString uri: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson219_g_bookmark_file_set_mime_type")
external fun g_bookmark_file_set_mime_type(bookmark: CValuesRef<GBookmarkFile>?, @CCall.CString uri: String?, @CCall.CString mime_type: String?): Unit

@CCall("knifunptr_glibjson220_g_bookmark_file_get_mime_type")
external fun g_bookmark_file_get_mime_type(bookmark: CValuesRef<GBookmarkFile>?, @CCall.CString uri: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson221_g_bookmark_file_set_groups")
external fun g_bookmark_file_set_groups(bookmark: CValuesRef<GBookmarkFile>?, @CCall.CString uri: String?, groups: CValuesRef<CPointerVar<gcharVar>>?, length: gsize): Unit

@CCall("knifunptr_glibjson222_g_bookmark_file_add_group")
external fun g_bookmark_file_add_group(bookmark: CValuesRef<GBookmarkFile>?, @CCall.CString uri: String?, @CCall.CString group: String?): Unit

@CCall("knifunptr_glibjson223_g_bookmark_file_has_group")
external fun g_bookmark_file_has_group(bookmark: CValuesRef<GBookmarkFile>?, @CCall.CString uri: String?, @CCall.CString group: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson224_g_bookmark_file_get_groups")
external fun g_bookmark_file_get_groups(bookmark: CValuesRef<GBookmarkFile>?, @CCall.CString uri: String?, length: CValuesRef<gsizeVar>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson225_g_bookmark_file_add_application")
external fun g_bookmark_file_add_application(bookmark: CValuesRef<GBookmarkFile>?, @CCall.CString uri: String?, @CCall.CString name: String?, @CCall.CString exec: String?): Unit

@CCall("knifunptr_glibjson226_g_bookmark_file_has_application")
external fun g_bookmark_file_has_application(bookmark: CValuesRef<GBookmarkFile>?, @CCall.CString uri: String?, @CCall.CString name: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson227_g_bookmark_file_get_applications")
external fun g_bookmark_file_get_applications(bookmark: CValuesRef<GBookmarkFile>?, @CCall.CString uri: String?, length: CValuesRef<gsizeVar>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson228_g_bookmark_file_set_app_info")
external fun g_bookmark_file_set_app_info(bookmark: CValuesRef<GBookmarkFile>?, @CCall.CString uri: String?, @CCall.CString name: String?, @CCall.CString exec: String?, count: gint, stamp: time_t, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson229_g_bookmark_file_get_app_info")
external fun g_bookmark_file_get_app_info(bookmark: CValuesRef<GBookmarkFile>?, @CCall.CString uri: String?, @CCall.CString name: String?, exec: CValuesRef<CPointerVar<gcharVar>>?, count: CValuesRef<guintVar>?, stamp: CValuesRef<time_tVar>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson230_g_bookmark_file_set_is_private")
external fun g_bookmark_file_set_is_private(bookmark: CValuesRef<GBookmarkFile>?, @CCall.CString uri: String?, is_private: gboolean): Unit

@CCall("knifunptr_glibjson231_g_bookmark_file_get_is_private")
external fun g_bookmark_file_get_is_private(bookmark: CValuesRef<GBookmarkFile>?, @CCall.CString uri: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson232_g_bookmark_file_set_icon")
external fun g_bookmark_file_set_icon(bookmark: CValuesRef<GBookmarkFile>?, @CCall.CString uri: String?, @CCall.CString href: String?, @CCall.CString mime_type: String?): Unit

@CCall("knifunptr_glibjson233_g_bookmark_file_get_icon")
external fun g_bookmark_file_get_icon(bookmark: CValuesRef<GBookmarkFile>?, @CCall.CString uri: String?, href: CValuesRef<CPointerVar<gcharVar>>?, mime_type: CValuesRef<CPointerVar<gcharVar>>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson234_g_bookmark_file_set_added")
external fun g_bookmark_file_set_added(bookmark: CValuesRef<GBookmarkFile>?, @CCall.CString uri: String?, added: time_t): Unit

@CCall("knifunptr_glibjson235_g_bookmark_file_get_added")
external fun g_bookmark_file_get_added(bookmark: CValuesRef<GBookmarkFile>?, @CCall.CString uri: String?, error: CValuesRef<CPointerVar<GError>>?): time_t

@CCall("knifunptr_glibjson236_g_bookmark_file_set_modified")
external fun g_bookmark_file_set_modified(bookmark: CValuesRef<GBookmarkFile>?, @CCall.CString uri: String?, modified: time_t): Unit

@CCall("knifunptr_glibjson237_g_bookmark_file_get_modified")
external fun g_bookmark_file_get_modified(bookmark: CValuesRef<GBookmarkFile>?, @CCall.CString uri: String?, error: CValuesRef<CPointerVar<GError>>?): time_t

@CCall("knifunptr_glibjson238_g_bookmark_file_set_visited")
external fun g_bookmark_file_set_visited(bookmark: CValuesRef<GBookmarkFile>?, @CCall.CString uri: String?, visited: time_t): Unit

@CCall("knifunptr_glibjson239_g_bookmark_file_get_visited")
external fun g_bookmark_file_get_visited(bookmark: CValuesRef<GBookmarkFile>?, @CCall.CString uri: String?, error: CValuesRef<CPointerVar<GError>>?): time_t

@CCall("knifunptr_glibjson240_g_bookmark_file_has_item")
external fun g_bookmark_file_has_item(bookmark: CValuesRef<GBookmarkFile>?, @CCall.CString uri: String?): gboolean

@CCall("knifunptr_glibjson241_g_bookmark_file_get_size")
external fun g_bookmark_file_get_size(bookmark: CValuesRef<GBookmarkFile>?): gint

@CCall("knifunptr_glibjson242_g_bookmark_file_get_uris")
external fun g_bookmark_file_get_uris(bookmark: CValuesRef<GBookmarkFile>?, length: CValuesRef<gsizeVar>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson243_g_bookmark_file_remove_group")
external fun g_bookmark_file_remove_group(bookmark: CValuesRef<GBookmarkFile>?, @CCall.CString uri: String?, @CCall.CString group: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson244_g_bookmark_file_remove_application")
external fun g_bookmark_file_remove_application(bookmark: CValuesRef<GBookmarkFile>?, @CCall.CString uri: String?, @CCall.CString name: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson245_g_bookmark_file_remove_item")
external fun g_bookmark_file_remove_item(bookmark: CValuesRef<GBookmarkFile>?, @CCall.CString uri: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson246_g_bookmark_file_move_item")
external fun g_bookmark_file_move_item(bookmark: CValuesRef<GBookmarkFile>?, @CCall.CString old_uri: String?, @CCall.CString new_uri: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson247_g_bytes_new")
external fun g_bytes_new(data: gconstpointer?, size: gsize): CPointer<GBytes>?

@CCall("knifunptr_glibjson248_g_bytes_new_take")
external fun g_bytes_new_take(data: gpointer?, size: gsize): CPointer<GBytes>?

@CCall("knifunptr_glibjson249_g_bytes_new_static")
external fun g_bytes_new_static(data: gconstpointer?, size: gsize): CPointer<GBytes>?

@CCall("knifunptr_glibjson250_g_bytes_new_with_free_func")
external fun g_bytes_new_with_free_func(data: gconstpointer?, size: gsize, free_func: GDestroyNotify?, user_data: gpointer?): CPointer<GBytes>?

@CCall("knifunptr_glibjson251_g_bytes_new_from_bytes")
external fun g_bytes_new_from_bytes(bytes: CValuesRef<GBytes>?, offset: gsize, length: gsize): CPointer<GBytes>?

@CCall("knifunptr_glibjson252_g_bytes_get_data")
external fun g_bytes_get_data(bytes: CValuesRef<GBytes>?, size: CValuesRef<gsizeVar>?): gconstpointer?

@CCall("knifunptr_glibjson253_g_bytes_get_size")
external fun g_bytes_get_size(bytes: CValuesRef<GBytes>?): gsize

@CCall("knifunptr_glibjson254_g_bytes_ref")
external fun g_bytes_ref(bytes: CValuesRef<GBytes>?): CPointer<GBytes>?

@CCall("knifunptr_glibjson255_g_bytes_unref")
external fun g_bytes_unref(bytes: CValuesRef<GBytes>?): Unit

@CCall("knifunptr_glibjson256_g_bytes_unref_to_data")
external fun g_bytes_unref_to_data(bytes: CValuesRef<GBytes>?, size: CValuesRef<gsizeVar>?): gpointer?

@CCall("knifunptr_glibjson257_g_bytes_unref_to_array")
external fun g_bytes_unref_to_array(bytes: CValuesRef<GBytes>?): CPointer<GByteArray>?

@CCall("knifunptr_glibjson258_g_bytes_hash")
external fun g_bytes_hash(bytes: gconstpointer?): guint

@CCall("knifunptr_glibjson259_g_bytes_equal")
external fun g_bytes_equal(bytes1: gconstpointer?, bytes2: gconstpointer?): gboolean

@CCall("knifunptr_glibjson260_g_bytes_compare")
external fun g_bytes_compare(bytes1: gconstpointer?, bytes2: gconstpointer?): gint

@CCall("knifunptr_glibjson261_g_get_charset")
external fun g_get_charset(charset: CValuesRef<CPointerVar<ByteVar>>?): gboolean

@CCall("knifunptr_glibjson262_g_get_codeset")
external fun g_get_codeset(): CPointer<gcharVar>?

@CCall("knifunptr_glibjson263_g_get_language_names")
external fun g_get_language_names(): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson264_g_get_locale_variants")
external fun g_get_locale_variants(@CCall.CString locale: String?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson265_g_checksum_type_get_length")
external fun g_checksum_type_get_length(checksum_type: GChecksumType): gssize

@CCall("knifunptr_glibjson266_g_checksum_new")
external fun g_checksum_new(checksum_type: GChecksumType): CPointer<GChecksum>?

@CCall("knifunptr_glibjson267_g_checksum_reset")
external fun g_checksum_reset(checksum: CValuesRef<GChecksum>?): Unit

@CCall("knifunptr_glibjson268_g_checksum_copy")
external fun g_checksum_copy(checksum: CValuesRef<GChecksum>?): CPointer<GChecksum>?

@CCall("knifunptr_glibjson269_g_checksum_free")
external fun g_checksum_free(checksum: CValuesRef<GChecksum>?): Unit

@CCall("knifunptr_glibjson270_g_checksum_update")
external fun g_checksum_update(checksum: CValuesRef<GChecksum>?, data: CValuesRef<gucharVar>?, length: gssize): Unit

@CCall("knifunptr_glibjson271_g_checksum_get_string")
external fun g_checksum_get_string(checksum: CValuesRef<GChecksum>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson272_g_checksum_get_digest")
external fun g_checksum_get_digest(checksum: CValuesRef<GChecksum>?, buffer: CValuesRef<guint8Var>?, digest_len: CValuesRef<gsizeVar>?): Unit

@CCall("knifunptr_glibjson273_g_compute_checksum_for_data")
external fun g_compute_checksum_for_data(checksum_type: GChecksumType, data: CValuesRef<gucharVar>?, length: gsize): CPointer<gcharVar>?

@CCall("knifunptr_glibjson274_g_compute_checksum_for_string")
external fun g_compute_checksum_for_string(checksum_type: GChecksumType, @CCall.CString str: String?, length: gssize): CPointer<gcharVar>?

@CCall("knifunptr_glibjson275_g_compute_checksum_for_bytes")
external fun g_compute_checksum_for_bytes(checksum_type: GChecksumType, data: CValuesRef<GBytes>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson276_g_convert_error_quark")
external fun g_convert_error_quark(): GQuark

@CCall("knifunptr_glibjson277_g_iconv_open")
external fun g_iconv_open(@CCall.CString to_codeset: String?, @CCall.CString from_codeset: String?): GIConv?

@CCall("knifunptr_glibjson278_g_iconv")
external fun g_iconv(converter: GIConv?, inbuf: CValuesRef<CPointerVar<gcharVar>>?, inbytes_left: CValuesRef<gsizeVar>?, outbuf: CValuesRef<CPointerVar<gcharVar>>?, outbytes_left: CValuesRef<gsizeVar>?): gsize

@CCall("knifunptr_glibjson279_g_iconv_close")
external fun g_iconv_close(converter: GIConv?): gint

@CCall("knifunptr_glibjson280_g_convert")
external fun g_convert(@CCall.CString str: String?, len: gssize, @CCall.CString to_codeset: String?, @CCall.CString from_codeset: String?, bytes_read: CValuesRef<gsizeVar>?, bytes_written: CValuesRef<gsizeVar>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson281_g_convert_with_iconv")
external fun g_convert_with_iconv(@CCall.CString str: String?, len: gssize, converter: GIConv?, bytes_read: CValuesRef<gsizeVar>?, bytes_written: CValuesRef<gsizeVar>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson282_g_convert_with_fallback")
external fun g_convert_with_fallback(@CCall.CString str: String?, len: gssize, @CCall.CString to_codeset: String?, @CCall.CString from_codeset: String?, @CCall.CString fallback: String?, bytes_read: CValuesRef<gsizeVar>?, bytes_written: CValuesRef<gsizeVar>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson283_g_locale_to_utf8")
external fun g_locale_to_utf8(@CCall.CString opsysstring: String?, len: gssize, bytes_read: CValuesRef<gsizeVar>?, bytes_written: CValuesRef<gsizeVar>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson284_g_locale_from_utf8")
external fun g_locale_from_utf8(@CCall.CString utf8string: String?, len: gssize, bytes_read: CValuesRef<gsizeVar>?, bytes_written: CValuesRef<gsizeVar>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson285_g_filename_to_utf8")
external fun g_filename_to_utf8(@CCall.CString opsysstring: String?, len: gssize, bytes_read: CValuesRef<gsizeVar>?, bytes_written: CValuesRef<gsizeVar>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson286_g_filename_from_utf8")
external fun g_filename_from_utf8(@CCall.CString utf8string: String?, len: gssize, bytes_read: CValuesRef<gsizeVar>?, bytes_written: CValuesRef<gsizeVar>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson287_g_filename_from_uri")
external fun g_filename_from_uri(@CCall.CString uri: String?, hostname: CValuesRef<CPointerVar<gcharVar>>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson288_g_filename_to_uri")
external fun g_filename_to_uri(@CCall.CString filename: String?, @CCall.CString hostname: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson289_g_filename_display_name")
external fun g_filename_display_name(@CCall.CString filename: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson290_g_get_filename_charsets")
external fun g_get_filename_charsets(charsets: CValuesRef<CPointerVar<CPointerVar<gcharVar>>>?): gboolean

@CCall("knifunptr_glibjson291_g_filename_display_basename")
external fun g_filename_display_basename(@CCall.CString filename: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson292_g_uri_list_extract_uris")
external fun g_uri_list_extract_uris(@CCall.CString uri_list: String?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson293_g_datalist_init")
external fun g_datalist_init(datalist: CValuesRef<CPointerVar<GData>>?): Unit

@CCall("knifunptr_glibjson294_g_datalist_clear")
external fun g_datalist_clear(datalist: CValuesRef<CPointerVar<GData>>?): Unit

@CCall("knifunptr_glibjson295_g_datalist_id_get_data")
external fun g_datalist_id_get_data(datalist: CValuesRef<CPointerVar<GData>>?, key_id: GQuark): gpointer?

@CCall("knifunptr_glibjson296_g_datalist_id_set_data_full")
external fun g_datalist_id_set_data_full(datalist: CValuesRef<CPointerVar<GData>>?, key_id: GQuark, data: gpointer?, destroy_func: GDestroyNotify?): Unit

@CCall("knifunptr_glibjson297_g_datalist_id_dup_data")
external fun g_datalist_id_dup_data(datalist: CValuesRef<CPointerVar<GData>>?, key_id: GQuark, dup_func: GDuplicateFunc?, user_data: gpointer?): gpointer?

@CCall("knifunptr_glibjson298_g_datalist_id_replace_data")
external fun g_datalist_id_replace_data(datalist: CValuesRef<CPointerVar<GData>>?, key_id: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, old_destroy: CValuesRef<GDestroyNotifyVar>?): gboolean

@CCall("knifunptr_glibjson299_g_datalist_id_remove_no_notify")
external fun g_datalist_id_remove_no_notify(datalist: CValuesRef<CPointerVar<GData>>?, key_id: GQuark): gpointer?

@CCall("knifunptr_glibjson300_g_datalist_foreach")
external fun g_datalist_foreach(datalist: CValuesRef<CPointerVar<GData>>?, func: GDataForeachFunc?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson301_g_datalist_set_flags")
external fun g_datalist_set_flags(datalist: CValuesRef<CPointerVar<GData>>?, flags: guint): Unit

@CCall("knifunptr_glibjson302_g_datalist_unset_flags")
external fun g_datalist_unset_flags(datalist: CValuesRef<CPointerVar<GData>>?, flags: guint): Unit

@CCall("knifunptr_glibjson303_g_datalist_get_flags")
external fun g_datalist_get_flags(datalist: CValuesRef<CPointerVar<GData>>?): guint

@CCall("knifunptr_glibjson304_g_dataset_destroy")
external fun g_dataset_destroy(dataset_location: gconstpointer?): Unit

@CCall("knifunptr_glibjson305_g_dataset_id_get_data")
external fun g_dataset_id_get_data(dataset_location: gconstpointer?, key_id: GQuark): gpointer?

@CCall("knifunptr_glibjson306_g_datalist_get_data")
external fun g_datalist_get_data(datalist: CValuesRef<CPointerVar<GData>>?, @CCall.CString key: String?): gpointer?

@CCall("knifunptr_glibjson307_g_dataset_id_set_data_full")
external fun g_dataset_id_set_data_full(dataset_location: gconstpointer?, key_id: GQuark, data: gpointer?, destroy_func: GDestroyNotify?): Unit

@CCall("knifunptr_glibjson308_g_dataset_id_remove_no_notify")
external fun g_dataset_id_remove_no_notify(dataset_location: gconstpointer?, key_id: GQuark): gpointer?

@CCall("knifunptr_glibjson309_g_dataset_foreach")
external fun g_dataset_foreach(dataset_location: gconstpointer?, func: GDataForeachFunc?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson310_g_date_new")
external fun g_date_new(): CPointer<GDate>?

@CCall("knifunptr_glibjson311_g_date_new_dmy")
external fun g_date_new_dmy(day: GDateDay, month: GDateMonth, year: GDateYear): CPointer<GDate>?

@CCall("knifunptr_glibjson312_g_date_new_julian")
external fun g_date_new_julian(julian_day: guint32): CPointer<GDate>?

@CCall("knifunptr_glibjson313_g_date_free")
external fun g_date_free(date: CValuesRef<GDate>?): Unit

@CCall("knifunptr_glibjson314_g_date_copy")
external fun g_date_copy(date: CValuesRef<GDate>?): CPointer<GDate>?

@CCall("knifunptr_glibjson315_g_date_valid")
external fun g_date_valid(date: CValuesRef<GDate>?): gboolean

@CCall("knifunptr_glibjson316_g_date_valid_day")
external fun g_date_valid_day(day: GDateDay): gboolean

@CCall("knifunptr_glibjson317_g_date_valid_month")
external fun g_date_valid_month(month: GDateMonth): gboolean

@CCall("knifunptr_glibjson318_g_date_valid_year")
external fun g_date_valid_year(year: GDateYear): gboolean

@CCall("knifunptr_glibjson319_g_date_valid_weekday")
external fun g_date_valid_weekday(weekday: GDateWeekday): gboolean

@CCall("knifunptr_glibjson320_g_date_valid_julian")
external fun g_date_valid_julian(julian_date: guint32): gboolean

@CCall("knifunptr_glibjson321_g_date_valid_dmy")
external fun g_date_valid_dmy(day: GDateDay, month: GDateMonth, year: GDateYear): gboolean

@CCall("knifunptr_glibjson322_g_date_get_weekday")
external fun g_date_get_weekday(date: CValuesRef<GDate>?): GDateWeekday

@CCall("knifunptr_glibjson323_g_date_get_month")
external fun g_date_get_month(date: CValuesRef<GDate>?): GDateMonth

@CCall("knifunptr_glibjson324_g_date_get_year")
external fun g_date_get_year(date: CValuesRef<GDate>?): GDateYear

@CCall("knifunptr_glibjson325_g_date_get_day")
external fun g_date_get_day(date: CValuesRef<GDate>?): GDateDay

@CCall("knifunptr_glibjson326_g_date_get_julian")
external fun g_date_get_julian(date: CValuesRef<GDate>?): guint32

@CCall("knifunptr_glibjson327_g_date_get_day_of_year")
external fun g_date_get_day_of_year(date: CValuesRef<GDate>?): guint

@CCall("knifunptr_glibjson328_g_date_get_monday_week_of_year")
external fun g_date_get_monday_week_of_year(date: CValuesRef<GDate>?): guint

@CCall("knifunptr_glibjson329_g_date_get_sunday_week_of_year")
external fun g_date_get_sunday_week_of_year(date: CValuesRef<GDate>?): guint

@CCall("knifunptr_glibjson330_g_date_get_iso8601_week_of_year")
external fun g_date_get_iso8601_week_of_year(date: CValuesRef<GDate>?): guint

@CCall("knifunptr_glibjson331_g_date_clear")
external fun g_date_clear(date: CValuesRef<GDate>?, n_dates: guint): Unit

@CCall("knifunptr_glibjson332_g_date_set_parse")
external fun g_date_set_parse(date: CValuesRef<GDate>?, @CCall.CString str: String?): Unit

@CCall("knifunptr_glibjson333_g_date_set_time_t")
external fun g_date_set_time_t(date: CValuesRef<GDate>?, timet: time_t): Unit

@CCall("knifunptr_glibjson334_g_date_set_time_val")
external fun g_date_set_time_val(date: CValuesRef<GDate>?, timeval: CValuesRef<GTimeVal>?): Unit

@CCall("knifunptr_glibjson335_g_date_set_time")
external fun g_date_set_time(date: CValuesRef<GDate>?, time_: GTime): Unit

@CCall("knifunptr_glibjson336_g_date_set_month")
external fun g_date_set_month(date: CValuesRef<GDate>?, month: GDateMonth): Unit

@CCall("knifunptr_glibjson337_g_date_set_day")
external fun g_date_set_day(date: CValuesRef<GDate>?, day: GDateDay): Unit

@CCall("knifunptr_glibjson338_g_date_set_year")
external fun g_date_set_year(date: CValuesRef<GDate>?, year: GDateYear): Unit

@CCall("knifunptr_glibjson339_g_date_set_dmy")
external fun g_date_set_dmy(date: CValuesRef<GDate>?, day: GDateDay, month: GDateMonth, y: GDateYear): Unit

@CCall("knifunptr_glibjson340_g_date_set_julian")
external fun g_date_set_julian(date: CValuesRef<GDate>?, julian_date: guint32): Unit

@CCall("knifunptr_glibjson341_g_date_is_first_of_month")
external fun g_date_is_first_of_month(date: CValuesRef<GDate>?): gboolean

@CCall("knifunptr_glibjson342_g_date_is_last_of_month")
external fun g_date_is_last_of_month(date: CValuesRef<GDate>?): gboolean

@CCall("knifunptr_glibjson343_g_date_add_days")
external fun g_date_add_days(date: CValuesRef<GDate>?, n_days: guint): Unit

@CCall("knifunptr_glibjson344_g_date_subtract_days")
external fun g_date_subtract_days(date: CValuesRef<GDate>?, n_days: guint): Unit

@CCall("knifunptr_glibjson345_g_date_add_months")
external fun g_date_add_months(date: CValuesRef<GDate>?, n_months: guint): Unit

@CCall("knifunptr_glibjson346_g_date_subtract_months")
external fun g_date_subtract_months(date: CValuesRef<GDate>?, n_months: guint): Unit

@CCall("knifunptr_glibjson347_g_date_add_years")
external fun g_date_add_years(date: CValuesRef<GDate>?, n_years: guint): Unit

@CCall("knifunptr_glibjson348_g_date_subtract_years")
external fun g_date_subtract_years(date: CValuesRef<GDate>?, n_years: guint): Unit

@CCall("knifunptr_glibjson349_g_date_is_leap_year")
external fun g_date_is_leap_year(year: GDateYear): gboolean

@CCall("knifunptr_glibjson350_g_date_get_days_in_month")
external fun g_date_get_days_in_month(month: GDateMonth, year: GDateYear): guint8

@CCall("knifunptr_glibjson351_g_date_get_monday_weeks_in_year")
external fun g_date_get_monday_weeks_in_year(year: GDateYear): guint8

@CCall("knifunptr_glibjson352_g_date_get_sunday_weeks_in_year")
external fun g_date_get_sunday_weeks_in_year(year: GDateYear): guint8

@CCall("knifunptr_glibjson353_g_date_days_between")
external fun g_date_days_between(date1: CValuesRef<GDate>?, date2: CValuesRef<GDate>?): gint

@CCall("knifunptr_glibjson354_g_date_compare")
external fun g_date_compare(lhs: CValuesRef<GDate>?, rhs: CValuesRef<GDate>?): gint

@CCall("knifunptr_glibjson355_g_date_to_struct_tm")
external fun g_date_to_struct_tm(date: CValuesRef<GDate>?, tm: CValuesRef<tm>?): Unit

@CCall("knifunptr_glibjson356_g_date_clamp")
external fun g_date_clamp(date: CValuesRef<GDate>?, min_date: CValuesRef<GDate>?, max_date: CValuesRef<GDate>?): Unit

@CCall("knifunptr_glibjson357_g_date_order")
external fun g_date_order(date1: CValuesRef<GDate>?, date2: CValuesRef<GDate>?): Unit

@CCall("knifunptr_glibjson358_g_date_strftime")
external fun g_date_strftime(s: CValuesRef<gcharVar>?, slen: gsize, @CCall.CString format: String?, date: CValuesRef<GDate>?): gsize

@CCall("knifunptr_glibjson359_g_time_zone_new")
external fun g_time_zone_new(@CCall.CString identifier: String?): CPointer<GTimeZone>?

@CCall("knifunptr_glibjson360_g_time_zone_new_utc")
external fun g_time_zone_new_utc(): CPointer<GTimeZone>?

@CCall("knifunptr_glibjson361_g_time_zone_new_local")
external fun g_time_zone_new_local(): CPointer<GTimeZone>?

@CCall("knifunptr_glibjson362_g_time_zone_ref")
external fun g_time_zone_ref(tz: CValuesRef<GTimeZone>?): CPointer<GTimeZone>?

@CCall("knifunptr_glibjson363_g_time_zone_unref")
external fun g_time_zone_unref(tz: CValuesRef<GTimeZone>?): Unit

@CCall("knifunptr_glibjson364_g_time_zone_find_interval")
external fun g_time_zone_find_interval(tz: CValuesRef<GTimeZone>?, type: GTimeType, time_: gint64): gint

@CCall("knifunptr_glibjson365_g_time_zone_adjust_time")
external fun g_time_zone_adjust_time(tz: CValuesRef<GTimeZone>?, type: GTimeType, time_: CValuesRef<gint64Var>?): gint

@CCall("knifunptr_glibjson366_g_time_zone_get_abbreviation")
external fun g_time_zone_get_abbreviation(tz: CValuesRef<GTimeZone>?, interval: gint): CPointer<gcharVar>?

@CCall("knifunptr_glibjson367_g_time_zone_get_offset")
external fun g_time_zone_get_offset(tz: CValuesRef<GTimeZone>?, interval: gint): gint32

@CCall("knifunptr_glibjson368_g_time_zone_is_dst")
external fun g_time_zone_is_dst(tz: CValuesRef<GTimeZone>?, interval: gint): gboolean

@CCall("knifunptr_glibjson369_g_date_time_unref")
external fun g_date_time_unref(datetime: CValuesRef<GDateTime>?): Unit

@CCall("knifunptr_glibjson370_g_date_time_ref")
external fun g_date_time_ref(datetime: CValuesRef<GDateTime>?): CPointer<GDateTime>?

@CCall("knifunptr_glibjson371_g_date_time_new_now")
external fun g_date_time_new_now(tz: CValuesRef<GTimeZone>?): CPointer<GDateTime>?

@CCall("knifunptr_glibjson372_g_date_time_new_now_local")
external fun g_date_time_new_now_local(): CPointer<GDateTime>?

@CCall("knifunptr_glibjson373_g_date_time_new_now_utc")
external fun g_date_time_new_now_utc(): CPointer<GDateTime>?

@CCall("knifunptr_glibjson374_g_date_time_new_from_unix_local")
external fun g_date_time_new_from_unix_local(t: gint64): CPointer<GDateTime>?

@CCall("knifunptr_glibjson375_g_date_time_new_from_unix_utc")
external fun g_date_time_new_from_unix_utc(t: gint64): CPointer<GDateTime>?

@CCall("knifunptr_glibjson376_g_date_time_new_from_timeval_local")
external fun g_date_time_new_from_timeval_local(tv: CValuesRef<GTimeVal>?): CPointer<GDateTime>?

@CCall("knifunptr_glibjson377_g_date_time_new_from_timeval_utc")
external fun g_date_time_new_from_timeval_utc(tv: CValuesRef<GTimeVal>?): CPointer<GDateTime>?

@CCall("knifunptr_glibjson378_g_date_time_new_from_iso8601")
external fun g_date_time_new_from_iso8601(@CCall.CString text: String?, default_tz: CValuesRef<GTimeZone>?): CPointer<GDateTime>?

@CCall("knifunptr_glibjson379_g_date_time_new")
external fun g_date_time_new(tz: CValuesRef<GTimeZone>?, year: gint, month: gint, day: gint, hour: gint, minute: gint, seconds: gdouble): CPointer<GDateTime>?

@CCall("knifunptr_glibjson380_g_date_time_new_local")
external fun g_date_time_new_local(year: gint, month: gint, day: gint, hour: gint, minute: gint, seconds: gdouble): CPointer<GDateTime>?

@CCall("knifunptr_glibjson381_g_date_time_new_utc")
external fun g_date_time_new_utc(year: gint, month: gint, day: gint, hour: gint, minute: gint, seconds: gdouble): CPointer<GDateTime>?

@CCall("knifunptr_glibjson382_g_date_time_add")
external fun g_date_time_add(datetime: CValuesRef<GDateTime>?, timespan: GTimeSpan): CPointer<GDateTime>?

@CCall("knifunptr_glibjson383_g_date_time_add_years")
external fun g_date_time_add_years(datetime: CValuesRef<GDateTime>?, years: gint): CPointer<GDateTime>?

@CCall("knifunptr_glibjson384_g_date_time_add_months")
external fun g_date_time_add_months(datetime: CValuesRef<GDateTime>?, months: gint): CPointer<GDateTime>?

@CCall("knifunptr_glibjson385_g_date_time_add_weeks")
external fun g_date_time_add_weeks(datetime: CValuesRef<GDateTime>?, weeks: gint): CPointer<GDateTime>?

@CCall("knifunptr_glibjson386_g_date_time_add_days")
external fun g_date_time_add_days(datetime: CValuesRef<GDateTime>?, days: gint): CPointer<GDateTime>?

@CCall("knifunptr_glibjson387_g_date_time_add_hours")
external fun g_date_time_add_hours(datetime: CValuesRef<GDateTime>?, hours: gint): CPointer<GDateTime>?

@CCall("knifunptr_glibjson388_g_date_time_add_minutes")
external fun g_date_time_add_minutes(datetime: CValuesRef<GDateTime>?, minutes: gint): CPointer<GDateTime>?

@CCall("knifunptr_glibjson389_g_date_time_add_seconds")
external fun g_date_time_add_seconds(datetime: CValuesRef<GDateTime>?, seconds: gdouble): CPointer<GDateTime>?

@CCall("knifunptr_glibjson390_g_date_time_add_full")
external fun g_date_time_add_full(datetime: CValuesRef<GDateTime>?, years: gint, months: gint, days: gint, hours: gint, minutes: gint, seconds: gdouble): CPointer<GDateTime>?

@CCall("knifunptr_glibjson391_g_date_time_compare")
external fun g_date_time_compare(dt1: gconstpointer?, dt2: gconstpointer?): gint

@CCall("knifunptr_glibjson392_g_date_time_difference")
external fun g_date_time_difference(end: CValuesRef<GDateTime>?, begin: CValuesRef<GDateTime>?): GTimeSpan

@CCall("knifunptr_glibjson393_g_date_time_hash")
external fun g_date_time_hash(datetime: gconstpointer?): guint

@CCall("knifunptr_glibjson394_g_date_time_equal")
external fun g_date_time_equal(dt1: gconstpointer?, dt2: gconstpointer?): gboolean

@CCall("knifunptr_glibjson395_g_date_time_get_ymd")
external fun g_date_time_get_ymd(datetime: CValuesRef<GDateTime>?, year: CValuesRef<gintVar>?, month: CValuesRef<gintVar>?, day: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_glibjson396_g_date_time_get_year")
external fun g_date_time_get_year(datetime: CValuesRef<GDateTime>?): gint

@CCall("knifunptr_glibjson397_g_date_time_get_month")
external fun g_date_time_get_month(datetime: CValuesRef<GDateTime>?): gint

@CCall("knifunptr_glibjson398_g_date_time_get_day_of_month")
external fun g_date_time_get_day_of_month(datetime: CValuesRef<GDateTime>?): gint

@CCall("knifunptr_glibjson399_g_date_time_get_week_numbering_year")
external fun g_date_time_get_week_numbering_year(datetime: CValuesRef<GDateTime>?): gint

@CCall("knifunptr_glibjson400_g_date_time_get_week_of_year")
external fun g_date_time_get_week_of_year(datetime: CValuesRef<GDateTime>?): gint

@CCall("knifunptr_glibjson401_g_date_time_get_day_of_week")
external fun g_date_time_get_day_of_week(datetime: CValuesRef<GDateTime>?): gint

@CCall("knifunptr_glibjson402_g_date_time_get_day_of_year")
external fun g_date_time_get_day_of_year(datetime: CValuesRef<GDateTime>?): gint

@CCall("knifunptr_glibjson403_g_date_time_get_hour")
external fun g_date_time_get_hour(datetime: CValuesRef<GDateTime>?): gint

@CCall("knifunptr_glibjson404_g_date_time_get_minute")
external fun g_date_time_get_minute(datetime: CValuesRef<GDateTime>?): gint

@CCall("knifunptr_glibjson405_g_date_time_get_second")
external fun g_date_time_get_second(datetime: CValuesRef<GDateTime>?): gint

@CCall("knifunptr_glibjson406_g_date_time_get_microsecond")
external fun g_date_time_get_microsecond(datetime: CValuesRef<GDateTime>?): gint

@CCall("knifunptr_glibjson407_g_date_time_get_seconds")
external fun g_date_time_get_seconds(datetime: CValuesRef<GDateTime>?): gdouble

@CCall("knifunptr_glibjson408_g_date_time_to_unix")
external fun g_date_time_to_unix(datetime: CValuesRef<GDateTime>?): gint64

@CCall("knifunptr_glibjson409_g_date_time_to_timeval")
external fun g_date_time_to_timeval(datetime: CValuesRef<GDateTime>?, tv: CValuesRef<GTimeVal>?): gboolean

@CCall("knifunptr_glibjson410_g_date_time_get_utc_offset")
external fun g_date_time_get_utc_offset(datetime: CValuesRef<GDateTime>?): GTimeSpan

@CCall("knifunptr_glibjson411_g_date_time_get_timezone_abbreviation")
external fun g_date_time_get_timezone_abbreviation(datetime: CValuesRef<GDateTime>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson412_g_date_time_is_daylight_savings")
external fun g_date_time_is_daylight_savings(datetime: CValuesRef<GDateTime>?): gboolean

@CCall("knifunptr_glibjson413_g_date_time_to_timezone")
external fun g_date_time_to_timezone(datetime: CValuesRef<GDateTime>?, tz: CValuesRef<GTimeZone>?): CPointer<GDateTime>?

@CCall("knifunptr_glibjson414_g_date_time_to_local")
external fun g_date_time_to_local(datetime: CValuesRef<GDateTime>?): CPointer<GDateTime>?

@CCall("knifunptr_glibjson415_g_date_time_to_utc")
external fun g_date_time_to_utc(datetime: CValuesRef<GDateTime>?): CPointer<GDateTime>?

@CCall("knifunptr_glibjson416_g_date_time_format")
external fun g_date_time_format(datetime: CValuesRef<GDateTime>?, @CCall.CString format: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson417_g_dir_open")
external fun g_dir_open(@CCall.CString path: String?, flags: guint, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDir>?

@CCall("knifunptr_glibjson418_g_dir_read_name")
external fun g_dir_read_name(dir: CValuesRef<GDir>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson419_g_dir_rewind")
external fun g_dir_rewind(dir: CValuesRef<GDir>?): Unit

@CCall("knifunptr_glibjson420_g_dir_close")
external fun g_dir_close(dir: CValuesRef<GDir>?): Unit

@CCall("knifunptr_glibjson421_g_getenv")
external fun g_getenv(@CCall.CString variable: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson422_g_setenv")
external fun g_setenv(@CCall.CString variable: String?, @CCall.CString value: String?, overwrite: gboolean): gboolean

@CCall("knifunptr_glibjson423_g_unsetenv")
external fun g_unsetenv(@CCall.CString variable: String?): Unit

@CCall("knifunptr_glibjson424_g_listenv")
external fun g_listenv(): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson425_g_get_environ")
external fun g_get_environ(): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson426_g_environ_getenv")
external fun g_environ_getenv(envp: CValuesRef<CPointerVar<gcharVar>>?, @CCall.CString variable: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson427_g_environ_setenv")
external fun g_environ_setenv(envp: CValuesRef<CPointerVar<gcharVar>>?, @CCall.CString variable: String?, @CCall.CString value: String?, overwrite: gboolean): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson428_g_environ_unsetenv")
external fun g_environ_unsetenv(envp: CValuesRef<CPointerVar<gcharVar>>?, @CCall.CString variable: String?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson429_g_file_error_quark")
external fun g_file_error_quark(): GQuark

@CCall("knifunptr_glibjson430_g_file_error_from_errno")
external fun g_file_error_from_errno(err_no: gint): GFileError

@CCall("knifunptr_glibjson431_g_file_test")
external fun g_file_test(@CCall.CString filename: String?, test: GFileTest): gboolean

@CCall("knifunptr_glibjson432_g_file_get_contents")
external fun g_file_get_contents(@CCall.CString filename: String?, contents: CValuesRef<CPointerVar<gcharVar>>?, length: CValuesRef<gsizeVar>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson433_g_file_set_contents")
external fun g_file_set_contents(@CCall.CString filename: String?, @CCall.CString contents: String?, length: gssize, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson434_g_file_read_link")
external fun g_file_read_link(@CCall.CString filename: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson435_g_mkdtemp")
external fun g_mkdtemp(tmpl: CValuesRef<gcharVar>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson436_g_mkdtemp_full")
external fun g_mkdtemp_full(tmpl: CValuesRef<gcharVar>?, mode: gint): CPointer<gcharVar>?

@CCall("knifunptr_glibjson437_g_mkstemp")
external fun g_mkstemp(tmpl: CValuesRef<gcharVar>?): gint

@CCall("knifunptr_glibjson438_g_mkstemp_full")
external fun g_mkstemp_full(tmpl: CValuesRef<gcharVar>?, flags: gint, mode: gint): gint

@CCall("knifunptr_glibjson439_g_file_open_tmp")
external fun g_file_open_tmp(@CCall.CString tmpl: String?, name_used: CValuesRef<CPointerVar<gcharVar>>?, error: CValuesRef<CPointerVar<GError>>?): gint

@CCall("knifunptr_glibjson440_g_dir_make_tmp")
external fun g_dir_make_tmp(@CCall.CString tmpl: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson441_g_build_path")
external fun g_build_path(@CCall.CString separator: String?, @CCall.CString first_element: String?, vararg variadicArguments: Any?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson442_g_build_pathv")
external fun g_build_pathv(@CCall.CString separator: String?, args: CValuesRef<CPointerVar<gcharVar>>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson443_g_build_filename")
external fun g_build_filename(@CCall.CString first_element: String?, vararg variadicArguments: Any?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson444_g_build_filenamev")
external fun g_build_filenamev(args: CValuesRef<CPointerVar<gcharVar>>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson445_g_build_filename_valist")
external fun g_build_filename_valist(@CCall.CString first_element: String?, args: va_list?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson446_g_mkdir_with_parents")
external fun g_mkdir_with_parents(@CCall.CString pathname: String?, mode: gint): gint

@CCall("knifunptr_glibjson447_g_path_is_absolute")
external fun g_path_is_absolute(@CCall.CString file_name: String?): gboolean

@CCall("knifunptr_glibjson448_g_path_skip_root")
external fun g_path_skip_root(@CCall.CString file_name: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson449_g_basename")
external fun g_basename(@CCall.CString file_name: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson450_g_get_current_dir")
external fun g_get_current_dir(): CPointer<gcharVar>?

@CCall("knifunptr_glibjson451_g_path_get_basename")
external fun g_path_get_basename(@CCall.CString file_name: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson452_g_path_get_dirname")
external fun g_path_get_dirname(@CCall.CString file_name: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson453_g_strip_context")
external fun g_strip_context(@CCall.CString msgid: String?, @CCall.CString msgval: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson454_g_dgettext")
external fun g_dgettext(@CCall.CString domain: String?, @CCall.CString msgid: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson455_g_dcgettext")
external fun g_dcgettext(@CCall.CString domain: String?, @CCall.CString msgid: String?, category: gint): CPointer<gcharVar>?

@CCall("knifunptr_glibjson456_g_dngettext")
external fun g_dngettext(@CCall.CString domain: String?, @CCall.CString msgid: String?, @CCall.CString msgid_plural: String?, n: gulong): CPointer<gcharVar>?

@CCall("knifunptr_glibjson457_g_dpgettext")
external fun g_dpgettext(@CCall.CString domain: String?, @CCall.CString msgctxtid: String?, msgidoffset: gsize): CPointer<gcharVar>?

@CCall("knifunptr_glibjson458_g_dpgettext2")
external fun g_dpgettext2(@CCall.CString domain: String?, @CCall.CString context: String?, @CCall.CString msgid: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson459_g_free")
external fun g_free(mem: gpointer?): Unit

@Deprecated("Unable to import this declaration", level = DeprecationLevel.ERROR)
fun g_clear_pointer(pp: CValuesRef<gpointerVar>?, destroy: GDestroyNotify?): Unit = throw UnsupportedOperationException()

@CCall("knifunptr_glibjson461_g_malloc")
external fun g_malloc(n_bytes: gsize): gpointer?

@CCall("knifunptr_glibjson462_g_malloc0")
external fun g_malloc0(n_bytes: gsize): gpointer?

@CCall("knifunptr_glibjson463_g_realloc")
external fun g_realloc(mem: gpointer?, n_bytes: gsize): gpointer?

@CCall("knifunptr_glibjson464_g_try_malloc")
external fun g_try_malloc(n_bytes: gsize): gpointer?

@CCall("knifunptr_glibjson465_g_try_malloc0")
external fun g_try_malloc0(n_bytes: gsize): gpointer?

@CCall("knifunptr_glibjson466_g_try_realloc")
external fun g_try_realloc(mem: gpointer?, n_bytes: gsize): gpointer?

@CCall("knifunptr_glibjson467_g_malloc_n")
external fun g_malloc_n(n_blocks: gsize, n_block_bytes: gsize): gpointer?

@CCall("knifunptr_glibjson468_g_malloc0_n")
external fun g_malloc0_n(n_blocks: gsize, n_block_bytes: gsize): gpointer?

@CCall("knifunptr_glibjson469_g_realloc_n")
external fun g_realloc_n(mem: gpointer?, n_blocks: gsize, n_block_bytes: gsize): gpointer?

@CCall("knifunptr_glibjson470_g_try_malloc_n")
external fun g_try_malloc_n(n_blocks: gsize, n_block_bytes: gsize): gpointer?

@CCall("knifunptr_glibjson471_g_try_malloc0_n")
external fun g_try_malloc0_n(n_blocks: gsize, n_block_bytes: gsize): gpointer?

@CCall("knifunptr_glibjson472_g_try_realloc_n")
external fun g_try_realloc_n(mem: gpointer?, n_blocks: gsize, n_block_bytes: gsize): gpointer?

@Deprecated("Unable to import this declaration", level = DeprecationLevel.ERROR)
fun g_steal_pointer(pp: gpointer?): gpointer? = throw UnsupportedOperationException()

@CCall("knifunptr_glibjson474_g_mem_set_vtable")
external fun g_mem_set_vtable(vtable: CValuesRef<GMemVTable>?): Unit

@CCall("knifunptr_glibjson475_g_mem_is_system_malloc")
external fun g_mem_is_system_malloc(): gboolean

@CCall("knifunptr_glibjson476_g_mem_profile")
external fun g_mem_profile(): Unit

@CCall("knifunptr_glibjson477_g_node_new")
external fun g_node_new(data: gpointer?): CPointer<GNode>?

@CCall("knifunptr_glibjson478_g_node_destroy")
external fun g_node_destroy(root: CValuesRef<GNode>?): Unit

@CCall("knifunptr_glibjson479_g_node_unlink")
external fun g_node_unlink(node: CValuesRef<GNode>?): Unit

@CCall("knifunptr_glibjson480_g_node_copy_deep")
external fun g_node_copy_deep(node: CValuesRef<GNode>?, copy_func: GCopyFunc?, data: gpointer?): CPointer<GNode>?

@CCall("knifunptr_glibjson481_g_node_copy")
external fun g_node_copy(node: CValuesRef<GNode>?): CPointer<GNode>?

@CCall("knifunptr_glibjson482_g_node_insert")
external fun g_node_insert(parent: CValuesRef<GNode>?, position: gint, node: CValuesRef<GNode>?): CPointer<GNode>?

@CCall("knifunptr_glibjson483_g_node_insert_before")
external fun g_node_insert_before(parent: CValuesRef<GNode>?, sibling: CValuesRef<GNode>?, node: CValuesRef<GNode>?): CPointer<GNode>?

@CCall("knifunptr_glibjson484_g_node_insert_after")
external fun g_node_insert_after(parent: CValuesRef<GNode>?, sibling: CValuesRef<GNode>?, node: CValuesRef<GNode>?): CPointer<GNode>?

@CCall("knifunptr_glibjson485_g_node_prepend")
external fun g_node_prepend(parent: CValuesRef<GNode>?, node: CValuesRef<GNode>?): CPointer<GNode>?

@CCall("knifunptr_glibjson486_g_node_n_nodes")
external fun g_node_n_nodes(root: CValuesRef<GNode>?, flags: GTraverseFlags): guint

@CCall("knifunptr_glibjson487_g_node_get_root")
external fun g_node_get_root(node: CValuesRef<GNode>?): CPointer<GNode>?

@CCall("knifunptr_glibjson488_g_node_is_ancestor")
external fun g_node_is_ancestor(node: CValuesRef<GNode>?, descendant: CValuesRef<GNode>?): gboolean

@CCall("knifunptr_glibjson489_g_node_depth")
external fun g_node_depth(node: CValuesRef<GNode>?): guint

@CCall("knifunptr_glibjson490_g_node_find")
external fun g_node_find(root: CValuesRef<GNode>?, order: GTraverseType, flags: GTraverseFlags, data: gpointer?): CPointer<GNode>?

@CCall("knifunptr_glibjson491_g_node_traverse")
external fun g_node_traverse(root: CValuesRef<GNode>?, order: GTraverseType, flags: GTraverseFlags, max_depth: gint, func: GNodeTraverseFunc?, data: gpointer?): Unit

@CCall("knifunptr_glibjson492_g_node_max_height")
external fun g_node_max_height(root: CValuesRef<GNode>?): guint

@CCall("knifunptr_glibjson493_g_node_children_foreach")
external fun g_node_children_foreach(node: CValuesRef<GNode>?, flags: GTraverseFlags, func: GNodeForeachFunc?, data: gpointer?): Unit

@CCall("knifunptr_glibjson494_g_node_reverse_children")
external fun g_node_reverse_children(node: CValuesRef<GNode>?): Unit

@CCall("knifunptr_glibjson495_g_node_n_children")
external fun g_node_n_children(node: CValuesRef<GNode>?): guint

@CCall("knifunptr_glibjson496_g_node_nth_child")
external fun g_node_nth_child(node: CValuesRef<GNode>?, n: guint): CPointer<GNode>?

@CCall("knifunptr_glibjson497_g_node_last_child")
external fun g_node_last_child(node: CValuesRef<GNode>?): CPointer<GNode>?

@CCall("knifunptr_glibjson498_g_node_find_child")
external fun g_node_find_child(node: CValuesRef<GNode>?, flags: GTraverseFlags, data: gpointer?): CPointer<GNode>?

@CCall("knifunptr_glibjson499_g_node_child_position")
external fun g_node_child_position(node: CValuesRef<GNode>?, child: CValuesRef<GNode>?): gint

@CCall("knifunptr_glibjson500_g_node_child_index")
external fun g_node_child_index(node: CValuesRef<GNode>?, data: gpointer?): gint

@CCall("knifunptr_glibjson501_g_node_first_sibling")
external fun g_node_first_sibling(node: CValuesRef<GNode>?): CPointer<GNode>?

@CCall("knifunptr_glibjson502_g_node_last_sibling")
external fun g_node_last_sibling(node: CValuesRef<GNode>?): CPointer<GNode>?

@CCall("knifunptr_glibjson503_g_list_alloc")
external fun g_list_alloc(): CPointer<GList>?

@CCall("knifunptr_glibjson504_g_list_free")
external fun g_list_free(list: CValuesRef<GList>?): Unit

@CCall("knifunptr_glibjson505_g_list_free_1")
external fun g_list_free_1(list: CValuesRef<GList>?): Unit

@CCall("knifunptr_glibjson506_g_list_free_full")
external fun g_list_free_full(list: CValuesRef<GList>?, free_func: GDestroyNotify?): Unit

@CCall("knifunptr_glibjson507_g_list_append")
external fun g_list_append(list: CValuesRef<GList>?, data: gpointer?): CPointer<GList>?

@CCall("knifunptr_glibjson508_g_list_prepend")
external fun g_list_prepend(list: CValuesRef<GList>?, data: gpointer?): CPointer<GList>?

@CCall("knifunptr_glibjson509_g_list_insert")
external fun g_list_insert(list: CValuesRef<GList>?, data: gpointer?, position: gint): CPointer<GList>?

@CCall("knifunptr_glibjson510_g_list_insert_sorted")
external fun g_list_insert_sorted(list: CValuesRef<GList>?, data: gpointer?, func: GCompareFunc?): CPointer<GList>?

@CCall("knifunptr_glibjson511_g_list_insert_sorted_with_data")
external fun g_list_insert_sorted_with_data(list: CValuesRef<GList>?, data: gpointer?, func: GCompareDataFunc?, user_data: gpointer?): CPointer<GList>?

@CCall("knifunptr_glibjson512_g_list_insert_before")
external fun g_list_insert_before(list: CValuesRef<GList>?, sibling: CValuesRef<GList>?, data: gpointer?): CPointer<GList>?

@CCall("knifunptr_glibjson513_g_list_concat")
external fun g_list_concat(list1: CValuesRef<GList>?, list2: CValuesRef<GList>?): CPointer<GList>?

@CCall("knifunptr_glibjson514_g_list_remove")
external fun g_list_remove(list: CValuesRef<GList>?, data: gconstpointer?): CPointer<GList>?

@CCall("knifunptr_glibjson515_g_list_remove_all")
external fun g_list_remove_all(list: CValuesRef<GList>?, data: gconstpointer?): CPointer<GList>?

@CCall("knifunptr_glibjson516_g_list_remove_link")
external fun g_list_remove_link(list: CValuesRef<GList>?, llink: CValuesRef<GList>?): CPointer<GList>?

@CCall("knifunptr_glibjson517_g_list_delete_link")
external fun g_list_delete_link(list: CValuesRef<GList>?, link_: CValuesRef<GList>?): CPointer<GList>?

@CCall("knifunptr_glibjson518_g_list_reverse")
external fun g_list_reverse(list: CValuesRef<GList>?): CPointer<GList>?

@CCall("knifunptr_glibjson519_g_list_copy")
external fun g_list_copy(list: CValuesRef<GList>?): CPointer<GList>?

@CCall("knifunptr_glibjson520_g_list_copy_deep")
external fun g_list_copy_deep(list: CValuesRef<GList>?, func: GCopyFunc?, user_data: gpointer?): CPointer<GList>?

@CCall("knifunptr_glibjson521_g_list_nth")
external fun g_list_nth(list: CValuesRef<GList>?, n: guint): CPointer<GList>?

@CCall("knifunptr_glibjson522_g_list_nth_prev")
external fun g_list_nth_prev(list: CValuesRef<GList>?, n: guint): CPointer<GList>?

@CCall("knifunptr_glibjson523_g_list_find")
external fun g_list_find(list: CValuesRef<GList>?, data: gconstpointer?): CPointer<GList>?

@CCall("knifunptr_glibjson524_g_list_find_custom")
external fun g_list_find_custom(list: CValuesRef<GList>?, data: gconstpointer?, func: GCompareFunc?): CPointer<GList>?

@CCall("knifunptr_glibjson525_g_list_position")
external fun g_list_position(list: CValuesRef<GList>?, llink: CValuesRef<GList>?): gint

@CCall("knifunptr_glibjson526_g_list_index")
external fun g_list_index(list: CValuesRef<GList>?, data: gconstpointer?): gint

@CCall("knifunptr_glibjson527_g_list_last")
external fun g_list_last(list: CValuesRef<GList>?): CPointer<GList>?

@CCall("knifunptr_glibjson528_g_list_first")
external fun g_list_first(list: CValuesRef<GList>?): CPointer<GList>?

@CCall("knifunptr_glibjson529_g_list_length")
external fun g_list_length(list: CValuesRef<GList>?): guint

@CCall("knifunptr_glibjson530_g_list_foreach")
external fun g_list_foreach(list: CValuesRef<GList>?, func: GFunc?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson531_g_list_sort")
external fun g_list_sort(list: CValuesRef<GList>?, compare_func: GCompareFunc?): CPointer<GList>?

@CCall("knifunptr_glibjson532_g_list_sort_with_data")
external fun g_list_sort_with_data(list: CValuesRef<GList>?, compare_func: GCompareDataFunc?, user_data: gpointer?): CPointer<GList>?

@CCall("knifunptr_glibjson533_g_list_nth_data")
external fun g_list_nth_data(list: CValuesRef<GList>?, n: guint): gpointer?

@CCall("knifunptr_glibjson534_g_hash_table_new")
external fun g_hash_table_new(hash_func: GHashFunc?, key_equal_func: GEqualFunc?): CPointer<GHashTable>?

@CCall("knifunptr_glibjson535_g_hash_table_new_full")
external fun g_hash_table_new_full(hash_func: GHashFunc?, key_equal_func: GEqualFunc?, key_destroy_func: GDestroyNotify?, value_destroy_func: GDestroyNotify?): CPointer<GHashTable>?

@CCall("knifunptr_glibjson536_g_hash_table_destroy")
external fun g_hash_table_destroy(hash_table: CValuesRef<GHashTable>?): Unit

@CCall("knifunptr_glibjson537_g_hash_table_insert")
external fun g_hash_table_insert(hash_table: CValuesRef<GHashTable>?, key: gpointer?, value: gpointer?): gboolean

@CCall("knifunptr_glibjson538_g_hash_table_replace")
external fun g_hash_table_replace(hash_table: CValuesRef<GHashTable>?, key: gpointer?, value: gpointer?): gboolean

@CCall("knifunptr_glibjson539_g_hash_table_add")
external fun g_hash_table_add(hash_table: CValuesRef<GHashTable>?, key: gpointer?): gboolean

@CCall("knifunptr_glibjson540_g_hash_table_remove")
external fun g_hash_table_remove(hash_table: CValuesRef<GHashTable>?, key: gconstpointer?): gboolean

@CCall("knifunptr_glibjson541_g_hash_table_remove_all")
external fun g_hash_table_remove_all(hash_table: CValuesRef<GHashTable>?): Unit

@CCall("knifunptr_glibjson542_g_hash_table_steal")
external fun g_hash_table_steal(hash_table: CValuesRef<GHashTable>?, key: gconstpointer?): gboolean

@CCall("knifunptr_glibjson543_g_hash_table_steal_all")
external fun g_hash_table_steal_all(hash_table: CValuesRef<GHashTable>?): Unit

@CCall("knifunptr_glibjson544_g_hash_table_lookup")
external fun g_hash_table_lookup(hash_table: CValuesRef<GHashTable>?, key: gconstpointer?): gpointer?

@CCall("knifunptr_glibjson545_g_hash_table_contains")
external fun g_hash_table_contains(hash_table: CValuesRef<GHashTable>?, key: gconstpointer?): gboolean

@CCall("knifunptr_glibjson546_g_hash_table_lookup_extended")
external fun g_hash_table_lookup_extended(hash_table: CValuesRef<GHashTable>?, lookup_key: gconstpointer?, orig_key: CValuesRef<gpointerVar>?, value: CValuesRef<gpointerVar>?): gboolean

@CCall("knifunptr_glibjson547_g_hash_table_foreach")
external fun g_hash_table_foreach(hash_table: CValuesRef<GHashTable>?, func: GHFunc?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson548_g_hash_table_find")
external fun g_hash_table_find(hash_table: CValuesRef<GHashTable>?, predicate: GHRFunc?, user_data: gpointer?): gpointer?

@CCall("knifunptr_glibjson549_g_hash_table_foreach_remove")
external fun g_hash_table_foreach_remove(hash_table: CValuesRef<GHashTable>?, func: GHRFunc?, user_data: gpointer?): guint

@CCall("knifunptr_glibjson550_g_hash_table_foreach_steal")
external fun g_hash_table_foreach_steal(hash_table: CValuesRef<GHashTable>?, func: GHRFunc?, user_data: gpointer?): guint

@CCall("knifunptr_glibjson551_g_hash_table_size")
external fun g_hash_table_size(hash_table: CValuesRef<GHashTable>?): guint

@CCall("knifunptr_glibjson552_g_hash_table_get_keys")
external fun g_hash_table_get_keys(hash_table: CValuesRef<GHashTable>?): CPointer<GList>?

@CCall("knifunptr_glibjson553_g_hash_table_get_values")
external fun g_hash_table_get_values(hash_table: CValuesRef<GHashTable>?): CPointer<GList>?

@CCall("knifunptr_glibjson554_g_hash_table_get_keys_as_array")
external fun g_hash_table_get_keys_as_array(hash_table: CValuesRef<GHashTable>?, length: CValuesRef<guintVar>?): CPointer<gpointerVar>?

@CCall("knifunptr_glibjson555_g_hash_table_iter_init")
external fun g_hash_table_iter_init(iter: CValuesRef<GHashTableIter>?, hash_table: CValuesRef<GHashTable>?): Unit

@CCall("knifunptr_glibjson556_g_hash_table_iter_next")
external fun g_hash_table_iter_next(iter: CValuesRef<GHashTableIter>?, key: CValuesRef<gpointerVar>?, value: CValuesRef<gpointerVar>?): gboolean

@CCall("knifunptr_glibjson557_g_hash_table_iter_get_hash_table")
external fun g_hash_table_iter_get_hash_table(iter: CValuesRef<GHashTableIter>?): CPointer<GHashTable>?

@CCall("knifunptr_glibjson558_g_hash_table_iter_remove")
external fun g_hash_table_iter_remove(iter: CValuesRef<GHashTableIter>?): Unit

@CCall("knifunptr_glibjson559_g_hash_table_iter_replace")
external fun g_hash_table_iter_replace(iter: CValuesRef<GHashTableIter>?, value: gpointer?): Unit

@CCall("knifunptr_glibjson560_g_hash_table_iter_steal")
external fun g_hash_table_iter_steal(iter: CValuesRef<GHashTableIter>?): Unit

@CCall("knifunptr_glibjson561_g_hash_table_ref")
external fun g_hash_table_ref(hash_table: CValuesRef<GHashTable>?): CPointer<GHashTable>?

@CCall("knifunptr_glibjson562_g_hash_table_unref")
external fun g_hash_table_unref(hash_table: CValuesRef<GHashTable>?): Unit

@CCall("knifunptr_glibjson563_g_str_equal")
external fun g_str_equal(v1: gconstpointer?, v2: gconstpointer?): gboolean

@CCall("knifunptr_glibjson564_g_str_hash")
external fun g_str_hash(v: gconstpointer?): guint

@CCall("knifunptr_glibjson565_g_int_equal")
external fun g_int_equal(v1: gconstpointer?, v2: gconstpointer?): gboolean

@CCall("knifunptr_glibjson566_g_int_hash")
external fun g_int_hash(v: gconstpointer?): guint

@CCall("knifunptr_glibjson567_g_int64_equal")
external fun g_int64_equal(v1: gconstpointer?, v2: gconstpointer?): gboolean

@CCall("knifunptr_glibjson568_g_int64_hash")
external fun g_int64_hash(v: gconstpointer?): guint

@CCall("knifunptr_glibjson569_g_double_equal")
external fun g_double_equal(v1: gconstpointer?, v2: gconstpointer?): gboolean

@CCall("knifunptr_glibjson570_g_double_hash")
external fun g_double_hash(v: gconstpointer?): guint

@CCall("knifunptr_glibjson571_g_direct_hash")
external fun g_direct_hash(v: gconstpointer?): guint

@CCall("knifunptr_glibjson572_g_direct_equal")
external fun g_direct_equal(v1: gconstpointer?, v2: gconstpointer?): gboolean

@CCall("knifunptr_glibjson573_g_hmac_new")
external fun g_hmac_new(digest_type: GChecksumType, key: CValuesRef<gucharVar>?, key_len: gsize): CPointer<GHmac>?

@CCall("knifunptr_glibjson574_g_hmac_copy")
external fun g_hmac_copy(hmac: CValuesRef<GHmac>?): CPointer<GHmac>?

@CCall("knifunptr_glibjson575_g_hmac_ref")
external fun g_hmac_ref(hmac: CValuesRef<GHmac>?): CPointer<GHmac>?

@CCall("knifunptr_glibjson576_g_hmac_unref")
external fun g_hmac_unref(hmac: CValuesRef<GHmac>?): Unit

@CCall("knifunptr_glibjson577_g_hmac_update")
external fun g_hmac_update(hmac: CValuesRef<GHmac>?, data: CValuesRef<gucharVar>?, length: gssize): Unit

@CCall("knifunptr_glibjson578_g_hmac_get_string")
external fun g_hmac_get_string(hmac: CValuesRef<GHmac>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson579_g_hmac_get_digest")
external fun g_hmac_get_digest(hmac: CValuesRef<GHmac>?, buffer: CValuesRef<guint8Var>?, digest_len: CValuesRef<gsizeVar>?): Unit

@CCall("knifunptr_glibjson580_g_compute_hmac_for_data")
external fun g_compute_hmac_for_data(digest_type: GChecksumType, key: CValuesRef<gucharVar>?, key_len: gsize, data: CValuesRef<gucharVar>?, length: gsize): CPointer<gcharVar>?

@CCall("knifunptr_glibjson581_g_compute_hmac_for_string")
external fun g_compute_hmac_for_string(digest_type: GChecksumType, key: CValuesRef<gucharVar>?, key_len: gsize, @CCall.CString str: String?, length: gssize): CPointer<gcharVar>?

@CCall("knifunptr_glibjson582_g_compute_hmac_for_bytes")
external fun g_compute_hmac_for_bytes(digest_type: GChecksumType, key: CValuesRef<GBytes>?, data: CValuesRef<GBytes>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson583_g_hook_list_init")
external fun g_hook_list_init(hook_list: CValuesRef<GHookList>?, hook_size: guint): Unit

@CCall("knifunptr_glibjson584_g_hook_list_clear")
external fun g_hook_list_clear(hook_list: CValuesRef<GHookList>?): Unit

@CCall("knifunptr_glibjson585_g_hook_alloc")
external fun g_hook_alloc(hook_list: CValuesRef<GHookList>?): CPointer<GHook>?

@CCall("knifunptr_glibjson586_g_hook_free")
external fun g_hook_free(hook_list: CValuesRef<GHookList>?, hook: CValuesRef<GHook>?): Unit

@CCall("knifunptr_glibjson587_g_hook_ref")
external fun g_hook_ref(hook_list: CValuesRef<GHookList>?, hook: CValuesRef<GHook>?): CPointer<GHook>?

@CCall("knifunptr_glibjson588_g_hook_unref")
external fun g_hook_unref(hook_list: CValuesRef<GHookList>?, hook: CValuesRef<GHook>?): Unit

@CCall("knifunptr_glibjson589_g_hook_destroy")
external fun g_hook_destroy(hook_list: CValuesRef<GHookList>?, hook_id: gulong): gboolean

@CCall("knifunptr_glibjson590_g_hook_destroy_link")
external fun g_hook_destroy_link(hook_list: CValuesRef<GHookList>?, hook: CValuesRef<GHook>?): Unit

@CCall("knifunptr_glibjson591_g_hook_prepend")
external fun g_hook_prepend(hook_list: CValuesRef<GHookList>?, hook: CValuesRef<GHook>?): Unit

@CCall("knifunptr_glibjson592_g_hook_insert_before")
external fun g_hook_insert_before(hook_list: CValuesRef<GHookList>?, sibling: CValuesRef<GHook>?, hook: CValuesRef<GHook>?): Unit

@CCall("knifunptr_glibjson593_g_hook_insert_sorted")
external fun g_hook_insert_sorted(hook_list: CValuesRef<GHookList>?, hook: CValuesRef<GHook>?, func: GHookCompareFunc?): Unit

@CCall("knifunptr_glibjson594_g_hook_get")
external fun g_hook_get(hook_list: CValuesRef<GHookList>?, hook_id: gulong): CPointer<GHook>?

@CCall("knifunptr_glibjson595_g_hook_find")
external fun g_hook_find(hook_list: CValuesRef<GHookList>?, need_valids: gboolean, func: GHookFindFunc?, data: gpointer?): CPointer<GHook>?

@CCall("knifunptr_glibjson596_g_hook_find_data")
external fun g_hook_find_data(hook_list: CValuesRef<GHookList>?, need_valids: gboolean, data: gpointer?): CPointer<GHook>?

@CCall("knifunptr_glibjson597_g_hook_find_func")
external fun g_hook_find_func(hook_list: CValuesRef<GHookList>?, need_valids: gboolean, func: gpointer?): CPointer<GHook>?

@CCall("knifunptr_glibjson598_g_hook_find_func_data")
external fun g_hook_find_func_data(hook_list: CValuesRef<GHookList>?, need_valids: gboolean, func: gpointer?, data: gpointer?): CPointer<GHook>?

@CCall("knifunptr_glibjson599_g_hook_first_valid")
external fun g_hook_first_valid(hook_list: CValuesRef<GHookList>?, may_be_in_call: gboolean): CPointer<GHook>?

@CCall("knifunptr_glibjson600_g_hook_next_valid")
external fun g_hook_next_valid(hook_list: CValuesRef<GHookList>?, hook: CValuesRef<GHook>?, may_be_in_call: gboolean): CPointer<GHook>?

@CCall("knifunptr_glibjson601_g_hook_compare_ids")
external fun g_hook_compare_ids(new_hook: CValuesRef<GHook>?, sibling: CValuesRef<GHook>?): gint

@CCall("knifunptr_glibjson602_g_hook_list_invoke")
external fun g_hook_list_invoke(hook_list: CValuesRef<GHookList>?, may_recurse: gboolean): Unit

@CCall("knifunptr_glibjson603_g_hook_list_invoke_check")
external fun g_hook_list_invoke_check(hook_list: CValuesRef<GHookList>?, may_recurse: gboolean): Unit

@CCall("knifunptr_glibjson604_g_hook_list_marshal")
external fun g_hook_list_marshal(hook_list: CValuesRef<GHookList>?, may_recurse: gboolean, marshaller: GHookMarshaller?, marshal_data: gpointer?): Unit

@CCall("knifunptr_glibjson605_g_hook_list_marshal_check")
external fun g_hook_list_marshal_check(hook_list: CValuesRef<GHookList>?, may_recurse: gboolean, marshaller: GHookCheckMarshaller?, marshal_data: gpointer?): Unit

@CCall("knifunptr_glibjson606_g_hostname_is_non_ascii")
external fun g_hostname_is_non_ascii(@CCall.CString hostname: String?): gboolean

@CCall("knifunptr_glibjson607_g_hostname_is_ascii_encoded")
external fun g_hostname_is_ascii_encoded(@CCall.CString hostname: String?): gboolean

@CCall("knifunptr_glibjson608_g_hostname_is_ip_address")
external fun g_hostname_is_ip_address(@CCall.CString hostname: String?): gboolean

@CCall("knifunptr_glibjson609_g_hostname_to_ascii")
external fun g_hostname_to_ascii(@CCall.CString hostname: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson610_g_hostname_to_unicode")
external fun g_hostname_to_unicode(@CCall.CString hostname: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson611_g_poll")
external fun g_poll(fds: CValuesRef<GPollFD>?, nfds: guint, timeout: gint): gint

@CCall("knifunptr_glibjson612_g_slist_alloc")
external fun g_slist_alloc(): CPointer<GSList>?

@CCall("knifunptr_glibjson613_g_slist_free")
external fun g_slist_free(list: CValuesRef<GSList>?): Unit

@CCall("knifunptr_glibjson614_g_slist_free_1")
external fun g_slist_free_1(list: CValuesRef<GSList>?): Unit

@CCall("knifunptr_glibjson615_g_slist_free_full")
external fun g_slist_free_full(list: CValuesRef<GSList>?, free_func: GDestroyNotify?): Unit

@CCall("knifunptr_glibjson616_g_slist_append")
external fun g_slist_append(list: CValuesRef<GSList>?, data: gpointer?): CPointer<GSList>?

@CCall("knifunptr_glibjson617_g_slist_prepend")
external fun g_slist_prepend(list: CValuesRef<GSList>?, data: gpointer?): CPointer<GSList>?

@CCall("knifunptr_glibjson618_g_slist_insert")
external fun g_slist_insert(list: CValuesRef<GSList>?, data: gpointer?, position: gint): CPointer<GSList>?

@CCall("knifunptr_glibjson619_g_slist_insert_sorted")
external fun g_slist_insert_sorted(list: CValuesRef<GSList>?, data: gpointer?, func: GCompareFunc?): CPointer<GSList>?

@CCall("knifunptr_glibjson620_g_slist_insert_sorted_with_data")
external fun g_slist_insert_sorted_with_data(list: CValuesRef<GSList>?, data: gpointer?, func: GCompareDataFunc?, user_data: gpointer?): CPointer<GSList>?

@CCall("knifunptr_glibjson621_g_slist_insert_before")
external fun g_slist_insert_before(slist: CValuesRef<GSList>?, sibling: CValuesRef<GSList>?, data: gpointer?): CPointer<GSList>?

@CCall("knifunptr_glibjson622_g_slist_concat")
external fun g_slist_concat(list1: CValuesRef<GSList>?, list2: CValuesRef<GSList>?): CPointer<GSList>?

@CCall("knifunptr_glibjson623_g_slist_remove")
external fun g_slist_remove(list: CValuesRef<GSList>?, data: gconstpointer?): CPointer<GSList>?

@CCall("knifunptr_glibjson624_g_slist_remove_all")
external fun g_slist_remove_all(list: CValuesRef<GSList>?, data: gconstpointer?): CPointer<GSList>?

@CCall("knifunptr_glibjson625_g_slist_remove_link")
external fun g_slist_remove_link(list: CValuesRef<GSList>?, link_: CValuesRef<GSList>?): CPointer<GSList>?

@CCall("knifunptr_glibjson626_g_slist_delete_link")
external fun g_slist_delete_link(list: CValuesRef<GSList>?, link_: CValuesRef<GSList>?): CPointer<GSList>?

@CCall("knifunptr_glibjson627_g_slist_reverse")
external fun g_slist_reverse(list: CValuesRef<GSList>?): CPointer<GSList>?

@CCall("knifunptr_glibjson628_g_slist_copy")
external fun g_slist_copy(list: CValuesRef<GSList>?): CPointer<GSList>?

@CCall("knifunptr_glibjson629_g_slist_copy_deep")
external fun g_slist_copy_deep(list: CValuesRef<GSList>?, func: GCopyFunc?, user_data: gpointer?): CPointer<GSList>?

@CCall("knifunptr_glibjson630_g_slist_nth")
external fun g_slist_nth(list: CValuesRef<GSList>?, n: guint): CPointer<GSList>?

@CCall("knifunptr_glibjson631_g_slist_find")
external fun g_slist_find(list: CValuesRef<GSList>?, data: gconstpointer?): CPointer<GSList>?

@CCall("knifunptr_glibjson632_g_slist_find_custom")
external fun g_slist_find_custom(list: CValuesRef<GSList>?, data: gconstpointer?, func: GCompareFunc?): CPointer<GSList>?

@CCall("knifunptr_glibjson633_g_slist_position")
external fun g_slist_position(list: CValuesRef<GSList>?, llink: CValuesRef<GSList>?): gint

@CCall("knifunptr_glibjson634_g_slist_index")
external fun g_slist_index(list: CValuesRef<GSList>?, data: gconstpointer?): gint

@CCall("knifunptr_glibjson635_g_slist_last")
external fun g_slist_last(list: CValuesRef<GSList>?): CPointer<GSList>?

@CCall("knifunptr_glibjson636_g_slist_length")
external fun g_slist_length(list: CValuesRef<GSList>?): guint

@CCall("knifunptr_glibjson637_g_slist_foreach")
external fun g_slist_foreach(list: CValuesRef<GSList>?, func: GFunc?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson638_g_slist_sort")
external fun g_slist_sort(list: CValuesRef<GSList>?, compare_func: GCompareFunc?): CPointer<GSList>?

@CCall("knifunptr_glibjson639_g_slist_sort_with_data")
external fun g_slist_sort_with_data(list: CValuesRef<GSList>?, compare_func: GCompareDataFunc?, user_data: gpointer?): CPointer<GSList>?

@CCall("knifunptr_glibjson640_g_slist_nth_data")
external fun g_slist_nth_data(list: CValuesRef<GSList>?, n: guint): gpointer?

@CCall("knifunptr_glibjson641_g_main_context_new")
external fun g_main_context_new(): CPointer<GMainContext>?

@CCall("knifunptr_glibjson642_g_main_context_ref")
external fun g_main_context_ref(context: CValuesRef<GMainContext>?): CPointer<GMainContext>?

@CCall("knifunptr_glibjson643_g_main_context_unref")
external fun g_main_context_unref(context: CValuesRef<GMainContext>?): Unit

@CCall("knifunptr_glibjson644_g_main_context_default")
external fun g_main_context_default(): CPointer<GMainContext>?

@CCall("knifunptr_glibjson645_g_main_context_iteration")
external fun g_main_context_iteration(context: CValuesRef<GMainContext>?, may_block: gboolean): gboolean

@CCall("knifunptr_glibjson646_g_main_context_pending")
external fun g_main_context_pending(context: CValuesRef<GMainContext>?): gboolean

@CCall("knifunptr_glibjson647_g_main_context_find_source_by_id")
external fun g_main_context_find_source_by_id(context: CValuesRef<GMainContext>?, source_id: guint): CPointer<GSource>?

@CCall("knifunptr_glibjson648_g_main_context_find_source_by_user_data")
external fun g_main_context_find_source_by_user_data(context: CValuesRef<GMainContext>?, user_data: gpointer?): CPointer<GSource>?

@CCall("knifunptr_glibjson649_g_main_context_find_source_by_funcs_user_data")
external fun g_main_context_find_source_by_funcs_user_data(context: CValuesRef<GMainContext>?, funcs: CValuesRef<GSourceFuncs>?, user_data: gpointer?): CPointer<GSource>?

@CCall("knifunptr_glibjson650_g_main_context_wakeup")
external fun g_main_context_wakeup(context: CValuesRef<GMainContext>?): Unit

@CCall("knifunptr_glibjson651_g_main_context_acquire")
external fun g_main_context_acquire(context: CValuesRef<GMainContext>?): gboolean

@CCall("knifunptr_glibjson652_g_main_context_release")
external fun g_main_context_release(context: CValuesRef<GMainContext>?): Unit

@CCall("knifunptr_glibjson653_g_main_context_is_owner")
external fun g_main_context_is_owner(context: CValuesRef<GMainContext>?): gboolean

@CCall("knifunptr_glibjson654_g_main_context_wait")
external fun g_main_context_wait(context: CValuesRef<GMainContext>?, cond: CValuesRef<GCond>?, mutex: CValuesRef<GMutex>?): gboolean

@CCall("knifunptr_glibjson655_g_main_context_prepare")
external fun g_main_context_prepare(context: CValuesRef<GMainContext>?, priority: CValuesRef<gintVar>?): gboolean

@CCall("knifunptr_glibjson656_g_main_context_query")
external fun g_main_context_query(context: CValuesRef<GMainContext>?, max_priority: gint, timeout_: CValuesRef<gintVar>?, fds: CValuesRef<GPollFD>?, n_fds: gint): gint

@CCall("knifunptr_glibjson657_g_main_context_check")
external fun g_main_context_check(context: CValuesRef<GMainContext>?, max_priority: gint, fds: CValuesRef<GPollFD>?, n_fds: gint): gboolean

@CCall("knifunptr_glibjson658_g_main_context_dispatch")
external fun g_main_context_dispatch(context: CValuesRef<GMainContext>?): Unit

@CCall("knifunptr_glibjson659_g_main_context_set_poll_func")
external fun g_main_context_set_poll_func(context: CValuesRef<GMainContext>?, func: GPollFunc?): Unit

@CCall("knifunptr_glibjson660_g_main_context_get_poll_func")
external fun g_main_context_get_poll_func(context: CValuesRef<GMainContext>?): GPollFunc?

@CCall("knifunptr_glibjson661_g_main_context_add_poll")
external fun g_main_context_add_poll(context: CValuesRef<GMainContext>?, fd: CValuesRef<GPollFD>?, priority: gint): Unit

@CCall("knifunptr_glibjson662_g_main_context_remove_poll")
external fun g_main_context_remove_poll(context: CValuesRef<GMainContext>?, fd: CValuesRef<GPollFD>?): Unit

@CCall("knifunptr_glibjson663_g_main_depth")
external fun g_main_depth(): gint

@CCall("knifunptr_glibjson664_g_main_current_source")
external fun g_main_current_source(): CPointer<GSource>?

@CCall("knifunptr_glibjson665_g_main_context_push_thread_default")
external fun g_main_context_push_thread_default(context: CValuesRef<GMainContext>?): Unit

@CCall("knifunptr_glibjson666_g_main_context_pop_thread_default")
external fun g_main_context_pop_thread_default(context: CValuesRef<GMainContext>?): Unit

@CCall("knifunptr_glibjson667_g_main_context_get_thread_default")
external fun g_main_context_get_thread_default(): CPointer<GMainContext>?

@CCall("knifunptr_glibjson668_g_main_context_ref_thread_default")
external fun g_main_context_ref_thread_default(): CPointer<GMainContext>?

@CCall("knifunptr_glibjson669_g_main_loop_new")
external fun g_main_loop_new(context: CValuesRef<GMainContext>?, is_running: gboolean): CPointer<GMainLoop>?

@CCall("knifunptr_glibjson670_g_main_loop_run")
external fun g_main_loop_run(loop: CValuesRef<GMainLoop>?): Unit

@CCall("knifunptr_glibjson671_g_main_loop_quit")
external fun g_main_loop_quit(loop: CValuesRef<GMainLoop>?): Unit

@CCall("knifunptr_glibjson672_g_main_loop_ref")
external fun g_main_loop_ref(loop: CValuesRef<GMainLoop>?): CPointer<GMainLoop>?

@CCall("knifunptr_glibjson673_g_main_loop_unref")
external fun g_main_loop_unref(loop: CValuesRef<GMainLoop>?): Unit

@CCall("knifunptr_glibjson674_g_main_loop_is_running")
external fun g_main_loop_is_running(loop: CValuesRef<GMainLoop>?): gboolean

@CCall("knifunptr_glibjson675_g_main_loop_get_context")
external fun g_main_loop_get_context(loop: CValuesRef<GMainLoop>?): CPointer<GMainContext>?

@CCall("knifunptr_glibjson676_g_source_new")
external fun g_source_new(source_funcs: CValuesRef<GSourceFuncs>?, struct_size: guint): CPointer<GSource>?

@CCall("knifunptr_glibjson677_g_source_ref")
external fun g_source_ref(source: CValuesRef<GSource>?): CPointer<GSource>?

@CCall("knifunptr_glibjson678_g_source_unref")
external fun g_source_unref(source: CValuesRef<GSource>?): Unit

@CCall("knifunptr_glibjson679_g_source_attach")
external fun g_source_attach(source: CValuesRef<GSource>?, context: CValuesRef<GMainContext>?): guint

@CCall("knifunptr_glibjson680_g_source_destroy")
external fun g_source_destroy(source: CValuesRef<GSource>?): Unit

@CCall("knifunptr_glibjson681_g_source_set_priority")
external fun g_source_set_priority(source: CValuesRef<GSource>?, priority: gint): Unit

@CCall("knifunptr_glibjson682_g_source_get_priority")
external fun g_source_get_priority(source: CValuesRef<GSource>?): gint

@CCall("knifunptr_glibjson683_g_source_set_can_recurse")
external fun g_source_set_can_recurse(source: CValuesRef<GSource>?, can_recurse: gboolean): Unit

@CCall("knifunptr_glibjson684_g_source_get_can_recurse")
external fun g_source_get_can_recurse(source: CValuesRef<GSource>?): gboolean

@CCall("knifunptr_glibjson685_g_source_get_id")
external fun g_source_get_id(source: CValuesRef<GSource>?): guint

@CCall("knifunptr_glibjson686_g_source_get_context")
external fun g_source_get_context(source: CValuesRef<GSource>?): CPointer<GMainContext>?

@CCall("knifunptr_glibjson687_g_source_set_callback")
external fun g_source_set_callback(source: CValuesRef<GSource>?, func: GSourceFunc?, data: gpointer?, notify: GDestroyNotify?): Unit

@CCall("knifunptr_glibjson688_g_source_set_funcs")
external fun g_source_set_funcs(source: CValuesRef<GSource>?, funcs: CValuesRef<GSourceFuncs>?): Unit

@CCall("knifunptr_glibjson689_g_source_is_destroyed")
external fun g_source_is_destroyed(source: CValuesRef<GSource>?): gboolean

@CCall("knifunptr_glibjson690_g_source_set_name")
external fun g_source_set_name(source: CValuesRef<GSource>?, @CCall.CString name: String?): Unit

@CCall("knifunptr_glibjson691_g_source_get_name")
external fun g_source_get_name(source: CValuesRef<GSource>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson692_g_source_set_name_by_id")
external fun g_source_set_name_by_id(tag: guint, @CCall.CString name: String?): Unit

@CCall("knifunptr_glibjson693_g_source_set_ready_time")
external fun g_source_set_ready_time(source: CValuesRef<GSource>?, ready_time: gint64): Unit

@CCall("knifunptr_glibjson694_g_source_get_ready_time")
external fun g_source_get_ready_time(source: CValuesRef<GSource>?): gint64

@CCall("knifunptr_glibjson695_g_source_add_unix_fd")
external fun g_source_add_unix_fd(source: CValuesRef<GSource>?, fd: gint, events: GIOCondition): gpointer?

@CCall("knifunptr_glibjson696_g_source_modify_unix_fd")
external fun g_source_modify_unix_fd(source: CValuesRef<GSource>?, tag: gpointer?, new_events: GIOCondition): Unit

@CCall("knifunptr_glibjson697_g_source_remove_unix_fd")
external fun g_source_remove_unix_fd(source: CValuesRef<GSource>?, tag: gpointer?): Unit

@CCall("knifunptr_glibjson698_g_source_query_unix_fd")
external fun g_source_query_unix_fd(source: CValuesRef<GSource>?, tag: gpointer?): GIOCondition

@CCall("knifunptr_glibjson699_g_source_set_callback_indirect")
external fun g_source_set_callback_indirect(source: CValuesRef<GSource>?, callback_data: gpointer?, callback_funcs: CValuesRef<GSourceCallbackFuncs>?): Unit

@CCall("knifunptr_glibjson700_g_source_add_poll")
external fun g_source_add_poll(source: CValuesRef<GSource>?, fd: CValuesRef<GPollFD>?): Unit

@CCall("knifunptr_glibjson701_g_source_remove_poll")
external fun g_source_remove_poll(source: CValuesRef<GSource>?, fd: CValuesRef<GPollFD>?): Unit

@CCall("knifunptr_glibjson702_g_source_add_child_source")
external fun g_source_add_child_source(source: CValuesRef<GSource>?, child_source: CValuesRef<GSource>?): Unit

@CCall("knifunptr_glibjson703_g_source_remove_child_source")
external fun g_source_remove_child_source(source: CValuesRef<GSource>?, child_source: CValuesRef<GSource>?): Unit

@CCall("knifunptr_glibjson704_g_source_get_current_time")
external fun g_source_get_current_time(source: CValuesRef<GSource>?, timeval: CValuesRef<GTimeVal>?): Unit

@CCall("knifunptr_glibjson705_g_source_get_time")
external fun g_source_get_time(source: CValuesRef<GSource>?): gint64

@CCall("knifunptr_glibjson706_g_idle_source_new")
external fun g_idle_source_new(): CPointer<GSource>?

@CCall("knifunptr_glibjson707_g_child_watch_source_new")
external fun g_child_watch_source_new(pid: GPid): CPointer<GSource>?

@CCall("knifunptr_glibjson708_g_timeout_source_new")
external fun g_timeout_source_new(interval: guint): CPointer<GSource>?

@CCall("knifunptr_glibjson709_g_timeout_source_new_seconds")
external fun g_timeout_source_new_seconds(interval: guint): CPointer<GSource>?

@CCall("knifunptr_glibjson710_g_get_current_time")
external fun g_get_current_time(result: CValuesRef<GTimeVal>?): Unit

@CCall("knifunptr_glibjson711_g_get_monotonic_time")
external fun g_get_monotonic_time(): gint64

@CCall("knifunptr_glibjson712_g_get_real_time")
external fun g_get_real_time(): gint64

@CCall("knifunptr_glibjson713_g_source_remove")
external fun g_source_remove(tag: guint): gboolean

@CCall("knifunptr_glibjson714_g_source_remove_by_user_data")
external fun g_source_remove_by_user_data(user_data: gpointer?): gboolean

@CCall("knifunptr_glibjson715_g_source_remove_by_funcs_user_data")
external fun g_source_remove_by_funcs_user_data(funcs: CValuesRef<GSourceFuncs>?, user_data: gpointer?): gboolean

@Deprecated("Unable to import this declaration", level = DeprecationLevel.ERROR)
fun g_clear_handle_id(tag_ptr: CValuesRef<guintVar>?, clear_func: GClearHandleFunc?): Unit = throw UnsupportedOperationException()

@CCall("knifunptr_glibjson717_g_timeout_add_full")
external fun g_timeout_add_full(priority: gint, interval: guint, function: GSourceFunc?, data: gpointer?, notify: GDestroyNotify?): guint

@CCall("knifunptr_glibjson718_g_timeout_add")
external fun g_timeout_add(interval: guint, function: GSourceFunc?, data: gpointer?): guint

@CCall("knifunptr_glibjson719_g_timeout_add_seconds_full")
external fun g_timeout_add_seconds_full(priority: gint, interval: guint, function: GSourceFunc?, data: gpointer?, notify: GDestroyNotify?): guint

@CCall("knifunptr_glibjson720_g_timeout_add_seconds")
external fun g_timeout_add_seconds(interval: guint, function: GSourceFunc?, data: gpointer?): guint

@CCall("knifunptr_glibjson721_g_child_watch_add_full")
external fun g_child_watch_add_full(priority: gint, pid: GPid, function: GChildWatchFunc?, data: gpointer?, notify: GDestroyNotify?): guint

@CCall("knifunptr_glibjson722_g_child_watch_add")
external fun g_child_watch_add(pid: GPid, function: GChildWatchFunc?, data: gpointer?): guint

@CCall("knifunptr_glibjson723_g_idle_add")
external fun g_idle_add(function: GSourceFunc?, data: gpointer?): guint

@CCall("knifunptr_glibjson724_g_idle_add_full")
external fun g_idle_add_full(priority: gint, function: GSourceFunc?, data: gpointer?, notify: GDestroyNotify?): guint

@CCall("knifunptr_glibjson725_g_idle_remove_by_data")
external fun g_idle_remove_by_data(data: gpointer?): gboolean

@CCall("knifunptr_glibjson726_g_main_context_invoke_full")
external fun g_main_context_invoke_full(context: CValuesRef<GMainContext>?, priority: gint, function: GSourceFunc?, data: gpointer?, notify: GDestroyNotify?): Unit

@CCall("knifunptr_glibjson727_g_main_context_invoke")
external fun g_main_context_invoke(context: CValuesRef<GMainContext>?, function: GSourceFunc?, data: gpointer?): Unit

@CCall("knifunptr_glibjson728_g_unicode_script_to_iso15924")
external fun g_unicode_script_to_iso15924(script: GUnicodeScript): guint32

@CCall("knifunptr_glibjson729_g_unicode_script_from_iso15924")
external fun g_unicode_script_from_iso15924(iso15924: guint32): GUnicodeScript

@CCall("knifunptr_glibjson730_g_unichar_isalnum")
external fun g_unichar_isalnum(c: gunichar): gboolean

@CCall("knifunptr_glibjson731_g_unichar_isalpha")
external fun g_unichar_isalpha(c: gunichar): gboolean

@CCall("knifunptr_glibjson732_g_unichar_iscntrl")
external fun g_unichar_iscntrl(c: gunichar): gboolean

@CCall("knifunptr_glibjson733_g_unichar_isdigit")
external fun g_unichar_isdigit(c: gunichar): gboolean

@CCall("knifunptr_glibjson734_g_unichar_isgraph")
external fun g_unichar_isgraph(c: gunichar): gboolean

@CCall("knifunptr_glibjson735_g_unichar_islower")
external fun g_unichar_islower(c: gunichar): gboolean

@CCall("knifunptr_glibjson736_g_unichar_isprint")
external fun g_unichar_isprint(c: gunichar): gboolean

@CCall("knifunptr_glibjson737_g_unichar_ispunct")
external fun g_unichar_ispunct(c: gunichar): gboolean

@CCall("knifunptr_glibjson738_g_unichar_isspace")
external fun g_unichar_isspace(c: gunichar): gboolean

@CCall("knifunptr_glibjson739_g_unichar_isupper")
external fun g_unichar_isupper(c: gunichar): gboolean

@CCall("knifunptr_glibjson740_g_unichar_isxdigit")
external fun g_unichar_isxdigit(c: gunichar): gboolean

@CCall("knifunptr_glibjson741_g_unichar_istitle")
external fun g_unichar_istitle(c: gunichar): gboolean

@CCall("knifunptr_glibjson742_g_unichar_isdefined")
external fun g_unichar_isdefined(c: gunichar): gboolean

@CCall("knifunptr_glibjson743_g_unichar_iswide")
external fun g_unichar_iswide(c: gunichar): gboolean

@CCall("knifunptr_glibjson744_g_unichar_iswide_cjk")
external fun g_unichar_iswide_cjk(c: gunichar): gboolean

@CCall("knifunptr_glibjson745_g_unichar_iszerowidth")
external fun g_unichar_iszerowidth(c: gunichar): gboolean

@CCall("knifunptr_glibjson746_g_unichar_ismark")
external fun g_unichar_ismark(c: gunichar): gboolean

@CCall("knifunptr_glibjson747_g_unichar_toupper")
external fun g_unichar_toupper(c: gunichar): gunichar

@CCall("knifunptr_glibjson748_g_unichar_tolower")
external fun g_unichar_tolower(c: gunichar): gunichar

@CCall("knifunptr_glibjson749_g_unichar_totitle")
external fun g_unichar_totitle(c: gunichar): gunichar

@CCall("knifunptr_glibjson750_g_unichar_digit_value")
external fun g_unichar_digit_value(c: gunichar): gint

@CCall("knifunptr_glibjson751_g_unichar_xdigit_value")
external fun g_unichar_xdigit_value(c: gunichar): gint

@CCall("knifunptr_glibjson752_g_unichar_type")
external fun g_unichar_type(c: gunichar): GUnicodeType

@CCall("knifunptr_glibjson753_g_unichar_break_type")
external fun g_unichar_break_type(c: gunichar): GUnicodeBreakType

@CCall("knifunptr_glibjson754_g_unichar_combining_class")
external fun g_unichar_combining_class(uc: gunichar): gint

@CCall("knifunptr_glibjson755_g_unichar_get_mirror_char")
external fun g_unichar_get_mirror_char(ch: gunichar, mirrored_ch: CValuesRef<gunicharVar>?): gboolean

@CCall("knifunptr_glibjson756_g_unichar_get_script")
external fun g_unichar_get_script(ch: gunichar): GUnicodeScript

@CCall("knifunptr_glibjson757_g_unichar_validate")
external fun g_unichar_validate(ch: gunichar): gboolean

@CCall("knifunptr_glibjson758_g_unichar_compose")
external fun g_unichar_compose(a: gunichar, b: gunichar, ch: CValuesRef<gunicharVar>?): gboolean

@CCall("knifunptr_glibjson759_g_unichar_decompose")
external fun g_unichar_decompose(ch: gunichar, a: CValuesRef<gunicharVar>?, b: CValuesRef<gunicharVar>?): gboolean

@CCall("knifunptr_glibjson760_g_unichar_fully_decompose")
external fun g_unichar_fully_decompose(ch: gunichar, compat: gboolean, result: CValuesRef<gunicharVar>?, result_len: gsize): gsize

@CCall("knifunptr_glibjson761_g_unicode_canonical_ordering")
external fun g_unicode_canonical_ordering(string: CValuesRef<gunicharVar>?, len: gsize): Unit

@CCall("knifunptr_glibjson762_g_unicode_canonical_decomposition")
external fun g_unicode_canonical_decomposition(ch: gunichar, result_len: CValuesRef<gsizeVar>?): CPointer<gunicharVar>?

@CCall("knifunptr_glibjson763_g_utf8_get_char")
external fun g_utf8_get_char(@CCall.CString p: String?): gunichar

@CCall("knifunptr_glibjson764_g_utf8_get_char_validated")
external fun g_utf8_get_char_validated(@CCall.CString p: String?, max_len: gssize): gunichar

@CCall("knifunptr_glibjson765_g_utf8_offset_to_pointer")
external fun g_utf8_offset_to_pointer(@CCall.CString str: String?, offset: glong): CPointer<gcharVar>?

@CCall("knifunptr_glibjson766_g_utf8_pointer_to_offset")
external fun g_utf8_pointer_to_offset(@CCall.CString str: String?, @CCall.CString pos: String?): glong

@CCall("knifunptr_glibjson767_g_utf8_prev_char")
external fun g_utf8_prev_char(@CCall.CString p: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson768_g_utf8_find_next_char")
external fun g_utf8_find_next_char(@CCall.CString p: String?, @CCall.CString end: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson769_g_utf8_find_prev_char")
external fun g_utf8_find_prev_char(@CCall.CString str: String?, @CCall.CString p: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson770_g_utf8_strlen")
external fun g_utf8_strlen(@CCall.CString p: String?, max: gssize): glong

@CCall("knifunptr_glibjson771_g_utf8_substring")
external fun g_utf8_substring(@CCall.CString str: String?, start_pos: glong, end_pos: glong): CPointer<gcharVar>?

@CCall("knifunptr_glibjson772_g_utf8_strncpy")
external fun g_utf8_strncpy(dest: CValuesRef<gcharVar>?, @CCall.CString src: String?, n: gsize): CPointer<gcharVar>?

@CCall("knifunptr_glibjson773_g_utf8_strchr")
external fun g_utf8_strchr(@CCall.CString p: String?, len: gssize, c: gunichar): CPointer<gcharVar>?

@CCall("knifunptr_glibjson774_g_utf8_strrchr")
external fun g_utf8_strrchr(@CCall.CString p: String?, len: gssize, c: gunichar): CPointer<gcharVar>?

@CCall("knifunptr_glibjson775_g_utf8_strreverse")
external fun g_utf8_strreverse(@CCall.CString str: String?, len: gssize): CPointer<gcharVar>?

@CCall("knifunptr_glibjson776_g_utf8_to_utf16")
external fun g_utf8_to_utf16(@CCall.CString str: String?, len: glong, items_read: CValuesRef<glongVar>?, items_written: CValuesRef<glongVar>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<gunichar2Var>?

@CCall("knifunptr_glibjson777_g_utf8_to_ucs4")
external fun g_utf8_to_ucs4(@CCall.CString str: String?, len: glong, items_read: CValuesRef<glongVar>?, items_written: CValuesRef<glongVar>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<gunicharVar>?

@CCall("knifunptr_glibjson778_g_utf8_to_ucs4_fast")
external fun g_utf8_to_ucs4_fast(@CCall.CString str: String?, len: glong, items_written: CValuesRef<glongVar>?): CPointer<gunicharVar>?

@CCall("knifunptr_glibjson779_g_utf16_to_ucs4")
external fun g_utf16_to_ucs4(str: CValuesRef<gunichar2Var>?, len: glong, items_read: CValuesRef<glongVar>?, items_written: CValuesRef<glongVar>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<gunicharVar>?

@CCall("knifunptr_glibjson780_g_utf16_to_utf8")
external fun g_utf16_to_utf8(str: CValuesRef<gunichar2Var>?, len: glong, items_read: CValuesRef<glongVar>?, items_written: CValuesRef<glongVar>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson781_g_ucs4_to_utf16")
external fun g_ucs4_to_utf16(str: CValuesRef<gunicharVar>?, len: glong, items_read: CValuesRef<glongVar>?, items_written: CValuesRef<glongVar>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<gunichar2Var>?

@CCall("knifunptr_glibjson782_g_ucs4_to_utf8")
external fun g_ucs4_to_utf8(str: CValuesRef<gunicharVar>?, len: glong, items_read: CValuesRef<glongVar>?, items_written: CValuesRef<glongVar>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson783_g_unichar_to_utf8")
external fun g_unichar_to_utf8(c: gunichar, outbuf: CValuesRef<gcharVar>?): gint

@CCall("knifunptr_glibjson784_g_utf8_validate")
external fun g_utf8_validate(@CCall.CString str: String?, max_len: gssize, end: CValuesRef<CPointerVar<gcharVar>>?): gboolean

@CCall("knifunptr_glibjson785_g_utf8_strup")
external fun g_utf8_strup(@CCall.CString str: String?, len: gssize): CPointer<gcharVar>?

@CCall("knifunptr_glibjson786_g_utf8_strdown")
external fun g_utf8_strdown(@CCall.CString str: String?, len: gssize): CPointer<gcharVar>?

@CCall("knifunptr_glibjson787_g_utf8_casefold")
external fun g_utf8_casefold(@CCall.CString str: String?, len: gssize): CPointer<gcharVar>?

@CCall("knifunptr_glibjson788_g_utf8_normalize")
external fun g_utf8_normalize(@CCall.CString str: String?, len: gssize, mode: GNormalizeMode): CPointer<gcharVar>?

@CCall("knifunptr_glibjson789_g_utf8_collate")
external fun g_utf8_collate(@CCall.CString str1: String?, @CCall.CString str2: String?): gint

@CCall("knifunptr_glibjson790_g_utf8_collate_key")
external fun g_utf8_collate_key(@CCall.CString str: String?, len: gssize): CPointer<gcharVar>?

@CCall("knifunptr_glibjson791_g_utf8_collate_key_for_filename")
external fun g_utf8_collate_key_for_filename(@CCall.CString str: String?, len: gssize): CPointer<gcharVar>?

@CCall("knifunptr_glibjson792_g_utf8_make_valid")
external fun g_utf8_make_valid(@CCall.CString str: String?, len: gssize): CPointer<gcharVar>?

@CCall("knifunptr_glibjson793_g_string_new")
external fun g_string_new(@CCall.CString init: String?): CPointer<GString>?

@CCall("knifunptr_glibjson794_g_string_new_len")
external fun g_string_new_len(@CCall.CString init: String?, len: gssize): CPointer<GString>?

@CCall("knifunptr_glibjson795_g_string_sized_new")
external fun g_string_sized_new(dfl_size: gsize): CPointer<GString>?

@CCall("knifunptr_glibjson796_g_string_free")
external fun g_string_free(string: CValuesRef<GString>?, free_segment: gboolean): CPointer<gcharVar>?

@CCall("knifunptr_glibjson797_g_string_free_to_bytes")
external fun g_string_free_to_bytes(string: CValuesRef<GString>?): CPointer<GBytes>?

@CCall("knifunptr_glibjson798_g_string_equal")
external fun g_string_equal(v: CValuesRef<GString>?, v2: CValuesRef<GString>?): gboolean

@CCall("knifunptr_glibjson799_g_string_hash")
external fun g_string_hash(str: CValuesRef<GString>?): guint

@CCall("knifunptr_glibjson800_g_string_assign")
external fun g_string_assign(string: CValuesRef<GString>?, @CCall.CString rval: String?): CPointer<GString>?

@CCall("knifunptr_glibjson801_g_string_truncate")
external fun g_string_truncate(string: CValuesRef<GString>?, len: gsize): CPointer<GString>?

@CCall("knifunptr_glibjson802_g_string_set_size")
external fun g_string_set_size(string: CValuesRef<GString>?, len: gsize): CPointer<GString>?

@CCall("knifunptr_glibjson803_g_string_insert_len")
external fun g_string_insert_len(string: CValuesRef<GString>?, pos: gssize, @CCall.CString `val`: String?, len: gssize): CPointer<GString>?

@CCall("knifunptr_glibjson804_g_string_append")
external fun g_string_append(string: CValuesRef<GString>?, @CCall.CString `val`: String?): CPointer<GString>?

@CCall("knifunptr_glibjson805_g_string_append_len")
external fun g_string_append_len(string: CValuesRef<GString>?, @CCall.CString `val`: String?, len: gssize): CPointer<GString>?

@CCall("knifunptr_glibjson806_g_string_append_c")
external fun g_string_append_c(string: CValuesRef<GString>?, c: gchar): CPointer<GString>?

@CCall("knifunptr_glibjson807_g_string_append_unichar")
external fun g_string_append_unichar(string: CValuesRef<GString>?, wc: gunichar): CPointer<GString>?

@CCall("knifunptr_glibjson808_g_string_prepend")
external fun g_string_prepend(string: CValuesRef<GString>?, @CCall.CString `val`: String?): CPointer<GString>?

@CCall("knifunptr_glibjson809_g_string_prepend_c")
external fun g_string_prepend_c(string: CValuesRef<GString>?, c: gchar): CPointer<GString>?

@CCall("knifunptr_glibjson810_g_string_prepend_unichar")
external fun g_string_prepend_unichar(string: CValuesRef<GString>?, wc: gunichar): CPointer<GString>?

@CCall("knifunptr_glibjson811_g_string_prepend_len")
external fun g_string_prepend_len(string: CValuesRef<GString>?, @CCall.CString `val`: String?, len: gssize): CPointer<GString>?

@CCall("knifunptr_glibjson812_g_string_insert")
external fun g_string_insert(string: CValuesRef<GString>?, pos: gssize, @CCall.CString `val`: String?): CPointer<GString>?

@CCall("knifunptr_glibjson813_g_string_insert_c")
external fun g_string_insert_c(string: CValuesRef<GString>?, pos: gssize, c: gchar): CPointer<GString>?

@CCall("knifunptr_glibjson814_g_string_insert_unichar")
external fun g_string_insert_unichar(string: CValuesRef<GString>?, pos: gssize, wc: gunichar): CPointer<GString>?

@CCall("knifunptr_glibjson815_g_string_overwrite")
external fun g_string_overwrite(string: CValuesRef<GString>?, pos: gsize, @CCall.CString `val`: String?): CPointer<GString>?

@CCall("knifunptr_glibjson816_g_string_overwrite_len")
external fun g_string_overwrite_len(string: CValuesRef<GString>?, pos: gsize, @CCall.CString `val`: String?, len: gssize): CPointer<GString>?

@CCall("knifunptr_glibjson817_g_string_erase")
external fun g_string_erase(string: CValuesRef<GString>?, pos: gssize, len: gssize): CPointer<GString>?

@CCall("knifunptr_glibjson818_g_string_ascii_down")
external fun g_string_ascii_down(string: CValuesRef<GString>?): CPointer<GString>?

@CCall("knifunptr_glibjson819_g_string_ascii_up")
external fun g_string_ascii_up(string: CValuesRef<GString>?): CPointer<GString>?

@CCall("knifunptr_glibjson820_g_string_vprintf")
external fun g_string_vprintf(string: CValuesRef<GString>?, @CCall.CString format: String?, args: va_list?): Unit

@CCall("knifunptr_glibjson821_g_string_printf")
external fun g_string_printf(string: CValuesRef<GString>?, @CCall.CString format: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson822_g_string_append_vprintf")
external fun g_string_append_vprintf(string: CValuesRef<GString>?, @CCall.CString format: String?, args: va_list?): Unit

@CCall("knifunptr_glibjson823_g_string_append_printf")
external fun g_string_append_printf(string: CValuesRef<GString>?, @CCall.CString format: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson824_g_string_append_uri_escaped")
external fun g_string_append_uri_escaped(string: CValuesRef<GString>?, @CCall.CString unescaped: String?, @CCall.CString reserved_chars_allowed: String?, allow_utf8: gboolean): CPointer<GString>?

@CCall("knifunptr_glibjson825_g_string_append_c_inline")
external fun g_string_append_c_inline(gstring: CValuesRef<GString>?, c: gchar): CPointer<GString>?

@CCall("knifunptr_glibjson826_g_string_down")
external fun g_string_down(string: CValuesRef<GString>?): CPointer<GString>?

@CCall("knifunptr_glibjson827_g_string_up")
external fun g_string_up(string: CValuesRef<GString>?): CPointer<GString>?

@CCall("knifunptr_glibjson828_g_io_channel_init")
external fun g_io_channel_init(channel: CValuesRef<GIOChannel>?): Unit

@CCall("knifunptr_glibjson829_g_io_channel_ref")
external fun g_io_channel_ref(channel: CValuesRef<GIOChannel>?): CPointer<GIOChannel>?

@CCall("knifunptr_glibjson830_g_io_channel_unref")
external fun g_io_channel_unref(channel: CValuesRef<GIOChannel>?): Unit

@CCall("knifunptr_glibjson831_g_io_channel_read")
external fun g_io_channel_read(channel: CValuesRef<GIOChannel>?, buf: CValuesRef<gcharVar>?, count: gsize, bytes_read: CValuesRef<gsizeVar>?): GIOError

@CCall("knifunptr_glibjson832_g_io_channel_write")
external fun g_io_channel_write(channel: CValuesRef<GIOChannel>?, @CCall.CString buf: String?, count: gsize, bytes_written: CValuesRef<gsizeVar>?): GIOError

@CCall("knifunptr_glibjson833_g_io_channel_seek")
external fun g_io_channel_seek(channel: CValuesRef<GIOChannel>?, offset: gint64, type: GSeekType): GIOError

@CCall("knifunptr_glibjson834_g_io_channel_close")
external fun g_io_channel_close(channel: CValuesRef<GIOChannel>?): Unit

@CCall("knifunptr_glibjson835_g_io_channel_shutdown")
external fun g_io_channel_shutdown(channel: CValuesRef<GIOChannel>?, flush: gboolean, err: CValuesRef<CPointerVar<GError>>?): GIOStatus

@CCall("knifunptr_glibjson836_g_io_add_watch_full")
external fun g_io_add_watch_full(channel: CValuesRef<GIOChannel>?, priority: gint, condition: GIOCondition, func: GIOFunc?, user_data: gpointer?, notify: GDestroyNotify?): guint

@CCall("knifunptr_glibjson837_g_io_create_watch")
external fun g_io_create_watch(channel: CValuesRef<GIOChannel>?, condition: GIOCondition): CPointer<GSource>?

@CCall("knifunptr_glibjson838_g_io_add_watch")
external fun g_io_add_watch(channel: CValuesRef<GIOChannel>?, condition: GIOCondition, func: GIOFunc?, user_data: gpointer?): guint

@CCall("knifunptr_glibjson839_g_io_channel_set_buffer_size")
external fun g_io_channel_set_buffer_size(channel: CValuesRef<GIOChannel>?, size: gsize): Unit

@CCall("knifunptr_glibjson840_g_io_channel_get_buffer_size")
external fun g_io_channel_get_buffer_size(channel: CValuesRef<GIOChannel>?): gsize

@CCall("knifunptr_glibjson841_g_io_channel_get_buffer_condition")
external fun g_io_channel_get_buffer_condition(channel: CValuesRef<GIOChannel>?): GIOCondition

@CCall("knifunptr_glibjson842_g_io_channel_set_flags")
external fun g_io_channel_set_flags(channel: CValuesRef<GIOChannel>?, flags: GIOFlags, error: CValuesRef<CPointerVar<GError>>?): GIOStatus

@CCall("knifunptr_glibjson843_g_io_channel_get_flags")
external fun g_io_channel_get_flags(channel: CValuesRef<GIOChannel>?): GIOFlags

@CCall("knifunptr_glibjson844_g_io_channel_set_line_term")
external fun g_io_channel_set_line_term(channel: CValuesRef<GIOChannel>?, @CCall.CString line_term: String?, length: gint): Unit

@CCall("knifunptr_glibjson845_g_io_channel_get_line_term")
external fun g_io_channel_get_line_term(channel: CValuesRef<GIOChannel>?, length: CValuesRef<gintVar>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson846_g_io_channel_set_buffered")
external fun g_io_channel_set_buffered(channel: CValuesRef<GIOChannel>?, buffered: gboolean): Unit

@CCall("knifunptr_glibjson847_g_io_channel_get_buffered")
external fun g_io_channel_get_buffered(channel: CValuesRef<GIOChannel>?): gboolean

@CCall("knifunptr_glibjson848_g_io_channel_set_encoding")
external fun g_io_channel_set_encoding(channel: CValuesRef<GIOChannel>?, @CCall.CString encoding: String?, error: CValuesRef<CPointerVar<GError>>?): GIOStatus

@CCall("knifunptr_glibjson849_g_io_channel_get_encoding")
external fun g_io_channel_get_encoding(channel: CValuesRef<GIOChannel>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson850_g_io_channel_set_close_on_unref")
external fun g_io_channel_set_close_on_unref(channel: CValuesRef<GIOChannel>?, do_close: gboolean): Unit

@CCall("knifunptr_glibjson851_g_io_channel_get_close_on_unref")
external fun g_io_channel_get_close_on_unref(channel: CValuesRef<GIOChannel>?): gboolean

@CCall("knifunptr_glibjson852_g_io_channel_flush")
external fun g_io_channel_flush(channel: CValuesRef<GIOChannel>?, error: CValuesRef<CPointerVar<GError>>?): GIOStatus

@CCall("knifunptr_glibjson853_g_io_channel_read_line")
external fun g_io_channel_read_line(channel: CValuesRef<GIOChannel>?, str_return: CValuesRef<CPointerVar<gcharVar>>?, length: CValuesRef<gsizeVar>?, terminator_pos: CValuesRef<gsizeVar>?, error: CValuesRef<CPointerVar<GError>>?): GIOStatus

@CCall("knifunptr_glibjson854_g_io_channel_read_line_string")
external fun g_io_channel_read_line_string(channel: CValuesRef<GIOChannel>?, buffer: CValuesRef<GString>?, terminator_pos: CValuesRef<gsizeVar>?, error: CValuesRef<CPointerVar<GError>>?): GIOStatus

@CCall("knifunptr_glibjson855_g_io_channel_read_to_end")
external fun g_io_channel_read_to_end(channel: CValuesRef<GIOChannel>?, str_return: CValuesRef<CPointerVar<gcharVar>>?, length: CValuesRef<gsizeVar>?, error: CValuesRef<CPointerVar<GError>>?): GIOStatus

@CCall("knifunptr_glibjson856_g_io_channel_read_chars")
external fun g_io_channel_read_chars(channel: CValuesRef<GIOChannel>?, buf: CValuesRef<gcharVar>?, count: gsize, bytes_read: CValuesRef<gsizeVar>?, error: CValuesRef<CPointerVar<GError>>?): GIOStatus

@CCall("knifunptr_glibjson857_g_io_channel_read_unichar")
external fun g_io_channel_read_unichar(channel: CValuesRef<GIOChannel>?, thechar: CValuesRef<gunicharVar>?, error: CValuesRef<CPointerVar<GError>>?): GIOStatus

@CCall("knifunptr_glibjson858_g_io_channel_write_chars")
external fun g_io_channel_write_chars(channel: CValuesRef<GIOChannel>?, @CCall.CString buf: String?, count: gssize, bytes_written: CValuesRef<gsizeVar>?, error: CValuesRef<CPointerVar<GError>>?): GIOStatus

@CCall("knifunptr_glibjson859_g_io_channel_write_unichar")
external fun g_io_channel_write_unichar(channel: CValuesRef<GIOChannel>?, thechar: gunichar, error: CValuesRef<CPointerVar<GError>>?): GIOStatus

@CCall("knifunptr_glibjson860_g_io_channel_seek_position")
external fun g_io_channel_seek_position(channel: CValuesRef<GIOChannel>?, offset: gint64, type: GSeekType, error: CValuesRef<CPointerVar<GError>>?): GIOStatus

@CCall("knifunptr_glibjson861_g_io_channel_new_file")
external fun g_io_channel_new_file(@CCall.CString filename: String?, @CCall.CString mode: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GIOChannel>?

@CCall("knifunptr_glibjson862_g_io_channel_error_quark")
external fun g_io_channel_error_quark(): GQuark

@CCall("knifunptr_glibjson863_g_io_channel_error_from_errno")
external fun g_io_channel_error_from_errno(en: gint): GIOChannelError

@CCall("knifunptr_glibjson864_g_io_channel_unix_new")
external fun g_io_channel_unix_new(fd: Int): CPointer<GIOChannel>?

@CCall("knifunptr_glibjson865_g_io_channel_unix_get_fd")
external fun g_io_channel_unix_get_fd(channel: CValuesRef<GIOChannel>?): gint

@CCall("knifunptr_glibjson866_g_key_file_error_quark")
external fun g_key_file_error_quark(): GQuark

@CCall("knifunptr_glibjson867_g_key_file_new")
external fun g_key_file_new(): CPointer<GKeyFile>?

@CCall("knifunptr_glibjson868_g_key_file_ref")
external fun g_key_file_ref(key_file: CValuesRef<GKeyFile>?): CPointer<GKeyFile>?

@CCall("knifunptr_glibjson869_g_key_file_unref")
external fun g_key_file_unref(key_file: CValuesRef<GKeyFile>?): Unit

@CCall("knifunptr_glibjson870_g_key_file_free")
external fun g_key_file_free(key_file: CValuesRef<GKeyFile>?): Unit

@CCall("knifunptr_glibjson871_g_key_file_set_list_separator")
external fun g_key_file_set_list_separator(key_file: CValuesRef<GKeyFile>?, separator: gchar): Unit

@CCall("knifunptr_glibjson872_g_key_file_load_from_file")
external fun g_key_file_load_from_file(key_file: CValuesRef<GKeyFile>?, @CCall.CString file: String?, flags: GKeyFileFlags, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson873_g_key_file_load_from_data")
external fun g_key_file_load_from_data(key_file: CValuesRef<GKeyFile>?, @CCall.CString data: String?, length: gsize, flags: GKeyFileFlags, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson874_g_key_file_load_from_bytes")
external fun g_key_file_load_from_bytes(key_file: CValuesRef<GKeyFile>?, bytes: CValuesRef<GBytes>?, flags: GKeyFileFlags, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson875_g_key_file_load_from_dirs")
external fun g_key_file_load_from_dirs(key_file: CValuesRef<GKeyFile>?, @CCall.CString file: String?, search_dirs: CValuesRef<CPointerVar<gcharVar>>?, full_path: CValuesRef<CPointerVar<gcharVar>>?, flags: GKeyFileFlags, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson876_g_key_file_load_from_data_dirs")
external fun g_key_file_load_from_data_dirs(key_file: CValuesRef<GKeyFile>?, @CCall.CString file: String?, full_path: CValuesRef<CPointerVar<gcharVar>>?, flags: GKeyFileFlags, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson877_g_key_file_to_data")
external fun g_key_file_to_data(key_file: CValuesRef<GKeyFile>?, length: CValuesRef<gsizeVar>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson878_g_key_file_save_to_file")
external fun g_key_file_save_to_file(key_file: CValuesRef<GKeyFile>?, @CCall.CString filename: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson879_g_key_file_get_start_group")
external fun g_key_file_get_start_group(key_file: CValuesRef<GKeyFile>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson880_g_key_file_get_groups")
external fun g_key_file_get_groups(key_file: CValuesRef<GKeyFile>?, length: CValuesRef<gsizeVar>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson881_g_key_file_get_keys")
external fun g_key_file_get_keys(key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?, length: CValuesRef<gsizeVar>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson882_g_key_file_has_group")
external fun g_key_file_has_group(key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?): gboolean

@CCall("knifunptr_glibjson883_g_key_file_has_key")
external fun g_key_file_has_key(key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?, @CCall.CString key: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson884_g_key_file_get_value")
external fun g_key_file_get_value(key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?, @CCall.CString key: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson885_g_key_file_set_value")
external fun g_key_file_set_value(key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?, @CCall.CString key: String?, @CCall.CString value: String?): Unit

@CCall("knifunptr_glibjson886_g_key_file_get_string")
external fun g_key_file_get_string(key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?, @CCall.CString key: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson887_g_key_file_set_string")
external fun g_key_file_set_string(key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?, @CCall.CString key: String?, @CCall.CString string: String?): Unit

@CCall("knifunptr_glibjson888_g_key_file_get_locale_string")
external fun g_key_file_get_locale_string(key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?, @CCall.CString key: String?, @CCall.CString locale: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson889_g_key_file_get_locale_for_key")
external fun g_key_file_get_locale_for_key(key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?, @CCall.CString key: String?, @CCall.CString locale: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson890_g_key_file_set_locale_string")
external fun g_key_file_set_locale_string(key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?, @CCall.CString key: String?, @CCall.CString locale: String?, @CCall.CString string: String?): Unit

@CCall("knifunptr_glibjson891_g_key_file_get_boolean")
external fun g_key_file_get_boolean(key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?, @CCall.CString key: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson892_g_key_file_set_boolean")
external fun g_key_file_set_boolean(key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?, @CCall.CString key: String?, value: gboolean): Unit

@CCall("knifunptr_glibjson893_g_key_file_get_integer")
external fun g_key_file_get_integer(key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?, @CCall.CString key: String?, error: CValuesRef<CPointerVar<GError>>?): gint

@CCall("knifunptr_glibjson894_g_key_file_set_integer")
external fun g_key_file_set_integer(key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?, @CCall.CString key: String?, value: gint): Unit

@CCall("knifunptr_glibjson895_g_key_file_get_int64")
external fun g_key_file_get_int64(key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?, @CCall.CString key: String?, error: CValuesRef<CPointerVar<GError>>?): gint64

@CCall("knifunptr_glibjson896_g_key_file_set_int64")
external fun g_key_file_set_int64(key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?, @CCall.CString key: String?, value: gint64): Unit

@CCall("knifunptr_glibjson897_g_key_file_get_uint64")
external fun g_key_file_get_uint64(key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?, @CCall.CString key: String?, error: CValuesRef<CPointerVar<GError>>?): guint64

@CCall("knifunptr_glibjson898_g_key_file_set_uint64")
external fun g_key_file_set_uint64(key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?, @CCall.CString key: String?, value: guint64): Unit

@CCall("knifunptr_glibjson899_g_key_file_get_double")
external fun g_key_file_get_double(key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?, @CCall.CString key: String?, error: CValuesRef<CPointerVar<GError>>?): gdouble

@CCall("knifunptr_glibjson900_g_key_file_set_double")
external fun g_key_file_set_double(key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?, @CCall.CString key: String?, value: gdouble): Unit

@CCall("knifunptr_glibjson901_g_key_file_get_string_list")
external fun g_key_file_get_string_list(key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?, @CCall.CString key: String?, length: CValuesRef<gsizeVar>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson902_g_key_file_set_string_list")
external fun g_key_file_set_string_list(key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?, @CCall.CString key: String?, list: CValuesRef<CPointerVar<gcharVar>>?, length: gsize): Unit

@CCall("knifunptr_glibjson903_g_key_file_get_locale_string_list")
external fun g_key_file_get_locale_string_list(key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?, @CCall.CString key: String?, @CCall.CString locale: String?, length: CValuesRef<gsizeVar>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson904_g_key_file_set_locale_string_list")
external fun g_key_file_set_locale_string_list(key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?, @CCall.CString key: String?, @CCall.CString locale: String?, list: CValuesRef<CPointerVar<gcharVar>>?, length: gsize): Unit

@CCall("knifunptr_glibjson905_g_key_file_get_boolean_list")
external fun g_key_file_get_boolean_list(key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?, @CCall.CString key: String?, length: CValuesRef<gsizeVar>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<gbooleanVar>?

@CCall("knifunptr_glibjson906_g_key_file_set_boolean_list")
external fun g_key_file_set_boolean_list(key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?, @CCall.CString key: String?, list: CValuesRef<gbooleanVar>?, length: gsize): Unit

@CCall("knifunptr_glibjson907_g_key_file_get_integer_list")
external fun g_key_file_get_integer_list(key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?, @CCall.CString key: String?, length: CValuesRef<gsizeVar>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<gintVar>?

@CCall("knifunptr_glibjson908_g_key_file_set_double_list")
external fun g_key_file_set_double_list(key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?, @CCall.CString key: String?, list: CValuesRef<gdoubleVar>?, length: gsize): Unit

@CCall("knifunptr_glibjson909_g_key_file_get_double_list")
external fun g_key_file_get_double_list(key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?, @CCall.CString key: String?, length: CValuesRef<gsizeVar>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<gdoubleVar>?

@CCall("knifunptr_glibjson910_g_key_file_set_integer_list")
external fun g_key_file_set_integer_list(key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?, @CCall.CString key: String?, list: CValuesRef<gintVar>?, length: gsize): Unit

@CCall("knifunptr_glibjson911_g_key_file_set_comment")
external fun g_key_file_set_comment(key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?, @CCall.CString key: String?, @CCall.CString comment: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson912_g_key_file_get_comment")
external fun g_key_file_get_comment(key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?, @CCall.CString key: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson913_g_key_file_remove_comment")
external fun g_key_file_remove_comment(key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?, @CCall.CString key: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson914_g_key_file_remove_key")
external fun g_key_file_remove_key(key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?, @CCall.CString key: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson915_g_key_file_remove_group")
external fun g_key_file_remove_group(key_file: CValuesRef<GKeyFile>?, @CCall.CString group_name: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson916_g_mapped_file_new")
external fun g_mapped_file_new(@CCall.CString filename: String?, writable: gboolean, error: CValuesRef<CPointerVar<GError>>?): CPointer<GMappedFile>?

@CCall("knifunptr_glibjson917_g_mapped_file_new_from_fd")
external fun g_mapped_file_new_from_fd(fd: gint, writable: gboolean, error: CValuesRef<CPointerVar<GError>>?): CPointer<GMappedFile>?

@CCall("knifunptr_glibjson918_g_mapped_file_get_length")
external fun g_mapped_file_get_length(file: CValuesRef<GMappedFile>?): gsize

@CCall("knifunptr_glibjson919_g_mapped_file_get_contents")
external fun g_mapped_file_get_contents(file: CValuesRef<GMappedFile>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson920_g_mapped_file_get_bytes")
external fun g_mapped_file_get_bytes(file: CValuesRef<GMappedFile>?): CPointer<GBytes>?

@CCall("knifunptr_glibjson921_g_mapped_file_ref")
external fun g_mapped_file_ref(file: CValuesRef<GMappedFile>?): CPointer<GMappedFile>?

@CCall("knifunptr_glibjson922_g_mapped_file_unref")
external fun g_mapped_file_unref(file: CValuesRef<GMappedFile>?): Unit

@CCall("knifunptr_glibjson923_g_mapped_file_free")
external fun g_mapped_file_free(file: CValuesRef<GMappedFile>?): Unit

@CCall("knifunptr_glibjson924_g_markup_error_quark")
external fun g_markup_error_quark(): GQuark

@CCall("knifunptr_glibjson925_g_markup_parse_context_new")
external fun g_markup_parse_context_new(parser: CValuesRef<GMarkupParser>?, flags: GMarkupParseFlags, user_data: gpointer?, user_data_dnotify: GDestroyNotify?): CPointer<GMarkupParseContext>?

@CCall("knifunptr_glibjson926_g_markup_parse_context_ref")
external fun g_markup_parse_context_ref(context: CValuesRef<GMarkupParseContext>?): CPointer<GMarkupParseContext>?

@CCall("knifunptr_glibjson927_g_markup_parse_context_unref")
external fun g_markup_parse_context_unref(context: CValuesRef<GMarkupParseContext>?): Unit

@CCall("knifunptr_glibjson928_g_markup_parse_context_free")
external fun g_markup_parse_context_free(context: CValuesRef<GMarkupParseContext>?): Unit

@CCall("knifunptr_glibjson929_g_markup_parse_context_parse")
external fun g_markup_parse_context_parse(context: CValuesRef<GMarkupParseContext>?, @CCall.CString text: String?, text_len: gssize, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson930_g_markup_parse_context_push")
external fun g_markup_parse_context_push(context: CValuesRef<GMarkupParseContext>?, parser: CValuesRef<GMarkupParser>?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson931_g_markup_parse_context_pop")
external fun g_markup_parse_context_pop(context: CValuesRef<GMarkupParseContext>?): gpointer?

@CCall("knifunptr_glibjson932_g_markup_parse_context_end_parse")
external fun g_markup_parse_context_end_parse(context: CValuesRef<GMarkupParseContext>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson933_g_markup_parse_context_get_element")
external fun g_markup_parse_context_get_element(context: CValuesRef<GMarkupParseContext>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson934_g_markup_parse_context_get_element_stack")
external fun g_markup_parse_context_get_element_stack(context: CValuesRef<GMarkupParseContext>?): CPointer<GSList>?

@CCall("knifunptr_glibjson935_g_markup_parse_context_get_position")
external fun g_markup_parse_context_get_position(context: CValuesRef<GMarkupParseContext>?, line_number: CValuesRef<gintVar>?, char_number: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_glibjson936_g_markup_parse_context_get_user_data")
external fun g_markup_parse_context_get_user_data(context: CValuesRef<GMarkupParseContext>?): gpointer?

@CCall("knifunptr_glibjson937_g_markup_escape_text")
external fun g_markup_escape_text(@CCall.CString text: String?, length: gssize): CPointer<gcharVar>?

@CCall("knifunptr_glibjson938_g_markup_printf_escaped")
external fun g_markup_printf_escaped(@CCall.CString format: String?, vararg variadicArguments: Any?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson939_g_markup_vprintf_escaped")
external fun g_markup_vprintf_escaped(@CCall.CString format: String?, args: va_list?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson940_g_markup_collect_attributes")
external fun g_markup_collect_attributes(@CCall.CString element_name: String?, attribute_names: CValuesRef<CPointerVar<gcharVar>>?, attribute_values: CValuesRef<CPointerVar<gcharVar>>?, error: CValuesRef<CPointerVar<GError>>?, first_type: GMarkupCollectType, @CCall.CString first_attr: String?, vararg variadicArguments: Any?): gboolean

@CCall("knifunptr_glibjson941_g_variant_type_string_is_valid")
external fun g_variant_type_string_is_valid(@CCall.CString type_string: String?): gboolean

@CCall("knifunptr_glibjson942_g_variant_type_string_scan")
external fun g_variant_type_string_scan(@CCall.CString string: String?, @CCall.CString limit: String?, endptr: CValuesRef<CPointerVar<gcharVar>>?): gboolean

@CCall("knifunptr_glibjson943_g_variant_type_free")
external fun g_variant_type_free(type: CValuesRef<GVariantType>?): Unit

@CCall("knifunptr_glibjson944_g_variant_type_copy")
external fun g_variant_type_copy(type: CValuesRef<GVariantType>?): CPointer<GVariantType>?

@CCall("knifunptr_glibjson945_g_variant_type_new")
external fun g_variant_type_new(@CCall.CString type_string: String?): CPointer<GVariantType>?

@CCall("knifunptr_glibjson946_g_variant_type_get_string_length")
external fun g_variant_type_get_string_length(type: CValuesRef<GVariantType>?): gsize

@CCall("knifunptr_glibjson947_g_variant_type_peek_string")
external fun g_variant_type_peek_string(type: CValuesRef<GVariantType>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson948_g_variant_type_dup_string")
external fun g_variant_type_dup_string(type: CValuesRef<GVariantType>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson949_g_variant_type_is_definite")
external fun g_variant_type_is_definite(type: CValuesRef<GVariantType>?): gboolean

@CCall("knifunptr_glibjson950_g_variant_type_is_container")
external fun g_variant_type_is_container(type: CValuesRef<GVariantType>?): gboolean

@CCall("knifunptr_glibjson951_g_variant_type_is_basic")
external fun g_variant_type_is_basic(type: CValuesRef<GVariantType>?): gboolean

@CCall("knifunptr_glibjson952_g_variant_type_is_maybe")
external fun g_variant_type_is_maybe(type: CValuesRef<GVariantType>?): gboolean

@CCall("knifunptr_glibjson953_g_variant_type_is_array")
external fun g_variant_type_is_array(type: CValuesRef<GVariantType>?): gboolean

@CCall("knifunptr_glibjson954_g_variant_type_is_tuple")
external fun g_variant_type_is_tuple(type: CValuesRef<GVariantType>?): gboolean

@CCall("knifunptr_glibjson955_g_variant_type_is_dict_entry")
external fun g_variant_type_is_dict_entry(type: CValuesRef<GVariantType>?): gboolean

@CCall("knifunptr_glibjson956_g_variant_type_is_variant")
external fun g_variant_type_is_variant(type: CValuesRef<GVariantType>?): gboolean

@CCall("knifunptr_glibjson957_g_variant_type_hash")
external fun g_variant_type_hash(type: gconstpointer?): guint

@CCall("knifunptr_glibjson958_g_variant_type_equal")
external fun g_variant_type_equal(type1: gconstpointer?, type2: gconstpointer?): gboolean

@CCall("knifunptr_glibjson959_g_variant_type_is_subtype_of")
external fun g_variant_type_is_subtype_of(type: CValuesRef<GVariantType>?, supertype: CValuesRef<GVariantType>?): gboolean

@CCall("knifunptr_glibjson960_g_variant_type_element")
external fun g_variant_type_element(type: CValuesRef<GVariantType>?): CPointer<GVariantType>?

@CCall("knifunptr_glibjson961_g_variant_type_first")
external fun g_variant_type_first(type: CValuesRef<GVariantType>?): CPointer<GVariantType>?

@CCall("knifunptr_glibjson962_g_variant_type_next")
external fun g_variant_type_next(type: CValuesRef<GVariantType>?): CPointer<GVariantType>?

@CCall("knifunptr_glibjson963_g_variant_type_n_items")
external fun g_variant_type_n_items(type: CValuesRef<GVariantType>?): gsize

@CCall("knifunptr_glibjson964_g_variant_type_key")
external fun g_variant_type_key(type: CValuesRef<GVariantType>?): CPointer<GVariantType>?

@CCall("knifunptr_glibjson965_g_variant_type_value")
external fun g_variant_type_value(type: CValuesRef<GVariantType>?): CPointer<GVariantType>?

@CCall("knifunptr_glibjson966_g_variant_type_new_array")
external fun g_variant_type_new_array(element: CValuesRef<GVariantType>?): CPointer<GVariantType>?

@CCall("knifunptr_glibjson967_g_variant_type_new_maybe")
external fun g_variant_type_new_maybe(element: CValuesRef<GVariantType>?): CPointer<GVariantType>?

@CCall("knifunptr_glibjson968_g_variant_type_new_tuple")
external fun g_variant_type_new_tuple(items: CValuesRef<CPointerVar<GVariantType>>?, length: gint): CPointer<GVariantType>?

@CCall("knifunptr_glibjson969_g_variant_type_new_dict_entry")
external fun g_variant_type_new_dict_entry(key: CValuesRef<GVariantType>?, value: CValuesRef<GVariantType>?): CPointer<GVariantType>?

@CCall("knifunptr_glibjson970_g_variant_type_checked_")
external fun g_variant_type_checked_(@CCall.CString arg0: String?): CPointer<GVariantType>?

@CCall("knifunptr_glibjson971_g_variant_type_string_get_depth_")
external fun g_variant_type_string_get_depth_(@CCall.CString type_string: String?): gsize

@CCall("knifunptr_glibjson972_g_variant_unref")
external fun g_variant_unref(value: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_glibjson973_g_variant_ref")
external fun g_variant_ref(value: CValuesRef<GVariant>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson974_g_variant_ref_sink")
external fun g_variant_ref_sink(value: CValuesRef<GVariant>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson975_g_variant_is_floating")
external fun g_variant_is_floating(value: CValuesRef<GVariant>?): gboolean

@CCall("knifunptr_glibjson976_g_variant_take_ref")
external fun g_variant_take_ref(value: CValuesRef<GVariant>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson977_g_variant_get_type")
external fun g_variant_get_type(value: CValuesRef<GVariant>?): CPointer<GVariantType>?

@CCall("knifunptr_glibjson978_g_variant_get_type_string")
external fun g_variant_get_type_string(value: CValuesRef<GVariant>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson979_g_variant_is_of_type")
external fun g_variant_is_of_type(value: CValuesRef<GVariant>?, type: CValuesRef<GVariantType>?): gboolean

@CCall("knifunptr_glibjson980_g_variant_is_container")
external fun g_variant_is_container(value: CValuesRef<GVariant>?): gboolean

@CCall("knifunptr_glibjson981_g_variant_classify")
external fun g_variant_classify(value: CValuesRef<GVariant>?): GVariantClass

@CCall("knifunptr_glibjson982_g_variant_new_boolean")
external fun g_variant_new_boolean(value: gboolean): CPointer<GVariant>?

@CCall("knifunptr_glibjson983_g_variant_new_byte")
external fun g_variant_new_byte(value: guchar): CPointer<GVariant>?

@CCall("knifunptr_glibjson984_g_variant_new_int16")
external fun g_variant_new_int16(value: gint16): CPointer<GVariant>?

@CCall("knifunptr_glibjson985_g_variant_new_uint16")
external fun g_variant_new_uint16(value: guint16): CPointer<GVariant>?

@CCall("knifunptr_glibjson986_g_variant_new_int32")
external fun g_variant_new_int32(value: gint32): CPointer<GVariant>?

@CCall("knifunptr_glibjson987_g_variant_new_uint32")
external fun g_variant_new_uint32(value: guint32): CPointer<GVariant>?

@CCall("knifunptr_glibjson988_g_variant_new_int64")
external fun g_variant_new_int64(value: gint64): CPointer<GVariant>?

@CCall("knifunptr_glibjson989_g_variant_new_uint64")
external fun g_variant_new_uint64(value: guint64): CPointer<GVariant>?

@CCall("knifunptr_glibjson990_g_variant_new_handle")
external fun g_variant_new_handle(value: gint32): CPointer<GVariant>?

@CCall("knifunptr_glibjson991_g_variant_new_double")
external fun g_variant_new_double(value: gdouble): CPointer<GVariant>?

@CCall("knifunptr_glibjson992_g_variant_new_string")
external fun g_variant_new_string(@CCall.CString string: String?): CPointer<GVariant>?

@CCall("knifunptr_glibjson993_g_variant_new_take_string")
external fun g_variant_new_take_string(string: CValuesRef<gcharVar>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson994_g_variant_new_printf")
external fun g_variant_new_printf(@CCall.CString format_string: String?, vararg variadicArguments: Any?): CPointer<GVariant>?

@CCall("knifunptr_glibjson995_g_variant_new_object_path")
external fun g_variant_new_object_path(@CCall.CString object_path: String?): CPointer<GVariant>?

@CCall("knifunptr_glibjson996_g_variant_is_object_path")
external fun g_variant_is_object_path(@CCall.CString string: String?): gboolean

@CCall("knifunptr_glibjson997_g_variant_new_signature")
external fun g_variant_new_signature(@CCall.CString signature: String?): CPointer<GVariant>?

@CCall("knifunptr_glibjson998_g_variant_is_signature")
external fun g_variant_is_signature(@CCall.CString string: String?): gboolean

@CCall("knifunptr_glibjson999_g_variant_new_variant")
external fun g_variant_new_variant(value: CValuesRef<GVariant>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson1000_g_variant_new_strv")
external fun g_variant_new_strv(strv: CValuesRef<CPointerVar<gcharVar>>?, length: gssize): CPointer<GVariant>?

@CCall("knifunptr_glibjson1001_g_variant_new_objv")
external fun g_variant_new_objv(strv: CValuesRef<CPointerVar<gcharVar>>?, length: gssize): CPointer<GVariant>?

@CCall("knifunptr_glibjson1002_g_variant_new_bytestring")
external fun g_variant_new_bytestring(@CCall.CString string: String?): CPointer<GVariant>?

@CCall("knifunptr_glibjson1003_g_variant_new_bytestring_array")
external fun g_variant_new_bytestring_array(strv: CValuesRef<CPointerVar<gcharVar>>?, length: gssize): CPointer<GVariant>?

@CCall("knifunptr_glibjson1004_g_variant_new_fixed_array")
external fun g_variant_new_fixed_array(element_type: CValuesRef<GVariantType>?, elements: gconstpointer?, n_elements: gsize, element_size: gsize): CPointer<GVariant>?

@CCall("knifunptr_glibjson1005_g_variant_get_boolean")
external fun g_variant_get_boolean(value: CValuesRef<GVariant>?): gboolean

@CCall("knifunptr_glibjson1006_g_variant_get_byte")
external fun g_variant_get_byte(value: CValuesRef<GVariant>?): guchar

@CCall("knifunptr_glibjson1007_g_variant_get_int16")
external fun g_variant_get_int16(value: CValuesRef<GVariant>?): gint16

@CCall("knifunptr_glibjson1008_g_variant_get_uint16")
external fun g_variant_get_uint16(value: CValuesRef<GVariant>?): guint16

@CCall("knifunptr_glibjson1009_g_variant_get_int32")
external fun g_variant_get_int32(value: CValuesRef<GVariant>?): gint32

@CCall("knifunptr_glibjson1010_g_variant_get_uint32")
external fun g_variant_get_uint32(value: CValuesRef<GVariant>?): guint32

@CCall("knifunptr_glibjson1011_g_variant_get_int64")
external fun g_variant_get_int64(value: CValuesRef<GVariant>?): gint64

@CCall("knifunptr_glibjson1012_g_variant_get_uint64")
external fun g_variant_get_uint64(value: CValuesRef<GVariant>?): guint64

@CCall("knifunptr_glibjson1013_g_variant_get_handle")
external fun g_variant_get_handle(value: CValuesRef<GVariant>?): gint32

@CCall("knifunptr_glibjson1014_g_variant_get_double")
external fun g_variant_get_double(value: CValuesRef<GVariant>?): gdouble

@CCall("knifunptr_glibjson1015_g_variant_get_variant")
external fun g_variant_get_variant(value: CValuesRef<GVariant>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson1016_g_variant_get_string")
external fun g_variant_get_string(value: CValuesRef<GVariant>?, length: CValuesRef<gsizeVar>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1017_g_variant_dup_string")
external fun g_variant_dup_string(value: CValuesRef<GVariant>?, length: CValuesRef<gsizeVar>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1018_g_variant_get_strv")
external fun g_variant_get_strv(value: CValuesRef<GVariant>?, length: CValuesRef<gsizeVar>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson1019_g_variant_dup_strv")
external fun g_variant_dup_strv(value: CValuesRef<GVariant>?, length: CValuesRef<gsizeVar>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson1020_g_variant_get_objv")
external fun g_variant_get_objv(value: CValuesRef<GVariant>?, length: CValuesRef<gsizeVar>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson1021_g_variant_dup_objv")
external fun g_variant_dup_objv(value: CValuesRef<GVariant>?, length: CValuesRef<gsizeVar>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson1022_g_variant_get_bytestring")
external fun g_variant_get_bytestring(value: CValuesRef<GVariant>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1023_g_variant_dup_bytestring")
external fun g_variant_dup_bytestring(value: CValuesRef<GVariant>?, length: CValuesRef<gsizeVar>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1024_g_variant_get_bytestring_array")
external fun g_variant_get_bytestring_array(value: CValuesRef<GVariant>?, length: CValuesRef<gsizeVar>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson1025_g_variant_dup_bytestring_array")
external fun g_variant_dup_bytestring_array(value: CValuesRef<GVariant>?, length: CValuesRef<gsizeVar>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson1026_g_variant_new_maybe")
external fun g_variant_new_maybe(child_type: CValuesRef<GVariantType>?, child: CValuesRef<GVariant>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson1027_g_variant_new_array")
external fun g_variant_new_array(child_type: CValuesRef<GVariantType>?, children: CValuesRef<CPointerVar<GVariant>>?, n_children: gsize): CPointer<GVariant>?

@CCall("knifunptr_glibjson1028_g_variant_new_tuple")
external fun g_variant_new_tuple(children: CValuesRef<CPointerVar<GVariant>>?, n_children: gsize): CPointer<GVariant>?

@CCall("knifunptr_glibjson1029_g_variant_new_dict_entry")
external fun g_variant_new_dict_entry(key: CValuesRef<GVariant>?, value: CValuesRef<GVariant>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson1030_g_variant_get_maybe")
external fun g_variant_get_maybe(value: CValuesRef<GVariant>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson1031_g_variant_n_children")
external fun g_variant_n_children(value: CValuesRef<GVariant>?): gsize

@CCall("knifunptr_glibjson1032_g_variant_get_child")
external fun g_variant_get_child(value: CValuesRef<GVariant>?, index_: gsize, @CCall.CString format_string: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson1033_g_variant_get_child_value")
external fun g_variant_get_child_value(value: CValuesRef<GVariant>?, index_: gsize): CPointer<GVariant>?

@CCall("knifunptr_glibjson1034_g_variant_lookup")
external fun g_variant_lookup(dictionary: CValuesRef<GVariant>?, @CCall.CString key: String?, @CCall.CString format_string: String?, vararg variadicArguments: Any?): gboolean

@CCall("knifunptr_glibjson1035_g_variant_lookup_value")
external fun g_variant_lookup_value(dictionary: CValuesRef<GVariant>?, @CCall.CString key: String?, expected_type: CValuesRef<GVariantType>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson1036_g_variant_get_fixed_array")
external fun g_variant_get_fixed_array(value: CValuesRef<GVariant>?, n_elements: CValuesRef<gsizeVar>?, element_size: gsize): gconstpointer?

@CCall("knifunptr_glibjson1037_g_variant_get_size")
external fun g_variant_get_size(value: CValuesRef<GVariant>?): gsize

@CCall("knifunptr_glibjson1038_g_variant_get_data")
external fun g_variant_get_data(value: CValuesRef<GVariant>?): gconstpointer?

@CCall("knifunptr_glibjson1039_g_variant_get_data_as_bytes")
external fun g_variant_get_data_as_bytes(value: CValuesRef<GVariant>?): CPointer<GBytes>?

@CCall("knifunptr_glibjson1040_g_variant_store")
external fun g_variant_store(value: CValuesRef<GVariant>?, data: gpointer?): Unit

@CCall("knifunptr_glibjson1041_g_variant_print")
external fun g_variant_print(value: CValuesRef<GVariant>?, type_annotate: gboolean): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1042_g_variant_print_string")
external fun g_variant_print_string(value: CValuesRef<GVariant>?, string: CValuesRef<GString>?, type_annotate: gboolean): CPointer<GString>?

@CCall("knifunptr_glibjson1043_g_variant_hash")
external fun g_variant_hash(value: gconstpointer?): guint

@CCall("knifunptr_glibjson1044_g_variant_equal")
external fun g_variant_equal(one: gconstpointer?, two: gconstpointer?): gboolean

@CCall("knifunptr_glibjson1045_g_variant_get_normal_form")
external fun g_variant_get_normal_form(value: CValuesRef<GVariant>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson1046_g_variant_is_normal_form")
external fun g_variant_is_normal_form(value: CValuesRef<GVariant>?): gboolean

@CCall("knifunptr_glibjson1047_g_variant_byteswap")
external fun g_variant_byteswap(value: CValuesRef<GVariant>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson1048_g_variant_new_from_bytes")
external fun g_variant_new_from_bytes(type: CValuesRef<GVariantType>?, bytes: CValuesRef<GBytes>?, trusted: gboolean): CPointer<GVariant>?

@CCall("knifunptr_glibjson1049_g_variant_new_from_data")
external fun g_variant_new_from_data(type: CValuesRef<GVariantType>?, data: gconstpointer?, size: gsize, trusted: gboolean, notify: GDestroyNotify?, user_data: gpointer?): CPointer<GVariant>?

@CCall("knifunptr_glibjson1050_g_variant_iter_new")
external fun g_variant_iter_new(value: CValuesRef<GVariant>?): CPointer<GVariantIter>?

@CCall("knifunptr_glibjson1051_g_variant_iter_init")
external fun g_variant_iter_init(iter: CValuesRef<GVariantIter>?, value: CValuesRef<GVariant>?): gsize

@CCall("knifunptr_glibjson1052_g_variant_iter_copy")
external fun g_variant_iter_copy(iter: CValuesRef<GVariantIter>?): CPointer<GVariantIter>?

@CCall("knifunptr_glibjson1053_g_variant_iter_n_children")
external fun g_variant_iter_n_children(iter: CValuesRef<GVariantIter>?): gsize

@CCall("knifunptr_glibjson1054_g_variant_iter_free")
external fun g_variant_iter_free(iter: CValuesRef<GVariantIter>?): Unit

@CCall("knifunptr_glibjson1055_g_variant_iter_next_value")
external fun g_variant_iter_next_value(iter: CValuesRef<GVariantIter>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson1056_g_variant_iter_next")
external fun g_variant_iter_next(iter: CValuesRef<GVariantIter>?, @CCall.CString format_string: String?, vararg variadicArguments: Any?): gboolean

@CCall("knifunptr_glibjson1057_g_variant_iter_loop")
external fun g_variant_iter_loop(iter: CValuesRef<GVariantIter>?, @CCall.CString format_string: String?, vararg variadicArguments: Any?): gboolean

@CCall("knifunptr_glibjson1058_g_variant_parser_get_error_quark")
external fun g_variant_parser_get_error_quark(): GQuark

@CCall("knifunptr_glibjson1059_g_variant_parse_error_quark")
external fun g_variant_parse_error_quark(): GQuark

@CCall("knifunptr_glibjson1060_g_variant_builder_new")
external fun g_variant_builder_new(type: CValuesRef<GVariantType>?): CPointer<GVariantBuilder>?

@CCall("knifunptr_glibjson1061_g_variant_builder_unref")
external fun g_variant_builder_unref(builder: CValuesRef<GVariantBuilder>?): Unit

@CCall("knifunptr_glibjson1062_g_variant_builder_ref")
external fun g_variant_builder_ref(builder: CValuesRef<GVariantBuilder>?): CPointer<GVariantBuilder>?

@CCall("knifunptr_glibjson1063_g_variant_builder_init")
external fun g_variant_builder_init(builder: CValuesRef<GVariantBuilder>?, type: CValuesRef<GVariantType>?): Unit

@CCall("knifunptr_glibjson1064_g_variant_builder_end")
external fun g_variant_builder_end(builder: CValuesRef<GVariantBuilder>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson1065_g_variant_builder_clear")
external fun g_variant_builder_clear(builder: CValuesRef<GVariantBuilder>?): Unit

@CCall("knifunptr_glibjson1066_g_variant_builder_open")
external fun g_variant_builder_open(builder: CValuesRef<GVariantBuilder>?, type: CValuesRef<GVariantType>?): Unit

@CCall("knifunptr_glibjson1067_g_variant_builder_close")
external fun g_variant_builder_close(builder: CValuesRef<GVariantBuilder>?): Unit

@CCall("knifunptr_glibjson1068_g_variant_builder_add_value")
external fun g_variant_builder_add_value(builder: CValuesRef<GVariantBuilder>?, value: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_glibjson1069_g_variant_builder_add")
external fun g_variant_builder_add(builder: CValuesRef<GVariantBuilder>?, @CCall.CString format_string: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson1070_g_variant_builder_add_parsed")
external fun g_variant_builder_add_parsed(builder: CValuesRef<GVariantBuilder>?, @CCall.CString format: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson1071_g_variant_new")
external fun g_variant_new(@CCall.CString format_string: String?, vararg variadicArguments: Any?): CPointer<GVariant>?

@CCall("knifunptr_glibjson1072_g_variant_get")
external fun g_variant_get(value: CValuesRef<GVariant>?, @CCall.CString format_string: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson1073_g_variant_new_va")
external fun g_variant_new_va(@CCall.CString format_string: String?, endptr: CValuesRef<CPointerVar<gcharVar>>?, app: va_list?): CPointer<GVariant>?

@CCall("knifunptr_glibjson1074_g_variant_get_va")
external fun g_variant_get_va(value: CValuesRef<GVariant>?, @CCall.CString format_string: String?, endptr: CValuesRef<CPointerVar<gcharVar>>?, app: va_list?): Unit

@CCall("knifunptr_glibjson1075_g_variant_check_format_string")
external fun g_variant_check_format_string(value: CValuesRef<GVariant>?, @CCall.CString format_string: String?, copy_only: gboolean): gboolean

@CCall("knifunptr_glibjson1076_g_variant_parse")
external fun g_variant_parse(type: CValuesRef<GVariantType>?, @CCall.CString text: String?, @CCall.CString limit: String?, endptr: CValuesRef<CPointerVar<gcharVar>>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson1077_g_variant_new_parsed")
external fun g_variant_new_parsed(@CCall.CString format: String?, vararg variadicArguments: Any?): CPointer<GVariant>?

@CCall("knifunptr_glibjson1078_g_variant_new_parsed_va")
external fun g_variant_new_parsed_va(@CCall.CString format: String?, app: va_list?): CPointer<GVariant>?

@CCall("knifunptr_glibjson1079_g_variant_parse_error_print_context")
external fun g_variant_parse_error_print_context(error: CValuesRef<GError>?, @CCall.CString source_str: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1080_g_variant_compare")
external fun g_variant_compare(one: gconstpointer?, two: gconstpointer?): gint

@CCall("knifunptr_glibjson1081_g_variant_dict_new")
external fun g_variant_dict_new(from_asv: CValuesRef<GVariant>?): CPointer<GVariantDict>?

@CCall("knifunptr_glibjson1082_g_variant_dict_init")
external fun g_variant_dict_init(dict: CValuesRef<GVariantDict>?, from_asv: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_glibjson1083_g_variant_dict_lookup")
external fun g_variant_dict_lookup(dict: CValuesRef<GVariantDict>?, @CCall.CString key: String?, @CCall.CString format_string: String?, vararg variadicArguments: Any?): gboolean

@CCall("knifunptr_glibjson1084_g_variant_dict_lookup_value")
external fun g_variant_dict_lookup_value(dict: CValuesRef<GVariantDict>?, @CCall.CString key: String?, expected_type: CValuesRef<GVariantType>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson1085_g_variant_dict_contains")
external fun g_variant_dict_contains(dict: CValuesRef<GVariantDict>?, @CCall.CString key: String?): gboolean

@CCall("knifunptr_glibjson1086_g_variant_dict_insert")
external fun g_variant_dict_insert(dict: CValuesRef<GVariantDict>?, @CCall.CString key: String?, @CCall.CString format_string: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson1087_g_variant_dict_insert_value")
external fun g_variant_dict_insert_value(dict: CValuesRef<GVariantDict>?, @CCall.CString key: String?, value: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_glibjson1088_g_variant_dict_remove")
external fun g_variant_dict_remove(dict: CValuesRef<GVariantDict>?, @CCall.CString key: String?): gboolean

@CCall("knifunptr_glibjson1089_g_variant_dict_clear")
external fun g_variant_dict_clear(dict: CValuesRef<GVariantDict>?): Unit

@CCall("knifunptr_glibjson1090_g_variant_dict_end")
external fun g_variant_dict_end(dict: CValuesRef<GVariantDict>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson1091_g_variant_dict_ref")
external fun g_variant_dict_ref(dict: CValuesRef<GVariantDict>?): CPointer<GVariantDict>?

@CCall("knifunptr_glibjson1092_g_variant_dict_unref")
external fun g_variant_dict_unref(dict: CValuesRef<GVariantDict>?): Unit

@CCall("knifunptr_glibjson1093_g_printf_string_upper_bound")
external fun g_printf_string_upper_bound(@CCall.CString format: String?, args: va_list?): gsize

@CCall("knifunptr_glibjson1094_g_log_set_handler")
external fun g_log_set_handler(@CCall.CString log_domain: String?, log_levels: GLogLevelFlags, log_func: GLogFunc?, user_data: gpointer?): guint

@CCall("knifunptr_glibjson1095_g_log_set_handler_full")
external fun g_log_set_handler_full(@CCall.CString log_domain: String?, log_levels: GLogLevelFlags, log_func: GLogFunc?, user_data: gpointer?, destroy: GDestroyNotify?): guint

@CCall("knifunptr_glibjson1096_g_log_remove_handler")
external fun g_log_remove_handler(@CCall.CString log_domain: String?, handler_id: guint): Unit

@CCall("knifunptr_glibjson1097_g_log_default_handler")
external fun g_log_default_handler(@CCall.CString log_domain: String?, log_level: GLogLevelFlags, @CCall.CString message: String?, unused_data: gpointer?): Unit

@CCall("knifunptr_glibjson1098_g_log_set_default_handler")
external fun g_log_set_default_handler(log_func: GLogFunc?, user_data: gpointer?): GLogFunc?

@CCall("knifunptr_glibjson1099_g_log")
external fun g_log(@CCall.CString log_domain: String?, log_level: GLogLevelFlags, @CCall.CString format: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson1100_g_logv")
external fun g_logv(@CCall.CString log_domain: String?, log_level: GLogLevelFlags, @CCall.CString format: String?, args: va_list?): Unit

@CCall("knifunptr_glibjson1101_g_log_set_fatal_mask")
external fun g_log_set_fatal_mask(@CCall.CString log_domain: String?, fatal_mask: GLogLevelFlags): GLogLevelFlags

@CCall("knifunptr_glibjson1102_g_log_set_always_fatal")
external fun g_log_set_always_fatal(fatal_mask: GLogLevelFlags): GLogLevelFlags

@CCall("knifunptr_glibjson1103_g_log_structured")
external fun g_log_structured(@CCall.CString log_domain: String?, log_level: GLogLevelFlags, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson1104_g_log_structured_array")
external fun g_log_structured_array(log_level: GLogLevelFlags, fields: CValuesRef<GLogField>?, n_fields: gsize): Unit

@CCall("knifunptr_glibjson1105_g_log_variant")
external fun g_log_variant(@CCall.CString log_domain: String?, log_level: GLogLevelFlags, fields: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_glibjson1106_g_log_set_writer_func")
external fun g_log_set_writer_func(func: GLogWriterFunc?, user_data: gpointer?, user_data_free: GDestroyNotify?): Unit

@CCall("knifunptr_glibjson1107_g_log_writer_supports_color")
external fun g_log_writer_supports_color(output_fd: gint): gboolean

@CCall("knifunptr_glibjson1108_g_log_writer_is_journald")
external fun g_log_writer_is_journald(output_fd: gint): gboolean

@CCall("knifunptr_glibjson1109_g_log_writer_format_fields")
external fun g_log_writer_format_fields(log_level: GLogLevelFlags, fields: CValuesRef<GLogField>?, n_fields: gsize, use_color: gboolean): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1110_g_log_writer_journald")
external fun g_log_writer_journald(log_level: GLogLevelFlags, fields: CValuesRef<GLogField>?, n_fields: gsize, user_data: gpointer?): GLogWriterOutput

@CCall("knifunptr_glibjson1111_g_log_writer_standard_streams")
external fun g_log_writer_standard_streams(log_level: GLogLevelFlags, fields: CValuesRef<GLogField>?, n_fields: gsize, user_data: gpointer?): GLogWriterOutput

@CCall("knifunptr_glibjson1112_g_log_writer_default")
external fun g_log_writer_default(log_level: GLogLevelFlags, fields: CValuesRef<GLogField>?, n_fields: gsize, user_data: gpointer?): GLogWriterOutput

@CCall("knifunptr_glibjson1113__g_log_fallback_handler")
external fun _g_log_fallback_handler(@CCall.CString log_domain: String?, log_level: GLogLevelFlags, @CCall.CString message: String?, unused_data: gpointer?): Unit

@CCall("knifunptr_glibjson1114_g_return_if_fail_warning")
external fun g_return_if_fail_warning(@CCall.CString log_domain: String?, @CCall.CString pretty_function: String?, @CCall.CString expression: String?): Unit

@CCall("knifunptr_glibjson1115_g_warn_message")
external fun g_warn_message(@CCall.CString domain: String?, @CCall.CString file: String?, line: Int, @CCall.CString func: String?, @CCall.CString warnexpr: String?): Unit

@CCall("knifunptr_glibjson1116_g_assert_warning")
external fun g_assert_warning(@CCall.CString log_domain: String?, @CCall.CString file: String?, line: Int, @CCall.CString pretty_function: String?, @CCall.CString expression: String?): Unit

@CCall("knifunptr_glibjson1117_g_log_structured_standard")
external fun g_log_structured_standard(@CCall.CString log_domain: String?, log_level: GLogLevelFlags, @CCall.CString file: String?, @CCall.CString line: String?, @CCall.CString func: String?, @CCall.CString message_format: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson1118_g_print")
external fun g_print(@CCall.CString format: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson1119_g_set_print_handler")
external fun g_set_print_handler(func: GPrintFunc?): GPrintFunc?

@CCall("knifunptr_glibjson1120_g_printerr")
external fun g_printerr(@CCall.CString format: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson1121_g_set_printerr_handler")
external fun g_set_printerr_handler(func: GPrintFunc?): GPrintFunc?

@CCall("knifunptr_glibjson1122_g_option_error_quark")
external fun g_option_error_quark(): GQuark

@CCall("knifunptr_glibjson1123_g_option_context_new")
external fun g_option_context_new(@CCall.CString parameter_string: String?): CPointer<GOptionContext>?

@CCall("knifunptr_glibjson1124_g_option_context_set_summary")
external fun g_option_context_set_summary(context: CValuesRef<GOptionContext>?, @CCall.CString summary: String?): Unit

@CCall("knifunptr_glibjson1125_g_option_context_get_summary")
external fun g_option_context_get_summary(context: CValuesRef<GOptionContext>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1126_g_option_context_set_description")
external fun g_option_context_set_description(context: CValuesRef<GOptionContext>?, @CCall.CString description: String?): Unit

@CCall("knifunptr_glibjson1127_g_option_context_get_description")
external fun g_option_context_get_description(context: CValuesRef<GOptionContext>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1128_g_option_context_free")
external fun g_option_context_free(context: CValuesRef<GOptionContext>?): Unit

@CCall("knifunptr_glibjson1129_g_option_context_set_help_enabled")
external fun g_option_context_set_help_enabled(context: CValuesRef<GOptionContext>?, help_enabled: gboolean): Unit

@CCall("knifunptr_glibjson1130_g_option_context_get_help_enabled")
external fun g_option_context_get_help_enabled(context: CValuesRef<GOptionContext>?): gboolean

@CCall("knifunptr_glibjson1131_g_option_context_set_ignore_unknown_options")
external fun g_option_context_set_ignore_unknown_options(context: CValuesRef<GOptionContext>?, ignore_unknown: gboolean): Unit

@CCall("knifunptr_glibjson1132_g_option_context_get_ignore_unknown_options")
external fun g_option_context_get_ignore_unknown_options(context: CValuesRef<GOptionContext>?): gboolean

@CCall("knifunptr_glibjson1133_g_option_context_set_strict_posix")
external fun g_option_context_set_strict_posix(context: CValuesRef<GOptionContext>?, strict_posix: gboolean): Unit

@CCall("knifunptr_glibjson1134_g_option_context_get_strict_posix")
external fun g_option_context_get_strict_posix(context: CValuesRef<GOptionContext>?): gboolean

@CCall("knifunptr_glibjson1135_g_option_context_add_main_entries")
external fun g_option_context_add_main_entries(context: CValuesRef<GOptionContext>?, entries: CValuesRef<GOptionEntry>?, @CCall.CString translation_domain: String?): Unit

@CCall("knifunptr_glibjson1136_g_option_context_parse")
external fun g_option_context_parse(context: CValuesRef<GOptionContext>?, argc: CValuesRef<gintVar>?, argv: CValuesRef<CPointerVar<CPointerVar<gcharVar>>>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson1137_g_option_context_parse_strv")
external fun g_option_context_parse_strv(context: CValuesRef<GOptionContext>?, arguments: CValuesRef<CPointerVar<CPointerVar<gcharVar>>>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson1138_g_option_context_set_translate_func")
external fun g_option_context_set_translate_func(context: CValuesRef<GOptionContext>?, func: GTranslateFunc?, data: gpointer?, destroy_notify: GDestroyNotify?): Unit

@CCall("knifunptr_glibjson1139_g_option_context_set_translation_domain")
external fun g_option_context_set_translation_domain(context: CValuesRef<GOptionContext>?, @CCall.CString domain: String?): Unit

@CCall("knifunptr_glibjson1140_g_option_context_add_group")
external fun g_option_context_add_group(context: CValuesRef<GOptionContext>?, group: CValuesRef<GOptionGroup>?): Unit

@CCall("knifunptr_glibjson1141_g_option_context_set_main_group")
external fun g_option_context_set_main_group(context: CValuesRef<GOptionContext>?, group: CValuesRef<GOptionGroup>?): Unit

@CCall("knifunptr_glibjson1142_g_option_context_get_main_group")
external fun g_option_context_get_main_group(context: CValuesRef<GOptionContext>?): CPointer<GOptionGroup>?

@CCall("knifunptr_glibjson1143_g_option_context_get_help")
external fun g_option_context_get_help(context: CValuesRef<GOptionContext>?, main_help: gboolean, group: CValuesRef<GOptionGroup>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1144_g_option_group_new")
external fun g_option_group_new(@CCall.CString name: String?, @CCall.CString description: String?, @CCall.CString help_description: String?, user_data: gpointer?, destroy: GDestroyNotify?): CPointer<GOptionGroup>?

@CCall("knifunptr_glibjson1145_g_option_group_set_parse_hooks")
external fun g_option_group_set_parse_hooks(group: CValuesRef<GOptionGroup>?, pre_parse_func: GOptionParseFunc?, post_parse_func: GOptionParseFunc?): Unit

@CCall("knifunptr_glibjson1146_g_option_group_set_error_hook")
external fun g_option_group_set_error_hook(group: CValuesRef<GOptionGroup>?, error_func: GOptionErrorFunc?): Unit

@CCall("knifunptr_glibjson1147_g_option_group_free")
external fun g_option_group_free(group: CValuesRef<GOptionGroup>?): Unit

@CCall("knifunptr_glibjson1148_g_option_group_ref")
external fun g_option_group_ref(group: CValuesRef<GOptionGroup>?): CPointer<GOptionGroup>?

@CCall("knifunptr_glibjson1149_g_option_group_unref")
external fun g_option_group_unref(group: CValuesRef<GOptionGroup>?): Unit

@CCall("knifunptr_glibjson1150_g_option_group_add_entries")
external fun g_option_group_add_entries(group: CValuesRef<GOptionGroup>?, entries: CValuesRef<GOptionEntry>?): Unit

@CCall("knifunptr_glibjson1151_g_option_group_set_translate_func")
external fun g_option_group_set_translate_func(group: CValuesRef<GOptionGroup>?, func: GTranslateFunc?, data: gpointer?, destroy_notify: GDestroyNotify?): Unit

@CCall("knifunptr_glibjson1152_g_option_group_set_translation_domain")
external fun g_option_group_set_translation_domain(group: CValuesRef<GOptionGroup>?, @CCall.CString domain: String?): Unit

@CCall("knifunptr_glibjson1153_g_pattern_spec_new")
external fun g_pattern_spec_new(@CCall.CString pattern: String?): CPointer<GPatternSpec>?

@CCall("knifunptr_glibjson1154_g_pattern_spec_free")
external fun g_pattern_spec_free(pspec: CValuesRef<GPatternSpec>?): Unit

@CCall("knifunptr_glibjson1155_g_pattern_spec_equal")
external fun g_pattern_spec_equal(pspec1: CValuesRef<GPatternSpec>?, pspec2: CValuesRef<GPatternSpec>?): gboolean

@CCall("knifunptr_glibjson1156_g_pattern_match")
external fun g_pattern_match(pspec: CValuesRef<GPatternSpec>?, string_length: guint, @CCall.CString string: String?, @CCall.CString string_reversed: String?): gboolean

@CCall("knifunptr_glibjson1157_g_pattern_match_string")
external fun g_pattern_match_string(pspec: CValuesRef<GPatternSpec>?, @CCall.CString string: String?): gboolean

@CCall("knifunptr_glibjson1158_g_pattern_match_simple")
external fun g_pattern_match_simple(@CCall.CString pattern: String?, @CCall.CString string: String?): gboolean

@CCall("knifunptr_glibjson1159_g_spaced_primes_closest")
external fun g_spaced_primes_closest(num: guint): guint

@CCall("knifunptr_glibjson1160_g_qsort_with_data")
external fun g_qsort_with_data(pbase: gconstpointer?, total_elems: gint, size: gsize, compare_func: GCompareDataFunc?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson1161_g_queue_new")
external fun g_queue_new(): CPointer<GQueue>?

@CCall("knifunptr_glibjson1162_g_queue_free")
external fun g_queue_free(queue: CValuesRef<GQueue>?): Unit

@CCall("knifunptr_glibjson1163_g_queue_free_full")
external fun g_queue_free_full(queue: CValuesRef<GQueue>?, free_func: GDestroyNotify?): Unit

@CCall("knifunptr_glibjson1164_g_queue_init")
external fun g_queue_init(queue: CValuesRef<GQueue>?): Unit

@CCall("knifunptr_glibjson1165_g_queue_clear")
external fun g_queue_clear(queue: CValuesRef<GQueue>?): Unit

@CCall("knifunptr_glibjson1166_g_queue_is_empty")
external fun g_queue_is_empty(queue: CValuesRef<GQueue>?): gboolean

@CCall("knifunptr_glibjson1167_g_queue_get_length")
external fun g_queue_get_length(queue: CValuesRef<GQueue>?): guint

@CCall("knifunptr_glibjson1168_g_queue_reverse")
external fun g_queue_reverse(queue: CValuesRef<GQueue>?): Unit

@CCall("knifunptr_glibjson1169_g_queue_copy")
external fun g_queue_copy(queue: CValuesRef<GQueue>?): CPointer<GQueue>?

@CCall("knifunptr_glibjson1170_g_queue_foreach")
external fun g_queue_foreach(queue: CValuesRef<GQueue>?, func: GFunc?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson1171_g_queue_find")
external fun g_queue_find(queue: CValuesRef<GQueue>?, data: gconstpointer?): CPointer<GList>?

@CCall("knifunptr_glibjson1172_g_queue_find_custom")
external fun g_queue_find_custom(queue: CValuesRef<GQueue>?, data: gconstpointer?, func: GCompareFunc?): CPointer<GList>?

@CCall("knifunptr_glibjson1173_g_queue_sort")
external fun g_queue_sort(queue: CValuesRef<GQueue>?, compare_func: GCompareDataFunc?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson1174_g_queue_push_head")
external fun g_queue_push_head(queue: CValuesRef<GQueue>?, data: gpointer?): Unit

@CCall("knifunptr_glibjson1175_g_queue_push_tail")
external fun g_queue_push_tail(queue: CValuesRef<GQueue>?, data: gpointer?): Unit

@CCall("knifunptr_glibjson1176_g_queue_push_nth")
external fun g_queue_push_nth(queue: CValuesRef<GQueue>?, data: gpointer?, n: gint): Unit

@CCall("knifunptr_glibjson1177_g_queue_pop_head")
external fun g_queue_pop_head(queue: CValuesRef<GQueue>?): gpointer?

@CCall("knifunptr_glibjson1178_g_queue_pop_tail")
external fun g_queue_pop_tail(queue: CValuesRef<GQueue>?): gpointer?

@CCall("knifunptr_glibjson1179_g_queue_pop_nth")
external fun g_queue_pop_nth(queue: CValuesRef<GQueue>?, n: guint): gpointer?

@CCall("knifunptr_glibjson1180_g_queue_peek_head")
external fun g_queue_peek_head(queue: CValuesRef<GQueue>?): gpointer?

@CCall("knifunptr_glibjson1181_g_queue_peek_tail")
external fun g_queue_peek_tail(queue: CValuesRef<GQueue>?): gpointer?

@CCall("knifunptr_glibjson1182_g_queue_peek_nth")
external fun g_queue_peek_nth(queue: CValuesRef<GQueue>?, n: guint): gpointer?

@CCall("knifunptr_glibjson1183_g_queue_index")
external fun g_queue_index(queue: CValuesRef<GQueue>?, data: gconstpointer?): gint

@CCall("knifunptr_glibjson1184_g_queue_remove")
external fun g_queue_remove(queue: CValuesRef<GQueue>?, data: gconstpointer?): gboolean

@CCall("knifunptr_glibjson1185_g_queue_remove_all")
external fun g_queue_remove_all(queue: CValuesRef<GQueue>?, data: gconstpointer?): guint

@CCall("knifunptr_glibjson1186_g_queue_insert_before")
external fun g_queue_insert_before(queue: CValuesRef<GQueue>?, sibling: CValuesRef<GList>?, data: gpointer?): Unit

@CCall("knifunptr_glibjson1187_g_queue_insert_after")
external fun g_queue_insert_after(queue: CValuesRef<GQueue>?, sibling: CValuesRef<GList>?, data: gpointer?): Unit

@CCall("knifunptr_glibjson1188_g_queue_insert_sorted")
external fun g_queue_insert_sorted(queue: CValuesRef<GQueue>?, data: gpointer?, func: GCompareDataFunc?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson1189_g_queue_push_head_link")
external fun g_queue_push_head_link(queue: CValuesRef<GQueue>?, link_: CValuesRef<GList>?): Unit

@CCall("knifunptr_glibjson1190_g_queue_push_tail_link")
external fun g_queue_push_tail_link(queue: CValuesRef<GQueue>?, link_: CValuesRef<GList>?): Unit

@CCall("knifunptr_glibjson1191_g_queue_push_nth_link")
external fun g_queue_push_nth_link(queue: CValuesRef<GQueue>?, n: gint, link_: CValuesRef<GList>?): Unit

@CCall("knifunptr_glibjson1192_g_queue_pop_head_link")
external fun g_queue_pop_head_link(queue: CValuesRef<GQueue>?): CPointer<GList>?

@CCall("knifunptr_glibjson1193_g_queue_pop_tail_link")
external fun g_queue_pop_tail_link(queue: CValuesRef<GQueue>?): CPointer<GList>?

@CCall("knifunptr_glibjson1194_g_queue_pop_nth_link")
external fun g_queue_pop_nth_link(queue: CValuesRef<GQueue>?, n: guint): CPointer<GList>?

@CCall("knifunptr_glibjson1195_g_queue_peek_head_link")
external fun g_queue_peek_head_link(queue: CValuesRef<GQueue>?): CPointer<GList>?

@CCall("knifunptr_glibjson1196_g_queue_peek_tail_link")
external fun g_queue_peek_tail_link(queue: CValuesRef<GQueue>?): CPointer<GList>?

@CCall("knifunptr_glibjson1197_g_queue_peek_nth_link")
external fun g_queue_peek_nth_link(queue: CValuesRef<GQueue>?, n: guint): CPointer<GList>?

@CCall("knifunptr_glibjson1198_g_queue_link_index")
external fun g_queue_link_index(queue: CValuesRef<GQueue>?, link_: CValuesRef<GList>?): gint

@CCall("knifunptr_glibjson1199_g_queue_unlink")
external fun g_queue_unlink(queue: CValuesRef<GQueue>?, link_: CValuesRef<GList>?): Unit

@CCall("knifunptr_glibjson1200_g_queue_delete_link")
external fun g_queue_delete_link(queue: CValuesRef<GQueue>?, link_: CValuesRef<GList>?): Unit

@CCall("knifunptr_glibjson1201_g_rand_new_with_seed")
external fun g_rand_new_with_seed(seed: guint32): CPointer<GRand>?

@CCall("knifunptr_glibjson1202_g_rand_new_with_seed_array")
external fun g_rand_new_with_seed_array(seed: CValuesRef<guint32Var>?, seed_length: guint): CPointer<GRand>?

@CCall("knifunptr_glibjson1203_g_rand_new")
external fun g_rand_new(): CPointer<GRand>?

@CCall("knifunptr_glibjson1204_g_rand_free")
external fun g_rand_free(rand_: CValuesRef<GRand>?): Unit

@CCall("knifunptr_glibjson1205_g_rand_copy")
external fun g_rand_copy(rand_: CValuesRef<GRand>?): CPointer<GRand>?

@CCall("knifunptr_glibjson1206_g_rand_set_seed")
external fun g_rand_set_seed(rand_: CValuesRef<GRand>?, seed: guint32): Unit

@CCall("knifunptr_glibjson1207_g_rand_set_seed_array")
external fun g_rand_set_seed_array(rand_: CValuesRef<GRand>?, seed: CValuesRef<guint32Var>?, seed_length: guint): Unit

@CCall("knifunptr_glibjson1208_g_rand_int")
external fun g_rand_int(rand_: CValuesRef<GRand>?): guint32

@CCall("knifunptr_glibjson1209_g_rand_int_range")
external fun g_rand_int_range(rand_: CValuesRef<GRand>?, begin: gint32, end: gint32): gint32

@CCall("knifunptr_glibjson1210_g_rand_double")
external fun g_rand_double(rand_: CValuesRef<GRand>?): gdouble

@CCall("knifunptr_glibjson1211_g_rand_double_range")
external fun g_rand_double_range(rand_: CValuesRef<GRand>?, begin: gdouble, end: gdouble): gdouble

@CCall("knifunptr_glibjson1212_g_random_set_seed")
external fun g_random_set_seed(seed: guint32): Unit

@CCall("knifunptr_glibjson1213_g_random_int")
external fun g_random_int(): guint32

@CCall("knifunptr_glibjson1214_g_random_int_range")
external fun g_random_int_range(begin: gint32, end: gint32): gint32

@CCall("knifunptr_glibjson1215_g_random_double")
external fun g_random_double(): gdouble

@CCall("knifunptr_glibjson1216_g_random_double_range")
external fun g_random_double_range(begin: gdouble, end: gdouble): gdouble

@CCall("knifunptr_glibjson1217_g_regex_error_quark")
external fun g_regex_error_quark(): GQuark

@CCall("knifunptr_glibjson1218_g_regex_new")
external fun g_regex_new(@CCall.CString pattern: String?, compile_options: GRegexCompileFlags, match_options: GRegexMatchFlags, error: CValuesRef<CPointerVar<GError>>?): CPointer<GRegex>?

@CCall("knifunptr_glibjson1219_g_regex_ref")
external fun g_regex_ref(regex: CValuesRef<GRegex>?): CPointer<GRegex>?

@CCall("knifunptr_glibjson1220_g_regex_unref")
external fun g_regex_unref(regex: CValuesRef<GRegex>?): Unit

@CCall("knifunptr_glibjson1221_g_regex_get_pattern")
external fun g_regex_get_pattern(regex: CValuesRef<GRegex>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1222_g_regex_get_max_backref")
external fun g_regex_get_max_backref(regex: CValuesRef<GRegex>?): gint

@CCall("knifunptr_glibjson1223_g_regex_get_capture_count")
external fun g_regex_get_capture_count(regex: CValuesRef<GRegex>?): gint

@CCall("knifunptr_glibjson1224_g_regex_get_has_cr_or_lf")
external fun g_regex_get_has_cr_or_lf(regex: CValuesRef<GRegex>?): gboolean

@CCall("knifunptr_glibjson1225_g_regex_get_max_lookbehind")
external fun g_regex_get_max_lookbehind(regex: CValuesRef<GRegex>?): gint

@CCall("knifunptr_glibjson1226_g_regex_get_string_number")
external fun g_regex_get_string_number(regex: CValuesRef<GRegex>?, @CCall.CString name: String?): gint

@CCall("knifunptr_glibjson1227_g_regex_escape_string")
external fun g_regex_escape_string(@CCall.CString string: String?, length: gint): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1228_g_regex_escape_nul")
external fun g_regex_escape_nul(@CCall.CString string: String?, length: gint): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1229_g_regex_get_compile_flags")
external fun g_regex_get_compile_flags(regex: CValuesRef<GRegex>?): GRegexCompileFlags

@CCall("knifunptr_glibjson1230_g_regex_get_match_flags")
external fun g_regex_get_match_flags(regex: CValuesRef<GRegex>?): GRegexMatchFlags

@CCall("knifunptr_glibjson1231_g_regex_match_simple")
external fun g_regex_match_simple(@CCall.CString pattern: String?, @CCall.CString string: String?, compile_options: GRegexCompileFlags, match_options: GRegexMatchFlags): gboolean

@CCall("knifunptr_glibjson1232_g_regex_match")
external fun g_regex_match(regex: CValuesRef<GRegex>?, @CCall.CString string: String?, match_options: GRegexMatchFlags, match_info: CValuesRef<CPointerVar<GMatchInfo>>?): gboolean

@CCall("knifunptr_glibjson1233_g_regex_match_full")
external fun g_regex_match_full(regex: CValuesRef<GRegex>?, @CCall.CString string: String?, string_len: gssize, start_position: gint, match_options: GRegexMatchFlags, match_info: CValuesRef<CPointerVar<GMatchInfo>>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson1234_g_regex_match_all")
external fun g_regex_match_all(regex: CValuesRef<GRegex>?, @CCall.CString string: String?, match_options: GRegexMatchFlags, match_info: CValuesRef<CPointerVar<GMatchInfo>>?): gboolean

@CCall("knifunptr_glibjson1235_g_regex_match_all_full")
external fun g_regex_match_all_full(regex: CValuesRef<GRegex>?, @CCall.CString string: String?, string_len: gssize, start_position: gint, match_options: GRegexMatchFlags, match_info: CValuesRef<CPointerVar<GMatchInfo>>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson1236_g_regex_split_simple")
external fun g_regex_split_simple(@CCall.CString pattern: String?, @CCall.CString string: String?, compile_options: GRegexCompileFlags, match_options: GRegexMatchFlags): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson1237_g_regex_split")
external fun g_regex_split(regex: CValuesRef<GRegex>?, @CCall.CString string: String?, match_options: GRegexMatchFlags): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson1238_g_regex_split_full")
external fun g_regex_split_full(regex: CValuesRef<GRegex>?, @CCall.CString string: String?, string_len: gssize, start_position: gint, match_options: GRegexMatchFlags, max_tokens: gint, error: CValuesRef<CPointerVar<GError>>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson1239_g_regex_replace")
external fun g_regex_replace(regex: CValuesRef<GRegex>?, @CCall.CString string: String?, string_len: gssize, start_position: gint, @CCall.CString replacement: String?, match_options: GRegexMatchFlags, error: CValuesRef<CPointerVar<GError>>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1240_g_regex_replace_literal")
external fun g_regex_replace_literal(regex: CValuesRef<GRegex>?, @CCall.CString string: String?, string_len: gssize, start_position: gint, @CCall.CString replacement: String?, match_options: GRegexMatchFlags, error: CValuesRef<CPointerVar<GError>>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1241_g_regex_replace_eval")
external fun g_regex_replace_eval(regex: CValuesRef<GRegex>?, @CCall.CString string: String?, string_len: gssize, start_position: gint, match_options: GRegexMatchFlags, eval: GRegexEvalCallback?, user_data: gpointer?, error: CValuesRef<CPointerVar<GError>>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1242_g_regex_check_replacement")
external fun g_regex_check_replacement(@CCall.CString replacement: String?, has_references: CValuesRef<gbooleanVar>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson1243_g_match_info_get_regex")
external fun g_match_info_get_regex(match_info: CValuesRef<GMatchInfo>?): CPointer<GRegex>?

@CCall("knifunptr_glibjson1244_g_match_info_get_string")
external fun g_match_info_get_string(match_info: CValuesRef<GMatchInfo>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1245_g_match_info_ref")
external fun g_match_info_ref(match_info: CValuesRef<GMatchInfo>?): CPointer<GMatchInfo>?

@CCall("knifunptr_glibjson1246_g_match_info_unref")
external fun g_match_info_unref(match_info: CValuesRef<GMatchInfo>?): Unit

@CCall("knifunptr_glibjson1247_g_match_info_free")
external fun g_match_info_free(match_info: CValuesRef<GMatchInfo>?): Unit

@CCall("knifunptr_glibjson1248_g_match_info_next")
external fun g_match_info_next(match_info: CValuesRef<GMatchInfo>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson1249_g_match_info_matches")
external fun g_match_info_matches(match_info: CValuesRef<GMatchInfo>?): gboolean

@CCall("knifunptr_glibjson1250_g_match_info_get_match_count")
external fun g_match_info_get_match_count(match_info: CValuesRef<GMatchInfo>?): gint

@CCall("knifunptr_glibjson1251_g_match_info_is_partial_match")
external fun g_match_info_is_partial_match(match_info: CValuesRef<GMatchInfo>?): gboolean

@CCall("knifunptr_glibjson1252_g_match_info_expand_references")
external fun g_match_info_expand_references(match_info: CValuesRef<GMatchInfo>?, @CCall.CString string_to_expand: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1253_g_match_info_fetch")
external fun g_match_info_fetch(match_info: CValuesRef<GMatchInfo>?, match_num: gint): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1254_g_match_info_fetch_pos")
external fun g_match_info_fetch_pos(match_info: CValuesRef<GMatchInfo>?, match_num: gint, start_pos: CValuesRef<gintVar>?, end_pos: CValuesRef<gintVar>?): gboolean

@CCall("knifunptr_glibjson1255_g_match_info_fetch_named")
external fun g_match_info_fetch_named(match_info: CValuesRef<GMatchInfo>?, @CCall.CString name: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1256_g_match_info_fetch_named_pos")
external fun g_match_info_fetch_named_pos(match_info: CValuesRef<GMatchInfo>?, @CCall.CString name: String?, start_pos: CValuesRef<gintVar>?, end_pos: CValuesRef<gintVar>?): gboolean

@CCall("knifunptr_glibjson1257_g_match_info_fetch_all")
external fun g_match_info_fetch_all(match_info: CValuesRef<GMatchInfo>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson1258_g_scanner_new")
external fun g_scanner_new(config_templ: CValuesRef<GScannerConfig>?): CPointer<GScanner>?

@CCall("knifunptr_glibjson1259_g_scanner_destroy")
external fun g_scanner_destroy(scanner: CValuesRef<GScanner>?): Unit

@CCall("knifunptr_glibjson1260_g_scanner_input_file")
external fun g_scanner_input_file(scanner: CValuesRef<GScanner>?, input_fd: gint): Unit

@CCall("knifunptr_glibjson1261_g_scanner_sync_file_offset")
external fun g_scanner_sync_file_offset(scanner: CValuesRef<GScanner>?): Unit

@CCall("knifunptr_glibjson1262_g_scanner_input_text")
external fun g_scanner_input_text(scanner: CValuesRef<GScanner>?, @CCall.CString text: String?, text_len: guint): Unit

@CCall("knifunptr_glibjson1263_g_scanner_get_next_token")
external fun g_scanner_get_next_token(scanner: CValuesRef<GScanner>?): GTokenType

@CCall("knifunptr_glibjson1264_g_scanner_peek_next_token")
external fun g_scanner_peek_next_token(scanner: CValuesRef<GScanner>?): GTokenType

@CCall("knifunptr_glibjson1265_g_scanner_cur_token")
external fun g_scanner_cur_token(scanner: CValuesRef<GScanner>?): GTokenType

@CCall("knifunptr_glibjson1266_g_scanner_cur_value")
external fun g_scanner_cur_value(scanner: CValuesRef<GScanner>?): CValue<GTokenValue>

@CCall("knifunptr_glibjson1267_g_scanner_cur_line")
external fun g_scanner_cur_line(scanner: CValuesRef<GScanner>?): guint

@CCall("knifunptr_glibjson1268_g_scanner_cur_position")
external fun g_scanner_cur_position(scanner: CValuesRef<GScanner>?): guint

@CCall("knifunptr_glibjson1269_g_scanner_eof")
external fun g_scanner_eof(scanner: CValuesRef<GScanner>?): gboolean

@CCall("knifunptr_glibjson1270_g_scanner_set_scope")
external fun g_scanner_set_scope(scanner: CValuesRef<GScanner>?, scope_id: guint): guint

@CCall("knifunptr_glibjson1271_g_scanner_scope_add_symbol")
external fun g_scanner_scope_add_symbol(scanner: CValuesRef<GScanner>?, scope_id: guint, @CCall.CString symbol: String?, value: gpointer?): Unit

@CCall("knifunptr_glibjson1272_g_scanner_scope_remove_symbol")
external fun g_scanner_scope_remove_symbol(scanner: CValuesRef<GScanner>?, scope_id: guint, @CCall.CString symbol: String?): Unit

@CCall("knifunptr_glibjson1273_g_scanner_scope_lookup_symbol")
external fun g_scanner_scope_lookup_symbol(scanner: CValuesRef<GScanner>?, scope_id: guint, @CCall.CString symbol: String?): gpointer?

@CCall("knifunptr_glibjson1274_g_scanner_scope_foreach_symbol")
external fun g_scanner_scope_foreach_symbol(scanner: CValuesRef<GScanner>?, scope_id: guint, func: GHFunc?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson1275_g_scanner_lookup_symbol")
external fun g_scanner_lookup_symbol(scanner: CValuesRef<GScanner>?, @CCall.CString symbol: String?): gpointer?

@CCall("knifunptr_glibjson1276_g_scanner_unexp_token")
external fun g_scanner_unexp_token(scanner: CValuesRef<GScanner>?, expected_token: GTokenType, @CCall.CString identifier_spec: String?, @CCall.CString symbol_spec: String?, @CCall.CString symbol_name: String?, @CCall.CString message: String?, is_error: gint): Unit

@CCall("knifunptr_glibjson1277_g_scanner_error")
external fun g_scanner_error(scanner: CValuesRef<GScanner>?, @CCall.CString format: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson1278_g_scanner_warn")
external fun g_scanner_warn(scanner: CValuesRef<GScanner>?, @CCall.CString format: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson1279_g_sequence_new")
external fun g_sequence_new(data_destroy: GDestroyNotify?): CPointer<GSequence>?

@CCall("knifunptr_glibjson1280_g_sequence_free")
external fun g_sequence_free(seq: CValuesRef<GSequence>?): Unit

@CCall("knifunptr_glibjson1281_g_sequence_get_length")
external fun g_sequence_get_length(seq: CValuesRef<GSequence>?): gint

@CCall("knifunptr_glibjson1282_g_sequence_foreach")
external fun g_sequence_foreach(seq: CValuesRef<GSequence>?, func: GFunc?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson1283_g_sequence_foreach_range")
external fun g_sequence_foreach_range(begin: CValuesRef<GSequenceIter>?, end: CValuesRef<GSequenceIter>?, func: GFunc?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson1284_g_sequence_sort")
external fun g_sequence_sort(seq: CValuesRef<GSequence>?, cmp_func: GCompareDataFunc?, cmp_data: gpointer?): Unit

@CCall("knifunptr_glibjson1285_g_sequence_sort_iter")
external fun g_sequence_sort_iter(seq: CValuesRef<GSequence>?, cmp_func: GSequenceIterCompareFunc?, cmp_data: gpointer?): Unit

@CCall("knifunptr_glibjson1286_g_sequence_is_empty")
external fun g_sequence_is_empty(seq: CValuesRef<GSequence>?): gboolean

@CCall("knifunptr_glibjson1287_g_sequence_get_begin_iter")
external fun g_sequence_get_begin_iter(seq: CValuesRef<GSequence>?): CPointer<GSequenceIter>?

@CCall("knifunptr_glibjson1288_g_sequence_get_end_iter")
external fun g_sequence_get_end_iter(seq: CValuesRef<GSequence>?): CPointer<GSequenceIter>?

@CCall("knifunptr_glibjson1289_g_sequence_get_iter_at_pos")
external fun g_sequence_get_iter_at_pos(seq: CValuesRef<GSequence>?, pos: gint): CPointer<GSequenceIter>?

@CCall("knifunptr_glibjson1290_g_sequence_append")
external fun g_sequence_append(seq: CValuesRef<GSequence>?, data: gpointer?): CPointer<GSequenceIter>?

@CCall("knifunptr_glibjson1291_g_sequence_prepend")
external fun g_sequence_prepend(seq: CValuesRef<GSequence>?, data: gpointer?): CPointer<GSequenceIter>?

@CCall("knifunptr_glibjson1292_g_sequence_insert_before")
external fun g_sequence_insert_before(iter: CValuesRef<GSequenceIter>?, data: gpointer?): CPointer<GSequenceIter>?

@CCall("knifunptr_glibjson1293_g_sequence_move")
external fun g_sequence_move(src: CValuesRef<GSequenceIter>?, dest: CValuesRef<GSequenceIter>?): Unit

@CCall("knifunptr_glibjson1294_g_sequence_swap")
external fun g_sequence_swap(a: CValuesRef<GSequenceIter>?, b: CValuesRef<GSequenceIter>?): Unit

@CCall("knifunptr_glibjson1295_g_sequence_insert_sorted")
external fun g_sequence_insert_sorted(seq: CValuesRef<GSequence>?, data: gpointer?, cmp_func: GCompareDataFunc?, cmp_data: gpointer?): CPointer<GSequenceIter>?

@CCall("knifunptr_glibjson1296_g_sequence_insert_sorted_iter")
external fun g_sequence_insert_sorted_iter(seq: CValuesRef<GSequence>?, data: gpointer?, iter_cmp: GSequenceIterCompareFunc?, cmp_data: gpointer?): CPointer<GSequenceIter>?

@CCall("knifunptr_glibjson1297_g_sequence_sort_changed")
external fun g_sequence_sort_changed(iter: CValuesRef<GSequenceIter>?, cmp_func: GCompareDataFunc?, cmp_data: gpointer?): Unit

@CCall("knifunptr_glibjson1298_g_sequence_sort_changed_iter")
external fun g_sequence_sort_changed_iter(iter: CValuesRef<GSequenceIter>?, iter_cmp: GSequenceIterCompareFunc?, cmp_data: gpointer?): Unit

@CCall("knifunptr_glibjson1299_g_sequence_remove")
external fun g_sequence_remove(iter: CValuesRef<GSequenceIter>?): Unit

@CCall("knifunptr_glibjson1300_g_sequence_remove_range")
external fun g_sequence_remove_range(begin: CValuesRef<GSequenceIter>?, end: CValuesRef<GSequenceIter>?): Unit

@CCall("knifunptr_glibjson1301_g_sequence_move_range")
external fun g_sequence_move_range(dest: CValuesRef<GSequenceIter>?, begin: CValuesRef<GSequenceIter>?, end: CValuesRef<GSequenceIter>?): Unit

@CCall("knifunptr_glibjson1302_g_sequence_search")
external fun g_sequence_search(seq: CValuesRef<GSequence>?, data: gpointer?, cmp_func: GCompareDataFunc?, cmp_data: gpointer?): CPointer<GSequenceIter>?

@CCall("knifunptr_glibjson1303_g_sequence_search_iter")
external fun g_sequence_search_iter(seq: CValuesRef<GSequence>?, data: gpointer?, iter_cmp: GSequenceIterCompareFunc?, cmp_data: gpointer?): CPointer<GSequenceIter>?

@CCall("knifunptr_glibjson1304_g_sequence_lookup")
external fun g_sequence_lookup(seq: CValuesRef<GSequence>?, data: gpointer?, cmp_func: GCompareDataFunc?, cmp_data: gpointer?): CPointer<GSequenceIter>?

@CCall("knifunptr_glibjson1305_g_sequence_lookup_iter")
external fun g_sequence_lookup_iter(seq: CValuesRef<GSequence>?, data: gpointer?, iter_cmp: GSequenceIterCompareFunc?, cmp_data: gpointer?): CPointer<GSequenceIter>?

@CCall("knifunptr_glibjson1306_g_sequence_get")
external fun g_sequence_get(iter: CValuesRef<GSequenceIter>?): gpointer?

@CCall("knifunptr_glibjson1307_g_sequence_set")
external fun g_sequence_set(iter: CValuesRef<GSequenceIter>?, data: gpointer?): Unit

@CCall("knifunptr_glibjson1308_g_sequence_iter_is_begin")
external fun g_sequence_iter_is_begin(iter: CValuesRef<GSequenceIter>?): gboolean

@CCall("knifunptr_glibjson1309_g_sequence_iter_is_end")
external fun g_sequence_iter_is_end(iter: CValuesRef<GSequenceIter>?): gboolean

@CCall("knifunptr_glibjson1310_g_sequence_iter_next")
external fun g_sequence_iter_next(iter: CValuesRef<GSequenceIter>?): CPointer<GSequenceIter>?

@CCall("knifunptr_glibjson1311_g_sequence_iter_prev")
external fun g_sequence_iter_prev(iter: CValuesRef<GSequenceIter>?): CPointer<GSequenceIter>?

@CCall("knifunptr_glibjson1312_g_sequence_iter_get_position")
external fun g_sequence_iter_get_position(iter: CValuesRef<GSequenceIter>?): gint

@CCall("knifunptr_glibjson1313_g_sequence_iter_move")
external fun g_sequence_iter_move(iter: CValuesRef<GSequenceIter>?, delta: gint): CPointer<GSequenceIter>?

@CCall("knifunptr_glibjson1314_g_sequence_iter_get_sequence")
external fun g_sequence_iter_get_sequence(iter: CValuesRef<GSequenceIter>?): CPointer<GSequence>?

@CCall("knifunptr_glibjson1315_g_sequence_iter_compare")
external fun g_sequence_iter_compare(a: CValuesRef<GSequenceIter>?, b: CValuesRef<GSequenceIter>?): gint

@CCall("knifunptr_glibjson1316_g_sequence_range_get_midpoint")
external fun g_sequence_range_get_midpoint(begin: CValuesRef<GSequenceIter>?, end: CValuesRef<GSequenceIter>?): CPointer<GSequenceIter>?

@CCall("knifunptr_glibjson1317_g_shell_error_quark")
external fun g_shell_error_quark(): GQuark

@CCall("knifunptr_glibjson1318_g_shell_quote")
external fun g_shell_quote(@CCall.CString unquoted_string: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1319_g_shell_unquote")
external fun g_shell_unquote(@CCall.CString quoted_string: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1320_g_shell_parse_argv")
external fun g_shell_parse_argv(@CCall.CString command_line: String?, argcp: CValuesRef<gintVar>?, argvp: CValuesRef<CPointerVar<CPointerVar<gcharVar>>>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson1321_g_slice_alloc")
external fun g_slice_alloc(block_size: gsize): gpointer?

@CCall("knifunptr_glibjson1322_g_slice_alloc0")
external fun g_slice_alloc0(block_size: gsize): gpointer?

@CCall("knifunptr_glibjson1323_g_slice_copy")
external fun g_slice_copy(block_size: gsize, mem_block: gconstpointer?): gpointer?

@CCall("knifunptr_glibjson1324_g_slice_free1")
external fun g_slice_free1(block_size: gsize, mem_block: gpointer?): Unit

@CCall("knifunptr_glibjson1325_g_slice_free_chain_with_offset")
external fun g_slice_free_chain_with_offset(block_size: gsize, mem_chain: gpointer?, next_offset: gsize): Unit

@CCall("knifunptr_glibjson1326_g_slice_set_config")
external fun g_slice_set_config(ckey: GSliceConfig, value: gint64): Unit

@CCall("knifunptr_glibjson1327_g_slice_get_config")
external fun g_slice_get_config(ckey: GSliceConfig): gint64

@CCall("knifunptr_glibjson1328_g_slice_get_config_state")
external fun g_slice_get_config_state(ckey: GSliceConfig, address: gint64, n_values: CValuesRef<guintVar>?): CPointer<gint64Var>?

@CCall("knifunptr_glibjson1329_g_spawn_error_quark")
external fun g_spawn_error_quark(): GQuark

@CCall("knifunptr_glibjson1330_g_spawn_exit_error_quark")
external fun g_spawn_exit_error_quark(): GQuark

@CCall("knifunptr_glibjson1331_g_spawn_async")
external fun g_spawn_async(@CCall.CString working_directory: String?, argv: CValuesRef<CPointerVar<gcharVar>>?, envp: CValuesRef<CPointerVar<gcharVar>>?, flags: GSpawnFlags, child_setup: GSpawnChildSetupFunc?, user_data: gpointer?, child_pid: CValuesRef<GPidVar>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson1332_g_spawn_async_with_pipes")
external fun g_spawn_async_with_pipes(@CCall.CString working_directory: String?, argv: CValuesRef<CPointerVar<gcharVar>>?, envp: CValuesRef<CPointerVar<gcharVar>>?, flags: GSpawnFlags, child_setup: GSpawnChildSetupFunc?, user_data: gpointer?, child_pid: CValuesRef<GPidVar>?, standard_input: CValuesRef<gintVar>?, standard_output: CValuesRef<gintVar>?, standard_error: CValuesRef<gintVar>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson1333_g_spawn_sync")
external fun g_spawn_sync(@CCall.CString working_directory: String?, argv: CValuesRef<CPointerVar<gcharVar>>?, envp: CValuesRef<CPointerVar<gcharVar>>?, flags: GSpawnFlags, child_setup: GSpawnChildSetupFunc?, user_data: gpointer?, standard_output: CValuesRef<CPointerVar<gcharVar>>?, standard_error: CValuesRef<CPointerVar<gcharVar>>?, exit_status: CValuesRef<gintVar>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson1334_g_spawn_command_line_sync")
external fun g_spawn_command_line_sync(@CCall.CString command_line: String?, standard_output: CValuesRef<CPointerVar<gcharVar>>?, standard_error: CValuesRef<CPointerVar<gcharVar>>?, exit_status: CValuesRef<gintVar>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson1335_g_spawn_command_line_async")
external fun g_spawn_command_line_async(@CCall.CString command_line: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson1336_g_spawn_check_exit_status")
external fun g_spawn_check_exit_status(exit_status: gint, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson1337_g_spawn_close_pid")
external fun g_spawn_close_pid(pid: GPid): Unit

@CCall("knifunptr_glibjson1338_g_ascii_tolower")
external fun g_ascii_tolower(c: gchar): gchar

@CCall("knifunptr_glibjson1339_g_ascii_toupper")
external fun g_ascii_toupper(c: gchar): gchar

@CCall("knifunptr_glibjson1340_g_ascii_digit_value")
external fun g_ascii_digit_value(c: gchar): gint

@CCall("knifunptr_glibjson1341_g_ascii_xdigit_value")
external fun g_ascii_xdigit_value(c: gchar): gint

@CCall("knifunptr_glibjson1342_g_strdelimit")
external fun g_strdelimit(string: CValuesRef<gcharVar>?, @CCall.CString delimiters: String?, new_delimiter: gchar): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1343_g_strcanon")
external fun g_strcanon(string: CValuesRef<gcharVar>?, @CCall.CString valid_chars: String?, substitutor: gchar): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1344_g_strerror")
external fun g_strerror(errnum: gint): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1345_g_strsignal")
external fun g_strsignal(signum: gint): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1346_g_strreverse")
external fun g_strreverse(string: CValuesRef<gcharVar>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1347_g_strlcpy")
external fun g_strlcpy(dest: CValuesRef<gcharVar>?, @CCall.CString src: String?, dest_size: gsize): gsize

@CCall("knifunptr_glibjson1348_g_strlcat")
external fun g_strlcat(dest: CValuesRef<gcharVar>?, @CCall.CString src: String?, dest_size: gsize): gsize

@CCall("knifunptr_glibjson1349_g_strstr_len")
external fun g_strstr_len(@CCall.CString haystack: String?, haystack_len: gssize, @CCall.CString needle: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1350_g_strrstr")
external fun g_strrstr(@CCall.CString haystack: String?, @CCall.CString needle: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1351_g_strrstr_len")
external fun g_strrstr_len(@CCall.CString haystack: String?, haystack_len: gssize, @CCall.CString needle: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1352_g_str_has_suffix")
external fun g_str_has_suffix(@CCall.CString str: String?, @CCall.CString suffix: String?): gboolean

@CCall("knifunptr_glibjson1353_g_str_has_prefix")
external fun g_str_has_prefix(@CCall.CString str: String?, @CCall.CString prefix: String?): gboolean

@CCall("knifunptr_glibjson1354_g_strtod")
external fun g_strtod(@CCall.CString nptr: String?, endptr: CValuesRef<CPointerVar<gcharVar>>?): gdouble

@CCall("knifunptr_glibjson1355_g_ascii_strtod")
external fun g_ascii_strtod(@CCall.CString nptr: String?, endptr: CValuesRef<CPointerVar<gcharVar>>?): gdouble

@CCall("knifunptr_glibjson1356_g_ascii_strtoull")
external fun g_ascii_strtoull(@CCall.CString nptr: String?, endptr: CValuesRef<CPointerVar<gcharVar>>?, base: guint): guint64

@CCall("knifunptr_glibjson1357_g_ascii_strtoll")
external fun g_ascii_strtoll(@CCall.CString nptr: String?, endptr: CValuesRef<CPointerVar<gcharVar>>?, base: guint): gint64

@CCall("knifunptr_glibjson1358_g_ascii_dtostr")
external fun g_ascii_dtostr(buffer: CValuesRef<gcharVar>?, buf_len: gint, d: gdouble): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1359_g_ascii_formatd")
external fun g_ascii_formatd(buffer: CValuesRef<gcharVar>?, buf_len: gint, @CCall.CString format: String?, d: gdouble): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1360_g_strchug")
external fun g_strchug(string: CValuesRef<gcharVar>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1361_g_strchomp")
external fun g_strchomp(string: CValuesRef<gcharVar>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1362_g_ascii_strcasecmp")
external fun g_ascii_strcasecmp(@CCall.CString s1: String?, @CCall.CString s2: String?): gint

@CCall("knifunptr_glibjson1363_g_ascii_strncasecmp")
external fun g_ascii_strncasecmp(@CCall.CString s1: String?, @CCall.CString s2: String?, n: gsize): gint

@CCall("knifunptr_glibjson1364_g_ascii_strdown")
external fun g_ascii_strdown(@CCall.CString str: String?, len: gssize): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1365_g_ascii_strup")
external fun g_ascii_strup(@CCall.CString str: String?, len: gssize): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1366_g_str_is_ascii")
external fun g_str_is_ascii(@CCall.CString str: String?): gboolean

@CCall("knifunptr_glibjson1367_g_strcasecmp")
external fun g_strcasecmp(@CCall.CString s1: String?, @CCall.CString s2: String?): gint

@CCall("knifunptr_glibjson1368_g_strncasecmp")
external fun g_strncasecmp(@CCall.CString s1: String?, @CCall.CString s2: String?, n: guint): gint

@CCall("knifunptr_glibjson1369_g_strdown")
external fun g_strdown(string: CValuesRef<gcharVar>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1370_g_strup")
external fun g_strup(string: CValuesRef<gcharVar>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1371_g_strdup")
external fun g_strdup(@CCall.CString str: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1372_g_strdup_printf")
external fun g_strdup_printf(@CCall.CString format: String?, vararg variadicArguments: Any?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1373_g_strdup_vprintf")
external fun g_strdup_vprintf(@CCall.CString format: String?, args: va_list?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1374_g_strndup")
external fun g_strndup(@CCall.CString str: String?, n: gsize): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1375_g_strnfill")
external fun g_strnfill(length: gsize, fill_char: gchar): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1376_g_strconcat")
external fun g_strconcat(@CCall.CString string1: String?, vararg variadicArguments: Any?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1377_g_strjoin")
external fun g_strjoin(@CCall.CString separator: String?, vararg variadicArguments: Any?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1378_g_strcompress")
external fun g_strcompress(@CCall.CString source: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1379_g_strescape")
external fun g_strescape(@CCall.CString source: String?, @CCall.CString exceptions: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1380_g_memdup")
external fun g_memdup(mem: gconstpointer?, byte_size: guint): gpointer?

@CCall("knifunptr_glibjson1381_g_strsplit")
external fun g_strsplit(@CCall.CString string: String?, @CCall.CString delimiter: String?, max_tokens: gint): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson1382_g_strsplit_set")
external fun g_strsplit_set(@CCall.CString string: String?, @CCall.CString delimiters: String?, max_tokens: gint): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson1383_g_strjoinv")
external fun g_strjoinv(@CCall.CString separator: String?, str_array: CValuesRef<CPointerVar<gcharVar>>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1384_g_strfreev")
external fun g_strfreev(str_array: CValuesRef<CPointerVar<gcharVar>>?): Unit

@CCall("knifunptr_glibjson1385_g_strdupv")
external fun g_strdupv(str_array: CValuesRef<CPointerVar<gcharVar>>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson1386_g_strv_length")
external fun g_strv_length(str_array: CValuesRef<CPointerVar<gcharVar>>?): guint

@CCall("knifunptr_glibjson1387_g_stpcpy")
external fun g_stpcpy(dest: CValuesRef<gcharVar>?, @CCall.CString src: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1388_g_str_to_ascii")
external fun g_str_to_ascii(@CCall.CString str: String?, @CCall.CString from_locale: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1389_g_str_tokenize_and_fold")
external fun g_str_tokenize_and_fold(@CCall.CString string: String?, @CCall.CString translit_locale: String?, ascii_alternates: CValuesRef<CPointerVar<CPointerVar<gcharVar>>>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson1390_g_str_match_string")
external fun g_str_match_string(@CCall.CString search_term: String?, @CCall.CString potential_hit: String?, accept_alternates: gboolean): gboolean

@CCall("knifunptr_glibjson1391_g_strv_contains")
external fun g_strv_contains(strv: CValuesRef<CPointerVar<gcharVar>>?, @CCall.CString str: String?): gboolean

@CCall("knifunptr_glibjson1392_g_number_parser_error_quark")
external fun g_number_parser_error_quark(): GQuark

@CCall("knifunptr_glibjson1393_g_ascii_string_to_signed")
external fun g_ascii_string_to_signed(@CCall.CString str: String?, base: guint, min: gint64, max: gint64, out_num: CValuesRef<gint64Var>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson1394_g_ascii_string_to_unsigned")
external fun g_ascii_string_to_unsigned(@CCall.CString str: String?, base: guint, min: guint64, max: guint64, out_num: CValuesRef<guint64Var>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson1395_g_string_chunk_new")
external fun g_string_chunk_new(size: gsize): CPointer<GStringChunk>?

@CCall("knifunptr_glibjson1396_g_string_chunk_free")
external fun g_string_chunk_free(chunk: CValuesRef<GStringChunk>?): Unit

@CCall("knifunptr_glibjson1397_g_string_chunk_clear")
external fun g_string_chunk_clear(chunk: CValuesRef<GStringChunk>?): Unit

@CCall("knifunptr_glibjson1398_g_string_chunk_insert")
external fun g_string_chunk_insert(chunk: CValuesRef<GStringChunk>?, @CCall.CString string: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1399_g_string_chunk_insert_len")
external fun g_string_chunk_insert_len(chunk: CValuesRef<GStringChunk>?, @CCall.CString string: String?, len: gssize): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1400_g_string_chunk_insert_const")
external fun g_string_chunk_insert_const(chunk: CValuesRef<GStringChunk>?, @CCall.CString string: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1401_g_strcmp0")
external fun g_strcmp0(@CCall.CString str1: String?, @CCall.CString str2: String?): Int

@CCall("knifunptr_glibjson1402_g_test_minimized_result")
external fun g_test_minimized_result(minimized_quantity: Double, @CCall.CString format: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson1403_g_test_maximized_result")
external fun g_test_maximized_result(maximized_quantity: Double, @CCall.CString format: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson1404_g_test_init")
external fun g_test_init(argc: CValuesRef<IntVar>?, argv: CValuesRef<CPointerVar<CPointerVar<ByteVar>>>?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson1405_g_test_subprocess")
external fun g_test_subprocess(): gboolean

@CCall("knifunptr_glibjson1406_g_test_run")
external fun g_test_run(): Int

@CCall("knifunptr_glibjson1407_g_test_add_func")
external fun g_test_add_func(@CCall.CString testpath: String?, test_func: GTestFunc?): Unit

@CCall("knifunptr_glibjson1408_g_test_add_data_func")
external fun g_test_add_data_func(@CCall.CString testpath: String?, test_data: gconstpointer?, test_func: GTestDataFunc?): Unit

@CCall("knifunptr_glibjson1409_g_test_add_data_func_full")
external fun g_test_add_data_func_full(@CCall.CString testpath: String?, test_data: gpointer?, test_func: GTestDataFunc?, data_free_func: GDestroyNotify?): Unit

@CCall("knifunptr_glibjson1410_g_test_fail")
external fun g_test_fail(): Unit

@CCall("knifunptr_glibjson1411_g_test_incomplete")
external fun g_test_incomplete(@CCall.CString msg: String?): Unit

@CCall("knifunptr_glibjson1412_g_test_skip")
external fun g_test_skip(@CCall.CString msg: String?): Unit

@CCall("knifunptr_glibjson1413_g_test_failed")
external fun g_test_failed(): gboolean

@CCall("knifunptr_glibjson1414_g_test_set_nonfatal_assertions")
external fun g_test_set_nonfatal_assertions(): Unit

@CCall("knifunptr_glibjson1415_g_test_message")
external fun g_test_message(@CCall.CString format: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson1416_g_test_bug_base")
external fun g_test_bug_base(@CCall.CString uri_pattern: String?): Unit

@CCall("knifunptr_glibjson1417_g_test_bug")
external fun g_test_bug(@CCall.CString bug_uri_snippet: String?): Unit

@CCall("knifunptr_glibjson1418_g_test_timer_start")
external fun g_test_timer_start(): Unit

@CCall("knifunptr_glibjson1419_g_test_timer_elapsed")
external fun g_test_timer_elapsed(): Double

@CCall("knifunptr_glibjson1420_g_test_timer_last")
external fun g_test_timer_last(): Double

@CCall("knifunptr_glibjson1421_g_test_queue_free")
external fun g_test_queue_free(gfree_pointer: gpointer?): Unit

@CCall("knifunptr_glibjson1422_g_test_queue_destroy")
external fun g_test_queue_destroy(destroy_func: GDestroyNotify?, destroy_data: gpointer?): Unit

@CCall("knifunptr_glibjson1423_g_test_trap_fork")
external fun g_test_trap_fork(usec_timeout: guint64, test_trap_flags: GTestTrapFlags): gboolean

@CCall("knifunptr_glibjson1424_g_test_trap_subprocess")
external fun g_test_trap_subprocess(@CCall.CString test_path: String?, usec_timeout: guint64, test_flags: GTestSubprocessFlags): Unit

@CCall("knifunptr_glibjson1425_g_test_trap_has_passed")
external fun g_test_trap_has_passed(): gboolean

@CCall("knifunptr_glibjson1426_g_test_trap_reached_timeout")
external fun g_test_trap_reached_timeout(): gboolean

@CCall("knifunptr_glibjson1427_g_test_rand_int")
external fun g_test_rand_int(): gint32

@CCall("knifunptr_glibjson1428_g_test_rand_int_range")
external fun g_test_rand_int_range(begin: gint32, end: gint32): gint32

@CCall("knifunptr_glibjson1429_g_test_rand_double")
external fun g_test_rand_double(): Double

@CCall("knifunptr_glibjson1430_g_test_rand_double_range")
external fun g_test_rand_double_range(range_start: Double, range_end: Double): Double

@CCall("knifunptr_glibjson1431_g_test_create_case")
external fun g_test_create_case(@CCall.CString test_name: String?, data_size: gsize, test_data: gconstpointer?, data_setup: GTestFixtureFunc?, data_test: GTestFixtureFunc?, data_teardown: GTestFixtureFunc?): CPointer<GTestCase>?

@CCall("knifunptr_glibjson1432_g_test_create_suite")
external fun g_test_create_suite(@CCall.CString suite_name: String?): CPointer<GTestSuite>?

@CCall("knifunptr_glibjson1433_g_test_get_root")
external fun g_test_get_root(): CPointer<GTestSuite>?

@CCall("knifunptr_glibjson1434_g_test_suite_add")
external fun g_test_suite_add(suite: CValuesRef<GTestSuite>?, test_case: CValuesRef<GTestCase>?): Unit

@CCall("knifunptr_glibjson1435_g_test_suite_add_suite")
external fun g_test_suite_add_suite(suite: CValuesRef<GTestSuite>?, nestedsuite: CValuesRef<GTestSuite>?): Unit

@CCall("knifunptr_glibjson1436_g_test_run_suite")
external fun g_test_run_suite(suite: CValuesRef<GTestSuite>?): Int

@CCall("knifunptr_glibjson1437_g_test_trap_assertions")
external fun g_test_trap_assertions(@CCall.CString domain: String?, @CCall.CString file: String?, line: Int, @CCall.CString func: String?, assertion_flags: guint64, @CCall.CString pattern: String?): Unit

@CCall("knifunptr_glibjson1438_g_assertion_message")
external fun g_assertion_message(@CCall.CString domain: String?, @CCall.CString file: String?, line: Int, @CCall.CString func: String?, @CCall.CString message: String?): Unit

@CCall("knifunptr_glibjson1439_g_assertion_message_expr")
external fun g_assertion_message_expr(@CCall.CString domain: String?, @CCall.CString file: String?, line: Int, @CCall.CString func: String?, @CCall.CString expr: String?): Unit

@CCall("knifunptr_glibjson1440_g_assertion_message_cmpstr")
external fun g_assertion_message_cmpstr(@CCall.CString domain: String?, @CCall.CString file: String?, line: Int, @CCall.CString func: String?, @CCall.CString expr: String?, @CCall.CString arg1: String?, @CCall.CString cmp: String?, @CCall.CString arg2: String?): Unit

@CCall("knifunptr_glibjson1441_g_assertion_message_error")
external fun g_assertion_message_error(@CCall.CString domain: String?, @CCall.CString file: String?, line: Int, @CCall.CString func: String?, @CCall.CString expr: String?, error: CValuesRef<GError>?, error_domain: GQuark, error_code: Int): Unit

@CCall("knifunptr_glibjson1442_g_test_add_vtable")
external fun g_test_add_vtable(@CCall.CString testpath: String?, data_size: gsize, test_data: gconstpointer?, data_setup: GTestFixtureFunc?, data_test: GTestFixtureFunc?, data_teardown: GTestFixtureFunc?): Unit

@CCall("knifunptr_glibjson1443_g_test_log_type_name")
external fun g_test_log_type_name(log_type: GTestLogType): CPointer<ByteVar>?

@CCall("knifunptr_glibjson1444_g_test_log_buffer_new")
external fun g_test_log_buffer_new(): CPointer<GTestLogBuffer>?

@CCall("knifunptr_glibjson1445_g_test_log_buffer_free")
external fun g_test_log_buffer_free(tbuffer: CValuesRef<GTestLogBuffer>?): Unit

@CCall("knifunptr_glibjson1446_g_test_log_buffer_push")
external fun g_test_log_buffer_push(tbuffer: CValuesRef<GTestLogBuffer>?, n_bytes: guint, bytes: CValuesRef<guint8Var>?): Unit

@CCall("knifunptr_glibjson1447_g_test_log_buffer_pop")
external fun g_test_log_buffer_pop(tbuffer: CValuesRef<GTestLogBuffer>?): CPointer<GTestLogMsg>?

@CCall("knifunptr_glibjson1448_g_test_log_msg_free")
external fun g_test_log_msg_free(tmsg: CValuesRef<GTestLogMsg>?): Unit

@CCall("knifunptr_glibjson1449_g_test_log_set_fatal_handler")
external fun g_test_log_set_fatal_handler(log_func: GTestLogFatalFunc?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson1450_g_test_expect_message")
external fun g_test_expect_message(@CCall.CString log_domain: String?, log_level: GLogLevelFlags, @CCall.CString pattern: String?): Unit

@CCall("knifunptr_glibjson1451_g_test_assert_expected_messages_internal")
external fun g_test_assert_expected_messages_internal(@CCall.CString domain: String?, @CCall.CString file: String?, line: Int, @CCall.CString func: String?): Unit

@CCall("knifunptr_glibjson1452_g_test_build_filename")
external fun g_test_build_filename(file_type: GTestFileType, @CCall.CString first_path: String?, vararg variadicArguments: Any?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1453_g_test_get_dir")
external fun g_test_get_dir(file_type: GTestFileType): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1454_g_test_get_filename")
external fun g_test_get_filename(file_type: GTestFileType, @CCall.CString first_path: String?, vararg variadicArguments: Any?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1455_g_thread_pool_new")
external fun g_thread_pool_new(func: GFunc?, user_data: gpointer?, max_threads: gint, exclusive: gboolean, error: CValuesRef<CPointerVar<GError>>?): CPointer<GThreadPool>?

@CCall("knifunptr_glibjson1456_g_thread_pool_free")
external fun g_thread_pool_free(pool: CValuesRef<GThreadPool>?, immediate: gboolean, wait_: gboolean): Unit

@CCall("knifunptr_glibjson1457_g_thread_pool_push")
external fun g_thread_pool_push(pool: CValuesRef<GThreadPool>?, data: gpointer?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson1458_g_thread_pool_unprocessed")
external fun g_thread_pool_unprocessed(pool: CValuesRef<GThreadPool>?): guint

@CCall("knifunptr_glibjson1459_g_thread_pool_set_sort_function")
external fun g_thread_pool_set_sort_function(pool: CValuesRef<GThreadPool>?, func: GCompareDataFunc?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson1460_g_thread_pool_move_to_front")
external fun g_thread_pool_move_to_front(pool: CValuesRef<GThreadPool>?, data: gpointer?): gboolean

@CCall("knifunptr_glibjson1461_g_thread_pool_set_max_threads")
external fun g_thread_pool_set_max_threads(pool: CValuesRef<GThreadPool>?, max_threads: gint, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson1462_g_thread_pool_get_max_threads")
external fun g_thread_pool_get_max_threads(pool: CValuesRef<GThreadPool>?): gint

@CCall("knifunptr_glibjson1463_g_thread_pool_get_num_threads")
external fun g_thread_pool_get_num_threads(pool: CValuesRef<GThreadPool>?): guint

@CCall("knifunptr_glibjson1464_g_thread_pool_set_max_unused_threads")
external fun g_thread_pool_set_max_unused_threads(max_threads: gint): Unit

@CCall("knifunptr_glibjson1465_g_thread_pool_get_max_unused_threads")
external fun g_thread_pool_get_max_unused_threads(): gint

@CCall("knifunptr_glibjson1466_g_thread_pool_get_num_unused_threads")
external fun g_thread_pool_get_num_unused_threads(): guint

@CCall("knifunptr_glibjson1467_g_thread_pool_stop_unused_threads")
external fun g_thread_pool_stop_unused_threads(): Unit

@CCall("knifunptr_glibjson1468_g_thread_pool_set_max_idle_time")
external fun g_thread_pool_set_max_idle_time(interval: guint): Unit

@CCall("knifunptr_glibjson1469_g_thread_pool_get_max_idle_time")
external fun g_thread_pool_get_max_idle_time(): guint

@CCall("knifunptr_glibjson1470_g_timer_new")
external fun g_timer_new(): CPointer<GTimer>?

@CCall("knifunptr_glibjson1471_g_timer_destroy")
external fun g_timer_destroy(timer: CValuesRef<GTimer>?): Unit

@CCall("knifunptr_glibjson1472_g_timer_start")
external fun g_timer_start(timer: CValuesRef<GTimer>?): Unit

@CCall("knifunptr_glibjson1473_g_timer_stop")
external fun g_timer_stop(timer: CValuesRef<GTimer>?): Unit

@CCall("knifunptr_glibjson1474_g_timer_reset")
external fun g_timer_reset(timer: CValuesRef<GTimer>?): Unit

@CCall("knifunptr_glibjson1475_g_timer_continue")
external fun g_timer_continue(timer: CValuesRef<GTimer>?): Unit

@CCall("knifunptr_glibjson1476_g_timer_elapsed")
external fun g_timer_elapsed(timer: CValuesRef<GTimer>?, microseconds: CValuesRef<gulongVar>?): gdouble

@CCall("knifunptr_glibjson1477_g_usleep")
external fun g_usleep(microseconds: gulong): Unit

@CCall("knifunptr_glibjson1478_g_time_val_add")
external fun g_time_val_add(time_: CValuesRef<GTimeVal>?, microseconds: glong): Unit

@CCall("knifunptr_glibjson1479_g_time_val_from_iso8601")
external fun g_time_val_from_iso8601(@CCall.CString iso_date: String?, time_: CValuesRef<GTimeVal>?): gboolean

@CCall("knifunptr_glibjson1480_g_time_val_to_iso8601")
external fun g_time_val_to_iso8601(time_: CValuesRef<GTimeVal>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1481_g_trash_stack_push")
external fun g_trash_stack_push(stack_p: CValuesRef<CPointerVar<GTrashStack>>?, data_p: gpointer?): Unit

@CCall("knifunptr_glibjson1482_g_trash_stack_pop")
external fun g_trash_stack_pop(stack_p: CValuesRef<CPointerVar<GTrashStack>>?): gpointer?

@CCall("knifunptr_glibjson1483_g_trash_stack_peek")
external fun g_trash_stack_peek(stack_p: CValuesRef<CPointerVar<GTrashStack>>?): gpointer?

@CCall("knifunptr_glibjson1484_g_trash_stack_height")
external fun g_trash_stack_height(stack_p: CValuesRef<CPointerVar<GTrashStack>>?): guint

@CCall("knifunptr_glibjson1485_g_tree_new")
external fun g_tree_new(key_compare_func: GCompareFunc?): CPointer<GTree>?

@CCall("knifunptr_glibjson1486_g_tree_new_with_data")
external fun g_tree_new_with_data(key_compare_func: GCompareDataFunc?, key_compare_data: gpointer?): CPointer<GTree>?

@CCall("knifunptr_glibjson1487_g_tree_new_full")
external fun g_tree_new_full(key_compare_func: GCompareDataFunc?, key_compare_data: gpointer?, key_destroy_func: GDestroyNotify?, value_destroy_func: GDestroyNotify?): CPointer<GTree>?

@CCall("knifunptr_glibjson1488_g_tree_ref")
external fun g_tree_ref(tree: CValuesRef<GTree>?): CPointer<GTree>?

@CCall("knifunptr_glibjson1489_g_tree_unref")
external fun g_tree_unref(tree: CValuesRef<GTree>?): Unit

@CCall("knifunptr_glibjson1490_g_tree_destroy")
external fun g_tree_destroy(tree: CValuesRef<GTree>?): Unit

@CCall("knifunptr_glibjson1491_g_tree_insert")
external fun g_tree_insert(tree: CValuesRef<GTree>?, key: gpointer?, value: gpointer?): Unit

@CCall("knifunptr_glibjson1492_g_tree_replace")
external fun g_tree_replace(tree: CValuesRef<GTree>?, key: gpointer?, value: gpointer?): Unit

@CCall("knifunptr_glibjson1493_g_tree_remove")
external fun g_tree_remove(tree: CValuesRef<GTree>?, key: gconstpointer?): gboolean

@CCall("knifunptr_glibjson1494_g_tree_steal")
external fun g_tree_steal(tree: CValuesRef<GTree>?, key: gconstpointer?): gboolean

@CCall("knifunptr_glibjson1495_g_tree_lookup")
external fun g_tree_lookup(tree: CValuesRef<GTree>?, key: gconstpointer?): gpointer?

@CCall("knifunptr_glibjson1496_g_tree_lookup_extended")
external fun g_tree_lookup_extended(tree: CValuesRef<GTree>?, lookup_key: gconstpointer?, orig_key: CValuesRef<gpointerVar>?, value: CValuesRef<gpointerVar>?): gboolean

@CCall("knifunptr_glibjson1497_g_tree_foreach")
external fun g_tree_foreach(tree: CValuesRef<GTree>?, func: GTraverseFunc?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson1498_g_tree_traverse")
external fun g_tree_traverse(tree: CValuesRef<GTree>?, traverse_func: GTraverseFunc?, traverse_type: GTraverseType, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson1499_g_tree_search")
external fun g_tree_search(tree: CValuesRef<GTree>?, search_func: GCompareFunc?, user_data: gconstpointer?): gpointer?

@CCall("knifunptr_glibjson1500_g_tree_height")
external fun g_tree_height(tree: CValuesRef<GTree>?): gint

@CCall("knifunptr_glibjson1501_g_tree_nnodes")
external fun g_tree_nnodes(tree: CValuesRef<GTree>?): gint

@CCall("knifunptr_glibjson1502_g_uri_unescape_string")
external fun g_uri_unescape_string(@CCall.CString escaped_string: String?, @CCall.CString illegal_characters: String?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson1503_g_uri_unescape_segment")
external fun g_uri_unescape_segment(@CCall.CString escaped_string: String?, @CCall.CString escaped_string_end: String?, @CCall.CString illegal_characters: String?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson1504_g_uri_parse_scheme")
external fun g_uri_parse_scheme(@CCall.CString uri: String?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson1505_g_uri_escape_string")
external fun g_uri_escape_string(@CCall.CString unescaped: String?, @CCall.CString reserved_chars_allowed: String?, allow_utf8: gboolean): CPointer<ByteVar>?

@CCall("knifunptr_glibjson1506_g_uuid_string_is_valid")
external fun g_uuid_string_is_valid(@CCall.CString str: String?): gboolean

@CCall("knifunptr_glibjson1507_g_uuid_string_random")
external fun g_uuid_string_random(): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1508_glib_check_version")
external fun glib_check_version(required_major: guint, required_minor: guint, required_micro: guint): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1509_g_mem_chunk_new")
external fun g_mem_chunk_new(@CCall.CString name: String?, atom_size: gint, area_size: gsize, type: gint): CPointer<GMemChunk>?

@CCall("knifunptr_glibjson1510_g_mem_chunk_destroy")
external fun g_mem_chunk_destroy(mem_chunk: CValuesRef<GMemChunk>?): Unit

@CCall("knifunptr_glibjson1511_g_mem_chunk_alloc")
external fun g_mem_chunk_alloc(mem_chunk: CValuesRef<GMemChunk>?): gpointer?

@CCall("knifunptr_glibjson1512_g_mem_chunk_alloc0")
external fun g_mem_chunk_alloc0(mem_chunk: CValuesRef<GMemChunk>?): gpointer?

@CCall("knifunptr_glibjson1513_g_mem_chunk_free")
external fun g_mem_chunk_free(mem_chunk: CValuesRef<GMemChunk>?, mem: gpointer?): Unit

@CCall("knifunptr_glibjson1514_g_mem_chunk_clean")
external fun g_mem_chunk_clean(mem_chunk: CValuesRef<GMemChunk>?): Unit

@CCall("knifunptr_glibjson1515_g_mem_chunk_reset")
external fun g_mem_chunk_reset(mem_chunk: CValuesRef<GMemChunk>?): Unit

@CCall("knifunptr_glibjson1516_g_mem_chunk_print")
external fun g_mem_chunk_print(mem_chunk: CValuesRef<GMemChunk>?): Unit

@CCall("knifunptr_glibjson1517_g_mem_chunk_info")
external fun g_mem_chunk_info(): Unit

@CCall("knifunptr_glibjson1518_g_blow_chunks")
external fun g_blow_chunks(): Unit

@CCall("knifunptr_glibjson1519_g_allocator_new")
external fun g_allocator_new(@CCall.CString name: String?, n_preallocs: guint): CPointer<GAllocator>?

@CCall("knifunptr_glibjson1520_g_allocator_free")
external fun g_allocator_free(allocator: CValuesRef<GAllocator>?): Unit

@CCall("knifunptr_glibjson1521_g_list_push_allocator")
external fun g_list_push_allocator(allocator: CValuesRef<GAllocator>?): Unit

@CCall("knifunptr_glibjson1522_g_list_pop_allocator")
external fun g_list_pop_allocator(): Unit

@CCall("knifunptr_glibjson1523_g_slist_push_allocator")
external fun g_slist_push_allocator(allocator: CValuesRef<GAllocator>?): Unit

@CCall("knifunptr_glibjson1524_g_slist_pop_allocator")
external fun g_slist_pop_allocator(): Unit

@CCall("knifunptr_glibjson1525_g_node_push_allocator")
external fun g_node_push_allocator(allocator: CValuesRef<GAllocator>?): Unit

@CCall("knifunptr_glibjson1526_g_node_pop_allocator")
external fun g_node_pop_allocator(): Unit

@CCall("knifunptr_glibjson1527_g_cache_new")
external fun g_cache_new(value_new_func: GCacheNewFunc?, value_destroy_func: GCacheDestroyFunc?, key_dup_func: GCacheDupFunc?, key_destroy_func: GCacheDestroyFunc?, hash_key_func: GHashFunc?, hash_value_func: GHashFunc?, key_equal_func: GEqualFunc?): CPointer<GCache>?

@CCall("knifunptr_glibjson1528_g_cache_destroy")
external fun g_cache_destroy(cache: CValuesRef<GCache>?): Unit

@CCall("knifunptr_glibjson1529_g_cache_insert")
external fun g_cache_insert(cache: CValuesRef<GCache>?, key: gpointer?): gpointer?

@CCall("knifunptr_glibjson1530_g_cache_remove")
external fun g_cache_remove(cache: CValuesRef<GCache>?, value: gconstpointer?): Unit

@CCall("knifunptr_glibjson1531_g_cache_key_foreach")
external fun g_cache_key_foreach(cache: CValuesRef<GCache>?, func: GHFunc?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson1532_g_cache_value_foreach")
external fun g_cache_value_foreach(cache: CValuesRef<GCache>?, func: GHFunc?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson1533_g_completion_new")
external fun g_completion_new(func: GCompletionFunc?): CPointer<GCompletion>?

@CCall("knifunptr_glibjson1534_g_completion_add_items")
external fun g_completion_add_items(cmp: CValuesRef<GCompletion>?, items: CValuesRef<GList>?): Unit

@CCall("knifunptr_glibjson1535_g_completion_remove_items")
external fun g_completion_remove_items(cmp: CValuesRef<GCompletion>?, items: CValuesRef<GList>?): Unit

@CCall("knifunptr_glibjson1536_g_completion_clear_items")
external fun g_completion_clear_items(cmp: CValuesRef<GCompletion>?): Unit

@CCall("knifunptr_glibjson1537_g_completion_complete")
external fun g_completion_complete(cmp: CValuesRef<GCompletion>?, @CCall.CString prefix: String?, new_prefix: CValuesRef<CPointerVar<gcharVar>>?): CPointer<GList>?

@CCall("knifunptr_glibjson1538_g_completion_complete_utf8")
external fun g_completion_complete_utf8(cmp: CValuesRef<GCompletion>?, @CCall.CString prefix: String?, new_prefix: CValuesRef<CPointerVar<gcharVar>>?): CPointer<GList>?

@CCall("knifunptr_glibjson1539_g_completion_set_compare")
external fun g_completion_set_compare(cmp: CValuesRef<GCompletion>?, strncmp_func: GCompletionStrncmpFunc?): Unit

@CCall("knifunptr_glibjson1540_g_completion_free")
external fun g_completion_free(cmp: CValuesRef<GCompletion>?): Unit

@CCall("knifunptr_glibjson1541_g_relation_new")
external fun g_relation_new(fields: gint): CPointer<GRelation>?

@CCall("knifunptr_glibjson1542_g_relation_destroy")
external fun g_relation_destroy(relation: CValuesRef<GRelation>?): Unit

@CCall("knifunptr_glibjson1543_g_relation_index")
external fun g_relation_index(relation: CValuesRef<GRelation>?, field: gint, hash_func: GHashFunc?, key_equal_func: GEqualFunc?): Unit

@CCall("knifunptr_glibjson1544_g_relation_insert")
external fun g_relation_insert(relation: CValuesRef<GRelation>?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson1545_g_relation_delete")
external fun g_relation_delete(relation: CValuesRef<GRelation>?, key: gconstpointer?, field: gint): gint

@CCall("knifunptr_glibjson1546_g_relation_select")
external fun g_relation_select(relation: CValuesRef<GRelation>?, key: gconstpointer?, field: gint): CPointer<GTuples>?

@CCall("knifunptr_glibjson1547_g_relation_count")
external fun g_relation_count(relation: CValuesRef<GRelation>?, key: gconstpointer?, field: gint): gint

@CCall("knifunptr_glibjson1548_g_relation_exists")
external fun g_relation_exists(relation: CValuesRef<GRelation>?, vararg variadicArguments: Any?): gboolean

@CCall("knifunptr_glibjson1549_g_relation_print")
external fun g_relation_print(relation: CValuesRef<GRelation>?): Unit

@CCall("knifunptr_glibjson1550_g_tuples_destroy")
external fun g_tuples_destroy(tuples: CValuesRef<GTuples>?): Unit

@CCall("knifunptr_glibjson1551_g_tuples_index")
external fun g_tuples_index(tuples: CValuesRef<GTuples>?, index_: gint, field: gint): gpointer?

@CCall("knifunptr_glibjson1552_g_thread_create")
external fun g_thread_create(func: GThreadFunc?, data: gpointer?, joinable: gboolean, error: CValuesRef<CPointerVar<GError>>?): CPointer<GThread>?

@CCall("knifunptr_glibjson1553_g_thread_create_full")
external fun g_thread_create_full(func: GThreadFunc?, data: gpointer?, stack_size: gulong, joinable: gboolean, bound: gboolean, priority: GThreadPriority, error: CValuesRef<CPointerVar<GError>>?): CPointer<GThread>?

@CCall("knifunptr_glibjson1554_g_thread_set_priority")
external fun g_thread_set_priority(thread: CValuesRef<GThread>?, priority: GThreadPriority): Unit

@CCall("knifunptr_glibjson1555_g_thread_foreach")
external fun g_thread_foreach(thread_func: GFunc?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson1556_g_static_mutex_init")
external fun g_static_mutex_init(mutex: CValuesRef<GStaticMutex>?): Unit

@CCall("knifunptr_glibjson1557_g_static_mutex_free")
external fun g_static_mutex_free(mutex: CValuesRef<GStaticMutex>?): Unit

@CCall("knifunptr_glibjson1558_g_static_mutex_get_mutex_impl")
external fun g_static_mutex_get_mutex_impl(mutex: CValuesRef<GStaticMutex>?): CPointer<GMutex>?

@CCall("knifunptr_glibjson1559_g_static_rec_mutex_init")
external fun g_static_rec_mutex_init(mutex: CValuesRef<GStaticRecMutex>?): Unit

@CCall("knifunptr_glibjson1560_g_static_rec_mutex_lock")
external fun g_static_rec_mutex_lock(mutex: CValuesRef<GStaticRecMutex>?): Unit

@CCall("knifunptr_glibjson1561_g_static_rec_mutex_trylock")
external fun g_static_rec_mutex_trylock(mutex: CValuesRef<GStaticRecMutex>?): gboolean

@CCall("knifunptr_glibjson1562_g_static_rec_mutex_unlock")
external fun g_static_rec_mutex_unlock(mutex: CValuesRef<GStaticRecMutex>?): Unit

@CCall("knifunptr_glibjson1563_g_static_rec_mutex_lock_full")
external fun g_static_rec_mutex_lock_full(mutex: CValuesRef<GStaticRecMutex>?, depth: guint): Unit

@CCall("knifunptr_glibjson1564_g_static_rec_mutex_unlock_full")
external fun g_static_rec_mutex_unlock_full(mutex: CValuesRef<GStaticRecMutex>?): guint

@CCall("knifunptr_glibjson1565_g_static_rec_mutex_free")
external fun g_static_rec_mutex_free(mutex: CValuesRef<GStaticRecMutex>?): Unit

@CCall("knifunptr_glibjson1566_g_static_rw_lock_init")
external fun g_static_rw_lock_init(lock: CValuesRef<GStaticRWLock>?): Unit

@CCall("knifunptr_glibjson1567_g_static_rw_lock_reader_lock")
external fun g_static_rw_lock_reader_lock(lock: CValuesRef<GStaticRWLock>?): Unit

@CCall("knifunptr_glibjson1568_g_static_rw_lock_reader_trylock")
external fun g_static_rw_lock_reader_trylock(lock: CValuesRef<GStaticRWLock>?): gboolean

@CCall("knifunptr_glibjson1569_g_static_rw_lock_reader_unlock")
external fun g_static_rw_lock_reader_unlock(lock: CValuesRef<GStaticRWLock>?): Unit

@CCall("knifunptr_glibjson1570_g_static_rw_lock_writer_lock")
external fun g_static_rw_lock_writer_lock(lock: CValuesRef<GStaticRWLock>?): Unit

@CCall("knifunptr_glibjson1571_g_static_rw_lock_writer_trylock")
external fun g_static_rw_lock_writer_trylock(lock: CValuesRef<GStaticRWLock>?): gboolean

@CCall("knifunptr_glibjson1572_g_static_rw_lock_writer_unlock")
external fun g_static_rw_lock_writer_unlock(lock: CValuesRef<GStaticRWLock>?): Unit

@CCall("knifunptr_glibjson1573_g_static_rw_lock_free")
external fun g_static_rw_lock_free(lock: CValuesRef<GStaticRWLock>?): Unit

@CCall("knifunptr_glibjson1574_g_private_new")
external fun g_private_new(notify: GDestroyNotify?): CPointer<GPrivate>?

@CCall("knifunptr_glibjson1575_g_static_private_init")
external fun g_static_private_init(private_key: CValuesRef<GStaticPrivate>?): Unit

@CCall("knifunptr_glibjson1576_g_static_private_get")
external fun g_static_private_get(private_key: CValuesRef<GStaticPrivate>?): gpointer?

@CCall("knifunptr_glibjson1577_g_static_private_set")
external fun g_static_private_set(private_key: CValuesRef<GStaticPrivate>?, data: gpointer?, notify: GDestroyNotify?): Unit

@CCall("knifunptr_glibjson1578_g_static_private_free")
external fun g_static_private_free(private_key: CValuesRef<GStaticPrivate>?): Unit

@CCall("knifunptr_glibjson1579_g_once_init_enter_impl")
external fun g_once_init_enter_impl(location: CValuesRef<gsizeVar>?): gboolean

@CCall("knifunptr_glibjson1580_g_thread_init")
external fun g_thread_init(vtable: gpointer?): Unit

@CCall("knifunptr_glibjson1581_g_thread_init_with_errorcheck_mutexes")
external fun g_thread_init_with_errorcheck_mutexes(vtable: gpointer?): Unit

@CCall("knifunptr_glibjson1582_g_thread_get_initialized")
external fun g_thread_get_initialized(): gboolean

@CCall("knifunptr_glibjson1583_g_mutex_new")
external fun g_mutex_new(): CPointer<GMutex>?

@CCall("knifunptr_glibjson1584_g_mutex_free")
external fun g_mutex_free(mutex: CValuesRef<GMutex>?): Unit

@CCall("knifunptr_glibjson1585_g_cond_new")
external fun g_cond_new(): CPointer<GCond>?

@CCall("knifunptr_glibjson1586_g_cond_free")
external fun g_cond_free(cond: CValuesRef<GCond>?): Unit

@CCall("knifunptr_glibjson1587_g_cond_timed_wait")
external fun g_cond_timed_wait(cond: CValuesRef<GCond>?, mutex: CValuesRef<GMutex>?, timeval: CValuesRef<GTimeVal>?): gboolean

@CCall("knifunptr_glibjson1588_g_autoptr_cleanup_generic_gfree")
external fun g_autoptr_cleanup_generic_gfree(p: CValuesRef<*>?): Unit

@CCall("knifunptr_glibjson1589_g_autoptr_cleanup_gstring_free")
external fun g_autoptr_cleanup_gstring_free(string: CValuesRef<GString>?): Unit

@CCall("knifunptr_glibjson1590_glib_autoptr_cleanup_GAsyncQueue")
external fun glib_autoptr_cleanup_GAsyncQueue(_ptr: CValuesRef<CPointerVar<GAsyncQueue>>?): Unit

@CCall("knifunptr_glibjson1591_glib_listautoptr_cleanup_GAsyncQueue")
external fun glib_listautoptr_cleanup_GAsyncQueue(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1592_glib_slistautoptr_cleanup_GAsyncQueue")
external fun glib_slistautoptr_cleanup_GAsyncQueue(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1593_glib_autoptr_cleanup_GBookmarkFile")
external fun glib_autoptr_cleanup_GBookmarkFile(_ptr: CValuesRef<CPointerVar<GBookmarkFile>>?): Unit

@CCall("knifunptr_glibjson1594_glib_listautoptr_cleanup_GBookmarkFile")
external fun glib_listautoptr_cleanup_GBookmarkFile(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1595_glib_slistautoptr_cleanup_GBookmarkFile")
external fun glib_slistautoptr_cleanup_GBookmarkFile(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1596_glib_autoptr_cleanup_GBytes")
external fun glib_autoptr_cleanup_GBytes(_ptr: CValuesRef<CPointerVar<GBytes>>?): Unit

@CCall("knifunptr_glibjson1597_glib_listautoptr_cleanup_GBytes")
external fun glib_listautoptr_cleanup_GBytes(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1598_glib_slistautoptr_cleanup_GBytes")
external fun glib_slistautoptr_cleanup_GBytes(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1599_glib_autoptr_cleanup_GChecksum")
external fun glib_autoptr_cleanup_GChecksum(_ptr: CValuesRef<CPointerVar<GChecksum>>?): Unit

@CCall("knifunptr_glibjson1600_glib_listautoptr_cleanup_GChecksum")
external fun glib_listautoptr_cleanup_GChecksum(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1601_glib_slistautoptr_cleanup_GChecksum")
external fun glib_slistautoptr_cleanup_GChecksum(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1602_glib_autoptr_cleanup_GDateTime")
external fun glib_autoptr_cleanup_GDateTime(_ptr: CValuesRef<CPointerVar<GDateTime>>?): Unit

@CCall("knifunptr_glibjson1603_glib_listautoptr_cleanup_GDateTime")
external fun glib_listautoptr_cleanup_GDateTime(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1604_glib_slistautoptr_cleanup_GDateTime")
external fun glib_slistautoptr_cleanup_GDateTime(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1605_glib_autoptr_cleanup_GDir")
external fun glib_autoptr_cleanup_GDir(_ptr: CValuesRef<CPointerVar<GDir>>?): Unit

@CCall("knifunptr_glibjson1606_glib_listautoptr_cleanup_GDir")
external fun glib_listautoptr_cleanup_GDir(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1607_glib_slistautoptr_cleanup_GDir")
external fun glib_slistautoptr_cleanup_GDir(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1608_glib_autoptr_cleanup_GError")
external fun glib_autoptr_cleanup_GError(_ptr: CValuesRef<CPointerVar<GError>>?): Unit

@CCall("knifunptr_glibjson1609_glib_listautoptr_cleanup_GError")
external fun glib_listautoptr_cleanup_GError(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1610_glib_slistautoptr_cleanup_GError")
external fun glib_slistautoptr_cleanup_GError(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1611_glib_autoptr_cleanup_GHashTable")
external fun glib_autoptr_cleanup_GHashTable(_ptr: CValuesRef<CPointerVar<GHashTable>>?): Unit

@CCall("knifunptr_glibjson1612_glib_listautoptr_cleanup_GHashTable")
external fun glib_listautoptr_cleanup_GHashTable(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1613_glib_slistautoptr_cleanup_GHashTable")
external fun glib_slistautoptr_cleanup_GHashTable(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1614_glib_autoptr_cleanup_GHmac")
external fun glib_autoptr_cleanup_GHmac(_ptr: CValuesRef<CPointerVar<GHmac>>?): Unit

@CCall("knifunptr_glibjson1615_glib_listautoptr_cleanup_GHmac")
external fun glib_listautoptr_cleanup_GHmac(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1616_glib_slistautoptr_cleanup_GHmac")
external fun glib_slistautoptr_cleanup_GHmac(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1617_glib_autoptr_cleanup_GIOChannel")
external fun glib_autoptr_cleanup_GIOChannel(_ptr: CValuesRef<CPointerVar<GIOChannel>>?): Unit

@CCall("knifunptr_glibjson1618_glib_listautoptr_cleanup_GIOChannel")
external fun glib_listautoptr_cleanup_GIOChannel(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1619_glib_slistautoptr_cleanup_GIOChannel")
external fun glib_slistautoptr_cleanup_GIOChannel(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1620_glib_autoptr_cleanup_GKeyFile")
external fun glib_autoptr_cleanup_GKeyFile(_ptr: CValuesRef<CPointerVar<GKeyFile>>?): Unit

@CCall("knifunptr_glibjson1621_glib_listautoptr_cleanup_GKeyFile")
external fun glib_listautoptr_cleanup_GKeyFile(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1622_glib_slistautoptr_cleanup_GKeyFile")
external fun glib_slistautoptr_cleanup_GKeyFile(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1623_glib_autoptr_cleanup_GList")
external fun glib_autoptr_cleanup_GList(_ptr: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1624_glib_listautoptr_cleanup_GList")
external fun glib_listautoptr_cleanup_GList(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1625_glib_slistautoptr_cleanup_GList")
external fun glib_slistautoptr_cleanup_GList(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1626_glib_autoptr_cleanup_GArray")
external fun glib_autoptr_cleanup_GArray(_ptr: CValuesRef<CPointerVar<GArray>>?): Unit

@CCall("knifunptr_glibjson1627_glib_listautoptr_cleanup_GArray")
external fun glib_listautoptr_cleanup_GArray(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1628_glib_slistautoptr_cleanup_GArray")
external fun glib_slistautoptr_cleanup_GArray(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1629_glib_autoptr_cleanup_GPtrArray")
external fun glib_autoptr_cleanup_GPtrArray(_ptr: CValuesRef<CPointerVar<GPtrArray>>?): Unit

@CCall("knifunptr_glibjson1630_glib_listautoptr_cleanup_GPtrArray")
external fun glib_listautoptr_cleanup_GPtrArray(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1631_glib_slistautoptr_cleanup_GPtrArray")
external fun glib_slistautoptr_cleanup_GPtrArray(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1632_glib_autoptr_cleanup_GByteArray")
external fun glib_autoptr_cleanup_GByteArray(_ptr: CValuesRef<CPointerVar<GByteArray>>?): Unit

@CCall("knifunptr_glibjson1633_glib_listautoptr_cleanup_GByteArray")
external fun glib_listautoptr_cleanup_GByteArray(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1634_glib_slistautoptr_cleanup_GByteArray")
external fun glib_slistautoptr_cleanup_GByteArray(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1635_glib_autoptr_cleanup_GMainContext")
external fun glib_autoptr_cleanup_GMainContext(_ptr: CValuesRef<CPointerVar<GMainContext>>?): Unit

@CCall("knifunptr_glibjson1636_glib_listautoptr_cleanup_GMainContext")
external fun glib_listautoptr_cleanup_GMainContext(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1637_glib_slistautoptr_cleanup_GMainContext")
external fun glib_slistautoptr_cleanup_GMainContext(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1638_glib_autoptr_cleanup_GMainLoop")
external fun glib_autoptr_cleanup_GMainLoop(_ptr: CValuesRef<CPointerVar<GMainLoop>>?): Unit

@CCall("knifunptr_glibjson1639_glib_listautoptr_cleanup_GMainLoop")
external fun glib_listautoptr_cleanup_GMainLoop(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1640_glib_slistautoptr_cleanup_GMainLoop")
external fun glib_slistautoptr_cleanup_GMainLoop(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1641_glib_autoptr_cleanup_GSource")
external fun glib_autoptr_cleanup_GSource(_ptr: CValuesRef<CPointerVar<GSource>>?): Unit

@CCall("knifunptr_glibjson1642_glib_listautoptr_cleanup_GSource")
external fun glib_listautoptr_cleanup_GSource(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1643_glib_slistautoptr_cleanup_GSource")
external fun glib_slistautoptr_cleanup_GSource(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1644_glib_autoptr_cleanup_GMappedFile")
external fun glib_autoptr_cleanup_GMappedFile(_ptr: CValuesRef<CPointerVar<GMappedFile>>?): Unit

@CCall("knifunptr_glibjson1645_glib_listautoptr_cleanup_GMappedFile")
external fun glib_listautoptr_cleanup_GMappedFile(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1646_glib_slistautoptr_cleanup_GMappedFile")
external fun glib_slistautoptr_cleanup_GMappedFile(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1647_glib_autoptr_cleanup_GMarkupParseContext")
external fun glib_autoptr_cleanup_GMarkupParseContext(_ptr: CValuesRef<CPointerVar<GMarkupParseContext>>?): Unit

@CCall("knifunptr_glibjson1648_glib_listautoptr_cleanup_GMarkupParseContext")
external fun glib_listautoptr_cleanup_GMarkupParseContext(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1649_glib_slistautoptr_cleanup_GMarkupParseContext")
external fun glib_slistautoptr_cleanup_GMarkupParseContext(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1650_glib_autoptr_cleanup_GNode")
external fun glib_autoptr_cleanup_GNode(_ptr: CValuesRef<CPointerVar<GNode>>?): Unit

@CCall("knifunptr_glibjson1651_glib_listautoptr_cleanup_GNode")
external fun glib_listautoptr_cleanup_GNode(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1652_glib_slistautoptr_cleanup_GNode")
external fun glib_slistautoptr_cleanup_GNode(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1653_glib_autoptr_cleanup_GOptionContext")
external fun glib_autoptr_cleanup_GOptionContext(_ptr: CValuesRef<CPointerVar<GOptionContext>>?): Unit

@CCall("knifunptr_glibjson1654_glib_listautoptr_cleanup_GOptionContext")
external fun glib_listautoptr_cleanup_GOptionContext(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1655_glib_slistautoptr_cleanup_GOptionContext")
external fun glib_slistautoptr_cleanup_GOptionContext(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1656_glib_autoptr_cleanup_GOptionGroup")
external fun glib_autoptr_cleanup_GOptionGroup(_ptr: CValuesRef<CPointerVar<GOptionGroup>>?): Unit

@CCall("knifunptr_glibjson1657_glib_listautoptr_cleanup_GOptionGroup")
external fun glib_listautoptr_cleanup_GOptionGroup(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1658_glib_slistautoptr_cleanup_GOptionGroup")
external fun glib_slistautoptr_cleanup_GOptionGroup(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1659_glib_autoptr_cleanup_GPatternSpec")
external fun glib_autoptr_cleanup_GPatternSpec(_ptr: CValuesRef<CPointerVar<GPatternSpec>>?): Unit

@CCall("knifunptr_glibjson1660_glib_listautoptr_cleanup_GPatternSpec")
external fun glib_listautoptr_cleanup_GPatternSpec(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1661_glib_slistautoptr_cleanup_GPatternSpec")
external fun glib_slistautoptr_cleanup_GPatternSpec(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1662_glib_autoptr_cleanup_GQueue")
external fun glib_autoptr_cleanup_GQueue(_ptr: CValuesRef<CPointerVar<GQueue>>?): Unit

@CCall("knifunptr_glibjson1663_glib_listautoptr_cleanup_GQueue")
external fun glib_listautoptr_cleanup_GQueue(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1664_glib_slistautoptr_cleanup_GQueue")
external fun glib_slistautoptr_cleanup_GQueue(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1665_glib_auto_cleanup_GQueue")
external fun glib_auto_cleanup_GQueue(_ptr: CValuesRef<GQueue>?): Unit

@CCall("knifunptr_glibjson1666_glib_autoptr_cleanup_GRand")
external fun glib_autoptr_cleanup_GRand(_ptr: CValuesRef<CPointerVar<GRand>>?): Unit

@CCall("knifunptr_glibjson1667_glib_listautoptr_cleanup_GRand")
external fun glib_listautoptr_cleanup_GRand(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1668_glib_slistautoptr_cleanup_GRand")
external fun glib_slistautoptr_cleanup_GRand(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1669_glib_autoptr_cleanup_GRegex")
external fun glib_autoptr_cleanup_GRegex(_ptr: CValuesRef<CPointerVar<GRegex>>?): Unit

@CCall("knifunptr_glibjson1670_glib_listautoptr_cleanup_GRegex")
external fun glib_listautoptr_cleanup_GRegex(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1671_glib_slistautoptr_cleanup_GRegex")
external fun glib_slistautoptr_cleanup_GRegex(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1672_glib_autoptr_cleanup_GMatchInfo")
external fun glib_autoptr_cleanup_GMatchInfo(_ptr: CValuesRef<CPointerVar<GMatchInfo>>?): Unit

@CCall("knifunptr_glibjson1673_glib_listautoptr_cleanup_GMatchInfo")
external fun glib_listautoptr_cleanup_GMatchInfo(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1674_glib_slistautoptr_cleanup_GMatchInfo")
external fun glib_slistautoptr_cleanup_GMatchInfo(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1675_glib_autoptr_cleanup_GScanner")
external fun glib_autoptr_cleanup_GScanner(_ptr: CValuesRef<CPointerVar<GScanner>>?): Unit

@CCall("knifunptr_glibjson1676_glib_listautoptr_cleanup_GScanner")
external fun glib_listautoptr_cleanup_GScanner(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1677_glib_slistautoptr_cleanup_GScanner")
external fun glib_slistautoptr_cleanup_GScanner(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1678_glib_autoptr_cleanup_GSequence")
external fun glib_autoptr_cleanup_GSequence(_ptr: CValuesRef<CPointerVar<GSequence>>?): Unit

@CCall("knifunptr_glibjson1679_glib_listautoptr_cleanup_GSequence")
external fun glib_listautoptr_cleanup_GSequence(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1680_glib_slistautoptr_cleanup_GSequence")
external fun glib_slistautoptr_cleanup_GSequence(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1681_glib_autoptr_cleanup_GSList")
external fun glib_autoptr_cleanup_GSList(_ptr: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1682_glib_listautoptr_cleanup_GSList")
external fun glib_listautoptr_cleanup_GSList(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1683_glib_slistautoptr_cleanup_GSList")
external fun glib_slistautoptr_cleanup_GSList(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1684_glib_autoptr_cleanup_GString")
external fun glib_autoptr_cleanup_GString(_ptr: CValuesRef<CPointerVar<GString>>?): Unit

@CCall("knifunptr_glibjson1685_glib_listautoptr_cleanup_GString")
external fun glib_listautoptr_cleanup_GString(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1686_glib_slistautoptr_cleanup_GString")
external fun glib_slistautoptr_cleanup_GString(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1687_glib_autoptr_cleanup_GStringChunk")
external fun glib_autoptr_cleanup_GStringChunk(_ptr: CValuesRef<CPointerVar<GStringChunk>>?): Unit

@CCall("knifunptr_glibjson1688_glib_listautoptr_cleanup_GStringChunk")
external fun glib_listautoptr_cleanup_GStringChunk(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1689_glib_slistautoptr_cleanup_GStringChunk")
external fun glib_slistautoptr_cleanup_GStringChunk(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1690_glib_autoptr_cleanup_GThread")
external fun glib_autoptr_cleanup_GThread(_ptr: CValuesRef<CPointerVar<GThread>>?): Unit

@CCall("knifunptr_glibjson1691_glib_listautoptr_cleanup_GThread")
external fun glib_listautoptr_cleanup_GThread(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1692_glib_slistautoptr_cleanup_GThread")
external fun glib_slistautoptr_cleanup_GThread(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1693_glib_auto_cleanup_GMutex")
external fun glib_auto_cleanup_GMutex(_ptr: CValuesRef<GMutex>?): Unit

@CCall("knifunptr_glibjson1694_glib_autoptr_cleanup_GMutexLocker")
external fun glib_autoptr_cleanup_GMutexLocker(_ptr: CValuesRef<COpaquePointerVar>?): Unit

@CCall("knifunptr_glibjson1695_glib_listautoptr_cleanup_GMutexLocker")
external fun glib_listautoptr_cleanup_GMutexLocker(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1696_glib_slistautoptr_cleanup_GMutexLocker")
external fun glib_slistautoptr_cleanup_GMutexLocker(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1697_glib_auto_cleanup_GCond")
external fun glib_auto_cleanup_GCond(_ptr: CValuesRef<GCond>?): Unit

@CCall("knifunptr_glibjson1698_glib_autoptr_cleanup_GTimer")
external fun glib_autoptr_cleanup_GTimer(_ptr: CValuesRef<CPointerVar<GTimer>>?): Unit

@CCall("knifunptr_glibjson1699_glib_listautoptr_cleanup_GTimer")
external fun glib_listautoptr_cleanup_GTimer(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1700_glib_slistautoptr_cleanup_GTimer")
external fun glib_slistautoptr_cleanup_GTimer(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1701_glib_autoptr_cleanup_GTimeZone")
external fun glib_autoptr_cleanup_GTimeZone(_ptr: CValuesRef<CPointerVar<GTimeZone>>?): Unit

@CCall("knifunptr_glibjson1702_glib_listautoptr_cleanup_GTimeZone")
external fun glib_listautoptr_cleanup_GTimeZone(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1703_glib_slistautoptr_cleanup_GTimeZone")
external fun glib_slistautoptr_cleanup_GTimeZone(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1704_glib_autoptr_cleanup_GTree")
external fun glib_autoptr_cleanup_GTree(_ptr: CValuesRef<CPointerVar<GTree>>?): Unit

@CCall("knifunptr_glibjson1705_glib_listautoptr_cleanup_GTree")
external fun glib_listautoptr_cleanup_GTree(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1706_glib_slistautoptr_cleanup_GTree")
external fun glib_slistautoptr_cleanup_GTree(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1707_glib_autoptr_cleanup_GVariant")
external fun glib_autoptr_cleanup_GVariant(_ptr: CValuesRef<CPointerVar<GVariant>>?): Unit

@CCall("knifunptr_glibjson1708_glib_listautoptr_cleanup_GVariant")
external fun glib_listautoptr_cleanup_GVariant(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1709_glib_slistautoptr_cleanup_GVariant")
external fun glib_slistautoptr_cleanup_GVariant(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1710_glib_autoptr_cleanup_GVariantBuilder")
external fun glib_autoptr_cleanup_GVariantBuilder(_ptr: CValuesRef<CPointerVar<GVariantBuilder>>?): Unit

@CCall("knifunptr_glibjson1711_glib_listautoptr_cleanup_GVariantBuilder")
external fun glib_listautoptr_cleanup_GVariantBuilder(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1712_glib_slistautoptr_cleanup_GVariantBuilder")
external fun glib_slistautoptr_cleanup_GVariantBuilder(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1713_glib_auto_cleanup_GVariantBuilder")
external fun glib_auto_cleanup_GVariantBuilder(_ptr: CValuesRef<GVariantBuilder>?): Unit

@CCall("knifunptr_glibjson1714_glib_autoptr_cleanup_GVariantIter")
external fun glib_autoptr_cleanup_GVariantIter(_ptr: CValuesRef<CPointerVar<GVariantIter>>?): Unit

@CCall("knifunptr_glibjson1715_glib_listautoptr_cleanup_GVariantIter")
external fun glib_listautoptr_cleanup_GVariantIter(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1716_glib_slistautoptr_cleanup_GVariantIter")
external fun glib_slistautoptr_cleanup_GVariantIter(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1717_glib_autoptr_cleanup_GVariantDict")
external fun glib_autoptr_cleanup_GVariantDict(_ptr: CValuesRef<CPointerVar<GVariantDict>>?): Unit

@CCall("knifunptr_glibjson1718_glib_listautoptr_cleanup_GVariantDict")
external fun glib_listautoptr_cleanup_GVariantDict(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1719_glib_slistautoptr_cleanup_GVariantDict")
external fun glib_slistautoptr_cleanup_GVariantDict(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1720_glib_auto_cleanup_GVariantDict")
external fun glib_auto_cleanup_GVariantDict(_ptr: CValuesRef<GVariantDict>?): Unit

@CCall("knifunptr_glibjson1721_glib_autoptr_cleanup_GVariantType")
external fun glib_autoptr_cleanup_GVariantType(_ptr: CValuesRef<CPointerVar<GVariantType>>?): Unit

@CCall("knifunptr_glibjson1722_glib_listautoptr_cleanup_GVariantType")
external fun glib_listautoptr_cleanup_GVariantType(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson1723_glib_slistautoptr_cleanup_GVariantType")
external fun glib_slistautoptr_cleanup_GVariantType(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson1724_glib_auto_cleanup_GStrv")
external fun glib_auto_cleanup_GStrv(_ptr: CValuesRef<GStrvVar>?): Unit

@CCall("knifunptr_glibjson1725_g_type_init")
external fun g_type_init(): Unit

@CCall("knifunptr_glibjson1726_g_type_init_with_debug_flags")
external fun g_type_init_with_debug_flags(debug_flags: GTypeDebugFlags): Unit

@CCall("knifunptr_glibjson1727_g_type_name")
external fun g_type_name(type: GType): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1728_g_type_qname")
external fun g_type_qname(type: GType): GQuark

@CCall("knifunptr_glibjson1729_g_type_from_name")
external fun g_type_from_name(@CCall.CString name: String?): GType

@CCall("knifunptr_glibjson1730_g_type_parent")
external fun g_type_parent(type: GType): GType

@CCall("knifunptr_glibjson1731_g_type_depth")
external fun g_type_depth(type: GType): guint

@CCall("knifunptr_glibjson1732_g_type_next_base")
external fun g_type_next_base(leaf_type: GType, root_type: GType): GType

@CCall("knifunptr_glibjson1733_g_type_is_a")
external fun g_type_is_a(type: GType, is_a_type: GType): gboolean

@CCall("knifunptr_glibjson1734_g_type_class_ref")
external fun g_type_class_ref(type: GType): gpointer?

@CCall("knifunptr_glibjson1735_g_type_class_peek")
external fun g_type_class_peek(type: GType): gpointer?

@CCall("knifunptr_glibjson1736_g_type_class_peek_static")
external fun g_type_class_peek_static(type: GType): gpointer?

@CCall("knifunptr_glibjson1737_g_type_class_unref")
external fun g_type_class_unref(g_class: gpointer?): Unit

@CCall("knifunptr_glibjson1738_g_type_class_peek_parent")
external fun g_type_class_peek_parent(g_class: gpointer?): gpointer?

@CCall("knifunptr_glibjson1739_g_type_interface_peek")
external fun g_type_interface_peek(instance_class: gpointer?, iface_type: GType): gpointer?

@CCall("knifunptr_glibjson1740_g_type_interface_peek_parent")
external fun g_type_interface_peek_parent(g_iface: gpointer?): gpointer?

@CCall("knifunptr_glibjson1741_g_type_default_interface_ref")
external fun g_type_default_interface_ref(g_type: GType): gpointer?

@CCall("knifunptr_glibjson1742_g_type_default_interface_peek")
external fun g_type_default_interface_peek(g_type: GType): gpointer?

@CCall("knifunptr_glibjson1743_g_type_default_interface_unref")
external fun g_type_default_interface_unref(g_iface: gpointer?): Unit

@CCall("knifunptr_glibjson1744_g_type_children")
external fun g_type_children(type: GType, n_children: CValuesRef<guintVar>?): CPointer<GTypeVar>?

@CCall("knifunptr_glibjson1745_g_type_interfaces")
external fun g_type_interfaces(type: GType, n_interfaces: CValuesRef<guintVar>?): CPointer<GTypeVar>?

@CCall("knifunptr_glibjson1746_g_type_set_qdata")
external fun g_type_set_qdata(type: GType, quark: GQuark, data: gpointer?): Unit

@CCall("knifunptr_glibjson1747_g_type_get_qdata")
external fun g_type_get_qdata(type: GType, quark: GQuark): gpointer?

@CCall("knifunptr_glibjson1748_g_type_query")
external fun g_type_query(type: GType, query: CValuesRef<GTypeQuery>?): Unit

@CCall("knifunptr_glibjson1749_g_type_get_instance_count")
external fun g_type_get_instance_count(type: GType): Int

@CCall("knifunptr_glibjson1750_g_type_register_static")
external fun g_type_register_static(parent_type: GType, @CCall.CString type_name: String?, info: CValuesRef<GTypeInfo>?, flags: GTypeFlags): GType

@CCall("knifunptr_glibjson1751_g_type_register_static_simple")
external fun g_type_register_static_simple(parent_type: GType, @CCall.CString type_name: String?, class_size: guint, class_init: GClassInitFunc?, instance_size: guint, instance_init: GInstanceInitFunc?, flags: GTypeFlags): GType

@CCall("knifunptr_glibjson1752_g_type_register_dynamic")
external fun g_type_register_dynamic(parent_type: GType, @CCall.CString type_name: String?, plugin: CValuesRef<GTypePlugin>?, flags: GTypeFlags): GType

@CCall("knifunptr_glibjson1753_g_type_register_fundamental")
external fun g_type_register_fundamental(type_id: GType, @CCall.CString type_name: String?, info: CValuesRef<GTypeInfo>?, finfo: CValuesRef<GTypeFundamentalInfo>?, flags: GTypeFlags): GType

@CCall("knifunptr_glibjson1754_g_type_add_interface_static")
external fun g_type_add_interface_static(instance_type: GType, interface_type: GType, info: CValuesRef<GInterfaceInfo>?): Unit

@CCall("knifunptr_glibjson1755_g_type_add_interface_dynamic")
external fun g_type_add_interface_dynamic(instance_type: GType, interface_type: GType, plugin: CValuesRef<GTypePlugin>?): Unit

@CCall("knifunptr_glibjson1756_g_type_interface_add_prerequisite")
external fun g_type_interface_add_prerequisite(interface_type: GType, prerequisite_type: GType): Unit

@CCall("knifunptr_glibjson1757_g_type_interface_prerequisites")
external fun g_type_interface_prerequisites(interface_type: GType, n_prerequisites: CValuesRef<guintVar>?): CPointer<GTypeVar>?

@CCall("knifunptr_glibjson1758_g_type_class_add_private")
external fun g_type_class_add_private(g_class: gpointer?, private_size: gsize): Unit

@CCall("knifunptr_glibjson1759_g_type_add_instance_private")
external fun g_type_add_instance_private(class_type: GType, private_size: gsize): gint

@CCall("knifunptr_glibjson1760_g_type_instance_get_private")
external fun g_type_instance_get_private(instance: CValuesRef<GTypeInstance>?, private_type: GType): gpointer?

@CCall("knifunptr_glibjson1761_g_type_class_adjust_private_offset")
external fun g_type_class_adjust_private_offset(g_class: gpointer?, private_size_or_offset: CValuesRef<gintVar>?): Unit

@CCall("knifunptr_glibjson1762_g_type_add_class_private")
external fun g_type_add_class_private(class_type: GType, private_size: gsize): Unit

@CCall("knifunptr_glibjson1763_g_type_class_get_private")
external fun g_type_class_get_private(klass: CValuesRef<GTypeClass>?, private_type: GType): gpointer?

@CCall("knifunptr_glibjson1764_g_type_class_get_instance_private_offset")
external fun g_type_class_get_instance_private_offset(g_class: gpointer?): gint

@CCall("knifunptr_glibjson1765_g_type_ensure")
external fun g_type_ensure(type: GType): Unit

@CCall("knifunptr_glibjson1766_g_type_get_type_registration_serial")
external fun g_type_get_type_registration_serial(): guint

@CCall("knifunptr_glibjson1767_g_type_get_plugin")
external fun g_type_get_plugin(type: GType): CPointer<GTypePlugin>?

@CCall("knifunptr_glibjson1768_g_type_interface_get_plugin")
external fun g_type_interface_get_plugin(instance_type: GType, interface_type: GType): CPointer<GTypePlugin>?

@CCall("knifunptr_glibjson1769_g_type_fundamental_next")
external fun g_type_fundamental_next(): GType

@CCall("knifunptr_glibjson1770_g_type_fundamental")
external fun g_type_fundamental(type_id: GType): GType

@CCall("knifunptr_glibjson1771_g_type_create_instance")
external fun g_type_create_instance(type: GType): CPointer<GTypeInstance>?

@CCall("knifunptr_glibjson1772_g_type_free_instance")
external fun g_type_free_instance(instance: CValuesRef<GTypeInstance>?): Unit

@CCall("knifunptr_glibjson1773_g_type_add_class_cache_func")
external fun g_type_add_class_cache_func(cache_data: gpointer?, cache_func: GTypeClassCacheFunc?): Unit

@CCall("knifunptr_glibjson1774_g_type_remove_class_cache_func")
external fun g_type_remove_class_cache_func(cache_data: gpointer?, cache_func: GTypeClassCacheFunc?): Unit

@CCall("knifunptr_glibjson1775_g_type_class_unref_uncached")
external fun g_type_class_unref_uncached(g_class: gpointer?): Unit

@CCall("knifunptr_glibjson1776_g_type_add_interface_check")
external fun g_type_add_interface_check(check_data: gpointer?, check_func: GTypeInterfaceCheckFunc?): Unit

@CCall("knifunptr_glibjson1777_g_type_remove_interface_check")
external fun g_type_remove_interface_check(check_data: gpointer?, check_func: GTypeInterfaceCheckFunc?): Unit

@CCall("knifunptr_glibjson1778_g_type_value_table_peek")
external fun g_type_value_table_peek(type: GType): CPointer<GTypeValueTable>?

@CCall("knifunptr_glibjson1779_g_type_check_instance")
external fun g_type_check_instance(instance: CValuesRef<GTypeInstance>?): gboolean

@CCall("knifunptr_glibjson1780_g_type_check_instance_cast")
external fun g_type_check_instance_cast(instance: CValuesRef<GTypeInstance>?, iface_type: GType): CPointer<GTypeInstance>?

@CCall("knifunptr_glibjson1781_g_type_check_instance_is_a")
external fun g_type_check_instance_is_a(instance: CValuesRef<GTypeInstance>?, iface_type: GType): gboolean

@CCall("knifunptr_glibjson1782_g_type_check_instance_is_fundamentally_a")
external fun g_type_check_instance_is_fundamentally_a(instance: CValuesRef<GTypeInstance>?, fundamental_type: GType): gboolean

@CCall("knifunptr_glibjson1783_g_type_check_class_cast")
external fun g_type_check_class_cast(g_class: CValuesRef<GTypeClass>?, is_a_type: GType): CPointer<GTypeClass>?

@CCall("knifunptr_glibjson1784_g_type_check_class_is_a")
external fun g_type_check_class_is_a(g_class: CValuesRef<GTypeClass>?, is_a_type: GType): gboolean

@CCall("knifunptr_glibjson1785_g_type_check_is_value_type")
external fun g_type_check_is_value_type(type: GType): gboolean

@CCall("knifunptr_glibjson1786_g_type_check_value")
external fun g_type_check_value(value: CValuesRef<GValue>?): gboolean

@CCall("knifunptr_glibjson1787_g_type_check_value_holds")
external fun g_type_check_value_holds(value: CValuesRef<GValue>?, type: GType): gboolean

@CCall("knifunptr_glibjson1788_g_type_test_flags")
external fun g_type_test_flags(type: GType, flags: guint): gboolean

@CCall("knifunptr_glibjson1789_g_type_name_from_instance")
external fun g_type_name_from_instance(instance: CValuesRef<GTypeInstance>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1790_g_type_name_from_class")
external fun g_type_name_from_class(g_class: CValuesRef<GTypeClass>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1791_g_value_init")
external fun g_value_init(value: CValuesRef<GValue>?, g_type: GType): CPointer<GValue>?

@CCall("knifunptr_glibjson1792_g_value_copy")
external fun g_value_copy(src_value: CValuesRef<GValue>?, dest_value: CValuesRef<GValue>?): Unit

@CCall("knifunptr_glibjson1793_g_value_reset")
external fun g_value_reset(value: CValuesRef<GValue>?): CPointer<GValue>?

@CCall("knifunptr_glibjson1794_g_value_unset")
external fun g_value_unset(value: CValuesRef<GValue>?): Unit

@CCall("knifunptr_glibjson1795_g_value_set_instance")
external fun g_value_set_instance(value: CValuesRef<GValue>?, instance: gpointer?): Unit

@CCall("knifunptr_glibjson1796_g_value_init_from_instance")
external fun g_value_init_from_instance(value: CValuesRef<GValue>?, instance: gpointer?): Unit

@CCall("knifunptr_glibjson1797_g_value_fits_pointer")
external fun g_value_fits_pointer(value: CValuesRef<GValue>?): gboolean

@CCall("knifunptr_glibjson1798_g_value_peek_pointer")
external fun g_value_peek_pointer(value: CValuesRef<GValue>?): gpointer?

@CCall("knifunptr_glibjson1799_g_value_type_compatible")
external fun g_value_type_compatible(src_type: GType, dest_type: GType): gboolean

@CCall("knifunptr_glibjson1800_g_value_type_transformable")
external fun g_value_type_transformable(src_type: GType, dest_type: GType): gboolean

@CCall("knifunptr_glibjson1801_g_value_transform")
external fun g_value_transform(src_value: CValuesRef<GValue>?, dest_value: CValuesRef<GValue>?): gboolean

@CCall("knifunptr_glibjson1802_g_value_register_transform_func")
external fun g_value_register_transform_func(src_type: GType, dest_type: GType, transform_func: GValueTransform?): Unit

@CCall("knifunptr_glibjson1803_g_param_spec_ref")
external fun g_param_spec_ref(pspec: CValuesRef<GParamSpec>?): CPointer<GParamSpec>?

@CCall("knifunptr_glibjson1804_g_param_spec_unref")
external fun g_param_spec_unref(pspec: CValuesRef<GParamSpec>?): Unit

@CCall("knifunptr_glibjson1805_g_param_spec_sink")
external fun g_param_spec_sink(pspec: CValuesRef<GParamSpec>?): Unit

@CCall("knifunptr_glibjson1806_g_param_spec_ref_sink")
external fun g_param_spec_ref_sink(pspec: CValuesRef<GParamSpec>?): CPointer<GParamSpec>?

@CCall("knifunptr_glibjson1807_g_param_spec_get_qdata")
external fun g_param_spec_get_qdata(pspec: CValuesRef<GParamSpec>?, quark: GQuark): gpointer?

@CCall("knifunptr_glibjson1808_g_param_spec_set_qdata")
external fun g_param_spec_set_qdata(pspec: CValuesRef<GParamSpec>?, quark: GQuark, data: gpointer?): Unit

@CCall("knifunptr_glibjson1809_g_param_spec_set_qdata_full")
external fun g_param_spec_set_qdata_full(pspec: CValuesRef<GParamSpec>?, quark: GQuark, data: gpointer?, destroy: GDestroyNotify?): Unit

@CCall("knifunptr_glibjson1810_g_param_spec_steal_qdata")
external fun g_param_spec_steal_qdata(pspec: CValuesRef<GParamSpec>?, quark: GQuark): gpointer?

@CCall("knifunptr_glibjson1811_g_param_spec_get_redirect_target")
external fun g_param_spec_get_redirect_target(pspec: CValuesRef<GParamSpec>?): CPointer<GParamSpec>?

@CCall("knifunptr_glibjson1812_g_param_value_set_default")
external fun g_param_value_set_default(pspec: CValuesRef<GParamSpec>?, value: CValuesRef<GValue>?): Unit

@CCall("knifunptr_glibjson1813_g_param_value_defaults")
external fun g_param_value_defaults(pspec: CValuesRef<GParamSpec>?, value: CValuesRef<GValue>?): gboolean

@CCall("knifunptr_glibjson1814_g_param_value_validate")
external fun g_param_value_validate(pspec: CValuesRef<GParamSpec>?, value: CValuesRef<GValue>?): gboolean

@CCall("knifunptr_glibjson1815_g_param_value_convert")
external fun g_param_value_convert(pspec: CValuesRef<GParamSpec>?, src_value: CValuesRef<GValue>?, dest_value: CValuesRef<GValue>?, strict_validation: gboolean): gboolean

@CCall("knifunptr_glibjson1816_g_param_values_cmp")
external fun g_param_values_cmp(pspec: CValuesRef<GParamSpec>?, value1: CValuesRef<GValue>?, value2: CValuesRef<GValue>?): gint

@CCall("knifunptr_glibjson1817_g_param_spec_get_name")
external fun g_param_spec_get_name(pspec: CValuesRef<GParamSpec>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1818_g_param_spec_get_nick")
external fun g_param_spec_get_nick(pspec: CValuesRef<GParamSpec>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1819_g_param_spec_get_blurb")
external fun g_param_spec_get_blurb(pspec: CValuesRef<GParamSpec>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1820_g_value_set_param")
external fun g_value_set_param(value: CValuesRef<GValue>?, param: CValuesRef<GParamSpec>?): Unit

@CCall("knifunptr_glibjson1821_g_value_get_param")
external fun g_value_get_param(value: CValuesRef<GValue>?): CPointer<GParamSpec>?

@CCall("knifunptr_glibjson1822_g_value_dup_param")
external fun g_value_dup_param(value: CValuesRef<GValue>?): CPointer<GParamSpec>?

@CCall("knifunptr_glibjson1823_g_value_take_param")
external fun g_value_take_param(value: CValuesRef<GValue>?, param: CValuesRef<GParamSpec>?): Unit

@CCall("knifunptr_glibjson1824_g_value_set_param_take_ownership")
external fun g_value_set_param_take_ownership(value: CValuesRef<GValue>?, param: CValuesRef<GParamSpec>?): Unit

@CCall("knifunptr_glibjson1825_g_param_spec_get_default_value")
external fun g_param_spec_get_default_value(pspec: CValuesRef<GParamSpec>?): CPointer<GValue>?

@CCall("knifunptr_glibjson1826_g_param_spec_get_name_quark")
external fun g_param_spec_get_name_quark(pspec: CValuesRef<GParamSpec>?): GQuark

@CCall("knifunptr_glibjson1827_g_param_type_register_static")
external fun g_param_type_register_static(@CCall.CString name: String?, pspec_info: CValuesRef<GParamSpecTypeInfo>?): GType

@CCall("knifunptr_glibjson1828__g_param_type_register_static_constant")
external fun _g_param_type_register_static_constant(@CCall.CString name: String?, pspec_info: CValuesRef<GParamSpecTypeInfo>?, opt_type: GType): GType

@CCall("knifunptr_glibjson1829_g_param_spec_internal")
external fun g_param_spec_internal(param_type: GType, @CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, flags: GParamFlags): gpointer?

@CCall("knifunptr_glibjson1830_g_param_spec_pool_new")
external fun g_param_spec_pool_new(type_prefixing: gboolean): CPointer<GParamSpecPool>?

@CCall("knifunptr_glibjson1831_g_param_spec_pool_insert")
external fun g_param_spec_pool_insert(pool: CValuesRef<GParamSpecPool>?, pspec: CValuesRef<GParamSpec>?, owner_type: GType): Unit

@CCall("knifunptr_glibjson1832_g_param_spec_pool_remove")
external fun g_param_spec_pool_remove(pool: CValuesRef<GParamSpecPool>?, pspec: CValuesRef<GParamSpec>?): Unit

@CCall("knifunptr_glibjson1833_g_param_spec_pool_lookup")
external fun g_param_spec_pool_lookup(pool: CValuesRef<GParamSpecPool>?, @CCall.CString param_name: String?, owner_type: GType, walk_ancestors: gboolean): CPointer<GParamSpec>?

@CCall("knifunptr_glibjson1834_g_param_spec_pool_list_owned")
external fun g_param_spec_pool_list_owned(pool: CValuesRef<GParamSpecPool>?, owner_type: GType): CPointer<GList>?

@CCall("knifunptr_glibjson1835_g_param_spec_pool_list")
external fun g_param_spec_pool_list(pool: CValuesRef<GParamSpecPool>?, owner_type: GType, n_pspecs_p: CValuesRef<guintVar>?): CPointer<CPointerVar<GParamSpec>>?

@CCall("knifunptr_glibjson1836_g_cclosure_new")
external fun g_cclosure_new(callback_func: GCallback?, user_data: gpointer?, destroy_data: GClosureNotify?): CPointer<GClosure>?

@CCall("knifunptr_glibjson1837_g_cclosure_new_swap")
external fun g_cclosure_new_swap(callback_func: GCallback?, user_data: gpointer?, destroy_data: GClosureNotify?): CPointer<GClosure>?

@CCall("knifunptr_glibjson1838_g_signal_type_cclosure_new")
external fun g_signal_type_cclosure_new(itype: GType, struct_offset: guint): CPointer<GClosure>?

@CCall("knifunptr_glibjson1839_g_closure_ref")
external fun g_closure_ref(closure: CValuesRef<GClosure>?): CPointer<GClosure>?

@CCall("knifunptr_glibjson1840_g_closure_sink")
external fun g_closure_sink(closure: CValuesRef<GClosure>?): Unit

@CCall("knifunptr_glibjson1841_g_closure_unref")
external fun g_closure_unref(closure: CValuesRef<GClosure>?): Unit

@CCall("knifunptr_glibjson1842_g_closure_new_simple")
external fun g_closure_new_simple(sizeof_closure: guint, data: gpointer?): CPointer<GClosure>?

@CCall("knifunptr_glibjson1843_g_closure_add_finalize_notifier")
external fun g_closure_add_finalize_notifier(closure: CValuesRef<GClosure>?, notify_data: gpointer?, notify_func: GClosureNotify?): Unit

@CCall("knifunptr_glibjson1844_g_closure_remove_finalize_notifier")
external fun g_closure_remove_finalize_notifier(closure: CValuesRef<GClosure>?, notify_data: gpointer?, notify_func: GClosureNotify?): Unit

@CCall("knifunptr_glibjson1845_g_closure_add_invalidate_notifier")
external fun g_closure_add_invalidate_notifier(closure: CValuesRef<GClosure>?, notify_data: gpointer?, notify_func: GClosureNotify?): Unit

@CCall("knifunptr_glibjson1846_g_closure_remove_invalidate_notifier")
external fun g_closure_remove_invalidate_notifier(closure: CValuesRef<GClosure>?, notify_data: gpointer?, notify_func: GClosureNotify?): Unit

@CCall("knifunptr_glibjson1847_g_closure_add_marshal_guards")
external fun g_closure_add_marshal_guards(closure: CValuesRef<GClosure>?, pre_marshal_data: gpointer?, pre_marshal_notify: GClosureNotify?, post_marshal_data: gpointer?, post_marshal_notify: GClosureNotify?): Unit

@CCall("knifunptr_glibjson1848_g_closure_set_marshal")
external fun g_closure_set_marshal(closure: CValuesRef<GClosure>?, marshal: GClosureMarshal?): Unit

@CCall("knifunptr_glibjson1849_g_closure_set_meta_marshal")
external fun g_closure_set_meta_marshal(closure: CValuesRef<GClosure>?, marshal_data: gpointer?, meta_marshal: GClosureMarshal?): Unit

@CCall("knifunptr_glibjson1850_g_closure_invalidate")
external fun g_closure_invalidate(closure: CValuesRef<GClosure>?): Unit

@CCall("knifunptr_glibjson1851_g_closure_invoke")
external fun g_closure_invoke(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?): Unit

@CCall("knifunptr_glibjson1852_g_cclosure_marshal_generic")
external fun g_cclosure_marshal_generic(closure: CValuesRef<GClosure>?, return_gvalue: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_glibjson1853_g_cclosure_marshal_generic_va")
external fun g_cclosure_marshal_generic_va(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args_list: va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_glibjson1854_g_cclosure_marshal_VOID__VOID")
external fun g_cclosure_marshal_VOID__VOID(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_glibjson1855_g_cclosure_marshal_VOID__VOIDv")
external fun g_cclosure_marshal_VOID__VOIDv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_glibjson1856_g_cclosure_marshal_VOID__BOOLEAN")
external fun g_cclosure_marshal_VOID__BOOLEAN(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_glibjson1857_g_cclosure_marshal_VOID__BOOLEANv")
external fun g_cclosure_marshal_VOID__BOOLEANv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_glibjson1858_g_cclosure_marshal_VOID__CHAR")
external fun g_cclosure_marshal_VOID__CHAR(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_glibjson1859_g_cclosure_marshal_VOID__CHARv")
external fun g_cclosure_marshal_VOID__CHARv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_glibjson1860_g_cclosure_marshal_VOID__UCHAR")
external fun g_cclosure_marshal_VOID__UCHAR(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_glibjson1861_g_cclosure_marshal_VOID__UCHARv")
external fun g_cclosure_marshal_VOID__UCHARv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_glibjson1862_g_cclosure_marshal_VOID__INT")
external fun g_cclosure_marshal_VOID__INT(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_glibjson1863_g_cclosure_marshal_VOID__INTv")
external fun g_cclosure_marshal_VOID__INTv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_glibjson1864_g_cclosure_marshal_VOID__UINT")
external fun g_cclosure_marshal_VOID__UINT(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_glibjson1865_g_cclosure_marshal_VOID__UINTv")
external fun g_cclosure_marshal_VOID__UINTv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_glibjson1866_g_cclosure_marshal_VOID__LONG")
external fun g_cclosure_marshal_VOID__LONG(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_glibjson1867_g_cclosure_marshal_VOID__LONGv")
external fun g_cclosure_marshal_VOID__LONGv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_glibjson1868_g_cclosure_marshal_VOID__ULONG")
external fun g_cclosure_marshal_VOID__ULONG(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_glibjson1869_g_cclosure_marshal_VOID__ULONGv")
external fun g_cclosure_marshal_VOID__ULONGv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_glibjson1870_g_cclosure_marshal_VOID__ENUM")
external fun g_cclosure_marshal_VOID__ENUM(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_glibjson1871_g_cclosure_marshal_VOID__ENUMv")
external fun g_cclosure_marshal_VOID__ENUMv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_glibjson1872_g_cclosure_marshal_VOID__FLAGS")
external fun g_cclosure_marshal_VOID__FLAGS(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_glibjson1873_g_cclosure_marshal_VOID__FLAGSv")
external fun g_cclosure_marshal_VOID__FLAGSv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_glibjson1874_g_cclosure_marshal_VOID__FLOAT")
external fun g_cclosure_marshal_VOID__FLOAT(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_glibjson1875_g_cclosure_marshal_VOID__FLOATv")
external fun g_cclosure_marshal_VOID__FLOATv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_glibjson1876_g_cclosure_marshal_VOID__DOUBLE")
external fun g_cclosure_marshal_VOID__DOUBLE(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_glibjson1877_g_cclosure_marshal_VOID__DOUBLEv")
external fun g_cclosure_marshal_VOID__DOUBLEv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_glibjson1878_g_cclosure_marshal_VOID__STRING")
external fun g_cclosure_marshal_VOID__STRING(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_glibjson1879_g_cclosure_marshal_VOID__STRINGv")
external fun g_cclosure_marshal_VOID__STRINGv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_glibjson1880_g_cclosure_marshal_VOID__PARAM")
external fun g_cclosure_marshal_VOID__PARAM(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_glibjson1881_g_cclosure_marshal_VOID__PARAMv")
external fun g_cclosure_marshal_VOID__PARAMv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_glibjson1882_g_cclosure_marshal_VOID__BOXED")
external fun g_cclosure_marshal_VOID__BOXED(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_glibjson1883_g_cclosure_marshal_VOID__BOXEDv")
external fun g_cclosure_marshal_VOID__BOXEDv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_glibjson1884_g_cclosure_marshal_VOID__POINTER")
external fun g_cclosure_marshal_VOID__POINTER(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_glibjson1885_g_cclosure_marshal_VOID__POINTERv")
external fun g_cclosure_marshal_VOID__POINTERv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_glibjson1886_g_cclosure_marshal_VOID__OBJECT")
external fun g_cclosure_marshal_VOID__OBJECT(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_glibjson1887_g_cclosure_marshal_VOID__OBJECTv")
external fun g_cclosure_marshal_VOID__OBJECTv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_glibjson1888_g_cclosure_marshal_VOID__VARIANT")
external fun g_cclosure_marshal_VOID__VARIANT(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_glibjson1889_g_cclosure_marshal_VOID__VARIANTv")
external fun g_cclosure_marshal_VOID__VARIANTv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_glibjson1890_g_cclosure_marshal_VOID__UINT_POINTER")
external fun g_cclosure_marshal_VOID__UINT_POINTER(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_glibjson1891_g_cclosure_marshal_VOID__UINT_POINTERv")
external fun g_cclosure_marshal_VOID__UINT_POINTERv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_glibjson1892_g_cclosure_marshal_BOOLEAN__FLAGS")
external fun g_cclosure_marshal_BOOLEAN__FLAGS(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_glibjson1893_g_cclosure_marshal_BOOLEAN__FLAGSv")
external fun g_cclosure_marshal_BOOLEAN__FLAGSv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_glibjson1894_g_cclosure_marshal_STRING__OBJECT_POINTER")
external fun g_cclosure_marshal_STRING__OBJECT_POINTER(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_glibjson1895_g_cclosure_marshal_STRING__OBJECT_POINTERv")
external fun g_cclosure_marshal_STRING__OBJECT_POINTERv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_glibjson1896_g_cclosure_marshal_BOOLEAN__BOXED_BOXED")
external fun g_cclosure_marshal_BOOLEAN__BOXED_BOXED(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, n_param_values: guint, param_values: CValuesRef<GValue>?, invocation_hint: gpointer?, marshal_data: gpointer?): Unit

@CCall("knifunptr_glibjson1897_g_cclosure_marshal_BOOLEAN__BOXED_BOXEDv")
external fun g_cclosure_marshal_BOOLEAN__BOXED_BOXEDv(closure: CValuesRef<GClosure>?, return_value: CValuesRef<GValue>?, instance: gpointer?, args: va_list?, marshal_data: gpointer?, n_params: Int, param_types: CValuesRef<GTypeVar>?): Unit

@CCall("knifunptr_glibjson1898_g_signal_newv")
external fun g_signal_newv(@CCall.CString signal_name: String?, itype: GType, signal_flags: GSignalFlags, class_closure: CValuesRef<GClosure>?, accumulator: GSignalAccumulator?, accu_data: gpointer?, c_marshaller: GSignalCMarshaller?, return_type: GType, n_params: guint, param_types: CValuesRef<GTypeVar>?): guint

@CCall("knifunptr_glibjson1899_g_signal_new_valist")
external fun g_signal_new_valist(@CCall.CString signal_name: String?, itype: GType, signal_flags: GSignalFlags, class_closure: CValuesRef<GClosure>?, accumulator: GSignalAccumulator?, accu_data: gpointer?, c_marshaller: GSignalCMarshaller?, return_type: GType, n_params: guint, args: va_list?): guint

@CCall("knifunptr_glibjson1900_g_signal_new")
external fun g_signal_new(@CCall.CString signal_name: String?, itype: GType, signal_flags: GSignalFlags, class_offset: guint, accumulator: GSignalAccumulator?, accu_data: gpointer?, c_marshaller: GSignalCMarshaller?, return_type: GType, n_params: guint, vararg variadicArguments: Any?): guint

@CCall("knifunptr_glibjson1901_g_signal_new_class_handler")
external fun g_signal_new_class_handler(@CCall.CString signal_name: String?, itype: GType, signal_flags: GSignalFlags, class_handler: GCallback?, accumulator: GSignalAccumulator?, accu_data: gpointer?, c_marshaller: GSignalCMarshaller?, return_type: GType, n_params: guint, vararg variadicArguments: Any?): guint

@CCall("knifunptr_glibjson1902_g_signal_set_va_marshaller")
external fun g_signal_set_va_marshaller(signal_id: guint, instance_type: GType, va_marshaller: GSignalCVaMarshaller?): Unit

@CCall("knifunptr_glibjson1903_g_signal_emitv")
external fun g_signal_emitv(instance_and_params: CValuesRef<GValue>?, signal_id: guint, detail: GQuark, return_value: CValuesRef<GValue>?): Unit

@CCall("knifunptr_glibjson1904_g_signal_emit_valist")
external fun g_signal_emit_valist(instance: gpointer?, signal_id: guint, detail: GQuark, var_args: va_list?): Unit

@CCall("knifunptr_glibjson1905_g_signal_emit")
external fun g_signal_emit(instance: gpointer?, signal_id: guint, detail: GQuark, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson1906_g_signal_emit_by_name")
external fun g_signal_emit_by_name(instance: gpointer?, @CCall.CString detailed_signal: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson1907_g_signal_lookup")
external fun g_signal_lookup(@CCall.CString name: String?, itype: GType): guint

@CCall("knifunptr_glibjson1908_g_signal_name")
external fun g_signal_name(signal_id: guint): CPointer<gcharVar>?

@CCall("knifunptr_glibjson1909_g_signal_query")
external fun g_signal_query(signal_id: guint, query: CValuesRef<GSignalQuery>?): Unit

@CCall("knifunptr_glibjson1910_g_signal_list_ids")
external fun g_signal_list_ids(itype: GType, n_ids: CValuesRef<guintVar>?): CPointer<guintVar>?

@CCall("knifunptr_glibjson1911_g_signal_parse_name")
external fun g_signal_parse_name(@CCall.CString detailed_signal: String?, itype: GType, signal_id_p: CValuesRef<guintVar>?, detail_p: CValuesRef<GQuarkVar>?, force_detail_quark: gboolean): gboolean

@CCall("knifunptr_glibjson1912_g_signal_get_invocation_hint")
external fun g_signal_get_invocation_hint(instance: gpointer?): CPointer<GSignalInvocationHint>?

@CCall("knifunptr_glibjson1913_g_signal_stop_emission")
external fun g_signal_stop_emission(instance: gpointer?, signal_id: guint, detail: GQuark): Unit

@CCall("knifunptr_glibjson1914_g_signal_stop_emission_by_name")
external fun g_signal_stop_emission_by_name(instance: gpointer?, @CCall.CString detailed_signal: String?): Unit

@CCall("knifunptr_glibjson1915_g_signal_add_emission_hook")
external fun g_signal_add_emission_hook(signal_id: guint, detail: GQuark, hook_func: GSignalEmissionHook?, hook_data: gpointer?, data_destroy: GDestroyNotify?): gulong

@CCall("knifunptr_glibjson1916_g_signal_remove_emission_hook")
external fun g_signal_remove_emission_hook(signal_id: guint, hook_id: gulong): Unit

@CCall("knifunptr_glibjson1917_g_signal_has_handler_pending")
external fun g_signal_has_handler_pending(instance: gpointer?, signal_id: guint, detail: GQuark, may_be_blocked: gboolean): gboolean

@CCall("knifunptr_glibjson1918_g_signal_connect_closure_by_id")
external fun g_signal_connect_closure_by_id(instance: gpointer?, signal_id: guint, detail: GQuark, closure: CValuesRef<GClosure>?, after: gboolean): gulong

@CCall("knifunptr_glibjson1919_g_signal_connect_closure")
external fun g_signal_connect_closure(instance: gpointer?, @CCall.CString detailed_signal: String?, closure: CValuesRef<GClosure>?, after: gboolean): gulong

@CCall("knifunptr_glibjson1920_g_signal_connect_data")
external fun g_signal_connect_data(instance: gpointer?, @CCall.CString detailed_signal: String?, c_handler: GCallback?, data: gpointer?, destroy_data: GClosureNotify?, connect_flags: GConnectFlags): gulong

@CCall("knifunptr_glibjson1921_g_signal_handler_block")
external fun g_signal_handler_block(instance: gpointer?, handler_id: gulong): Unit

@CCall("knifunptr_glibjson1922_g_signal_handler_unblock")
external fun g_signal_handler_unblock(instance: gpointer?, handler_id: gulong): Unit

@CCall("knifunptr_glibjson1923_g_signal_handler_disconnect")
external fun g_signal_handler_disconnect(instance: gpointer?, handler_id: gulong): Unit

@CCall("knifunptr_glibjson1924_g_signal_handler_is_connected")
external fun g_signal_handler_is_connected(instance: gpointer?, handler_id: gulong): gboolean

@CCall("knifunptr_glibjson1925_g_signal_handler_find")
external fun g_signal_handler_find(instance: gpointer?, mask: GSignalMatchType, signal_id: guint, detail: GQuark, closure: CValuesRef<GClosure>?, func: gpointer?, data: gpointer?): gulong

@CCall("knifunptr_glibjson1926_g_signal_handlers_block_matched")
external fun g_signal_handlers_block_matched(instance: gpointer?, mask: GSignalMatchType, signal_id: guint, detail: GQuark, closure: CValuesRef<GClosure>?, func: gpointer?, data: gpointer?): guint

@CCall("knifunptr_glibjson1927_g_signal_handlers_unblock_matched")
external fun g_signal_handlers_unblock_matched(instance: gpointer?, mask: GSignalMatchType, signal_id: guint, detail: GQuark, closure: CValuesRef<GClosure>?, func: gpointer?, data: gpointer?): guint

@CCall("knifunptr_glibjson1928_g_signal_handlers_disconnect_matched")
external fun g_signal_handlers_disconnect_matched(instance: gpointer?, mask: GSignalMatchType, signal_id: guint, detail: GQuark, closure: CValuesRef<GClosure>?, func: gpointer?, data: gpointer?): guint

@CCall("knifunptr_glibjson1929_g_signal_override_class_closure")
external fun g_signal_override_class_closure(signal_id: guint, instance_type: GType, class_closure: CValuesRef<GClosure>?): Unit

@CCall("knifunptr_glibjson1930_g_signal_override_class_handler")
external fun g_signal_override_class_handler(@CCall.CString signal_name: String?, instance_type: GType, class_handler: GCallback?): Unit

@CCall("knifunptr_glibjson1931_g_signal_chain_from_overridden")
external fun g_signal_chain_from_overridden(instance_and_params: CValuesRef<GValue>?, return_value: CValuesRef<GValue>?): Unit

@CCall("knifunptr_glibjson1932_g_signal_chain_from_overridden_handler")
external fun g_signal_chain_from_overridden_handler(instance: gpointer?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson1933_g_signal_accumulator_true_handled")
external fun g_signal_accumulator_true_handled(ihint: CValuesRef<GSignalInvocationHint>?, return_accu: CValuesRef<GValue>?, handler_return: CValuesRef<GValue>?, dummy: gpointer?): gboolean

@CCall("knifunptr_glibjson1934_g_signal_accumulator_first_wins")
external fun g_signal_accumulator_first_wins(ihint: CValuesRef<GSignalInvocationHint>?, return_accu: CValuesRef<GValue>?, handler_return: CValuesRef<GValue>?, dummy: gpointer?): gboolean

@CCall("knifunptr_glibjson1935_g_signal_handlers_destroy")
external fun g_signal_handlers_destroy(instance: gpointer?): Unit

@CCall("knifunptr_glibjson1936__g_signals_destroy")
external fun _g_signals_destroy(itype: GType): Unit

@CCall("knifunptr_glibjson1937_g_date_get_type")
external fun g_date_get_type(): GType

@CCall("knifunptr_glibjson1938_g_strv_get_type")
external fun g_strv_get_type(): GType

@CCall("knifunptr_glibjson1939_g_gstring_get_type")
external fun g_gstring_get_type(): GType

@CCall("knifunptr_glibjson1940_g_hash_table_get_type")
external fun g_hash_table_get_type(): GType

@CCall("knifunptr_glibjson1941_g_array_get_type")
external fun g_array_get_type(): GType

@CCall("knifunptr_glibjson1942_g_byte_array_get_type")
external fun g_byte_array_get_type(): GType

@CCall("knifunptr_glibjson1943_g_ptr_array_get_type")
external fun g_ptr_array_get_type(): GType

@CCall("knifunptr_glibjson1944_g_bytes_get_type")
external fun g_bytes_get_type(): GType

@CCall("knifunptr_glibjson1945_g_variant_type_get_gtype")
external fun g_variant_type_get_gtype(): GType

@CCall("knifunptr_glibjson1946_g_regex_get_type")
external fun g_regex_get_type(): GType

@CCall("knifunptr_glibjson1947_g_match_info_get_type")
external fun g_match_info_get_type(): GType

@CCall("knifunptr_glibjson1948_g_error_get_type")
external fun g_error_get_type(): GType

@CCall("knifunptr_glibjson1949_g_date_time_get_type")
external fun g_date_time_get_type(): GType

@CCall("knifunptr_glibjson1950_g_time_zone_get_type")
external fun g_time_zone_get_type(): GType

@CCall("knifunptr_glibjson1951_g_io_channel_get_type")
external fun g_io_channel_get_type(): GType

@CCall("knifunptr_glibjson1952_g_io_condition_get_type")
external fun g_io_condition_get_type(): GType

@CCall("knifunptr_glibjson1953_g_variant_builder_get_type")
external fun g_variant_builder_get_type(): GType

@CCall("knifunptr_glibjson1954_g_variant_dict_get_type")
external fun g_variant_dict_get_type(): GType

@CCall("knifunptr_glibjson1955_g_key_file_get_type")
external fun g_key_file_get_type(): GType

@CCall("knifunptr_glibjson1956_g_main_loop_get_type")
external fun g_main_loop_get_type(): GType

@CCall("knifunptr_glibjson1957_g_main_context_get_type")
external fun g_main_context_get_type(): GType

@CCall("knifunptr_glibjson1958_g_source_get_type")
external fun g_source_get_type(): GType

@CCall("knifunptr_glibjson1959_g_pollfd_get_type")
external fun g_pollfd_get_type(): GType

@CCall("knifunptr_glibjson1960_g_thread_get_type")
external fun g_thread_get_type(): GType

@CCall("knifunptr_glibjson1961_g_checksum_get_type")
external fun g_checksum_get_type(): GType

@CCall("knifunptr_glibjson1962_g_markup_parse_context_get_type")
external fun g_markup_parse_context_get_type(): GType

@CCall("knifunptr_glibjson1963_g_mapped_file_get_type")
external fun g_mapped_file_get_type(): GType

@CCall("knifunptr_glibjson1964_g_option_group_get_type")
external fun g_option_group_get_type(): GType

@CCall("knifunptr_glibjson1965_g_variant_get_gtype")
external fun g_variant_get_gtype(): GType

@CCall("knifunptr_glibjson1966_g_boxed_copy")
external fun g_boxed_copy(boxed_type: GType, src_boxed: gconstpointer?): gpointer?

@CCall("knifunptr_glibjson1967_g_boxed_free")
external fun g_boxed_free(boxed_type: GType, boxed: gpointer?): Unit

@CCall("knifunptr_glibjson1968_g_value_set_boxed")
external fun g_value_set_boxed(value: CValuesRef<GValue>?, v_boxed: gconstpointer?): Unit

@CCall("knifunptr_glibjson1969_g_value_set_static_boxed")
external fun g_value_set_static_boxed(value: CValuesRef<GValue>?, v_boxed: gconstpointer?): Unit

@CCall("knifunptr_glibjson1970_g_value_take_boxed")
external fun g_value_take_boxed(value: CValuesRef<GValue>?, v_boxed: gconstpointer?): Unit

@CCall("knifunptr_glibjson1971_g_value_set_boxed_take_ownership")
external fun g_value_set_boxed_take_ownership(value: CValuesRef<GValue>?, v_boxed: gconstpointer?): Unit

@CCall("knifunptr_glibjson1972_g_value_get_boxed")
external fun g_value_get_boxed(value: CValuesRef<GValue>?): gpointer?

@CCall("knifunptr_glibjson1973_g_value_dup_boxed")
external fun g_value_dup_boxed(value: CValuesRef<GValue>?): gpointer?

@CCall("knifunptr_glibjson1974_g_boxed_type_register_static")
external fun g_boxed_type_register_static(@CCall.CString name: String?, boxed_copy: GBoxedCopyFunc?, boxed_free: GBoxedFreeFunc?): GType

@CCall("knifunptr_glibjson1975_g_closure_get_type")
external fun g_closure_get_type(): GType

@CCall("knifunptr_glibjson1976_g_value_get_type")
external fun g_value_get_type(): GType

@CCall("knifunptr_glibjson1977_g_initially_unowned_get_type")
external fun g_initially_unowned_get_type(): GType

@CCall("knifunptr_glibjson1978_g_object_class_install_property")
external fun g_object_class_install_property(oclass: CValuesRef<GObjectClass>?, property_id: guint, pspec: CValuesRef<GParamSpec>?): Unit

@CCall("knifunptr_glibjson1979_g_object_class_find_property")
external fun g_object_class_find_property(oclass: CValuesRef<GObjectClass>?, @CCall.CString property_name: String?): CPointer<GParamSpec>?

@CCall("knifunptr_glibjson1980_g_object_class_list_properties")
external fun g_object_class_list_properties(oclass: CValuesRef<GObjectClass>?, n_properties: CValuesRef<guintVar>?): CPointer<CPointerVar<GParamSpec>>?

@CCall("knifunptr_glibjson1981_g_object_class_override_property")
external fun g_object_class_override_property(oclass: CValuesRef<GObjectClass>?, property_id: guint, @CCall.CString name: String?): Unit

@CCall("knifunptr_glibjson1982_g_object_class_install_properties")
external fun g_object_class_install_properties(oclass: CValuesRef<GObjectClass>?, n_pspecs: guint, pspecs: CValuesRef<CPointerVar<GParamSpec>>?): Unit

@CCall("knifunptr_glibjson1983_g_object_interface_install_property")
external fun g_object_interface_install_property(g_iface: gpointer?, pspec: CValuesRef<GParamSpec>?): Unit

@CCall("knifunptr_glibjson1984_g_object_interface_find_property")
external fun g_object_interface_find_property(g_iface: gpointer?, @CCall.CString property_name: String?): CPointer<GParamSpec>?

@CCall("knifunptr_glibjson1985_g_object_interface_list_properties")
external fun g_object_interface_list_properties(g_iface: gpointer?, n_properties_p: CValuesRef<guintVar>?): CPointer<CPointerVar<GParamSpec>>?

@CCall("knifunptr_glibjson1986_g_object_get_type")
external fun g_object_get_type(): GType

@CCall("knifunptr_glibjson1987_g_object_new")
external fun g_object_new(object_type: GType, @CCall.CString first_property_name: String?, vararg variadicArguments: Any?): gpointer?

@CCall("knifunptr_glibjson1988_g_object_new_with_properties")
external fun g_object_new_with_properties(object_type: GType, n_properties: guint, names: CValuesRef<CPointerVar<ByteVar>>?, values: CValuesRef<GValue>?): CPointer<GObject>?

@CCall("knifunptr_glibjson1989_g_object_newv")
external fun g_object_newv(object_type: GType, n_parameters: guint, parameters: CValuesRef<GParameter>?): gpointer?

@CCall("knifunptr_glibjson1990_g_object_new_valist")
external fun g_object_new_valist(object_type: GType, @CCall.CString first_property_name: String?, var_args: va_list?): CPointer<GObject>?

@CCall("knifunptr_glibjson1991_g_object_set")
external fun g_object_set(`object`: gpointer?, @CCall.CString first_property_name: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson1992_g_object_get")
external fun g_object_get(`object`: gpointer?, @CCall.CString first_property_name: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson1993_g_object_connect")
external fun g_object_connect(`object`: gpointer?, @CCall.CString signal_spec: String?, vararg variadicArguments: Any?): gpointer?

@CCall("knifunptr_glibjson1994_g_object_disconnect")
external fun g_object_disconnect(`object`: gpointer?, @CCall.CString signal_spec: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson1995_g_object_setv")
external fun g_object_setv(`object`: CValuesRef<GObject>?, n_properties: guint, names: CValuesRef<CPointerVar<gcharVar>>?, values: CValuesRef<GValue>?): Unit

@CCall("knifunptr_glibjson1996_g_object_set_valist")
external fun g_object_set_valist(`object`: CValuesRef<GObject>?, @CCall.CString first_property_name: String?, var_args: va_list?): Unit

@CCall("knifunptr_glibjson1997_g_object_getv")
external fun g_object_getv(`object`: CValuesRef<GObject>?, n_properties: guint, names: CValuesRef<CPointerVar<gcharVar>>?, values: CValuesRef<GValue>?): Unit

@CCall("knifunptr_glibjson1998_g_object_get_valist")
external fun g_object_get_valist(`object`: CValuesRef<GObject>?, @CCall.CString first_property_name: String?, var_args: va_list?): Unit

@CCall("knifunptr_glibjson1999_g_object_set_property")
external fun g_object_set_property(`object`: CValuesRef<GObject>?, @CCall.CString property_name: String?, value: CValuesRef<GValue>?): Unit

@CCall("knifunptr_glibjson2000_g_object_get_property")
external fun g_object_get_property(`object`: CValuesRef<GObject>?, @CCall.CString property_name: String?, value: CValuesRef<GValue>?): Unit

@CCall("knifunptr_glibjson2001_g_object_freeze_notify")
external fun g_object_freeze_notify(`object`: CValuesRef<GObject>?): Unit

@CCall("knifunptr_glibjson2002_g_object_notify")
external fun g_object_notify(`object`: CValuesRef<GObject>?, @CCall.CString property_name: String?): Unit

@CCall("knifunptr_glibjson2003_g_object_notify_by_pspec")
external fun g_object_notify_by_pspec(`object`: CValuesRef<GObject>?, pspec: CValuesRef<GParamSpec>?): Unit

@CCall("knifunptr_glibjson2004_g_object_thaw_notify")
external fun g_object_thaw_notify(`object`: CValuesRef<GObject>?): Unit

@CCall("knifunptr_glibjson2005_g_object_is_floating")
external fun g_object_is_floating(`object`: gpointer?): gboolean

@CCall("knifunptr_glibjson2006_g_object_ref_sink")
external fun g_object_ref_sink(`object`: gpointer?): gpointer?

@CCall("knifunptr_glibjson2007_g_object_ref")
external fun g_object_ref(`object`: gpointer?): gpointer?

@CCall("knifunptr_glibjson2008_g_object_unref")
external fun g_object_unref(`object`: gpointer?): Unit

@CCall("knifunptr_glibjson2009_g_object_weak_ref")
external fun g_object_weak_ref(`object`: CValuesRef<GObject>?, notify: GWeakNotify?, data: gpointer?): Unit

@CCall("knifunptr_glibjson2010_g_object_weak_unref")
external fun g_object_weak_unref(`object`: CValuesRef<GObject>?, notify: GWeakNotify?, data: gpointer?): Unit

@CCall("knifunptr_glibjson2011_g_object_add_weak_pointer")
external fun g_object_add_weak_pointer(`object`: CValuesRef<GObject>?, weak_pointer_location: CValuesRef<gpointerVar>?): Unit

@CCall("knifunptr_glibjson2012_g_object_remove_weak_pointer")
external fun g_object_remove_weak_pointer(`object`: CValuesRef<GObject>?, weak_pointer_location: CValuesRef<gpointerVar>?): Unit

@CCall("knifunptr_glibjson2013_g_object_add_toggle_ref")
external fun g_object_add_toggle_ref(`object`: CValuesRef<GObject>?, notify: GToggleNotify?, data: gpointer?): Unit

@CCall("knifunptr_glibjson2014_g_object_remove_toggle_ref")
external fun g_object_remove_toggle_ref(`object`: CValuesRef<GObject>?, notify: GToggleNotify?, data: gpointer?): Unit

@CCall("knifunptr_glibjson2015_g_object_get_qdata")
external fun g_object_get_qdata(`object`: CValuesRef<GObject>?, quark: GQuark): gpointer?

@CCall("knifunptr_glibjson2016_g_object_set_qdata")
external fun g_object_set_qdata(`object`: CValuesRef<GObject>?, quark: GQuark, data: gpointer?): Unit

@CCall("knifunptr_glibjson2017_g_object_set_qdata_full")
external fun g_object_set_qdata_full(`object`: CValuesRef<GObject>?, quark: GQuark, data: gpointer?, destroy: GDestroyNotify?): Unit

@CCall("knifunptr_glibjson2018_g_object_steal_qdata")
external fun g_object_steal_qdata(`object`: CValuesRef<GObject>?, quark: GQuark): gpointer?

@CCall("knifunptr_glibjson2019_g_object_dup_qdata")
external fun g_object_dup_qdata(`object`: CValuesRef<GObject>?, quark: GQuark, dup_func: GDuplicateFunc?, user_data: gpointer?): gpointer?

@CCall("knifunptr_glibjson2020_g_object_replace_qdata")
external fun g_object_replace_qdata(`object`: CValuesRef<GObject>?, quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, old_destroy: CValuesRef<GDestroyNotifyVar>?): gboolean

@CCall("knifunptr_glibjson2021_g_object_get_data")
external fun g_object_get_data(`object`: CValuesRef<GObject>?, @CCall.CString key: String?): gpointer?

@CCall("knifunptr_glibjson2022_g_object_set_data")
external fun g_object_set_data(`object`: CValuesRef<GObject>?, @CCall.CString key: String?, data: gpointer?): Unit

@CCall("knifunptr_glibjson2023_g_object_set_data_full")
external fun g_object_set_data_full(`object`: CValuesRef<GObject>?, @CCall.CString key: String?, data: gpointer?, destroy: GDestroyNotify?): Unit

@CCall("knifunptr_glibjson2024_g_object_steal_data")
external fun g_object_steal_data(`object`: CValuesRef<GObject>?, @CCall.CString key: String?): gpointer?

@CCall("knifunptr_glibjson2025_g_object_dup_data")
external fun g_object_dup_data(`object`: CValuesRef<GObject>?, @CCall.CString key: String?, dup_func: GDuplicateFunc?, user_data: gpointer?): gpointer?

@CCall("knifunptr_glibjson2026_g_object_replace_data")
external fun g_object_replace_data(`object`: CValuesRef<GObject>?, @CCall.CString key: String?, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, old_destroy: CValuesRef<GDestroyNotifyVar>?): gboolean

@CCall("knifunptr_glibjson2027_g_object_watch_closure")
external fun g_object_watch_closure(`object`: CValuesRef<GObject>?, closure: CValuesRef<GClosure>?): Unit

@CCall("knifunptr_glibjson2028_g_cclosure_new_object")
external fun g_cclosure_new_object(callback_func: GCallback?, `object`: CValuesRef<GObject>?): CPointer<GClosure>?

@CCall("knifunptr_glibjson2029_g_cclosure_new_object_swap")
external fun g_cclosure_new_object_swap(callback_func: GCallback?, `object`: CValuesRef<GObject>?): CPointer<GClosure>?

@CCall("knifunptr_glibjson2030_g_closure_new_object")
external fun g_closure_new_object(sizeof_closure: guint, `object`: CValuesRef<GObject>?): CPointer<GClosure>?

@CCall("knifunptr_glibjson2031_g_value_set_object")
external fun g_value_set_object(value: CValuesRef<GValue>?, v_object: gpointer?): Unit

@CCall("knifunptr_glibjson2032_g_value_get_object")
external fun g_value_get_object(value: CValuesRef<GValue>?): gpointer?

@CCall("knifunptr_glibjson2033_g_value_dup_object")
external fun g_value_dup_object(value: CValuesRef<GValue>?): gpointer?

@CCall("knifunptr_glibjson2034_g_signal_connect_object")
external fun g_signal_connect_object(instance: gpointer?, @CCall.CString detailed_signal: String?, c_handler: GCallback?, gobject: gpointer?, connect_flags: GConnectFlags): gulong

@CCall("knifunptr_glibjson2035_g_object_force_floating")
external fun g_object_force_floating(`object`: CValuesRef<GObject>?): Unit

@CCall("knifunptr_glibjson2036_g_object_run_dispose")
external fun g_object_run_dispose(`object`: CValuesRef<GObject>?): Unit

@CCall("knifunptr_glibjson2037_g_value_take_object")
external fun g_value_take_object(value: CValuesRef<GValue>?, v_object: gpointer?): Unit

@CCall("knifunptr_glibjson2038_g_value_set_object_take_ownership")
external fun g_value_set_object_take_ownership(value: CValuesRef<GValue>?, v_object: gpointer?): Unit

@CCall("knifunptr_glibjson2039_g_object_compat_control")
external fun g_object_compat_control(what: gsize, data: gpointer?): gsize

@CCall("knifunptr_glibjson2040_g_clear_object")
external fun g_clear_object(object_ptr: CValuesRef<CPointerVar<GObject>>?): Unit

@CCall("knifunptr_glibjson2041_g_set_object")
external fun g_set_object(object_ptr: CValuesRef<CPointerVar<GObject>>?, new_object: CValuesRef<GObject>?): gboolean

@CCall("knifunptr_glibjson2042_g_clear_weak_pointer")
external fun g_clear_weak_pointer(weak_pointer_location: CValuesRef<gpointerVar>?): Unit

@Deprecated("Unable to import this declaration", level = DeprecationLevel.ERROR)
fun g_set_weak_pointer(weak_pointer_location: CValuesRef<gpointerVar>?, new_object: CValuesRef<GObject>?): gboolean = throw UnsupportedOperationException()

@CCall("knifunptr_glibjson2044_g_weak_ref_init")
external fun g_weak_ref_init(weak_ref: CValuesRef<GWeakRef>?, `object`: gpointer?): Unit

@CCall("knifunptr_glibjson2045_g_weak_ref_clear")
external fun g_weak_ref_clear(weak_ref: CValuesRef<GWeakRef>?): Unit

@CCall("knifunptr_glibjson2046_g_weak_ref_get")
external fun g_weak_ref_get(weak_ref: CValuesRef<GWeakRef>?): gpointer?

@CCall("knifunptr_glibjson2047_g_weak_ref_set")
external fun g_weak_ref_set(weak_ref: CValuesRef<GWeakRef>?, `object`: gpointer?): Unit

@CCall("knifunptr_glibjson2048_g_binding_flags_get_type")
external fun g_binding_flags_get_type(): GType

@CCall("knifunptr_glibjson2049_g_binding_get_type")
external fun g_binding_get_type(): GType

@CCall("knifunptr_glibjson2050_g_binding_get_flags")
external fun g_binding_get_flags(binding: CValuesRef<GBinding>?): GBindingFlags

@CCall("knifunptr_glibjson2051_g_binding_get_source")
external fun g_binding_get_source(binding: CValuesRef<GBinding>?): CPointer<GObject>?

@CCall("knifunptr_glibjson2052_g_binding_get_target")
external fun g_binding_get_target(binding: CValuesRef<GBinding>?): CPointer<GObject>?

@CCall("knifunptr_glibjson2053_g_binding_get_source_property")
external fun g_binding_get_source_property(binding: CValuesRef<GBinding>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2054_g_binding_get_target_property")
external fun g_binding_get_target_property(binding: CValuesRef<GBinding>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2055_g_binding_unbind")
external fun g_binding_unbind(binding: CValuesRef<GBinding>?): Unit

@CCall("knifunptr_glibjson2056_g_object_bind_property")
external fun g_object_bind_property(source: gpointer?, @CCall.CString source_property: String?, target: gpointer?, @CCall.CString target_property: String?, flags: GBindingFlags): CPointer<GBinding>?

@CCall("knifunptr_glibjson2057_g_object_bind_property_full")
external fun g_object_bind_property_full(source: gpointer?, @CCall.CString source_property: String?, target: gpointer?, @CCall.CString target_property: String?, flags: GBindingFlags, transform_to: GBindingTransformFunc?, transform_from: GBindingTransformFunc?, user_data: gpointer?, notify: GDestroyNotify?): CPointer<GBinding>?

@CCall("knifunptr_glibjson2058_g_object_bind_property_with_closures")
external fun g_object_bind_property_with_closures(source: gpointer?, @CCall.CString source_property: String?, target: gpointer?, @CCall.CString target_property: String?, flags: GBindingFlags, transform_to: CValuesRef<GClosure>?, transform_from: CValuesRef<GClosure>?): CPointer<GBinding>?

@CCall("knifunptr_glibjson2059_g_enum_get_value")
external fun g_enum_get_value(enum_class: CValuesRef<GEnumClass>?, value: gint): CPointer<GEnumValue>?

@CCall("knifunptr_glibjson2060_g_enum_get_value_by_name")
external fun g_enum_get_value_by_name(enum_class: CValuesRef<GEnumClass>?, @CCall.CString name: String?): CPointer<GEnumValue>?

@CCall("knifunptr_glibjson2061_g_enum_get_value_by_nick")
external fun g_enum_get_value_by_nick(enum_class: CValuesRef<GEnumClass>?, @CCall.CString nick: String?): CPointer<GEnumValue>?

@CCall("knifunptr_glibjson2062_g_flags_get_first_value")
external fun g_flags_get_first_value(flags_class: CValuesRef<GFlagsClass>?, value: guint): CPointer<GFlagsValue>?

@CCall("knifunptr_glibjson2063_g_flags_get_value_by_name")
external fun g_flags_get_value_by_name(flags_class: CValuesRef<GFlagsClass>?, @CCall.CString name: String?): CPointer<GFlagsValue>?

@CCall("knifunptr_glibjson2064_g_flags_get_value_by_nick")
external fun g_flags_get_value_by_nick(flags_class: CValuesRef<GFlagsClass>?, @CCall.CString nick: String?): CPointer<GFlagsValue>?

@CCall("knifunptr_glibjson2065_g_enum_to_string")
external fun g_enum_to_string(g_enum_type: GType, value: gint): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2066_g_flags_to_string")
external fun g_flags_to_string(flags_type: GType, value: guint): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2067_g_value_set_enum")
external fun g_value_set_enum(value: CValuesRef<GValue>?, v_enum: gint): Unit

@CCall("knifunptr_glibjson2068_g_value_get_enum")
external fun g_value_get_enum(value: CValuesRef<GValue>?): gint

@CCall("knifunptr_glibjson2069_g_value_set_flags")
external fun g_value_set_flags(value: CValuesRef<GValue>?, v_flags: guint): Unit

@CCall("knifunptr_glibjson2070_g_value_get_flags")
external fun g_value_get_flags(value: CValuesRef<GValue>?): guint

@CCall("knifunptr_glibjson2071_g_enum_register_static")
external fun g_enum_register_static(@CCall.CString name: String?, const_static_values: CValuesRef<GEnumValue>?): GType

@CCall("knifunptr_glibjson2072_g_flags_register_static")
external fun g_flags_register_static(@CCall.CString name: String?, const_static_values: CValuesRef<GFlagsValue>?): GType

@CCall("knifunptr_glibjson2073_g_enum_complete_type_info")
external fun g_enum_complete_type_info(g_enum_type: GType, info: CValuesRef<GTypeInfo>?, const_values: CValuesRef<GEnumValue>?): Unit

@CCall("knifunptr_glibjson2074_g_flags_complete_type_info")
external fun g_flags_complete_type_info(g_flags_type: GType, info: CValuesRef<GTypeInfo>?, const_values: CValuesRef<GFlagsValue>?): Unit

@CCall("knifunptr_glibjson2075_g_param_spec_char")
external fun g_param_spec_char(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, minimum: gint8, maximum: gint8, default_value: gint8, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_glibjson2076_g_param_spec_uchar")
external fun g_param_spec_uchar(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, minimum: guint8, maximum: guint8, default_value: guint8, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_glibjson2077_g_param_spec_boolean")
external fun g_param_spec_boolean(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, default_value: gboolean, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_glibjson2078_g_param_spec_int")
external fun g_param_spec_int(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, minimum: gint, maximum: gint, default_value: gint, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_glibjson2079_g_param_spec_uint")
external fun g_param_spec_uint(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, minimum: guint, maximum: guint, default_value: guint, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_glibjson2080_g_param_spec_long")
external fun g_param_spec_long(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, minimum: glong, maximum: glong, default_value: glong, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_glibjson2081_g_param_spec_ulong")
external fun g_param_spec_ulong(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, minimum: gulong, maximum: gulong, default_value: gulong, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_glibjson2082_g_param_spec_int64")
external fun g_param_spec_int64(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, minimum: gint64, maximum: gint64, default_value: gint64, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_glibjson2083_g_param_spec_uint64")
external fun g_param_spec_uint64(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, minimum: guint64, maximum: guint64, default_value: guint64, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_glibjson2084_g_param_spec_unichar")
external fun g_param_spec_unichar(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, default_value: gunichar, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_glibjson2085_g_param_spec_enum")
external fun g_param_spec_enum(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, enum_type: GType, default_value: gint, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_glibjson2086_g_param_spec_flags")
external fun g_param_spec_flags(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, flags_type: GType, default_value: guint, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_glibjson2087_g_param_spec_float")
external fun g_param_spec_float(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, minimum: gfloat, maximum: gfloat, default_value: gfloat, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_glibjson2088_g_param_spec_double")
external fun g_param_spec_double(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, minimum: gdouble, maximum: gdouble, default_value: gdouble, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_glibjson2089_g_param_spec_string")
external fun g_param_spec_string(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, @CCall.CString default_value: String?, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_glibjson2090_g_param_spec_param")
external fun g_param_spec_param(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, param_type: GType, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_glibjson2091_g_param_spec_boxed")
external fun g_param_spec_boxed(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, boxed_type: GType, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_glibjson2092_g_param_spec_pointer")
external fun g_param_spec_pointer(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_glibjson2093_g_param_spec_value_array")
external fun g_param_spec_value_array(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, element_spec: CValuesRef<GParamSpec>?, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_glibjson2094_g_param_spec_object")
external fun g_param_spec_object(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, object_type: GType, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_glibjson2095_g_param_spec_override")
external fun g_param_spec_override(@CCall.CString name: String?, overridden: CValuesRef<GParamSpec>?): CPointer<GParamSpec>?

@CCall("knifunptr_glibjson2096_g_param_spec_gtype")
external fun g_param_spec_gtype(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, is_a_type: GType, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_glibjson2097_g_param_spec_variant")
external fun g_param_spec_variant(@CCall.CString name: String?, @CCall.CString nick: String?, @CCall.CString blurb: String?, type: CValuesRef<GVariantType>?, default_value: CValuesRef<GVariant>?, flags: GParamFlags): CPointer<GParamSpec>?

@CCall("knifunptr_glibjson2098_g_source_set_closure")
external fun g_source_set_closure(source: CValuesRef<GSource>?, closure: CValuesRef<GClosure>?): Unit

@CCall("knifunptr_glibjson2099_g_source_set_dummy_callback")
external fun g_source_set_dummy_callback(source: CValuesRef<GSource>?): Unit

@CCall("knifunptr_glibjson2100_glib_autoptr_cleanup_GTypeModule")
external fun glib_autoptr_cleanup_GTypeModule(_ptr: CValuesRef<CPointerVar<GTypeModule>>?): Unit

@CCall("knifunptr_glibjson2101_glib_listautoptr_cleanup_GTypeModule")
external fun glib_listautoptr_cleanup_GTypeModule(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson2102_glib_slistautoptr_cleanup_GTypeModule")
external fun glib_slistautoptr_cleanup_GTypeModule(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson2103_g_type_module_get_type")
external fun g_type_module_get_type(): GType

@CCall("knifunptr_glibjson2104_g_type_module_use")
external fun g_type_module_use(module: CValuesRef<GTypeModule>?): gboolean

@CCall("knifunptr_glibjson2105_g_type_module_unuse")
external fun g_type_module_unuse(module: CValuesRef<GTypeModule>?): Unit

@CCall("knifunptr_glibjson2106_g_type_module_set_name")
external fun g_type_module_set_name(module: CValuesRef<GTypeModule>?, @CCall.CString name: String?): Unit

@CCall("knifunptr_glibjson2107_g_type_module_register_type")
external fun g_type_module_register_type(module: CValuesRef<GTypeModule>?, parent_type: GType, @CCall.CString type_name: String?, type_info: CValuesRef<GTypeInfo>?, flags: GTypeFlags): GType

@CCall("knifunptr_glibjson2108_g_type_module_add_interface")
external fun g_type_module_add_interface(module: CValuesRef<GTypeModule>?, instance_type: GType, interface_type: GType, interface_info: CValuesRef<GInterfaceInfo>?): Unit

@CCall("knifunptr_glibjson2109_g_type_module_register_enum")
external fun g_type_module_register_enum(module: CValuesRef<GTypeModule>?, @CCall.CString name: String?, const_static_values: CValuesRef<GEnumValue>?): GType

@CCall("knifunptr_glibjson2110_g_type_module_register_flags")
external fun g_type_module_register_flags(module: CValuesRef<GTypeModule>?, @CCall.CString name: String?, const_static_values: CValuesRef<GFlagsValue>?): GType

@CCall("knifunptr_glibjson2111_g_type_plugin_get_type")
external fun g_type_plugin_get_type(): GType

@CCall("knifunptr_glibjson2112_g_type_plugin_use")
external fun g_type_plugin_use(plugin: CValuesRef<GTypePlugin>?): Unit

@CCall("knifunptr_glibjson2113_g_type_plugin_unuse")
external fun g_type_plugin_unuse(plugin: CValuesRef<GTypePlugin>?): Unit

@CCall("knifunptr_glibjson2114_g_type_plugin_complete_type_info")
external fun g_type_plugin_complete_type_info(plugin: CValuesRef<GTypePlugin>?, g_type: GType, info: CValuesRef<GTypeInfo>?, value_table: CValuesRef<GTypeValueTable>?): Unit

@CCall("knifunptr_glibjson2115_g_type_plugin_complete_interface_info")
external fun g_type_plugin_complete_interface_info(plugin: CValuesRef<GTypePlugin>?, instance_type: GType, interface_type: GType, info: CValuesRef<GInterfaceInfo>?): Unit

@CCall("knifunptr_glibjson2116_g_value_array_get_type")
external fun g_value_array_get_type(): GType

@CCall("knifunptr_glibjson2117_g_value_array_get_nth")
external fun g_value_array_get_nth(value_array: CValuesRef<GValueArray>?, index_: guint): CPointer<GValue>?

@CCall("knifunptr_glibjson2118_g_value_array_new")
external fun g_value_array_new(n_prealloced: guint): CPointer<GValueArray>?

@CCall("knifunptr_glibjson2119_g_value_array_free")
external fun g_value_array_free(value_array: CValuesRef<GValueArray>?): Unit

@CCall("knifunptr_glibjson2120_g_value_array_copy")
external fun g_value_array_copy(value_array: CValuesRef<GValueArray>?): CPointer<GValueArray>?

@CCall("knifunptr_glibjson2121_g_value_array_prepend")
external fun g_value_array_prepend(value_array: CValuesRef<GValueArray>?, value: CValuesRef<GValue>?): CPointer<GValueArray>?

@CCall("knifunptr_glibjson2122_g_value_array_append")
external fun g_value_array_append(value_array: CValuesRef<GValueArray>?, value: CValuesRef<GValue>?): CPointer<GValueArray>?

@CCall("knifunptr_glibjson2123_g_value_array_insert")
external fun g_value_array_insert(value_array: CValuesRef<GValueArray>?, index_: guint, value: CValuesRef<GValue>?): CPointer<GValueArray>?

@CCall("knifunptr_glibjson2124_g_value_array_remove")
external fun g_value_array_remove(value_array: CValuesRef<GValueArray>?, index_: guint): CPointer<GValueArray>?

@CCall("knifunptr_glibjson2125_g_value_array_sort")
external fun g_value_array_sort(value_array: CValuesRef<GValueArray>?, compare_func: GCompareFunc?): CPointer<GValueArray>?

@CCall("knifunptr_glibjson2126_g_value_array_sort_with_data")
external fun g_value_array_sort_with_data(value_array: CValuesRef<GValueArray>?, compare_func: GCompareDataFunc?, user_data: gpointer?): CPointer<GValueArray>?

@CCall("knifunptr_glibjson2127_g_value_set_char")
external fun g_value_set_char(value: CValuesRef<GValue>?, v_char: gchar): Unit

@CCall("knifunptr_glibjson2128_g_value_get_char")
external fun g_value_get_char(value: CValuesRef<GValue>?): gchar

@CCall("knifunptr_glibjson2129_g_value_set_schar")
external fun g_value_set_schar(value: CValuesRef<GValue>?, v_char: gint8): Unit

@CCall("knifunptr_glibjson2130_g_value_get_schar")
external fun g_value_get_schar(value: CValuesRef<GValue>?): gint8

@CCall("knifunptr_glibjson2131_g_value_set_uchar")
external fun g_value_set_uchar(value: CValuesRef<GValue>?, v_uchar: guchar): Unit

@CCall("knifunptr_glibjson2132_g_value_get_uchar")
external fun g_value_get_uchar(value: CValuesRef<GValue>?): guchar

@CCall("knifunptr_glibjson2133_g_value_set_boolean")
external fun g_value_set_boolean(value: CValuesRef<GValue>?, v_boolean: gboolean): Unit

@CCall("knifunptr_glibjson2134_g_value_get_boolean")
external fun g_value_get_boolean(value: CValuesRef<GValue>?): gboolean

@CCall("knifunptr_glibjson2135_g_value_set_int")
external fun g_value_set_int(value: CValuesRef<GValue>?, v_int: gint): Unit

@CCall("knifunptr_glibjson2136_g_value_get_int")
external fun g_value_get_int(value: CValuesRef<GValue>?): gint

@CCall("knifunptr_glibjson2137_g_value_set_uint")
external fun g_value_set_uint(value: CValuesRef<GValue>?, v_uint: guint): Unit

@CCall("knifunptr_glibjson2138_g_value_get_uint")
external fun g_value_get_uint(value: CValuesRef<GValue>?): guint

@CCall("knifunptr_glibjson2139_g_value_set_long")
external fun g_value_set_long(value: CValuesRef<GValue>?, v_long: glong): Unit

@CCall("knifunptr_glibjson2140_g_value_get_long")
external fun g_value_get_long(value: CValuesRef<GValue>?): glong

@CCall("knifunptr_glibjson2141_g_value_set_ulong")
external fun g_value_set_ulong(value: CValuesRef<GValue>?, v_ulong: gulong): Unit

@CCall("knifunptr_glibjson2142_g_value_get_ulong")
external fun g_value_get_ulong(value: CValuesRef<GValue>?): gulong

@CCall("knifunptr_glibjson2143_g_value_set_int64")
external fun g_value_set_int64(value: CValuesRef<GValue>?, v_int64: gint64): Unit

@CCall("knifunptr_glibjson2144_g_value_get_int64")
external fun g_value_get_int64(value: CValuesRef<GValue>?): gint64

@CCall("knifunptr_glibjson2145_g_value_set_uint64")
external fun g_value_set_uint64(value: CValuesRef<GValue>?, v_uint64: guint64): Unit

@CCall("knifunptr_glibjson2146_g_value_get_uint64")
external fun g_value_get_uint64(value: CValuesRef<GValue>?): guint64

@CCall("knifunptr_glibjson2147_g_value_set_float")
external fun g_value_set_float(value: CValuesRef<GValue>?, v_float: gfloat): Unit

@CCall("knifunptr_glibjson2148_g_value_get_float")
external fun g_value_get_float(value: CValuesRef<GValue>?): gfloat

@CCall("knifunptr_glibjson2149_g_value_set_double")
external fun g_value_set_double(value: CValuesRef<GValue>?, v_double: gdouble): Unit

@CCall("knifunptr_glibjson2150_g_value_get_double")
external fun g_value_get_double(value: CValuesRef<GValue>?): gdouble

@CCall("knifunptr_glibjson2151_g_value_set_string")
external fun g_value_set_string(value: CValuesRef<GValue>?, @CCall.CString v_string: String?): Unit

@CCall("knifunptr_glibjson2152_g_value_set_static_string")
external fun g_value_set_static_string(value: CValuesRef<GValue>?, @CCall.CString v_string: String?): Unit

@CCall("knifunptr_glibjson2153_g_value_get_string")
external fun g_value_get_string(value: CValuesRef<GValue>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2154_g_value_dup_string")
external fun g_value_dup_string(value: CValuesRef<GValue>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2155_g_value_set_pointer")
external fun g_value_set_pointer(value: CValuesRef<GValue>?, v_pointer: gpointer?): Unit

@CCall("knifunptr_glibjson2156_g_value_get_pointer")
external fun g_value_get_pointer(value: CValuesRef<GValue>?): gpointer?

@CCall("knifunptr_glibjson2157_g_gtype_get_type")
external fun g_gtype_get_type(): GType

@CCall("knifunptr_glibjson2158_g_value_set_gtype")
external fun g_value_set_gtype(value: CValuesRef<GValue>?, v_gtype: GType): Unit

@CCall("knifunptr_glibjson2159_g_value_get_gtype")
external fun g_value_get_gtype(value: CValuesRef<GValue>?): GType

@CCall("knifunptr_glibjson2160_g_value_set_variant")
external fun g_value_set_variant(value: CValuesRef<GValue>?, variant: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_glibjson2161_g_value_take_variant")
external fun g_value_take_variant(value: CValuesRef<GValue>?, variant: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_glibjson2162_g_value_get_variant")
external fun g_value_get_variant(value: CValuesRef<GValue>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson2163_g_value_dup_variant")
external fun g_value_dup_variant(value: CValuesRef<GValue>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson2164_g_pointer_type_register_static")
external fun g_pointer_type_register_static(@CCall.CString name: String?): GType

@CCall("knifunptr_glibjson2165_g_strdup_value_contents")
external fun g_strdup_value_contents(value: CValuesRef<GValue>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2166_g_value_take_string")
external fun g_value_take_string(value: CValuesRef<GValue>?, v_string: CValuesRef<gcharVar>?): Unit

@CCall("knifunptr_glibjson2167_g_value_set_string_take_ownership")
external fun g_value_set_string_take_ownership(value: CValuesRef<GValue>?, v_string: CValuesRef<gcharVar>?): Unit

@CCall("knifunptr_glibjson2168_glib_autoptr_cleanup_GClosure")
external fun glib_autoptr_cleanup_GClosure(_ptr: CValuesRef<CPointerVar<GClosure>>?): Unit

@CCall("knifunptr_glibjson2169_glib_listautoptr_cleanup_GClosure")
external fun glib_listautoptr_cleanup_GClosure(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson2170_glib_slistautoptr_cleanup_GClosure")
external fun glib_slistautoptr_cleanup_GClosure(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson2171_glib_autoptr_cleanup_GObject")
external fun glib_autoptr_cleanup_GObject(_ptr: CValuesRef<CPointerVar<GObject>>?): Unit

@CCall("knifunptr_glibjson2172_glib_listautoptr_cleanup_GObject")
external fun glib_listautoptr_cleanup_GObject(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson2173_glib_slistautoptr_cleanup_GObject")
external fun glib_slistautoptr_cleanup_GObject(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson2174_glib_autoptr_cleanup_GInitiallyUnowned")
external fun glib_autoptr_cleanup_GInitiallyUnowned(_ptr: CValuesRef<CPointerVar<GInitiallyUnowned>>?): Unit

@CCall("knifunptr_glibjson2175_glib_listautoptr_cleanup_GInitiallyUnowned")
external fun glib_listautoptr_cleanup_GInitiallyUnowned(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson2176_glib_slistautoptr_cleanup_GInitiallyUnowned")
external fun glib_slistautoptr_cleanup_GInitiallyUnowned(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson2177_glib_auto_cleanup_GValue")
external fun glib_auto_cleanup_GValue(_ptr: CValuesRef<GValue>?): Unit

@CCall("knifunptr_glibjson2178_json_node_get_type")
external fun json_node_get_type(): GType

@CCall("knifunptr_glibjson2179_json_node_new")
external fun json_node_new(type: JsonNodeType): CPointer<JsonNode>?

@CCall("knifunptr_glibjson2180_json_node_alloc")
external fun json_node_alloc(): CPointer<JsonNode>?

@CCall("knifunptr_glibjson2181_json_node_init")
external fun json_node_init(node: CValuesRef<JsonNode>?, type: JsonNodeType): CPointer<JsonNode>?

@CCall("knifunptr_glibjson2182_json_node_init_object")
external fun json_node_init_object(node: CValuesRef<JsonNode>?, `object`: CValuesRef<JsonObject>?): CPointer<JsonNode>?

@CCall("knifunptr_glibjson2183_json_node_init_array")
external fun json_node_init_array(node: CValuesRef<JsonNode>?, array: CValuesRef<JsonArray>?): CPointer<JsonNode>?

@CCall("knifunptr_glibjson2184_json_node_init_int")
external fun json_node_init_int(node: CValuesRef<JsonNode>?, value: gint64): CPointer<JsonNode>?

@CCall("knifunptr_glibjson2185_json_node_init_double")
external fun json_node_init_double(node: CValuesRef<JsonNode>?, value: gdouble): CPointer<JsonNode>?

@CCall("knifunptr_glibjson2186_json_node_init_boolean")
external fun json_node_init_boolean(node: CValuesRef<JsonNode>?, value: gboolean): CPointer<JsonNode>?

@CCall("knifunptr_glibjson2187_json_node_init_string")
external fun json_node_init_string(node: CValuesRef<JsonNode>?, @CCall.CString value: String?): CPointer<JsonNode>?

@CCall("knifunptr_glibjson2188_json_node_init_null")
external fun json_node_init_null(node: CValuesRef<JsonNode>?): CPointer<JsonNode>?

@CCall("knifunptr_glibjson2189_json_node_copy")
external fun json_node_copy(node: CValuesRef<JsonNode>?): CPointer<JsonNode>?

@CCall("knifunptr_glibjson2190_json_node_free")
external fun json_node_free(node: CValuesRef<JsonNode>?): Unit

@CCall("knifunptr_glibjson2191_json_node_ref")
external fun json_node_ref(node: CValuesRef<JsonNode>?): CPointer<JsonNode>?

@CCall("knifunptr_glibjson2192_json_node_unref")
external fun json_node_unref(node: CValuesRef<JsonNode>?): Unit

@CCall("knifunptr_glibjson2193_json_node_get_node_type")
external fun json_node_get_node_type(node: CValuesRef<JsonNode>?): JsonNodeType

@CCall("knifunptr_glibjson2194_json_node_get_value_type")
external fun json_node_get_value_type(node: CValuesRef<JsonNode>?): GType

@CCall("knifunptr_glibjson2195_json_node_set_parent")
external fun json_node_set_parent(node: CValuesRef<JsonNode>?, parent: CValuesRef<JsonNode>?): Unit

@CCall("knifunptr_glibjson2196_json_node_get_parent")
external fun json_node_get_parent(node: CValuesRef<JsonNode>?): CPointer<JsonNode>?

@CCall("knifunptr_glibjson2197_json_node_type_name")
external fun json_node_type_name(node: CValuesRef<JsonNode>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2198_json_node_set_object")
external fun json_node_set_object(node: CValuesRef<JsonNode>?, `object`: CValuesRef<JsonObject>?): Unit

@CCall("knifunptr_glibjson2199_json_node_take_object")
external fun json_node_take_object(node: CValuesRef<JsonNode>?, `object`: CValuesRef<JsonObject>?): Unit

@CCall("knifunptr_glibjson2200_json_node_get_object")
external fun json_node_get_object(node: CValuesRef<JsonNode>?): CPointer<JsonObject>?

@CCall("knifunptr_glibjson2201_json_node_dup_object")
external fun json_node_dup_object(node: CValuesRef<JsonNode>?): CPointer<JsonObject>?

@CCall("knifunptr_glibjson2202_json_node_set_array")
external fun json_node_set_array(node: CValuesRef<JsonNode>?, array: CValuesRef<JsonArray>?): Unit

@CCall("knifunptr_glibjson2203_json_node_take_array")
external fun json_node_take_array(node: CValuesRef<JsonNode>?, array: CValuesRef<JsonArray>?): Unit

@CCall("knifunptr_glibjson2204_json_node_get_array")
external fun json_node_get_array(node: CValuesRef<JsonNode>?): CPointer<JsonArray>?

@CCall("knifunptr_glibjson2205_json_node_dup_array")
external fun json_node_dup_array(node: CValuesRef<JsonNode>?): CPointer<JsonArray>?

@CCall("knifunptr_glibjson2206_json_node_set_value")
external fun json_node_set_value(node: CValuesRef<JsonNode>?, value: CValuesRef<GValue>?): Unit

@CCall("knifunptr_glibjson2207_json_node_get_value")
external fun json_node_get_value(node: CValuesRef<JsonNode>?, value: CValuesRef<GValue>?): Unit

@CCall("knifunptr_glibjson2208_json_node_set_string")
external fun json_node_set_string(node: CValuesRef<JsonNode>?, @CCall.CString value: String?): Unit

@CCall("knifunptr_glibjson2209_json_node_get_string")
external fun json_node_get_string(node: CValuesRef<JsonNode>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2210_json_node_dup_string")
external fun json_node_dup_string(node: CValuesRef<JsonNode>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2211_json_node_set_int")
external fun json_node_set_int(node: CValuesRef<JsonNode>?, value: gint64): Unit

@CCall("knifunptr_glibjson2212_json_node_get_int")
external fun json_node_get_int(node: CValuesRef<JsonNode>?): gint64

@CCall("knifunptr_glibjson2213_json_node_set_double")
external fun json_node_set_double(node: CValuesRef<JsonNode>?, value: gdouble): Unit

@CCall("knifunptr_glibjson2214_json_node_get_double")
external fun json_node_get_double(node: CValuesRef<JsonNode>?): gdouble

@CCall("knifunptr_glibjson2215_json_node_set_boolean")
external fun json_node_set_boolean(node: CValuesRef<JsonNode>?, value: gboolean): Unit

@CCall("knifunptr_glibjson2216_json_node_get_boolean")
external fun json_node_get_boolean(node: CValuesRef<JsonNode>?): gboolean

@CCall("knifunptr_glibjson2217_json_node_is_null")
external fun json_node_is_null(node: CValuesRef<JsonNode>?): gboolean

@CCall("knifunptr_glibjson2218_json_node_seal")
external fun json_node_seal(node: CValuesRef<JsonNode>?): Unit

@CCall("knifunptr_glibjson2219_json_node_is_immutable")
external fun json_node_is_immutable(node: CValuesRef<JsonNode>?): gboolean

@CCall("knifunptr_glibjson2220_json_string_hash")
external fun json_string_hash(key: gconstpointer?): guint

@CCall("knifunptr_glibjson2221_json_string_equal")
external fun json_string_equal(a: gconstpointer?, b: gconstpointer?): gboolean

@CCall("knifunptr_glibjson2222_json_string_compare")
external fun json_string_compare(a: gconstpointer?, b: gconstpointer?): gint

@CCall("knifunptr_glibjson2223_json_node_hash")
external fun json_node_hash(key: gconstpointer?): guint

@CCall("knifunptr_glibjson2224_json_node_equal")
external fun json_node_equal(a: gconstpointer?, b: gconstpointer?): gboolean

@CCall("knifunptr_glibjson2225_json_object_get_type")
external fun json_object_get_type(): GType

@CCall("knifunptr_glibjson2226_json_object_new")
external fun json_object_new(): CPointer<JsonObject>?

@CCall("knifunptr_glibjson2227_json_object_ref")
external fun json_object_ref(`object`: CValuesRef<JsonObject>?): CPointer<JsonObject>?

@CCall("knifunptr_glibjson2228_json_object_unref")
external fun json_object_unref(`object`: CValuesRef<JsonObject>?): Unit

@CCall("knifunptr_glibjson2229_json_object_add_member")
external fun json_object_add_member(`object`: CValuesRef<JsonObject>?, @CCall.CString member_name: String?, node: CValuesRef<JsonNode>?): Unit

@CCall("knifunptr_glibjson2230_json_object_set_member")
external fun json_object_set_member(`object`: CValuesRef<JsonObject>?, @CCall.CString member_name: String?, node: CValuesRef<JsonNode>?): Unit

@CCall("knifunptr_glibjson2231_json_object_set_int_member")
external fun json_object_set_int_member(`object`: CValuesRef<JsonObject>?, @CCall.CString member_name: String?, value: gint64): Unit

@CCall("knifunptr_glibjson2232_json_object_set_double_member")
external fun json_object_set_double_member(`object`: CValuesRef<JsonObject>?, @CCall.CString member_name: String?, value: gdouble): Unit

@CCall("knifunptr_glibjson2233_json_object_set_boolean_member")
external fun json_object_set_boolean_member(`object`: CValuesRef<JsonObject>?, @CCall.CString member_name: String?, value: gboolean): Unit

@CCall("knifunptr_glibjson2234_json_object_set_string_member")
external fun json_object_set_string_member(`object`: CValuesRef<JsonObject>?, @CCall.CString member_name: String?, @CCall.CString value: String?): Unit

@CCall("knifunptr_glibjson2235_json_object_set_null_member")
external fun json_object_set_null_member(`object`: CValuesRef<JsonObject>?, @CCall.CString member_name: String?): Unit

@CCall("knifunptr_glibjson2236_json_object_set_array_member")
external fun json_object_set_array_member(`object`: CValuesRef<JsonObject>?, @CCall.CString member_name: String?, value: CValuesRef<JsonArray>?): Unit

@CCall("knifunptr_glibjson2237_json_object_set_object_member")
external fun json_object_set_object_member(`object`: CValuesRef<JsonObject>?, @CCall.CString member_name: String?, value: CValuesRef<JsonObject>?): Unit

@CCall("knifunptr_glibjson2238_json_object_get_members")
external fun json_object_get_members(`object`: CValuesRef<JsonObject>?): CPointer<GList>?

@CCall("knifunptr_glibjson2239_json_object_get_member")
external fun json_object_get_member(`object`: CValuesRef<JsonObject>?, @CCall.CString member_name: String?): CPointer<JsonNode>?

@CCall("knifunptr_glibjson2240_json_object_dup_member")
external fun json_object_dup_member(`object`: CValuesRef<JsonObject>?, @CCall.CString member_name: String?): CPointer<JsonNode>?

@CCall("knifunptr_glibjson2241_json_object_get_int_member")
external fun json_object_get_int_member(`object`: CValuesRef<JsonObject>?, @CCall.CString member_name: String?): gint64

@CCall("knifunptr_glibjson2242_json_object_get_double_member")
external fun json_object_get_double_member(`object`: CValuesRef<JsonObject>?, @CCall.CString member_name: String?): gdouble

@CCall("knifunptr_glibjson2243_json_object_get_boolean_member")
external fun json_object_get_boolean_member(`object`: CValuesRef<JsonObject>?, @CCall.CString member_name: String?): gboolean

@CCall("knifunptr_glibjson2244_json_object_get_string_member")
external fun json_object_get_string_member(`object`: CValuesRef<JsonObject>?, @CCall.CString member_name: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2245_json_object_get_null_member")
external fun json_object_get_null_member(`object`: CValuesRef<JsonObject>?, @CCall.CString member_name: String?): gboolean

@CCall("knifunptr_glibjson2246_json_object_get_array_member")
external fun json_object_get_array_member(`object`: CValuesRef<JsonObject>?, @CCall.CString member_name: String?): CPointer<JsonArray>?

@CCall("knifunptr_glibjson2247_json_object_get_object_member")
external fun json_object_get_object_member(`object`: CValuesRef<JsonObject>?, @CCall.CString member_name: String?): CPointer<JsonObject>?

@CCall("knifunptr_glibjson2248_json_object_has_member")
external fun json_object_has_member(`object`: CValuesRef<JsonObject>?, @CCall.CString member_name: String?): gboolean

@CCall("knifunptr_glibjson2249_json_object_remove_member")
external fun json_object_remove_member(`object`: CValuesRef<JsonObject>?, @CCall.CString member_name: String?): Unit

@CCall("knifunptr_glibjson2250_json_object_get_values")
external fun json_object_get_values(`object`: CValuesRef<JsonObject>?): CPointer<GList>?

@CCall("knifunptr_glibjson2251_json_object_get_size")
external fun json_object_get_size(`object`: CValuesRef<JsonObject>?): guint

@CCall("knifunptr_glibjson2252_json_object_foreach_member")
external fun json_object_foreach_member(`object`: CValuesRef<JsonObject>?, func: JsonObjectForeach?, data: gpointer?): Unit

@CCall("knifunptr_glibjson2253_json_object_seal")
external fun json_object_seal(`object`: CValuesRef<JsonObject>?): Unit

@CCall("knifunptr_glibjson2254_json_object_is_immutable")
external fun json_object_is_immutable(`object`: CValuesRef<JsonObject>?): gboolean

@CCall("knifunptr_glibjson2255_json_object_hash")
external fun json_object_hash(key: gconstpointer?): guint

@CCall("knifunptr_glibjson2256_json_object_equal")
external fun json_object_equal(a: gconstpointer?, b: gconstpointer?): gboolean

@CCall("knifunptr_glibjson2257_json_object_iter_init")
external fun json_object_iter_init(iter: CValuesRef<JsonObjectIter>?, `object`: CValuesRef<JsonObject>?): Unit

@CCall("knifunptr_glibjson2258_json_object_iter_next")
external fun json_object_iter_next(iter: CValuesRef<JsonObjectIter>?, member_name: CValuesRef<CPointerVar<gcharVar>>?, member_node: CValuesRef<CPointerVar<JsonNode>>?): gboolean

@CCall("knifunptr_glibjson2259_json_array_get_type")
external fun json_array_get_type(): GType

@CCall("knifunptr_glibjson2260_json_array_new")
external fun json_array_new(): CPointer<JsonArray>?

@CCall("knifunptr_glibjson2261_json_array_sized_new")
external fun json_array_sized_new(n_elements: guint): CPointer<JsonArray>?

@CCall("knifunptr_glibjson2262_json_array_ref")
external fun json_array_ref(array: CValuesRef<JsonArray>?): CPointer<JsonArray>?

@CCall("knifunptr_glibjson2263_json_array_unref")
external fun json_array_unref(array: CValuesRef<JsonArray>?): Unit

@CCall("knifunptr_glibjson2264_json_array_add_element")
external fun json_array_add_element(array: CValuesRef<JsonArray>?, node: CValuesRef<JsonNode>?): Unit

@CCall("knifunptr_glibjson2265_json_array_add_int_element")
external fun json_array_add_int_element(array: CValuesRef<JsonArray>?, value: gint64): Unit

@CCall("knifunptr_glibjson2266_json_array_add_double_element")
external fun json_array_add_double_element(array: CValuesRef<JsonArray>?, value: gdouble): Unit

@CCall("knifunptr_glibjson2267_json_array_add_boolean_element")
external fun json_array_add_boolean_element(array: CValuesRef<JsonArray>?, value: gboolean): Unit

@CCall("knifunptr_glibjson2268_json_array_add_string_element")
external fun json_array_add_string_element(array: CValuesRef<JsonArray>?, @CCall.CString value: String?): Unit

@CCall("knifunptr_glibjson2269_json_array_add_null_element")
external fun json_array_add_null_element(array: CValuesRef<JsonArray>?): Unit

@CCall("knifunptr_glibjson2270_json_array_add_array_element")
external fun json_array_add_array_element(array: CValuesRef<JsonArray>?, value: CValuesRef<JsonArray>?): Unit

@CCall("knifunptr_glibjson2271_json_array_add_object_element")
external fun json_array_add_object_element(array: CValuesRef<JsonArray>?, value: CValuesRef<JsonObject>?): Unit

@CCall("knifunptr_glibjson2272_json_array_get_elements")
external fun json_array_get_elements(array: CValuesRef<JsonArray>?): CPointer<GList>?

@CCall("knifunptr_glibjson2273_json_array_get_element")
external fun json_array_get_element(array: CValuesRef<JsonArray>?, index_: guint): CPointer<JsonNode>?

@CCall("knifunptr_glibjson2274_json_array_get_int_element")
external fun json_array_get_int_element(array: CValuesRef<JsonArray>?, index_: guint): gint64

@CCall("knifunptr_glibjson2275_json_array_get_double_element")
external fun json_array_get_double_element(array: CValuesRef<JsonArray>?, index_: guint): gdouble

@CCall("knifunptr_glibjson2276_json_array_get_boolean_element")
external fun json_array_get_boolean_element(array: CValuesRef<JsonArray>?, index_: guint): gboolean

@CCall("knifunptr_glibjson2277_json_array_get_string_element")
external fun json_array_get_string_element(array: CValuesRef<JsonArray>?, index_: guint): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2278_json_array_get_null_element")
external fun json_array_get_null_element(array: CValuesRef<JsonArray>?, index_: guint): gboolean

@CCall("knifunptr_glibjson2279_json_array_get_array_element")
external fun json_array_get_array_element(array: CValuesRef<JsonArray>?, index_: guint): CPointer<JsonArray>?

@CCall("knifunptr_glibjson2280_json_array_get_object_element")
external fun json_array_get_object_element(array: CValuesRef<JsonArray>?, index_: guint): CPointer<JsonObject>?

@CCall("knifunptr_glibjson2281_json_array_dup_element")
external fun json_array_dup_element(array: CValuesRef<JsonArray>?, index_: guint): CPointer<JsonNode>?

@CCall("knifunptr_glibjson2282_json_array_remove_element")
external fun json_array_remove_element(array: CValuesRef<JsonArray>?, index_: guint): Unit

@CCall("knifunptr_glibjson2283_json_array_get_length")
external fun json_array_get_length(array: CValuesRef<JsonArray>?): guint

@CCall("knifunptr_glibjson2284_json_array_foreach_element")
external fun json_array_foreach_element(array: CValuesRef<JsonArray>?, func: JsonArrayForeach?, data: gpointer?): Unit

@CCall("knifunptr_glibjson2285_json_array_seal")
external fun json_array_seal(array: CValuesRef<JsonArray>?): Unit

@CCall("knifunptr_glibjson2286_json_array_is_immutable")
external fun json_array_is_immutable(array: CValuesRef<JsonArray>?): gboolean

@CCall("knifunptr_glibjson2287_json_array_hash")
external fun json_array_hash(key: gconstpointer?): guint

@CCall("knifunptr_glibjson2288_json_array_equal")
external fun json_array_equal(a: gconstpointer?, b: gconstpointer?): gboolean

@CCall("knifunptr_glibjson2289_glib_autoptr_cleanup_JsonArray")
external fun glib_autoptr_cleanup_JsonArray(_ptr: CValuesRef<CPointerVar<JsonArray>>?): Unit

@CCall("knifunptr_glibjson2290_glib_listautoptr_cleanup_JsonArray")
external fun glib_listautoptr_cleanup_JsonArray(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson2291_glib_slistautoptr_cleanup_JsonArray")
external fun glib_slistautoptr_cleanup_JsonArray(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson2292_glib_autoptr_cleanup_JsonObject")
external fun glib_autoptr_cleanup_JsonObject(_ptr: CValuesRef<CPointerVar<JsonObject>>?): Unit

@CCall("knifunptr_glibjson2293_glib_listautoptr_cleanup_JsonObject")
external fun glib_listautoptr_cleanup_JsonObject(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson2294_glib_slistautoptr_cleanup_JsonObject")
external fun glib_slistautoptr_cleanup_JsonObject(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson2295_glib_autoptr_cleanup_JsonNode")
external fun glib_autoptr_cleanup_JsonNode(_ptr: CValuesRef<CPointerVar<JsonNode>>?): Unit

@CCall("knifunptr_glibjson2296_glib_listautoptr_cleanup_JsonNode")
external fun glib_listautoptr_cleanup_JsonNode(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson2297_glib_slistautoptr_cleanup_JsonNode")
external fun glib_slistautoptr_cleanup_JsonNode(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson2298_json_builder_get_type")
external fun json_builder_get_type(): GType

@CCall("knifunptr_glibjson2299_json_builder_new")
external fun json_builder_new(): CPointer<JsonBuilder>?

@CCall("knifunptr_glibjson2300_json_builder_new_immutable")
external fun json_builder_new_immutable(): CPointer<JsonBuilder>?

@CCall("knifunptr_glibjson2301_json_builder_get_root")
external fun json_builder_get_root(builder: CValuesRef<JsonBuilder>?): CPointer<JsonNode>?

@CCall("knifunptr_glibjson2302_json_builder_reset")
external fun json_builder_reset(builder: CValuesRef<JsonBuilder>?): Unit

@CCall("knifunptr_glibjson2303_json_builder_begin_array")
external fun json_builder_begin_array(builder: CValuesRef<JsonBuilder>?): CPointer<JsonBuilder>?

@CCall("knifunptr_glibjson2304_json_builder_end_array")
external fun json_builder_end_array(builder: CValuesRef<JsonBuilder>?): CPointer<JsonBuilder>?

@CCall("knifunptr_glibjson2305_json_builder_begin_object")
external fun json_builder_begin_object(builder: CValuesRef<JsonBuilder>?): CPointer<JsonBuilder>?

@CCall("knifunptr_glibjson2306_json_builder_end_object")
external fun json_builder_end_object(builder: CValuesRef<JsonBuilder>?): CPointer<JsonBuilder>?

@CCall("knifunptr_glibjson2307_json_builder_set_member_name")
external fun json_builder_set_member_name(builder: CValuesRef<JsonBuilder>?, @CCall.CString member_name: String?): CPointer<JsonBuilder>?

@CCall("knifunptr_glibjson2308_json_builder_add_value")
external fun json_builder_add_value(builder: CValuesRef<JsonBuilder>?, node: CValuesRef<JsonNode>?): CPointer<JsonBuilder>?

@CCall("knifunptr_glibjson2309_json_builder_add_int_value")
external fun json_builder_add_int_value(builder: CValuesRef<JsonBuilder>?, value: gint64): CPointer<JsonBuilder>?

@CCall("knifunptr_glibjson2310_json_builder_add_double_value")
external fun json_builder_add_double_value(builder: CValuesRef<JsonBuilder>?, value: gdouble): CPointer<JsonBuilder>?

@CCall("knifunptr_glibjson2311_json_builder_add_boolean_value")
external fun json_builder_add_boolean_value(builder: CValuesRef<JsonBuilder>?, value: gboolean): CPointer<JsonBuilder>?

@CCall("knifunptr_glibjson2312_json_builder_add_string_value")
external fun json_builder_add_string_value(builder: CValuesRef<JsonBuilder>?, @CCall.CString value: String?): CPointer<JsonBuilder>?

@CCall("knifunptr_glibjson2313_json_builder_add_null_value")
external fun json_builder_add_null_value(builder: CValuesRef<JsonBuilder>?): CPointer<JsonBuilder>?

@CCall("knifunptr_glibjson2314_glib_autoptr_cleanup_JsonBuilder")
external fun glib_autoptr_cleanup_JsonBuilder(_ptr: CValuesRef<CPointerVar<JsonBuilder>>?): Unit

@CCall("knifunptr_glibjson2315_glib_listautoptr_cleanup_JsonBuilder")
external fun glib_listautoptr_cleanup_JsonBuilder(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson2316_glib_slistautoptr_cleanup_JsonBuilder")
external fun glib_slistautoptr_cleanup_JsonBuilder(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson2317_g_action_get_type")
external fun g_action_get_type(): GType

@CCall("knifunptr_glibjson2318_g_action_get_name")
external fun g_action_get_name(action: CValuesRef<GAction>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2319_g_action_get_parameter_type")
external fun g_action_get_parameter_type(action: CValuesRef<GAction>?): CPointer<GVariantType>?

@CCall("knifunptr_glibjson2320_g_action_get_state_type")
external fun g_action_get_state_type(action: CValuesRef<GAction>?): CPointer<GVariantType>?

@CCall("knifunptr_glibjson2321_g_action_get_state_hint")
external fun g_action_get_state_hint(action: CValuesRef<GAction>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson2322_g_action_get_enabled")
external fun g_action_get_enabled(action: CValuesRef<GAction>?): gboolean

@CCall("knifunptr_glibjson2323_g_action_get_state")
external fun g_action_get_state(action: CValuesRef<GAction>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson2324_g_action_change_state")
external fun g_action_change_state(action: CValuesRef<GAction>?, value: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_glibjson2325_g_action_activate")
external fun g_action_activate(action: CValuesRef<GAction>?, parameter: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_glibjson2326_g_action_name_is_valid")
external fun g_action_name_is_valid(@CCall.CString action_name: String?): gboolean

@CCall("knifunptr_glibjson2327_g_action_parse_detailed_name")
external fun g_action_parse_detailed_name(@CCall.CString detailed_name: String?, action_name: CValuesRef<CPointerVar<gcharVar>>?, target_value: CValuesRef<CPointerVar<GVariant>>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2328_g_action_print_detailed_name")
external fun g_action_print_detailed_name(@CCall.CString action_name: String?, target_value: CValuesRef<GVariant>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2329_g_action_group_get_type")
external fun g_action_group_get_type(): GType

@CCall("knifunptr_glibjson2330_g_action_group_has_action")
external fun g_action_group_has_action(action_group: CValuesRef<GActionGroup>?, @CCall.CString action_name: String?): gboolean

@CCall("knifunptr_glibjson2331_g_action_group_list_actions")
external fun g_action_group_list_actions(action_group: CValuesRef<GActionGroup>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson2332_g_action_group_get_action_parameter_type")
external fun g_action_group_get_action_parameter_type(action_group: CValuesRef<GActionGroup>?, @CCall.CString action_name: String?): CPointer<GVariantType>?

@CCall("knifunptr_glibjson2333_g_action_group_get_action_state_type")
external fun g_action_group_get_action_state_type(action_group: CValuesRef<GActionGroup>?, @CCall.CString action_name: String?): CPointer<GVariantType>?

@CCall("knifunptr_glibjson2334_g_action_group_get_action_state_hint")
external fun g_action_group_get_action_state_hint(action_group: CValuesRef<GActionGroup>?, @CCall.CString action_name: String?): CPointer<GVariant>?

@CCall("knifunptr_glibjson2335_g_action_group_get_action_enabled")
external fun g_action_group_get_action_enabled(action_group: CValuesRef<GActionGroup>?, @CCall.CString action_name: String?): gboolean

@CCall("knifunptr_glibjson2336_g_action_group_get_action_state")
external fun g_action_group_get_action_state(action_group: CValuesRef<GActionGroup>?, @CCall.CString action_name: String?): CPointer<GVariant>?

@CCall("knifunptr_glibjson2337_g_action_group_change_action_state")
external fun g_action_group_change_action_state(action_group: CValuesRef<GActionGroup>?, @CCall.CString action_name: String?, value: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_glibjson2338_g_action_group_activate_action")
external fun g_action_group_activate_action(action_group: CValuesRef<GActionGroup>?, @CCall.CString action_name: String?, parameter: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_glibjson2339_g_action_group_action_added")
external fun g_action_group_action_added(action_group: CValuesRef<GActionGroup>?, @CCall.CString action_name: String?): Unit

@CCall("knifunptr_glibjson2340_g_action_group_action_removed")
external fun g_action_group_action_removed(action_group: CValuesRef<GActionGroup>?, @CCall.CString action_name: String?): Unit

@CCall("knifunptr_glibjson2341_g_action_group_action_enabled_changed")
external fun g_action_group_action_enabled_changed(action_group: CValuesRef<GActionGroup>?, @CCall.CString action_name: String?, enabled: gboolean): Unit

@CCall("knifunptr_glibjson2342_g_action_group_action_state_changed")
external fun g_action_group_action_state_changed(action_group: CValuesRef<GActionGroup>?, @CCall.CString action_name: String?, state: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_glibjson2343_g_action_group_query_action")
external fun g_action_group_query_action(action_group: CValuesRef<GActionGroup>?, @CCall.CString action_name: String?, enabled: CValuesRef<gbooleanVar>?, parameter_type: CValuesRef<CPointerVar<GVariantType>>?, state_type: CValuesRef<CPointerVar<GVariantType>>?, state_hint: CValuesRef<CPointerVar<GVariant>>?, state: CValuesRef<CPointerVar<GVariant>>?): gboolean

@CCall("knifunptr_glibjson2344_g_dbus_connection_export_action_group")
external fun g_dbus_connection_export_action_group(connection: CValuesRef<GDBusConnection>?, @CCall.CString object_path: String?, action_group: CValuesRef<GActionGroup>?, error: CValuesRef<CPointerVar<GError>>?): guint

@CCall("knifunptr_glibjson2345_g_dbus_connection_unexport_action_group")
external fun g_dbus_connection_unexport_action_group(connection: CValuesRef<GDBusConnection>?, export_id: guint): Unit

@CCall("knifunptr_glibjson2346_g_action_map_get_type")
external fun g_action_map_get_type(): GType

@CCall("knifunptr_glibjson2347_g_action_map_lookup_action")
external fun g_action_map_lookup_action(action_map: CValuesRef<GActionMap>?, @CCall.CString action_name: String?): CPointer<GAction>?

@CCall("knifunptr_glibjson2348_g_action_map_add_action")
external fun g_action_map_add_action(action_map: CValuesRef<GActionMap>?, action: CValuesRef<GAction>?): Unit

@CCall("knifunptr_glibjson2349_g_action_map_remove_action")
external fun g_action_map_remove_action(action_map: CValuesRef<GActionMap>?, @CCall.CString action_name: String?): Unit

@CCall("knifunptr_glibjson2350_g_action_map_add_action_entries")
external fun g_action_map_add_action_entries(action_map: CValuesRef<GActionMap>?, entries: CValuesRef<GActionEntry>?, n_entries: gint, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2351_g_app_info_get_type")
external fun g_app_info_get_type(): GType

@CCall("knifunptr_glibjson2352_g_app_info_create_from_commandline")
external fun g_app_info_create_from_commandline(@CCall.CString commandline: String?, @CCall.CString application_name: String?, flags: GAppInfoCreateFlags, error: CValuesRef<CPointerVar<GError>>?): CPointer<GAppInfo>?

@CCall("knifunptr_glibjson2353_g_app_info_dup")
external fun g_app_info_dup(appinfo: CValuesRef<GAppInfo>?): CPointer<GAppInfo>?

@CCall("knifunptr_glibjson2354_g_app_info_equal")
external fun g_app_info_equal(appinfo1: CValuesRef<GAppInfo>?, appinfo2: CValuesRef<GAppInfo>?): gboolean

@CCall("knifunptr_glibjson2355_g_app_info_get_id")
external fun g_app_info_get_id(appinfo: CValuesRef<GAppInfo>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson2356_g_app_info_get_name")
external fun g_app_info_get_name(appinfo: CValuesRef<GAppInfo>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson2357_g_app_info_get_display_name")
external fun g_app_info_get_display_name(appinfo: CValuesRef<GAppInfo>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson2358_g_app_info_get_description")
external fun g_app_info_get_description(appinfo: CValuesRef<GAppInfo>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson2359_g_app_info_get_executable")
external fun g_app_info_get_executable(appinfo: CValuesRef<GAppInfo>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson2360_g_app_info_get_commandline")
external fun g_app_info_get_commandline(appinfo: CValuesRef<GAppInfo>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson2361_g_app_info_get_icon")
external fun g_app_info_get_icon(appinfo: CValuesRef<GAppInfo>?): CPointer<GIcon>?

@CCall("knifunptr_glibjson2362_g_app_info_launch")
external fun g_app_info_launch(appinfo: CValuesRef<GAppInfo>?, files: CValuesRef<GList>?, context: CValuesRef<GAppLaunchContext>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2363_g_app_info_supports_uris")
external fun g_app_info_supports_uris(appinfo: CValuesRef<GAppInfo>?): gboolean

@CCall("knifunptr_glibjson2364_g_app_info_supports_files")
external fun g_app_info_supports_files(appinfo: CValuesRef<GAppInfo>?): gboolean

@CCall("knifunptr_glibjson2365_g_app_info_launch_uris")
external fun g_app_info_launch_uris(appinfo: CValuesRef<GAppInfo>?, uris: CValuesRef<GList>?, context: CValuesRef<GAppLaunchContext>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2366_g_app_info_should_show")
external fun g_app_info_should_show(appinfo: CValuesRef<GAppInfo>?): gboolean

@CCall("knifunptr_glibjson2367_g_app_info_set_as_default_for_type")
external fun g_app_info_set_as_default_for_type(appinfo: CValuesRef<GAppInfo>?, @CCall.CString content_type: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2368_g_app_info_set_as_default_for_extension")
external fun g_app_info_set_as_default_for_extension(appinfo: CValuesRef<GAppInfo>?, @CCall.CString extension: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2369_g_app_info_add_supports_type")
external fun g_app_info_add_supports_type(appinfo: CValuesRef<GAppInfo>?, @CCall.CString content_type: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2370_g_app_info_can_remove_supports_type")
external fun g_app_info_can_remove_supports_type(appinfo: CValuesRef<GAppInfo>?): gboolean

@CCall("knifunptr_glibjson2371_g_app_info_remove_supports_type")
external fun g_app_info_remove_supports_type(appinfo: CValuesRef<GAppInfo>?, @CCall.CString content_type: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2372_g_app_info_get_supported_types")
external fun g_app_info_get_supported_types(appinfo: CValuesRef<GAppInfo>?): CPointer<CPointerVar<ByteVar>>?

@CCall("knifunptr_glibjson2373_g_app_info_can_delete")
external fun g_app_info_can_delete(appinfo: CValuesRef<GAppInfo>?): gboolean

@CCall("knifunptr_glibjson2374_g_app_info_delete")
external fun g_app_info_delete(appinfo: CValuesRef<GAppInfo>?): gboolean

@CCall("knifunptr_glibjson2375_g_app_info_set_as_last_used_for_type")
external fun g_app_info_set_as_last_used_for_type(appinfo: CValuesRef<GAppInfo>?, @CCall.CString content_type: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2376_g_app_info_get_all")
external fun g_app_info_get_all(): CPointer<GList>?

@CCall("knifunptr_glibjson2377_g_app_info_get_all_for_type")
external fun g_app_info_get_all_for_type(@CCall.CString content_type: String?): CPointer<GList>?

@CCall("knifunptr_glibjson2378_g_app_info_get_recommended_for_type")
external fun g_app_info_get_recommended_for_type(@CCall.CString content_type: String?): CPointer<GList>?

@CCall("knifunptr_glibjson2379_g_app_info_get_fallback_for_type")
external fun g_app_info_get_fallback_for_type(@CCall.CString content_type: String?): CPointer<GList>?

@CCall("knifunptr_glibjson2380_g_app_info_reset_type_associations")
external fun g_app_info_reset_type_associations(@CCall.CString content_type: String?): Unit

@CCall("knifunptr_glibjson2381_g_app_info_get_default_for_type")
external fun g_app_info_get_default_for_type(@CCall.CString content_type: String?, must_support_uris: gboolean): CPointer<GAppInfo>?

@CCall("knifunptr_glibjson2382_g_app_info_get_default_for_uri_scheme")
external fun g_app_info_get_default_for_uri_scheme(@CCall.CString uri_scheme: String?): CPointer<GAppInfo>?

@CCall("knifunptr_glibjson2383_g_app_info_launch_default_for_uri")
external fun g_app_info_launch_default_for_uri(@CCall.CString uri: String?, context: CValuesRef<GAppLaunchContext>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2384_g_app_info_launch_default_for_uri_async")
external fun g_app_info_launch_default_for_uri_async(@CCall.CString uri: String?, context: CValuesRef<GAppLaunchContext>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2385_g_app_info_launch_default_for_uri_finish")
external fun g_app_info_launch_default_for_uri_finish(result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2386_g_app_launch_context_get_type")
external fun g_app_launch_context_get_type(): GType

@CCall("knifunptr_glibjson2387_g_app_launch_context_new")
external fun g_app_launch_context_new(): CPointer<GAppLaunchContext>?

@CCall("knifunptr_glibjson2388_g_app_launch_context_setenv")
external fun g_app_launch_context_setenv(context: CValuesRef<GAppLaunchContext>?, @CCall.CString variable: String?, @CCall.CString value: String?): Unit

@CCall("knifunptr_glibjson2389_g_app_launch_context_unsetenv")
external fun g_app_launch_context_unsetenv(context: CValuesRef<GAppLaunchContext>?, @CCall.CString variable: String?): Unit

@CCall("knifunptr_glibjson2390_g_app_launch_context_get_environment")
external fun g_app_launch_context_get_environment(context: CValuesRef<GAppLaunchContext>?): CPointer<CPointerVar<ByteVar>>?

@CCall("knifunptr_glibjson2391_g_app_launch_context_get_display")
external fun g_app_launch_context_get_display(context: CValuesRef<GAppLaunchContext>?, info: CValuesRef<GAppInfo>?, files: CValuesRef<GList>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson2392_g_app_launch_context_get_startup_notify_id")
external fun g_app_launch_context_get_startup_notify_id(context: CValuesRef<GAppLaunchContext>?, info: CValuesRef<GAppInfo>?, files: CValuesRef<GList>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson2393_g_app_launch_context_launch_failed")
external fun g_app_launch_context_launch_failed(context: CValuesRef<GAppLaunchContext>?, @CCall.CString startup_notify_id: String?): Unit

@CCall("knifunptr_glibjson2394_g_app_info_monitor_get_type")
external fun g_app_info_monitor_get_type(): GType

@CCall("knifunptr_glibjson2395_g_app_info_monitor_get")
external fun g_app_info_monitor_get(): CPointer<GAppInfoMonitor>?

@CCall("knifunptr_glibjson2396_g_application_get_type")
external fun g_application_get_type(): GType

@CCall("knifunptr_glibjson2397_g_application_id_is_valid")
external fun g_application_id_is_valid(@CCall.CString application_id: String?): gboolean

@CCall("knifunptr_glibjson2398_g_application_new")
external fun g_application_new(@CCall.CString application_id: String?, flags: GApplicationFlags): CPointer<GApplication>?

@CCall("knifunptr_glibjson2399_g_application_get_application_id")
external fun g_application_get_application_id(application: CValuesRef<GApplication>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2400_g_application_set_application_id")
external fun g_application_set_application_id(application: CValuesRef<GApplication>?, @CCall.CString application_id: String?): Unit

@CCall("knifunptr_glibjson2401_g_application_get_dbus_connection")
external fun g_application_get_dbus_connection(application: CValuesRef<GApplication>?): CPointer<GDBusConnection>?

@CCall("knifunptr_glibjson2402_g_application_get_dbus_object_path")
external fun g_application_get_dbus_object_path(application: CValuesRef<GApplication>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2403_g_application_get_inactivity_timeout")
external fun g_application_get_inactivity_timeout(application: CValuesRef<GApplication>?): guint

@CCall("knifunptr_glibjson2404_g_application_set_inactivity_timeout")
external fun g_application_set_inactivity_timeout(application: CValuesRef<GApplication>?, inactivity_timeout: guint): Unit

@CCall("knifunptr_glibjson2405_g_application_get_flags")
external fun g_application_get_flags(application: CValuesRef<GApplication>?): GApplicationFlags

@CCall("knifunptr_glibjson2406_g_application_set_flags")
external fun g_application_set_flags(application: CValuesRef<GApplication>?, flags: GApplicationFlags): Unit

@CCall("knifunptr_glibjson2407_g_application_get_resource_base_path")
external fun g_application_get_resource_base_path(application: CValuesRef<GApplication>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2408_g_application_set_resource_base_path")
external fun g_application_set_resource_base_path(application: CValuesRef<GApplication>?, @CCall.CString resource_path: String?): Unit

@CCall("knifunptr_glibjson2409_g_application_set_action_group")
external fun g_application_set_action_group(application: CValuesRef<GApplication>?, action_group: CValuesRef<GActionGroup>?): Unit

@CCall("knifunptr_glibjson2410_g_application_add_main_option_entries")
external fun g_application_add_main_option_entries(application: CValuesRef<GApplication>?, entries: CValuesRef<GOptionEntry>?): Unit

@CCall("knifunptr_glibjson2411_g_application_add_main_option")
external fun g_application_add_main_option(application: CValuesRef<GApplication>?, @CCall.CString long_name: String?, short_name: Byte, flags: GOptionFlags, arg: GOptionArg, @CCall.CString description: String?, @CCall.CString arg_description: String?): Unit

@CCall("knifunptr_glibjson2412_g_application_add_option_group")
external fun g_application_add_option_group(application: CValuesRef<GApplication>?, group: CValuesRef<GOptionGroup>?): Unit

@CCall("knifunptr_glibjson2413_g_application_set_option_context_parameter_string")
external fun g_application_set_option_context_parameter_string(application: CValuesRef<GApplication>?, @CCall.CString parameter_string: String?): Unit

@CCall("knifunptr_glibjson2414_g_application_set_option_context_summary")
external fun g_application_set_option_context_summary(application: CValuesRef<GApplication>?, @CCall.CString summary: String?): Unit

@CCall("knifunptr_glibjson2415_g_application_set_option_context_description")
external fun g_application_set_option_context_description(application: CValuesRef<GApplication>?, @CCall.CString description: String?): Unit

@CCall("knifunptr_glibjson2416_g_application_get_is_registered")
external fun g_application_get_is_registered(application: CValuesRef<GApplication>?): gboolean

@CCall("knifunptr_glibjson2417_g_application_get_is_remote")
external fun g_application_get_is_remote(application: CValuesRef<GApplication>?): gboolean

@CCall("knifunptr_glibjson2418_g_application_register")
external fun g_application_register(application: CValuesRef<GApplication>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2419_g_application_hold")
external fun g_application_hold(application: CValuesRef<GApplication>?): Unit

@CCall("knifunptr_glibjson2420_g_application_release")
external fun g_application_release(application: CValuesRef<GApplication>?): Unit

@CCall("knifunptr_glibjson2421_g_application_activate")
external fun g_application_activate(application: CValuesRef<GApplication>?): Unit

@CCall("knifunptr_glibjson2422_g_application_open")
external fun g_application_open(application: CValuesRef<GApplication>?, files: CValuesRef<CPointerVar<GFile>>?, n_files: gint, @CCall.CString hint: String?): Unit

@CCall("knifunptr_glibjson2423_g_application_run")
external fun g_application_run(application: CValuesRef<GApplication>?, argc: Int, argv: CValuesRef<CPointerVar<ByteVar>>?): Int

@CCall("knifunptr_glibjson2424_g_application_quit")
external fun g_application_quit(application: CValuesRef<GApplication>?): Unit

@CCall("knifunptr_glibjson2425_g_application_get_default")
external fun g_application_get_default(): CPointer<GApplication>?

@CCall("knifunptr_glibjson2426_g_application_set_default")
external fun g_application_set_default(application: CValuesRef<GApplication>?): Unit

@CCall("knifunptr_glibjson2427_g_application_mark_busy")
external fun g_application_mark_busy(application: CValuesRef<GApplication>?): Unit

@CCall("knifunptr_glibjson2428_g_application_unmark_busy")
external fun g_application_unmark_busy(application: CValuesRef<GApplication>?): Unit

@CCall("knifunptr_glibjson2429_g_application_get_is_busy")
external fun g_application_get_is_busy(application: CValuesRef<GApplication>?): gboolean

@CCall("knifunptr_glibjson2430_g_application_send_notification")
external fun g_application_send_notification(application: CValuesRef<GApplication>?, @CCall.CString id: String?, notification: CValuesRef<GNotification>?): Unit

@CCall("knifunptr_glibjson2431_g_application_withdraw_notification")
external fun g_application_withdraw_notification(application: CValuesRef<GApplication>?, @CCall.CString id: String?): Unit

@CCall("knifunptr_glibjson2432_g_application_bind_busy_property")
external fun g_application_bind_busy_property(application: CValuesRef<GApplication>?, `object`: gpointer?, @CCall.CString property: String?): Unit

@CCall("knifunptr_glibjson2433_g_application_unbind_busy_property")
external fun g_application_unbind_busy_property(application: CValuesRef<GApplication>?, `object`: gpointer?, @CCall.CString property: String?): Unit

@CCall("knifunptr_glibjson2434_g_application_command_line_get_type")
external fun g_application_command_line_get_type(): GType

@CCall("knifunptr_glibjson2435_g_application_command_line_get_arguments")
external fun g_application_command_line_get_arguments(cmdline: CValuesRef<GApplicationCommandLine>?, argc: CValuesRef<IntVar>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson2436_g_application_command_line_get_options_dict")
external fun g_application_command_line_get_options_dict(cmdline: CValuesRef<GApplicationCommandLine>?): CPointer<GVariantDict>?

@CCall("knifunptr_glibjson2437_g_application_command_line_get_stdin")
external fun g_application_command_line_get_stdin(cmdline: CValuesRef<GApplicationCommandLine>?): CPointer<GInputStream>?

@CCall("knifunptr_glibjson2438_g_application_command_line_get_environ")
external fun g_application_command_line_get_environ(cmdline: CValuesRef<GApplicationCommandLine>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson2439_g_application_command_line_getenv")
external fun g_application_command_line_getenv(cmdline: CValuesRef<GApplicationCommandLine>?, @CCall.CString name: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2440_g_application_command_line_get_cwd")
external fun g_application_command_line_get_cwd(cmdline: CValuesRef<GApplicationCommandLine>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2441_g_application_command_line_get_is_remote")
external fun g_application_command_line_get_is_remote(cmdline: CValuesRef<GApplicationCommandLine>?): gboolean

@CCall("knifunptr_glibjson2442_g_application_command_line_print")
external fun g_application_command_line_print(cmdline: CValuesRef<GApplicationCommandLine>?, @CCall.CString format: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson2443_g_application_command_line_printerr")
external fun g_application_command_line_printerr(cmdline: CValuesRef<GApplicationCommandLine>?, @CCall.CString format: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson2444_g_application_command_line_get_exit_status")
external fun g_application_command_line_get_exit_status(cmdline: CValuesRef<GApplicationCommandLine>?): Int

@CCall("knifunptr_glibjson2445_g_application_command_line_set_exit_status")
external fun g_application_command_line_set_exit_status(cmdline: CValuesRef<GApplicationCommandLine>?, exit_status: Int): Unit

@CCall("knifunptr_glibjson2446_g_application_command_line_get_platform_data")
external fun g_application_command_line_get_platform_data(cmdline: CValuesRef<GApplicationCommandLine>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson2447_g_application_command_line_create_file_for_arg")
external fun g_application_command_line_create_file_for_arg(cmdline: CValuesRef<GApplicationCommandLine>?, @CCall.CString arg: String?): CPointer<GFile>?

@CCall("knifunptr_glibjson2448_g_initable_get_type")
external fun g_initable_get_type(): GType

@CCall("knifunptr_glibjson2449_g_initable_init")
external fun g_initable_init(initable: CValuesRef<GInitable>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2450_g_initable_new")
external fun g_initable_new(object_type: GType, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?, @CCall.CString first_property_name: String?, vararg variadicArguments: Any?): gpointer?

@CCall("knifunptr_glibjson2451_g_initable_newv")
external fun g_initable_newv(object_type: GType, n_parameters: guint, parameters: CValuesRef<GParameter>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gpointer?

@CCall("knifunptr_glibjson2452_g_initable_new_valist")
external fun g_initable_new_valist(object_type: GType, @CCall.CString first_property_name: String?, var_args: va_list?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GObject>?

@CCall("knifunptr_glibjson2453_g_async_initable_get_type")
external fun g_async_initable_get_type(): GType

@CCall("knifunptr_glibjson2454_g_async_initable_init_async")
external fun g_async_initable_init_async(initable: CValuesRef<GAsyncInitable>?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2455_g_async_initable_init_finish")
external fun g_async_initable_init_finish(initable: CValuesRef<GAsyncInitable>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2456_g_async_initable_new_async")
external fun g_async_initable_new_async(object_type: GType, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?, @CCall.CString first_property_name: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson2457_g_async_initable_newv_async")
external fun g_async_initable_newv_async(object_type: GType, n_parameters: guint, parameters: CValuesRef<GParameter>?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2458_g_async_initable_new_valist_async")
external fun g_async_initable_new_valist_async(object_type: GType, @CCall.CString first_property_name: String?, var_args: va_list?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2459_g_async_initable_new_finish")
external fun g_async_initable_new_finish(initable: CValuesRef<GAsyncInitable>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GObject>?

@CCall("knifunptr_glibjson2460_g_async_result_get_type")
external fun g_async_result_get_type(): GType

@CCall("knifunptr_glibjson2461_g_async_result_get_user_data")
external fun g_async_result_get_user_data(res: CValuesRef<GAsyncResult>?): gpointer?

@CCall("knifunptr_glibjson2462_g_async_result_get_source_object")
external fun g_async_result_get_source_object(res: CValuesRef<GAsyncResult>?): CPointer<GObject>?

@CCall("knifunptr_glibjson2463_g_async_result_legacy_propagate_error")
external fun g_async_result_legacy_propagate_error(res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2464_g_async_result_is_tagged")
external fun g_async_result_is_tagged(res: CValuesRef<GAsyncResult>?, source_tag: gpointer?): gboolean

@CCall("knifunptr_glibjson2465_g_input_stream_get_type")
external fun g_input_stream_get_type(): GType

@CCall("knifunptr_glibjson2466_g_input_stream_read")
external fun g_input_stream_read(stream: CValuesRef<GInputStream>?, buffer: CValuesRef<*>?, count: gsize, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_glibjson2467_g_input_stream_read_all")
external fun g_input_stream_read_all(stream: CValuesRef<GInputStream>?, buffer: CValuesRef<*>?, count: gsize, bytes_read: CValuesRef<gsizeVar>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2468_g_input_stream_read_bytes")
external fun g_input_stream_read_bytes(stream: CValuesRef<GInputStream>?, count: gsize, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GBytes>?

@CCall("knifunptr_glibjson2469_g_input_stream_skip")
external fun g_input_stream_skip(stream: CValuesRef<GInputStream>?, count: gsize, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_glibjson2470_g_input_stream_close")
external fun g_input_stream_close(stream: CValuesRef<GInputStream>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2471_g_input_stream_read_async")
external fun g_input_stream_read_async(stream: CValuesRef<GInputStream>?, buffer: CValuesRef<*>?, count: gsize, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2472_g_input_stream_read_finish")
external fun g_input_stream_read_finish(stream: CValuesRef<GInputStream>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_glibjson2473_g_input_stream_read_all_async")
external fun g_input_stream_read_all_async(stream: CValuesRef<GInputStream>?, buffer: CValuesRef<*>?, count: gsize, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2474_g_input_stream_read_all_finish")
external fun g_input_stream_read_all_finish(stream: CValuesRef<GInputStream>?, result: CValuesRef<GAsyncResult>?, bytes_read: CValuesRef<gsizeVar>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2475_g_input_stream_read_bytes_async")
external fun g_input_stream_read_bytes_async(stream: CValuesRef<GInputStream>?, count: gsize, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2476_g_input_stream_read_bytes_finish")
external fun g_input_stream_read_bytes_finish(stream: CValuesRef<GInputStream>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GBytes>?

@CCall("knifunptr_glibjson2477_g_input_stream_skip_async")
external fun g_input_stream_skip_async(stream: CValuesRef<GInputStream>?, count: gsize, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2478_g_input_stream_skip_finish")
external fun g_input_stream_skip_finish(stream: CValuesRef<GInputStream>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_glibjson2479_g_input_stream_close_async")
external fun g_input_stream_close_async(stream: CValuesRef<GInputStream>?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2480_g_input_stream_close_finish")
external fun g_input_stream_close_finish(stream: CValuesRef<GInputStream>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2481_g_input_stream_is_closed")
external fun g_input_stream_is_closed(stream: CValuesRef<GInputStream>?): gboolean

@CCall("knifunptr_glibjson2482_g_input_stream_has_pending")
external fun g_input_stream_has_pending(stream: CValuesRef<GInputStream>?): gboolean

@CCall("knifunptr_glibjson2483_g_input_stream_set_pending")
external fun g_input_stream_set_pending(stream: CValuesRef<GInputStream>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2484_g_input_stream_clear_pending")
external fun g_input_stream_clear_pending(stream: CValuesRef<GInputStream>?): Unit

@CCall("knifunptr_glibjson2485_g_filter_input_stream_get_type")
external fun g_filter_input_stream_get_type(): GType

@CCall("knifunptr_glibjson2486_g_filter_input_stream_get_base_stream")
external fun g_filter_input_stream_get_base_stream(stream: CValuesRef<GFilterInputStream>?): CPointer<GInputStream>?

@CCall("knifunptr_glibjson2487_g_filter_input_stream_get_close_base_stream")
external fun g_filter_input_stream_get_close_base_stream(stream: CValuesRef<GFilterInputStream>?): gboolean

@CCall("knifunptr_glibjson2488_g_filter_input_stream_set_close_base_stream")
external fun g_filter_input_stream_set_close_base_stream(stream: CValuesRef<GFilterInputStream>?, close_base: gboolean): Unit

@CCall("knifunptr_glibjson2489_g_buffered_input_stream_get_type")
external fun g_buffered_input_stream_get_type(): GType

@CCall("knifunptr_glibjson2490_g_buffered_input_stream_new")
external fun g_buffered_input_stream_new(base_stream: CValuesRef<GInputStream>?): CPointer<GInputStream>?

@CCall("knifunptr_glibjson2491_g_buffered_input_stream_new_sized")
external fun g_buffered_input_stream_new_sized(base_stream: CValuesRef<GInputStream>?, size: gsize): CPointer<GInputStream>?

@CCall("knifunptr_glibjson2492_g_buffered_input_stream_get_buffer_size")
external fun g_buffered_input_stream_get_buffer_size(stream: CValuesRef<GBufferedInputStream>?): gsize

@CCall("knifunptr_glibjson2493_g_buffered_input_stream_set_buffer_size")
external fun g_buffered_input_stream_set_buffer_size(stream: CValuesRef<GBufferedInputStream>?, size: gsize): Unit

@CCall("knifunptr_glibjson2494_g_buffered_input_stream_get_available")
external fun g_buffered_input_stream_get_available(stream: CValuesRef<GBufferedInputStream>?): gsize

@CCall("knifunptr_glibjson2495_g_buffered_input_stream_peek")
external fun g_buffered_input_stream_peek(stream: CValuesRef<GBufferedInputStream>?, buffer: CValuesRef<*>?, offset: gsize, count: gsize): gsize

@CCall("knifunptr_glibjson2496_g_buffered_input_stream_peek_buffer")
external fun g_buffered_input_stream_peek_buffer(stream: CValuesRef<GBufferedInputStream>?, count: CValuesRef<gsizeVar>?): COpaquePointer?

@CCall("knifunptr_glibjson2497_g_buffered_input_stream_fill")
external fun g_buffered_input_stream_fill(stream: CValuesRef<GBufferedInputStream>?, count: gssize, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_glibjson2498_g_buffered_input_stream_fill_async")
external fun g_buffered_input_stream_fill_async(stream: CValuesRef<GBufferedInputStream>?, count: gssize, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2499_g_buffered_input_stream_fill_finish")
external fun g_buffered_input_stream_fill_finish(stream: CValuesRef<GBufferedInputStream>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_glibjson2500_g_buffered_input_stream_read_byte")
external fun g_buffered_input_stream_read_byte(stream: CValuesRef<GBufferedInputStream>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): Int

@CCall("knifunptr_glibjson2501_g_output_stream_get_type")
external fun g_output_stream_get_type(): GType

@CCall("knifunptr_glibjson2502_g_output_stream_write")
external fun g_output_stream_write(stream: CValuesRef<GOutputStream>?, buffer: CValuesRef<*>?, count: gsize, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_glibjson2503_g_output_stream_write_all")
external fun g_output_stream_write_all(stream: CValuesRef<GOutputStream>?, buffer: CValuesRef<*>?, count: gsize, bytes_written: CValuesRef<gsizeVar>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2504_g_output_stream_printf")
external fun g_output_stream_printf(stream: CValuesRef<GOutputStream>?, bytes_written: CValuesRef<gsizeVar>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?, @CCall.CString format: String?, vararg variadicArguments: Any?): gboolean

@CCall("knifunptr_glibjson2505_g_output_stream_vprintf")
external fun g_output_stream_vprintf(stream: CValuesRef<GOutputStream>?, bytes_written: CValuesRef<gsizeVar>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?, @CCall.CString format: String?, args: va_list?): gboolean

@CCall("knifunptr_glibjson2506_g_output_stream_write_bytes")
external fun g_output_stream_write_bytes(stream: CValuesRef<GOutputStream>?, bytes: CValuesRef<GBytes>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_glibjson2507_g_output_stream_splice")
external fun g_output_stream_splice(stream: CValuesRef<GOutputStream>?, source: CValuesRef<GInputStream>?, flags: GOutputStreamSpliceFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_glibjson2508_g_output_stream_flush")
external fun g_output_stream_flush(stream: CValuesRef<GOutputStream>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2509_g_output_stream_close")
external fun g_output_stream_close(stream: CValuesRef<GOutputStream>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2510_g_output_stream_write_async")
external fun g_output_stream_write_async(stream: CValuesRef<GOutputStream>?, buffer: CValuesRef<*>?, count: gsize, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2511_g_output_stream_write_finish")
external fun g_output_stream_write_finish(stream: CValuesRef<GOutputStream>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_glibjson2512_g_output_stream_write_all_async")
external fun g_output_stream_write_all_async(stream: CValuesRef<GOutputStream>?, buffer: CValuesRef<*>?, count: gsize, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2513_g_output_stream_write_all_finish")
external fun g_output_stream_write_all_finish(stream: CValuesRef<GOutputStream>?, result: CValuesRef<GAsyncResult>?, bytes_written: CValuesRef<gsizeVar>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2514_g_output_stream_write_bytes_async")
external fun g_output_stream_write_bytes_async(stream: CValuesRef<GOutputStream>?, bytes: CValuesRef<GBytes>?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2515_g_output_stream_write_bytes_finish")
external fun g_output_stream_write_bytes_finish(stream: CValuesRef<GOutputStream>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_glibjson2516_g_output_stream_splice_async")
external fun g_output_stream_splice_async(stream: CValuesRef<GOutputStream>?, source: CValuesRef<GInputStream>?, flags: GOutputStreamSpliceFlags, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2517_g_output_stream_splice_finish")
external fun g_output_stream_splice_finish(stream: CValuesRef<GOutputStream>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_glibjson2518_g_output_stream_flush_async")
external fun g_output_stream_flush_async(stream: CValuesRef<GOutputStream>?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2519_g_output_stream_flush_finish")
external fun g_output_stream_flush_finish(stream: CValuesRef<GOutputStream>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2520_g_output_stream_close_async")
external fun g_output_stream_close_async(stream: CValuesRef<GOutputStream>?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2521_g_output_stream_close_finish")
external fun g_output_stream_close_finish(stream: CValuesRef<GOutputStream>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2522_g_output_stream_is_closed")
external fun g_output_stream_is_closed(stream: CValuesRef<GOutputStream>?): gboolean

@CCall("knifunptr_glibjson2523_g_output_stream_is_closing")
external fun g_output_stream_is_closing(stream: CValuesRef<GOutputStream>?): gboolean

@CCall("knifunptr_glibjson2524_g_output_stream_has_pending")
external fun g_output_stream_has_pending(stream: CValuesRef<GOutputStream>?): gboolean

@CCall("knifunptr_glibjson2525_g_output_stream_set_pending")
external fun g_output_stream_set_pending(stream: CValuesRef<GOutputStream>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2526_g_output_stream_clear_pending")
external fun g_output_stream_clear_pending(stream: CValuesRef<GOutputStream>?): Unit

@CCall("knifunptr_glibjson2527_g_filter_output_stream_get_type")
external fun g_filter_output_stream_get_type(): GType

@CCall("knifunptr_glibjson2528_g_filter_output_stream_get_base_stream")
external fun g_filter_output_stream_get_base_stream(stream: CValuesRef<GFilterOutputStream>?): CPointer<GOutputStream>?

@CCall("knifunptr_glibjson2529_g_filter_output_stream_get_close_base_stream")
external fun g_filter_output_stream_get_close_base_stream(stream: CValuesRef<GFilterOutputStream>?): gboolean

@CCall("knifunptr_glibjson2530_g_filter_output_stream_set_close_base_stream")
external fun g_filter_output_stream_set_close_base_stream(stream: CValuesRef<GFilterOutputStream>?, close_base: gboolean): Unit

@CCall("knifunptr_glibjson2531_g_buffered_output_stream_get_type")
external fun g_buffered_output_stream_get_type(): GType

@CCall("knifunptr_glibjson2532_g_buffered_output_stream_new")
external fun g_buffered_output_stream_new(base_stream: CValuesRef<GOutputStream>?): CPointer<GOutputStream>?

@CCall("knifunptr_glibjson2533_g_buffered_output_stream_new_sized")
external fun g_buffered_output_stream_new_sized(base_stream: CValuesRef<GOutputStream>?, size: gsize): CPointer<GOutputStream>?

@CCall("knifunptr_glibjson2534_g_buffered_output_stream_get_buffer_size")
external fun g_buffered_output_stream_get_buffer_size(stream: CValuesRef<GBufferedOutputStream>?): gsize

@CCall("knifunptr_glibjson2535_g_buffered_output_stream_set_buffer_size")
external fun g_buffered_output_stream_set_buffer_size(stream: CValuesRef<GBufferedOutputStream>?, size: gsize): Unit

@CCall("knifunptr_glibjson2536_g_buffered_output_stream_get_auto_grow")
external fun g_buffered_output_stream_get_auto_grow(stream: CValuesRef<GBufferedOutputStream>?): gboolean

@CCall("knifunptr_glibjson2537_g_buffered_output_stream_set_auto_grow")
external fun g_buffered_output_stream_set_auto_grow(stream: CValuesRef<GBufferedOutputStream>?, auto_grow: gboolean): Unit

@CCall("knifunptr_glibjson2538_g_bytes_icon_get_type")
external fun g_bytes_icon_get_type(): GType

@CCall("knifunptr_glibjson2539_g_bytes_icon_new")
external fun g_bytes_icon_new(bytes: CValuesRef<GBytes>?): CPointer<GIcon>?

@CCall("knifunptr_glibjson2540_g_bytes_icon_get_bytes")
external fun g_bytes_icon_get_bytes(icon: CValuesRef<GBytesIcon>?): CPointer<GBytes>?

@CCall("knifunptr_glibjson2541_g_cancellable_get_type")
external fun g_cancellable_get_type(): GType

@CCall("knifunptr_glibjson2542_g_cancellable_new")
external fun g_cancellable_new(): CPointer<GCancellable>?

@CCall("knifunptr_glibjson2543_g_cancellable_is_cancelled")
external fun g_cancellable_is_cancelled(cancellable: CValuesRef<GCancellable>?): gboolean

@CCall("knifunptr_glibjson2544_g_cancellable_set_error_if_cancelled")
external fun g_cancellable_set_error_if_cancelled(cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2545_g_cancellable_get_fd")
external fun g_cancellable_get_fd(cancellable: CValuesRef<GCancellable>?): Int

@CCall("knifunptr_glibjson2546_g_cancellable_make_pollfd")
external fun g_cancellable_make_pollfd(cancellable: CValuesRef<GCancellable>?, pollfd: CValuesRef<GPollFD>?): gboolean

@CCall("knifunptr_glibjson2547_g_cancellable_release_fd")
external fun g_cancellable_release_fd(cancellable: CValuesRef<GCancellable>?): Unit

@CCall("knifunptr_glibjson2548_g_cancellable_source_new")
external fun g_cancellable_source_new(cancellable: CValuesRef<GCancellable>?): CPointer<GSource>?

@CCall("knifunptr_glibjson2549_g_cancellable_get_current")
external fun g_cancellable_get_current(): CPointer<GCancellable>?

@CCall("knifunptr_glibjson2550_g_cancellable_push_current")
external fun g_cancellable_push_current(cancellable: CValuesRef<GCancellable>?): Unit

@CCall("knifunptr_glibjson2551_g_cancellable_pop_current")
external fun g_cancellable_pop_current(cancellable: CValuesRef<GCancellable>?): Unit

@CCall("knifunptr_glibjson2552_g_cancellable_reset")
external fun g_cancellable_reset(cancellable: CValuesRef<GCancellable>?): Unit

@CCall("knifunptr_glibjson2553_g_cancellable_connect")
external fun g_cancellable_connect(cancellable: CValuesRef<GCancellable>?, callback: GCallback?, data: gpointer?, data_destroy_func: GDestroyNotify?): gulong

@CCall("knifunptr_glibjson2554_g_cancellable_disconnect")
external fun g_cancellable_disconnect(cancellable: CValuesRef<GCancellable>?, handler_id: gulong): Unit

@CCall("knifunptr_glibjson2555_g_cancellable_cancel")
external fun g_cancellable_cancel(cancellable: CValuesRef<GCancellable>?): Unit

@CCall("knifunptr_glibjson2556_g_converter_get_type")
external fun g_converter_get_type(): GType

@CCall("knifunptr_glibjson2557_g_converter_convert")
external fun g_converter_convert(converter: CValuesRef<GConverter>?, inbuf: CValuesRef<*>?, inbuf_size: gsize, outbuf: CValuesRef<*>?, outbuf_size: gsize, flags: GConverterFlags, bytes_read: CValuesRef<gsizeVar>?, bytes_written: CValuesRef<gsizeVar>?, error: CValuesRef<CPointerVar<GError>>?): GConverterResult

@CCall("knifunptr_glibjson2558_g_converter_reset")
external fun g_converter_reset(converter: CValuesRef<GConverter>?): Unit

@CCall("knifunptr_glibjson2559_g_charset_converter_get_type")
external fun g_charset_converter_get_type(): GType

@CCall("knifunptr_glibjson2560_g_charset_converter_new")
external fun g_charset_converter_new(@CCall.CString to_charset: String?, @CCall.CString from_charset: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GCharsetConverter>?

@CCall("knifunptr_glibjson2561_g_charset_converter_set_use_fallback")
external fun g_charset_converter_set_use_fallback(converter: CValuesRef<GCharsetConverter>?, use_fallback: gboolean): Unit

@CCall("knifunptr_glibjson2562_g_charset_converter_get_use_fallback")
external fun g_charset_converter_get_use_fallback(converter: CValuesRef<GCharsetConverter>?): gboolean

@CCall("knifunptr_glibjson2563_g_charset_converter_get_num_fallbacks")
external fun g_charset_converter_get_num_fallbacks(converter: CValuesRef<GCharsetConverter>?): guint

@CCall("knifunptr_glibjson2564_g_content_type_equals")
external fun g_content_type_equals(@CCall.CString type1: String?, @CCall.CString type2: String?): gboolean

@CCall("knifunptr_glibjson2565_g_content_type_is_a")
external fun g_content_type_is_a(@CCall.CString type: String?, @CCall.CString supertype: String?): gboolean

@CCall("knifunptr_glibjson2566_g_content_type_is_mime_type")
external fun g_content_type_is_mime_type(@CCall.CString type: String?, @CCall.CString mime_type: String?): gboolean

@CCall("knifunptr_glibjson2567_g_content_type_is_unknown")
external fun g_content_type_is_unknown(@CCall.CString type: String?): gboolean

@CCall("knifunptr_glibjson2568_g_content_type_get_description")
external fun g_content_type_get_description(@CCall.CString type: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2569_g_content_type_get_mime_type")
external fun g_content_type_get_mime_type(@CCall.CString type: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2570_g_content_type_get_icon")
external fun g_content_type_get_icon(@CCall.CString type: String?): CPointer<GIcon>?

@CCall("knifunptr_glibjson2571_g_content_type_get_symbolic_icon")
external fun g_content_type_get_symbolic_icon(@CCall.CString type: String?): CPointer<GIcon>?

@CCall("knifunptr_glibjson2572_g_content_type_get_generic_icon_name")
external fun g_content_type_get_generic_icon_name(@CCall.CString type: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2573_g_content_type_can_be_executable")
external fun g_content_type_can_be_executable(@CCall.CString type: String?): gboolean

@CCall("knifunptr_glibjson2574_g_content_type_from_mime_type")
external fun g_content_type_from_mime_type(@CCall.CString mime_type: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2575_g_content_type_guess")
external fun g_content_type_guess(@CCall.CString filename: String?, data: CValuesRef<gucharVar>?, data_size: gsize, result_uncertain: CValuesRef<gbooleanVar>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2576_g_content_type_guess_for_tree")
external fun g_content_type_guess_for_tree(root: CValuesRef<GFile>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson2577_g_content_types_get_registered")
external fun g_content_types_get_registered(): CPointer<GList>?

@CCall("knifunptr_glibjson2578_g_converter_input_stream_get_type")
external fun g_converter_input_stream_get_type(): GType

@CCall("knifunptr_glibjson2579_g_converter_input_stream_new")
external fun g_converter_input_stream_new(base_stream: CValuesRef<GInputStream>?, converter: CValuesRef<GConverter>?): CPointer<GInputStream>?

@CCall("knifunptr_glibjson2580_g_converter_input_stream_get_converter")
external fun g_converter_input_stream_get_converter(converter_stream: CValuesRef<GConverterInputStream>?): CPointer<GConverter>?

@CCall("knifunptr_glibjson2581_g_converter_output_stream_get_type")
external fun g_converter_output_stream_get_type(): GType

@CCall("knifunptr_glibjson2582_g_converter_output_stream_new")
external fun g_converter_output_stream_new(base_stream: CValuesRef<GOutputStream>?, converter: CValuesRef<GConverter>?): CPointer<GOutputStream>?

@CCall("knifunptr_glibjson2583_g_converter_output_stream_get_converter")
external fun g_converter_output_stream_get_converter(converter_stream: CValuesRef<GConverterOutputStream>?): CPointer<GConverter>?

@CCall("knifunptr_glibjson2584_g_credentials_get_type")
external fun g_credentials_get_type(): GType

@CCall("knifunptr_glibjson2585_g_credentials_new")
external fun g_credentials_new(): CPointer<GCredentials>?

@CCall("knifunptr_glibjson2586_g_credentials_to_string")
external fun g_credentials_to_string(credentials: CValuesRef<GCredentials>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2587_g_credentials_get_native")
external fun g_credentials_get_native(credentials: CValuesRef<GCredentials>?, native_type: GCredentialsType): gpointer?

@CCall("knifunptr_glibjson2588_g_credentials_set_native")
external fun g_credentials_set_native(credentials: CValuesRef<GCredentials>?, native_type: GCredentialsType, native: gpointer?): Unit

@CCall("knifunptr_glibjson2589_g_credentials_is_same_user")
external fun g_credentials_is_same_user(credentials: CValuesRef<GCredentials>?, other_credentials: CValuesRef<GCredentials>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2590_g_credentials_get_unix_pid")
external fun g_credentials_get_unix_pid(credentials: CValuesRef<GCredentials>?, error: CValuesRef<CPointerVar<GError>>?): pid_t

@CCall("knifunptr_glibjson2591_g_credentials_get_unix_user")
external fun g_credentials_get_unix_user(credentials: CValuesRef<GCredentials>?, error: CValuesRef<CPointerVar<GError>>?): uid_t

@CCall("knifunptr_glibjson2592_g_credentials_set_unix_user")
external fun g_credentials_set_unix_user(credentials: CValuesRef<GCredentials>?, uid: uid_t, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2593_g_datagram_based_get_type")
external fun g_datagram_based_get_type(): GType

@CCall("knifunptr_glibjson2594_g_datagram_based_receive_messages")
external fun g_datagram_based_receive_messages(datagram_based: CValuesRef<GDatagramBased>?, messages: CValuesRef<GInputMessage>?, num_messages: guint, flags: gint, timeout: gint64, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gint

@CCall("knifunptr_glibjson2595_g_datagram_based_send_messages")
external fun g_datagram_based_send_messages(datagram_based: CValuesRef<GDatagramBased>?, messages: CValuesRef<GOutputMessage>?, num_messages: guint, flags: gint, timeout: gint64, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gint

@CCall("knifunptr_glibjson2596_g_datagram_based_create_source")
external fun g_datagram_based_create_source(datagram_based: CValuesRef<GDatagramBased>?, condition: GIOCondition, cancellable: CValuesRef<GCancellable>?): CPointer<GSource>?

@CCall("knifunptr_glibjson2597_g_datagram_based_condition_check")
external fun g_datagram_based_condition_check(datagram_based: CValuesRef<GDatagramBased>?, condition: GIOCondition): GIOCondition

@CCall("knifunptr_glibjson2598_g_datagram_based_condition_wait")
external fun g_datagram_based_condition_wait(datagram_based: CValuesRef<GDatagramBased>?, condition: GIOCondition, timeout: gint64, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2599_g_data_input_stream_get_type")
external fun g_data_input_stream_get_type(): GType

@CCall("knifunptr_glibjson2600_g_data_input_stream_new")
external fun g_data_input_stream_new(base_stream: CValuesRef<GInputStream>?): CPointer<GDataInputStream>?

@CCall("knifunptr_glibjson2601_g_data_input_stream_set_byte_order")
external fun g_data_input_stream_set_byte_order(stream: CValuesRef<GDataInputStream>?, order: GDataStreamByteOrder): Unit

@CCall("knifunptr_glibjson2602_g_data_input_stream_get_byte_order")
external fun g_data_input_stream_get_byte_order(stream: CValuesRef<GDataInputStream>?): GDataStreamByteOrder

@CCall("knifunptr_glibjson2603_g_data_input_stream_set_newline_type")
external fun g_data_input_stream_set_newline_type(stream: CValuesRef<GDataInputStream>?, type: GDataStreamNewlineType): Unit

@CCall("knifunptr_glibjson2604_g_data_input_stream_get_newline_type")
external fun g_data_input_stream_get_newline_type(stream: CValuesRef<GDataInputStream>?): GDataStreamNewlineType

@CCall("knifunptr_glibjson2605_g_data_input_stream_read_byte")
external fun g_data_input_stream_read_byte(stream: CValuesRef<GDataInputStream>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): guchar

@CCall("knifunptr_glibjson2606_g_data_input_stream_read_int16")
external fun g_data_input_stream_read_int16(stream: CValuesRef<GDataInputStream>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gint16

@CCall("knifunptr_glibjson2607_g_data_input_stream_read_uint16")
external fun g_data_input_stream_read_uint16(stream: CValuesRef<GDataInputStream>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): guint16

@CCall("knifunptr_glibjson2608_g_data_input_stream_read_int32")
external fun g_data_input_stream_read_int32(stream: CValuesRef<GDataInputStream>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gint32

@CCall("knifunptr_glibjson2609_g_data_input_stream_read_uint32")
external fun g_data_input_stream_read_uint32(stream: CValuesRef<GDataInputStream>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): guint32

@CCall("knifunptr_glibjson2610_g_data_input_stream_read_int64")
external fun g_data_input_stream_read_int64(stream: CValuesRef<GDataInputStream>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gint64

@CCall("knifunptr_glibjson2611_g_data_input_stream_read_uint64")
external fun g_data_input_stream_read_uint64(stream: CValuesRef<GDataInputStream>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): guint64

@CCall("knifunptr_glibjson2612_g_data_input_stream_read_line")
external fun g_data_input_stream_read_line(stream: CValuesRef<GDataInputStream>?, length: CValuesRef<gsizeVar>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson2613_g_data_input_stream_read_line_utf8")
external fun g_data_input_stream_read_line_utf8(stream: CValuesRef<GDataInputStream>?, length: CValuesRef<gsizeVar>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson2614_g_data_input_stream_read_line_async")
external fun g_data_input_stream_read_line_async(stream: CValuesRef<GDataInputStream>?, io_priority: gint, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2615_g_data_input_stream_read_line_finish")
external fun g_data_input_stream_read_line_finish(stream: CValuesRef<GDataInputStream>?, result: CValuesRef<GAsyncResult>?, length: CValuesRef<gsizeVar>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson2616_g_data_input_stream_read_line_finish_utf8")
external fun g_data_input_stream_read_line_finish_utf8(stream: CValuesRef<GDataInputStream>?, result: CValuesRef<GAsyncResult>?, length: CValuesRef<gsizeVar>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson2617_g_data_input_stream_read_until")
external fun g_data_input_stream_read_until(stream: CValuesRef<GDataInputStream>?, @CCall.CString stop_chars: String?, length: CValuesRef<gsizeVar>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson2618_g_data_input_stream_read_until_async")
external fun g_data_input_stream_read_until_async(stream: CValuesRef<GDataInputStream>?, @CCall.CString stop_chars: String?, io_priority: gint, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2619_g_data_input_stream_read_until_finish")
external fun g_data_input_stream_read_until_finish(stream: CValuesRef<GDataInputStream>?, result: CValuesRef<GAsyncResult>?, length: CValuesRef<gsizeVar>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson2620_g_data_input_stream_read_upto")
external fun g_data_input_stream_read_upto(stream: CValuesRef<GDataInputStream>?, @CCall.CString stop_chars: String?, stop_chars_len: gssize, length: CValuesRef<gsizeVar>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson2621_g_data_input_stream_read_upto_async")
external fun g_data_input_stream_read_upto_async(stream: CValuesRef<GDataInputStream>?, @CCall.CString stop_chars: String?, stop_chars_len: gssize, io_priority: gint, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2622_g_data_input_stream_read_upto_finish")
external fun g_data_input_stream_read_upto_finish(stream: CValuesRef<GDataInputStream>?, result: CValuesRef<GAsyncResult>?, length: CValuesRef<gsizeVar>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson2623_g_data_output_stream_get_type")
external fun g_data_output_stream_get_type(): GType

@CCall("knifunptr_glibjson2624_g_data_output_stream_new")
external fun g_data_output_stream_new(base_stream: CValuesRef<GOutputStream>?): CPointer<GDataOutputStream>?

@CCall("knifunptr_glibjson2625_g_data_output_stream_set_byte_order")
external fun g_data_output_stream_set_byte_order(stream: CValuesRef<GDataOutputStream>?, order: GDataStreamByteOrder): Unit

@CCall("knifunptr_glibjson2626_g_data_output_stream_get_byte_order")
external fun g_data_output_stream_get_byte_order(stream: CValuesRef<GDataOutputStream>?): GDataStreamByteOrder

@CCall("knifunptr_glibjson2627_g_data_output_stream_put_byte")
external fun g_data_output_stream_put_byte(stream: CValuesRef<GDataOutputStream>?, data: guchar, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2628_g_data_output_stream_put_int16")
external fun g_data_output_stream_put_int16(stream: CValuesRef<GDataOutputStream>?, data: gint16, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2629_g_data_output_stream_put_uint16")
external fun g_data_output_stream_put_uint16(stream: CValuesRef<GDataOutputStream>?, data: guint16, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2630_g_data_output_stream_put_int32")
external fun g_data_output_stream_put_int32(stream: CValuesRef<GDataOutputStream>?, data: gint32, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2631_g_data_output_stream_put_uint32")
external fun g_data_output_stream_put_uint32(stream: CValuesRef<GDataOutputStream>?, data: guint32, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2632_g_data_output_stream_put_int64")
external fun g_data_output_stream_put_int64(stream: CValuesRef<GDataOutputStream>?, data: gint64, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2633_g_data_output_stream_put_uint64")
external fun g_data_output_stream_put_uint64(stream: CValuesRef<GDataOutputStream>?, data: guint64, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2634_g_data_output_stream_put_string")
external fun g_data_output_stream_put_string(stream: CValuesRef<GDataOutputStream>?, @CCall.CString str: String?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2635_g_dbus_address_escape_value")
external fun g_dbus_address_escape_value(@CCall.CString string: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2636_g_dbus_is_address")
external fun g_dbus_is_address(@CCall.CString string: String?): gboolean

@CCall("knifunptr_glibjson2637_g_dbus_is_supported_address")
external fun g_dbus_is_supported_address(@CCall.CString string: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2638_g_dbus_address_get_stream")
external fun g_dbus_address_get_stream(@CCall.CString address: String?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2639_g_dbus_address_get_stream_finish")
external fun g_dbus_address_get_stream_finish(res: CValuesRef<GAsyncResult>?, out_guid: CValuesRef<CPointerVar<gcharVar>>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GIOStream>?

@CCall("knifunptr_glibjson2640_g_dbus_address_get_stream_sync")
external fun g_dbus_address_get_stream_sync(@CCall.CString address: String?, out_guid: CValuesRef<CPointerVar<gcharVar>>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GIOStream>?

@CCall("knifunptr_glibjson2641_g_dbus_address_get_for_bus_sync")
external fun g_dbus_address_get_for_bus_sync(bus_type: GBusType, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2642_g_dbus_auth_observer_get_type")
external fun g_dbus_auth_observer_get_type(): GType

@CCall("knifunptr_glibjson2643_g_dbus_auth_observer_new")
external fun g_dbus_auth_observer_new(): CPointer<GDBusAuthObserver>?

@CCall("knifunptr_glibjson2644_g_dbus_auth_observer_authorize_authenticated_peer")
external fun g_dbus_auth_observer_authorize_authenticated_peer(observer: CValuesRef<GDBusAuthObserver>?, stream: CValuesRef<GIOStream>?, credentials: CValuesRef<GCredentials>?): gboolean

@CCall("knifunptr_glibjson2645_g_dbus_auth_observer_allow_mechanism")
external fun g_dbus_auth_observer_allow_mechanism(observer: CValuesRef<GDBusAuthObserver>?, @CCall.CString mechanism: String?): gboolean

@CCall("knifunptr_glibjson2646_g_dbus_connection_get_type")
external fun g_dbus_connection_get_type(): GType

@CCall("knifunptr_glibjson2647_g_bus_get")
external fun g_bus_get(bus_type: GBusType, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2648_g_bus_get_finish")
external fun g_bus_get_finish(res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusConnection>?

@CCall("knifunptr_glibjson2649_g_bus_get_sync")
external fun g_bus_get_sync(bus_type: GBusType, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusConnection>?

@CCall("knifunptr_glibjson2650_g_dbus_connection_new")
external fun g_dbus_connection_new(stream: CValuesRef<GIOStream>?, @CCall.CString guid: String?, flags: GDBusConnectionFlags, observer: CValuesRef<GDBusAuthObserver>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2651_g_dbus_connection_new_finish")
external fun g_dbus_connection_new_finish(res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusConnection>?

@CCall("knifunptr_glibjson2652_g_dbus_connection_new_sync")
external fun g_dbus_connection_new_sync(stream: CValuesRef<GIOStream>?, @CCall.CString guid: String?, flags: GDBusConnectionFlags, observer: CValuesRef<GDBusAuthObserver>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusConnection>?

@CCall("knifunptr_glibjson2653_g_dbus_connection_new_for_address")
external fun g_dbus_connection_new_for_address(@CCall.CString address: String?, flags: GDBusConnectionFlags, observer: CValuesRef<GDBusAuthObserver>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2654_g_dbus_connection_new_for_address_finish")
external fun g_dbus_connection_new_for_address_finish(res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusConnection>?

@CCall("knifunptr_glibjson2655_g_dbus_connection_new_for_address_sync")
external fun g_dbus_connection_new_for_address_sync(@CCall.CString address: String?, flags: GDBusConnectionFlags, observer: CValuesRef<GDBusAuthObserver>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusConnection>?

@CCall("knifunptr_glibjson2656_g_dbus_connection_start_message_processing")
external fun g_dbus_connection_start_message_processing(connection: CValuesRef<GDBusConnection>?): Unit

@CCall("knifunptr_glibjson2657_g_dbus_connection_is_closed")
external fun g_dbus_connection_is_closed(connection: CValuesRef<GDBusConnection>?): gboolean

@CCall("knifunptr_glibjson2658_g_dbus_connection_get_stream")
external fun g_dbus_connection_get_stream(connection: CValuesRef<GDBusConnection>?): CPointer<GIOStream>?

@CCall("knifunptr_glibjson2659_g_dbus_connection_get_guid")
external fun g_dbus_connection_get_guid(connection: CValuesRef<GDBusConnection>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2660_g_dbus_connection_get_unique_name")
external fun g_dbus_connection_get_unique_name(connection: CValuesRef<GDBusConnection>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2661_g_dbus_connection_get_peer_credentials")
external fun g_dbus_connection_get_peer_credentials(connection: CValuesRef<GDBusConnection>?): CPointer<GCredentials>?

@CCall("knifunptr_glibjson2662_g_dbus_connection_get_last_serial")
external fun g_dbus_connection_get_last_serial(connection: CValuesRef<GDBusConnection>?): guint32

@CCall("knifunptr_glibjson2663_g_dbus_connection_get_exit_on_close")
external fun g_dbus_connection_get_exit_on_close(connection: CValuesRef<GDBusConnection>?): gboolean

@CCall("knifunptr_glibjson2664_g_dbus_connection_set_exit_on_close")
external fun g_dbus_connection_set_exit_on_close(connection: CValuesRef<GDBusConnection>?, exit_on_close: gboolean): Unit

@CCall("knifunptr_glibjson2665_g_dbus_connection_get_capabilities")
external fun g_dbus_connection_get_capabilities(connection: CValuesRef<GDBusConnection>?): GDBusCapabilityFlags

@CCall("knifunptr_glibjson2666_g_dbus_connection_close")
external fun g_dbus_connection_close(connection: CValuesRef<GDBusConnection>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2667_g_dbus_connection_close_finish")
external fun g_dbus_connection_close_finish(connection: CValuesRef<GDBusConnection>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2668_g_dbus_connection_close_sync")
external fun g_dbus_connection_close_sync(connection: CValuesRef<GDBusConnection>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2669_g_dbus_connection_flush")
external fun g_dbus_connection_flush(connection: CValuesRef<GDBusConnection>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2670_g_dbus_connection_flush_finish")
external fun g_dbus_connection_flush_finish(connection: CValuesRef<GDBusConnection>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2671_g_dbus_connection_flush_sync")
external fun g_dbus_connection_flush_sync(connection: CValuesRef<GDBusConnection>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2672_g_dbus_connection_send_message")
external fun g_dbus_connection_send_message(connection: CValuesRef<GDBusConnection>?, message: CValuesRef<GDBusMessage>?, flags: GDBusSendMessageFlags, out_serial: CValuesRef<guint32Var>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2673_g_dbus_connection_send_message_with_reply")
external fun g_dbus_connection_send_message_with_reply(connection: CValuesRef<GDBusConnection>?, message: CValuesRef<GDBusMessage>?, flags: GDBusSendMessageFlags, timeout_msec: gint, out_serial: CValuesRef<guint32Var>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2674_g_dbus_connection_send_message_with_reply_finish")
external fun g_dbus_connection_send_message_with_reply_finish(connection: CValuesRef<GDBusConnection>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusMessage>?

@CCall("knifunptr_glibjson2675_g_dbus_connection_send_message_with_reply_sync")
external fun g_dbus_connection_send_message_with_reply_sync(connection: CValuesRef<GDBusConnection>?, message: CValuesRef<GDBusMessage>?, flags: GDBusSendMessageFlags, timeout_msec: gint, out_serial: CValuesRef<guint32Var>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusMessage>?

@CCall("knifunptr_glibjson2676_g_dbus_connection_emit_signal")
external fun g_dbus_connection_emit_signal(connection: CValuesRef<GDBusConnection>?, @CCall.CString destination_bus_name: String?, @CCall.CString object_path: String?, @CCall.CString interface_name: String?, @CCall.CString signal_name: String?, parameters: CValuesRef<GVariant>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2677_g_dbus_connection_call")
external fun g_dbus_connection_call(connection: CValuesRef<GDBusConnection>?, @CCall.CString bus_name: String?, @CCall.CString object_path: String?, @CCall.CString interface_name: String?, @CCall.CString method_name: String?, parameters: CValuesRef<GVariant>?, reply_type: CValuesRef<GVariantType>?, flags: GDBusCallFlags, timeout_msec: gint, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2678_g_dbus_connection_call_finish")
external fun g_dbus_connection_call_finish(connection: CValuesRef<GDBusConnection>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson2679_g_dbus_connection_call_sync")
external fun g_dbus_connection_call_sync(connection: CValuesRef<GDBusConnection>?, @CCall.CString bus_name: String?, @CCall.CString object_path: String?, @CCall.CString interface_name: String?, @CCall.CString method_name: String?, parameters: CValuesRef<GVariant>?, reply_type: CValuesRef<GVariantType>?, flags: GDBusCallFlags, timeout_msec: gint, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson2680_g_dbus_connection_call_with_unix_fd_list")
external fun g_dbus_connection_call_with_unix_fd_list(connection: CValuesRef<GDBusConnection>?, @CCall.CString bus_name: String?, @CCall.CString object_path: String?, @CCall.CString interface_name: String?, @CCall.CString method_name: String?, parameters: CValuesRef<GVariant>?, reply_type: CValuesRef<GVariantType>?, flags: GDBusCallFlags, timeout_msec: gint, fd_list: CValuesRef<GUnixFDList>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2681_g_dbus_connection_call_with_unix_fd_list_finish")
external fun g_dbus_connection_call_with_unix_fd_list_finish(connection: CValuesRef<GDBusConnection>?, out_fd_list: CValuesRef<CPointerVar<GUnixFDList>>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson2682_g_dbus_connection_call_with_unix_fd_list_sync")
external fun g_dbus_connection_call_with_unix_fd_list_sync(connection: CValuesRef<GDBusConnection>?, @CCall.CString bus_name: String?, @CCall.CString object_path: String?, @CCall.CString interface_name: String?, @CCall.CString method_name: String?, parameters: CValuesRef<GVariant>?, reply_type: CValuesRef<GVariantType>?, flags: GDBusCallFlags, timeout_msec: gint, fd_list: CValuesRef<GUnixFDList>?, out_fd_list: CValuesRef<CPointerVar<GUnixFDList>>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson2683_g_dbus_connection_register_object")
external fun g_dbus_connection_register_object(connection: CValuesRef<GDBusConnection>?, @CCall.CString object_path: String?, interface_info: CValuesRef<GDBusInterfaceInfo>?, vtable: CValuesRef<GDBusInterfaceVTable>?, user_data: gpointer?, user_data_free_func: GDestroyNotify?, error: CValuesRef<CPointerVar<GError>>?): guint

@CCall("knifunptr_glibjson2684_g_dbus_connection_register_object_with_closures")
external fun g_dbus_connection_register_object_with_closures(connection: CValuesRef<GDBusConnection>?, @CCall.CString object_path: String?, interface_info: CValuesRef<GDBusInterfaceInfo>?, method_call_closure: CValuesRef<GClosure>?, get_property_closure: CValuesRef<GClosure>?, set_property_closure: CValuesRef<GClosure>?, error: CValuesRef<CPointerVar<GError>>?): guint

@CCall("knifunptr_glibjson2685_g_dbus_connection_unregister_object")
external fun g_dbus_connection_unregister_object(connection: CValuesRef<GDBusConnection>?, registration_id: guint): gboolean

@CCall("knifunptr_glibjson2686_g_dbus_connection_register_subtree")
external fun g_dbus_connection_register_subtree(connection: CValuesRef<GDBusConnection>?, @CCall.CString object_path: String?, vtable: CValuesRef<GDBusSubtreeVTable>?, flags: GDBusSubtreeFlags, user_data: gpointer?, user_data_free_func: GDestroyNotify?, error: CValuesRef<CPointerVar<GError>>?): guint

@CCall("knifunptr_glibjson2687_g_dbus_connection_unregister_subtree")
external fun g_dbus_connection_unregister_subtree(connection: CValuesRef<GDBusConnection>?, registration_id: guint): gboolean

@CCall("knifunptr_glibjson2688_g_dbus_connection_signal_subscribe")
external fun g_dbus_connection_signal_subscribe(connection: CValuesRef<GDBusConnection>?, @CCall.CString sender: String?, @CCall.CString interface_name: String?, @CCall.CString member: String?, @CCall.CString object_path: String?, @CCall.CString arg0: String?, flags: GDBusSignalFlags, callback: GDBusSignalCallback?, user_data: gpointer?, user_data_free_func: GDestroyNotify?): guint

@CCall("knifunptr_glibjson2689_g_dbus_connection_signal_unsubscribe")
external fun g_dbus_connection_signal_unsubscribe(connection: CValuesRef<GDBusConnection>?, subscription_id: guint): Unit

@CCall("knifunptr_glibjson2690_g_dbus_connection_add_filter")
external fun g_dbus_connection_add_filter(connection: CValuesRef<GDBusConnection>?, filter_function: GDBusMessageFilterFunction?, user_data: gpointer?, user_data_free_func: GDestroyNotify?): guint

@CCall("knifunptr_glibjson2691_g_dbus_connection_remove_filter")
external fun g_dbus_connection_remove_filter(connection: CValuesRef<GDBusConnection>?, filter_id: guint): Unit

@CCall("knifunptr_glibjson2692_g_dbus_error_quark")
external fun g_dbus_error_quark(): GQuark

@CCall("knifunptr_glibjson2693_g_dbus_error_is_remote_error")
external fun g_dbus_error_is_remote_error(error: CValuesRef<GError>?): gboolean

@CCall("knifunptr_glibjson2694_g_dbus_error_get_remote_error")
external fun g_dbus_error_get_remote_error(error: CValuesRef<GError>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2695_g_dbus_error_strip_remote_error")
external fun g_dbus_error_strip_remote_error(error: CValuesRef<GError>?): gboolean

@CCall("knifunptr_glibjson2696_g_dbus_error_register_error")
external fun g_dbus_error_register_error(error_domain: GQuark, error_code: gint, @CCall.CString dbus_error_name: String?): gboolean

@CCall("knifunptr_glibjson2697_g_dbus_error_unregister_error")
external fun g_dbus_error_unregister_error(error_domain: GQuark, error_code: gint, @CCall.CString dbus_error_name: String?): gboolean

@CCall("knifunptr_glibjson2698_g_dbus_error_register_error_domain")
external fun g_dbus_error_register_error_domain(@CCall.CString error_domain_quark_name: String?, quark_volatile: CValuesRef<gsizeVar>?, entries: CValuesRef<GDBusErrorEntry>?, num_entries: guint): Unit

@CCall("knifunptr_glibjson2699_g_dbus_error_new_for_dbus_error")
external fun g_dbus_error_new_for_dbus_error(@CCall.CString dbus_error_name: String?, @CCall.CString dbus_error_message: String?): CPointer<GError>?

@CCall("knifunptr_glibjson2700_g_dbus_error_set_dbus_error")
external fun g_dbus_error_set_dbus_error(error: CValuesRef<CPointerVar<GError>>?, @CCall.CString dbus_error_name: String?, @CCall.CString dbus_error_message: String?, @CCall.CString format: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson2701_g_dbus_error_set_dbus_error_valist")
external fun g_dbus_error_set_dbus_error_valist(error: CValuesRef<CPointerVar<GError>>?, @CCall.CString dbus_error_name: String?, @CCall.CString dbus_error_message: String?, @CCall.CString format: String?, var_args: va_list?): Unit

@CCall("knifunptr_glibjson2702_g_dbus_error_encode_gerror")
external fun g_dbus_error_encode_gerror(error: CValuesRef<GError>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2703_g_dbus_annotation_info_lookup")
external fun g_dbus_annotation_info_lookup(annotations: CValuesRef<CPointerVar<GDBusAnnotationInfo>>?, @CCall.CString name: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2704_g_dbus_interface_info_lookup_method")
external fun g_dbus_interface_info_lookup_method(info: CValuesRef<GDBusInterfaceInfo>?, @CCall.CString name: String?): CPointer<GDBusMethodInfo>?

@CCall("knifunptr_glibjson2705_g_dbus_interface_info_lookup_signal")
external fun g_dbus_interface_info_lookup_signal(info: CValuesRef<GDBusInterfaceInfo>?, @CCall.CString name: String?): CPointer<GDBusSignalInfo>?

@CCall("knifunptr_glibjson2706_g_dbus_interface_info_lookup_property")
external fun g_dbus_interface_info_lookup_property(info: CValuesRef<GDBusInterfaceInfo>?, @CCall.CString name: String?): CPointer<GDBusPropertyInfo>?

@CCall("knifunptr_glibjson2707_g_dbus_interface_info_cache_build")
external fun g_dbus_interface_info_cache_build(info: CValuesRef<GDBusInterfaceInfo>?): Unit

@CCall("knifunptr_glibjson2708_g_dbus_interface_info_cache_release")
external fun g_dbus_interface_info_cache_release(info: CValuesRef<GDBusInterfaceInfo>?): Unit

@CCall("knifunptr_glibjson2709_g_dbus_interface_info_generate_xml")
external fun g_dbus_interface_info_generate_xml(info: CValuesRef<GDBusInterfaceInfo>?, indent: guint, string_builder: CValuesRef<GString>?): Unit

@CCall("knifunptr_glibjson2710_g_dbus_node_info_new_for_xml")
external fun g_dbus_node_info_new_for_xml(@CCall.CString xml_data: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusNodeInfo>?

@CCall("knifunptr_glibjson2711_g_dbus_node_info_lookup_interface")
external fun g_dbus_node_info_lookup_interface(info: CValuesRef<GDBusNodeInfo>?, @CCall.CString name: String?): CPointer<GDBusInterfaceInfo>?

@CCall("knifunptr_glibjson2712_g_dbus_node_info_generate_xml")
external fun g_dbus_node_info_generate_xml(info: CValuesRef<GDBusNodeInfo>?, indent: guint, string_builder: CValuesRef<GString>?): Unit

@CCall("knifunptr_glibjson2713_g_dbus_node_info_ref")
external fun g_dbus_node_info_ref(info: CValuesRef<GDBusNodeInfo>?): CPointer<GDBusNodeInfo>?

@CCall("knifunptr_glibjson2714_g_dbus_interface_info_ref")
external fun g_dbus_interface_info_ref(info: CValuesRef<GDBusInterfaceInfo>?): CPointer<GDBusInterfaceInfo>?

@CCall("knifunptr_glibjson2715_g_dbus_method_info_ref")
external fun g_dbus_method_info_ref(info: CValuesRef<GDBusMethodInfo>?): CPointer<GDBusMethodInfo>?

@CCall("knifunptr_glibjson2716_g_dbus_signal_info_ref")
external fun g_dbus_signal_info_ref(info: CValuesRef<GDBusSignalInfo>?): CPointer<GDBusSignalInfo>?

@CCall("knifunptr_glibjson2717_g_dbus_property_info_ref")
external fun g_dbus_property_info_ref(info: CValuesRef<GDBusPropertyInfo>?): CPointer<GDBusPropertyInfo>?

@CCall("knifunptr_glibjson2718_g_dbus_arg_info_ref")
external fun g_dbus_arg_info_ref(info: CValuesRef<GDBusArgInfo>?): CPointer<GDBusArgInfo>?

@CCall("knifunptr_glibjson2719_g_dbus_annotation_info_ref")
external fun g_dbus_annotation_info_ref(info: CValuesRef<GDBusAnnotationInfo>?): CPointer<GDBusAnnotationInfo>?

@CCall("knifunptr_glibjson2720_g_dbus_node_info_unref")
external fun g_dbus_node_info_unref(info: CValuesRef<GDBusNodeInfo>?): Unit

@CCall("knifunptr_glibjson2721_g_dbus_interface_info_unref")
external fun g_dbus_interface_info_unref(info: CValuesRef<GDBusInterfaceInfo>?): Unit

@CCall("knifunptr_glibjson2722_g_dbus_method_info_unref")
external fun g_dbus_method_info_unref(info: CValuesRef<GDBusMethodInfo>?): Unit

@CCall("knifunptr_glibjson2723_g_dbus_signal_info_unref")
external fun g_dbus_signal_info_unref(info: CValuesRef<GDBusSignalInfo>?): Unit

@CCall("knifunptr_glibjson2724_g_dbus_property_info_unref")
external fun g_dbus_property_info_unref(info: CValuesRef<GDBusPropertyInfo>?): Unit

@CCall("knifunptr_glibjson2725_g_dbus_arg_info_unref")
external fun g_dbus_arg_info_unref(info: CValuesRef<GDBusArgInfo>?): Unit

@CCall("knifunptr_glibjson2726_g_dbus_annotation_info_unref")
external fun g_dbus_annotation_info_unref(info: CValuesRef<GDBusAnnotationInfo>?): Unit

@CCall("knifunptr_glibjson2727_g_dbus_node_info_get_type")
external fun g_dbus_node_info_get_type(): GType

@CCall("knifunptr_glibjson2728_g_dbus_interface_info_get_type")
external fun g_dbus_interface_info_get_type(): GType

@CCall("knifunptr_glibjson2729_g_dbus_method_info_get_type")
external fun g_dbus_method_info_get_type(): GType

@CCall("knifunptr_glibjson2730_g_dbus_signal_info_get_type")
external fun g_dbus_signal_info_get_type(): GType

@CCall("knifunptr_glibjson2731_g_dbus_property_info_get_type")
external fun g_dbus_property_info_get_type(): GType

@CCall("knifunptr_glibjson2732_g_dbus_arg_info_get_type")
external fun g_dbus_arg_info_get_type(): GType

@CCall("knifunptr_glibjson2733_g_dbus_annotation_info_get_type")
external fun g_dbus_annotation_info_get_type(): GType

@CCall("knifunptr_glibjson2734_g_dbus_message_get_type")
external fun g_dbus_message_get_type(): GType

@CCall("knifunptr_glibjson2735_g_dbus_message_new")
external fun g_dbus_message_new(): CPointer<GDBusMessage>?

@CCall("knifunptr_glibjson2736_g_dbus_message_new_signal")
external fun g_dbus_message_new_signal(@CCall.CString path: String?, @CCall.CString interface_: String?, @CCall.CString signal: String?): CPointer<GDBusMessage>?

@CCall("knifunptr_glibjson2737_g_dbus_message_new_method_call")
external fun g_dbus_message_new_method_call(@CCall.CString name: String?, @CCall.CString path: String?, @CCall.CString interface_: String?, @CCall.CString method: String?): CPointer<GDBusMessage>?

@CCall("knifunptr_glibjson2738_g_dbus_message_new_method_reply")
external fun g_dbus_message_new_method_reply(method_call_message: CValuesRef<GDBusMessage>?): CPointer<GDBusMessage>?

@CCall("knifunptr_glibjson2739_g_dbus_message_new_method_error")
external fun g_dbus_message_new_method_error(method_call_message: CValuesRef<GDBusMessage>?, @CCall.CString error_name: String?, @CCall.CString error_message_format: String?, vararg variadicArguments: Any?): CPointer<GDBusMessage>?

@CCall("knifunptr_glibjson2740_g_dbus_message_new_method_error_valist")
external fun g_dbus_message_new_method_error_valist(method_call_message: CValuesRef<GDBusMessage>?, @CCall.CString error_name: String?, @CCall.CString error_message_format: String?, var_args: va_list?): CPointer<GDBusMessage>?

@CCall("knifunptr_glibjson2741_g_dbus_message_new_method_error_literal")
external fun g_dbus_message_new_method_error_literal(method_call_message: CValuesRef<GDBusMessage>?, @CCall.CString error_name: String?, @CCall.CString error_message: String?): CPointer<GDBusMessage>?

@CCall("knifunptr_glibjson2742_g_dbus_message_print")
external fun g_dbus_message_print(message: CValuesRef<GDBusMessage>?, indent: guint): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2743_g_dbus_message_get_locked")
external fun g_dbus_message_get_locked(message: CValuesRef<GDBusMessage>?): gboolean

@CCall("knifunptr_glibjson2744_g_dbus_message_lock")
external fun g_dbus_message_lock(message: CValuesRef<GDBusMessage>?): Unit

@CCall("knifunptr_glibjson2745_g_dbus_message_copy")
external fun g_dbus_message_copy(message: CValuesRef<GDBusMessage>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusMessage>?

@CCall("knifunptr_glibjson2746_g_dbus_message_get_byte_order")
external fun g_dbus_message_get_byte_order(message: CValuesRef<GDBusMessage>?): GDBusMessageByteOrder

@CCall("knifunptr_glibjson2747_g_dbus_message_set_byte_order")
external fun g_dbus_message_set_byte_order(message: CValuesRef<GDBusMessage>?, byte_order: GDBusMessageByteOrder): Unit

@CCall("knifunptr_glibjson2748_g_dbus_message_get_message_type")
external fun g_dbus_message_get_message_type(message: CValuesRef<GDBusMessage>?): GDBusMessageType

@CCall("knifunptr_glibjson2749_g_dbus_message_set_message_type")
external fun g_dbus_message_set_message_type(message: CValuesRef<GDBusMessage>?, type: GDBusMessageType): Unit

@CCall("knifunptr_glibjson2750_g_dbus_message_get_flags")
external fun g_dbus_message_get_flags(message: CValuesRef<GDBusMessage>?): GDBusMessageFlags

@CCall("knifunptr_glibjson2751_g_dbus_message_set_flags")
external fun g_dbus_message_set_flags(message: CValuesRef<GDBusMessage>?, flags: GDBusMessageFlags): Unit

@CCall("knifunptr_glibjson2752_g_dbus_message_get_serial")
external fun g_dbus_message_get_serial(message: CValuesRef<GDBusMessage>?): guint32

@CCall("knifunptr_glibjson2753_g_dbus_message_set_serial")
external fun g_dbus_message_set_serial(message: CValuesRef<GDBusMessage>?, serial: guint32): Unit

@CCall("knifunptr_glibjson2754_g_dbus_message_get_header")
external fun g_dbus_message_get_header(message: CValuesRef<GDBusMessage>?, header_field: GDBusMessageHeaderField): CPointer<GVariant>?

@CCall("knifunptr_glibjson2755_g_dbus_message_set_header")
external fun g_dbus_message_set_header(message: CValuesRef<GDBusMessage>?, header_field: GDBusMessageHeaderField, value: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_glibjson2756_g_dbus_message_get_header_fields")
external fun g_dbus_message_get_header_fields(message: CValuesRef<GDBusMessage>?): CPointer<gucharVar>?

@CCall("knifunptr_glibjson2757_g_dbus_message_get_body")
external fun g_dbus_message_get_body(message: CValuesRef<GDBusMessage>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson2758_g_dbus_message_set_body")
external fun g_dbus_message_set_body(message: CValuesRef<GDBusMessage>?, body: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_glibjson2759_g_dbus_message_get_unix_fd_list")
external fun g_dbus_message_get_unix_fd_list(message: CValuesRef<GDBusMessage>?): CPointer<GUnixFDList>?

@CCall("knifunptr_glibjson2760_g_dbus_message_set_unix_fd_list")
external fun g_dbus_message_set_unix_fd_list(message: CValuesRef<GDBusMessage>?, fd_list: CValuesRef<GUnixFDList>?): Unit

@CCall("knifunptr_glibjson2761_g_dbus_message_get_reply_serial")
external fun g_dbus_message_get_reply_serial(message: CValuesRef<GDBusMessage>?): guint32

@CCall("knifunptr_glibjson2762_g_dbus_message_set_reply_serial")
external fun g_dbus_message_set_reply_serial(message: CValuesRef<GDBusMessage>?, value: guint32): Unit

@CCall("knifunptr_glibjson2763_g_dbus_message_get_interface")
external fun g_dbus_message_get_interface(message: CValuesRef<GDBusMessage>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2764_g_dbus_message_set_interface")
external fun g_dbus_message_set_interface(message: CValuesRef<GDBusMessage>?, @CCall.CString value: String?): Unit

@CCall("knifunptr_glibjson2765_g_dbus_message_get_member")
external fun g_dbus_message_get_member(message: CValuesRef<GDBusMessage>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2766_g_dbus_message_set_member")
external fun g_dbus_message_set_member(message: CValuesRef<GDBusMessage>?, @CCall.CString value: String?): Unit

@CCall("knifunptr_glibjson2767_g_dbus_message_get_path")
external fun g_dbus_message_get_path(message: CValuesRef<GDBusMessage>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2768_g_dbus_message_set_path")
external fun g_dbus_message_set_path(message: CValuesRef<GDBusMessage>?, @CCall.CString value: String?): Unit

@CCall("knifunptr_glibjson2769_g_dbus_message_get_sender")
external fun g_dbus_message_get_sender(message: CValuesRef<GDBusMessage>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2770_g_dbus_message_set_sender")
external fun g_dbus_message_set_sender(message: CValuesRef<GDBusMessage>?, @CCall.CString value: String?): Unit

@CCall("knifunptr_glibjson2771_g_dbus_message_get_destination")
external fun g_dbus_message_get_destination(message: CValuesRef<GDBusMessage>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2772_g_dbus_message_set_destination")
external fun g_dbus_message_set_destination(message: CValuesRef<GDBusMessage>?, @CCall.CString value: String?): Unit

@CCall("knifunptr_glibjson2773_g_dbus_message_get_error_name")
external fun g_dbus_message_get_error_name(message: CValuesRef<GDBusMessage>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2774_g_dbus_message_set_error_name")
external fun g_dbus_message_set_error_name(message: CValuesRef<GDBusMessage>?, @CCall.CString value: String?): Unit

@CCall("knifunptr_glibjson2775_g_dbus_message_get_signature")
external fun g_dbus_message_get_signature(message: CValuesRef<GDBusMessage>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2776_g_dbus_message_set_signature")
external fun g_dbus_message_set_signature(message: CValuesRef<GDBusMessage>?, @CCall.CString value: String?): Unit

@CCall("knifunptr_glibjson2777_g_dbus_message_get_num_unix_fds")
external fun g_dbus_message_get_num_unix_fds(message: CValuesRef<GDBusMessage>?): guint32

@CCall("knifunptr_glibjson2778_g_dbus_message_set_num_unix_fds")
external fun g_dbus_message_set_num_unix_fds(message: CValuesRef<GDBusMessage>?, value: guint32): Unit

@CCall("knifunptr_glibjson2779_g_dbus_message_get_arg0")
external fun g_dbus_message_get_arg0(message: CValuesRef<GDBusMessage>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2780_g_dbus_message_new_from_blob")
external fun g_dbus_message_new_from_blob(blob: CValuesRef<gucharVar>?, blob_len: gsize, capabilities: GDBusCapabilityFlags, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusMessage>?

@CCall("knifunptr_glibjson2781_g_dbus_message_bytes_needed")
external fun g_dbus_message_bytes_needed(blob: CValuesRef<gucharVar>?, blob_len: gsize, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_glibjson2782_g_dbus_message_to_blob")
external fun g_dbus_message_to_blob(message: CValuesRef<GDBusMessage>?, out_size: CValuesRef<gsizeVar>?, capabilities: GDBusCapabilityFlags, error: CValuesRef<CPointerVar<GError>>?): CPointer<gucharVar>?

@CCall("knifunptr_glibjson2783_g_dbus_message_to_gerror")
external fun g_dbus_message_to_gerror(message: CValuesRef<GDBusMessage>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2784_g_dbus_method_invocation_get_type")
external fun g_dbus_method_invocation_get_type(): GType

@CCall("knifunptr_glibjson2785_g_dbus_method_invocation_get_sender")
external fun g_dbus_method_invocation_get_sender(invocation: CValuesRef<GDBusMethodInvocation>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2786_g_dbus_method_invocation_get_object_path")
external fun g_dbus_method_invocation_get_object_path(invocation: CValuesRef<GDBusMethodInvocation>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2787_g_dbus_method_invocation_get_interface_name")
external fun g_dbus_method_invocation_get_interface_name(invocation: CValuesRef<GDBusMethodInvocation>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2788_g_dbus_method_invocation_get_method_name")
external fun g_dbus_method_invocation_get_method_name(invocation: CValuesRef<GDBusMethodInvocation>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2789_g_dbus_method_invocation_get_method_info")
external fun g_dbus_method_invocation_get_method_info(invocation: CValuesRef<GDBusMethodInvocation>?): CPointer<GDBusMethodInfo>?

@CCall("knifunptr_glibjson2790_g_dbus_method_invocation_get_property_info")
external fun g_dbus_method_invocation_get_property_info(invocation: CValuesRef<GDBusMethodInvocation>?): CPointer<GDBusPropertyInfo>?

@CCall("knifunptr_glibjson2791_g_dbus_method_invocation_get_connection")
external fun g_dbus_method_invocation_get_connection(invocation: CValuesRef<GDBusMethodInvocation>?): CPointer<GDBusConnection>?

@CCall("knifunptr_glibjson2792_g_dbus_method_invocation_get_message")
external fun g_dbus_method_invocation_get_message(invocation: CValuesRef<GDBusMethodInvocation>?): CPointer<GDBusMessage>?

@CCall("knifunptr_glibjson2793_g_dbus_method_invocation_get_parameters")
external fun g_dbus_method_invocation_get_parameters(invocation: CValuesRef<GDBusMethodInvocation>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson2794_g_dbus_method_invocation_get_user_data")
external fun g_dbus_method_invocation_get_user_data(invocation: CValuesRef<GDBusMethodInvocation>?): gpointer?

@CCall("knifunptr_glibjson2795_g_dbus_method_invocation_return_value")
external fun g_dbus_method_invocation_return_value(invocation: CValuesRef<GDBusMethodInvocation>?, parameters: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_glibjson2796_g_dbus_method_invocation_return_value_with_unix_fd_list")
external fun g_dbus_method_invocation_return_value_with_unix_fd_list(invocation: CValuesRef<GDBusMethodInvocation>?, parameters: CValuesRef<GVariant>?, fd_list: CValuesRef<GUnixFDList>?): Unit

@CCall("knifunptr_glibjson2797_g_dbus_method_invocation_return_error")
external fun g_dbus_method_invocation_return_error(invocation: CValuesRef<GDBusMethodInvocation>?, domain: GQuark, code: gint, @CCall.CString format: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson2798_g_dbus_method_invocation_return_error_valist")
external fun g_dbus_method_invocation_return_error_valist(invocation: CValuesRef<GDBusMethodInvocation>?, domain: GQuark, code: gint, @CCall.CString format: String?, var_args: va_list?): Unit

@CCall("knifunptr_glibjson2799_g_dbus_method_invocation_return_error_literal")
external fun g_dbus_method_invocation_return_error_literal(invocation: CValuesRef<GDBusMethodInvocation>?, domain: GQuark, code: gint, @CCall.CString message: String?): Unit

@CCall("knifunptr_glibjson2800_g_dbus_method_invocation_return_gerror")
external fun g_dbus_method_invocation_return_gerror(invocation: CValuesRef<GDBusMethodInvocation>?, error: CValuesRef<GError>?): Unit

@CCall("knifunptr_glibjson2801_g_dbus_method_invocation_take_error")
external fun g_dbus_method_invocation_take_error(invocation: CValuesRef<GDBusMethodInvocation>?, error: CValuesRef<GError>?): Unit

@CCall("knifunptr_glibjson2802_g_dbus_method_invocation_return_dbus_error")
external fun g_dbus_method_invocation_return_dbus_error(invocation: CValuesRef<GDBusMethodInvocation>?, @CCall.CString error_name: String?, @CCall.CString error_message: String?): Unit

@CCall("knifunptr_glibjson2803_g_bus_own_name")
external fun g_bus_own_name(bus_type: GBusType, @CCall.CString name: String?, flags: GBusNameOwnerFlags, bus_acquired_handler: GBusAcquiredCallback?, name_acquired_handler: GBusNameAcquiredCallback?, name_lost_handler: GBusNameLostCallback?, user_data: gpointer?, user_data_free_func: GDestroyNotify?): guint

@CCall("knifunptr_glibjson2804_g_bus_own_name_on_connection")
external fun g_bus_own_name_on_connection(connection: CValuesRef<GDBusConnection>?, @CCall.CString name: String?, flags: GBusNameOwnerFlags, name_acquired_handler: GBusNameAcquiredCallback?, name_lost_handler: GBusNameLostCallback?, user_data: gpointer?, user_data_free_func: GDestroyNotify?): guint

@CCall("knifunptr_glibjson2805_g_bus_own_name_with_closures")
external fun g_bus_own_name_with_closures(bus_type: GBusType, @CCall.CString name: String?, flags: GBusNameOwnerFlags, bus_acquired_closure: CValuesRef<GClosure>?, name_acquired_closure: CValuesRef<GClosure>?, name_lost_closure: CValuesRef<GClosure>?): guint

@CCall("knifunptr_glibjson2806_g_bus_own_name_on_connection_with_closures")
external fun g_bus_own_name_on_connection_with_closures(connection: CValuesRef<GDBusConnection>?, @CCall.CString name: String?, flags: GBusNameOwnerFlags, name_acquired_closure: CValuesRef<GClosure>?, name_lost_closure: CValuesRef<GClosure>?): guint

@CCall("knifunptr_glibjson2807_g_bus_unown_name")
external fun g_bus_unown_name(owner_id: guint): Unit

@CCall("knifunptr_glibjson2808_g_bus_watch_name")
external fun g_bus_watch_name(bus_type: GBusType, @CCall.CString name: String?, flags: GBusNameWatcherFlags, name_appeared_handler: GBusNameAppearedCallback?, name_vanished_handler: GBusNameVanishedCallback?, user_data: gpointer?, user_data_free_func: GDestroyNotify?): guint

@CCall("knifunptr_glibjson2809_g_bus_watch_name_on_connection")
external fun g_bus_watch_name_on_connection(connection: CValuesRef<GDBusConnection>?, @CCall.CString name: String?, flags: GBusNameWatcherFlags, name_appeared_handler: GBusNameAppearedCallback?, name_vanished_handler: GBusNameVanishedCallback?, user_data: gpointer?, user_data_free_func: GDestroyNotify?): guint

@CCall("knifunptr_glibjson2810_g_bus_watch_name_with_closures")
external fun g_bus_watch_name_with_closures(bus_type: GBusType, @CCall.CString name: String?, flags: GBusNameWatcherFlags, name_appeared_closure: CValuesRef<GClosure>?, name_vanished_closure: CValuesRef<GClosure>?): guint

@CCall("knifunptr_glibjson2811_g_bus_watch_name_on_connection_with_closures")
external fun g_bus_watch_name_on_connection_with_closures(connection: CValuesRef<GDBusConnection>?, @CCall.CString name: String?, flags: GBusNameWatcherFlags, name_appeared_closure: CValuesRef<GClosure>?, name_vanished_closure: CValuesRef<GClosure>?): guint

@CCall("knifunptr_glibjson2812_g_bus_unwatch_name")
external fun g_bus_unwatch_name(watcher_id: guint): Unit

@CCall("knifunptr_glibjson2813_g_dbus_proxy_get_type")
external fun g_dbus_proxy_get_type(): GType

@CCall("knifunptr_glibjson2814_g_dbus_proxy_new")
external fun g_dbus_proxy_new(connection: CValuesRef<GDBusConnection>?, flags: GDBusProxyFlags, info: CValuesRef<GDBusInterfaceInfo>?, @CCall.CString name: String?, @CCall.CString object_path: String?, @CCall.CString interface_name: String?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2815_g_dbus_proxy_new_finish")
external fun g_dbus_proxy_new_finish(res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusProxy>?

@CCall("knifunptr_glibjson2816_g_dbus_proxy_new_sync")
external fun g_dbus_proxy_new_sync(connection: CValuesRef<GDBusConnection>?, flags: GDBusProxyFlags, info: CValuesRef<GDBusInterfaceInfo>?, @CCall.CString name: String?, @CCall.CString object_path: String?, @CCall.CString interface_name: String?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusProxy>?

@CCall("knifunptr_glibjson2817_g_dbus_proxy_new_for_bus")
external fun g_dbus_proxy_new_for_bus(bus_type: GBusType, flags: GDBusProxyFlags, info: CValuesRef<GDBusInterfaceInfo>?, @CCall.CString name: String?, @CCall.CString object_path: String?, @CCall.CString interface_name: String?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2818_g_dbus_proxy_new_for_bus_finish")
external fun g_dbus_proxy_new_for_bus_finish(res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusProxy>?

@CCall("knifunptr_glibjson2819_g_dbus_proxy_new_for_bus_sync")
external fun g_dbus_proxy_new_for_bus_sync(bus_type: GBusType, flags: GDBusProxyFlags, info: CValuesRef<GDBusInterfaceInfo>?, @CCall.CString name: String?, @CCall.CString object_path: String?, @CCall.CString interface_name: String?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusProxy>?

@CCall("knifunptr_glibjson2820_g_dbus_proxy_get_connection")
external fun g_dbus_proxy_get_connection(proxy: CValuesRef<GDBusProxy>?): CPointer<GDBusConnection>?

@CCall("knifunptr_glibjson2821_g_dbus_proxy_get_flags")
external fun g_dbus_proxy_get_flags(proxy: CValuesRef<GDBusProxy>?): GDBusProxyFlags

@CCall("knifunptr_glibjson2822_g_dbus_proxy_get_name")
external fun g_dbus_proxy_get_name(proxy: CValuesRef<GDBusProxy>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2823_g_dbus_proxy_get_name_owner")
external fun g_dbus_proxy_get_name_owner(proxy: CValuesRef<GDBusProxy>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2824_g_dbus_proxy_get_object_path")
external fun g_dbus_proxy_get_object_path(proxy: CValuesRef<GDBusProxy>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2825_g_dbus_proxy_get_interface_name")
external fun g_dbus_proxy_get_interface_name(proxy: CValuesRef<GDBusProxy>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2826_g_dbus_proxy_get_default_timeout")
external fun g_dbus_proxy_get_default_timeout(proxy: CValuesRef<GDBusProxy>?): gint

@CCall("knifunptr_glibjson2827_g_dbus_proxy_set_default_timeout")
external fun g_dbus_proxy_set_default_timeout(proxy: CValuesRef<GDBusProxy>?, timeout_msec: gint): Unit

@CCall("knifunptr_glibjson2828_g_dbus_proxy_get_interface_info")
external fun g_dbus_proxy_get_interface_info(proxy: CValuesRef<GDBusProxy>?): CPointer<GDBusInterfaceInfo>?

@CCall("knifunptr_glibjson2829_g_dbus_proxy_set_interface_info")
external fun g_dbus_proxy_set_interface_info(proxy: CValuesRef<GDBusProxy>?, info: CValuesRef<GDBusInterfaceInfo>?): Unit

@CCall("knifunptr_glibjson2830_g_dbus_proxy_get_cached_property")
external fun g_dbus_proxy_get_cached_property(proxy: CValuesRef<GDBusProxy>?, @CCall.CString property_name: String?): CPointer<GVariant>?

@CCall("knifunptr_glibjson2831_g_dbus_proxy_set_cached_property")
external fun g_dbus_proxy_set_cached_property(proxy: CValuesRef<GDBusProxy>?, @CCall.CString property_name: String?, value: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_glibjson2832_g_dbus_proxy_get_cached_property_names")
external fun g_dbus_proxy_get_cached_property_names(proxy: CValuesRef<GDBusProxy>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson2833_g_dbus_proxy_call")
external fun g_dbus_proxy_call(proxy: CValuesRef<GDBusProxy>?, @CCall.CString method_name: String?, parameters: CValuesRef<GVariant>?, flags: GDBusCallFlags, timeout_msec: gint, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2834_g_dbus_proxy_call_finish")
external fun g_dbus_proxy_call_finish(proxy: CValuesRef<GDBusProxy>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson2835_g_dbus_proxy_call_sync")
external fun g_dbus_proxy_call_sync(proxy: CValuesRef<GDBusProxy>?, @CCall.CString method_name: String?, parameters: CValuesRef<GVariant>?, flags: GDBusCallFlags, timeout_msec: gint, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson2836_g_dbus_proxy_call_with_unix_fd_list")
external fun g_dbus_proxy_call_with_unix_fd_list(proxy: CValuesRef<GDBusProxy>?, @CCall.CString method_name: String?, parameters: CValuesRef<GVariant>?, flags: GDBusCallFlags, timeout_msec: gint, fd_list: CValuesRef<GUnixFDList>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2837_g_dbus_proxy_call_with_unix_fd_list_finish")
external fun g_dbus_proxy_call_with_unix_fd_list_finish(proxy: CValuesRef<GDBusProxy>?, out_fd_list: CValuesRef<CPointerVar<GUnixFDList>>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson2838_g_dbus_proxy_call_with_unix_fd_list_sync")
external fun g_dbus_proxy_call_with_unix_fd_list_sync(proxy: CValuesRef<GDBusProxy>?, @CCall.CString method_name: String?, parameters: CValuesRef<GVariant>?, flags: GDBusCallFlags, timeout_msec: gint, fd_list: CValuesRef<GUnixFDList>?, out_fd_list: CValuesRef<CPointerVar<GUnixFDList>>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson2839_g_dbus_server_get_type")
external fun g_dbus_server_get_type(): GType

@CCall("knifunptr_glibjson2840_g_dbus_server_new_sync")
external fun g_dbus_server_new_sync(@CCall.CString address: String?, flags: GDBusServerFlags, @CCall.CString guid: String?, observer: CValuesRef<GDBusAuthObserver>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusServer>?

@CCall("knifunptr_glibjson2841_g_dbus_server_get_client_address")
external fun g_dbus_server_get_client_address(server: CValuesRef<GDBusServer>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2842_g_dbus_server_get_guid")
external fun g_dbus_server_get_guid(server: CValuesRef<GDBusServer>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2843_g_dbus_server_get_flags")
external fun g_dbus_server_get_flags(server: CValuesRef<GDBusServer>?): GDBusServerFlags

@CCall("knifunptr_glibjson2844_g_dbus_server_start")
external fun g_dbus_server_start(server: CValuesRef<GDBusServer>?): Unit

@CCall("knifunptr_glibjson2845_g_dbus_server_stop")
external fun g_dbus_server_stop(server: CValuesRef<GDBusServer>?): Unit

@CCall("knifunptr_glibjson2846_g_dbus_server_is_active")
external fun g_dbus_server_is_active(server: CValuesRef<GDBusServer>?): gboolean

@CCall("knifunptr_glibjson2847_g_dbus_is_guid")
external fun g_dbus_is_guid(@CCall.CString string: String?): gboolean

@CCall("knifunptr_glibjson2848_g_dbus_generate_guid")
external fun g_dbus_generate_guid(): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2849_g_dbus_is_name")
external fun g_dbus_is_name(@CCall.CString string: String?): gboolean

@CCall("knifunptr_glibjson2850_g_dbus_is_unique_name")
external fun g_dbus_is_unique_name(@CCall.CString string: String?): gboolean

@CCall("knifunptr_glibjson2851_g_dbus_is_member_name")
external fun g_dbus_is_member_name(@CCall.CString string: String?): gboolean

@CCall("knifunptr_glibjson2852_g_dbus_is_interface_name")
external fun g_dbus_is_interface_name(@CCall.CString string: String?): gboolean

@CCall("knifunptr_glibjson2853_g_dbus_gvariant_to_gvalue")
external fun g_dbus_gvariant_to_gvalue(value: CValuesRef<GVariant>?, out_gvalue: CValuesRef<GValue>?): Unit

@CCall("knifunptr_glibjson2854_g_dbus_gvalue_to_gvariant")
external fun g_dbus_gvalue_to_gvariant(gvalue: CValuesRef<GValue>?, type: CValuesRef<GVariantType>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson2855_g_drive_get_type")
external fun g_drive_get_type(): GType

@CCall("knifunptr_glibjson2856_g_drive_get_name")
external fun g_drive_get_name(drive: CValuesRef<GDrive>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson2857_g_drive_get_icon")
external fun g_drive_get_icon(drive: CValuesRef<GDrive>?): CPointer<GIcon>?

@CCall("knifunptr_glibjson2858_g_drive_get_symbolic_icon")
external fun g_drive_get_symbolic_icon(drive: CValuesRef<GDrive>?): CPointer<GIcon>?

@CCall("knifunptr_glibjson2859_g_drive_has_volumes")
external fun g_drive_has_volumes(drive: CValuesRef<GDrive>?): gboolean

@CCall("knifunptr_glibjson2860_g_drive_get_volumes")
external fun g_drive_get_volumes(drive: CValuesRef<GDrive>?): CPointer<GList>?

@CCall("knifunptr_glibjson2861_g_drive_is_removable")
external fun g_drive_is_removable(drive: CValuesRef<GDrive>?): gboolean

@CCall("knifunptr_glibjson2862_g_drive_is_media_removable")
external fun g_drive_is_media_removable(drive: CValuesRef<GDrive>?): gboolean

@CCall("knifunptr_glibjson2863_g_drive_has_media")
external fun g_drive_has_media(drive: CValuesRef<GDrive>?): gboolean

@CCall("knifunptr_glibjson2864_g_drive_is_media_check_automatic")
external fun g_drive_is_media_check_automatic(drive: CValuesRef<GDrive>?): gboolean

@CCall("knifunptr_glibjson2865_g_drive_can_poll_for_media")
external fun g_drive_can_poll_for_media(drive: CValuesRef<GDrive>?): gboolean

@CCall("knifunptr_glibjson2866_g_drive_can_eject")
external fun g_drive_can_eject(drive: CValuesRef<GDrive>?): gboolean

@CCall("knifunptr_glibjson2867_g_drive_eject")
external fun g_drive_eject(drive: CValuesRef<GDrive>?, flags: GMountUnmountFlags, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2868_g_drive_eject_finish")
external fun g_drive_eject_finish(drive: CValuesRef<GDrive>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2869_g_drive_poll_for_media")
external fun g_drive_poll_for_media(drive: CValuesRef<GDrive>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2870_g_drive_poll_for_media_finish")
external fun g_drive_poll_for_media_finish(drive: CValuesRef<GDrive>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2871_g_drive_get_identifier")
external fun g_drive_get_identifier(drive: CValuesRef<GDrive>?, @CCall.CString kind: String?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson2872_g_drive_enumerate_identifiers")
external fun g_drive_enumerate_identifiers(drive: CValuesRef<GDrive>?): CPointer<CPointerVar<ByteVar>>?

@CCall("knifunptr_glibjson2873_g_drive_get_start_stop_type")
external fun g_drive_get_start_stop_type(drive: CValuesRef<GDrive>?): GDriveStartStopType

@CCall("knifunptr_glibjson2874_g_drive_can_start")
external fun g_drive_can_start(drive: CValuesRef<GDrive>?): gboolean

@CCall("knifunptr_glibjson2875_g_drive_can_start_degraded")
external fun g_drive_can_start_degraded(drive: CValuesRef<GDrive>?): gboolean

@CCall("knifunptr_glibjson2876_g_drive_start")
external fun g_drive_start(drive: CValuesRef<GDrive>?, flags: GDriveStartFlags, mount_operation: CValuesRef<GMountOperation>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2877_g_drive_start_finish")
external fun g_drive_start_finish(drive: CValuesRef<GDrive>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2878_g_drive_can_stop")
external fun g_drive_can_stop(drive: CValuesRef<GDrive>?): gboolean

@CCall("knifunptr_glibjson2879_g_drive_stop")
external fun g_drive_stop(drive: CValuesRef<GDrive>?, flags: GMountUnmountFlags, mount_operation: CValuesRef<GMountOperation>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2880_g_drive_stop_finish")
external fun g_drive_stop_finish(drive: CValuesRef<GDrive>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2881_g_drive_eject_with_operation")
external fun g_drive_eject_with_operation(drive: CValuesRef<GDrive>?, flags: GMountUnmountFlags, mount_operation: CValuesRef<GMountOperation>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2882_g_drive_eject_with_operation_finish")
external fun g_drive_eject_with_operation_finish(drive: CValuesRef<GDrive>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2883_g_drive_get_sort_key")
external fun g_drive_get_sort_key(drive: CValuesRef<GDrive>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2884_g_dtls_connection_get_type")
external fun g_dtls_connection_get_type(): GType

@CCall("knifunptr_glibjson2885_g_dtls_connection_set_database")
external fun g_dtls_connection_set_database(conn: CValuesRef<GDtlsConnection>?, database: CValuesRef<GTlsDatabase>?): Unit

@CCall("knifunptr_glibjson2886_g_dtls_connection_get_database")
external fun g_dtls_connection_get_database(conn: CValuesRef<GDtlsConnection>?): CPointer<GTlsDatabase>?

@CCall("knifunptr_glibjson2887_g_dtls_connection_set_certificate")
external fun g_dtls_connection_set_certificate(conn: CValuesRef<GDtlsConnection>?, certificate: CValuesRef<GTlsCertificate>?): Unit

@CCall("knifunptr_glibjson2888_g_dtls_connection_get_certificate")
external fun g_dtls_connection_get_certificate(conn: CValuesRef<GDtlsConnection>?): CPointer<GTlsCertificate>?

@CCall("knifunptr_glibjson2889_g_dtls_connection_set_interaction")
external fun g_dtls_connection_set_interaction(conn: CValuesRef<GDtlsConnection>?, interaction: CValuesRef<GTlsInteraction>?): Unit

@CCall("knifunptr_glibjson2890_g_dtls_connection_get_interaction")
external fun g_dtls_connection_get_interaction(conn: CValuesRef<GDtlsConnection>?): CPointer<GTlsInteraction>?

@CCall("knifunptr_glibjson2891_g_dtls_connection_get_peer_certificate")
external fun g_dtls_connection_get_peer_certificate(conn: CValuesRef<GDtlsConnection>?): CPointer<GTlsCertificate>?

@CCall("knifunptr_glibjson2892_g_dtls_connection_get_peer_certificate_errors")
external fun g_dtls_connection_get_peer_certificate_errors(conn: CValuesRef<GDtlsConnection>?): GTlsCertificateFlags

@CCall("knifunptr_glibjson2893_g_dtls_connection_set_require_close_notify")
external fun g_dtls_connection_set_require_close_notify(conn: CValuesRef<GDtlsConnection>?, require_close_notify: gboolean): Unit

@CCall("knifunptr_glibjson2894_g_dtls_connection_get_require_close_notify")
external fun g_dtls_connection_get_require_close_notify(conn: CValuesRef<GDtlsConnection>?): gboolean

@CCall("knifunptr_glibjson2895_g_dtls_connection_set_rehandshake_mode")
external fun g_dtls_connection_set_rehandshake_mode(conn: CValuesRef<GDtlsConnection>?, mode: GTlsRehandshakeMode): Unit

@CCall("knifunptr_glibjson2896_g_dtls_connection_get_rehandshake_mode")
external fun g_dtls_connection_get_rehandshake_mode(conn: CValuesRef<GDtlsConnection>?): GTlsRehandshakeMode

@CCall("knifunptr_glibjson2897_g_dtls_connection_handshake")
external fun g_dtls_connection_handshake(conn: CValuesRef<GDtlsConnection>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2898_g_dtls_connection_handshake_async")
external fun g_dtls_connection_handshake_async(conn: CValuesRef<GDtlsConnection>?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2899_g_dtls_connection_handshake_finish")
external fun g_dtls_connection_handshake_finish(conn: CValuesRef<GDtlsConnection>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2900_g_dtls_connection_shutdown")
external fun g_dtls_connection_shutdown(conn: CValuesRef<GDtlsConnection>?, shutdown_read: gboolean, shutdown_write: gboolean, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2901_g_dtls_connection_shutdown_async")
external fun g_dtls_connection_shutdown_async(conn: CValuesRef<GDtlsConnection>?, shutdown_read: gboolean, shutdown_write: gboolean, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2902_g_dtls_connection_shutdown_finish")
external fun g_dtls_connection_shutdown_finish(conn: CValuesRef<GDtlsConnection>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2903_g_dtls_connection_close")
external fun g_dtls_connection_close(conn: CValuesRef<GDtlsConnection>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2904_g_dtls_connection_close_async")
external fun g_dtls_connection_close_async(conn: CValuesRef<GDtlsConnection>?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2905_g_dtls_connection_close_finish")
external fun g_dtls_connection_close_finish(conn: CValuesRef<GDtlsConnection>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2906_g_dtls_connection_emit_accept_certificate")
external fun g_dtls_connection_emit_accept_certificate(conn: CValuesRef<GDtlsConnection>?, peer_cert: CValuesRef<GTlsCertificate>?, errors: GTlsCertificateFlags): gboolean

@CCall("knifunptr_glibjson2907_g_dtls_client_connection_get_type")
external fun g_dtls_client_connection_get_type(): GType

@CCall("knifunptr_glibjson2908_g_dtls_client_connection_new")
external fun g_dtls_client_connection_new(base_socket: CValuesRef<GDatagramBased>?, server_identity: CValuesRef<GSocketConnectable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDatagramBased>?

@CCall("knifunptr_glibjson2909_g_dtls_client_connection_get_validation_flags")
external fun g_dtls_client_connection_get_validation_flags(conn: CValuesRef<GDtlsClientConnection>?): GTlsCertificateFlags

@CCall("knifunptr_glibjson2910_g_dtls_client_connection_set_validation_flags")
external fun g_dtls_client_connection_set_validation_flags(conn: CValuesRef<GDtlsClientConnection>?, flags: GTlsCertificateFlags): Unit

@CCall("knifunptr_glibjson2911_g_dtls_client_connection_get_server_identity")
external fun g_dtls_client_connection_get_server_identity(conn: CValuesRef<GDtlsClientConnection>?): CPointer<GSocketConnectable>?

@CCall("knifunptr_glibjson2912_g_dtls_client_connection_set_server_identity")
external fun g_dtls_client_connection_set_server_identity(conn: CValuesRef<GDtlsClientConnection>?, identity: CValuesRef<GSocketConnectable>?): Unit

@CCall("knifunptr_glibjson2913_g_dtls_client_connection_get_accepted_cas")
external fun g_dtls_client_connection_get_accepted_cas(conn: CValuesRef<GDtlsClientConnection>?): CPointer<GList>?

@CCall("knifunptr_glibjson2914_g_dtls_server_connection_get_type")
external fun g_dtls_server_connection_get_type(): GType

@CCall("knifunptr_glibjson2915_g_dtls_server_connection_new")
external fun g_dtls_server_connection_new(base_socket: CValuesRef<GDatagramBased>?, certificate: CValuesRef<GTlsCertificate>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDatagramBased>?

@CCall("knifunptr_glibjson2916_g_icon_get_type")
external fun g_icon_get_type(): GType

@CCall("knifunptr_glibjson2917_g_icon_hash")
external fun g_icon_hash(icon: gconstpointer?): guint

@CCall("knifunptr_glibjson2918_g_icon_equal")
external fun g_icon_equal(icon1: CValuesRef<GIcon>?, icon2: CValuesRef<GIcon>?): gboolean

@CCall("knifunptr_glibjson2919_g_icon_to_string")
external fun g_icon_to_string(icon: CValuesRef<GIcon>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson2920_g_icon_new_for_string")
external fun g_icon_new_for_string(@CCall.CString str: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GIcon>?

@CCall("knifunptr_glibjson2921_g_icon_serialize")
external fun g_icon_serialize(icon: CValuesRef<GIcon>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson2922_g_icon_deserialize")
external fun g_icon_deserialize(value: CValuesRef<GVariant>?): CPointer<GIcon>?

@CCall("knifunptr_glibjson2923_g_emblem_get_type")
external fun g_emblem_get_type(): GType

@CCall("knifunptr_glibjson2924_g_emblem_new")
external fun g_emblem_new(icon: CValuesRef<GIcon>?): CPointer<GEmblem>?

@CCall("knifunptr_glibjson2925_g_emblem_new_with_origin")
external fun g_emblem_new_with_origin(icon: CValuesRef<GIcon>?, origin: GEmblemOrigin): CPointer<GEmblem>?

@CCall("knifunptr_glibjson2926_g_emblem_get_icon")
external fun g_emblem_get_icon(emblem: CValuesRef<GEmblem>?): CPointer<GIcon>?

@CCall("knifunptr_glibjson2927_g_emblem_get_origin")
external fun g_emblem_get_origin(emblem: CValuesRef<GEmblem>?): GEmblemOrigin

@CCall("knifunptr_glibjson2928_g_emblemed_icon_get_type")
external fun g_emblemed_icon_get_type(): GType

@CCall("knifunptr_glibjson2929_g_emblemed_icon_new")
external fun g_emblemed_icon_new(icon: CValuesRef<GIcon>?, emblem: CValuesRef<GEmblem>?): CPointer<GIcon>?

@CCall("knifunptr_glibjson2930_g_emblemed_icon_get_icon")
external fun g_emblemed_icon_get_icon(emblemed: CValuesRef<GEmblemedIcon>?): CPointer<GIcon>?

@CCall("knifunptr_glibjson2931_g_emblemed_icon_get_emblems")
external fun g_emblemed_icon_get_emblems(emblemed: CValuesRef<GEmblemedIcon>?): CPointer<GList>?

@CCall("knifunptr_glibjson2932_g_emblemed_icon_add_emblem")
external fun g_emblemed_icon_add_emblem(emblemed: CValuesRef<GEmblemedIcon>?, emblem: CValuesRef<GEmblem>?): Unit

@CCall("knifunptr_glibjson2933_g_emblemed_icon_clear_emblems")
external fun g_emblemed_icon_clear_emblems(emblemed: CValuesRef<GEmblemedIcon>?): Unit

@CCall("knifunptr_glibjson2934_g_file_attribute_info_list_get_type")
external fun g_file_attribute_info_list_get_type(): GType

@CCall("knifunptr_glibjson2935_g_file_attribute_info_list_new")
external fun g_file_attribute_info_list_new(): CPointer<GFileAttributeInfoList>?

@CCall("knifunptr_glibjson2936_g_file_attribute_info_list_ref")
external fun g_file_attribute_info_list_ref(list: CValuesRef<GFileAttributeInfoList>?): CPointer<GFileAttributeInfoList>?

@CCall("knifunptr_glibjson2937_g_file_attribute_info_list_unref")
external fun g_file_attribute_info_list_unref(list: CValuesRef<GFileAttributeInfoList>?): Unit

@CCall("knifunptr_glibjson2938_g_file_attribute_info_list_dup")
external fun g_file_attribute_info_list_dup(list: CValuesRef<GFileAttributeInfoList>?): CPointer<GFileAttributeInfoList>?

@CCall("knifunptr_glibjson2939_g_file_attribute_info_list_lookup")
external fun g_file_attribute_info_list_lookup(list: CValuesRef<GFileAttributeInfoList>?, @CCall.CString name: String?): CPointer<GFileAttributeInfo>?

@CCall("knifunptr_glibjson2940_g_file_attribute_info_list_add")
external fun g_file_attribute_info_list_add(list: CValuesRef<GFileAttributeInfoList>?, @CCall.CString name: String?, type: GFileAttributeType, flags: GFileAttributeInfoFlags): Unit

@CCall("knifunptr_glibjson2941_g_file_enumerator_get_type")
external fun g_file_enumerator_get_type(): GType

@CCall("knifunptr_glibjson2942_g_file_enumerator_next_file")
external fun g_file_enumerator_next_file(enumerator: CValuesRef<GFileEnumerator>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileInfo>?

@CCall("knifunptr_glibjson2943_g_file_enumerator_close")
external fun g_file_enumerator_close(enumerator: CValuesRef<GFileEnumerator>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2944_g_file_enumerator_next_files_async")
external fun g_file_enumerator_next_files_async(enumerator: CValuesRef<GFileEnumerator>?, num_files: Int, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2945_g_file_enumerator_next_files_finish")
external fun g_file_enumerator_next_files_finish(enumerator: CValuesRef<GFileEnumerator>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GList>?

@CCall("knifunptr_glibjson2946_g_file_enumerator_close_async")
external fun g_file_enumerator_close_async(enumerator: CValuesRef<GFileEnumerator>?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2947_g_file_enumerator_close_finish")
external fun g_file_enumerator_close_finish(enumerator: CValuesRef<GFileEnumerator>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2948_g_file_enumerator_is_closed")
external fun g_file_enumerator_is_closed(enumerator: CValuesRef<GFileEnumerator>?): gboolean

@CCall("knifunptr_glibjson2949_g_file_enumerator_has_pending")
external fun g_file_enumerator_has_pending(enumerator: CValuesRef<GFileEnumerator>?): gboolean

@CCall("knifunptr_glibjson2950_g_file_enumerator_set_pending")
external fun g_file_enumerator_set_pending(enumerator: CValuesRef<GFileEnumerator>?, pending: gboolean): Unit

@CCall("knifunptr_glibjson2951_g_file_enumerator_get_container")
external fun g_file_enumerator_get_container(enumerator: CValuesRef<GFileEnumerator>?): CPointer<GFile>?

@CCall("knifunptr_glibjson2952_g_file_enumerator_get_child")
external fun g_file_enumerator_get_child(enumerator: CValuesRef<GFileEnumerator>?, info: CValuesRef<GFileInfo>?): CPointer<GFile>?

@CCall("knifunptr_glibjson2953_g_file_enumerator_iterate")
external fun g_file_enumerator_iterate(direnum: CValuesRef<GFileEnumerator>?, out_info: CValuesRef<CPointerVar<GFileInfo>>?, out_child: CValuesRef<CPointerVar<GFile>>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson2954_g_file_get_type")
external fun g_file_get_type(): GType

@CCall("knifunptr_glibjson2955_g_file_new_for_path")
external fun g_file_new_for_path(@CCall.CString path: String?): CPointer<GFile>?

@CCall("knifunptr_glibjson2956_g_file_new_for_uri")
external fun g_file_new_for_uri(@CCall.CString uri: String?): CPointer<GFile>?

@CCall("knifunptr_glibjson2957_g_file_new_for_commandline_arg")
external fun g_file_new_for_commandline_arg(@CCall.CString arg: String?): CPointer<GFile>?

@CCall("knifunptr_glibjson2958_g_file_new_for_commandline_arg_and_cwd")
external fun g_file_new_for_commandline_arg_and_cwd(@CCall.CString arg: String?, @CCall.CString cwd: String?): CPointer<GFile>?

@CCall("knifunptr_glibjson2959_g_file_new_tmp")
external fun g_file_new_tmp(@CCall.CString tmpl: String?, iostream: CValuesRef<CPointerVar<GFileIOStream>>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFile>?

@CCall("knifunptr_glibjson2960_g_file_parse_name")
external fun g_file_parse_name(@CCall.CString parse_name: String?): CPointer<GFile>?

@CCall("knifunptr_glibjson2961_g_file_new_build_filename")
external fun g_file_new_build_filename(@CCall.CString first_element: String?, vararg variadicArguments: Any?): CPointer<GFile>?

@CCall("knifunptr_glibjson2962_g_file_dup")
external fun g_file_dup(file: CValuesRef<GFile>?): CPointer<GFile>?

@CCall("knifunptr_glibjson2963_g_file_hash")
external fun g_file_hash(file: gconstpointer?): guint

@CCall("knifunptr_glibjson2964_g_file_equal")
external fun g_file_equal(file1: CValuesRef<GFile>?, file2: CValuesRef<GFile>?): gboolean

@CCall("knifunptr_glibjson2965_g_file_get_basename")
external fun g_file_get_basename(file: CValuesRef<GFile>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson2966_g_file_get_path")
external fun g_file_get_path(file: CValuesRef<GFile>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson2967_g_file_peek_path")
external fun g_file_peek_path(file: CValuesRef<GFile>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson2968_g_file_get_uri")
external fun g_file_get_uri(file: CValuesRef<GFile>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson2969_g_file_get_parse_name")
external fun g_file_get_parse_name(file: CValuesRef<GFile>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson2970_g_file_get_parent")
external fun g_file_get_parent(file: CValuesRef<GFile>?): CPointer<GFile>?

@CCall("knifunptr_glibjson2971_g_file_has_parent")
external fun g_file_has_parent(file: CValuesRef<GFile>?, parent: CValuesRef<GFile>?): gboolean

@CCall("knifunptr_glibjson2972_g_file_get_child")
external fun g_file_get_child(file: CValuesRef<GFile>?, @CCall.CString name: String?): CPointer<GFile>?

@CCall("knifunptr_glibjson2973_g_file_get_child_for_display_name")
external fun g_file_get_child_for_display_name(file: CValuesRef<GFile>?, @CCall.CString display_name: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFile>?

@CCall("knifunptr_glibjson2974_g_file_has_prefix")
external fun g_file_has_prefix(file: CValuesRef<GFile>?, prefix: CValuesRef<GFile>?): gboolean

@CCall("knifunptr_glibjson2975_g_file_get_relative_path")
external fun g_file_get_relative_path(parent: CValuesRef<GFile>?, descendant: CValuesRef<GFile>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson2976_g_file_resolve_relative_path")
external fun g_file_resolve_relative_path(file: CValuesRef<GFile>?, @CCall.CString relative_path: String?): CPointer<GFile>?

@CCall("knifunptr_glibjson2977_g_file_is_native")
external fun g_file_is_native(file: CValuesRef<GFile>?): gboolean

@CCall("knifunptr_glibjson2978_g_file_has_uri_scheme")
external fun g_file_has_uri_scheme(file: CValuesRef<GFile>?, @CCall.CString uri_scheme: String?): gboolean

@CCall("knifunptr_glibjson2979_g_file_get_uri_scheme")
external fun g_file_get_uri_scheme(file: CValuesRef<GFile>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson2980_g_file_read")
external fun g_file_read(file: CValuesRef<GFile>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileInputStream>?

@CCall("knifunptr_glibjson2981_g_file_read_async")
external fun g_file_read_async(file: CValuesRef<GFile>?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2982_g_file_read_finish")
external fun g_file_read_finish(file: CValuesRef<GFile>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileInputStream>?

@CCall("knifunptr_glibjson2983_g_file_append_to")
external fun g_file_append_to(file: CValuesRef<GFile>?, flags: GFileCreateFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileOutputStream>?

@CCall("knifunptr_glibjson2984_g_file_create")
external fun g_file_create(file: CValuesRef<GFile>?, flags: GFileCreateFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileOutputStream>?

@CCall("knifunptr_glibjson2985_g_file_replace")
external fun g_file_replace(file: CValuesRef<GFile>?, @CCall.CString etag: String?, make_backup: gboolean, flags: GFileCreateFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileOutputStream>?

@CCall("knifunptr_glibjson2986_g_file_append_to_async")
external fun g_file_append_to_async(file: CValuesRef<GFile>?, flags: GFileCreateFlags, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2987_g_file_append_to_finish")
external fun g_file_append_to_finish(file: CValuesRef<GFile>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileOutputStream>?

@CCall("knifunptr_glibjson2988_g_file_create_async")
external fun g_file_create_async(file: CValuesRef<GFile>?, flags: GFileCreateFlags, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2989_g_file_create_finish")
external fun g_file_create_finish(file: CValuesRef<GFile>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileOutputStream>?

@CCall("knifunptr_glibjson2990_g_file_replace_async")
external fun g_file_replace_async(file: CValuesRef<GFile>?, @CCall.CString etag: String?, make_backup: gboolean, flags: GFileCreateFlags, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2991_g_file_replace_finish")
external fun g_file_replace_finish(file: CValuesRef<GFile>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileOutputStream>?

@CCall("knifunptr_glibjson2992_g_file_open_readwrite")
external fun g_file_open_readwrite(file: CValuesRef<GFile>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileIOStream>?

@CCall("knifunptr_glibjson2993_g_file_open_readwrite_async")
external fun g_file_open_readwrite_async(file: CValuesRef<GFile>?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2994_g_file_open_readwrite_finish")
external fun g_file_open_readwrite_finish(file: CValuesRef<GFile>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileIOStream>?

@CCall("knifunptr_glibjson2995_g_file_create_readwrite")
external fun g_file_create_readwrite(file: CValuesRef<GFile>?, flags: GFileCreateFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileIOStream>?

@CCall("knifunptr_glibjson2996_g_file_create_readwrite_async")
external fun g_file_create_readwrite_async(file: CValuesRef<GFile>?, flags: GFileCreateFlags, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson2997_g_file_create_readwrite_finish")
external fun g_file_create_readwrite_finish(file: CValuesRef<GFile>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileIOStream>?

@CCall("knifunptr_glibjson2998_g_file_replace_readwrite")
external fun g_file_replace_readwrite(file: CValuesRef<GFile>?, @CCall.CString etag: String?, make_backup: gboolean, flags: GFileCreateFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileIOStream>?

@CCall("knifunptr_glibjson2999_g_file_replace_readwrite_async")
external fun g_file_replace_readwrite_async(file: CValuesRef<GFile>?, @CCall.CString etag: String?, make_backup: gboolean, flags: GFileCreateFlags, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3000_g_file_replace_readwrite_finish")
external fun g_file_replace_readwrite_finish(file: CValuesRef<GFile>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileIOStream>?

@CCall("knifunptr_glibjson3001_g_file_query_exists")
external fun g_file_query_exists(file: CValuesRef<GFile>?, cancellable: CValuesRef<GCancellable>?): gboolean

@CCall("knifunptr_glibjson3002_g_file_query_file_type")
external fun g_file_query_file_type(file: CValuesRef<GFile>?, flags: GFileQueryInfoFlags, cancellable: CValuesRef<GCancellable>?): GFileType

@CCall("knifunptr_glibjson3003_g_file_query_info")
external fun g_file_query_info(file: CValuesRef<GFile>?, @CCall.CString attributes: String?, flags: GFileQueryInfoFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileInfo>?

@CCall("knifunptr_glibjson3004_g_file_query_info_async")
external fun g_file_query_info_async(file: CValuesRef<GFile>?, @CCall.CString attributes: String?, flags: GFileQueryInfoFlags, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3005_g_file_query_info_finish")
external fun g_file_query_info_finish(file: CValuesRef<GFile>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileInfo>?

@CCall("knifunptr_glibjson3006_g_file_query_filesystem_info")
external fun g_file_query_filesystem_info(file: CValuesRef<GFile>?, @CCall.CString attributes: String?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileInfo>?

@CCall("knifunptr_glibjson3007_g_file_query_filesystem_info_async")
external fun g_file_query_filesystem_info_async(file: CValuesRef<GFile>?, @CCall.CString attributes: String?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3008_g_file_query_filesystem_info_finish")
external fun g_file_query_filesystem_info_finish(file: CValuesRef<GFile>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileInfo>?

@CCall("knifunptr_glibjson3009_g_file_find_enclosing_mount")
external fun g_file_find_enclosing_mount(file: CValuesRef<GFile>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GMount>?

@CCall("knifunptr_glibjson3010_g_file_find_enclosing_mount_async")
external fun g_file_find_enclosing_mount_async(file: CValuesRef<GFile>?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3011_g_file_find_enclosing_mount_finish")
external fun g_file_find_enclosing_mount_finish(file: CValuesRef<GFile>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GMount>?

@CCall("knifunptr_glibjson3012_g_file_enumerate_children")
external fun g_file_enumerate_children(file: CValuesRef<GFile>?, @CCall.CString attributes: String?, flags: GFileQueryInfoFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileEnumerator>?

@CCall("knifunptr_glibjson3013_g_file_enumerate_children_async")
external fun g_file_enumerate_children_async(file: CValuesRef<GFile>?, @CCall.CString attributes: String?, flags: GFileQueryInfoFlags, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3014_g_file_enumerate_children_finish")
external fun g_file_enumerate_children_finish(file: CValuesRef<GFile>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileEnumerator>?

@CCall("knifunptr_glibjson3015_g_file_set_display_name")
external fun g_file_set_display_name(file: CValuesRef<GFile>?, @CCall.CString display_name: String?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFile>?

@CCall("knifunptr_glibjson3016_g_file_set_display_name_async")
external fun g_file_set_display_name_async(file: CValuesRef<GFile>?, @CCall.CString display_name: String?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3017_g_file_set_display_name_finish")
external fun g_file_set_display_name_finish(file: CValuesRef<GFile>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFile>?

@CCall("knifunptr_glibjson3018_g_file_delete")
external fun g_file_delete(file: CValuesRef<GFile>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3019_g_file_delete_async")
external fun g_file_delete_async(file: CValuesRef<GFile>?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3020_g_file_delete_finish")
external fun g_file_delete_finish(file: CValuesRef<GFile>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3021_g_file_trash")
external fun g_file_trash(file: CValuesRef<GFile>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3022_g_file_trash_async")
external fun g_file_trash_async(file: CValuesRef<GFile>?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3023_g_file_trash_finish")
external fun g_file_trash_finish(file: CValuesRef<GFile>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3024_g_file_copy")
external fun g_file_copy(source: CValuesRef<GFile>?, destination: CValuesRef<GFile>?, flags: GFileCopyFlags, cancellable: CValuesRef<GCancellable>?, progress_callback: GFileProgressCallback?, progress_callback_data: gpointer?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3025_g_file_copy_async")
external fun g_file_copy_async(source: CValuesRef<GFile>?, destination: CValuesRef<GFile>?, flags: GFileCopyFlags, io_priority: Int, cancellable: CValuesRef<GCancellable>?, progress_callback: GFileProgressCallback?, progress_callback_data: gpointer?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3026_g_file_copy_finish")
external fun g_file_copy_finish(file: CValuesRef<GFile>?, res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3027_g_file_move")
external fun g_file_move(source: CValuesRef<GFile>?, destination: CValuesRef<GFile>?, flags: GFileCopyFlags, cancellable: CValuesRef<GCancellable>?, progress_callback: GFileProgressCallback?, progress_callback_data: gpointer?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3028_g_file_make_directory")
external fun g_file_make_directory(file: CValuesRef<GFile>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3029_g_file_make_directory_async")
external fun g_file_make_directory_async(file: CValuesRef<GFile>?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3030_g_file_make_directory_finish")
external fun g_file_make_directory_finish(file: CValuesRef<GFile>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3031_g_file_make_directory_with_parents")
external fun g_file_make_directory_with_parents(file: CValuesRef<GFile>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3032_g_file_make_symbolic_link")
external fun g_file_make_symbolic_link(file: CValuesRef<GFile>?, @CCall.CString symlink_value: String?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3033_g_file_query_settable_attributes")
external fun g_file_query_settable_attributes(file: CValuesRef<GFile>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileAttributeInfoList>?

@CCall("knifunptr_glibjson3034_g_file_query_writable_namespaces")
external fun g_file_query_writable_namespaces(file: CValuesRef<GFile>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileAttributeInfoList>?

@CCall("knifunptr_glibjson3035_g_file_set_attribute")
external fun g_file_set_attribute(file: CValuesRef<GFile>?, @CCall.CString attribute: String?, type: GFileAttributeType, value_p: gpointer?, flags: GFileQueryInfoFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3036_g_file_set_attributes_from_info")
external fun g_file_set_attributes_from_info(file: CValuesRef<GFile>?, info: CValuesRef<GFileInfo>?, flags: GFileQueryInfoFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3037_g_file_set_attributes_async")
external fun g_file_set_attributes_async(file: CValuesRef<GFile>?, info: CValuesRef<GFileInfo>?, flags: GFileQueryInfoFlags, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3038_g_file_set_attributes_finish")
external fun g_file_set_attributes_finish(file: CValuesRef<GFile>?, result: CValuesRef<GAsyncResult>?, info: CValuesRef<CPointerVar<GFileInfo>>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3039_g_file_set_attribute_string")
external fun g_file_set_attribute_string(file: CValuesRef<GFile>?, @CCall.CString attribute: String?, @CCall.CString value: String?, flags: GFileQueryInfoFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3040_g_file_set_attribute_byte_string")
external fun g_file_set_attribute_byte_string(file: CValuesRef<GFile>?, @CCall.CString attribute: String?, @CCall.CString value: String?, flags: GFileQueryInfoFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3041_g_file_set_attribute_uint32")
external fun g_file_set_attribute_uint32(file: CValuesRef<GFile>?, @CCall.CString attribute: String?, value: guint32, flags: GFileQueryInfoFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3042_g_file_set_attribute_int32")
external fun g_file_set_attribute_int32(file: CValuesRef<GFile>?, @CCall.CString attribute: String?, value: gint32, flags: GFileQueryInfoFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3043_g_file_set_attribute_uint64")
external fun g_file_set_attribute_uint64(file: CValuesRef<GFile>?, @CCall.CString attribute: String?, value: guint64, flags: GFileQueryInfoFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3044_g_file_set_attribute_int64")
external fun g_file_set_attribute_int64(file: CValuesRef<GFile>?, @CCall.CString attribute: String?, value: gint64, flags: GFileQueryInfoFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3045_g_file_mount_enclosing_volume")
external fun g_file_mount_enclosing_volume(location: CValuesRef<GFile>?, flags: GMountMountFlags, mount_operation: CValuesRef<GMountOperation>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3046_g_file_mount_enclosing_volume_finish")
external fun g_file_mount_enclosing_volume_finish(location: CValuesRef<GFile>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3047_g_file_mount_mountable")
external fun g_file_mount_mountable(file: CValuesRef<GFile>?, flags: GMountMountFlags, mount_operation: CValuesRef<GMountOperation>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3048_g_file_mount_mountable_finish")
external fun g_file_mount_mountable_finish(file: CValuesRef<GFile>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFile>?

@CCall("knifunptr_glibjson3049_g_file_unmount_mountable")
external fun g_file_unmount_mountable(file: CValuesRef<GFile>?, flags: GMountUnmountFlags, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3050_g_file_unmount_mountable_finish")
external fun g_file_unmount_mountable_finish(file: CValuesRef<GFile>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3051_g_file_unmount_mountable_with_operation")
external fun g_file_unmount_mountable_with_operation(file: CValuesRef<GFile>?, flags: GMountUnmountFlags, mount_operation: CValuesRef<GMountOperation>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3052_g_file_unmount_mountable_with_operation_finish")
external fun g_file_unmount_mountable_with_operation_finish(file: CValuesRef<GFile>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3053_g_file_eject_mountable")
external fun g_file_eject_mountable(file: CValuesRef<GFile>?, flags: GMountUnmountFlags, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3054_g_file_eject_mountable_finish")
external fun g_file_eject_mountable_finish(file: CValuesRef<GFile>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3055_g_file_eject_mountable_with_operation")
external fun g_file_eject_mountable_with_operation(file: CValuesRef<GFile>?, flags: GMountUnmountFlags, mount_operation: CValuesRef<GMountOperation>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3056_g_file_eject_mountable_with_operation_finish")
external fun g_file_eject_mountable_with_operation_finish(file: CValuesRef<GFile>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3057_g_file_copy_attributes")
external fun g_file_copy_attributes(source: CValuesRef<GFile>?, destination: CValuesRef<GFile>?, flags: GFileCopyFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3058_g_file_monitor_directory")
external fun g_file_monitor_directory(file: CValuesRef<GFile>?, flags: GFileMonitorFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileMonitor>?

@CCall("knifunptr_glibjson3059_g_file_monitor_file")
external fun g_file_monitor_file(file: CValuesRef<GFile>?, flags: GFileMonitorFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileMonitor>?

@CCall("knifunptr_glibjson3060_g_file_monitor")
external fun g_file_monitor(file: CValuesRef<GFile>?, flags: GFileMonitorFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileMonitor>?

@CCall("knifunptr_glibjson3061_g_file_measure_disk_usage")
external fun g_file_measure_disk_usage(file: CValuesRef<GFile>?, flags: GFileMeasureFlags, cancellable: CValuesRef<GCancellable>?, progress_callback: GFileMeasureProgressCallback?, progress_data: gpointer?, disk_usage: CValuesRef<guint64Var>?, num_dirs: CValuesRef<guint64Var>?, num_files: CValuesRef<guint64Var>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3062_g_file_measure_disk_usage_async")
external fun g_file_measure_disk_usage_async(file: CValuesRef<GFile>?, flags: GFileMeasureFlags, io_priority: gint, cancellable: CValuesRef<GCancellable>?, progress_callback: GFileMeasureProgressCallback?, progress_data: gpointer?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3063_g_file_measure_disk_usage_finish")
external fun g_file_measure_disk_usage_finish(file: CValuesRef<GFile>?, result: CValuesRef<GAsyncResult>?, disk_usage: CValuesRef<guint64Var>?, num_dirs: CValuesRef<guint64Var>?, num_files: CValuesRef<guint64Var>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3064_g_file_start_mountable")
external fun g_file_start_mountable(file: CValuesRef<GFile>?, flags: GDriveStartFlags, start_operation: CValuesRef<GMountOperation>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3065_g_file_start_mountable_finish")
external fun g_file_start_mountable_finish(file: CValuesRef<GFile>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3066_g_file_stop_mountable")
external fun g_file_stop_mountable(file: CValuesRef<GFile>?, flags: GMountUnmountFlags, mount_operation: CValuesRef<GMountOperation>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3067_g_file_stop_mountable_finish")
external fun g_file_stop_mountable_finish(file: CValuesRef<GFile>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3068_g_file_poll_mountable")
external fun g_file_poll_mountable(file: CValuesRef<GFile>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3069_g_file_poll_mountable_finish")
external fun g_file_poll_mountable_finish(file: CValuesRef<GFile>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3070_g_file_query_default_handler")
external fun g_file_query_default_handler(file: CValuesRef<GFile>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GAppInfo>?

@CCall("knifunptr_glibjson3071_g_file_load_contents")
external fun g_file_load_contents(file: CValuesRef<GFile>?, cancellable: CValuesRef<GCancellable>?, contents: CValuesRef<CPointerVar<ByteVar>>?, length: CValuesRef<gsizeVar>?, etag_out: CValuesRef<CPointerVar<ByteVar>>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3072_g_file_load_contents_async")
external fun g_file_load_contents_async(file: CValuesRef<GFile>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3073_g_file_load_contents_finish")
external fun g_file_load_contents_finish(file: CValuesRef<GFile>?, res: CValuesRef<GAsyncResult>?, contents: CValuesRef<CPointerVar<ByteVar>>?, length: CValuesRef<gsizeVar>?, etag_out: CValuesRef<CPointerVar<ByteVar>>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3074_g_file_load_partial_contents_async")
external fun g_file_load_partial_contents_async(file: CValuesRef<GFile>?, cancellable: CValuesRef<GCancellable>?, read_more_callback: GFileReadMoreCallback?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3075_g_file_load_partial_contents_finish")
external fun g_file_load_partial_contents_finish(file: CValuesRef<GFile>?, res: CValuesRef<GAsyncResult>?, contents: CValuesRef<CPointerVar<ByteVar>>?, length: CValuesRef<gsizeVar>?, etag_out: CValuesRef<CPointerVar<ByteVar>>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3076_g_file_replace_contents")
external fun g_file_replace_contents(file: CValuesRef<GFile>?, @CCall.CString contents: String?, length: gsize, @CCall.CString etag: String?, make_backup: gboolean, flags: GFileCreateFlags, new_etag: CValuesRef<CPointerVar<ByteVar>>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3077_g_file_replace_contents_async")
external fun g_file_replace_contents_async(file: CValuesRef<GFile>?, @CCall.CString contents: String?, length: gsize, @CCall.CString etag: String?, make_backup: gboolean, flags: GFileCreateFlags, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3078_g_file_replace_contents_bytes_async")
external fun g_file_replace_contents_bytes_async(file: CValuesRef<GFile>?, contents: CValuesRef<GBytes>?, @CCall.CString etag: String?, make_backup: gboolean, flags: GFileCreateFlags, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3079_g_file_replace_contents_finish")
external fun g_file_replace_contents_finish(file: CValuesRef<GFile>?, res: CValuesRef<GAsyncResult>?, new_etag: CValuesRef<CPointerVar<ByteVar>>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3080_g_file_supports_thread_contexts")
external fun g_file_supports_thread_contexts(file: CValuesRef<GFile>?): gboolean

@CCall("knifunptr_glibjson3081_g_file_load_bytes")
external fun g_file_load_bytes(file: CValuesRef<GFile>?, cancellable: CValuesRef<GCancellable>?, etag_out: CValuesRef<CPointerVar<gcharVar>>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GBytes>?

@CCall("knifunptr_glibjson3082_g_file_load_bytes_async")
external fun g_file_load_bytes_async(file: CValuesRef<GFile>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3083_g_file_load_bytes_finish")
external fun g_file_load_bytes_finish(file: CValuesRef<GFile>?, result: CValuesRef<GAsyncResult>?, etag_out: CValuesRef<CPointerVar<gcharVar>>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GBytes>?

@CCall("knifunptr_glibjson3084_g_file_icon_get_type")
external fun g_file_icon_get_type(): GType

@CCall("knifunptr_glibjson3085_g_file_icon_new")
external fun g_file_icon_new(file: CValuesRef<GFile>?): CPointer<GIcon>?

@CCall("knifunptr_glibjson3086_g_file_icon_get_file")
external fun g_file_icon_get_file(icon: CValuesRef<GFileIcon>?): CPointer<GFile>?

@CCall("knifunptr_glibjson3087_g_file_info_get_type")
external fun g_file_info_get_type(): GType

@CCall("knifunptr_glibjson3088_g_file_info_new")
external fun g_file_info_new(): CPointer<GFileInfo>?

@CCall("knifunptr_glibjson3089_g_file_info_dup")
external fun g_file_info_dup(other: CValuesRef<GFileInfo>?): CPointer<GFileInfo>?

@CCall("knifunptr_glibjson3090_g_file_info_copy_into")
external fun g_file_info_copy_into(src_info: CValuesRef<GFileInfo>?, dest_info: CValuesRef<GFileInfo>?): Unit

@CCall("knifunptr_glibjson3091_g_file_info_has_attribute")
external fun g_file_info_has_attribute(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?): gboolean

@CCall("knifunptr_glibjson3092_g_file_info_has_namespace")
external fun g_file_info_has_namespace(info: CValuesRef<GFileInfo>?, @CCall.CString name_space: String?): gboolean

@CCall("knifunptr_glibjson3093_g_file_info_list_attributes")
external fun g_file_info_list_attributes(info: CValuesRef<GFileInfo>?, @CCall.CString name_space: String?): CPointer<CPointerVar<ByteVar>>?

@CCall("knifunptr_glibjson3094_g_file_info_get_attribute_data")
external fun g_file_info_get_attribute_data(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?, type: CValuesRef<GFileAttributeTypeVar>?, value_pp: CValuesRef<gpointerVar>?, status: CValuesRef<GFileAttributeStatusVar>?): gboolean

@CCall("knifunptr_glibjson3095_g_file_info_get_attribute_type")
external fun g_file_info_get_attribute_type(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?): GFileAttributeType

@CCall("knifunptr_glibjson3096_g_file_info_remove_attribute")
external fun g_file_info_remove_attribute(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?): Unit

@CCall("knifunptr_glibjson3097_g_file_info_get_attribute_status")
external fun g_file_info_get_attribute_status(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?): GFileAttributeStatus

@CCall("knifunptr_glibjson3098_g_file_info_set_attribute_status")
external fun g_file_info_set_attribute_status(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?, status: GFileAttributeStatus): gboolean

@CCall("knifunptr_glibjson3099_g_file_info_get_attribute_as_string")
external fun g_file_info_get_attribute_as_string(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson3100_g_file_info_get_attribute_string")
external fun g_file_info_get_attribute_string(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson3101_g_file_info_get_attribute_byte_string")
external fun g_file_info_get_attribute_byte_string(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson3102_g_file_info_get_attribute_boolean")
external fun g_file_info_get_attribute_boolean(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?): gboolean

@CCall("knifunptr_glibjson3103_g_file_info_get_attribute_uint32")
external fun g_file_info_get_attribute_uint32(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?): guint32

@CCall("knifunptr_glibjson3104_g_file_info_get_attribute_int32")
external fun g_file_info_get_attribute_int32(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?): gint32

@CCall("knifunptr_glibjson3105_g_file_info_get_attribute_uint64")
external fun g_file_info_get_attribute_uint64(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?): guint64

@CCall("knifunptr_glibjson3106_g_file_info_get_attribute_int64")
external fun g_file_info_get_attribute_int64(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?): gint64

@CCall("knifunptr_glibjson3107_g_file_info_get_attribute_object")
external fun g_file_info_get_attribute_object(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?): CPointer<GObject>?

@CCall("knifunptr_glibjson3108_g_file_info_get_attribute_stringv")
external fun g_file_info_get_attribute_stringv(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?): CPointer<CPointerVar<ByteVar>>?

@CCall("knifunptr_glibjson3109_g_file_info_set_attribute")
external fun g_file_info_set_attribute(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?, type: GFileAttributeType, value_p: gpointer?): Unit

@CCall("knifunptr_glibjson3110_g_file_info_set_attribute_string")
external fun g_file_info_set_attribute_string(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?, @CCall.CString attr_value: String?): Unit

@CCall("knifunptr_glibjson3111_g_file_info_set_attribute_byte_string")
external fun g_file_info_set_attribute_byte_string(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?, @CCall.CString attr_value: String?): Unit

@CCall("knifunptr_glibjson3112_g_file_info_set_attribute_boolean")
external fun g_file_info_set_attribute_boolean(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?, attr_value: gboolean): Unit

@CCall("knifunptr_glibjson3113_g_file_info_set_attribute_uint32")
external fun g_file_info_set_attribute_uint32(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?, attr_value: guint32): Unit

@CCall("knifunptr_glibjson3114_g_file_info_set_attribute_int32")
external fun g_file_info_set_attribute_int32(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?, attr_value: gint32): Unit

@CCall("knifunptr_glibjson3115_g_file_info_set_attribute_uint64")
external fun g_file_info_set_attribute_uint64(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?, attr_value: guint64): Unit

@CCall("knifunptr_glibjson3116_g_file_info_set_attribute_int64")
external fun g_file_info_set_attribute_int64(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?, attr_value: gint64): Unit

@CCall("knifunptr_glibjson3117_g_file_info_set_attribute_object")
external fun g_file_info_set_attribute_object(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?, attr_value: CValuesRef<GObject>?): Unit

@CCall("knifunptr_glibjson3118_g_file_info_set_attribute_stringv")
external fun g_file_info_set_attribute_stringv(info: CValuesRef<GFileInfo>?, @CCall.CString attribute: String?, attr_value: CValuesRef<CPointerVar<ByteVar>>?): Unit

@CCall("knifunptr_glibjson3119_g_file_info_clear_status")
external fun g_file_info_clear_status(info: CValuesRef<GFileInfo>?): Unit

@CCall("knifunptr_glibjson3120_g_file_info_get_deletion_date")
external fun g_file_info_get_deletion_date(info: CValuesRef<GFileInfo>?): CPointer<GDateTime>?

@CCall("knifunptr_glibjson3121_g_file_info_get_file_type")
external fun g_file_info_get_file_type(info: CValuesRef<GFileInfo>?): GFileType

@CCall("knifunptr_glibjson3122_g_file_info_get_is_hidden")
external fun g_file_info_get_is_hidden(info: CValuesRef<GFileInfo>?): gboolean

@CCall("knifunptr_glibjson3123_g_file_info_get_is_backup")
external fun g_file_info_get_is_backup(info: CValuesRef<GFileInfo>?): gboolean

@CCall("knifunptr_glibjson3124_g_file_info_get_is_symlink")
external fun g_file_info_get_is_symlink(info: CValuesRef<GFileInfo>?): gboolean

@CCall("knifunptr_glibjson3125_g_file_info_get_name")
external fun g_file_info_get_name(info: CValuesRef<GFileInfo>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson3126_g_file_info_get_display_name")
external fun g_file_info_get_display_name(info: CValuesRef<GFileInfo>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson3127_g_file_info_get_edit_name")
external fun g_file_info_get_edit_name(info: CValuesRef<GFileInfo>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson3128_g_file_info_get_icon")
external fun g_file_info_get_icon(info: CValuesRef<GFileInfo>?): CPointer<GIcon>?

@CCall("knifunptr_glibjson3129_g_file_info_get_symbolic_icon")
external fun g_file_info_get_symbolic_icon(info: CValuesRef<GFileInfo>?): CPointer<GIcon>?

@CCall("knifunptr_glibjson3130_g_file_info_get_content_type")
external fun g_file_info_get_content_type(info: CValuesRef<GFileInfo>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson3131_g_file_info_get_size")
external fun g_file_info_get_size(info: CValuesRef<GFileInfo>?): goffset

@CCall("knifunptr_glibjson3132_g_file_info_get_modification_time")
external fun g_file_info_get_modification_time(info: CValuesRef<GFileInfo>?, result: CValuesRef<GTimeVal>?): Unit

@CCall("knifunptr_glibjson3133_g_file_info_get_symlink_target")
external fun g_file_info_get_symlink_target(info: CValuesRef<GFileInfo>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson3134_g_file_info_get_etag")
external fun g_file_info_get_etag(info: CValuesRef<GFileInfo>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson3135_g_file_info_get_sort_order")
external fun g_file_info_get_sort_order(info: CValuesRef<GFileInfo>?): gint32

@CCall("knifunptr_glibjson3136_g_file_info_set_attribute_mask")
external fun g_file_info_set_attribute_mask(info: CValuesRef<GFileInfo>?, mask: CValuesRef<GFileAttributeMatcher>?): Unit

@CCall("knifunptr_glibjson3137_g_file_info_unset_attribute_mask")
external fun g_file_info_unset_attribute_mask(info: CValuesRef<GFileInfo>?): Unit

@CCall("knifunptr_glibjson3138_g_file_info_set_file_type")
external fun g_file_info_set_file_type(info: CValuesRef<GFileInfo>?, type: GFileType): Unit

@CCall("knifunptr_glibjson3139_g_file_info_set_is_hidden")
external fun g_file_info_set_is_hidden(info: CValuesRef<GFileInfo>?, is_hidden: gboolean): Unit

@CCall("knifunptr_glibjson3140_g_file_info_set_is_symlink")
external fun g_file_info_set_is_symlink(info: CValuesRef<GFileInfo>?, is_symlink: gboolean): Unit

@CCall("knifunptr_glibjson3141_g_file_info_set_name")
external fun g_file_info_set_name(info: CValuesRef<GFileInfo>?, @CCall.CString name: String?): Unit

@CCall("knifunptr_glibjson3142_g_file_info_set_display_name")
external fun g_file_info_set_display_name(info: CValuesRef<GFileInfo>?, @CCall.CString display_name: String?): Unit

@CCall("knifunptr_glibjson3143_g_file_info_set_edit_name")
external fun g_file_info_set_edit_name(info: CValuesRef<GFileInfo>?, @CCall.CString edit_name: String?): Unit

@CCall("knifunptr_glibjson3144_g_file_info_set_icon")
external fun g_file_info_set_icon(info: CValuesRef<GFileInfo>?, icon: CValuesRef<GIcon>?): Unit

@CCall("knifunptr_glibjson3145_g_file_info_set_symbolic_icon")
external fun g_file_info_set_symbolic_icon(info: CValuesRef<GFileInfo>?, icon: CValuesRef<GIcon>?): Unit

@CCall("knifunptr_glibjson3146_g_file_info_set_content_type")
external fun g_file_info_set_content_type(info: CValuesRef<GFileInfo>?, @CCall.CString content_type: String?): Unit

@CCall("knifunptr_glibjson3147_g_file_info_set_size")
external fun g_file_info_set_size(info: CValuesRef<GFileInfo>?, size: goffset): Unit

@CCall("knifunptr_glibjson3148_g_file_info_set_modification_time")
external fun g_file_info_set_modification_time(info: CValuesRef<GFileInfo>?, mtime: CValuesRef<GTimeVal>?): Unit

@CCall("knifunptr_glibjson3149_g_file_info_set_symlink_target")
external fun g_file_info_set_symlink_target(info: CValuesRef<GFileInfo>?, @CCall.CString symlink_target: String?): Unit

@CCall("knifunptr_glibjson3150_g_file_info_set_sort_order")
external fun g_file_info_set_sort_order(info: CValuesRef<GFileInfo>?, sort_order: gint32): Unit

@CCall("knifunptr_glibjson3151_g_file_attribute_matcher_get_type")
external fun g_file_attribute_matcher_get_type(): GType

@CCall("knifunptr_glibjson3152_g_file_attribute_matcher_new")
external fun g_file_attribute_matcher_new(@CCall.CString attributes: String?): CPointer<GFileAttributeMatcher>?

@CCall("knifunptr_glibjson3153_g_file_attribute_matcher_ref")
external fun g_file_attribute_matcher_ref(matcher: CValuesRef<GFileAttributeMatcher>?): CPointer<GFileAttributeMatcher>?

@CCall("knifunptr_glibjson3154_g_file_attribute_matcher_unref")
external fun g_file_attribute_matcher_unref(matcher: CValuesRef<GFileAttributeMatcher>?): Unit

@CCall("knifunptr_glibjson3155_g_file_attribute_matcher_subtract")
external fun g_file_attribute_matcher_subtract(matcher: CValuesRef<GFileAttributeMatcher>?, subtract: CValuesRef<GFileAttributeMatcher>?): CPointer<GFileAttributeMatcher>?

@CCall("knifunptr_glibjson3156_g_file_attribute_matcher_matches")
external fun g_file_attribute_matcher_matches(matcher: CValuesRef<GFileAttributeMatcher>?, @CCall.CString attribute: String?): gboolean

@CCall("knifunptr_glibjson3157_g_file_attribute_matcher_matches_only")
external fun g_file_attribute_matcher_matches_only(matcher: CValuesRef<GFileAttributeMatcher>?, @CCall.CString attribute: String?): gboolean

@CCall("knifunptr_glibjson3158_g_file_attribute_matcher_enumerate_namespace")
external fun g_file_attribute_matcher_enumerate_namespace(matcher: CValuesRef<GFileAttributeMatcher>?, @CCall.CString ns: String?): gboolean

@CCall("knifunptr_glibjson3159_g_file_attribute_matcher_enumerate_next")
external fun g_file_attribute_matcher_enumerate_next(matcher: CValuesRef<GFileAttributeMatcher>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson3160_g_file_attribute_matcher_to_string")
external fun g_file_attribute_matcher_to_string(matcher: CValuesRef<GFileAttributeMatcher>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson3161_g_file_input_stream_get_type")
external fun g_file_input_stream_get_type(): GType

@CCall("knifunptr_glibjson3162_g_file_input_stream_query_info")
external fun g_file_input_stream_query_info(stream: CValuesRef<GFileInputStream>?, @CCall.CString attributes: String?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileInfo>?

@CCall("knifunptr_glibjson3163_g_file_input_stream_query_info_async")
external fun g_file_input_stream_query_info_async(stream: CValuesRef<GFileInputStream>?, @CCall.CString attributes: String?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3164_g_file_input_stream_query_info_finish")
external fun g_file_input_stream_query_info_finish(stream: CValuesRef<GFileInputStream>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileInfo>?

@CCall("knifunptr_glibjson3165_g_io_error_quark")
external fun g_io_error_quark(): GQuark

@CCall("knifunptr_glibjson3166_g_io_error_from_errno")
external fun g_io_error_from_errno(err_no: gint): GIOErrorEnum

@CCall("knifunptr_glibjson3167_g_io_stream_get_type")
external fun g_io_stream_get_type(): GType

@CCall("knifunptr_glibjson3168_g_io_stream_get_input_stream")
external fun g_io_stream_get_input_stream(stream: CValuesRef<GIOStream>?): CPointer<GInputStream>?

@CCall("knifunptr_glibjson3169_g_io_stream_get_output_stream")
external fun g_io_stream_get_output_stream(stream: CValuesRef<GIOStream>?): CPointer<GOutputStream>?

@CCall("knifunptr_glibjson3170_g_io_stream_splice_async")
external fun g_io_stream_splice_async(stream1: CValuesRef<GIOStream>?, stream2: CValuesRef<GIOStream>?, flags: GIOStreamSpliceFlags, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3171_g_io_stream_splice_finish")
external fun g_io_stream_splice_finish(result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3172_g_io_stream_close")
external fun g_io_stream_close(stream: CValuesRef<GIOStream>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3173_g_io_stream_close_async")
external fun g_io_stream_close_async(stream: CValuesRef<GIOStream>?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3174_g_io_stream_close_finish")
external fun g_io_stream_close_finish(stream: CValuesRef<GIOStream>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3175_g_io_stream_is_closed")
external fun g_io_stream_is_closed(stream: CValuesRef<GIOStream>?): gboolean

@CCall("knifunptr_glibjson3176_g_io_stream_has_pending")
external fun g_io_stream_has_pending(stream: CValuesRef<GIOStream>?): gboolean

@CCall("knifunptr_glibjson3177_g_io_stream_set_pending")
external fun g_io_stream_set_pending(stream: CValuesRef<GIOStream>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3178_g_io_stream_clear_pending")
external fun g_io_stream_clear_pending(stream: CValuesRef<GIOStream>?): Unit

@CCall("knifunptr_glibjson3179_g_file_io_stream_get_type")
external fun g_file_io_stream_get_type(): GType

@CCall("knifunptr_glibjson3180_g_file_io_stream_query_info")
external fun g_file_io_stream_query_info(stream: CValuesRef<GFileIOStream>?, @CCall.CString attributes: String?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileInfo>?

@CCall("knifunptr_glibjson3181_g_file_io_stream_query_info_async")
external fun g_file_io_stream_query_info_async(stream: CValuesRef<GFileIOStream>?, @CCall.CString attributes: String?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3182_g_file_io_stream_query_info_finish")
external fun g_file_io_stream_query_info_finish(stream: CValuesRef<GFileIOStream>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileInfo>?

@CCall("knifunptr_glibjson3183_g_file_io_stream_get_etag")
external fun g_file_io_stream_get_etag(stream: CValuesRef<GFileIOStream>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson3184_g_file_monitor_get_type")
external fun g_file_monitor_get_type(): GType

@CCall("knifunptr_glibjson3185_g_file_monitor_cancel")
external fun g_file_monitor_cancel(monitor: CValuesRef<GFileMonitor>?): gboolean

@CCall("knifunptr_glibjson3186_g_file_monitor_is_cancelled")
external fun g_file_monitor_is_cancelled(monitor: CValuesRef<GFileMonitor>?): gboolean

@CCall("knifunptr_glibjson3187_g_file_monitor_set_rate_limit")
external fun g_file_monitor_set_rate_limit(monitor: CValuesRef<GFileMonitor>?, limit_msecs: gint): Unit

@CCall("knifunptr_glibjson3188_g_file_monitor_emit_event")
external fun g_file_monitor_emit_event(monitor: CValuesRef<GFileMonitor>?, child: CValuesRef<GFile>?, other_file: CValuesRef<GFile>?, event_type: GFileMonitorEvent): Unit

@CCall("knifunptr_glibjson3189_g_filename_completer_get_type")
external fun g_filename_completer_get_type(): GType

@CCall("knifunptr_glibjson3190_g_filename_completer_new")
external fun g_filename_completer_new(): CPointer<GFilenameCompleter>?

@CCall("knifunptr_glibjson3191_g_filename_completer_get_completion_suffix")
external fun g_filename_completer_get_completion_suffix(completer: CValuesRef<GFilenameCompleter>?, @CCall.CString initial_text: String?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson3192_g_filename_completer_get_completions")
external fun g_filename_completer_get_completions(completer: CValuesRef<GFilenameCompleter>?, @CCall.CString initial_text: String?): CPointer<CPointerVar<ByteVar>>?

@CCall("knifunptr_glibjson3193_g_filename_completer_set_dirs_only")
external fun g_filename_completer_set_dirs_only(completer: CValuesRef<GFilenameCompleter>?, dirs_only: gboolean): Unit

@CCall("knifunptr_glibjson3194_g_file_output_stream_get_type")
external fun g_file_output_stream_get_type(): GType

@CCall("knifunptr_glibjson3195_g_file_output_stream_query_info")
external fun g_file_output_stream_query_info(stream: CValuesRef<GFileOutputStream>?, @CCall.CString attributes: String?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileInfo>?

@CCall("knifunptr_glibjson3196_g_file_output_stream_query_info_async")
external fun g_file_output_stream_query_info_async(stream: CValuesRef<GFileOutputStream>?, @CCall.CString attributes: String?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3197_g_file_output_stream_query_info_finish")
external fun g_file_output_stream_query_info_finish(stream: CValuesRef<GFileOutputStream>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GFileInfo>?

@CCall("knifunptr_glibjson3198_g_file_output_stream_get_etag")
external fun g_file_output_stream_get_etag(stream: CValuesRef<GFileOutputStream>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson3199_g_inet_address_get_type")
external fun g_inet_address_get_type(): GType

@CCall("knifunptr_glibjson3200_g_inet_address_new_from_string")
external fun g_inet_address_new_from_string(@CCall.CString string: String?): CPointer<GInetAddress>?

@CCall("knifunptr_glibjson3201_g_inet_address_new_from_bytes")
external fun g_inet_address_new_from_bytes(bytes: CValuesRef<guint8Var>?, family: GSocketFamily): CPointer<GInetAddress>?

@CCall("knifunptr_glibjson3202_g_inet_address_new_loopback")
external fun g_inet_address_new_loopback(family: GSocketFamily): CPointer<GInetAddress>?

@CCall("knifunptr_glibjson3203_g_inet_address_new_any")
external fun g_inet_address_new_any(family: GSocketFamily): CPointer<GInetAddress>?

@CCall("knifunptr_glibjson3204_g_inet_address_equal")
external fun g_inet_address_equal(address: CValuesRef<GInetAddress>?, other_address: CValuesRef<GInetAddress>?): gboolean

@CCall("knifunptr_glibjson3205_g_inet_address_to_string")
external fun g_inet_address_to_string(address: CValuesRef<GInetAddress>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson3206_g_inet_address_to_bytes")
external fun g_inet_address_to_bytes(address: CValuesRef<GInetAddress>?): CPointer<guint8Var>?

@CCall("knifunptr_glibjson3207_g_inet_address_get_native_size")
external fun g_inet_address_get_native_size(address: CValuesRef<GInetAddress>?): gsize

@CCall("knifunptr_glibjson3208_g_inet_address_get_family")
external fun g_inet_address_get_family(address: CValuesRef<GInetAddress>?): GSocketFamily

@CCall("knifunptr_glibjson3209_g_inet_address_get_is_any")
external fun g_inet_address_get_is_any(address: CValuesRef<GInetAddress>?): gboolean

@CCall("knifunptr_glibjson3210_g_inet_address_get_is_loopback")
external fun g_inet_address_get_is_loopback(address: CValuesRef<GInetAddress>?): gboolean

@CCall("knifunptr_glibjson3211_g_inet_address_get_is_link_local")
external fun g_inet_address_get_is_link_local(address: CValuesRef<GInetAddress>?): gboolean

@CCall("knifunptr_glibjson3212_g_inet_address_get_is_site_local")
external fun g_inet_address_get_is_site_local(address: CValuesRef<GInetAddress>?): gboolean

@CCall("knifunptr_glibjson3213_g_inet_address_get_is_multicast")
external fun g_inet_address_get_is_multicast(address: CValuesRef<GInetAddress>?): gboolean

@CCall("knifunptr_glibjson3214_g_inet_address_get_is_mc_global")
external fun g_inet_address_get_is_mc_global(address: CValuesRef<GInetAddress>?): gboolean

@CCall("knifunptr_glibjson3215_g_inet_address_get_is_mc_link_local")
external fun g_inet_address_get_is_mc_link_local(address: CValuesRef<GInetAddress>?): gboolean

@CCall("knifunptr_glibjson3216_g_inet_address_get_is_mc_node_local")
external fun g_inet_address_get_is_mc_node_local(address: CValuesRef<GInetAddress>?): gboolean

@CCall("knifunptr_glibjson3217_g_inet_address_get_is_mc_org_local")
external fun g_inet_address_get_is_mc_org_local(address: CValuesRef<GInetAddress>?): gboolean

@CCall("knifunptr_glibjson3218_g_inet_address_get_is_mc_site_local")
external fun g_inet_address_get_is_mc_site_local(address: CValuesRef<GInetAddress>?): gboolean

@CCall("knifunptr_glibjson3219_g_inet_address_mask_get_type")
external fun g_inet_address_mask_get_type(): GType

@CCall("knifunptr_glibjson3220_g_inet_address_mask_new")
external fun g_inet_address_mask_new(addr: CValuesRef<GInetAddress>?, length: guint, error: CValuesRef<CPointerVar<GError>>?): CPointer<GInetAddressMask>?

@CCall("knifunptr_glibjson3221_g_inet_address_mask_new_from_string")
external fun g_inet_address_mask_new_from_string(@CCall.CString mask_string: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GInetAddressMask>?

@CCall("knifunptr_glibjson3222_g_inet_address_mask_to_string")
external fun g_inet_address_mask_to_string(mask: CValuesRef<GInetAddressMask>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson3223_g_inet_address_mask_get_family")
external fun g_inet_address_mask_get_family(mask: CValuesRef<GInetAddressMask>?): GSocketFamily

@CCall("knifunptr_glibjson3224_g_inet_address_mask_get_address")
external fun g_inet_address_mask_get_address(mask: CValuesRef<GInetAddressMask>?): CPointer<GInetAddress>?

@CCall("knifunptr_glibjson3225_g_inet_address_mask_get_length")
external fun g_inet_address_mask_get_length(mask: CValuesRef<GInetAddressMask>?): guint

@CCall("knifunptr_glibjson3226_g_inet_address_mask_matches")
external fun g_inet_address_mask_matches(mask: CValuesRef<GInetAddressMask>?, address: CValuesRef<GInetAddress>?): gboolean

@CCall("knifunptr_glibjson3227_g_inet_address_mask_equal")
external fun g_inet_address_mask_equal(mask: CValuesRef<GInetAddressMask>?, mask2: CValuesRef<GInetAddressMask>?): gboolean

@CCall("knifunptr_glibjson3228_g_socket_address_get_type")
external fun g_socket_address_get_type(): GType

@CCall("knifunptr_glibjson3229_g_socket_address_get_family")
external fun g_socket_address_get_family(address: CValuesRef<GSocketAddress>?): GSocketFamily

@CCall("knifunptr_glibjson3230_g_socket_address_new_from_native")
external fun g_socket_address_new_from_native(native: gpointer?, len: gsize): CPointer<GSocketAddress>?

@CCall("knifunptr_glibjson3231_g_socket_address_to_native")
external fun g_socket_address_to_native(address: CValuesRef<GSocketAddress>?, dest: gpointer?, destlen: gsize, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3232_g_socket_address_get_native_size")
external fun g_socket_address_get_native_size(address: CValuesRef<GSocketAddress>?): gssize

@CCall("knifunptr_glibjson3233_g_inet_socket_address_get_type")
external fun g_inet_socket_address_get_type(): GType

@CCall("knifunptr_glibjson3234_g_inet_socket_address_new")
external fun g_inet_socket_address_new(address: CValuesRef<GInetAddress>?, port: guint16): CPointer<GSocketAddress>?

@CCall("knifunptr_glibjson3235_g_inet_socket_address_new_from_string")
external fun g_inet_socket_address_new_from_string(@CCall.CString address: String?, port: guint): CPointer<GSocketAddress>?

@CCall("knifunptr_glibjson3236_g_inet_socket_address_get_address")
external fun g_inet_socket_address_get_address(address: CValuesRef<GInetSocketAddress>?): CPointer<GInetAddress>?

@CCall("knifunptr_glibjson3237_g_inet_socket_address_get_port")
external fun g_inet_socket_address_get_port(address: CValuesRef<GInetSocketAddress>?): guint16

@CCall("knifunptr_glibjson3238_g_inet_socket_address_get_flowinfo")
external fun g_inet_socket_address_get_flowinfo(address: CValuesRef<GInetSocketAddress>?): guint32

@CCall("knifunptr_glibjson3239_g_inet_socket_address_get_scope_id")
external fun g_inet_socket_address_get_scope_id(address: CValuesRef<GInetSocketAddress>?): guint32

@CCall("knifunptr_glibjson3240_g_app_info_create_flags_get_type")
external fun g_app_info_create_flags_get_type(): GType

@CCall("knifunptr_glibjson3241_g_converter_flags_get_type")
external fun g_converter_flags_get_type(): GType

@CCall("knifunptr_glibjson3242_g_converter_result_get_type")
external fun g_converter_result_get_type(): GType

@CCall("knifunptr_glibjson3243_g_data_stream_byte_order_get_type")
external fun g_data_stream_byte_order_get_type(): GType

@CCall("knifunptr_glibjson3244_g_data_stream_newline_type_get_type")
external fun g_data_stream_newline_type_get_type(): GType

@CCall("knifunptr_glibjson3245_g_file_attribute_type_get_type")
external fun g_file_attribute_type_get_type(): GType

@CCall("knifunptr_glibjson3246_g_file_attribute_info_flags_get_type")
external fun g_file_attribute_info_flags_get_type(): GType

@CCall("knifunptr_glibjson3247_g_file_attribute_status_get_type")
external fun g_file_attribute_status_get_type(): GType

@CCall("knifunptr_glibjson3248_g_file_query_info_flags_get_type")
external fun g_file_query_info_flags_get_type(): GType

@CCall("knifunptr_glibjson3249_g_file_create_flags_get_type")
external fun g_file_create_flags_get_type(): GType

@CCall("knifunptr_glibjson3250_g_file_measure_flags_get_type")
external fun g_file_measure_flags_get_type(): GType

@CCall("knifunptr_glibjson3251_g_mount_mount_flags_get_type")
external fun g_mount_mount_flags_get_type(): GType

@CCall("knifunptr_glibjson3252_g_mount_unmount_flags_get_type")
external fun g_mount_unmount_flags_get_type(): GType

@CCall("knifunptr_glibjson3253_g_drive_start_flags_get_type")
external fun g_drive_start_flags_get_type(): GType

@CCall("knifunptr_glibjson3254_g_drive_start_stop_type_get_type")
external fun g_drive_start_stop_type_get_type(): GType

@CCall("knifunptr_glibjson3255_g_file_copy_flags_get_type")
external fun g_file_copy_flags_get_type(): GType

@CCall("knifunptr_glibjson3256_g_file_monitor_flags_get_type")
external fun g_file_monitor_flags_get_type(): GType

@CCall("knifunptr_glibjson3257_g_file_type_get_type")
external fun g_file_type_get_type(): GType

@CCall("knifunptr_glibjson3258_g_filesystem_preview_type_get_type")
external fun g_filesystem_preview_type_get_type(): GType

@CCall("knifunptr_glibjson3259_g_file_monitor_event_get_type")
external fun g_file_monitor_event_get_type(): GType

@CCall("knifunptr_glibjson3260_g_io_error_enum_get_type")
external fun g_io_error_enum_get_type(): GType

@CCall("knifunptr_glibjson3261_g_ask_password_flags_get_type")
external fun g_ask_password_flags_get_type(): GType

@CCall("knifunptr_glibjson3262_g_password_save_get_type")
external fun g_password_save_get_type(): GType

@CCall("knifunptr_glibjson3263_g_mount_operation_result_get_type")
external fun g_mount_operation_result_get_type(): GType

@CCall("knifunptr_glibjson3264_g_output_stream_splice_flags_get_type")
external fun g_output_stream_splice_flags_get_type(): GType

@CCall("knifunptr_glibjson3265_g_io_stream_splice_flags_get_type")
external fun g_io_stream_splice_flags_get_type(): GType

@CCall("knifunptr_glibjson3266_g_emblem_origin_get_type")
external fun g_emblem_origin_get_type(): GType

@CCall("knifunptr_glibjson3267_g_resolver_error_get_type")
external fun g_resolver_error_get_type(): GType

@CCall("knifunptr_glibjson3268_g_resolver_record_type_get_type")
external fun g_resolver_record_type_get_type(): GType

@CCall("knifunptr_glibjson3269_g_resource_error_get_type")
external fun g_resource_error_get_type(): GType

@CCall("knifunptr_glibjson3270_g_resource_flags_get_type")
external fun g_resource_flags_get_type(): GType

@CCall("knifunptr_glibjson3271_g_resource_lookup_flags_get_type")
external fun g_resource_lookup_flags_get_type(): GType

@CCall("knifunptr_glibjson3272_g_socket_family_get_type")
external fun g_socket_family_get_type(): GType

@CCall("knifunptr_glibjson3273_g_socket_type_get_type")
external fun g_socket_type_get_type(): GType

@CCall("knifunptr_glibjson3274_g_socket_msg_flags_get_type")
external fun g_socket_msg_flags_get_type(): GType

@CCall("knifunptr_glibjson3275_g_socket_protocol_get_type")
external fun g_socket_protocol_get_type(): GType

@CCall("knifunptr_glibjson3276_g_zlib_compressor_format_get_type")
external fun g_zlib_compressor_format_get_type(): GType

@CCall("knifunptr_glibjson3277_g_unix_socket_address_type_get_type")
external fun g_unix_socket_address_type_get_type(): GType

@CCall("knifunptr_glibjson3278_g_bus_type_get_type")
external fun g_bus_type_get_type(): GType

@CCall("knifunptr_glibjson3279_g_bus_name_owner_flags_get_type")
external fun g_bus_name_owner_flags_get_type(): GType

@CCall("knifunptr_glibjson3280_g_bus_name_watcher_flags_get_type")
external fun g_bus_name_watcher_flags_get_type(): GType

@CCall("knifunptr_glibjson3281_g_dbus_proxy_flags_get_type")
external fun g_dbus_proxy_flags_get_type(): GType

@CCall("knifunptr_glibjson3282_g_dbus_error_get_type")
external fun g_dbus_error_get_type(): GType

@CCall("knifunptr_glibjson3283_g_dbus_connection_flags_get_type")
external fun g_dbus_connection_flags_get_type(): GType

@CCall("knifunptr_glibjson3284_g_dbus_capability_flags_get_type")
external fun g_dbus_capability_flags_get_type(): GType

@CCall("knifunptr_glibjson3285_g_dbus_call_flags_get_type")
external fun g_dbus_call_flags_get_type(): GType

@CCall("knifunptr_glibjson3286_g_dbus_message_type_get_type")
external fun g_dbus_message_type_get_type(): GType

@CCall("knifunptr_glibjson3287_g_dbus_message_flags_get_type")
external fun g_dbus_message_flags_get_type(): GType

@CCall("knifunptr_glibjson3288_g_dbus_message_header_field_get_type")
external fun g_dbus_message_header_field_get_type(): GType

@CCall("knifunptr_glibjson3289_g_dbus_property_info_flags_get_type")
external fun g_dbus_property_info_flags_get_type(): GType

@CCall("knifunptr_glibjson3290_g_dbus_subtree_flags_get_type")
external fun g_dbus_subtree_flags_get_type(): GType

@CCall("knifunptr_glibjson3291_g_dbus_server_flags_get_type")
external fun g_dbus_server_flags_get_type(): GType

@CCall("knifunptr_glibjson3292_g_dbus_signal_flags_get_type")
external fun g_dbus_signal_flags_get_type(): GType

@CCall("knifunptr_glibjson3293_g_dbus_send_message_flags_get_type")
external fun g_dbus_send_message_flags_get_type(): GType

@CCall("knifunptr_glibjson3294_g_credentials_type_get_type")
external fun g_credentials_type_get_type(): GType

@CCall("knifunptr_glibjson3295_g_dbus_message_byte_order_get_type")
external fun g_dbus_message_byte_order_get_type(): GType

@CCall("knifunptr_glibjson3296_g_application_flags_get_type")
external fun g_application_flags_get_type(): GType

@CCall("knifunptr_glibjson3297_g_tls_error_get_type")
external fun g_tls_error_get_type(): GType

@CCall("knifunptr_glibjson3298_g_tls_certificate_flags_get_type")
external fun g_tls_certificate_flags_get_type(): GType

@CCall("knifunptr_glibjson3299_g_tls_authentication_mode_get_type")
external fun g_tls_authentication_mode_get_type(): GType

@CCall("knifunptr_glibjson3300_g_tls_rehandshake_mode_get_type")
external fun g_tls_rehandshake_mode_get_type(): GType

@CCall("knifunptr_glibjson3301_g_tls_password_flags_get_type")
external fun g_tls_password_flags_get_type(): GType

@CCall("knifunptr_glibjson3302_g_tls_interaction_result_get_type")
external fun g_tls_interaction_result_get_type(): GType

@CCall("knifunptr_glibjson3303_g_dbus_interface_skeleton_flags_get_type")
external fun g_dbus_interface_skeleton_flags_get_type(): GType

@CCall("knifunptr_glibjson3304_g_dbus_object_manager_client_flags_get_type")
external fun g_dbus_object_manager_client_flags_get_type(): GType

@CCall("knifunptr_glibjson3305_g_tls_database_verify_flags_get_type")
external fun g_tls_database_verify_flags_get_type(): GType

@CCall("knifunptr_glibjson3306_g_tls_database_lookup_flags_get_type")
external fun g_tls_database_lookup_flags_get_type(): GType

@CCall("knifunptr_glibjson3307_g_tls_certificate_request_flags_get_type")
external fun g_tls_certificate_request_flags_get_type(): GType

@CCall("knifunptr_glibjson3308_g_io_module_scope_flags_get_type")
external fun g_io_module_scope_flags_get_type(): GType

@CCall("knifunptr_glibjson3309_g_socket_client_event_get_type")
external fun g_socket_client_event_get_type(): GType

@CCall("knifunptr_glibjson3310_g_socket_listener_event_get_type")
external fun g_socket_listener_event_get_type(): GType

@CCall("knifunptr_glibjson3311_g_test_dbus_flags_get_type")
external fun g_test_dbus_flags_get_type(): GType

@CCall("knifunptr_glibjson3312_g_subprocess_flags_get_type")
external fun g_subprocess_flags_get_type(): GType

@CCall("knifunptr_glibjson3313_g_notification_priority_get_type")
external fun g_notification_priority_get_type(): GType

@CCall("knifunptr_glibjson3314_g_network_connectivity_get_type")
external fun g_network_connectivity_get_type(): GType

@CCall("knifunptr_glibjson3315_g_settings_bind_flags_get_type")
external fun g_settings_bind_flags_get_type(): GType

@CCall("knifunptr_glibjson3316_g_module_supported")
external fun g_module_supported(): gboolean

@CCall("knifunptr_glibjson3317_g_module_open")
external fun g_module_open(@CCall.CString file_name: String?, flags: GModuleFlags): CPointer<GModule>?

@CCall("knifunptr_glibjson3318_g_module_close")
external fun g_module_close(module: CValuesRef<GModule>?): gboolean

@CCall("knifunptr_glibjson3319_g_module_make_resident")
external fun g_module_make_resident(module: CValuesRef<GModule>?): Unit

@CCall("knifunptr_glibjson3320_g_module_error")
external fun g_module_error(): CPointer<gcharVar>?

@CCall("knifunptr_glibjson3321_g_module_symbol")
external fun g_module_symbol(module: CValuesRef<GModule>?, @CCall.CString symbol_name: String?, symbol: CValuesRef<gpointerVar>?): gboolean

@CCall("knifunptr_glibjson3322_g_module_name")
external fun g_module_name(module: CValuesRef<GModule>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson3323_g_module_build_path")
external fun g_module_build_path(@CCall.CString directory: String?, @CCall.CString module_name: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson3324_g_io_module_scope_new")
external fun g_io_module_scope_new(flags: GIOModuleScopeFlags): CPointer<GIOModuleScope>?

@CCall("knifunptr_glibjson3325_g_io_module_scope_free")
external fun g_io_module_scope_free(scope: CValuesRef<GIOModuleScope>?): Unit

@CCall("knifunptr_glibjson3326_g_io_module_scope_block")
external fun g_io_module_scope_block(scope: CValuesRef<GIOModuleScope>?, @CCall.CString basename: String?): Unit

@CCall("knifunptr_glibjson3327_g_io_module_get_type")
external fun g_io_module_get_type(): GType

@CCall("knifunptr_glibjson3328_g_io_module_new")
external fun g_io_module_new(@CCall.CString filename: String?): CPointer<GIOModule>?

@CCall("knifunptr_glibjson3329_g_io_modules_scan_all_in_directory")
external fun g_io_modules_scan_all_in_directory(@CCall.CString dirname: String?): Unit

@CCall("knifunptr_glibjson3330_g_io_modules_load_all_in_directory")
external fun g_io_modules_load_all_in_directory(@CCall.CString dirname: String?): CPointer<GList>?

@CCall("knifunptr_glibjson3331_g_io_modules_scan_all_in_directory_with_scope")
external fun g_io_modules_scan_all_in_directory_with_scope(@CCall.CString dirname: String?, scope: CValuesRef<GIOModuleScope>?): Unit

@CCall("knifunptr_glibjson3332_g_io_modules_load_all_in_directory_with_scope")
external fun g_io_modules_load_all_in_directory_with_scope(@CCall.CString dirname: String?, scope: CValuesRef<GIOModuleScope>?): CPointer<GList>?

@CCall("knifunptr_glibjson3333_g_io_extension_point_register")
external fun g_io_extension_point_register(@CCall.CString name: String?): CPointer<GIOExtensionPoint>?

@CCall("knifunptr_glibjson3334_g_io_extension_point_lookup")
external fun g_io_extension_point_lookup(@CCall.CString name: String?): CPointer<GIOExtensionPoint>?

@CCall("knifunptr_glibjson3335_g_io_extension_point_set_required_type")
external fun g_io_extension_point_set_required_type(extension_point: CValuesRef<GIOExtensionPoint>?, type: GType): Unit

@CCall("knifunptr_glibjson3336_g_io_extension_point_get_required_type")
external fun g_io_extension_point_get_required_type(extension_point: CValuesRef<GIOExtensionPoint>?): GType

@CCall("knifunptr_glibjson3337_g_io_extension_point_get_extensions")
external fun g_io_extension_point_get_extensions(extension_point: CValuesRef<GIOExtensionPoint>?): CPointer<GList>?

@CCall("knifunptr_glibjson3338_g_io_extension_point_get_extension_by_name")
external fun g_io_extension_point_get_extension_by_name(extension_point: CValuesRef<GIOExtensionPoint>?, @CCall.CString name: String?): CPointer<GIOExtension>?

@CCall("knifunptr_glibjson3339_g_io_extension_point_implement")
external fun g_io_extension_point_implement(@CCall.CString extension_point_name: String?, type: GType, @CCall.CString extension_name: String?, priority: gint): CPointer<GIOExtension>?

@CCall("knifunptr_glibjson3340_g_io_extension_get_type")
external fun g_io_extension_get_type(extension: CValuesRef<GIOExtension>?): GType

@CCall("knifunptr_glibjson3341_g_io_extension_get_name")
external fun g_io_extension_get_name(extension: CValuesRef<GIOExtension>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson3342_g_io_extension_get_priority")
external fun g_io_extension_get_priority(extension: CValuesRef<GIOExtension>?): gint

@CCall("knifunptr_glibjson3343_g_io_extension_ref_class")
external fun g_io_extension_ref_class(extension: CValuesRef<GIOExtension>?): CPointer<GTypeClass>?

@CCall("knifunptr_glibjson3344_g_io_module_load")
external fun g_io_module_load(module: CValuesRef<GIOModule>?): Unit

@CCall("knifunptr_glibjson3345_g_io_module_unload")
external fun g_io_module_unload(module: CValuesRef<GIOModule>?): Unit

@CCall("knifunptr_glibjson3346_g_io_module_query")
external fun g_io_module_query(): CPointer<CPointerVar<ByteVar>>?

@CCall("knifunptr_glibjson3347_g_io_scheduler_push_job")
external fun g_io_scheduler_push_job(job_func: GIOSchedulerJobFunc?, user_data: gpointer?, notify: GDestroyNotify?, io_priority: gint, cancellable: CValuesRef<GCancellable>?): Unit

@CCall("knifunptr_glibjson3348_g_io_scheduler_cancel_all_jobs")
external fun g_io_scheduler_cancel_all_jobs(): Unit

@CCall("knifunptr_glibjson3349_g_io_scheduler_job_send_to_mainloop")
external fun g_io_scheduler_job_send_to_mainloop(job: CValuesRef<GIOSchedulerJob>?, func: GSourceFunc?, user_data: gpointer?, notify: GDestroyNotify?): gboolean

@CCall("knifunptr_glibjson3350_g_io_scheduler_job_send_to_mainloop_async")
external fun g_io_scheduler_job_send_to_mainloop_async(job: CValuesRef<GIOSchedulerJob>?, func: GSourceFunc?, user_data: gpointer?, notify: GDestroyNotify?): Unit

@CCall("knifunptr_glibjson3351_g_loadable_icon_get_type")
external fun g_loadable_icon_get_type(): GType

@CCall("knifunptr_glibjson3352_g_loadable_icon_load")
external fun g_loadable_icon_load(icon: CValuesRef<GLoadableIcon>?, size: Int, type: CValuesRef<CPointerVar<ByteVar>>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GInputStream>?

@CCall("knifunptr_glibjson3353_g_loadable_icon_load_async")
external fun g_loadable_icon_load_async(icon: CValuesRef<GLoadableIcon>?, size: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3354_g_loadable_icon_load_finish")
external fun g_loadable_icon_load_finish(icon: CValuesRef<GLoadableIcon>?, res: CValuesRef<GAsyncResult>?, type: CValuesRef<CPointerVar<ByteVar>>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GInputStream>?

@CCall("knifunptr_glibjson3355_g_memory_input_stream_get_type")
external fun g_memory_input_stream_get_type(): GType

@CCall("knifunptr_glibjson3356_g_memory_input_stream_new")
external fun g_memory_input_stream_new(): CPointer<GInputStream>?

@CCall("knifunptr_glibjson3357_g_memory_input_stream_new_from_data")
external fun g_memory_input_stream_new_from_data(data: CValuesRef<*>?, len: gssize, destroy: GDestroyNotify?): CPointer<GInputStream>?

@CCall("knifunptr_glibjson3358_g_memory_input_stream_new_from_bytes")
external fun g_memory_input_stream_new_from_bytes(bytes: CValuesRef<GBytes>?): CPointer<GInputStream>?

@CCall("knifunptr_glibjson3359_g_memory_input_stream_add_data")
external fun g_memory_input_stream_add_data(stream: CValuesRef<GMemoryInputStream>?, data: CValuesRef<*>?, len: gssize, destroy: GDestroyNotify?): Unit

@CCall("knifunptr_glibjson3360_g_memory_input_stream_add_bytes")
external fun g_memory_input_stream_add_bytes(stream: CValuesRef<GMemoryInputStream>?, bytes: CValuesRef<GBytes>?): Unit

@CCall("knifunptr_glibjson3361_g_memory_output_stream_get_type")
external fun g_memory_output_stream_get_type(): GType

@CCall("knifunptr_glibjson3362_g_memory_output_stream_new")
external fun g_memory_output_stream_new(data: gpointer?, size: gsize, realloc_function: GReallocFunc?, destroy_function: GDestroyNotify?): CPointer<GOutputStream>?

@CCall("knifunptr_glibjson3363_g_memory_output_stream_new_resizable")
external fun g_memory_output_stream_new_resizable(): CPointer<GOutputStream>?

@CCall("knifunptr_glibjson3364_g_memory_output_stream_get_data")
external fun g_memory_output_stream_get_data(ostream: CValuesRef<GMemoryOutputStream>?): gpointer?

@CCall("knifunptr_glibjson3365_g_memory_output_stream_get_size")
external fun g_memory_output_stream_get_size(ostream: CValuesRef<GMemoryOutputStream>?): gsize

@CCall("knifunptr_glibjson3366_g_memory_output_stream_get_data_size")
external fun g_memory_output_stream_get_data_size(ostream: CValuesRef<GMemoryOutputStream>?): gsize

@CCall("knifunptr_glibjson3367_g_memory_output_stream_steal_data")
external fun g_memory_output_stream_steal_data(ostream: CValuesRef<GMemoryOutputStream>?): gpointer?

@CCall("knifunptr_glibjson3368_g_memory_output_stream_steal_as_bytes")
external fun g_memory_output_stream_steal_as_bytes(ostream: CValuesRef<GMemoryOutputStream>?): CPointer<GBytes>?

@CCall("knifunptr_glibjson3369_g_mount_get_type")
external fun g_mount_get_type(): GType

@CCall("knifunptr_glibjson3370_g_mount_get_root")
external fun g_mount_get_root(mount: CValuesRef<GMount>?): CPointer<GFile>?

@CCall("knifunptr_glibjson3371_g_mount_get_default_location")
external fun g_mount_get_default_location(mount: CValuesRef<GMount>?): CPointer<GFile>?

@CCall("knifunptr_glibjson3372_g_mount_get_name")
external fun g_mount_get_name(mount: CValuesRef<GMount>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson3373_g_mount_get_icon")
external fun g_mount_get_icon(mount: CValuesRef<GMount>?): CPointer<GIcon>?

@CCall("knifunptr_glibjson3374_g_mount_get_symbolic_icon")
external fun g_mount_get_symbolic_icon(mount: CValuesRef<GMount>?): CPointer<GIcon>?

@CCall("knifunptr_glibjson3375_g_mount_get_uuid")
external fun g_mount_get_uuid(mount: CValuesRef<GMount>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson3376_g_mount_get_volume")
external fun g_mount_get_volume(mount: CValuesRef<GMount>?): CPointer<GVolume>?

@CCall("knifunptr_glibjson3377_g_mount_get_drive")
external fun g_mount_get_drive(mount: CValuesRef<GMount>?): CPointer<GDrive>?

@CCall("knifunptr_glibjson3378_g_mount_can_unmount")
external fun g_mount_can_unmount(mount: CValuesRef<GMount>?): gboolean

@CCall("knifunptr_glibjson3379_g_mount_can_eject")
external fun g_mount_can_eject(mount: CValuesRef<GMount>?): gboolean

@CCall("knifunptr_glibjson3380_g_mount_unmount")
external fun g_mount_unmount(mount: CValuesRef<GMount>?, flags: GMountUnmountFlags, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3381_g_mount_unmount_finish")
external fun g_mount_unmount_finish(mount: CValuesRef<GMount>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3382_g_mount_eject")
external fun g_mount_eject(mount: CValuesRef<GMount>?, flags: GMountUnmountFlags, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3383_g_mount_eject_finish")
external fun g_mount_eject_finish(mount: CValuesRef<GMount>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3384_g_mount_remount")
external fun g_mount_remount(mount: CValuesRef<GMount>?, flags: GMountMountFlags, mount_operation: CValuesRef<GMountOperation>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3385_g_mount_remount_finish")
external fun g_mount_remount_finish(mount: CValuesRef<GMount>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3386_g_mount_guess_content_type")
external fun g_mount_guess_content_type(mount: CValuesRef<GMount>?, force_rescan: gboolean, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3387_g_mount_guess_content_type_finish")
external fun g_mount_guess_content_type_finish(mount: CValuesRef<GMount>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson3388_g_mount_guess_content_type_sync")
external fun g_mount_guess_content_type_sync(mount: CValuesRef<GMount>?, force_rescan: gboolean, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson3389_g_mount_is_shadowed")
external fun g_mount_is_shadowed(mount: CValuesRef<GMount>?): gboolean

@CCall("knifunptr_glibjson3390_g_mount_shadow")
external fun g_mount_shadow(mount: CValuesRef<GMount>?): Unit

@CCall("knifunptr_glibjson3391_g_mount_unshadow")
external fun g_mount_unshadow(mount: CValuesRef<GMount>?): Unit

@CCall("knifunptr_glibjson3392_g_mount_unmount_with_operation")
external fun g_mount_unmount_with_operation(mount: CValuesRef<GMount>?, flags: GMountUnmountFlags, mount_operation: CValuesRef<GMountOperation>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3393_g_mount_unmount_with_operation_finish")
external fun g_mount_unmount_with_operation_finish(mount: CValuesRef<GMount>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3394_g_mount_eject_with_operation")
external fun g_mount_eject_with_operation(mount: CValuesRef<GMount>?, flags: GMountUnmountFlags, mount_operation: CValuesRef<GMountOperation>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3395_g_mount_eject_with_operation_finish")
external fun g_mount_eject_with_operation_finish(mount: CValuesRef<GMount>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3396_g_mount_get_sort_key")
external fun g_mount_get_sort_key(mount: CValuesRef<GMount>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson3397_g_mount_operation_get_type")
external fun g_mount_operation_get_type(): GType

@CCall("knifunptr_glibjson3398_g_mount_operation_new")
external fun g_mount_operation_new(): CPointer<GMountOperation>?

@CCall("knifunptr_glibjson3399_g_mount_operation_get_username")
external fun g_mount_operation_get_username(op: CValuesRef<GMountOperation>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson3400_g_mount_operation_set_username")
external fun g_mount_operation_set_username(op: CValuesRef<GMountOperation>?, @CCall.CString username: String?): Unit

@CCall("knifunptr_glibjson3401_g_mount_operation_get_password")
external fun g_mount_operation_get_password(op: CValuesRef<GMountOperation>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson3402_g_mount_operation_set_password")
external fun g_mount_operation_set_password(op: CValuesRef<GMountOperation>?, @CCall.CString password: String?): Unit

@CCall("knifunptr_glibjson3403_g_mount_operation_get_anonymous")
external fun g_mount_operation_get_anonymous(op: CValuesRef<GMountOperation>?): gboolean

@CCall("knifunptr_glibjson3404_g_mount_operation_set_anonymous")
external fun g_mount_operation_set_anonymous(op: CValuesRef<GMountOperation>?, anonymous: gboolean): Unit

@CCall("knifunptr_glibjson3405_g_mount_operation_get_domain")
external fun g_mount_operation_get_domain(op: CValuesRef<GMountOperation>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson3406_g_mount_operation_set_domain")
external fun g_mount_operation_set_domain(op: CValuesRef<GMountOperation>?, @CCall.CString domain: String?): Unit

@CCall("knifunptr_glibjson3407_g_mount_operation_get_password_save")
external fun g_mount_operation_get_password_save(op: CValuesRef<GMountOperation>?): GPasswordSave

@CCall("knifunptr_glibjson3408_g_mount_operation_set_password_save")
external fun g_mount_operation_set_password_save(op: CValuesRef<GMountOperation>?, save: GPasswordSave): Unit

@CCall("knifunptr_glibjson3409_g_mount_operation_get_choice")
external fun g_mount_operation_get_choice(op: CValuesRef<GMountOperation>?): Int

@CCall("knifunptr_glibjson3410_g_mount_operation_set_choice")
external fun g_mount_operation_set_choice(op: CValuesRef<GMountOperation>?, choice: Int): Unit

@CCall("knifunptr_glibjson3411_g_mount_operation_reply")
external fun g_mount_operation_reply(op: CValuesRef<GMountOperation>?, result: GMountOperationResult): Unit

@CCall("knifunptr_glibjson3412_g_volume_monitor_get_type")
external fun g_volume_monitor_get_type(): GType

@CCall("knifunptr_glibjson3413_g_volume_monitor_get")
external fun g_volume_monitor_get(): CPointer<GVolumeMonitor>?

@CCall("knifunptr_glibjson3414_g_volume_monitor_get_connected_drives")
external fun g_volume_monitor_get_connected_drives(volume_monitor: CValuesRef<GVolumeMonitor>?): CPointer<GList>?

@CCall("knifunptr_glibjson3415_g_volume_monitor_get_volumes")
external fun g_volume_monitor_get_volumes(volume_monitor: CValuesRef<GVolumeMonitor>?): CPointer<GList>?

@CCall("knifunptr_glibjson3416_g_volume_monitor_get_mounts")
external fun g_volume_monitor_get_mounts(volume_monitor: CValuesRef<GVolumeMonitor>?): CPointer<GList>?

@CCall("knifunptr_glibjson3417_g_volume_monitor_get_volume_for_uuid")
external fun g_volume_monitor_get_volume_for_uuid(volume_monitor: CValuesRef<GVolumeMonitor>?, @CCall.CString uuid: String?): CPointer<GVolume>?

@CCall("knifunptr_glibjson3418_g_volume_monitor_get_mount_for_uuid")
external fun g_volume_monitor_get_mount_for_uuid(volume_monitor: CValuesRef<GVolumeMonitor>?, @CCall.CString uuid: String?): CPointer<GMount>?

@CCall("knifunptr_glibjson3419_g_volume_monitor_adopt_orphan_mount")
external fun g_volume_monitor_adopt_orphan_mount(mount: CValuesRef<GMount>?): CPointer<GVolume>?

@CCall("knifunptr_glibjson3420_g_native_volume_monitor_get_type")
external fun g_native_volume_monitor_get_type(): GType

@CCall("knifunptr_glibjson3421_g_network_address_get_type")
external fun g_network_address_get_type(): GType

@CCall("knifunptr_glibjson3422_g_network_address_new")
external fun g_network_address_new(@CCall.CString hostname: String?, port: guint16): CPointer<GSocketConnectable>?

@CCall("knifunptr_glibjson3423_g_network_address_new_loopback")
external fun g_network_address_new_loopback(port: guint16): CPointer<GSocketConnectable>?

@CCall("knifunptr_glibjson3424_g_network_address_parse")
external fun g_network_address_parse(@CCall.CString host_and_port: String?, default_port: guint16, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocketConnectable>?

@CCall("knifunptr_glibjson3425_g_network_address_parse_uri")
external fun g_network_address_parse_uri(@CCall.CString uri: String?, default_port: guint16, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocketConnectable>?

@CCall("knifunptr_glibjson3426_g_network_address_get_hostname")
external fun g_network_address_get_hostname(addr: CValuesRef<GNetworkAddress>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson3427_g_network_address_get_port")
external fun g_network_address_get_port(addr: CValuesRef<GNetworkAddress>?): guint16

@CCall("knifunptr_glibjson3428_g_network_address_get_scheme")
external fun g_network_address_get_scheme(addr: CValuesRef<GNetworkAddress>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson3429_g_network_monitor_get_type")
external fun g_network_monitor_get_type(): GType

@CCall("knifunptr_glibjson3430_g_network_monitor_get_default")
external fun g_network_monitor_get_default(): CPointer<GNetworkMonitor>?

@CCall("knifunptr_glibjson3431_g_network_monitor_get_network_available")
external fun g_network_monitor_get_network_available(monitor: CValuesRef<GNetworkMonitor>?): gboolean

@CCall("knifunptr_glibjson3432_g_network_monitor_get_network_metered")
external fun g_network_monitor_get_network_metered(monitor: CValuesRef<GNetworkMonitor>?): gboolean

@CCall("knifunptr_glibjson3433_g_network_monitor_get_connectivity")
external fun g_network_monitor_get_connectivity(monitor: CValuesRef<GNetworkMonitor>?): GNetworkConnectivity

@CCall("knifunptr_glibjson3434_g_network_monitor_can_reach")
external fun g_network_monitor_can_reach(monitor: CValuesRef<GNetworkMonitor>?, connectable: CValuesRef<GSocketConnectable>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3435_g_network_monitor_can_reach_async")
external fun g_network_monitor_can_reach_async(monitor: CValuesRef<GNetworkMonitor>?, connectable: CValuesRef<GSocketConnectable>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3436_g_network_monitor_can_reach_finish")
external fun g_network_monitor_can_reach_finish(monitor: CValuesRef<GNetworkMonitor>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3437_g_network_service_get_type")
external fun g_network_service_get_type(): GType

@CCall("knifunptr_glibjson3438_g_network_service_new")
external fun g_network_service_new(@CCall.CString service: String?, @CCall.CString protocol: String?, @CCall.CString domain: String?): CPointer<GSocketConnectable>?

@CCall("knifunptr_glibjson3439_g_network_service_get_service")
external fun g_network_service_get_service(srv: CValuesRef<GNetworkService>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson3440_g_network_service_get_protocol")
external fun g_network_service_get_protocol(srv: CValuesRef<GNetworkService>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson3441_g_network_service_get_domain")
external fun g_network_service_get_domain(srv: CValuesRef<GNetworkService>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson3442_g_network_service_get_scheme")
external fun g_network_service_get_scheme(srv: CValuesRef<GNetworkService>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson3443_g_network_service_set_scheme")
external fun g_network_service_set_scheme(srv: CValuesRef<GNetworkService>?, @CCall.CString scheme: String?): Unit

@CCall("knifunptr_glibjson3444_g_permission_get_type")
external fun g_permission_get_type(): GType

@CCall("knifunptr_glibjson3445_g_permission_acquire")
external fun g_permission_acquire(permission: CValuesRef<GPermission>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3446_g_permission_acquire_async")
external fun g_permission_acquire_async(permission: CValuesRef<GPermission>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3447_g_permission_acquire_finish")
external fun g_permission_acquire_finish(permission: CValuesRef<GPermission>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3448_g_permission_release")
external fun g_permission_release(permission: CValuesRef<GPermission>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3449_g_permission_release_async")
external fun g_permission_release_async(permission: CValuesRef<GPermission>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3450_g_permission_release_finish")
external fun g_permission_release_finish(permission: CValuesRef<GPermission>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3451_g_permission_get_allowed")
external fun g_permission_get_allowed(permission: CValuesRef<GPermission>?): gboolean

@CCall("knifunptr_glibjson3452_g_permission_get_can_acquire")
external fun g_permission_get_can_acquire(permission: CValuesRef<GPermission>?): gboolean

@CCall("knifunptr_glibjson3453_g_permission_get_can_release")
external fun g_permission_get_can_release(permission: CValuesRef<GPermission>?): gboolean

@CCall("knifunptr_glibjson3454_g_permission_impl_update")
external fun g_permission_impl_update(permission: CValuesRef<GPermission>?, allowed: gboolean, can_acquire: gboolean, can_release: gboolean): Unit

@CCall("knifunptr_glibjson3455_g_pollable_input_stream_get_type")
external fun g_pollable_input_stream_get_type(): GType

@CCall("knifunptr_glibjson3456_g_pollable_input_stream_can_poll")
external fun g_pollable_input_stream_can_poll(stream: CValuesRef<GPollableInputStream>?): gboolean

@CCall("knifunptr_glibjson3457_g_pollable_input_stream_is_readable")
external fun g_pollable_input_stream_is_readable(stream: CValuesRef<GPollableInputStream>?): gboolean

@CCall("knifunptr_glibjson3458_g_pollable_input_stream_create_source")
external fun g_pollable_input_stream_create_source(stream: CValuesRef<GPollableInputStream>?, cancellable: CValuesRef<GCancellable>?): CPointer<GSource>?

@CCall("knifunptr_glibjson3459_g_pollable_input_stream_read_nonblocking")
external fun g_pollable_input_stream_read_nonblocking(stream: CValuesRef<GPollableInputStream>?, buffer: CValuesRef<*>?, count: gsize, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_glibjson3460_g_pollable_output_stream_get_type")
external fun g_pollable_output_stream_get_type(): GType

@CCall("knifunptr_glibjson3461_g_pollable_output_stream_can_poll")
external fun g_pollable_output_stream_can_poll(stream: CValuesRef<GPollableOutputStream>?): gboolean

@CCall("knifunptr_glibjson3462_g_pollable_output_stream_is_writable")
external fun g_pollable_output_stream_is_writable(stream: CValuesRef<GPollableOutputStream>?): gboolean

@CCall("knifunptr_glibjson3463_g_pollable_output_stream_create_source")
external fun g_pollable_output_stream_create_source(stream: CValuesRef<GPollableOutputStream>?, cancellable: CValuesRef<GCancellable>?): CPointer<GSource>?

@CCall("knifunptr_glibjson3464_g_pollable_output_stream_write_nonblocking")
external fun g_pollable_output_stream_write_nonblocking(stream: CValuesRef<GPollableOutputStream>?, buffer: CValuesRef<*>?, count: gsize, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_glibjson3465_g_pollable_source_new")
external fun g_pollable_source_new(pollable_stream: CValuesRef<GObject>?): CPointer<GSource>?

@CCall("knifunptr_glibjson3466_g_pollable_source_new_full")
external fun g_pollable_source_new_full(pollable_stream: gpointer?, child_source: CValuesRef<GSource>?, cancellable: CValuesRef<GCancellable>?): CPointer<GSource>?

@CCall("knifunptr_glibjson3467_g_pollable_stream_read")
external fun g_pollable_stream_read(stream: CValuesRef<GInputStream>?, buffer: CValuesRef<*>?, count: gsize, blocking: gboolean, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_glibjson3468_g_pollable_stream_write")
external fun g_pollable_stream_write(stream: CValuesRef<GOutputStream>?, buffer: CValuesRef<*>?, count: gsize, blocking: gboolean, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_glibjson3469_g_pollable_stream_write_all")
external fun g_pollable_stream_write_all(stream: CValuesRef<GOutputStream>?, buffer: CValuesRef<*>?, count: gsize, blocking: gboolean, bytes_written: CValuesRef<gsizeVar>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3470_g_property_action_get_type")
external fun g_property_action_get_type(): GType

@CCall("knifunptr_glibjson3471_g_property_action_new")
external fun g_property_action_new(@CCall.CString name: String?, `object`: gpointer?, @CCall.CString property_name: String?): CPointer<GPropertyAction>?

@CCall("knifunptr_glibjson3472_g_proxy_get_type")
external fun g_proxy_get_type(): GType

@CCall("knifunptr_glibjson3473_g_proxy_get_default_for_protocol")
external fun g_proxy_get_default_for_protocol(@CCall.CString protocol: String?): CPointer<GProxy>?

@CCall("knifunptr_glibjson3474_g_proxy_connect")
external fun g_proxy_connect(proxy: CValuesRef<GProxy>?, connection: CValuesRef<GIOStream>?, proxy_address: CValuesRef<GProxyAddress>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GIOStream>?

@CCall("knifunptr_glibjson3475_g_proxy_connect_async")
external fun g_proxy_connect_async(proxy: CValuesRef<GProxy>?, connection: CValuesRef<GIOStream>?, proxy_address: CValuesRef<GProxyAddress>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3476_g_proxy_connect_finish")
external fun g_proxy_connect_finish(proxy: CValuesRef<GProxy>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GIOStream>?

@CCall("knifunptr_glibjson3477_g_proxy_supports_hostname")
external fun g_proxy_supports_hostname(proxy: CValuesRef<GProxy>?): gboolean

@CCall("knifunptr_glibjson3478_g_proxy_address_get_type")
external fun g_proxy_address_get_type(): GType

@CCall("knifunptr_glibjson3479_g_proxy_address_new")
external fun g_proxy_address_new(inetaddr: CValuesRef<GInetAddress>?, port: guint16, @CCall.CString protocol: String?, @CCall.CString dest_hostname: String?, dest_port: guint16, @CCall.CString username: String?, @CCall.CString password: String?): CPointer<GSocketAddress>?

@CCall("knifunptr_glibjson3480_g_proxy_address_get_protocol")
external fun g_proxy_address_get_protocol(proxy: CValuesRef<GProxyAddress>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson3481_g_proxy_address_get_destination_protocol")
external fun g_proxy_address_get_destination_protocol(proxy: CValuesRef<GProxyAddress>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson3482_g_proxy_address_get_destination_hostname")
external fun g_proxy_address_get_destination_hostname(proxy: CValuesRef<GProxyAddress>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson3483_g_proxy_address_get_destination_port")
external fun g_proxy_address_get_destination_port(proxy: CValuesRef<GProxyAddress>?): guint16

@CCall("knifunptr_glibjson3484_g_proxy_address_get_username")
external fun g_proxy_address_get_username(proxy: CValuesRef<GProxyAddress>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson3485_g_proxy_address_get_password")
external fun g_proxy_address_get_password(proxy: CValuesRef<GProxyAddress>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson3486_g_proxy_address_get_uri")
external fun g_proxy_address_get_uri(proxy: CValuesRef<GProxyAddress>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson3487_g_socket_address_enumerator_get_type")
external fun g_socket_address_enumerator_get_type(): GType

@CCall("knifunptr_glibjson3488_g_socket_address_enumerator_next")
external fun g_socket_address_enumerator_next(enumerator: CValuesRef<GSocketAddressEnumerator>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocketAddress>?

@CCall("knifunptr_glibjson3489_g_socket_address_enumerator_next_async")
external fun g_socket_address_enumerator_next_async(enumerator: CValuesRef<GSocketAddressEnumerator>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3490_g_socket_address_enumerator_next_finish")
external fun g_socket_address_enumerator_next_finish(enumerator: CValuesRef<GSocketAddressEnumerator>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocketAddress>?

@CCall("knifunptr_glibjson3491_g_proxy_address_enumerator_get_type")
external fun g_proxy_address_enumerator_get_type(): GType

@CCall("knifunptr_glibjson3492_g_proxy_resolver_get_type")
external fun g_proxy_resolver_get_type(): GType

@CCall("knifunptr_glibjson3493_g_proxy_resolver_get_default")
external fun g_proxy_resolver_get_default(): CPointer<GProxyResolver>?

@CCall("knifunptr_glibjson3494_g_proxy_resolver_is_supported")
external fun g_proxy_resolver_is_supported(resolver: CValuesRef<GProxyResolver>?): gboolean

@CCall("knifunptr_glibjson3495_g_proxy_resolver_lookup")
external fun g_proxy_resolver_lookup(resolver: CValuesRef<GProxyResolver>?, @CCall.CString uri: String?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson3496_g_proxy_resolver_lookup_async")
external fun g_proxy_resolver_lookup_async(resolver: CValuesRef<GProxyResolver>?, @CCall.CString uri: String?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3497_g_proxy_resolver_lookup_finish")
external fun g_proxy_resolver_lookup_finish(resolver: CValuesRef<GProxyResolver>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson3498_g_resolver_get_type")
external fun g_resolver_get_type(): GType

@CCall("knifunptr_glibjson3499_g_resolver_get_default")
external fun g_resolver_get_default(): CPointer<GResolver>?

@CCall("knifunptr_glibjson3500_g_resolver_set_default")
external fun g_resolver_set_default(resolver: CValuesRef<GResolver>?): Unit

@CCall("knifunptr_glibjson3501_g_resolver_lookup_by_name")
external fun g_resolver_lookup_by_name(resolver: CValuesRef<GResolver>?, @CCall.CString hostname: String?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GList>?

@CCall("knifunptr_glibjson3502_g_resolver_lookup_by_name_async")
external fun g_resolver_lookup_by_name_async(resolver: CValuesRef<GResolver>?, @CCall.CString hostname: String?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3503_g_resolver_lookup_by_name_finish")
external fun g_resolver_lookup_by_name_finish(resolver: CValuesRef<GResolver>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GList>?

@CCall("knifunptr_glibjson3504_g_resolver_free_addresses")
external fun g_resolver_free_addresses(addresses: CValuesRef<GList>?): Unit

@CCall("knifunptr_glibjson3505_g_resolver_lookup_by_address")
external fun g_resolver_lookup_by_address(resolver: CValuesRef<GResolver>?, address: CValuesRef<GInetAddress>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson3506_g_resolver_lookup_by_address_async")
external fun g_resolver_lookup_by_address_async(resolver: CValuesRef<GResolver>?, address: CValuesRef<GInetAddress>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3507_g_resolver_lookup_by_address_finish")
external fun g_resolver_lookup_by_address_finish(resolver: CValuesRef<GResolver>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson3508_g_resolver_lookup_service")
external fun g_resolver_lookup_service(resolver: CValuesRef<GResolver>?, @CCall.CString service: String?, @CCall.CString protocol: String?, @CCall.CString domain: String?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GList>?

@CCall("knifunptr_glibjson3509_g_resolver_lookup_service_async")
external fun g_resolver_lookup_service_async(resolver: CValuesRef<GResolver>?, @CCall.CString service: String?, @CCall.CString protocol: String?, @CCall.CString domain: String?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3510_g_resolver_lookup_service_finish")
external fun g_resolver_lookup_service_finish(resolver: CValuesRef<GResolver>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GList>?

@CCall("knifunptr_glibjson3511_g_resolver_lookup_records")
external fun g_resolver_lookup_records(resolver: CValuesRef<GResolver>?, @CCall.CString rrname: String?, record_type: GResolverRecordType, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GList>?

@CCall("knifunptr_glibjson3512_g_resolver_lookup_records_async")
external fun g_resolver_lookup_records_async(resolver: CValuesRef<GResolver>?, @CCall.CString rrname: String?, record_type: GResolverRecordType, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3513_g_resolver_lookup_records_finish")
external fun g_resolver_lookup_records_finish(resolver: CValuesRef<GResolver>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GList>?

@CCall("knifunptr_glibjson3514_g_resolver_free_targets")
external fun g_resolver_free_targets(targets: CValuesRef<GList>?): Unit

@CCall("knifunptr_glibjson3515_g_resolver_error_quark")
external fun g_resolver_error_quark(): GQuark

@CCall("knifunptr_glibjson3516_g_resource_error_quark")
external fun g_resource_error_quark(): GQuark

@CCall("knifunptr_glibjson3517_g_resource_get_type")
external fun g_resource_get_type(): GType

@CCall("knifunptr_glibjson3518_g_resource_new_from_data")
external fun g_resource_new_from_data(data: CValuesRef<GBytes>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GResource>?

@CCall("knifunptr_glibjson3519_g_resource_ref")
external fun g_resource_ref(resource: CValuesRef<GResource>?): CPointer<GResource>?

@CCall("knifunptr_glibjson3520_g_resource_unref")
external fun g_resource_unref(resource: CValuesRef<GResource>?): Unit

@CCall("knifunptr_glibjson3521_g_resource_load")
external fun g_resource_load(@CCall.CString filename: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GResource>?

@CCall("knifunptr_glibjson3522_g_resource_open_stream")
external fun g_resource_open_stream(resource: CValuesRef<GResource>?, @CCall.CString path: String?, lookup_flags: GResourceLookupFlags, error: CValuesRef<CPointerVar<GError>>?): CPointer<GInputStream>?

@CCall("knifunptr_glibjson3523_g_resource_lookup_data")
external fun g_resource_lookup_data(resource: CValuesRef<GResource>?, @CCall.CString path: String?, lookup_flags: GResourceLookupFlags, error: CValuesRef<CPointerVar<GError>>?): CPointer<GBytes>?

@CCall("knifunptr_glibjson3524_g_resource_enumerate_children")
external fun g_resource_enumerate_children(resource: CValuesRef<GResource>?, @CCall.CString path: String?, lookup_flags: GResourceLookupFlags, error: CValuesRef<CPointerVar<GError>>?): CPointer<CPointerVar<ByteVar>>?

@CCall("knifunptr_glibjson3525_g_resource_get_info")
external fun g_resource_get_info(resource: CValuesRef<GResource>?, @CCall.CString path: String?, lookup_flags: GResourceLookupFlags, size: CValuesRef<gsizeVar>?, flags: CValuesRef<guint32Var>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3526_g_resources_register")
external fun g_resources_register(resource: CValuesRef<GResource>?): Unit

@CCall("knifunptr_glibjson3527_g_resources_unregister")
external fun g_resources_unregister(resource: CValuesRef<GResource>?): Unit

@CCall("knifunptr_glibjson3528_g_resources_open_stream")
external fun g_resources_open_stream(@CCall.CString path: String?, lookup_flags: GResourceLookupFlags, error: CValuesRef<CPointerVar<GError>>?): CPointer<GInputStream>?

@CCall("knifunptr_glibjson3529_g_resources_lookup_data")
external fun g_resources_lookup_data(@CCall.CString path: String?, lookup_flags: GResourceLookupFlags, error: CValuesRef<CPointerVar<GError>>?): CPointer<GBytes>?

@CCall("knifunptr_glibjson3530_g_resources_enumerate_children")
external fun g_resources_enumerate_children(@CCall.CString path: String?, lookup_flags: GResourceLookupFlags, error: CValuesRef<CPointerVar<GError>>?): CPointer<CPointerVar<ByteVar>>?

@CCall("knifunptr_glibjson3531_g_resources_get_info")
external fun g_resources_get_info(@CCall.CString path: String?, lookup_flags: GResourceLookupFlags, size: CValuesRef<gsizeVar>?, flags: CValuesRef<guint32Var>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3532_g_static_resource_init")
external fun g_static_resource_init(static_resource: CValuesRef<GStaticResource>?): Unit

@CCall("knifunptr_glibjson3533_g_static_resource_fini")
external fun g_static_resource_fini(static_resource: CValuesRef<GStaticResource>?): Unit

@CCall("knifunptr_glibjson3534_g_static_resource_get_resource")
external fun g_static_resource_get_resource(static_resource: CValuesRef<GStaticResource>?): CPointer<GResource>?

@CCall("knifunptr_glibjson3535_g_seekable_get_type")
external fun g_seekable_get_type(): GType

@CCall("knifunptr_glibjson3536_g_seekable_tell")
external fun g_seekable_tell(seekable: CValuesRef<GSeekable>?): goffset

@CCall("knifunptr_glibjson3537_g_seekable_can_seek")
external fun g_seekable_can_seek(seekable: CValuesRef<GSeekable>?): gboolean

@CCall("knifunptr_glibjson3538_g_seekable_seek")
external fun g_seekable_seek(seekable: CValuesRef<GSeekable>?, offset: goffset, type: GSeekType, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3539_g_seekable_can_truncate")
external fun g_seekable_can_truncate(seekable: CValuesRef<GSeekable>?): gboolean

@CCall("knifunptr_glibjson3540_g_seekable_truncate")
external fun g_seekable_truncate(seekable: CValuesRef<GSeekable>?, offset: goffset, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3541_g_settings_schema_source_get_type")
external fun g_settings_schema_source_get_type(): GType

@CCall("knifunptr_glibjson3542_g_settings_schema_source_get_default")
external fun g_settings_schema_source_get_default(): CPointer<GSettingsSchemaSource>?

@CCall("knifunptr_glibjson3543_g_settings_schema_source_ref")
external fun g_settings_schema_source_ref(source: CValuesRef<GSettingsSchemaSource>?): CPointer<GSettingsSchemaSource>?

@CCall("knifunptr_glibjson3544_g_settings_schema_source_unref")
external fun g_settings_schema_source_unref(source: CValuesRef<GSettingsSchemaSource>?): Unit

@CCall("knifunptr_glibjson3545_g_settings_schema_source_new_from_directory")
external fun g_settings_schema_source_new_from_directory(@CCall.CString directory: String?, parent: CValuesRef<GSettingsSchemaSource>?, trusted: gboolean, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSettingsSchemaSource>?

@CCall("knifunptr_glibjson3546_g_settings_schema_source_lookup")
external fun g_settings_schema_source_lookup(source: CValuesRef<GSettingsSchemaSource>?, @CCall.CString schema_id: String?, recursive: gboolean): CPointer<GSettingsSchema>?

@CCall("knifunptr_glibjson3547_g_settings_schema_source_list_schemas")
external fun g_settings_schema_source_list_schemas(source: CValuesRef<GSettingsSchemaSource>?, recursive: gboolean, non_relocatable: CValuesRef<CPointerVar<CPointerVar<gcharVar>>>?, relocatable: CValuesRef<CPointerVar<CPointerVar<gcharVar>>>?): Unit

@CCall("knifunptr_glibjson3548_g_settings_schema_get_type")
external fun g_settings_schema_get_type(): GType

@CCall("knifunptr_glibjson3549_g_settings_schema_ref")
external fun g_settings_schema_ref(schema: CValuesRef<GSettingsSchema>?): CPointer<GSettingsSchema>?

@CCall("knifunptr_glibjson3550_g_settings_schema_unref")
external fun g_settings_schema_unref(schema: CValuesRef<GSettingsSchema>?): Unit

@CCall("knifunptr_glibjson3551_g_settings_schema_get_id")
external fun g_settings_schema_get_id(schema: CValuesRef<GSettingsSchema>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson3552_g_settings_schema_get_path")
external fun g_settings_schema_get_path(schema: CValuesRef<GSettingsSchema>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson3553_g_settings_schema_get_key")
external fun g_settings_schema_get_key(schema: CValuesRef<GSettingsSchema>?, @CCall.CString name: String?): CPointer<GSettingsSchemaKey>?

@CCall("knifunptr_glibjson3554_g_settings_schema_has_key")
external fun g_settings_schema_has_key(schema: CValuesRef<GSettingsSchema>?, @CCall.CString name: String?): gboolean

@CCall("knifunptr_glibjson3555_g_settings_schema_list_keys")
external fun g_settings_schema_list_keys(schema: CValuesRef<GSettingsSchema>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson3556_g_settings_schema_list_children")
external fun g_settings_schema_list_children(schema: CValuesRef<GSettingsSchema>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson3557_g_settings_schema_key_get_type")
external fun g_settings_schema_key_get_type(): GType

@CCall("knifunptr_glibjson3558_g_settings_schema_key_ref")
external fun g_settings_schema_key_ref(key: CValuesRef<GSettingsSchemaKey>?): CPointer<GSettingsSchemaKey>?

@CCall("knifunptr_glibjson3559_g_settings_schema_key_unref")
external fun g_settings_schema_key_unref(key: CValuesRef<GSettingsSchemaKey>?): Unit

@CCall("knifunptr_glibjson3560_g_settings_schema_key_get_value_type")
external fun g_settings_schema_key_get_value_type(key: CValuesRef<GSettingsSchemaKey>?): CPointer<GVariantType>?

@CCall("knifunptr_glibjson3561_g_settings_schema_key_get_default_value")
external fun g_settings_schema_key_get_default_value(key: CValuesRef<GSettingsSchemaKey>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson3562_g_settings_schema_key_get_range")
external fun g_settings_schema_key_get_range(key: CValuesRef<GSettingsSchemaKey>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson3563_g_settings_schema_key_range_check")
external fun g_settings_schema_key_range_check(key: CValuesRef<GSettingsSchemaKey>?, value: CValuesRef<GVariant>?): gboolean

@CCall("knifunptr_glibjson3564_g_settings_schema_key_get_name")
external fun g_settings_schema_key_get_name(key: CValuesRef<GSettingsSchemaKey>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson3565_g_settings_schema_key_get_summary")
external fun g_settings_schema_key_get_summary(key: CValuesRef<GSettingsSchemaKey>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson3566_g_settings_schema_key_get_description")
external fun g_settings_schema_key_get_description(key: CValuesRef<GSettingsSchemaKey>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson3567_g_settings_get_type")
external fun g_settings_get_type(): GType

@CCall("knifunptr_glibjson3568_g_settings_list_schemas")
external fun g_settings_list_schemas(): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson3569_g_settings_list_relocatable_schemas")
external fun g_settings_list_relocatable_schemas(): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson3570_g_settings_new")
external fun g_settings_new(@CCall.CString schema_id: String?): CPointer<GSettings>?

@CCall("knifunptr_glibjson3571_g_settings_new_with_path")
external fun g_settings_new_with_path(@CCall.CString schema_id: String?, @CCall.CString path: String?): CPointer<GSettings>?

@CCall("knifunptr_glibjson3572_g_settings_new_with_backend")
external fun g_settings_new_with_backend(@CCall.CString schema_id: String?, backend: CValuesRef<GSettingsBackend>?): CPointer<GSettings>?

@CCall("knifunptr_glibjson3573_g_settings_new_with_backend_and_path")
external fun g_settings_new_with_backend_and_path(@CCall.CString schema_id: String?, backend: CValuesRef<GSettingsBackend>?, @CCall.CString path: String?): CPointer<GSettings>?

@CCall("knifunptr_glibjson3574_g_settings_new_full")
external fun g_settings_new_full(schema: CValuesRef<GSettingsSchema>?, backend: CValuesRef<GSettingsBackend>?, @CCall.CString path: String?): CPointer<GSettings>?

@CCall("knifunptr_glibjson3575_g_settings_list_children")
external fun g_settings_list_children(settings: CValuesRef<GSettings>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson3576_g_settings_list_keys")
external fun g_settings_list_keys(settings: CValuesRef<GSettings>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson3577_g_settings_get_range")
external fun g_settings_get_range(settings: CValuesRef<GSettings>?, @CCall.CString key: String?): CPointer<GVariant>?

@CCall("knifunptr_glibjson3578_g_settings_range_check")
external fun g_settings_range_check(settings: CValuesRef<GSettings>?, @CCall.CString key: String?, value: CValuesRef<GVariant>?): gboolean

@CCall("knifunptr_glibjson3579_g_settings_set_value")
external fun g_settings_set_value(settings: CValuesRef<GSettings>?, @CCall.CString key: String?, value: CValuesRef<GVariant>?): gboolean

@CCall("knifunptr_glibjson3580_g_settings_get_value")
external fun g_settings_get_value(settings: CValuesRef<GSettings>?, @CCall.CString key: String?): CPointer<GVariant>?

@CCall("knifunptr_glibjson3581_g_settings_get_user_value")
external fun g_settings_get_user_value(settings: CValuesRef<GSettings>?, @CCall.CString key: String?): CPointer<GVariant>?

@CCall("knifunptr_glibjson3582_g_settings_get_default_value")
external fun g_settings_get_default_value(settings: CValuesRef<GSettings>?, @CCall.CString key: String?): CPointer<GVariant>?

@CCall("knifunptr_glibjson3583_g_settings_set")
external fun g_settings_set(settings: CValuesRef<GSettings>?, @CCall.CString key: String?, @CCall.CString format: String?, vararg variadicArguments: Any?): gboolean

@CCall("knifunptr_glibjson3584_g_settings_get")
external fun g_settings_get(settings: CValuesRef<GSettings>?, @CCall.CString key: String?, @CCall.CString format: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson3585_g_settings_reset")
external fun g_settings_reset(settings: CValuesRef<GSettings>?, @CCall.CString key: String?): Unit

@CCall("knifunptr_glibjson3586_g_settings_get_int")
external fun g_settings_get_int(settings: CValuesRef<GSettings>?, @CCall.CString key: String?): gint

@CCall("knifunptr_glibjson3587_g_settings_set_int")
external fun g_settings_set_int(settings: CValuesRef<GSettings>?, @CCall.CString key: String?, value: gint): gboolean

@CCall("knifunptr_glibjson3588_g_settings_get_int64")
external fun g_settings_get_int64(settings: CValuesRef<GSettings>?, @CCall.CString key: String?): gint64

@CCall("knifunptr_glibjson3589_g_settings_set_int64")
external fun g_settings_set_int64(settings: CValuesRef<GSettings>?, @CCall.CString key: String?, value: gint64): gboolean

@CCall("knifunptr_glibjson3590_g_settings_get_uint")
external fun g_settings_get_uint(settings: CValuesRef<GSettings>?, @CCall.CString key: String?): guint

@CCall("knifunptr_glibjson3591_g_settings_set_uint")
external fun g_settings_set_uint(settings: CValuesRef<GSettings>?, @CCall.CString key: String?, value: guint): gboolean

@CCall("knifunptr_glibjson3592_g_settings_get_uint64")
external fun g_settings_get_uint64(settings: CValuesRef<GSettings>?, @CCall.CString key: String?): guint64

@CCall("knifunptr_glibjson3593_g_settings_set_uint64")
external fun g_settings_set_uint64(settings: CValuesRef<GSettings>?, @CCall.CString key: String?, value: guint64): gboolean

@CCall("knifunptr_glibjson3594_g_settings_get_string")
external fun g_settings_get_string(settings: CValuesRef<GSettings>?, @CCall.CString key: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson3595_g_settings_set_string")
external fun g_settings_set_string(settings: CValuesRef<GSettings>?, @CCall.CString key: String?, @CCall.CString value: String?): gboolean

@CCall("knifunptr_glibjson3596_g_settings_get_boolean")
external fun g_settings_get_boolean(settings: CValuesRef<GSettings>?, @CCall.CString key: String?): gboolean

@CCall("knifunptr_glibjson3597_g_settings_set_boolean")
external fun g_settings_set_boolean(settings: CValuesRef<GSettings>?, @CCall.CString key: String?, value: gboolean): gboolean

@CCall("knifunptr_glibjson3598_g_settings_get_double")
external fun g_settings_get_double(settings: CValuesRef<GSettings>?, @CCall.CString key: String?): gdouble

@CCall("knifunptr_glibjson3599_g_settings_set_double")
external fun g_settings_set_double(settings: CValuesRef<GSettings>?, @CCall.CString key: String?, value: gdouble): gboolean

@CCall("knifunptr_glibjson3600_g_settings_get_strv")
external fun g_settings_get_strv(settings: CValuesRef<GSettings>?, @CCall.CString key: String?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson3601_g_settings_set_strv")
external fun g_settings_set_strv(settings: CValuesRef<GSettings>?, @CCall.CString key: String?, value: CValuesRef<CPointerVar<gcharVar>>?): gboolean

@CCall("knifunptr_glibjson3602_g_settings_get_enum")
external fun g_settings_get_enum(settings: CValuesRef<GSettings>?, @CCall.CString key: String?): gint

@CCall("knifunptr_glibjson3603_g_settings_set_enum")
external fun g_settings_set_enum(settings: CValuesRef<GSettings>?, @CCall.CString key: String?, value: gint): gboolean

@CCall("knifunptr_glibjson3604_g_settings_get_flags")
external fun g_settings_get_flags(settings: CValuesRef<GSettings>?, @CCall.CString key: String?): guint

@CCall("knifunptr_glibjson3605_g_settings_set_flags")
external fun g_settings_set_flags(settings: CValuesRef<GSettings>?, @CCall.CString key: String?, value: guint): gboolean

@CCall("knifunptr_glibjson3606_g_settings_get_child")
external fun g_settings_get_child(settings: CValuesRef<GSettings>?, @CCall.CString name: String?): CPointer<GSettings>?

@CCall("knifunptr_glibjson3607_g_settings_is_writable")
external fun g_settings_is_writable(settings: CValuesRef<GSettings>?, @CCall.CString name: String?): gboolean

@CCall("knifunptr_glibjson3608_g_settings_delay")
external fun g_settings_delay(settings: CValuesRef<GSettings>?): Unit

@CCall("knifunptr_glibjson3609_g_settings_apply")
external fun g_settings_apply(settings: CValuesRef<GSettings>?): Unit

@CCall("knifunptr_glibjson3610_g_settings_revert")
external fun g_settings_revert(settings: CValuesRef<GSettings>?): Unit

@CCall("knifunptr_glibjson3611_g_settings_get_has_unapplied")
external fun g_settings_get_has_unapplied(settings: CValuesRef<GSettings>?): gboolean

@CCall("knifunptr_glibjson3612_g_settings_sync")
external fun g_settings_sync(): Unit

@CCall("knifunptr_glibjson3613_g_settings_bind")
external fun g_settings_bind(settings: CValuesRef<GSettings>?, @CCall.CString key: String?, `object`: gpointer?, @CCall.CString property: String?, flags: GSettingsBindFlags): Unit

@CCall("knifunptr_glibjson3614_g_settings_bind_with_mapping")
external fun g_settings_bind_with_mapping(settings: CValuesRef<GSettings>?, @CCall.CString key: String?, `object`: gpointer?, @CCall.CString property: String?, flags: GSettingsBindFlags, get_mapping: GSettingsBindGetMapping?, set_mapping: GSettingsBindSetMapping?, user_data: gpointer?, destroy: GDestroyNotify?): Unit

@CCall("knifunptr_glibjson3615_g_settings_bind_writable")
external fun g_settings_bind_writable(settings: CValuesRef<GSettings>?, @CCall.CString key: String?, `object`: gpointer?, @CCall.CString property: String?, inverted: gboolean): Unit

@CCall("knifunptr_glibjson3616_g_settings_unbind")
external fun g_settings_unbind(`object`: gpointer?, @CCall.CString property: String?): Unit

@CCall("knifunptr_glibjson3617_g_settings_create_action")
external fun g_settings_create_action(settings: CValuesRef<GSettings>?, @CCall.CString key: String?): CPointer<GAction>?

@CCall("knifunptr_glibjson3618_g_settings_get_mapped")
external fun g_settings_get_mapped(settings: CValuesRef<GSettings>?, @CCall.CString key: String?, mapping: GSettingsGetMapping?, user_data: gpointer?): gpointer?

@CCall("knifunptr_glibjson3619_g_simple_action_get_type")
external fun g_simple_action_get_type(): GType

@CCall("knifunptr_glibjson3620_g_simple_action_new")
external fun g_simple_action_new(@CCall.CString name: String?, parameter_type: CValuesRef<GVariantType>?): CPointer<GSimpleAction>?

@CCall("knifunptr_glibjson3621_g_simple_action_new_stateful")
external fun g_simple_action_new_stateful(@CCall.CString name: String?, parameter_type: CValuesRef<GVariantType>?, state: CValuesRef<GVariant>?): CPointer<GSimpleAction>?

@CCall("knifunptr_glibjson3622_g_simple_action_set_enabled")
external fun g_simple_action_set_enabled(simple: CValuesRef<GSimpleAction>?, enabled: gboolean): Unit

@CCall("knifunptr_glibjson3623_g_simple_action_set_state")
external fun g_simple_action_set_state(simple: CValuesRef<GSimpleAction>?, value: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_glibjson3624_g_simple_action_set_state_hint")
external fun g_simple_action_set_state_hint(simple: CValuesRef<GSimpleAction>?, state_hint: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_glibjson3625_g_simple_action_group_get_type")
external fun g_simple_action_group_get_type(): GType

@CCall("knifunptr_glibjson3626_g_simple_action_group_new")
external fun g_simple_action_group_new(): CPointer<GSimpleActionGroup>?

@CCall("knifunptr_glibjson3627_g_simple_action_group_lookup")
external fun g_simple_action_group_lookup(simple: CValuesRef<GSimpleActionGroup>?, @CCall.CString action_name: String?): CPointer<GAction>?

@CCall("knifunptr_glibjson3628_g_simple_action_group_insert")
external fun g_simple_action_group_insert(simple: CValuesRef<GSimpleActionGroup>?, action: CValuesRef<GAction>?): Unit

@CCall("knifunptr_glibjson3629_g_simple_action_group_remove")
external fun g_simple_action_group_remove(simple: CValuesRef<GSimpleActionGroup>?, @CCall.CString action_name: String?): Unit

@CCall("knifunptr_glibjson3630_g_simple_action_group_add_entries")
external fun g_simple_action_group_add_entries(simple: CValuesRef<GSimpleActionGroup>?, entries: CValuesRef<GActionEntry>?, n_entries: gint, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3631_g_simple_async_result_get_type")
external fun g_simple_async_result_get_type(): GType

@CCall("knifunptr_glibjson3632_g_simple_async_result_new")
external fun g_simple_async_result_new(source_object: CValuesRef<GObject>?, callback: GAsyncReadyCallback?, user_data: gpointer?, source_tag: gpointer?): CPointer<GSimpleAsyncResult>?

@CCall("knifunptr_glibjson3633_g_simple_async_result_new_error")
external fun g_simple_async_result_new_error(source_object: CValuesRef<GObject>?, callback: GAsyncReadyCallback?, user_data: gpointer?, domain: GQuark, code: gint, @CCall.CString format: String?, vararg variadicArguments: Any?): CPointer<GSimpleAsyncResult>?

@CCall("knifunptr_glibjson3634_g_simple_async_result_new_from_error")
external fun g_simple_async_result_new_from_error(source_object: CValuesRef<GObject>?, callback: GAsyncReadyCallback?, user_data: gpointer?, error: CValuesRef<GError>?): CPointer<GSimpleAsyncResult>?

@CCall("knifunptr_glibjson3635_g_simple_async_result_new_take_error")
external fun g_simple_async_result_new_take_error(source_object: CValuesRef<GObject>?, callback: GAsyncReadyCallback?, user_data: gpointer?, error: CValuesRef<GError>?): CPointer<GSimpleAsyncResult>?

@CCall("knifunptr_glibjson3636_g_simple_async_result_set_op_res_gpointer")
external fun g_simple_async_result_set_op_res_gpointer(simple: CValuesRef<GSimpleAsyncResult>?, op_res: gpointer?, destroy_op_res: GDestroyNotify?): Unit

@CCall("knifunptr_glibjson3637_g_simple_async_result_get_op_res_gpointer")
external fun g_simple_async_result_get_op_res_gpointer(simple: CValuesRef<GSimpleAsyncResult>?): gpointer?

@CCall("knifunptr_glibjson3638_g_simple_async_result_set_op_res_gssize")
external fun g_simple_async_result_set_op_res_gssize(simple: CValuesRef<GSimpleAsyncResult>?, op_res: gssize): Unit

@CCall("knifunptr_glibjson3639_g_simple_async_result_get_op_res_gssize")
external fun g_simple_async_result_get_op_res_gssize(simple: CValuesRef<GSimpleAsyncResult>?): gssize

@CCall("knifunptr_glibjson3640_g_simple_async_result_set_op_res_gboolean")
external fun g_simple_async_result_set_op_res_gboolean(simple: CValuesRef<GSimpleAsyncResult>?, op_res: gboolean): Unit

@CCall("knifunptr_glibjson3641_g_simple_async_result_get_op_res_gboolean")
external fun g_simple_async_result_get_op_res_gboolean(simple: CValuesRef<GSimpleAsyncResult>?): gboolean

@CCall("knifunptr_glibjson3642_g_simple_async_result_set_check_cancellable")
external fun g_simple_async_result_set_check_cancellable(simple: CValuesRef<GSimpleAsyncResult>?, check_cancellable: CValuesRef<GCancellable>?): Unit

@CCall("knifunptr_glibjson3643_g_simple_async_result_get_source_tag")
external fun g_simple_async_result_get_source_tag(simple: CValuesRef<GSimpleAsyncResult>?): gpointer?

@CCall("knifunptr_glibjson3644_g_simple_async_result_set_handle_cancellation")
external fun g_simple_async_result_set_handle_cancellation(simple: CValuesRef<GSimpleAsyncResult>?, handle_cancellation: gboolean): Unit

@CCall("knifunptr_glibjson3645_g_simple_async_result_complete")
external fun g_simple_async_result_complete(simple: CValuesRef<GSimpleAsyncResult>?): Unit

@CCall("knifunptr_glibjson3646_g_simple_async_result_complete_in_idle")
external fun g_simple_async_result_complete_in_idle(simple: CValuesRef<GSimpleAsyncResult>?): Unit

@CCall("knifunptr_glibjson3647_g_simple_async_result_run_in_thread")
external fun g_simple_async_result_run_in_thread(simple: CValuesRef<GSimpleAsyncResult>?, func: GSimpleAsyncThreadFunc?, io_priority: Int, cancellable: CValuesRef<GCancellable>?): Unit

@CCall("knifunptr_glibjson3648_g_simple_async_result_set_from_error")
external fun g_simple_async_result_set_from_error(simple: CValuesRef<GSimpleAsyncResult>?, error: CValuesRef<GError>?): Unit

@CCall("knifunptr_glibjson3649_g_simple_async_result_take_error")
external fun g_simple_async_result_take_error(simple: CValuesRef<GSimpleAsyncResult>?, error: CValuesRef<GError>?): Unit

@CCall("knifunptr_glibjson3650_g_simple_async_result_propagate_error")
external fun g_simple_async_result_propagate_error(simple: CValuesRef<GSimpleAsyncResult>?, dest: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3651_g_simple_async_result_set_error")
external fun g_simple_async_result_set_error(simple: CValuesRef<GSimpleAsyncResult>?, domain: GQuark, code: gint, @CCall.CString format: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson3652_g_simple_async_result_set_error_va")
external fun g_simple_async_result_set_error_va(simple: CValuesRef<GSimpleAsyncResult>?, domain: GQuark, code: gint, @CCall.CString format: String?, args: va_list?): Unit

@CCall("knifunptr_glibjson3653_g_simple_async_result_is_valid")
external fun g_simple_async_result_is_valid(result: CValuesRef<GAsyncResult>?, source: CValuesRef<GObject>?, source_tag: gpointer?): gboolean

@CCall("knifunptr_glibjson3654_g_simple_async_report_error_in_idle")
external fun g_simple_async_report_error_in_idle(`object`: CValuesRef<GObject>?, callback: GAsyncReadyCallback?, user_data: gpointer?, domain: GQuark, code: gint, @CCall.CString format: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson3655_g_simple_async_report_gerror_in_idle")
external fun g_simple_async_report_gerror_in_idle(`object`: CValuesRef<GObject>?, callback: GAsyncReadyCallback?, user_data: gpointer?, error: CValuesRef<GError>?): Unit

@CCall("knifunptr_glibjson3656_g_simple_async_report_take_gerror_in_idle")
external fun g_simple_async_report_take_gerror_in_idle(`object`: CValuesRef<GObject>?, callback: GAsyncReadyCallback?, user_data: gpointer?, error: CValuesRef<GError>?): Unit

@CCall("knifunptr_glibjson3657_g_simple_io_stream_get_type")
external fun g_simple_io_stream_get_type(): GType

@CCall("knifunptr_glibjson3658_g_simple_io_stream_new")
external fun g_simple_io_stream_new(input_stream: CValuesRef<GInputStream>?, output_stream: CValuesRef<GOutputStream>?): CPointer<GIOStream>?

@CCall("knifunptr_glibjson3659_g_simple_permission_get_type")
external fun g_simple_permission_get_type(): GType

@CCall("knifunptr_glibjson3660_g_simple_permission_new")
external fun g_simple_permission_new(allowed: gboolean): CPointer<GPermission>?

@CCall("knifunptr_glibjson3661_g_socket_client_get_type")
external fun g_socket_client_get_type(): GType

@CCall("knifunptr_glibjson3662_g_socket_client_new")
external fun g_socket_client_new(): CPointer<GSocketClient>?

@CCall("knifunptr_glibjson3663_g_socket_client_get_family")
external fun g_socket_client_get_family(client: CValuesRef<GSocketClient>?): GSocketFamily

@CCall("knifunptr_glibjson3664_g_socket_client_set_family")
external fun g_socket_client_set_family(client: CValuesRef<GSocketClient>?, family: GSocketFamily): Unit

@CCall("knifunptr_glibjson3665_g_socket_client_get_socket_type")
external fun g_socket_client_get_socket_type(client: CValuesRef<GSocketClient>?): GSocketType

@CCall("knifunptr_glibjson3666_g_socket_client_set_socket_type")
external fun g_socket_client_set_socket_type(client: CValuesRef<GSocketClient>?, type: GSocketType): Unit

@CCall("knifunptr_glibjson3667_g_socket_client_get_protocol")
external fun g_socket_client_get_protocol(client: CValuesRef<GSocketClient>?): GSocketProtocol

@CCall("knifunptr_glibjson3668_g_socket_client_set_protocol")
external fun g_socket_client_set_protocol(client: CValuesRef<GSocketClient>?, protocol: GSocketProtocol): Unit

@CCall("knifunptr_glibjson3669_g_socket_client_get_local_address")
external fun g_socket_client_get_local_address(client: CValuesRef<GSocketClient>?): CPointer<GSocketAddress>?

@CCall("knifunptr_glibjson3670_g_socket_client_set_local_address")
external fun g_socket_client_set_local_address(client: CValuesRef<GSocketClient>?, address: CValuesRef<GSocketAddress>?): Unit

@CCall("knifunptr_glibjson3671_g_socket_client_get_timeout")
external fun g_socket_client_get_timeout(client: CValuesRef<GSocketClient>?): guint

@CCall("knifunptr_glibjson3672_g_socket_client_set_timeout")
external fun g_socket_client_set_timeout(client: CValuesRef<GSocketClient>?, timeout: guint): Unit

@CCall("knifunptr_glibjson3673_g_socket_client_get_enable_proxy")
external fun g_socket_client_get_enable_proxy(client: CValuesRef<GSocketClient>?): gboolean

@CCall("knifunptr_glibjson3674_g_socket_client_set_enable_proxy")
external fun g_socket_client_set_enable_proxy(client: CValuesRef<GSocketClient>?, enable: gboolean): Unit

@CCall("knifunptr_glibjson3675_g_socket_client_get_tls")
external fun g_socket_client_get_tls(client: CValuesRef<GSocketClient>?): gboolean

@CCall("knifunptr_glibjson3676_g_socket_client_set_tls")
external fun g_socket_client_set_tls(client: CValuesRef<GSocketClient>?, tls: gboolean): Unit

@CCall("knifunptr_glibjson3677_g_socket_client_get_tls_validation_flags")
external fun g_socket_client_get_tls_validation_flags(client: CValuesRef<GSocketClient>?): GTlsCertificateFlags

@CCall("knifunptr_glibjson3678_g_socket_client_set_tls_validation_flags")
external fun g_socket_client_set_tls_validation_flags(client: CValuesRef<GSocketClient>?, flags: GTlsCertificateFlags): Unit

@CCall("knifunptr_glibjson3679_g_socket_client_get_proxy_resolver")
external fun g_socket_client_get_proxy_resolver(client: CValuesRef<GSocketClient>?): CPointer<GProxyResolver>?

@CCall("knifunptr_glibjson3680_g_socket_client_set_proxy_resolver")
external fun g_socket_client_set_proxy_resolver(client: CValuesRef<GSocketClient>?, proxy_resolver: CValuesRef<GProxyResolver>?): Unit

@CCall("knifunptr_glibjson3681_g_socket_client_connect")
external fun g_socket_client_connect(client: CValuesRef<GSocketClient>?, connectable: CValuesRef<GSocketConnectable>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocketConnection>?

@CCall("knifunptr_glibjson3682_g_socket_client_connect_to_host")
external fun g_socket_client_connect_to_host(client: CValuesRef<GSocketClient>?, @CCall.CString host_and_port: String?, default_port: guint16, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocketConnection>?

@CCall("knifunptr_glibjson3683_g_socket_client_connect_to_service")
external fun g_socket_client_connect_to_service(client: CValuesRef<GSocketClient>?, @CCall.CString domain: String?, @CCall.CString service: String?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocketConnection>?

@CCall("knifunptr_glibjson3684_g_socket_client_connect_to_uri")
external fun g_socket_client_connect_to_uri(client: CValuesRef<GSocketClient>?, @CCall.CString uri: String?, default_port: guint16, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocketConnection>?

@CCall("knifunptr_glibjson3685_g_socket_client_connect_async")
external fun g_socket_client_connect_async(client: CValuesRef<GSocketClient>?, connectable: CValuesRef<GSocketConnectable>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3686_g_socket_client_connect_finish")
external fun g_socket_client_connect_finish(client: CValuesRef<GSocketClient>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocketConnection>?

@CCall("knifunptr_glibjson3687_g_socket_client_connect_to_host_async")
external fun g_socket_client_connect_to_host_async(client: CValuesRef<GSocketClient>?, @CCall.CString host_and_port: String?, default_port: guint16, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3688_g_socket_client_connect_to_host_finish")
external fun g_socket_client_connect_to_host_finish(client: CValuesRef<GSocketClient>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocketConnection>?

@CCall("knifunptr_glibjson3689_g_socket_client_connect_to_service_async")
external fun g_socket_client_connect_to_service_async(client: CValuesRef<GSocketClient>?, @CCall.CString domain: String?, @CCall.CString service: String?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3690_g_socket_client_connect_to_service_finish")
external fun g_socket_client_connect_to_service_finish(client: CValuesRef<GSocketClient>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocketConnection>?

@CCall("knifunptr_glibjson3691_g_socket_client_connect_to_uri_async")
external fun g_socket_client_connect_to_uri_async(client: CValuesRef<GSocketClient>?, @CCall.CString uri: String?, default_port: guint16, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3692_g_socket_client_connect_to_uri_finish")
external fun g_socket_client_connect_to_uri_finish(client: CValuesRef<GSocketClient>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocketConnection>?

@CCall("knifunptr_glibjson3693_g_socket_client_add_application_proxy")
external fun g_socket_client_add_application_proxy(client: CValuesRef<GSocketClient>?, @CCall.CString protocol: String?): Unit

@CCall("knifunptr_glibjson3694_g_socket_connectable_get_type")
external fun g_socket_connectable_get_type(): GType

@CCall("knifunptr_glibjson3695_g_socket_connectable_enumerate")
external fun g_socket_connectable_enumerate(connectable: CValuesRef<GSocketConnectable>?): CPointer<GSocketAddressEnumerator>?

@CCall("knifunptr_glibjson3696_g_socket_connectable_proxy_enumerate")
external fun g_socket_connectable_proxy_enumerate(connectable: CValuesRef<GSocketConnectable>?): CPointer<GSocketAddressEnumerator>?

@CCall("knifunptr_glibjson3697_g_socket_connectable_to_string")
external fun g_socket_connectable_to_string(connectable: CValuesRef<GSocketConnectable>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson3698_g_socket_get_type")
external fun g_socket_get_type(): GType

@CCall("knifunptr_glibjson3699_g_socket_new")
external fun g_socket_new(family: GSocketFamily, type: GSocketType, protocol: GSocketProtocol, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocket>?

@CCall("knifunptr_glibjson3700_g_socket_new_from_fd")
external fun g_socket_new_from_fd(fd: gint, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocket>?

@CCall("knifunptr_glibjson3701_g_socket_get_fd")
external fun g_socket_get_fd(socket: CValuesRef<GSocket>?): Int

@CCall("knifunptr_glibjson3702_g_socket_get_family")
external fun g_socket_get_family(socket: CValuesRef<GSocket>?): GSocketFamily

@CCall("knifunptr_glibjson3703_g_socket_get_socket_type")
external fun g_socket_get_socket_type(socket: CValuesRef<GSocket>?): GSocketType

@CCall("knifunptr_glibjson3704_g_socket_get_protocol")
external fun g_socket_get_protocol(socket: CValuesRef<GSocket>?): GSocketProtocol

@CCall("knifunptr_glibjson3705_g_socket_get_local_address")
external fun g_socket_get_local_address(socket: CValuesRef<GSocket>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocketAddress>?

@CCall("knifunptr_glibjson3706_g_socket_get_remote_address")
external fun g_socket_get_remote_address(socket: CValuesRef<GSocket>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocketAddress>?

@CCall("knifunptr_glibjson3707_g_socket_set_blocking")
external fun g_socket_set_blocking(socket: CValuesRef<GSocket>?, blocking: gboolean): Unit

@CCall("knifunptr_glibjson3708_g_socket_get_blocking")
external fun g_socket_get_blocking(socket: CValuesRef<GSocket>?): gboolean

@CCall("knifunptr_glibjson3709_g_socket_set_keepalive")
external fun g_socket_set_keepalive(socket: CValuesRef<GSocket>?, keepalive: gboolean): Unit

@CCall("knifunptr_glibjson3710_g_socket_get_keepalive")
external fun g_socket_get_keepalive(socket: CValuesRef<GSocket>?): gboolean

@CCall("knifunptr_glibjson3711_g_socket_get_listen_backlog")
external fun g_socket_get_listen_backlog(socket: CValuesRef<GSocket>?): gint

@CCall("knifunptr_glibjson3712_g_socket_set_listen_backlog")
external fun g_socket_set_listen_backlog(socket: CValuesRef<GSocket>?, backlog: gint): Unit

@CCall("knifunptr_glibjson3713_g_socket_get_timeout")
external fun g_socket_get_timeout(socket: CValuesRef<GSocket>?): guint

@CCall("knifunptr_glibjson3714_g_socket_set_timeout")
external fun g_socket_set_timeout(socket: CValuesRef<GSocket>?, timeout: guint): Unit

@CCall("knifunptr_glibjson3715_g_socket_get_ttl")
external fun g_socket_get_ttl(socket: CValuesRef<GSocket>?): guint

@CCall("knifunptr_glibjson3716_g_socket_set_ttl")
external fun g_socket_set_ttl(socket: CValuesRef<GSocket>?, ttl: guint): Unit

@CCall("knifunptr_glibjson3717_g_socket_get_broadcast")
external fun g_socket_get_broadcast(socket: CValuesRef<GSocket>?): gboolean

@CCall("knifunptr_glibjson3718_g_socket_set_broadcast")
external fun g_socket_set_broadcast(socket: CValuesRef<GSocket>?, broadcast: gboolean): Unit

@CCall("knifunptr_glibjson3719_g_socket_get_multicast_loopback")
external fun g_socket_get_multicast_loopback(socket: CValuesRef<GSocket>?): gboolean

@CCall("knifunptr_glibjson3720_g_socket_set_multicast_loopback")
external fun g_socket_set_multicast_loopback(socket: CValuesRef<GSocket>?, loopback: gboolean): Unit

@CCall("knifunptr_glibjson3721_g_socket_get_multicast_ttl")
external fun g_socket_get_multicast_ttl(socket: CValuesRef<GSocket>?): guint

@CCall("knifunptr_glibjson3722_g_socket_set_multicast_ttl")
external fun g_socket_set_multicast_ttl(socket: CValuesRef<GSocket>?, ttl: guint): Unit

@CCall("knifunptr_glibjson3723_g_socket_is_connected")
external fun g_socket_is_connected(socket: CValuesRef<GSocket>?): gboolean

@CCall("knifunptr_glibjson3724_g_socket_bind")
external fun g_socket_bind(socket: CValuesRef<GSocket>?, address: CValuesRef<GSocketAddress>?, allow_reuse: gboolean, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3725_g_socket_join_multicast_group")
external fun g_socket_join_multicast_group(socket: CValuesRef<GSocket>?, group: CValuesRef<GInetAddress>?, source_specific: gboolean, @CCall.CString iface: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3726_g_socket_leave_multicast_group")
external fun g_socket_leave_multicast_group(socket: CValuesRef<GSocket>?, group: CValuesRef<GInetAddress>?, source_specific: gboolean, @CCall.CString iface: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3727_g_socket_join_multicast_group_ssm")
external fun g_socket_join_multicast_group_ssm(socket: CValuesRef<GSocket>?, group: CValuesRef<GInetAddress>?, source_specific: CValuesRef<GInetAddress>?, @CCall.CString iface: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3728_g_socket_leave_multicast_group_ssm")
external fun g_socket_leave_multicast_group_ssm(socket: CValuesRef<GSocket>?, group: CValuesRef<GInetAddress>?, source_specific: CValuesRef<GInetAddress>?, @CCall.CString iface: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3729_g_socket_connect")
external fun g_socket_connect(socket: CValuesRef<GSocket>?, address: CValuesRef<GSocketAddress>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3730_g_socket_check_connect_result")
external fun g_socket_check_connect_result(socket: CValuesRef<GSocket>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3731_g_socket_get_available_bytes")
external fun g_socket_get_available_bytes(socket: CValuesRef<GSocket>?): gssize

@CCall("knifunptr_glibjson3732_g_socket_condition_check")
external fun g_socket_condition_check(socket: CValuesRef<GSocket>?, condition: GIOCondition): GIOCondition

@CCall("knifunptr_glibjson3733_g_socket_condition_wait")
external fun g_socket_condition_wait(socket: CValuesRef<GSocket>?, condition: GIOCondition, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3734_g_socket_condition_timed_wait")
external fun g_socket_condition_timed_wait(socket: CValuesRef<GSocket>?, condition: GIOCondition, timeout: gint64, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3735_g_socket_accept")
external fun g_socket_accept(socket: CValuesRef<GSocket>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocket>?

@CCall("knifunptr_glibjson3736_g_socket_listen")
external fun g_socket_listen(socket: CValuesRef<GSocket>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3737_g_socket_receive")
external fun g_socket_receive(socket: CValuesRef<GSocket>?, buffer: CValuesRef<gcharVar>?, size: gsize, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_glibjson3738_g_socket_receive_from")
external fun g_socket_receive_from(socket: CValuesRef<GSocket>?, address: CValuesRef<CPointerVar<GSocketAddress>>?, buffer: CValuesRef<gcharVar>?, size: gsize, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_glibjson3739_g_socket_send")
external fun g_socket_send(socket: CValuesRef<GSocket>?, @CCall.CString buffer: String?, size: gsize, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_glibjson3740_g_socket_send_to")
external fun g_socket_send_to(socket: CValuesRef<GSocket>?, address: CValuesRef<GSocketAddress>?, @CCall.CString buffer: String?, size: gsize, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_glibjson3741_g_socket_receive_message")
external fun g_socket_receive_message(socket: CValuesRef<GSocket>?, address: CValuesRef<CPointerVar<GSocketAddress>>?, vectors: CValuesRef<GInputVector>?, num_vectors: gint, messages: CValuesRef<CPointerVar<CPointerVar<GSocketControlMessage>>>?, num_messages: CValuesRef<gintVar>?, flags: CValuesRef<gintVar>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_glibjson3742_g_socket_send_message")
external fun g_socket_send_message(socket: CValuesRef<GSocket>?, address: CValuesRef<GSocketAddress>?, vectors: CValuesRef<GOutputVector>?, num_vectors: gint, messages: CValuesRef<CPointerVar<GSocketControlMessage>>?, num_messages: gint, flags: gint, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_glibjson3743_g_socket_receive_messages")
external fun g_socket_receive_messages(socket: CValuesRef<GSocket>?, messages: CValuesRef<GInputMessage>?, num_messages: guint, flags: gint, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gint

@CCall("knifunptr_glibjson3744_g_socket_send_messages")
external fun g_socket_send_messages(socket: CValuesRef<GSocket>?, messages: CValuesRef<GOutputMessage>?, num_messages: guint, flags: gint, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gint

@CCall("knifunptr_glibjson3745_g_socket_close")
external fun g_socket_close(socket: CValuesRef<GSocket>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3746_g_socket_shutdown")
external fun g_socket_shutdown(socket: CValuesRef<GSocket>?, shutdown_read: gboolean, shutdown_write: gboolean, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3747_g_socket_is_closed")
external fun g_socket_is_closed(socket: CValuesRef<GSocket>?): gboolean

@CCall("knifunptr_glibjson3748_g_socket_create_source")
external fun g_socket_create_source(socket: CValuesRef<GSocket>?, condition: GIOCondition, cancellable: CValuesRef<GCancellable>?): CPointer<GSource>?

@CCall("knifunptr_glibjson3749_g_socket_speaks_ipv4")
external fun g_socket_speaks_ipv4(socket: CValuesRef<GSocket>?): gboolean

@CCall("knifunptr_glibjson3750_g_socket_get_credentials")
external fun g_socket_get_credentials(socket: CValuesRef<GSocket>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GCredentials>?

@CCall("knifunptr_glibjson3751_g_socket_receive_with_blocking")
external fun g_socket_receive_with_blocking(socket: CValuesRef<GSocket>?, buffer: CValuesRef<gcharVar>?, size: gsize, blocking: gboolean, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_glibjson3752_g_socket_send_with_blocking")
external fun g_socket_send_with_blocking(socket: CValuesRef<GSocket>?, @CCall.CString buffer: String?, size: gsize, blocking: gboolean, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_glibjson3753_g_socket_get_option")
external fun g_socket_get_option(socket: CValuesRef<GSocket>?, level: gint, optname: gint, value: CValuesRef<gintVar>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3754_g_socket_set_option")
external fun g_socket_set_option(socket: CValuesRef<GSocket>?, level: gint, optname: gint, value: gint, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3755_g_socket_connection_get_type")
external fun g_socket_connection_get_type(): GType

@CCall("knifunptr_glibjson3756_g_socket_connection_is_connected")
external fun g_socket_connection_is_connected(connection: CValuesRef<GSocketConnection>?): gboolean

@CCall("knifunptr_glibjson3757_g_socket_connection_connect")
external fun g_socket_connection_connect(connection: CValuesRef<GSocketConnection>?, address: CValuesRef<GSocketAddress>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3758_g_socket_connection_connect_async")
external fun g_socket_connection_connect_async(connection: CValuesRef<GSocketConnection>?, address: CValuesRef<GSocketAddress>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3759_g_socket_connection_connect_finish")
external fun g_socket_connection_connect_finish(connection: CValuesRef<GSocketConnection>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3760_g_socket_connection_get_socket")
external fun g_socket_connection_get_socket(connection: CValuesRef<GSocketConnection>?): CPointer<GSocket>?

@CCall("knifunptr_glibjson3761_g_socket_connection_get_local_address")
external fun g_socket_connection_get_local_address(connection: CValuesRef<GSocketConnection>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocketAddress>?

@CCall("knifunptr_glibjson3762_g_socket_connection_get_remote_address")
external fun g_socket_connection_get_remote_address(connection: CValuesRef<GSocketConnection>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocketAddress>?

@CCall("knifunptr_glibjson3763_g_socket_connection_factory_register_type")
external fun g_socket_connection_factory_register_type(g_type: GType, family: GSocketFamily, type: GSocketType, protocol: gint): Unit

@CCall("knifunptr_glibjson3764_g_socket_connection_factory_lookup_type")
external fun g_socket_connection_factory_lookup_type(family: GSocketFamily, type: GSocketType, protocol_id: gint): GType

@CCall("knifunptr_glibjson3765_g_socket_connection_factory_create_connection")
external fun g_socket_connection_factory_create_connection(socket: CValuesRef<GSocket>?): CPointer<GSocketConnection>?

@CCall("knifunptr_glibjson3766_g_socket_control_message_get_type")
external fun g_socket_control_message_get_type(): GType

@CCall("knifunptr_glibjson3767_g_socket_control_message_get_size")
external fun g_socket_control_message_get_size(message: CValuesRef<GSocketControlMessage>?): gsize

@CCall("knifunptr_glibjson3768_g_socket_control_message_get_level")
external fun g_socket_control_message_get_level(message: CValuesRef<GSocketControlMessage>?): Int

@CCall("knifunptr_glibjson3769_g_socket_control_message_get_msg_type")
external fun g_socket_control_message_get_msg_type(message: CValuesRef<GSocketControlMessage>?): Int

@CCall("knifunptr_glibjson3770_g_socket_control_message_serialize")
external fun g_socket_control_message_serialize(message: CValuesRef<GSocketControlMessage>?, data: gpointer?): Unit

@CCall("knifunptr_glibjson3771_g_socket_control_message_deserialize")
external fun g_socket_control_message_deserialize(level: Int, type: Int, size: gsize, data: gpointer?): CPointer<GSocketControlMessage>?

@CCall("knifunptr_glibjson3772_g_socket_listener_get_type")
external fun g_socket_listener_get_type(): GType

@CCall("knifunptr_glibjson3773_g_socket_listener_new")
external fun g_socket_listener_new(): CPointer<GSocketListener>?

@CCall("knifunptr_glibjson3774_g_socket_listener_set_backlog")
external fun g_socket_listener_set_backlog(listener: CValuesRef<GSocketListener>?, listen_backlog: Int): Unit

@CCall("knifunptr_glibjson3775_g_socket_listener_add_socket")
external fun g_socket_listener_add_socket(listener: CValuesRef<GSocketListener>?, socket: CValuesRef<GSocket>?, source_object: CValuesRef<GObject>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3776_g_socket_listener_add_address")
external fun g_socket_listener_add_address(listener: CValuesRef<GSocketListener>?, address: CValuesRef<GSocketAddress>?, type: GSocketType, protocol: GSocketProtocol, source_object: CValuesRef<GObject>?, effective_address: CValuesRef<CPointerVar<GSocketAddress>>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3777_g_socket_listener_add_inet_port")
external fun g_socket_listener_add_inet_port(listener: CValuesRef<GSocketListener>?, port: guint16, source_object: CValuesRef<GObject>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3778_g_socket_listener_add_any_inet_port")
external fun g_socket_listener_add_any_inet_port(listener: CValuesRef<GSocketListener>?, source_object: CValuesRef<GObject>?, error: CValuesRef<CPointerVar<GError>>?): guint16

@CCall("knifunptr_glibjson3779_g_socket_listener_accept_socket")
external fun g_socket_listener_accept_socket(listener: CValuesRef<GSocketListener>?, source_object: CValuesRef<CPointerVar<GObject>>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocket>?

@CCall("knifunptr_glibjson3780_g_socket_listener_accept_socket_async")
external fun g_socket_listener_accept_socket_async(listener: CValuesRef<GSocketListener>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3781_g_socket_listener_accept_socket_finish")
external fun g_socket_listener_accept_socket_finish(listener: CValuesRef<GSocketListener>?, result: CValuesRef<GAsyncResult>?, source_object: CValuesRef<CPointerVar<GObject>>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocket>?

@CCall("knifunptr_glibjson3782_g_socket_listener_accept")
external fun g_socket_listener_accept(listener: CValuesRef<GSocketListener>?, source_object: CValuesRef<CPointerVar<GObject>>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocketConnection>?

@CCall("knifunptr_glibjson3783_g_socket_listener_accept_async")
external fun g_socket_listener_accept_async(listener: CValuesRef<GSocketListener>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3784_g_socket_listener_accept_finish")
external fun g_socket_listener_accept_finish(listener: CValuesRef<GSocketListener>?, result: CValuesRef<GAsyncResult>?, source_object: CValuesRef<CPointerVar<GObject>>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSocketConnection>?

@CCall("knifunptr_glibjson3785_g_socket_listener_close")
external fun g_socket_listener_close(listener: CValuesRef<GSocketListener>?): Unit

@CCall("knifunptr_glibjson3786_g_socket_service_get_type")
external fun g_socket_service_get_type(): GType

@CCall("knifunptr_glibjson3787_g_socket_service_new")
external fun g_socket_service_new(): CPointer<GSocketService>?

@CCall("knifunptr_glibjson3788_g_socket_service_start")
external fun g_socket_service_start(service: CValuesRef<GSocketService>?): Unit

@CCall("knifunptr_glibjson3789_g_socket_service_stop")
external fun g_socket_service_stop(service: CValuesRef<GSocketService>?): Unit

@CCall("knifunptr_glibjson3790_g_socket_service_is_active")
external fun g_socket_service_is_active(service: CValuesRef<GSocketService>?): gboolean

@CCall("knifunptr_glibjson3791_g_srv_target_get_type")
external fun g_srv_target_get_type(): GType

@CCall("knifunptr_glibjson3792_g_srv_target_new")
external fun g_srv_target_new(@CCall.CString hostname: String?, port: guint16, priority: guint16, weight: guint16): CPointer<GSrvTarget>?

@CCall("knifunptr_glibjson3793_g_srv_target_copy")
external fun g_srv_target_copy(target: CValuesRef<GSrvTarget>?): CPointer<GSrvTarget>?

@CCall("knifunptr_glibjson3794_g_srv_target_free")
external fun g_srv_target_free(target: CValuesRef<GSrvTarget>?): Unit

@CCall("knifunptr_glibjson3795_g_srv_target_get_hostname")
external fun g_srv_target_get_hostname(target: CValuesRef<GSrvTarget>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson3796_g_srv_target_get_port")
external fun g_srv_target_get_port(target: CValuesRef<GSrvTarget>?): guint16

@CCall("knifunptr_glibjson3797_g_srv_target_get_priority")
external fun g_srv_target_get_priority(target: CValuesRef<GSrvTarget>?): guint16

@CCall("knifunptr_glibjson3798_g_srv_target_get_weight")
external fun g_srv_target_get_weight(target: CValuesRef<GSrvTarget>?): guint16

@CCall("knifunptr_glibjson3799_g_srv_target_list_sort")
external fun g_srv_target_list_sort(targets: CValuesRef<GList>?): CPointer<GList>?

@CCall("knifunptr_glibjson3800_g_simple_proxy_resolver_get_type")
external fun g_simple_proxy_resolver_get_type(): GType

@CCall("knifunptr_glibjson3801_g_simple_proxy_resolver_new")
external fun g_simple_proxy_resolver_new(@CCall.CString default_proxy: String?, ignore_hosts: CValuesRef<CPointerVar<gcharVar>>?): CPointer<GProxyResolver>?

@CCall("knifunptr_glibjson3802_g_simple_proxy_resolver_set_default_proxy")
external fun g_simple_proxy_resolver_set_default_proxy(resolver: CValuesRef<GSimpleProxyResolver>?, @CCall.CString default_proxy: String?): Unit

@CCall("knifunptr_glibjson3803_g_simple_proxy_resolver_set_ignore_hosts")
external fun g_simple_proxy_resolver_set_ignore_hosts(resolver: CValuesRef<GSimpleProxyResolver>?, ignore_hosts: CValuesRef<CPointerVar<gcharVar>>?): Unit

@CCall("knifunptr_glibjson3804_g_simple_proxy_resolver_set_uri_proxy")
external fun g_simple_proxy_resolver_set_uri_proxy(resolver: CValuesRef<GSimpleProxyResolver>?, @CCall.CString uri_scheme: String?, @CCall.CString proxy: String?): Unit

@CCall("knifunptr_glibjson3805_g_task_get_type")
external fun g_task_get_type(): GType

@CCall("knifunptr_glibjson3806_g_task_new")
external fun g_task_new(source_object: gpointer?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, callback_data: gpointer?): CPointer<GTask>?

@CCall("knifunptr_glibjson3807_g_task_report_error")
external fun g_task_report_error(source_object: gpointer?, callback: GAsyncReadyCallback?, callback_data: gpointer?, source_tag: gpointer?, error: CValuesRef<GError>?): Unit

@CCall("knifunptr_glibjson3808_g_task_report_new_error")
external fun g_task_report_new_error(source_object: gpointer?, callback: GAsyncReadyCallback?, callback_data: gpointer?, source_tag: gpointer?, domain: GQuark, code: gint, @CCall.CString format: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson3809_g_task_set_task_data")
external fun g_task_set_task_data(task: CValuesRef<GTask>?, task_data: gpointer?, task_data_destroy: GDestroyNotify?): Unit

@CCall("knifunptr_glibjson3810_g_task_set_priority")
external fun g_task_set_priority(task: CValuesRef<GTask>?, priority: gint): Unit

@CCall("knifunptr_glibjson3811_g_task_set_check_cancellable")
external fun g_task_set_check_cancellable(task: CValuesRef<GTask>?, check_cancellable: gboolean): Unit

@CCall("knifunptr_glibjson3812_g_task_set_source_tag")
external fun g_task_set_source_tag(task: CValuesRef<GTask>?, source_tag: gpointer?): Unit

@CCall("knifunptr_glibjson3813_g_task_get_source_object")
external fun g_task_get_source_object(task: CValuesRef<GTask>?): gpointer?

@CCall("knifunptr_glibjson3814_g_task_get_task_data")
external fun g_task_get_task_data(task: CValuesRef<GTask>?): gpointer?

@CCall("knifunptr_glibjson3815_g_task_get_priority")
external fun g_task_get_priority(task: CValuesRef<GTask>?): gint

@CCall("knifunptr_glibjson3816_g_task_get_context")
external fun g_task_get_context(task: CValuesRef<GTask>?): CPointer<GMainContext>?

@CCall("knifunptr_glibjson3817_g_task_get_cancellable")
external fun g_task_get_cancellable(task: CValuesRef<GTask>?): CPointer<GCancellable>?

@CCall("knifunptr_glibjson3818_g_task_get_check_cancellable")
external fun g_task_get_check_cancellable(task: CValuesRef<GTask>?): gboolean

@CCall("knifunptr_glibjson3819_g_task_get_source_tag")
external fun g_task_get_source_tag(task: CValuesRef<GTask>?): gpointer?

@CCall("knifunptr_glibjson3820_g_task_is_valid")
external fun g_task_is_valid(result: gpointer?, source_object: gpointer?): gboolean

@CCall("knifunptr_glibjson3821_g_task_run_in_thread")
external fun g_task_run_in_thread(task: CValuesRef<GTask>?, task_func: GTaskThreadFunc?): Unit

@CCall("knifunptr_glibjson3822_g_task_run_in_thread_sync")
external fun g_task_run_in_thread_sync(task: CValuesRef<GTask>?, task_func: GTaskThreadFunc?): Unit

@CCall("knifunptr_glibjson3823_g_task_set_return_on_cancel")
external fun g_task_set_return_on_cancel(task: CValuesRef<GTask>?, return_on_cancel: gboolean): gboolean

@CCall("knifunptr_glibjson3824_g_task_get_return_on_cancel")
external fun g_task_get_return_on_cancel(task: CValuesRef<GTask>?): gboolean

@CCall("knifunptr_glibjson3825_g_task_attach_source")
external fun g_task_attach_source(task: CValuesRef<GTask>?, source: CValuesRef<GSource>?, callback: GSourceFunc?): Unit

@CCall("knifunptr_glibjson3826_g_task_return_pointer")
external fun g_task_return_pointer(task: CValuesRef<GTask>?, result: gpointer?, result_destroy: GDestroyNotify?): Unit

@CCall("knifunptr_glibjson3827_g_task_return_boolean")
external fun g_task_return_boolean(task: CValuesRef<GTask>?, result: gboolean): Unit

@CCall("knifunptr_glibjson3828_g_task_return_int")
external fun g_task_return_int(task: CValuesRef<GTask>?, result: gssize): Unit

@CCall("knifunptr_glibjson3829_g_task_return_error")
external fun g_task_return_error(task: CValuesRef<GTask>?, error: CValuesRef<GError>?): Unit

@CCall("knifunptr_glibjson3830_g_task_return_new_error")
external fun g_task_return_new_error(task: CValuesRef<GTask>?, domain: GQuark, code: gint, @CCall.CString format: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson3831_g_task_return_error_if_cancelled")
external fun g_task_return_error_if_cancelled(task: CValuesRef<GTask>?): gboolean

@CCall("knifunptr_glibjson3832_g_task_propagate_pointer")
external fun g_task_propagate_pointer(task: CValuesRef<GTask>?, error: CValuesRef<CPointerVar<GError>>?): gpointer?

@CCall("knifunptr_glibjson3833_g_task_propagate_boolean")
external fun g_task_propagate_boolean(task: CValuesRef<GTask>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3834_g_task_propagate_int")
external fun g_task_propagate_int(task: CValuesRef<GTask>?, error: CValuesRef<CPointerVar<GError>>?): gssize

@CCall("knifunptr_glibjson3835_g_task_had_error")
external fun g_task_had_error(task: CValuesRef<GTask>?): gboolean

@CCall("knifunptr_glibjson3836_g_task_get_completed")
external fun g_task_get_completed(task: CValuesRef<GTask>?): gboolean

@CCall("knifunptr_glibjson3837_g_subprocess_get_type")
external fun g_subprocess_get_type(): GType

@CCall("knifunptr_glibjson3838_g_subprocess_new")
external fun g_subprocess_new(flags: GSubprocessFlags, error: CValuesRef<CPointerVar<GError>>?, @CCall.CString argv0: String?, vararg variadicArguments: Any?): CPointer<GSubprocess>?

@CCall("knifunptr_glibjson3839_g_subprocess_newv")
external fun g_subprocess_newv(argv: CValuesRef<CPointerVar<gcharVar>>?, flags: GSubprocessFlags, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSubprocess>?

@CCall("knifunptr_glibjson3840_g_subprocess_get_stdin_pipe")
external fun g_subprocess_get_stdin_pipe(subprocess: CValuesRef<GSubprocess>?): CPointer<GOutputStream>?

@CCall("knifunptr_glibjson3841_g_subprocess_get_stdout_pipe")
external fun g_subprocess_get_stdout_pipe(subprocess: CValuesRef<GSubprocess>?): CPointer<GInputStream>?

@CCall("knifunptr_glibjson3842_g_subprocess_get_stderr_pipe")
external fun g_subprocess_get_stderr_pipe(subprocess: CValuesRef<GSubprocess>?): CPointer<GInputStream>?

@CCall("knifunptr_glibjson3843_g_subprocess_get_identifier")
external fun g_subprocess_get_identifier(subprocess: CValuesRef<GSubprocess>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson3844_g_subprocess_send_signal")
external fun g_subprocess_send_signal(subprocess: CValuesRef<GSubprocess>?, signal_num: gint): Unit

@CCall("knifunptr_glibjson3845_g_subprocess_force_exit")
external fun g_subprocess_force_exit(subprocess: CValuesRef<GSubprocess>?): Unit

@CCall("knifunptr_glibjson3846_g_subprocess_wait")
external fun g_subprocess_wait(subprocess: CValuesRef<GSubprocess>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3847_g_subprocess_wait_async")
external fun g_subprocess_wait_async(subprocess: CValuesRef<GSubprocess>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3848_g_subprocess_wait_finish")
external fun g_subprocess_wait_finish(subprocess: CValuesRef<GSubprocess>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3849_g_subprocess_wait_check")
external fun g_subprocess_wait_check(subprocess: CValuesRef<GSubprocess>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3850_g_subprocess_wait_check_async")
external fun g_subprocess_wait_check_async(subprocess: CValuesRef<GSubprocess>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3851_g_subprocess_wait_check_finish")
external fun g_subprocess_wait_check_finish(subprocess: CValuesRef<GSubprocess>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3852_g_subprocess_get_status")
external fun g_subprocess_get_status(subprocess: CValuesRef<GSubprocess>?): gint

@CCall("knifunptr_glibjson3853_g_subprocess_get_successful")
external fun g_subprocess_get_successful(subprocess: CValuesRef<GSubprocess>?): gboolean

@CCall("knifunptr_glibjson3854_g_subprocess_get_if_exited")
external fun g_subprocess_get_if_exited(subprocess: CValuesRef<GSubprocess>?): gboolean

@CCall("knifunptr_glibjson3855_g_subprocess_get_exit_status")
external fun g_subprocess_get_exit_status(subprocess: CValuesRef<GSubprocess>?): gint

@CCall("knifunptr_glibjson3856_g_subprocess_get_if_signaled")
external fun g_subprocess_get_if_signaled(subprocess: CValuesRef<GSubprocess>?): gboolean

@CCall("knifunptr_glibjson3857_g_subprocess_get_term_sig")
external fun g_subprocess_get_term_sig(subprocess: CValuesRef<GSubprocess>?): gint

@CCall("knifunptr_glibjson3858_g_subprocess_communicate")
external fun g_subprocess_communicate(subprocess: CValuesRef<GSubprocess>?, stdin_buf: CValuesRef<GBytes>?, cancellable: CValuesRef<GCancellable>?, stdout_buf: CValuesRef<CPointerVar<GBytes>>?, stderr_buf: CValuesRef<CPointerVar<GBytes>>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3859_g_subprocess_communicate_async")
external fun g_subprocess_communicate_async(subprocess: CValuesRef<GSubprocess>?, stdin_buf: CValuesRef<GBytes>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3860_g_subprocess_communicate_finish")
external fun g_subprocess_communicate_finish(subprocess: CValuesRef<GSubprocess>?, result: CValuesRef<GAsyncResult>?, stdout_buf: CValuesRef<CPointerVar<GBytes>>?, stderr_buf: CValuesRef<CPointerVar<GBytes>>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3861_g_subprocess_communicate_utf8")
external fun g_subprocess_communicate_utf8(subprocess: CValuesRef<GSubprocess>?, @CCall.CString stdin_buf: String?, cancellable: CValuesRef<GCancellable>?, stdout_buf: CValuesRef<CPointerVar<ByteVar>>?, stderr_buf: CValuesRef<CPointerVar<ByteVar>>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3862_g_subprocess_communicate_utf8_async")
external fun g_subprocess_communicate_utf8_async(subprocess: CValuesRef<GSubprocess>?, @CCall.CString stdin_buf: String?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3863_g_subprocess_communicate_utf8_finish")
external fun g_subprocess_communicate_utf8_finish(subprocess: CValuesRef<GSubprocess>?, result: CValuesRef<GAsyncResult>?, stdout_buf: CValuesRef<CPointerVar<ByteVar>>?, stderr_buf: CValuesRef<CPointerVar<ByteVar>>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3864_g_subprocess_launcher_get_type")
external fun g_subprocess_launcher_get_type(): GType

@CCall("knifunptr_glibjson3865_g_subprocess_launcher_new")
external fun g_subprocess_launcher_new(flags: GSubprocessFlags): CPointer<GSubprocessLauncher>?

@CCall("knifunptr_glibjson3866_g_subprocess_launcher_spawn")
external fun g_subprocess_launcher_spawn(self: CValuesRef<GSubprocessLauncher>?, error: CValuesRef<CPointerVar<GError>>?, @CCall.CString argv0: String?, vararg variadicArguments: Any?): CPointer<GSubprocess>?

@CCall("knifunptr_glibjson3867_g_subprocess_launcher_spawnv")
external fun g_subprocess_launcher_spawnv(self: CValuesRef<GSubprocessLauncher>?, argv: CValuesRef<CPointerVar<gcharVar>>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GSubprocess>?

@CCall("knifunptr_glibjson3868_g_subprocess_launcher_set_environ")
external fun g_subprocess_launcher_set_environ(self: CValuesRef<GSubprocessLauncher>?, env: CValuesRef<CPointerVar<gcharVar>>?): Unit

@CCall("knifunptr_glibjson3869_g_subprocess_launcher_setenv")
external fun g_subprocess_launcher_setenv(self: CValuesRef<GSubprocessLauncher>?, @CCall.CString variable: String?, @CCall.CString value: String?, overwrite: gboolean): Unit

@CCall("knifunptr_glibjson3870_g_subprocess_launcher_unsetenv")
external fun g_subprocess_launcher_unsetenv(self: CValuesRef<GSubprocessLauncher>?, @CCall.CString variable: String?): Unit

@CCall("knifunptr_glibjson3871_g_subprocess_launcher_getenv")
external fun g_subprocess_launcher_getenv(self: CValuesRef<GSubprocessLauncher>?, @CCall.CString variable: String?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson3872_g_subprocess_launcher_set_cwd")
external fun g_subprocess_launcher_set_cwd(self: CValuesRef<GSubprocessLauncher>?, @CCall.CString cwd: String?): Unit

@CCall("knifunptr_glibjson3873_g_subprocess_launcher_set_flags")
external fun g_subprocess_launcher_set_flags(self: CValuesRef<GSubprocessLauncher>?, flags: GSubprocessFlags): Unit

@CCall("knifunptr_glibjson3874_g_subprocess_launcher_set_stdin_file_path")
external fun g_subprocess_launcher_set_stdin_file_path(self: CValuesRef<GSubprocessLauncher>?, @CCall.CString path: String?): Unit

@CCall("knifunptr_glibjson3875_g_subprocess_launcher_take_stdin_fd")
external fun g_subprocess_launcher_take_stdin_fd(self: CValuesRef<GSubprocessLauncher>?, fd: gint): Unit

@CCall("knifunptr_glibjson3876_g_subprocess_launcher_set_stdout_file_path")
external fun g_subprocess_launcher_set_stdout_file_path(self: CValuesRef<GSubprocessLauncher>?, @CCall.CString path: String?): Unit

@CCall("knifunptr_glibjson3877_g_subprocess_launcher_take_stdout_fd")
external fun g_subprocess_launcher_take_stdout_fd(self: CValuesRef<GSubprocessLauncher>?, fd: gint): Unit

@CCall("knifunptr_glibjson3878_g_subprocess_launcher_set_stderr_file_path")
external fun g_subprocess_launcher_set_stderr_file_path(self: CValuesRef<GSubprocessLauncher>?, @CCall.CString path: String?): Unit

@CCall("knifunptr_glibjson3879_g_subprocess_launcher_take_stderr_fd")
external fun g_subprocess_launcher_take_stderr_fd(self: CValuesRef<GSubprocessLauncher>?, fd: gint): Unit

@CCall("knifunptr_glibjson3880_g_subprocess_launcher_take_fd")
external fun g_subprocess_launcher_take_fd(self: CValuesRef<GSubprocessLauncher>?, source_fd: gint, target_fd: gint): Unit

@CCall("knifunptr_glibjson3881_g_subprocess_launcher_set_child_setup")
external fun g_subprocess_launcher_set_child_setup(self: CValuesRef<GSubprocessLauncher>?, child_setup: GSpawnChildSetupFunc?, user_data: gpointer?, destroy_notify: GDestroyNotify?): Unit

@CCall("knifunptr_glibjson3882_g_tcp_connection_get_type")
external fun g_tcp_connection_get_type(): GType

@CCall("knifunptr_glibjson3883_g_tcp_connection_set_graceful_disconnect")
external fun g_tcp_connection_set_graceful_disconnect(connection: CValuesRef<GTcpConnection>?, graceful_disconnect: gboolean): Unit

@CCall("knifunptr_glibjson3884_g_tcp_connection_get_graceful_disconnect")
external fun g_tcp_connection_get_graceful_disconnect(connection: CValuesRef<GTcpConnection>?): gboolean

@CCall("knifunptr_glibjson3885_g_tcp_wrapper_connection_get_type")
external fun g_tcp_wrapper_connection_get_type(): GType

@CCall("knifunptr_glibjson3886_g_tcp_wrapper_connection_new")
external fun g_tcp_wrapper_connection_new(base_io_stream: CValuesRef<GIOStream>?, socket: CValuesRef<GSocket>?): CPointer<GSocketConnection>?

@CCall("knifunptr_glibjson3887_g_tcp_wrapper_connection_get_base_io_stream")
external fun g_tcp_wrapper_connection_get_base_io_stream(conn: CValuesRef<GTcpWrapperConnection>?): CPointer<GIOStream>?

@CCall("knifunptr_glibjson3888_g_test_dbus_get_type")
external fun g_test_dbus_get_type(): GType

@CCall("knifunptr_glibjson3889_g_test_dbus_new")
external fun g_test_dbus_new(flags: GTestDBusFlags): CPointer<GTestDBus>?

@CCall("knifunptr_glibjson3890_g_test_dbus_get_flags")
external fun g_test_dbus_get_flags(self: CValuesRef<GTestDBus>?): GTestDBusFlags

@CCall("knifunptr_glibjson3891_g_test_dbus_get_bus_address")
external fun g_test_dbus_get_bus_address(self: CValuesRef<GTestDBus>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson3892_g_test_dbus_add_service_dir")
external fun g_test_dbus_add_service_dir(self: CValuesRef<GTestDBus>?, @CCall.CString path: String?): Unit

@CCall("knifunptr_glibjson3893_g_test_dbus_up")
external fun g_test_dbus_up(self: CValuesRef<GTestDBus>?): Unit

@CCall("knifunptr_glibjson3894_g_test_dbus_stop")
external fun g_test_dbus_stop(self: CValuesRef<GTestDBus>?): Unit

@CCall("knifunptr_glibjson3895_g_test_dbus_down")
external fun g_test_dbus_down(self: CValuesRef<GTestDBus>?): Unit

@CCall("knifunptr_glibjson3896_g_test_dbus_unset")
external fun g_test_dbus_unset(): Unit

@CCall("knifunptr_glibjson3897_g_themed_icon_get_type")
external fun g_themed_icon_get_type(): GType

@CCall("knifunptr_glibjson3898_g_themed_icon_new")
external fun g_themed_icon_new(@CCall.CString iconname: String?): CPointer<GIcon>?

@CCall("knifunptr_glibjson3899_g_themed_icon_new_with_default_fallbacks")
external fun g_themed_icon_new_with_default_fallbacks(@CCall.CString iconname: String?): CPointer<GIcon>?

@CCall("knifunptr_glibjson3900_g_themed_icon_new_from_names")
external fun g_themed_icon_new_from_names(iconnames: CValuesRef<CPointerVar<ByteVar>>?, len: Int): CPointer<GIcon>?

@CCall("knifunptr_glibjson3901_g_themed_icon_prepend_name")
external fun g_themed_icon_prepend_name(icon: CValuesRef<GThemedIcon>?, @CCall.CString iconname: String?): Unit

@CCall("knifunptr_glibjson3902_g_themed_icon_append_name")
external fun g_themed_icon_append_name(icon: CValuesRef<GThemedIcon>?, @CCall.CString iconname: String?): Unit

@CCall("knifunptr_glibjson3903_g_themed_icon_get_names")
external fun g_themed_icon_get_names(icon: CValuesRef<GThemedIcon>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson3904_g_threaded_socket_service_get_type")
external fun g_threaded_socket_service_get_type(): GType

@CCall("knifunptr_glibjson3905_g_threaded_socket_service_new")
external fun g_threaded_socket_service_new(max_threads: Int): CPointer<GSocketService>?

@CCall("knifunptr_glibjson3906_g_tls_backend_get_type")
external fun g_tls_backend_get_type(): GType

@CCall("knifunptr_glibjson3907_g_tls_backend_get_default")
external fun g_tls_backend_get_default(): CPointer<GTlsBackend>?

@CCall("knifunptr_glibjson3908_g_tls_backend_get_default_database")
external fun g_tls_backend_get_default_database(backend: CValuesRef<GTlsBackend>?): CPointer<GTlsDatabase>?

@CCall("knifunptr_glibjson3909_g_tls_backend_supports_tls")
external fun g_tls_backend_supports_tls(backend: CValuesRef<GTlsBackend>?): gboolean

@CCall("knifunptr_glibjson3910_g_tls_backend_supports_dtls")
external fun g_tls_backend_supports_dtls(backend: CValuesRef<GTlsBackend>?): gboolean

@CCall("knifunptr_glibjson3911_g_tls_backend_get_certificate_type")
external fun g_tls_backend_get_certificate_type(backend: CValuesRef<GTlsBackend>?): GType

@CCall("knifunptr_glibjson3912_g_tls_backend_get_client_connection_type")
external fun g_tls_backend_get_client_connection_type(backend: CValuesRef<GTlsBackend>?): GType

@CCall("knifunptr_glibjson3913_g_tls_backend_get_server_connection_type")
external fun g_tls_backend_get_server_connection_type(backend: CValuesRef<GTlsBackend>?): GType

@CCall("knifunptr_glibjson3914_g_tls_backend_get_file_database_type")
external fun g_tls_backend_get_file_database_type(backend: CValuesRef<GTlsBackend>?): GType

@CCall("knifunptr_glibjson3915_g_tls_backend_get_dtls_client_connection_type")
external fun g_tls_backend_get_dtls_client_connection_type(backend: CValuesRef<GTlsBackend>?): GType

@CCall("knifunptr_glibjson3916_g_tls_backend_get_dtls_server_connection_type")
external fun g_tls_backend_get_dtls_server_connection_type(backend: CValuesRef<GTlsBackend>?): GType

@CCall("knifunptr_glibjson3917_g_tls_certificate_get_type")
external fun g_tls_certificate_get_type(): GType

@CCall("knifunptr_glibjson3918_g_tls_certificate_new_from_pem")
external fun g_tls_certificate_new_from_pem(@CCall.CString data: String?, length: gssize, error: CValuesRef<CPointerVar<GError>>?): CPointer<GTlsCertificate>?

@CCall("knifunptr_glibjson3919_g_tls_certificate_new_from_file")
external fun g_tls_certificate_new_from_file(@CCall.CString file: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GTlsCertificate>?

@CCall("knifunptr_glibjson3920_g_tls_certificate_new_from_files")
external fun g_tls_certificate_new_from_files(@CCall.CString cert_file: String?, @CCall.CString key_file: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GTlsCertificate>?

@CCall("knifunptr_glibjson3921_g_tls_certificate_list_new_from_file")
external fun g_tls_certificate_list_new_from_file(@CCall.CString file: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GList>?

@CCall("knifunptr_glibjson3922_g_tls_certificate_get_issuer")
external fun g_tls_certificate_get_issuer(cert: CValuesRef<GTlsCertificate>?): CPointer<GTlsCertificate>?

@CCall("knifunptr_glibjson3923_g_tls_certificate_verify")
external fun g_tls_certificate_verify(cert: CValuesRef<GTlsCertificate>?, identity: CValuesRef<GSocketConnectable>?, trusted_ca: CValuesRef<GTlsCertificate>?): GTlsCertificateFlags

@CCall("knifunptr_glibjson3924_g_tls_certificate_is_same")
external fun g_tls_certificate_is_same(cert_one: CValuesRef<GTlsCertificate>?, cert_two: CValuesRef<GTlsCertificate>?): gboolean

@CCall("knifunptr_glibjson3925_g_tls_connection_get_type")
external fun g_tls_connection_get_type(): GType

@CCall("knifunptr_glibjson3926_g_tls_connection_set_use_system_certdb")
external fun g_tls_connection_set_use_system_certdb(conn: CValuesRef<GTlsConnection>?, use_system_certdb: gboolean): Unit

@CCall("knifunptr_glibjson3927_g_tls_connection_get_use_system_certdb")
external fun g_tls_connection_get_use_system_certdb(conn: CValuesRef<GTlsConnection>?): gboolean

@CCall("knifunptr_glibjson3928_g_tls_connection_set_database")
external fun g_tls_connection_set_database(conn: CValuesRef<GTlsConnection>?, database: CValuesRef<GTlsDatabase>?): Unit

@CCall("knifunptr_glibjson3929_g_tls_connection_get_database")
external fun g_tls_connection_get_database(conn: CValuesRef<GTlsConnection>?): CPointer<GTlsDatabase>?

@CCall("knifunptr_glibjson3930_g_tls_connection_set_certificate")
external fun g_tls_connection_set_certificate(conn: CValuesRef<GTlsConnection>?, certificate: CValuesRef<GTlsCertificate>?): Unit

@CCall("knifunptr_glibjson3931_g_tls_connection_get_certificate")
external fun g_tls_connection_get_certificate(conn: CValuesRef<GTlsConnection>?): CPointer<GTlsCertificate>?

@CCall("knifunptr_glibjson3932_g_tls_connection_set_interaction")
external fun g_tls_connection_set_interaction(conn: CValuesRef<GTlsConnection>?, interaction: CValuesRef<GTlsInteraction>?): Unit

@CCall("knifunptr_glibjson3933_g_tls_connection_get_interaction")
external fun g_tls_connection_get_interaction(conn: CValuesRef<GTlsConnection>?): CPointer<GTlsInteraction>?

@CCall("knifunptr_glibjson3934_g_tls_connection_get_peer_certificate")
external fun g_tls_connection_get_peer_certificate(conn: CValuesRef<GTlsConnection>?): CPointer<GTlsCertificate>?

@CCall("knifunptr_glibjson3935_g_tls_connection_get_peer_certificate_errors")
external fun g_tls_connection_get_peer_certificate_errors(conn: CValuesRef<GTlsConnection>?): GTlsCertificateFlags

@CCall("knifunptr_glibjson3936_g_tls_connection_set_require_close_notify")
external fun g_tls_connection_set_require_close_notify(conn: CValuesRef<GTlsConnection>?, require_close_notify: gboolean): Unit

@CCall("knifunptr_glibjson3937_g_tls_connection_get_require_close_notify")
external fun g_tls_connection_get_require_close_notify(conn: CValuesRef<GTlsConnection>?): gboolean

@CCall("knifunptr_glibjson3938_g_tls_connection_set_rehandshake_mode")
external fun g_tls_connection_set_rehandshake_mode(conn: CValuesRef<GTlsConnection>?, mode: GTlsRehandshakeMode): Unit

@CCall("knifunptr_glibjson3939_g_tls_connection_get_rehandshake_mode")
external fun g_tls_connection_get_rehandshake_mode(conn: CValuesRef<GTlsConnection>?): GTlsRehandshakeMode

@CCall("knifunptr_glibjson3940_g_tls_connection_handshake")
external fun g_tls_connection_handshake(conn: CValuesRef<GTlsConnection>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3941_g_tls_connection_handshake_async")
external fun g_tls_connection_handshake_async(conn: CValuesRef<GTlsConnection>?, io_priority: Int, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3942_g_tls_connection_handshake_finish")
external fun g_tls_connection_handshake_finish(conn: CValuesRef<GTlsConnection>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson3943_g_tls_error_quark")
external fun g_tls_error_quark(): GQuark

@CCall("knifunptr_glibjson3944_g_tls_connection_emit_accept_certificate")
external fun g_tls_connection_emit_accept_certificate(conn: CValuesRef<GTlsConnection>?, peer_cert: CValuesRef<GTlsCertificate>?, errors: GTlsCertificateFlags): gboolean

@CCall("knifunptr_glibjson3945_g_tls_client_connection_get_type")
external fun g_tls_client_connection_get_type(): GType

@CCall("knifunptr_glibjson3946_g_tls_client_connection_new")
external fun g_tls_client_connection_new(base_io_stream: CValuesRef<GIOStream>?, server_identity: CValuesRef<GSocketConnectable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GIOStream>?

@CCall("knifunptr_glibjson3947_g_tls_client_connection_get_validation_flags")
external fun g_tls_client_connection_get_validation_flags(conn: CValuesRef<GTlsClientConnection>?): GTlsCertificateFlags

@CCall("knifunptr_glibjson3948_g_tls_client_connection_set_validation_flags")
external fun g_tls_client_connection_set_validation_flags(conn: CValuesRef<GTlsClientConnection>?, flags: GTlsCertificateFlags): Unit

@CCall("knifunptr_glibjson3949_g_tls_client_connection_get_server_identity")
external fun g_tls_client_connection_get_server_identity(conn: CValuesRef<GTlsClientConnection>?): CPointer<GSocketConnectable>?

@CCall("knifunptr_glibjson3950_g_tls_client_connection_set_server_identity")
external fun g_tls_client_connection_set_server_identity(conn: CValuesRef<GTlsClientConnection>?, identity: CValuesRef<GSocketConnectable>?): Unit

@CCall("knifunptr_glibjson3951_g_tls_client_connection_get_use_ssl3")
external fun g_tls_client_connection_get_use_ssl3(conn: CValuesRef<GTlsClientConnection>?): gboolean

@CCall("knifunptr_glibjson3952_g_tls_client_connection_set_use_ssl3")
external fun g_tls_client_connection_set_use_ssl3(conn: CValuesRef<GTlsClientConnection>?, use_ssl3: gboolean): Unit

@CCall("knifunptr_glibjson3953_g_tls_client_connection_get_accepted_cas")
external fun g_tls_client_connection_get_accepted_cas(conn: CValuesRef<GTlsClientConnection>?): CPointer<GList>?

@CCall("knifunptr_glibjson3954_g_tls_client_connection_copy_session_state")
external fun g_tls_client_connection_copy_session_state(conn: CValuesRef<GTlsClientConnection>?, source: CValuesRef<GTlsClientConnection>?): Unit

@CCall("knifunptr_glibjson3955_g_tls_database_get_type")
external fun g_tls_database_get_type(): GType

@CCall("knifunptr_glibjson3956_g_tls_database_verify_chain")
external fun g_tls_database_verify_chain(self: CValuesRef<GTlsDatabase>?, chain: CValuesRef<GTlsCertificate>?, @CCall.CString purpose: String?, identity: CValuesRef<GSocketConnectable>?, interaction: CValuesRef<GTlsInteraction>?, flags: GTlsDatabaseVerifyFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): GTlsCertificateFlags

@CCall("knifunptr_glibjson3957_g_tls_database_verify_chain_async")
external fun g_tls_database_verify_chain_async(self: CValuesRef<GTlsDatabase>?, chain: CValuesRef<GTlsCertificate>?, @CCall.CString purpose: String?, identity: CValuesRef<GSocketConnectable>?, interaction: CValuesRef<GTlsInteraction>?, flags: GTlsDatabaseVerifyFlags, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3958_g_tls_database_verify_chain_finish")
external fun g_tls_database_verify_chain_finish(self: CValuesRef<GTlsDatabase>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): GTlsCertificateFlags

@CCall("knifunptr_glibjson3959_g_tls_database_create_certificate_handle")
external fun g_tls_database_create_certificate_handle(self: CValuesRef<GTlsDatabase>?, certificate: CValuesRef<GTlsCertificate>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson3960_g_tls_database_lookup_certificate_for_handle")
external fun g_tls_database_lookup_certificate_for_handle(self: CValuesRef<GTlsDatabase>?, @CCall.CString handle: String?, interaction: CValuesRef<GTlsInteraction>?, flags: GTlsDatabaseLookupFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GTlsCertificate>?

@CCall("knifunptr_glibjson3961_g_tls_database_lookup_certificate_for_handle_async")
external fun g_tls_database_lookup_certificate_for_handle_async(self: CValuesRef<GTlsDatabase>?, @CCall.CString handle: String?, interaction: CValuesRef<GTlsInteraction>?, flags: GTlsDatabaseLookupFlags, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3962_g_tls_database_lookup_certificate_for_handle_finish")
external fun g_tls_database_lookup_certificate_for_handle_finish(self: CValuesRef<GTlsDatabase>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GTlsCertificate>?

@CCall("knifunptr_glibjson3963_g_tls_database_lookup_certificate_issuer")
external fun g_tls_database_lookup_certificate_issuer(self: CValuesRef<GTlsDatabase>?, certificate: CValuesRef<GTlsCertificate>?, interaction: CValuesRef<GTlsInteraction>?, flags: GTlsDatabaseLookupFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GTlsCertificate>?

@CCall("knifunptr_glibjson3964_g_tls_database_lookup_certificate_issuer_async")
external fun g_tls_database_lookup_certificate_issuer_async(self: CValuesRef<GTlsDatabase>?, certificate: CValuesRef<GTlsCertificate>?, interaction: CValuesRef<GTlsInteraction>?, flags: GTlsDatabaseLookupFlags, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3965_g_tls_database_lookup_certificate_issuer_finish")
external fun g_tls_database_lookup_certificate_issuer_finish(self: CValuesRef<GTlsDatabase>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GTlsCertificate>?

@CCall("knifunptr_glibjson3966_g_tls_database_lookup_certificates_issued_by")
external fun g_tls_database_lookup_certificates_issued_by(self: CValuesRef<GTlsDatabase>?, issuer_raw_dn: CValuesRef<GByteArray>?, interaction: CValuesRef<GTlsInteraction>?, flags: GTlsDatabaseLookupFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GList>?

@CCall("knifunptr_glibjson3967_g_tls_database_lookup_certificates_issued_by_async")
external fun g_tls_database_lookup_certificates_issued_by_async(self: CValuesRef<GTlsDatabase>?, issuer_raw_dn: CValuesRef<GByteArray>?, interaction: CValuesRef<GTlsInteraction>?, flags: GTlsDatabaseLookupFlags, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3968_g_tls_database_lookup_certificates_issued_by_finish")
external fun g_tls_database_lookup_certificates_issued_by_finish(self: CValuesRef<GTlsDatabase>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GList>?

@CCall("knifunptr_glibjson3969_g_tls_file_database_get_type")
external fun g_tls_file_database_get_type(): GType

@CCall("knifunptr_glibjson3970_g_tls_file_database_new")
external fun g_tls_file_database_new(@CCall.CString anchors: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GTlsDatabase>?

@CCall("knifunptr_glibjson3971_g_tls_interaction_get_type")
external fun g_tls_interaction_get_type(): GType

@CCall("knifunptr_glibjson3972_g_tls_interaction_invoke_ask_password")
external fun g_tls_interaction_invoke_ask_password(interaction: CValuesRef<GTlsInteraction>?, password: CValuesRef<GTlsPassword>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): GTlsInteractionResult

@CCall("knifunptr_glibjson3973_g_tls_interaction_ask_password")
external fun g_tls_interaction_ask_password(interaction: CValuesRef<GTlsInteraction>?, password: CValuesRef<GTlsPassword>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): GTlsInteractionResult

@CCall("knifunptr_glibjson3974_g_tls_interaction_ask_password_async")
external fun g_tls_interaction_ask_password_async(interaction: CValuesRef<GTlsInteraction>?, password: CValuesRef<GTlsPassword>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3975_g_tls_interaction_ask_password_finish")
external fun g_tls_interaction_ask_password_finish(interaction: CValuesRef<GTlsInteraction>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): GTlsInteractionResult

@CCall("knifunptr_glibjson3976_g_tls_interaction_invoke_request_certificate")
external fun g_tls_interaction_invoke_request_certificate(interaction: CValuesRef<GTlsInteraction>?, connection: CValuesRef<GTlsConnection>?, flags: GTlsCertificateRequestFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): GTlsInteractionResult

@CCall("knifunptr_glibjson3977_g_tls_interaction_request_certificate")
external fun g_tls_interaction_request_certificate(interaction: CValuesRef<GTlsInteraction>?, connection: CValuesRef<GTlsConnection>?, flags: GTlsCertificateRequestFlags, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): GTlsInteractionResult

@CCall("knifunptr_glibjson3978_g_tls_interaction_request_certificate_async")
external fun g_tls_interaction_request_certificate_async(interaction: CValuesRef<GTlsInteraction>?, connection: CValuesRef<GTlsConnection>?, flags: GTlsCertificateRequestFlags, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson3979_g_tls_interaction_request_certificate_finish")
external fun g_tls_interaction_request_certificate_finish(interaction: CValuesRef<GTlsInteraction>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): GTlsInteractionResult

@CCall("knifunptr_glibjson3980_g_tls_server_connection_get_type")
external fun g_tls_server_connection_get_type(): GType

@CCall("knifunptr_glibjson3981_g_tls_server_connection_new")
external fun g_tls_server_connection_new(base_io_stream: CValuesRef<GIOStream>?, certificate: CValuesRef<GTlsCertificate>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GIOStream>?

@CCall("knifunptr_glibjson3982_g_tls_password_get_type")
external fun g_tls_password_get_type(): GType

@CCall("knifunptr_glibjson3983_g_tls_password_new")
external fun g_tls_password_new(flags: GTlsPasswordFlags, @CCall.CString description: String?): CPointer<GTlsPassword>?

@CCall("knifunptr_glibjson3984_g_tls_password_get_value")
external fun g_tls_password_get_value(password: CValuesRef<GTlsPassword>?, length: CValuesRef<gsizeVar>?): CPointer<gucharVar>?

@CCall("knifunptr_glibjson3985_g_tls_password_set_value")
external fun g_tls_password_set_value(password: CValuesRef<GTlsPassword>?, value: CValuesRef<gucharVar>?, length: gssize): Unit

@CCall("knifunptr_glibjson3986_g_tls_password_set_value_full")
external fun g_tls_password_set_value_full(password: CValuesRef<GTlsPassword>?, value: CValuesRef<gucharVar>?, length: gssize, destroy: GDestroyNotify?): Unit

@CCall("knifunptr_glibjson3987_g_tls_password_get_flags")
external fun g_tls_password_get_flags(password: CValuesRef<GTlsPassword>?): GTlsPasswordFlags

@CCall("knifunptr_glibjson3988_g_tls_password_set_flags")
external fun g_tls_password_set_flags(password: CValuesRef<GTlsPassword>?, flags: GTlsPasswordFlags): Unit

@CCall("knifunptr_glibjson3989_g_tls_password_get_description")
external fun g_tls_password_get_description(password: CValuesRef<GTlsPassword>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson3990_g_tls_password_set_description")
external fun g_tls_password_set_description(password: CValuesRef<GTlsPassword>?, @CCall.CString description: String?): Unit

@CCall("knifunptr_glibjson3991_g_tls_password_get_warning")
external fun g_tls_password_get_warning(password: CValuesRef<GTlsPassword>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson3992_g_tls_password_set_warning")
external fun g_tls_password_set_warning(password: CValuesRef<GTlsPassword>?, @CCall.CString warning: String?): Unit

@CCall("knifunptr_glibjson3993_g_vfs_get_type")
external fun g_vfs_get_type(): GType

@CCall("knifunptr_glibjson3994_g_vfs_is_active")
external fun g_vfs_is_active(vfs: CValuesRef<GVfs>?): gboolean

@CCall("knifunptr_glibjson3995_g_vfs_get_file_for_path")
external fun g_vfs_get_file_for_path(vfs: CValuesRef<GVfs>?, @CCall.CString path: String?): CPointer<GFile>?

@CCall("knifunptr_glibjson3996_g_vfs_get_file_for_uri")
external fun g_vfs_get_file_for_uri(vfs: CValuesRef<GVfs>?, @CCall.CString uri: String?): CPointer<GFile>?

@CCall("knifunptr_glibjson3997_g_vfs_get_supported_uri_schemes")
external fun g_vfs_get_supported_uri_schemes(vfs: CValuesRef<GVfs>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson3998_g_vfs_parse_name")
external fun g_vfs_parse_name(vfs: CValuesRef<GVfs>?, @CCall.CString parse_name: String?): CPointer<GFile>?

@CCall("knifunptr_glibjson3999_g_vfs_get_default")
external fun g_vfs_get_default(): CPointer<GVfs>?

@CCall("knifunptr_glibjson4000_g_vfs_get_local")
external fun g_vfs_get_local(): CPointer<GVfs>?

@CCall("knifunptr_glibjson4001_g_vfs_register_uri_scheme")
external fun g_vfs_register_uri_scheme(vfs: CValuesRef<GVfs>?, @CCall.CString scheme: String?, uri_func: GVfsFileLookupFunc?, uri_data: gpointer?, uri_destroy: GDestroyNotify?, parse_name_func: GVfsFileLookupFunc?, parse_name_data: gpointer?, parse_name_destroy: GDestroyNotify?): gboolean

@CCall("knifunptr_glibjson4002_g_vfs_unregister_uri_scheme")
external fun g_vfs_unregister_uri_scheme(vfs: CValuesRef<GVfs>?, @CCall.CString scheme: String?): gboolean

@CCall("knifunptr_glibjson4003_g_volume_get_type")
external fun g_volume_get_type(): GType

@CCall("knifunptr_glibjson4004_g_volume_get_name")
external fun g_volume_get_name(volume: CValuesRef<GVolume>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson4005_g_volume_get_icon")
external fun g_volume_get_icon(volume: CValuesRef<GVolume>?): CPointer<GIcon>?

@CCall("knifunptr_glibjson4006_g_volume_get_symbolic_icon")
external fun g_volume_get_symbolic_icon(volume: CValuesRef<GVolume>?): CPointer<GIcon>?

@CCall("knifunptr_glibjson4007_g_volume_get_uuid")
external fun g_volume_get_uuid(volume: CValuesRef<GVolume>?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson4008_g_volume_get_drive")
external fun g_volume_get_drive(volume: CValuesRef<GVolume>?): CPointer<GDrive>?

@CCall("knifunptr_glibjson4009_g_volume_get_mount")
external fun g_volume_get_mount(volume: CValuesRef<GVolume>?): CPointer<GMount>?

@CCall("knifunptr_glibjson4010_g_volume_can_mount")
external fun g_volume_can_mount(volume: CValuesRef<GVolume>?): gboolean

@CCall("knifunptr_glibjson4011_g_volume_can_eject")
external fun g_volume_can_eject(volume: CValuesRef<GVolume>?): gboolean

@CCall("knifunptr_glibjson4012_g_volume_should_automount")
external fun g_volume_should_automount(volume: CValuesRef<GVolume>?): gboolean

@CCall("knifunptr_glibjson4013_g_volume_mount")
external fun g_volume_mount(volume: CValuesRef<GVolume>?, flags: GMountMountFlags, mount_operation: CValuesRef<GMountOperation>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson4014_g_volume_mount_finish")
external fun g_volume_mount_finish(volume: CValuesRef<GVolume>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson4015_g_volume_eject")
external fun g_volume_eject(volume: CValuesRef<GVolume>?, flags: GMountUnmountFlags, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson4016_g_volume_eject_finish")
external fun g_volume_eject_finish(volume: CValuesRef<GVolume>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson4017_g_volume_get_identifier")
external fun g_volume_get_identifier(volume: CValuesRef<GVolume>?, @CCall.CString kind: String?): CPointer<ByteVar>?

@CCall("knifunptr_glibjson4018_g_volume_enumerate_identifiers")
external fun g_volume_enumerate_identifiers(volume: CValuesRef<GVolume>?): CPointer<CPointerVar<ByteVar>>?

@CCall("knifunptr_glibjson4019_g_volume_get_activation_root")
external fun g_volume_get_activation_root(volume: CValuesRef<GVolume>?): CPointer<GFile>?

@CCall("knifunptr_glibjson4020_g_volume_eject_with_operation")
external fun g_volume_eject_with_operation(volume: CValuesRef<GVolume>?, flags: GMountUnmountFlags, mount_operation: CValuesRef<GMountOperation>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson4021_g_volume_eject_with_operation_finish")
external fun g_volume_eject_with_operation_finish(volume: CValuesRef<GVolume>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson4022_g_volume_get_sort_key")
external fun g_volume_get_sort_key(volume: CValuesRef<GVolume>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson4023_g_zlib_compressor_get_type")
external fun g_zlib_compressor_get_type(): GType

@CCall("knifunptr_glibjson4024_g_zlib_compressor_new")
external fun g_zlib_compressor_new(format: GZlibCompressorFormat, level: Int): CPointer<GZlibCompressor>?

@CCall("knifunptr_glibjson4025_g_zlib_compressor_get_file_info")
external fun g_zlib_compressor_get_file_info(compressor: CValuesRef<GZlibCompressor>?): CPointer<GFileInfo>?

@CCall("knifunptr_glibjson4026_g_zlib_compressor_set_file_info")
external fun g_zlib_compressor_set_file_info(compressor: CValuesRef<GZlibCompressor>?, file_info: CValuesRef<GFileInfo>?): Unit

@CCall("knifunptr_glibjson4027_g_zlib_decompressor_get_type")
external fun g_zlib_decompressor_get_type(): GType

@CCall("knifunptr_glibjson4028_g_zlib_decompressor_new")
external fun g_zlib_decompressor_new(format: GZlibCompressorFormat): CPointer<GZlibDecompressor>?

@CCall("knifunptr_glibjson4029_g_zlib_decompressor_get_file_info")
external fun g_zlib_decompressor_get_file_info(decompressor: CValuesRef<GZlibDecompressor>?): CPointer<GFileInfo>?

@CCall("knifunptr_glibjson4030_g_dbus_interface_get_type")
external fun g_dbus_interface_get_type(): GType

@CCall("knifunptr_glibjson4031_g_dbus_interface_get_info")
external fun g_dbus_interface_get_info(interface_: CValuesRef<GDBusInterface>?): CPointer<GDBusInterfaceInfo>?

@CCall("knifunptr_glibjson4032_g_dbus_interface_get_object")
external fun g_dbus_interface_get_object(interface_: CValuesRef<GDBusInterface>?): CPointer<GDBusObject>?

@CCall("knifunptr_glibjson4033_g_dbus_interface_set_object")
external fun g_dbus_interface_set_object(interface_: CValuesRef<GDBusInterface>?, `object`: CValuesRef<GDBusObject>?): Unit

@CCall("knifunptr_glibjson4034_g_dbus_interface_dup_object")
external fun g_dbus_interface_dup_object(interface_: CValuesRef<GDBusInterface>?): CPointer<GDBusObject>?

@CCall("knifunptr_glibjson4035_g_dbus_interface_skeleton_get_type")
external fun g_dbus_interface_skeleton_get_type(): GType

@CCall("knifunptr_glibjson4036_g_dbus_interface_skeleton_get_flags")
external fun g_dbus_interface_skeleton_get_flags(interface_: CValuesRef<GDBusInterfaceSkeleton>?): GDBusInterfaceSkeletonFlags

@CCall("knifunptr_glibjson4037_g_dbus_interface_skeleton_set_flags")
external fun g_dbus_interface_skeleton_set_flags(interface_: CValuesRef<GDBusInterfaceSkeleton>?, flags: GDBusInterfaceSkeletonFlags): Unit

@CCall("knifunptr_glibjson4038_g_dbus_interface_skeleton_get_info")
external fun g_dbus_interface_skeleton_get_info(interface_: CValuesRef<GDBusInterfaceSkeleton>?): CPointer<GDBusInterfaceInfo>?

@CCall("knifunptr_glibjson4039_g_dbus_interface_skeleton_get_vtable")
external fun g_dbus_interface_skeleton_get_vtable(interface_: CValuesRef<GDBusInterfaceSkeleton>?): CPointer<GDBusInterfaceVTable>?

@CCall("knifunptr_glibjson4040_g_dbus_interface_skeleton_get_properties")
external fun g_dbus_interface_skeleton_get_properties(interface_: CValuesRef<GDBusInterfaceSkeleton>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson4041_g_dbus_interface_skeleton_flush")
external fun g_dbus_interface_skeleton_flush(interface_: CValuesRef<GDBusInterfaceSkeleton>?): Unit

@CCall("knifunptr_glibjson4042_g_dbus_interface_skeleton_export")
external fun g_dbus_interface_skeleton_export(interface_: CValuesRef<GDBusInterfaceSkeleton>?, connection: CValuesRef<GDBusConnection>?, @CCall.CString object_path: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson4043_g_dbus_interface_skeleton_unexport")
external fun g_dbus_interface_skeleton_unexport(interface_: CValuesRef<GDBusInterfaceSkeleton>?): Unit

@CCall("knifunptr_glibjson4044_g_dbus_interface_skeleton_unexport_from_connection")
external fun g_dbus_interface_skeleton_unexport_from_connection(interface_: CValuesRef<GDBusInterfaceSkeleton>?, connection: CValuesRef<GDBusConnection>?): Unit

@CCall("knifunptr_glibjson4045_g_dbus_interface_skeleton_get_connection")
external fun g_dbus_interface_skeleton_get_connection(interface_: CValuesRef<GDBusInterfaceSkeleton>?): CPointer<GDBusConnection>?

@CCall("knifunptr_glibjson4046_g_dbus_interface_skeleton_get_connections")
external fun g_dbus_interface_skeleton_get_connections(interface_: CValuesRef<GDBusInterfaceSkeleton>?): CPointer<GList>?

@CCall("knifunptr_glibjson4047_g_dbus_interface_skeleton_has_connection")
external fun g_dbus_interface_skeleton_has_connection(interface_: CValuesRef<GDBusInterfaceSkeleton>?, connection: CValuesRef<GDBusConnection>?): gboolean

@CCall("knifunptr_glibjson4048_g_dbus_interface_skeleton_get_object_path")
external fun g_dbus_interface_skeleton_get_object_path(interface_: CValuesRef<GDBusInterfaceSkeleton>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson4049_g_dbus_object_get_type")
external fun g_dbus_object_get_type(): GType

@CCall("knifunptr_glibjson4050_g_dbus_object_get_object_path")
external fun g_dbus_object_get_object_path(`object`: CValuesRef<GDBusObject>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson4051_g_dbus_object_get_interfaces")
external fun g_dbus_object_get_interfaces(`object`: CValuesRef<GDBusObject>?): CPointer<GList>?

@CCall("knifunptr_glibjson4052_g_dbus_object_get_interface")
external fun g_dbus_object_get_interface(`object`: CValuesRef<GDBusObject>?, @CCall.CString interface_name: String?): CPointer<GDBusInterface>?

@CCall("knifunptr_glibjson4053_g_dbus_object_skeleton_get_type")
external fun g_dbus_object_skeleton_get_type(): GType

@CCall("knifunptr_glibjson4054_g_dbus_object_skeleton_new")
external fun g_dbus_object_skeleton_new(@CCall.CString object_path: String?): CPointer<GDBusObjectSkeleton>?

@CCall("knifunptr_glibjson4055_g_dbus_object_skeleton_flush")
external fun g_dbus_object_skeleton_flush(`object`: CValuesRef<GDBusObjectSkeleton>?): Unit

@CCall("knifunptr_glibjson4056_g_dbus_object_skeleton_add_interface")
external fun g_dbus_object_skeleton_add_interface(`object`: CValuesRef<GDBusObjectSkeleton>?, interface_: CValuesRef<GDBusInterfaceSkeleton>?): Unit

@CCall("knifunptr_glibjson4057_g_dbus_object_skeleton_remove_interface")
external fun g_dbus_object_skeleton_remove_interface(`object`: CValuesRef<GDBusObjectSkeleton>?, interface_: CValuesRef<GDBusInterfaceSkeleton>?): Unit

@CCall("knifunptr_glibjson4058_g_dbus_object_skeleton_remove_interface_by_name")
external fun g_dbus_object_skeleton_remove_interface_by_name(`object`: CValuesRef<GDBusObjectSkeleton>?, @CCall.CString interface_name: String?): Unit

@CCall("knifunptr_glibjson4059_g_dbus_object_skeleton_set_object_path")
external fun g_dbus_object_skeleton_set_object_path(`object`: CValuesRef<GDBusObjectSkeleton>?, @CCall.CString object_path: String?): Unit

@CCall("knifunptr_glibjson4060_g_dbus_object_proxy_get_type")
external fun g_dbus_object_proxy_get_type(): GType

@CCall("knifunptr_glibjson4061_g_dbus_object_proxy_new")
external fun g_dbus_object_proxy_new(connection: CValuesRef<GDBusConnection>?, @CCall.CString object_path: String?): CPointer<GDBusObjectProxy>?

@CCall("knifunptr_glibjson4062_g_dbus_object_proxy_get_connection")
external fun g_dbus_object_proxy_get_connection(proxy: CValuesRef<GDBusObjectProxy>?): CPointer<GDBusConnection>?

@CCall("knifunptr_glibjson4063_g_dbus_object_manager_get_type")
external fun g_dbus_object_manager_get_type(): GType

@CCall("knifunptr_glibjson4064_g_dbus_object_manager_get_object_path")
external fun g_dbus_object_manager_get_object_path(manager: CValuesRef<GDBusObjectManager>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson4065_g_dbus_object_manager_get_objects")
external fun g_dbus_object_manager_get_objects(manager: CValuesRef<GDBusObjectManager>?): CPointer<GList>?

@CCall("knifunptr_glibjson4066_g_dbus_object_manager_get_object")
external fun g_dbus_object_manager_get_object(manager: CValuesRef<GDBusObjectManager>?, @CCall.CString object_path: String?): CPointer<GDBusObject>?

@CCall("knifunptr_glibjson4067_g_dbus_object_manager_get_interface")
external fun g_dbus_object_manager_get_interface(manager: CValuesRef<GDBusObjectManager>?, @CCall.CString object_path: String?, @CCall.CString interface_name: String?): CPointer<GDBusInterface>?

@CCall("knifunptr_glibjson4068_g_dbus_object_manager_client_get_type")
external fun g_dbus_object_manager_client_get_type(): GType

@CCall("knifunptr_glibjson4069_g_dbus_object_manager_client_new")
external fun g_dbus_object_manager_client_new(connection: CValuesRef<GDBusConnection>?, flags: GDBusObjectManagerClientFlags, @CCall.CString name: String?, @CCall.CString object_path: String?, get_proxy_type_func: GDBusProxyTypeFunc?, get_proxy_type_user_data: gpointer?, get_proxy_type_destroy_notify: GDestroyNotify?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson4070_g_dbus_object_manager_client_new_finish")
external fun g_dbus_object_manager_client_new_finish(res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusObjectManager>?

@CCall("knifunptr_glibjson4071_g_dbus_object_manager_client_new_sync")
external fun g_dbus_object_manager_client_new_sync(connection: CValuesRef<GDBusConnection>?, flags: GDBusObjectManagerClientFlags, @CCall.CString name: String?, @CCall.CString object_path: String?, get_proxy_type_func: GDBusProxyTypeFunc?, get_proxy_type_user_data: gpointer?, get_proxy_type_destroy_notify: GDestroyNotify?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusObjectManager>?

@CCall("knifunptr_glibjson4072_g_dbus_object_manager_client_new_for_bus")
external fun g_dbus_object_manager_client_new_for_bus(bus_type: GBusType, flags: GDBusObjectManagerClientFlags, @CCall.CString name: String?, @CCall.CString object_path: String?, get_proxy_type_func: GDBusProxyTypeFunc?, get_proxy_type_user_data: gpointer?, get_proxy_type_destroy_notify: GDestroyNotify?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson4073_g_dbus_object_manager_client_new_for_bus_finish")
external fun g_dbus_object_manager_client_new_for_bus_finish(res: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusObjectManager>?

@CCall("knifunptr_glibjson4074_g_dbus_object_manager_client_new_for_bus_sync")
external fun g_dbus_object_manager_client_new_for_bus_sync(bus_type: GBusType, flags: GDBusObjectManagerClientFlags, @CCall.CString name: String?, @CCall.CString object_path: String?, get_proxy_type_func: GDBusProxyTypeFunc?, get_proxy_type_user_data: gpointer?, get_proxy_type_destroy_notify: GDestroyNotify?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GDBusObjectManager>?

@CCall("knifunptr_glibjson4075_g_dbus_object_manager_client_get_connection")
external fun g_dbus_object_manager_client_get_connection(manager: CValuesRef<GDBusObjectManagerClient>?): CPointer<GDBusConnection>?

@CCall("knifunptr_glibjson4076_g_dbus_object_manager_client_get_flags")
external fun g_dbus_object_manager_client_get_flags(manager: CValuesRef<GDBusObjectManagerClient>?): GDBusObjectManagerClientFlags

@CCall("knifunptr_glibjson4077_g_dbus_object_manager_client_get_name")
external fun g_dbus_object_manager_client_get_name(manager: CValuesRef<GDBusObjectManagerClient>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson4078_g_dbus_object_manager_client_get_name_owner")
external fun g_dbus_object_manager_client_get_name_owner(manager: CValuesRef<GDBusObjectManagerClient>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson4079_g_dbus_object_manager_server_get_type")
external fun g_dbus_object_manager_server_get_type(): GType

@CCall("knifunptr_glibjson4080_g_dbus_object_manager_server_new")
external fun g_dbus_object_manager_server_new(@CCall.CString object_path: String?): CPointer<GDBusObjectManagerServer>?

@CCall("knifunptr_glibjson4081_g_dbus_object_manager_server_get_connection")
external fun g_dbus_object_manager_server_get_connection(manager: CValuesRef<GDBusObjectManagerServer>?): CPointer<GDBusConnection>?

@CCall("knifunptr_glibjson4082_g_dbus_object_manager_server_set_connection")
external fun g_dbus_object_manager_server_set_connection(manager: CValuesRef<GDBusObjectManagerServer>?, connection: CValuesRef<GDBusConnection>?): Unit

@CCall("knifunptr_glibjson4083_g_dbus_object_manager_server_export")
external fun g_dbus_object_manager_server_export(manager: CValuesRef<GDBusObjectManagerServer>?, `object`: CValuesRef<GDBusObjectSkeleton>?): Unit

@CCall("knifunptr_glibjson4084_g_dbus_object_manager_server_export_uniquely")
external fun g_dbus_object_manager_server_export_uniquely(manager: CValuesRef<GDBusObjectManagerServer>?, `object`: CValuesRef<GDBusObjectSkeleton>?): Unit

@CCall("knifunptr_glibjson4085_g_dbus_object_manager_server_is_exported")
external fun g_dbus_object_manager_server_is_exported(manager: CValuesRef<GDBusObjectManagerServer>?, `object`: CValuesRef<GDBusObjectSkeleton>?): gboolean

@CCall("knifunptr_glibjson4086_g_dbus_object_manager_server_unexport")
external fun g_dbus_object_manager_server_unexport(manager: CValuesRef<GDBusObjectManagerServer>?, @CCall.CString object_path: String?): gboolean

@CCall("knifunptr_glibjson4087_g_dbus_action_group_get_type")
external fun g_dbus_action_group_get_type(): GType

@CCall("knifunptr_glibjson4088_g_dbus_action_group_get")
external fun g_dbus_action_group_get(connection: CValuesRef<GDBusConnection>?, @CCall.CString bus_name: String?, @CCall.CString object_path: String?): CPointer<GDBusActionGroup>?

@CCall("knifunptr_glibjson4089_g_remote_action_group_get_type")
external fun g_remote_action_group_get_type(): GType

@CCall("knifunptr_glibjson4090_g_remote_action_group_activate_action_full")
external fun g_remote_action_group_activate_action_full(remote: CValuesRef<GRemoteActionGroup>?, @CCall.CString action_name: String?, parameter: CValuesRef<GVariant>?, platform_data: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_glibjson4091_g_remote_action_group_change_action_state_full")
external fun g_remote_action_group_change_action_state_full(remote: CValuesRef<GRemoteActionGroup>?, @CCall.CString action_name: String?, value: CValuesRef<GVariant>?, platform_data: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_glibjson4092_g_menu_model_get_type")
external fun g_menu_model_get_type(): GType

@CCall("knifunptr_glibjson4093_g_menu_model_is_mutable")
external fun g_menu_model_is_mutable(model: CValuesRef<GMenuModel>?): gboolean

@CCall("knifunptr_glibjson4094_g_menu_model_get_n_items")
external fun g_menu_model_get_n_items(model: CValuesRef<GMenuModel>?): gint

@CCall("knifunptr_glibjson4095_g_menu_model_iterate_item_attributes")
external fun g_menu_model_iterate_item_attributes(model: CValuesRef<GMenuModel>?, item_index: gint): CPointer<GMenuAttributeIter>?

@CCall("knifunptr_glibjson4096_g_menu_model_get_item_attribute_value")
external fun g_menu_model_get_item_attribute_value(model: CValuesRef<GMenuModel>?, item_index: gint, @CCall.CString attribute: String?, expected_type: CValuesRef<GVariantType>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson4097_g_menu_model_get_item_attribute")
external fun g_menu_model_get_item_attribute(model: CValuesRef<GMenuModel>?, item_index: gint, @CCall.CString attribute: String?, @CCall.CString format_string: String?, vararg variadicArguments: Any?): gboolean

@CCall("knifunptr_glibjson4098_g_menu_model_iterate_item_links")
external fun g_menu_model_iterate_item_links(model: CValuesRef<GMenuModel>?, item_index: gint): CPointer<GMenuLinkIter>?

@CCall("knifunptr_glibjson4099_g_menu_model_get_item_link")
external fun g_menu_model_get_item_link(model: CValuesRef<GMenuModel>?, item_index: gint, @CCall.CString link: String?): CPointer<GMenuModel>?

@CCall("knifunptr_glibjson4100_g_menu_model_items_changed")
external fun g_menu_model_items_changed(model: CValuesRef<GMenuModel>?, position: gint, removed: gint, added: gint): Unit

@CCall("knifunptr_glibjson4101_g_menu_attribute_iter_get_type")
external fun g_menu_attribute_iter_get_type(): GType

@CCall("knifunptr_glibjson4102_g_menu_attribute_iter_get_next")
external fun g_menu_attribute_iter_get_next(iter: CValuesRef<GMenuAttributeIter>?, out_name: CValuesRef<CPointerVar<gcharVar>>?, value: CValuesRef<CPointerVar<GVariant>>?): gboolean

@CCall("knifunptr_glibjson4103_g_menu_attribute_iter_next")
external fun g_menu_attribute_iter_next(iter: CValuesRef<GMenuAttributeIter>?): gboolean

@CCall("knifunptr_glibjson4104_g_menu_attribute_iter_get_name")
external fun g_menu_attribute_iter_get_name(iter: CValuesRef<GMenuAttributeIter>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson4105_g_menu_attribute_iter_get_value")
external fun g_menu_attribute_iter_get_value(iter: CValuesRef<GMenuAttributeIter>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson4106_g_menu_link_iter_get_type")
external fun g_menu_link_iter_get_type(): GType

@CCall("knifunptr_glibjson4107_g_menu_link_iter_get_next")
external fun g_menu_link_iter_get_next(iter: CValuesRef<GMenuLinkIter>?, out_link: CValuesRef<CPointerVar<gcharVar>>?, value: CValuesRef<CPointerVar<GMenuModel>>?): gboolean

@CCall("knifunptr_glibjson4108_g_menu_link_iter_next")
external fun g_menu_link_iter_next(iter: CValuesRef<GMenuLinkIter>?): gboolean

@CCall("knifunptr_glibjson4109_g_menu_link_iter_get_name")
external fun g_menu_link_iter_get_name(iter: CValuesRef<GMenuLinkIter>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson4110_g_menu_link_iter_get_value")
external fun g_menu_link_iter_get_value(iter: CValuesRef<GMenuLinkIter>?): CPointer<GMenuModel>?

@CCall("knifunptr_glibjson4111_g_menu_get_type")
external fun g_menu_get_type(): GType

@CCall("knifunptr_glibjson4112_g_menu_new")
external fun g_menu_new(): CPointer<GMenu>?

@CCall("knifunptr_glibjson4113_g_menu_freeze")
external fun g_menu_freeze(menu: CValuesRef<GMenu>?): Unit

@CCall("knifunptr_glibjson4114_g_menu_insert_item")
external fun g_menu_insert_item(menu: CValuesRef<GMenu>?, position: gint, item: CValuesRef<GMenuItem>?): Unit

@CCall("knifunptr_glibjson4115_g_menu_prepend_item")
external fun g_menu_prepend_item(menu: CValuesRef<GMenu>?, item: CValuesRef<GMenuItem>?): Unit

@CCall("knifunptr_glibjson4116_g_menu_append_item")
external fun g_menu_append_item(menu: CValuesRef<GMenu>?, item: CValuesRef<GMenuItem>?): Unit

@CCall("knifunptr_glibjson4117_g_menu_remove")
external fun g_menu_remove(menu: CValuesRef<GMenu>?, position: gint): Unit

@CCall("knifunptr_glibjson4118_g_menu_remove_all")
external fun g_menu_remove_all(menu: CValuesRef<GMenu>?): Unit

@CCall("knifunptr_glibjson4119_g_menu_insert")
external fun g_menu_insert(menu: CValuesRef<GMenu>?, position: gint, @CCall.CString label: String?, @CCall.CString detailed_action: String?): Unit

@CCall("knifunptr_glibjson4120_g_menu_prepend")
external fun g_menu_prepend(menu: CValuesRef<GMenu>?, @CCall.CString label: String?, @CCall.CString detailed_action: String?): Unit

@CCall("knifunptr_glibjson4121_g_menu_append")
external fun g_menu_append(menu: CValuesRef<GMenu>?, @CCall.CString label: String?, @CCall.CString detailed_action: String?): Unit

@CCall("knifunptr_glibjson4122_g_menu_insert_section")
external fun g_menu_insert_section(menu: CValuesRef<GMenu>?, position: gint, @CCall.CString label: String?, section: CValuesRef<GMenuModel>?): Unit

@CCall("knifunptr_glibjson4123_g_menu_prepend_section")
external fun g_menu_prepend_section(menu: CValuesRef<GMenu>?, @CCall.CString label: String?, section: CValuesRef<GMenuModel>?): Unit

@CCall("knifunptr_glibjson4124_g_menu_append_section")
external fun g_menu_append_section(menu: CValuesRef<GMenu>?, @CCall.CString label: String?, section: CValuesRef<GMenuModel>?): Unit

@CCall("knifunptr_glibjson4125_g_menu_insert_submenu")
external fun g_menu_insert_submenu(menu: CValuesRef<GMenu>?, position: gint, @CCall.CString label: String?, submenu: CValuesRef<GMenuModel>?): Unit

@CCall("knifunptr_glibjson4126_g_menu_prepend_submenu")
external fun g_menu_prepend_submenu(menu: CValuesRef<GMenu>?, @CCall.CString label: String?, submenu: CValuesRef<GMenuModel>?): Unit

@CCall("knifunptr_glibjson4127_g_menu_append_submenu")
external fun g_menu_append_submenu(menu: CValuesRef<GMenu>?, @CCall.CString label: String?, submenu: CValuesRef<GMenuModel>?): Unit

@CCall("knifunptr_glibjson4128_g_menu_item_get_type")
external fun g_menu_item_get_type(): GType

@CCall("knifunptr_glibjson4129_g_menu_item_new")
external fun g_menu_item_new(@CCall.CString label: String?, @CCall.CString detailed_action: String?): CPointer<GMenuItem>?

@CCall("knifunptr_glibjson4130_g_menu_item_new_from_model")
external fun g_menu_item_new_from_model(model: CValuesRef<GMenuModel>?, item_index: gint): CPointer<GMenuItem>?

@CCall("knifunptr_glibjson4131_g_menu_item_new_submenu")
external fun g_menu_item_new_submenu(@CCall.CString label: String?, submenu: CValuesRef<GMenuModel>?): CPointer<GMenuItem>?

@CCall("knifunptr_glibjson4132_g_menu_item_new_section")
external fun g_menu_item_new_section(@CCall.CString label: String?, section: CValuesRef<GMenuModel>?): CPointer<GMenuItem>?

@CCall("knifunptr_glibjson4133_g_menu_item_get_attribute_value")
external fun g_menu_item_get_attribute_value(menu_item: CValuesRef<GMenuItem>?, @CCall.CString attribute: String?, expected_type: CValuesRef<GVariantType>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson4134_g_menu_item_get_attribute")
external fun g_menu_item_get_attribute(menu_item: CValuesRef<GMenuItem>?, @CCall.CString attribute: String?, @CCall.CString format_string: String?, vararg variadicArguments: Any?): gboolean

@CCall("knifunptr_glibjson4135_g_menu_item_get_link")
external fun g_menu_item_get_link(menu_item: CValuesRef<GMenuItem>?, @CCall.CString link: String?): CPointer<GMenuModel>?

@CCall("knifunptr_glibjson4136_g_menu_item_set_attribute_value")
external fun g_menu_item_set_attribute_value(menu_item: CValuesRef<GMenuItem>?, @CCall.CString attribute: String?, value: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_glibjson4137_g_menu_item_set_attribute")
external fun g_menu_item_set_attribute(menu_item: CValuesRef<GMenuItem>?, @CCall.CString attribute: String?, @CCall.CString format_string: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson4138_g_menu_item_set_link")
external fun g_menu_item_set_link(menu_item: CValuesRef<GMenuItem>?, @CCall.CString link: String?, model: CValuesRef<GMenuModel>?): Unit

@CCall("knifunptr_glibjson4139_g_menu_item_set_label")
external fun g_menu_item_set_label(menu_item: CValuesRef<GMenuItem>?, @CCall.CString label: String?): Unit

@CCall("knifunptr_glibjson4140_g_menu_item_set_submenu")
external fun g_menu_item_set_submenu(menu_item: CValuesRef<GMenuItem>?, submenu: CValuesRef<GMenuModel>?): Unit

@CCall("knifunptr_glibjson4141_g_menu_item_set_section")
external fun g_menu_item_set_section(menu_item: CValuesRef<GMenuItem>?, section: CValuesRef<GMenuModel>?): Unit

@CCall("knifunptr_glibjson4142_g_menu_item_set_action_and_target_value")
external fun g_menu_item_set_action_and_target_value(menu_item: CValuesRef<GMenuItem>?, @CCall.CString action: String?, target_value: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_glibjson4143_g_menu_item_set_action_and_target")
external fun g_menu_item_set_action_and_target(menu_item: CValuesRef<GMenuItem>?, @CCall.CString action: String?, @CCall.CString format_string: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson4144_g_menu_item_set_detailed_action")
external fun g_menu_item_set_detailed_action(menu_item: CValuesRef<GMenuItem>?, @CCall.CString detailed_action: String?): Unit

@CCall("knifunptr_glibjson4145_g_menu_item_set_icon")
external fun g_menu_item_set_icon(menu_item: CValuesRef<GMenuItem>?, icon: CValuesRef<GIcon>?): Unit

@CCall("knifunptr_glibjson4146_g_dbus_connection_export_menu_model")
external fun g_dbus_connection_export_menu_model(connection: CValuesRef<GDBusConnection>?, @CCall.CString object_path: String?, menu: CValuesRef<GMenuModel>?, error: CValuesRef<CPointerVar<GError>>?): guint

@CCall("knifunptr_glibjson4147_g_dbus_connection_unexport_menu_model")
external fun g_dbus_connection_unexport_menu_model(connection: CValuesRef<GDBusConnection>?, export_id: guint): Unit

@CCall("knifunptr_glibjson4148_g_dbus_menu_model_get_type")
external fun g_dbus_menu_model_get_type(): GType

@CCall("knifunptr_glibjson4149_g_dbus_menu_model_get")
external fun g_dbus_menu_model_get(connection: CValuesRef<GDBusConnection>?, @CCall.CString bus_name: String?, @CCall.CString object_path: String?): CPointer<GDBusMenuModel>?

@CCall("knifunptr_glibjson4150_g_notification_get_type")
external fun g_notification_get_type(): GType

@CCall("knifunptr_glibjson4151_g_notification_new")
external fun g_notification_new(@CCall.CString title: String?): CPointer<GNotification>?

@CCall("knifunptr_glibjson4152_g_notification_set_title")
external fun g_notification_set_title(notification: CValuesRef<GNotification>?, @CCall.CString title: String?): Unit

@CCall("knifunptr_glibjson4153_g_notification_set_body")
external fun g_notification_set_body(notification: CValuesRef<GNotification>?, @CCall.CString body: String?): Unit

@CCall("knifunptr_glibjson4154_g_notification_set_icon")
external fun g_notification_set_icon(notification: CValuesRef<GNotification>?, icon: CValuesRef<GIcon>?): Unit

@CCall("knifunptr_glibjson4155_g_notification_set_urgent")
external fun g_notification_set_urgent(notification: CValuesRef<GNotification>?, urgent: gboolean): Unit

@CCall("knifunptr_glibjson4156_g_notification_set_priority")
external fun g_notification_set_priority(notification: CValuesRef<GNotification>?, priority: GNotificationPriority): Unit

@CCall("knifunptr_glibjson4157_g_notification_add_button")
external fun g_notification_add_button(notification: CValuesRef<GNotification>?, @CCall.CString label: String?, @CCall.CString detailed_action: String?): Unit

@CCall("knifunptr_glibjson4158_g_notification_add_button_with_target")
external fun g_notification_add_button_with_target(notification: CValuesRef<GNotification>?, @CCall.CString label: String?, @CCall.CString action: String?, @CCall.CString target_format: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson4159_g_notification_add_button_with_target_value")
external fun g_notification_add_button_with_target_value(notification: CValuesRef<GNotification>?, @CCall.CString label: String?, @CCall.CString action: String?, target: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_glibjson4160_g_notification_set_default_action")
external fun g_notification_set_default_action(notification: CValuesRef<GNotification>?, @CCall.CString detailed_action: String?): Unit

@CCall("knifunptr_glibjson4161_g_notification_set_default_action_and_target")
external fun g_notification_set_default_action_and_target(notification: CValuesRef<GNotification>?, @CCall.CString action: String?, @CCall.CString target_format: String?, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_glibjson4162_g_notification_set_default_action_and_target_value")
external fun g_notification_set_default_action_and_target_value(notification: CValuesRef<GNotification>?, @CCall.CString action: String?, target: CValuesRef<GVariant>?): Unit

@CCall("knifunptr_glibjson4163_g_list_model_get_type")
external fun g_list_model_get_type(): GType

@CCall("knifunptr_glibjson4164_glib_autoptr_cleanup_GListModel")
external fun glib_autoptr_cleanup_GListModel(_ptr: CValuesRef<CPointerVar<GListModel>>?): Unit

@CCall("knifunptr_glibjson4165_G_LIST_MODEL")
external fun G_LIST_MODEL(ptr: gpointer?): CPointer<GListModel>?

@CCall("knifunptr_glibjson4166_G_IS_LIST_MODEL")
external fun G_IS_LIST_MODEL(ptr: gpointer?): gboolean

@CCall("knifunptr_glibjson4167_G_LIST_MODEL_GET_IFACE")
external fun G_LIST_MODEL_GET_IFACE(ptr: gpointer?): CPointer<GListModelInterface>?

@CCall("knifunptr_glibjson4168_g_list_model_get_item_type")
external fun g_list_model_get_item_type(list: CValuesRef<GListModel>?): GType

@CCall("knifunptr_glibjson4169_g_list_model_get_n_items")
external fun g_list_model_get_n_items(list: CValuesRef<GListModel>?): guint

@CCall("knifunptr_glibjson4170_g_list_model_get_item")
external fun g_list_model_get_item(list: CValuesRef<GListModel>?, position: guint): gpointer?

@CCall("knifunptr_glibjson4171_g_list_model_get_object")
external fun g_list_model_get_object(list: CValuesRef<GListModel>?, position: guint): CPointer<GObject>?

@CCall("knifunptr_glibjson4172_g_list_model_items_changed")
external fun g_list_model_items_changed(list: CValuesRef<GListModel>?, position: guint, removed: guint, added: guint): Unit

@CCall("knifunptr_glibjson4173_g_list_store_get_type")
external fun g_list_store_get_type(): GType

@CCall("knifunptr_glibjson4174_glib_autoptr_cleanup_GListStore")
external fun glib_autoptr_cleanup_GListStore(_ptr: CValuesRef<CPointerVar<GListStore>>?): Unit

@CCall("knifunptr_glibjson4175_G_LIST_STORE")
external fun G_LIST_STORE(ptr: gpointer?): CPointer<GListStore>?

@CCall("knifunptr_glibjson4176_G_IS_LIST_STORE")
external fun G_IS_LIST_STORE(ptr: gpointer?): gboolean

@CCall("knifunptr_glibjson4177_g_list_store_new")
external fun g_list_store_new(item_type: GType): CPointer<GListStore>?

@CCall("knifunptr_glibjson4178_g_list_store_insert")
external fun g_list_store_insert(store: CValuesRef<GListStore>?, position: guint, item: gpointer?): Unit

@CCall("knifunptr_glibjson4179_g_list_store_insert_sorted")
external fun g_list_store_insert_sorted(store: CValuesRef<GListStore>?, item: gpointer?, compare_func: GCompareDataFunc?, user_data: gpointer?): guint

@CCall("knifunptr_glibjson4180_g_list_store_sort")
external fun g_list_store_sort(store: CValuesRef<GListStore>?, compare_func: GCompareDataFunc?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson4181_g_list_store_append")
external fun g_list_store_append(store: CValuesRef<GListStore>?, item: gpointer?): Unit

@CCall("knifunptr_glibjson4182_g_list_store_remove")
external fun g_list_store_remove(store: CValuesRef<GListStore>?, position: guint): Unit

@CCall("knifunptr_glibjson4183_g_list_store_remove_all")
external fun g_list_store_remove_all(store: CValuesRef<GListStore>?): Unit

@CCall("knifunptr_glibjson4184_g_list_store_splice")
external fun g_list_store_splice(store: CValuesRef<GListStore>?, position: guint, n_removals: guint, additions: CValuesRef<gpointerVar>?, n_additions: guint): Unit

@CCall("knifunptr_glibjson4185_glib_autoptr_cleanup_GAction")
external fun glib_autoptr_cleanup_GAction(_ptr: CValuesRef<CPointerVar<GAction>>?): Unit

@CCall("knifunptr_glibjson4186_glib_listautoptr_cleanup_GAction")
external fun glib_listautoptr_cleanup_GAction(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4187_glib_slistautoptr_cleanup_GAction")
external fun glib_slistautoptr_cleanup_GAction(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4188_glib_autoptr_cleanup_GActionMap")
external fun glib_autoptr_cleanup_GActionMap(_ptr: CValuesRef<CPointerVar<GActionMap>>?): Unit

@CCall("knifunptr_glibjson4189_glib_listautoptr_cleanup_GActionMap")
external fun glib_listautoptr_cleanup_GActionMap(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4190_glib_slistautoptr_cleanup_GActionMap")
external fun glib_slistautoptr_cleanup_GActionMap(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4191_glib_autoptr_cleanup_GAppInfo")
external fun glib_autoptr_cleanup_GAppInfo(_ptr: CValuesRef<CPointerVar<GAppInfo>>?): Unit

@CCall("knifunptr_glibjson4192_glib_listautoptr_cleanup_GAppInfo")
external fun glib_listautoptr_cleanup_GAppInfo(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4193_glib_slistautoptr_cleanup_GAppInfo")
external fun glib_slistautoptr_cleanup_GAppInfo(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4194_glib_autoptr_cleanup_GAppLaunchContext")
external fun glib_autoptr_cleanup_GAppLaunchContext(_ptr: CValuesRef<CPointerVar<GAppLaunchContext>>?): Unit

@CCall("knifunptr_glibjson4195_glib_listautoptr_cleanup_GAppLaunchContext")
external fun glib_listautoptr_cleanup_GAppLaunchContext(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4196_glib_slistautoptr_cleanup_GAppLaunchContext")
external fun glib_slistautoptr_cleanup_GAppLaunchContext(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4197_glib_autoptr_cleanup_GAppInfoMonitor")
external fun glib_autoptr_cleanup_GAppInfoMonitor(_ptr: CValuesRef<CPointerVar<GAppInfoMonitor>>?): Unit

@CCall("knifunptr_glibjson4198_glib_listautoptr_cleanup_GAppInfoMonitor")
external fun glib_listautoptr_cleanup_GAppInfoMonitor(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4199_glib_slistautoptr_cleanup_GAppInfoMonitor")
external fun glib_slistautoptr_cleanup_GAppInfoMonitor(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4200_glib_autoptr_cleanup_GApplicationCommandLine")
external fun glib_autoptr_cleanup_GApplicationCommandLine(_ptr: CValuesRef<CPointerVar<GApplicationCommandLine>>?): Unit

@CCall("knifunptr_glibjson4201_glib_listautoptr_cleanup_GApplicationCommandLine")
external fun glib_listautoptr_cleanup_GApplicationCommandLine(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4202_glib_slistautoptr_cleanup_GApplicationCommandLine")
external fun glib_slistautoptr_cleanup_GApplicationCommandLine(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4203_glib_autoptr_cleanup_GApplication")
external fun glib_autoptr_cleanup_GApplication(_ptr: CValuesRef<CPointerVar<GApplication>>?): Unit

@CCall("knifunptr_glibjson4204_glib_listautoptr_cleanup_GApplication")
external fun glib_listautoptr_cleanup_GApplication(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4205_glib_slistautoptr_cleanup_GApplication")
external fun glib_slistautoptr_cleanup_GApplication(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4206_glib_autoptr_cleanup_GAsyncInitable")
external fun glib_autoptr_cleanup_GAsyncInitable(_ptr: CValuesRef<CPointerVar<GAsyncInitable>>?): Unit

@CCall("knifunptr_glibjson4207_glib_listautoptr_cleanup_GAsyncInitable")
external fun glib_listautoptr_cleanup_GAsyncInitable(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4208_glib_slistautoptr_cleanup_GAsyncInitable")
external fun glib_slistautoptr_cleanup_GAsyncInitable(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4209_glib_autoptr_cleanup_GAsyncResult")
external fun glib_autoptr_cleanup_GAsyncResult(_ptr: CValuesRef<CPointerVar<GAsyncResult>>?): Unit

@CCall("knifunptr_glibjson4210_glib_listautoptr_cleanup_GAsyncResult")
external fun glib_listautoptr_cleanup_GAsyncResult(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4211_glib_slistautoptr_cleanup_GAsyncResult")
external fun glib_slistautoptr_cleanup_GAsyncResult(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4212_glib_autoptr_cleanup_GBufferedInputStream")
external fun glib_autoptr_cleanup_GBufferedInputStream(_ptr: CValuesRef<CPointerVar<GBufferedInputStream>>?): Unit

@CCall("knifunptr_glibjson4213_glib_listautoptr_cleanup_GBufferedInputStream")
external fun glib_listautoptr_cleanup_GBufferedInputStream(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4214_glib_slistautoptr_cleanup_GBufferedInputStream")
external fun glib_slistautoptr_cleanup_GBufferedInputStream(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4215_glib_autoptr_cleanup_GBufferedOutputStream")
external fun glib_autoptr_cleanup_GBufferedOutputStream(_ptr: CValuesRef<CPointerVar<GBufferedOutputStream>>?): Unit

@CCall("knifunptr_glibjson4216_glib_listautoptr_cleanup_GBufferedOutputStream")
external fun glib_listautoptr_cleanup_GBufferedOutputStream(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4217_glib_slistautoptr_cleanup_GBufferedOutputStream")
external fun glib_slistautoptr_cleanup_GBufferedOutputStream(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4218_glib_autoptr_cleanup_GBytesIcon")
external fun glib_autoptr_cleanup_GBytesIcon(_ptr: CValuesRef<CPointerVar<GBytesIcon>>?): Unit

@CCall("knifunptr_glibjson4219_glib_listautoptr_cleanup_GBytesIcon")
external fun glib_listautoptr_cleanup_GBytesIcon(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4220_glib_slistautoptr_cleanup_GBytesIcon")
external fun glib_slistautoptr_cleanup_GBytesIcon(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4221_glib_autoptr_cleanup_GCancellable")
external fun glib_autoptr_cleanup_GCancellable(_ptr: CValuesRef<CPointerVar<GCancellable>>?): Unit

@CCall("knifunptr_glibjson4222_glib_listautoptr_cleanup_GCancellable")
external fun glib_listautoptr_cleanup_GCancellable(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4223_glib_slistautoptr_cleanup_GCancellable")
external fun glib_slistautoptr_cleanup_GCancellable(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4224_glib_autoptr_cleanup_GCharsetConverter")
external fun glib_autoptr_cleanup_GCharsetConverter(_ptr: CValuesRef<CPointerVar<GCharsetConverter>>?): Unit

@CCall("knifunptr_glibjson4225_glib_listautoptr_cleanup_GCharsetConverter")
external fun glib_listautoptr_cleanup_GCharsetConverter(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4226_glib_slistautoptr_cleanup_GCharsetConverter")
external fun glib_slistautoptr_cleanup_GCharsetConverter(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4227_glib_autoptr_cleanup_GConverter")
external fun glib_autoptr_cleanup_GConverter(_ptr: CValuesRef<CPointerVar<GConverter>>?): Unit

@CCall("knifunptr_glibjson4228_glib_listautoptr_cleanup_GConverter")
external fun glib_listautoptr_cleanup_GConverter(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4229_glib_slistautoptr_cleanup_GConverter")
external fun glib_slistautoptr_cleanup_GConverter(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4230_glib_autoptr_cleanup_GConverterInputStream")
external fun glib_autoptr_cleanup_GConverterInputStream(_ptr: CValuesRef<CPointerVar<GConverterInputStream>>?): Unit

@CCall("knifunptr_glibjson4231_glib_listautoptr_cleanup_GConverterInputStream")
external fun glib_listautoptr_cleanup_GConverterInputStream(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4232_glib_slistautoptr_cleanup_GConverterInputStream")
external fun glib_slistautoptr_cleanup_GConverterInputStream(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4233_glib_autoptr_cleanup_GConverterOutputStream")
external fun glib_autoptr_cleanup_GConverterOutputStream(_ptr: CValuesRef<CPointerVar<GConverterOutputStream>>?): Unit

@CCall("knifunptr_glibjson4234_glib_listautoptr_cleanup_GConverterOutputStream")
external fun glib_listautoptr_cleanup_GConverterOutputStream(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4235_glib_slistautoptr_cleanup_GConverterOutputStream")
external fun glib_slistautoptr_cleanup_GConverterOutputStream(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4236_glib_autoptr_cleanup_GCredentials")
external fun glib_autoptr_cleanup_GCredentials(_ptr: CValuesRef<CPointerVar<GCredentials>>?): Unit

@CCall("knifunptr_glibjson4237_glib_listautoptr_cleanup_GCredentials")
external fun glib_listautoptr_cleanup_GCredentials(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4238_glib_slistautoptr_cleanup_GCredentials")
external fun glib_slistautoptr_cleanup_GCredentials(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4239_glib_autoptr_cleanup_GDatagramBased")
external fun glib_autoptr_cleanup_GDatagramBased(_ptr: CValuesRef<CPointerVar<GDatagramBased>>?): Unit

@CCall("knifunptr_glibjson4240_glib_listautoptr_cleanup_GDatagramBased")
external fun glib_listautoptr_cleanup_GDatagramBased(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4241_glib_slistautoptr_cleanup_GDatagramBased")
external fun glib_slistautoptr_cleanup_GDatagramBased(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4242_glib_autoptr_cleanup_GDataInputStream")
external fun glib_autoptr_cleanup_GDataInputStream(_ptr: CValuesRef<CPointerVar<GDataInputStream>>?): Unit

@CCall("knifunptr_glibjson4243_glib_listautoptr_cleanup_GDataInputStream")
external fun glib_listautoptr_cleanup_GDataInputStream(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4244_glib_slistautoptr_cleanup_GDataInputStream")
external fun glib_slistautoptr_cleanup_GDataInputStream(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4245_glib_autoptr_cleanup_GDataOutputStream")
external fun glib_autoptr_cleanup_GDataOutputStream(_ptr: CValuesRef<CPointerVar<GDataOutputStream>>?): Unit

@CCall("knifunptr_glibjson4246_glib_listautoptr_cleanup_GDataOutputStream")
external fun glib_listautoptr_cleanup_GDataOutputStream(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4247_glib_slistautoptr_cleanup_GDataOutputStream")
external fun glib_slistautoptr_cleanup_GDataOutputStream(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4248_glib_autoptr_cleanup_GDBusActionGroup")
external fun glib_autoptr_cleanup_GDBusActionGroup(_ptr: CValuesRef<CPointerVar<GDBusActionGroup>>?): Unit

@CCall("knifunptr_glibjson4249_glib_listautoptr_cleanup_GDBusActionGroup")
external fun glib_listautoptr_cleanup_GDBusActionGroup(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4250_glib_slistautoptr_cleanup_GDBusActionGroup")
external fun glib_slistautoptr_cleanup_GDBusActionGroup(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4251_glib_autoptr_cleanup_GDBusAuthObserver")
external fun glib_autoptr_cleanup_GDBusAuthObserver(_ptr: CValuesRef<CPointerVar<GDBusAuthObserver>>?): Unit

@CCall("knifunptr_glibjson4252_glib_listautoptr_cleanup_GDBusAuthObserver")
external fun glib_listautoptr_cleanup_GDBusAuthObserver(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4253_glib_slistautoptr_cleanup_GDBusAuthObserver")
external fun glib_slistautoptr_cleanup_GDBusAuthObserver(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4254_glib_autoptr_cleanup_GDBusConnection")
external fun glib_autoptr_cleanup_GDBusConnection(_ptr: CValuesRef<CPointerVar<GDBusConnection>>?): Unit

@CCall("knifunptr_glibjson4255_glib_listautoptr_cleanup_GDBusConnection")
external fun glib_listautoptr_cleanup_GDBusConnection(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4256_glib_slistautoptr_cleanup_GDBusConnection")
external fun glib_slistautoptr_cleanup_GDBusConnection(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4257_glib_autoptr_cleanup_GDBusInterface")
external fun glib_autoptr_cleanup_GDBusInterface(_ptr: CValuesRef<CPointerVar<GDBusInterface>>?): Unit

@CCall("knifunptr_glibjson4258_glib_listautoptr_cleanup_GDBusInterface")
external fun glib_listautoptr_cleanup_GDBusInterface(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4259_glib_slistautoptr_cleanup_GDBusInterface")
external fun glib_slistautoptr_cleanup_GDBusInterface(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4260_glib_autoptr_cleanup_GDBusInterfaceSkeleton")
external fun glib_autoptr_cleanup_GDBusInterfaceSkeleton(_ptr: CValuesRef<CPointerVar<GDBusInterfaceSkeleton>>?): Unit

@CCall("knifunptr_glibjson4261_glib_listautoptr_cleanup_GDBusInterfaceSkeleton")
external fun glib_listautoptr_cleanup_GDBusInterfaceSkeleton(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4262_glib_slistautoptr_cleanup_GDBusInterfaceSkeleton")
external fun glib_slistautoptr_cleanup_GDBusInterfaceSkeleton(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4263_glib_autoptr_cleanup_GDBusMenuModel")
external fun glib_autoptr_cleanup_GDBusMenuModel(_ptr: CValuesRef<CPointerVar<GDBusMenuModel>>?): Unit

@CCall("knifunptr_glibjson4264_glib_listautoptr_cleanup_GDBusMenuModel")
external fun glib_listautoptr_cleanup_GDBusMenuModel(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4265_glib_slistautoptr_cleanup_GDBusMenuModel")
external fun glib_slistautoptr_cleanup_GDBusMenuModel(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4266_glib_autoptr_cleanup_GDBusMessage")
external fun glib_autoptr_cleanup_GDBusMessage(_ptr: CValuesRef<CPointerVar<GDBusMessage>>?): Unit

@CCall("knifunptr_glibjson4267_glib_listautoptr_cleanup_GDBusMessage")
external fun glib_listautoptr_cleanup_GDBusMessage(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4268_glib_slistautoptr_cleanup_GDBusMessage")
external fun glib_slistautoptr_cleanup_GDBusMessage(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4269_glib_autoptr_cleanup_GDBusMethodInvocation")
external fun glib_autoptr_cleanup_GDBusMethodInvocation(_ptr: CValuesRef<CPointerVar<GDBusMethodInvocation>>?): Unit

@CCall("knifunptr_glibjson4270_glib_listautoptr_cleanup_GDBusMethodInvocation")
external fun glib_listautoptr_cleanup_GDBusMethodInvocation(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4271_glib_slistautoptr_cleanup_GDBusMethodInvocation")
external fun glib_slistautoptr_cleanup_GDBusMethodInvocation(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4272_glib_autoptr_cleanup_GDBusNodeInfo")
external fun glib_autoptr_cleanup_GDBusNodeInfo(_ptr: CValuesRef<CPointerVar<GDBusNodeInfo>>?): Unit

@CCall("knifunptr_glibjson4273_glib_listautoptr_cleanup_GDBusNodeInfo")
external fun glib_listautoptr_cleanup_GDBusNodeInfo(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4274_glib_slistautoptr_cleanup_GDBusNodeInfo")
external fun glib_slistautoptr_cleanup_GDBusNodeInfo(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4275_glib_autoptr_cleanup_GDBusObject")
external fun glib_autoptr_cleanup_GDBusObject(_ptr: CValuesRef<CPointerVar<GDBusObject>>?): Unit

@CCall("knifunptr_glibjson4276_glib_listautoptr_cleanup_GDBusObject")
external fun glib_listautoptr_cleanup_GDBusObject(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4277_glib_slistautoptr_cleanup_GDBusObject")
external fun glib_slistautoptr_cleanup_GDBusObject(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4278_glib_autoptr_cleanup_GDBusObjectManagerClient")
external fun glib_autoptr_cleanup_GDBusObjectManagerClient(_ptr: CValuesRef<CPointerVar<GDBusObjectManagerClient>>?): Unit

@CCall("knifunptr_glibjson4279_glib_listautoptr_cleanup_GDBusObjectManagerClient")
external fun glib_listautoptr_cleanup_GDBusObjectManagerClient(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4280_glib_slistautoptr_cleanup_GDBusObjectManagerClient")
external fun glib_slistautoptr_cleanup_GDBusObjectManagerClient(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4281_glib_autoptr_cleanup_GDBusObjectManager")
external fun glib_autoptr_cleanup_GDBusObjectManager(_ptr: CValuesRef<CPointerVar<GDBusObjectManager>>?): Unit

@CCall("knifunptr_glibjson4282_glib_listautoptr_cleanup_GDBusObjectManager")
external fun glib_listautoptr_cleanup_GDBusObjectManager(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4283_glib_slistautoptr_cleanup_GDBusObjectManager")
external fun glib_slistautoptr_cleanup_GDBusObjectManager(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4284_glib_autoptr_cleanup_GDBusObjectManagerServer")
external fun glib_autoptr_cleanup_GDBusObjectManagerServer(_ptr: CValuesRef<CPointerVar<GDBusObjectManagerServer>>?): Unit

@CCall("knifunptr_glibjson4285_glib_listautoptr_cleanup_GDBusObjectManagerServer")
external fun glib_listautoptr_cleanup_GDBusObjectManagerServer(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4286_glib_slistautoptr_cleanup_GDBusObjectManagerServer")
external fun glib_slistautoptr_cleanup_GDBusObjectManagerServer(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4287_glib_autoptr_cleanup_GDBusObjectProxy")
external fun glib_autoptr_cleanup_GDBusObjectProxy(_ptr: CValuesRef<CPointerVar<GDBusObjectProxy>>?): Unit

@CCall("knifunptr_glibjson4288_glib_listautoptr_cleanup_GDBusObjectProxy")
external fun glib_listautoptr_cleanup_GDBusObjectProxy(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4289_glib_slistautoptr_cleanup_GDBusObjectProxy")
external fun glib_slistautoptr_cleanup_GDBusObjectProxy(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4290_glib_autoptr_cleanup_GDBusObjectSkeleton")
external fun glib_autoptr_cleanup_GDBusObjectSkeleton(_ptr: CValuesRef<CPointerVar<GDBusObjectSkeleton>>?): Unit

@CCall("knifunptr_glibjson4291_glib_listautoptr_cleanup_GDBusObjectSkeleton")
external fun glib_listautoptr_cleanup_GDBusObjectSkeleton(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4292_glib_slistautoptr_cleanup_GDBusObjectSkeleton")
external fun glib_slistautoptr_cleanup_GDBusObjectSkeleton(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4293_glib_autoptr_cleanup_GDBusProxy")
external fun glib_autoptr_cleanup_GDBusProxy(_ptr: CValuesRef<CPointerVar<GDBusProxy>>?): Unit

@CCall("knifunptr_glibjson4294_glib_listautoptr_cleanup_GDBusProxy")
external fun glib_listautoptr_cleanup_GDBusProxy(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4295_glib_slistautoptr_cleanup_GDBusProxy")
external fun glib_slistautoptr_cleanup_GDBusProxy(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4296_glib_autoptr_cleanup_GDBusServer")
external fun glib_autoptr_cleanup_GDBusServer(_ptr: CValuesRef<CPointerVar<GDBusServer>>?): Unit

@CCall("knifunptr_glibjson4297_glib_listautoptr_cleanup_GDBusServer")
external fun glib_listautoptr_cleanup_GDBusServer(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4298_glib_slistautoptr_cleanup_GDBusServer")
external fun glib_slistautoptr_cleanup_GDBusServer(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4299_glib_autoptr_cleanup_GDrive")
external fun glib_autoptr_cleanup_GDrive(_ptr: CValuesRef<CPointerVar<GDrive>>?): Unit

@CCall("knifunptr_glibjson4300_glib_listautoptr_cleanup_GDrive")
external fun glib_listautoptr_cleanup_GDrive(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4301_glib_slistautoptr_cleanup_GDrive")
external fun glib_slistautoptr_cleanup_GDrive(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4302_glib_autoptr_cleanup_GEmblemedIcon")
external fun glib_autoptr_cleanup_GEmblemedIcon(_ptr: CValuesRef<CPointerVar<GEmblemedIcon>>?): Unit

@CCall("knifunptr_glibjson4303_glib_listautoptr_cleanup_GEmblemedIcon")
external fun glib_listautoptr_cleanup_GEmblemedIcon(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4304_glib_slistautoptr_cleanup_GEmblemedIcon")
external fun glib_slistautoptr_cleanup_GEmblemedIcon(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4305_glib_autoptr_cleanup_GEmblem")
external fun glib_autoptr_cleanup_GEmblem(_ptr: CValuesRef<CPointerVar<GEmblem>>?): Unit

@CCall("knifunptr_glibjson4306_glib_listautoptr_cleanup_GEmblem")
external fun glib_listautoptr_cleanup_GEmblem(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4307_glib_slistautoptr_cleanup_GEmblem")
external fun glib_slistautoptr_cleanup_GEmblem(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4308_glib_autoptr_cleanup_GFileEnumerator")
external fun glib_autoptr_cleanup_GFileEnumerator(_ptr: CValuesRef<CPointerVar<GFileEnumerator>>?): Unit

@CCall("knifunptr_glibjson4309_glib_listautoptr_cleanup_GFileEnumerator")
external fun glib_listautoptr_cleanup_GFileEnumerator(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4310_glib_slistautoptr_cleanup_GFileEnumerator")
external fun glib_slistautoptr_cleanup_GFileEnumerator(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4311_glib_autoptr_cleanup_GFile")
external fun glib_autoptr_cleanup_GFile(_ptr: CValuesRef<CPointerVar<GFile>>?): Unit

@CCall("knifunptr_glibjson4312_glib_listautoptr_cleanup_GFile")
external fun glib_listautoptr_cleanup_GFile(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4313_glib_slistautoptr_cleanup_GFile")
external fun glib_slistautoptr_cleanup_GFile(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4314_glib_autoptr_cleanup_GFileAttributeInfoList")
external fun glib_autoptr_cleanup_GFileAttributeInfoList(_ptr: CValuesRef<CPointerVar<GFileAttributeInfoList>>?): Unit

@CCall("knifunptr_glibjson4315_glib_listautoptr_cleanup_GFileAttributeInfoList")
external fun glib_listautoptr_cleanup_GFileAttributeInfoList(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4316_glib_slistautoptr_cleanup_GFileAttributeInfoList")
external fun glib_slistautoptr_cleanup_GFileAttributeInfoList(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4317_glib_autoptr_cleanup_GFileIcon")
external fun glib_autoptr_cleanup_GFileIcon(_ptr: CValuesRef<CPointerVar<GFileIcon>>?): Unit

@CCall("knifunptr_glibjson4318_glib_listautoptr_cleanup_GFileIcon")
external fun glib_listautoptr_cleanup_GFileIcon(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4319_glib_slistautoptr_cleanup_GFileIcon")
external fun glib_slistautoptr_cleanup_GFileIcon(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4320_glib_autoptr_cleanup_GFileInfo")
external fun glib_autoptr_cleanup_GFileInfo(_ptr: CValuesRef<CPointerVar<GFileInfo>>?): Unit

@CCall("knifunptr_glibjson4321_glib_listautoptr_cleanup_GFileInfo")
external fun glib_listautoptr_cleanup_GFileInfo(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4322_glib_slistautoptr_cleanup_GFileInfo")
external fun glib_slistautoptr_cleanup_GFileInfo(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4323_glib_autoptr_cleanup_GFileInputStream")
external fun glib_autoptr_cleanup_GFileInputStream(_ptr: CValuesRef<CPointerVar<GFileInputStream>>?): Unit

@CCall("knifunptr_glibjson4324_glib_listautoptr_cleanup_GFileInputStream")
external fun glib_listautoptr_cleanup_GFileInputStream(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4325_glib_slistautoptr_cleanup_GFileInputStream")
external fun glib_slistautoptr_cleanup_GFileInputStream(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4326_glib_autoptr_cleanup_GFileIOStream")
external fun glib_autoptr_cleanup_GFileIOStream(_ptr: CValuesRef<CPointerVar<GFileIOStream>>?): Unit

@CCall("knifunptr_glibjson4327_glib_listautoptr_cleanup_GFileIOStream")
external fun glib_listautoptr_cleanup_GFileIOStream(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4328_glib_slistautoptr_cleanup_GFileIOStream")
external fun glib_slistautoptr_cleanup_GFileIOStream(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4329_glib_autoptr_cleanup_GFileMonitor")
external fun glib_autoptr_cleanup_GFileMonitor(_ptr: CValuesRef<CPointerVar<GFileMonitor>>?): Unit

@CCall("knifunptr_glibjson4330_glib_listautoptr_cleanup_GFileMonitor")
external fun glib_listautoptr_cleanup_GFileMonitor(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4331_glib_slistautoptr_cleanup_GFileMonitor")
external fun glib_slistautoptr_cleanup_GFileMonitor(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4332_glib_autoptr_cleanup_GFilenameCompleter")
external fun glib_autoptr_cleanup_GFilenameCompleter(_ptr: CValuesRef<CPointerVar<GFilenameCompleter>>?): Unit

@CCall("knifunptr_glibjson4333_glib_listautoptr_cleanup_GFilenameCompleter")
external fun glib_listautoptr_cleanup_GFilenameCompleter(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4334_glib_slistautoptr_cleanup_GFilenameCompleter")
external fun glib_slistautoptr_cleanup_GFilenameCompleter(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4335_glib_autoptr_cleanup_GFileOutputStream")
external fun glib_autoptr_cleanup_GFileOutputStream(_ptr: CValuesRef<CPointerVar<GFileOutputStream>>?): Unit

@CCall("knifunptr_glibjson4336_glib_listautoptr_cleanup_GFileOutputStream")
external fun glib_listautoptr_cleanup_GFileOutputStream(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4337_glib_slistautoptr_cleanup_GFileOutputStream")
external fun glib_slistautoptr_cleanup_GFileOutputStream(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4338_glib_autoptr_cleanup_GFilterInputStream")
external fun glib_autoptr_cleanup_GFilterInputStream(_ptr: CValuesRef<CPointerVar<GFilterInputStream>>?): Unit

@CCall("knifunptr_glibjson4339_glib_listautoptr_cleanup_GFilterInputStream")
external fun glib_listautoptr_cleanup_GFilterInputStream(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4340_glib_slistautoptr_cleanup_GFilterInputStream")
external fun glib_slistautoptr_cleanup_GFilterInputStream(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4341_glib_autoptr_cleanup_GFilterOutputStream")
external fun glib_autoptr_cleanup_GFilterOutputStream(_ptr: CValuesRef<CPointerVar<GFilterOutputStream>>?): Unit

@CCall("knifunptr_glibjson4342_glib_listautoptr_cleanup_GFilterOutputStream")
external fun glib_listautoptr_cleanup_GFilterOutputStream(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4343_glib_slistautoptr_cleanup_GFilterOutputStream")
external fun glib_slistautoptr_cleanup_GFilterOutputStream(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4344_glib_autoptr_cleanup_GIcon")
external fun glib_autoptr_cleanup_GIcon(_ptr: CValuesRef<CPointerVar<GIcon>>?): Unit

@CCall("knifunptr_glibjson4345_glib_listautoptr_cleanup_GIcon")
external fun glib_listautoptr_cleanup_GIcon(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4346_glib_slistautoptr_cleanup_GIcon")
external fun glib_slistautoptr_cleanup_GIcon(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4347_glib_autoptr_cleanup_GInetAddress")
external fun glib_autoptr_cleanup_GInetAddress(_ptr: CValuesRef<CPointerVar<GInetAddress>>?): Unit

@CCall("knifunptr_glibjson4348_glib_listautoptr_cleanup_GInetAddress")
external fun glib_listautoptr_cleanup_GInetAddress(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4349_glib_slistautoptr_cleanup_GInetAddress")
external fun glib_slistautoptr_cleanup_GInetAddress(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4350_glib_autoptr_cleanup_GInetAddressMask")
external fun glib_autoptr_cleanup_GInetAddressMask(_ptr: CValuesRef<CPointerVar<GInetAddressMask>>?): Unit

@CCall("knifunptr_glibjson4351_glib_listautoptr_cleanup_GInetAddressMask")
external fun glib_listautoptr_cleanup_GInetAddressMask(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4352_glib_slistautoptr_cleanup_GInetAddressMask")
external fun glib_slistautoptr_cleanup_GInetAddressMask(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4353_glib_autoptr_cleanup_GInetSocketAddress")
external fun glib_autoptr_cleanup_GInetSocketAddress(_ptr: CValuesRef<CPointerVar<GInetSocketAddress>>?): Unit

@CCall("knifunptr_glibjson4354_glib_listautoptr_cleanup_GInetSocketAddress")
external fun glib_listautoptr_cleanup_GInetSocketAddress(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4355_glib_slistautoptr_cleanup_GInetSocketAddress")
external fun glib_slistautoptr_cleanup_GInetSocketAddress(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4356_glib_autoptr_cleanup_GInitable")
external fun glib_autoptr_cleanup_GInitable(_ptr: CValuesRef<CPointerVar<GInitable>>?): Unit

@CCall("knifunptr_glibjson4357_glib_listautoptr_cleanup_GInitable")
external fun glib_listautoptr_cleanup_GInitable(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4358_glib_slistautoptr_cleanup_GInitable")
external fun glib_slistautoptr_cleanup_GInitable(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4359_glib_autoptr_cleanup_GInputStream")
external fun glib_autoptr_cleanup_GInputStream(_ptr: CValuesRef<CPointerVar<GInputStream>>?): Unit

@CCall("knifunptr_glibjson4360_glib_listautoptr_cleanup_GInputStream")
external fun glib_listautoptr_cleanup_GInputStream(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4361_glib_slistautoptr_cleanup_GInputStream")
external fun glib_slistautoptr_cleanup_GInputStream(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4362_glib_autoptr_cleanup_GIOModule")
external fun glib_autoptr_cleanup_GIOModule(_ptr: CValuesRef<CPointerVar<GIOModule>>?): Unit

@CCall("knifunptr_glibjson4363_glib_listautoptr_cleanup_GIOModule")
external fun glib_listautoptr_cleanup_GIOModule(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4364_glib_slistautoptr_cleanup_GIOModule")
external fun glib_slistautoptr_cleanup_GIOModule(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4365_glib_autoptr_cleanup_GIOStream")
external fun glib_autoptr_cleanup_GIOStream(_ptr: CValuesRef<CPointerVar<GIOStream>>?): Unit

@CCall("knifunptr_glibjson4366_glib_listautoptr_cleanup_GIOStream")
external fun glib_listautoptr_cleanup_GIOStream(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4367_glib_slistautoptr_cleanup_GIOStream")
external fun glib_slistautoptr_cleanup_GIOStream(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4368_glib_autoptr_cleanup_GLoadableIcon")
external fun glib_autoptr_cleanup_GLoadableIcon(_ptr: CValuesRef<CPointerVar<GLoadableIcon>>?): Unit

@CCall("knifunptr_glibjson4369_glib_listautoptr_cleanup_GLoadableIcon")
external fun glib_listautoptr_cleanup_GLoadableIcon(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4370_glib_slistautoptr_cleanup_GLoadableIcon")
external fun glib_slistautoptr_cleanup_GLoadableIcon(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4371_glib_autoptr_cleanup_GMemoryInputStream")
external fun glib_autoptr_cleanup_GMemoryInputStream(_ptr: CValuesRef<CPointerVar<GMemoryInputStream>>?): Unit

@CCall("knifunptr_glibjson4372_glib_listautoptr_cleanup_GMemoryInputStream")
external fun glib_listautoptr_cleanup_GMemoryInputStream(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4373_glib_slistautoptr_cleanup_GMemoryInputStream")
external fun glib_slistautoptr_cleanup_GMemoryInputStream(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4374_glib_autoptr_cleanup_GMemoryOutputStream")
external fun glib_autoptr_cleanup_GMemoryOutputStream(_ptr: CValuesRef<CPointerVar<GMemoryOutputStream>>?): Unit

@CCall("knifunptr_glibjson4375_glib_listautoptr_cleanup_GMemoryOutputStream")
external fun glib_listautoptr_cleanup_GMemoryOutputStream(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4376_glib_slistautoptr_cleanup_GMemoryOutputStream")
external fun glib_slistautoptr_cleanup_GMemoryOutputStream(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4377_glib_autoptr_cleanup_GMenu")
external fun glib_autoptr_cleanup_GMenu(_ptr: CValuesRef<CPointerVar<GMenu>>?): Unit

@CCall("knifunptr_glibjson4378_glib_listautoptr_cleanup_GMenu")
external fun glib_listautoptr_cleanup_GMenu(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4379_glib_slistautoptr_cleanup_GMenu")
external fun glib_slistautoptr_cleanup_GMenu(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4380_glib_autoptr_cleanup_GMenuItem")
external fun glib_autoptr_cleanup_GMenuItem(_ptr: CValuesRef<CPointerVar<GMenuItem>>?): Unit

@CCall("knifunptr_glibjson4381_glib_listautoptr_cleanup_GMenuItem")
external fun glib_listautoptr_cleanup_GMenuItem(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4382_glib_slistautoptr_cleanup_GMenuItem")
external fun glib_slistautoptr_cleanup_GMenuItem(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4383_glib_autoptr_cleanup_GMenuModel")
external fun glib_autoptr_cleanup_GMenuModel(_ptr: CValuesRef<CPointerVar<GMenuModel>>?): Unit

@CCall("knifunptr_glibjson4384_glib_listautoptr_cleanup_GMenuModel")
external fun glib_listautoptr_cleanup_GMenuModel(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4385_glib_slistautoptr_cleanup_GMenuModel")
external fun glib_slistautoptr_cleanup_GMenuModel(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4386_glib_autoptr_cleanup_GMenuAttributeIter")
external fun glib_autoptr_cleanup_GMenuAttributeIter(_ptr: CValuesRef<CPointerVar<GMenuAttributeIter>>?): Unit

@CCall("knifunptr_glibjson4387_glib_listautoptr_cleanup_GMenuAttributeIter")
external fun glib_listautoptr_cleanup_GMenuAttributeIter(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4388_glib_slistautoptr_cleanup_GMenuAttributeIter")
external fun glib_slistautoptr_cleanup_GMenuAttributeIter(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4389_glib_autoptr_cleanup_GMenuLinkIter")
external fun glib_autoptr_cleanup_GMenuLinkIter(_ptr: CValuesRef<CPointerVar<GMenuLinkIter>>?): Unit

@CCall("knifunptr_glibjson4390_glib_listautoptr_cleanup_GMenuLinkIter")
external fun glib_listautoptr_cleanup_GMenuLinkIter(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4391_glib_slistautoptr_cleanup_GMenuLinkIter")
external fun glib_slistautoptr_cleanup_GMenuLinkIter(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4392_glib_autoptr_cleanup_GMount")
external fun glib_autoptr_cleanup_GMount(_ptr: CValuesRef<CPointerVar<GMount>>?): Unit

@CCall("knifunptr_glibjson4393_glib_listautoptr_cleanup_GMount")
external fun glib_listautoptr_cleanup_GMount(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4394_glib_slistautoptr_cleanup_GMount")
external fun glib_slistautoptr_cleanup_GMount(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4395_glib_autoptr_cleanup_GMountOperation")
external fun glib_autoptr_cleanup_GMountOperation(_ptr: CValuesRef<CPointerVar<GMountOperation>>?): Unit

@CCall("knifunptr_glibjson4396_glib_listautoptr_cleanup_GMountOperation")
external fun glib_listautoptr_cleanup_GMountOperation(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4397_glib_slistautoptr_cleanup_GMountOperation")
external fun glib_slistautoptr_cleanup_GMountOperation(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4398_glib_autoptr_cleanup_GNativeVolumeMonitor")
external fun glib_autoptr_cleanup_GNativeVolumeMonitor(_ptr: CValuesRef<CPointerVar<GNativeVolumeMonitor>>?): Unit

@CCall("knifunptr_glibjson4399_glib_listautoptr_cleanup_GNativeVolumeMonitor")
external fun glib_listautoptr_cleanup_GNativeVolumeMonitor(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4400_glib_slistautoptr_cleanup_GNativeVolumeMonitor")
external fun glib_slistautoptr_cleanup_GNativeVolumeMonitor(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4401_glib_autoptr_cleanup_GNetworkAddress")
external fun glib_autoptr_cleanup_GNetworkAddress(_ptr: CValuesRef<CPointerVar<GNetworkAddress>>?): Unit

@CCall("knifunptr_glibjson4402_glib_listautoptr_cleanup_GNetworkAddress")
external fun glib_listautoptr_cleanup_GNetworkAddress(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4403_glib_slistautoptr_cleanup_GNetworkAddress")
external fun glib_slistautoptr_cleanup_GNetworkAddress(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4404_glib_autoptr_cleanup_GNetworkMonitor")
external fun glib_autoptr_cleanup_GNetworkMonitor(_ptr: CValuesRef<CPointerVar<GNetworkMonitor>>?): Unit

@CCall("knifunptr_glibjson4405_glib_listautoptr_cleanup_GNetworkMonitor")
external fun glib_listautoptr_cleanup_GNetworkMonitor(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4406_glib_slistautoptr_cleanup_GNetworkMonitor")
external fun glib_slistautoptr_cleanup_GNetworkMonitor(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4407_glib_autoptr_cleanup_GNetworkService")
external fun glib_autoptr_cleanup_GNetworkService(_ptr: CValuesRef<CPointerVar<GNetworkService>>?): Unit

@CCall("knifunptr_glibjson4408_glib_listautoptr_cleanup_GNetworkService")
external fun glib_listautoptr_cleanup_GNetworkService(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4409_glib_slistautoptr_cleanup_GNetworkService")
external fun glib_slistautoptr_cleanup_GNetworkService(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4410_glib_autoptr_cleanup_GNotification")
external fun glib_autoptr_cleanup_GNotification(_ptr: CValuesRef<CPointerVar<GNotification>>?): Unit

@CCall("knifunptr_glibjson4411_glib_listautoptr_cleanup_GNotification")
external fun glib_listautoptr_cleanup_GNotification(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4412_glib_slistautoptr_cleanup_GNotification")
external fun glib_slistautoptr_cleanup_GNotification(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4413_glib_autoptr_cleanup_GOutputStream")
external fun glib_autoptr_cleanup_GOutputStream(_ptr: CValuesRef<CPointerVar<GOutputStream>>?): Unit

@CCall("knifunptr_glibjson4414_glib_listautoptr_cleanup_GOutputStream")
external fun glib_listautoptr_cleanup_GOutputStream(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4415_glib_slistautoptr_cleanup_GOutputStream")
external fun glib_slistautoptr_cleanup_GOutputStream(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4416_glib_autoptr_cleanup_GPermission")
external fun glib_autoptr_cleanup_GPermission(_ptr: CValuesRef<CPointerVar<GPermission>>?): Unit

@CCall("knifunptr_glibjson4417_glib_listautoptr_cleanup_GPermission")
external fun glib_listautoptr_cleanup_GPermission(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4418_glib_slistautoptr_cleanup_GPermission")
external fun glib_slistautoptr_cleanup_GPermission(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4419_glib_autoptr_cleanup_GPollableInputStream")
external fun glib_autoptr_cleanup_GPollableInputStream(_ptr: CValuesRef<CPointerVar<GPollableInputStream>>?): Unit

@CCall("knifunptr_glibjson4420_glib_listautoptr_cleanup_GPollableInputStream")
external fun glib_listautoptr_cleanup_GPollableInputStream(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4421_glib_slistautoptr_cleanup_GPollableInputStream")
external fun glib_slistautoptr_cleanup_GPollableInputStream(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4422_glib_autoptr_cleanup_GPollableOutputStream")
external fun glib_autoptr_cleanup_GPollableOutputStream(_ptr: CValuesRef<CPointerVar<GPollableOutputStream>>?): Unit

@CCall("knifunptr_glibjson4423_glib_listautoptr_cleanup_GPollableOutputStream")
external fun glib_listautoptr_cleanup_GPollableOutputStream(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4424_glib_slistautoptr_cleanup_GPollableOutputStream")
external fun glib_slistautoptr_cleanup_GPollableOutputStream(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4425_glib_autoptr_cleanup_GPropertyAction")
external fun glib_autoptr_cleanup_GPropertyAction(_ptr: CValuesRef<CPointerVar<GPropertyAction>>?): Unit

@CCall("knifunptr_glibjson4426_glib_listautoptr_cleanup_GPropertyAction")
external fun glib_listautoptr_cleanup_GPropertyAction(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4427_glib_slistautoptr_cleanup_GPropertyAction")
external fun glib_slistautoptr_cleanup_GPropertyAction(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4428_glib_autoptr_cleanup_GProxyAddressEnumerator")
external fun glib_autoptr_cleanup_GProxyAddressEnumerator(_ptr: CValuesRef<CPointerVar<GProxyAddressEnumerator>>?): Unit

@CCall("knifunptr_glibjson4429_glib_listautoptr_cleanup_GProxyAddressEnumerator")
external fun glib_listautoptr_cleanup_GProxyAddressEnumerator(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4430_glib_slistautoptr_cleanup_GProxyAddressEnumerator")
external fun glib_slistautoptr_cleanup_GProxyAddressEnumerator(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4431_glib_autoptr_cleanup_GProxyAddress")
external fun glib_autoptr_cleanup_GProxyAddress(_ptr: CValuesRef<CPointerVar<GProxyAddress>>?): Unit

@CCall("knifunptr_glibjson4432_glib_listautoptr_cleanup_GProxyAddress")
external fun glib_listautoptr_cleanup_GProxyAddress(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4433_glib_slistautoptr_cleanup_GProxyAddress")
external fun glib_slistautoptr_cleanup_GProxyAddress(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4434_glib_autoptr_cleanup_GProxy")
external fun glib_autoptr_cleanup_GProxy(_ptr: CValuesRef<CPointerVar<GProxy>>?): Unit

@CCall("knifunptr_glibjson4435_glib_listautoptr_cleanup_GProxy")
external fun glib_listautoptr_cleanup_GProxy(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4436_glib_slistautoptr_cleanup_GProxy")
external fun glib_slistautoptr_cleanup_GProxy(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4437_glib_autoptr_cleanup_GProxyResolver")
external fun glib_autoptr_cleanup_GProxyResolver(_ptr: CValuesRef<CPointerVar<GProxyResolver>>?): Unit

@CCall("knifunptr_glibjson4438_glib_listautoptr_cleanup_GProxyResolver")
external fun glib_listautoptr_cleanup_GProxyResolver(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4439_glib_slistautoptr_cleanup_GProxyResolver")
external fun glib_slistautoptr_cleanup_GProxyResolver(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4440_glib_autoptr_cleanup_GRemoteActionGroup")
external fun glib_autoptr_cleanup_GRemoteActionGroup(_ptr: CValuesRef<CPointerVar<GRemoteActionGroup>>?): Unit

@CCall("knifunptr_glibjson4441_glib_listautoptr_cleanup_GRemoteActionGroup")
external fun glib_listautoptr_cleanup_GRemoteActionGroup(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4442_glib_slistautoptr_cleanup_GRemoteActionGroup")
external fun glib_slistautoptr_cleanup_GRemoteActionGroup(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4443_glib_autoptr_cleanup_GResolver")
external fun glib_autoptr_cleanup_GResolver(_ptr: CValuesRef<CPointerVar<GResolver>>?): Unit

@CCall("knifunptr_glibjson4444_glib_listautoptr_cleanup_GResolver")
external fun glib_listautoptr_cleanup_GResolver(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4445_glib_slistautoptr_cleanup_GResolver")
external fun glib_slistautoptr_cleanup_GResolver(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4446_glib_autoptr_cleanup_GSeekable")
external fun glib_autoptr_cleanup_GSeekable(_ptr: CValuesRef<CPointerVar<GSeekable>>?): Unit

@CCall("knifunptr_glibjson4447_glib_listautoptr_cleanup_GSeekable")
external fun glib_listautoptr_cleanup_GSeekable(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4448_glib_slistautoptr_cleanup_GSeekable")
external fun glib_slistautoptr_cleanup_GSeekable(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4449_glib_autoptr_cleanup_GSettingsBackend")
external fun glib_autoptr_cleanup_GSettingsBackend(_ptr: CValuesRef<CPointerVar<GSettingsBackend>>?): Unit

@CCall("knifunptr_glibjson4450_glib_listautoptr_cleanup_GSettingsBackend")
external fun glib_listautoptr_cleanup_GSettingsBackend(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4451_glib_slistautoptr_cleanup_GSettingsBackend")
external fun glib_slistautoptr_cleanup_GSettingsBackend(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4452_glib_autoptr_cleanup_GSettingsSchema")
external fun glib_autoptr_cleanup_GSettingsSchema(_ptr: CValuesRef<CPointerVar<GSettingsSchema>>?): Unit

@CCall("knifunptr_glibjson4453_glib_listautoptr_cleanup_GSettingsSchema")
external fun glib_listautoptr_cleanup_GSettingsSchema(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4454_glib_slistautoptr_cleanup_GSettingsSchema")
external fun glib_slistautoptr_cleanup_GSettingsSchema(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4455_glib_autoptr_cleanup_GSettings")
external fun glib_autoptr_cleanup_GSettings(_ptr: CValuesRef<CPointerVar<GSettings>>?): Unit

@CCall("knifunptr_glibjson4456_glib_listautoptr_cleanup_GSettings")
external fun glib_listautoptr_cleanup_GSettings(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4457_glib_slistautoptr_cleanup_GSettings")
external fun glib_slistautoptr_cleanup_GSettings(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4458_glib_autoptr_cleanup_GSimpleActionGroup")
external fun glib_autoptr_cleanup_GSimpleActionGroup(_ptr: CValuesRef<CPointerVar<GSimpleActionGroup>>?): Unit

@CCall("knifunptr_glibjson4459_glib_listautoptr_cleanup_GSimpleActionGroup")
external fun glib_listautoptr_cleanup_GSimpleActionGroup(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4460_glib_slistautoptr_cleanup_GSimpleActionGroup")
external fun glib_slistautoptr_cleanup_GSimpleActionGroup(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4461_glib_autoptr_cleanup_GSimpleAction")
external fun glib_autoptr_cleanup_GSimpleAction(_ptr: CValuesRef<CPointerVar<GSimpleAction>>?): Unit

@CCall("knifunptr_glibjson4462_glib_listautoptr_cleanup_GSimpleAction")
external fun glib_listautoptr_cleanup_GSimpleAction(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4463_glib_slistautoptr_cleanup_GSimpleAction")
external fun glib_slistautoptr_cleanup_GSimpleAction(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4464_glib_autoptr_cleanup_GSimpleAsyncResult")
external fun glib_autoptr_cleanup_GSimpleAsyncResult(_ptr: CValuesRef<CPointerVar<GSimpleAsyncResult>>?): Unit

@CCall("knifunptr_glibjson4465_glib_listautoptr_cleanup_GSimpleAsyncResult")
external fun glib_listautoptr_cleanup_GSimpleAsyncResult(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4466_glib_slistautoptr_cleanup_GSimpleAsyncResult")
external fun glib_slistautoptr_cleanup_GSimpleAsyncResult(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4467_glib_autoptr_cleanup_GSimplePermission")
external fun glib_autoptr_cleanup_GSimplePermission(_ptr: CValuesRef<CPointerVar<GSimplePermission>>?): Unit

@CCall("knifunptr_glibjson4468_glib_listautoptr_cleanup_GSimplePermission")
external fun glib_listautoptr_cleanup_GSimplePermission(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4469_glib_slistautoptr_cleanup_GSimplePermission")
external fun glib_slistautoptr_cleanup_GSimplePermission(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4470_glib_autoptr_cleanup_GSimpleProxyResolver")
external fun glib_autoptr_cleanup_GSimpleProxyResolver(_ptr: CValuesRef<CPointerVar<GSimpleProxyResolver>>?): Unit

@CCall("knifunptr_glibjson4471_glib_listautoptr_cleanup_GSimpleProxyResolver")
external fun glib_listautoptr_cleanup_GSimpleProxyResolver(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4472_glib_slistautoptr_cleanup_GSimpleProxyResolver")
external fun glib_slistautoptr_cleanup_GSimpleProxyResolver(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4473_glib_autoptr_cleanup_GSocketAddressEnumerator")
external fun glib_autoptr_cleanup_GSocketAddressEnumerator(_ptr: CValuesRef<CPointerVar<GSocketAddressEnumerator>>?): Unit

@CCall("knifunptr_glibjson4474_glib_listautoptr_cleanup_GSocketAddressEnumerator")
external fun glib_listautoptr_cleanup_GSocketAddressEnumerator(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4475_glib_slistautoptr_cleanup_GSocketAddressEnumerator")
external fun glib_slistautoptr_cleanup_GSocketAddressEnumerator(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4476_glib_autoptr_cleanup_GSocketAddress")
external fun glib_autoptr_cleanup_GSocketAddress(_ptr: CValuesRef<CPointerVar<GSocketAddress>>?): Unit

@CCall("knifunptr_glibjson4477_glib_listautoptr_cleanup_GSocketAddress")
external fun glib_listautoptr_cleanup_GSocketAddress(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4478_glib_slistautoptr_cleanup_GSocketAddress")
external fun glib_slistautoptr_cleanup_GSocketAddress(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4479_glib_autoptr_cleanup_GSocketClient")
external fun glib_autoptr_cleanup_GSocketClient(_ptr: CValuesRef<CPointerVar<GSocketClient>>?): Unit

@CCall("knifunptr_glibjson4480_glib_listautoptr_cleanup_GSocketClient")
external fun glib_listautoptr_cleanup_GSocketClient(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4481_glib_slistautoptr_cleanup_GSocketClient")
external fun glib_slistautoptr_cleanup_GSocketClient(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4482_glib_autoptr_cleanup_GSocketConnectable")
external fun glib_autoptr_cleanup_GSocketConnectable(_ptr: CValuesRef<CPointerVar<GSocketConnectable>>?): Unit

@CCall("knifunptr_glibjson4483_glib_listautoptr_cleanup_GSocketConnectable")
external fun glib_listautoptr_cleanup_GSocketConnectable(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4484_glib_slistautoptr_cleanup_GSocketConnectable")
external fun glib_slistautoptr_cleanup_GSocketConnectable(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4485_glib_autoptr_cleanup_GSocketConnection")
external fun glib_autoptr_cleanup_GSocketConnection(_ptr: CValuesRef<CPointerVar<GSocketConnection>>?): Unit

@CCall("knifunptr_glibjson4486_glib_listautoptr_cleanup_GSocketConnection")
external fun glib_listautoptr_cleanup_GSocketConnection(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4487_glib_slistautoptr_cleanup_GSocketConnection")
external fun glib_slistautoptr_cleanup_GSocketConnection(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4488_glib_autoptr_cleanup_GSocketControlMessage")
external fun glib_autoptr_cleanup_GSocketControlMessage(_ptr: CValuesRef<CPointerVar<GSocketControlMessage>>?): Unit

@CCall("knifunptr_glibjson4489_glib_listautoptr_cleanup_GSocketControlMessage")
external fun glib_listautoptr_cleanup_GSocketControlMessage(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4490_glib_slistautoptr_cleanup_GSocketControlMessage")
external fun glib_slistautoptr_cleanup_GSocketControlMessage(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4491_glib_autoptr_cleanup_GSocket")
external fun glib_autoptr_cleanup_GSocket(_ptr: CValuesRef<CPointerVar<GSocket>>?): Unit

@CCall("knifunptr_glibjson4492_glib_listautoptr_cleanup_GSocket")
external fun glib_listautoptr_cleanup_GSocket(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4493_glib_slistautoptr_cleanup_GSocket")
external fun glib_slistautoptr_cleanup_GSocket(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4494_glib_autoptr_cleanup_GSocketListener")
external fun glib_autoptr_cleanup_GSocketListener(_ptr: CValuesRef<CPointerVar<GSocketListener>>?): Unit

@CCall("knifunptr_glibjson4495_glib_listautoptr_cleanup_GSocketListener")
external fun glib_listautoptr_cleanup_GSocketListener(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4496_glib_slistautoptr_cleanup_GSocketListener")
external fun glib_slistautoptr_cleanup_GSocketListener(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4497_glib_autoptr_cleanup_GSocketService")
external fun glib_autoptr_cleanup_GSocketService(_ptr: CValuesRef<CPointerVar<GSocketService>>?): Unit

@CCall("knifunptr_glibjson4498_glib_listautoptr_cleanup_GSocketService")
external fun glib_listautoptr_cleanup_GSocketService(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4499_glib_slistautoptr_cleanup_GSocketService")
external fun glib_slistautoptr_cleanup_GSocketService(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4500_glib_autoptr_cleanup_GSubprocess")
external fun glib_autoptr_cleanup_GSubprocess(_ptr: CValuesRef<CPointerVar<GSubprocess>>?): Unit

@CCall("knifunptr_glibjson4501_glib_listautoptr_cleanup_GSubprocess")
external fun glib_listautoptr_cleanup_GSubprocess(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4502_glib_slistautoptr_cleanup_GSubprocess")
external fun glib_slistautoptr_cleanup_GSubprocess(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4503_glib_autoptr_cleanup_GSubprocessLauncher")
external fun glib_autoptr_cleanup_GSubprocessLauncher(_ptr: CValuesRef<CPointerVar<GSubprocessLauncher>>?): Unit

@CCall("knifunptr_glibjson4504_glib_listautoptr_cleanup_GSubprocessLauncher")
external fun glib_listautoptr_cleanup_GSubprocessLauncher(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4505_glib_slistautoptr_cleanup_GSubprocessLauncher")
external fun glib_slistautoptr_cleanup_GSubprocessLauncher(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4506_glib_autoptr_cleanup_GTask")
external fun glib_autoptr_cleanup_GTask(_ptr: CValuesRef<CPointerVar<GTask>>?): Unit

@CCall("knifunptr_glibjson4507_glib_listautoptr_cleanup_GTask")
external fun glib_listautoptr_cleanup_GTask(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4508_glib_slistautoptr_cleanup_GTask")
external fun glib_slistautoptr_cleanup_GTask(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4509_glib_autoptr_cleanup_GTcpConnection")
external fun glib_autoptr_cleanup_GTcpConnection(_ptr: CValuesRef<CPointerVar<GTcpConnection>>?): Unit

@CCall("knifunptr_glibjson4510_glib_listautoptr_cleanup_GTcpConnection")
external fun glib_listautoptr_cleanup_GTcpConnection(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4511_glib_slistautoptr_cleanup_GTcpConnection")
external fun glib_slistautoptr_cleanup_GTcpConnection(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4512_glib_autoptr_cleanup_GTcpWrapperConnection")
external fun glib_autoptr_cleanup_GTcpWrapperConnection(_ptr: CValuesRef<CPointerVar<GTcpWrapperConnection>>?): Unit

@CCall("knifunptr_glibjson4513_glib_listautoptr_cleanup_GTcpWrapperConnection")
external fun glib_listautoptr_cleanup_GTcpWrapperConnection(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4514_glib_slistautoptr_cleanup_GTcpWrapperConnection")
external fun glib_slistautoptr_cleanup_GTcpWrapperConnection(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4515_glib_autoptr_cleanup_GTestDBus")
external fun glib_autoptr_cleanup_GTestDBus(_ptr: CValuesRef<CPointerVar<GTestDBus>>?): Unit

@CCall("knifunptr_glibjson4516_glib_listautoptr_cleanup_GTestDBus")
external fun glib_listautoptr_cleanup_GTestDBus(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4517_glib_slistautoptr_cleanup_GTestDBus")
external fun glib_slistautoptr_cleanup_GTestDBus(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4518_glib_autoptr_cleanup_GThemedIcon")
external fun glib_autoptr_cleanup_GThemedIcon(_ptr: CValuesRef<CPointerVar<GThemedIcon>>?): Unit

@CCall("knifunptr_glibjson4519_glib_listautoptr_cleanup_GThemedIcon")
external fun glib_listautoptr_cleanup_GThemedIcon(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4520_glib_slistautoptr_cleanup_GThemedIcon")
external fun glib_slistautoptr_cleanup_GThemedIcon(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4521_glib_autoptr_cleanup_GThreadedSocketService")
external fun glib_autoptr_cleanup_GThreadedSocketService(_ptr: CValuesRef<CPointerVar<GThreadedSocketService>>?): Unit

@CCall("knifunptr_glibjson4522_glib_listautoptr_cleanup_GThreadedSocketService")
external fun glib_listautoptr_cleanup_GThreadedSocketService(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4523_glib_slistautoptr_cleanup_GThreadedSocketService")
external fun glib_slistautoptr_cleanup_GThreadedSocketService(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4524_glib_autoptr_cleanup_GTlsBackend")
external fun glib_autoptr_cleanup_GTlsBackend(_ptr: CValuesRef<CPointerVar<GTlsBackend>>?): Unit

@CCall("knifunptr_glibjson4525_glib_listautoptr_cleanup_GTlsBackend")
external fun glib_listautoptr_cleanup_GTlsBackend(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4526_glib_slistautoptr_cleanup_GTlsBackend")
external fun glib_slistautoptr_cleanup_GTlsBackend(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4527_glib_autoptr_cleanup_GTlsCertificate")
external fun glib_autoptr_cleanup_GTlsCertificate(_ptr: CValuesRef<CPointerVar<GTlsCertificate>>?): Unit

@CCall("knifunptr_glibjson4528_glib_listautoptr_cleanup_GTlsCertificate")
external fun glib_listautoptr_cleanup_GTlsCertificate(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4529_glib_slistautoptr_cleanup_GTlsCertificate")
external fun glib_slistautoptr_cleanup_GTlsCertificate(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4530_glib_autoptr_cleanup_GTlsClientConnection")
external fun glib_autoptr_cleanup_GTlsClientConnection(_ptr: CValuesRef<CPointerVar<GTlsClientConnection>>?): Unit

@CCall("knifunptr_glibjson4531_glib_listautoptr_cleanup_GTlsClientConnection")
external fun glib_listautoptr_cleanup_GTlsClientConnection(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4532_glib_slistautoptr_cleanup_GTlsClientConnection")
external fun glib_slistautoptr_cleanup_GTlsClientConnection(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4533_glib_autoptr_cleanup_GTlsConnection")
external fun glib_autoptr_cleanup_GTlsConnection(_ptr: CValuesRef<CPointerVar<GTlsConnection>>?): Unit

@CCall("knifunptr_glibjson4534_glib_listautoptr_cleanup_GTlsConnection")
external fun glib_listautoptr_cleanup_GTlsConnection(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4535_glib_slistautoptr_cleanup_GTlsConnection")
external fun glib_slistautoptr_cleanup_GTlsConnection(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4536_glib_autoptr_cleanup_GTlsDatabase")
external fun glib_autoptr_cleanup_GTlsDatabase(_ptr: CValuesRef<CPointerVar<GTlsDatabase>>?): Unit

@CCall("knifunptr_glibjson4537_glib_listautoptr_cleanup_GTlsDatabase")
external fun glib_listautoptr_cleanup_GTlsDatabase(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4538_glib_slistautoptr_cleanup_GTlsDatabase")
external fun glib_slistautoptr_cleanup_GTlsDatabase(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4539_glib_autoptr_cleanup_GTlsFileDatabase")
external fun glib_autoptr_cleanup_GTlsFileDatabase(_ptr: CValuesRef<CPointerVar<GTlsFileDatabase>>?): Unit

@CCall("knifunptr_glibjson4540_glib_listautoptr_cleanup_GTlsFileDatabase")
external fun glib_listautoptr_cleanup_GTlsFileDatabase(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4541_glib_slistautoptr_cleanup_GTlsFileDatabase")
external fun glib_slistautoptr_cleanup_GTlsFileDatabase(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4542_glib_autoptr_cleanup_GTlsInteraction")
external fun glib_autoptr_cleanup_GTlsInteraction(_ptr: CValuesRef<CPointerVar<GTlsInteraction>>?): Unit

@CCall("knifunptr_glibjson4543_glib_listautoptr_cleanup_GTlsInteraction")
external fun glib_listautoptr_cleanup_GTlsInteraction(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4544_glib_slistautoptr_cleanup_GTlsInteraction")
external fun glib_slistautoptr_cleanup_GTlsInteraction(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4545_glib_autoptr_cleanup_GTlsPassword")
external fun glib_autoptr_cleanup_GTlsPassword(_ptr: CValuesRef<CPointerVar<GTlsPassword>>?): Unit

@CCall("knifunptr_glibjson4546_glib_listautoptr_cleanup_GTlsPassword")
external fun glib_listautoptr_cleanup_GTlsPassword(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4547_glib_slistautoptr_cleanup_GTlsPassword")
external fun glib_slistautoptr_cleanup_GTlsPassword(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4548_glib_autoptr_cleanup_GTlsServerConnection")
external fun glib_autoptr_cleanup_GTlsServerConnection(_ptr: CValuesRef<CPointerVar<GTlsServerConnection>>?): Unit

@CCall("knifunptr_glibjson4549_glib_listautoptr_cleanup_GTlsServerConnection")
external fun glib_listautoptr_cleanup_GTlsServerConnection(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4550_glib_slistautoptr_cleanup_GTlsServerConnection")
external fun glib_slistautoptr_cleanup_GTlsServerConnection(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4551_glib_autoptr_cleanup_GVfs")
external fun glib_autoptr_cleanup_GVfs(_ptr: CValuesRef<CPointerVar<GVfs>>?): Unit

@CCall("knifunptr_glibjson4552_glib_listautoptr_cleanup_GVfs")
external fun glib_listautoptr_cleanup_GVfs(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4553_glib_slistautoptr_cleanup_GVfs")
external fun glib_slistautoptr_cleanup_GVfs(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4554_glib_autoptr_cleanup_GVolume")
external fun glib_autoptr_cleanup_GVolume(_ptr: CValuesRef<CPointerVar<GVolume>>?): Unit

@CCall("knifunptr_glibjson4555_glib_listautoptr_cleanup_GVolume")
external fun glib_listautoptr_cleanup_GVolume(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4556_glib_slistautoptr_cleanup_GVolume")
external fun glib_slistautoptr_cleanup_GVolume(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4557_glib_autoptr_cleanup_GVolumeMonitor")
external fun glib_autoptr_cleanup_GVolumeMonitor(_ptr: CValuesRef<CPointerVar<GVolumeMonitor>>?): Unit

@CCall("knifunptr_glibjson4558_glib_listautoptr_cleanup_GVolumeMonitor")
external fun glib_listautoptr_cleanup_GVolumeMonitor(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4559_glib_slistautoptr_cleanup_GVolumeMonitor")
external fun glib_slistautoptr_cleanup_GVolumeMonitor(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4560_glib_autoptr_cleanup_GZlibCompressor")
external fun glib_autoptr_cleanup_GZlibCompressor(_ptr: CValuesRef<CPointerVar<GZlibCompressor>>?): Unit

@CCall("knifunptr_glibjson4561_glib_listautoptr_cleanup_GZlibCompressor")
external fun glib_listautoptr_cleanup_GZlibCompressor(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4562_glib_slistautoptr_cleanup_GZlibCompressor")
external fun glib_slistautoptr_cleanup_GZlibCompressor(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4563_glib_autoptr_cleanup_GZlibDecompressor")
external fun glib_autoptr_cleanup_GZlibDecompressor(_ptr: CValuesRef<CPointerVar<GZlibDecompressor>>?): Unit

@CCall("knifunptr_glibjson4564_glib_listautoptr_cleanup_GZlibDecompressor")
external fun glib_listautoptr_cleanup_GZlibDecompressor(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4565_glib_slistautoptr_cleanup_GZlibDecompressor")
external fun glib_slistautoptr_cleanup_GZlibDecompressor(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4566_json_generator_get_type")
external fun json_generator_get_type(): GType

@CCall("knifunptr_glibjson4567_json_generator_new")
external fun json_generator_new(): CPointer<JsonGenerator>?

@CCall("knifunptr_glibjson4568_json_generator_set_pretty")
external fun json_generator_set_pretty(generator: CValuesRef<JsonGenerator>?, is_pretty: gboolean): Unit

@CCall("knifunptr_glibjson4569_json_generator_get_pretty")
external fun json_generator_get_pretty(generator: CValuesRef<JsonGenerator>?): gboolean

@CCall("knifunptr_glibjson4570_json_generator_set_indent")
external fun json_generator_set_indent(generator: CValuesRef<JsonGenerator>?, indent_level: guint): Unit

@CCall("knifunptr_glibjson4571_json_generator_get_indent")
external fun json_generator_get_indent(generator: CValuesRef<JsonGenerator>?): guint

@CCall("knifunptr_glibjson4572_json_generator_set_indent_char")
external fun json_generator_set_indent_char(generator: CValuesRef<JsonGenerator>?, indent_char: gunichar): Unit

@CCall("knifunptr_glibjson4573_json_generator_get_indent_char")
external fun json_generator_get_indent_char(generator: CValuesRef<JsonGenerator>?): gunichar

@CCall("knifunptr_glibjson4574_json_generator_set_root")
external fun json_generator_set_root(generator: CValuesRef<JsonGenerator>?, node: CValuesRef<JsonNode>?): Unit

@CCall("knifunptr_glibjson4575_json_generator_get_root")
external fun json_generator_get_root(generator: CValuesRef<JsonGenerator>?): CPointer<JsonNode>?

@CCall("knifunptr_glibjson4576_json_generator_to_gstring")
external fun json_generator_to_gstring(generator: CValuesRef<JsonGenerator>?, string: CValuesRef<GString>?): CPointer<GString>?

@CCall("knifunptr_glibjson4577_json_generator_to_data")
external fun json_generator_to_data(generator: CValuesRef<JsonGenerator>?, length: CValuesRef<gsizeVar>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson4578_json_generator_to_file")
external fun json_generator_to_file(generator: CValuesRef<JsonGenerator>?, @CCall.CString filename: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson4579_json_generator_to_stream")
external fun json_generator_to_stream(generator: CValuesRef<JsonGenerator>?, stream: CValuesRef<GOutputStream>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson4580_glib_autoptr_cleanup_JsonGenerator")
external fun glib_autoptr_cleanup_JsonGenerator(_ptr: CValuesRef<CPointerVar<JsonGenerator>>?): Unit

@CCall("knifunptr_glibjson4581_glib_listautoptr_cleanup_JsonGenerator")
external fun glib_listautoptr_cleanup_JsonGenerator(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4582_glib_slistautoptr_cleanup_JsonGenerator")
external fun glib_slistautoptr_cleanup_JsonGenerator(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4583_json_parser_error_quark")
external fun json_parser_error_quark(): GQuark

@CCall("knifunptr_glibjson4584_json_parser_get_type")
external fun json_parser_get_type(): GType

@CCall("knifunptr_glibjson4585_json_parser_new")
external fun json_parser_new(): CPointer<JsonParser>?

@CCall("knifunptr_glibjson4586_json_parser_new_immutable")
external fun json_parser_new_immutable(): CPointer<JsonParser>?

@CCall("knifunptr_glibjson4587_json_parser_load_from_file")
external fun json_parser_load_from_file(parser: CValuesRef<JsonParser>?, @CCall.CString filename: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson4588_json_parser_load_from_data")
external fun json_parser_load_from_data(parser: CValuesRef<JsonParser>?, @CCall.CString data: String?, length: gssize, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson4589_json_parser_load_from_stream")
external fun json_parser_load_from_stream(parser: CValuesRef<JsonParser>?, stream: CValuesRef<GInputStream>?, cancellable: CValuesRef<GCancellable>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson4590_json_parser_load_from_stream_async")
external fun json_parser_load_from_stream_async(parser: CValuesRef<JsonParser>?, stream: CValuesRef<GInputStream>?, cancellable: CValuesRef<GCancellable>?, callback: GAsyncReadyCallback?, user_data: gpointer?): Unit

@CCall("knifunptr_glibjson4591_json_parser_load_from_stream_finish")
external fun json_parser_load_from_stream_finish(parser: CValuesRef<JsonParser>?, result: CValuesRef<GAsyncResult>?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson4592_json_parser_get_root")
external fun json_parser_get_root(parser: CValuesRef<JsonParser>?): CPointer<JsonNode>?

@CCall("knifunptr_glibjson4593_json_parser_steal_root")
external fun json_parser_steal_root(parser: CValuesRef<JsonParser>?): CPointer<JsonNode>?

@CCall("knifunptr_glibjson4594_json_parser_get_current_line")
external fun json_parser_get_current_line(parser: CValuesRef<JsonParser>?): guint

@CCall("knifunptr_glibjson4595_json_parser_get_current_pos")
external fun json_parser_get_current_pos(parser: CValuesRef<JsonParser>?): guint

@CCall("knifunptr_glibjson4596_json_parser_has_assignment")
external fun json_parser_has_assignment(parser: CValuesRef<JsonParser>?, variable_name: CValuesRef<CPointerVar<gcharVar>>?): gboolean

@CCall("knifunptr_glibjson4597_glib_autoptr_cleanup_JsonParser")
external fun glib_autoptr_cleanup_JsonParser(_ptr: CValuesRef<CPointerVar<JsonParser>>?): Unit

@CCall("knifunptr_glibjson4598_glib_listautoptr_cleanup_JsonParser")
external fun glib_listautoptr_cleanup_JsonParser(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4599_glib_slistautoptr_cleanup_JsonParser")
external fun glib_slistautoptr_cleanup_JsonParser(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4600_json_path_get_type")
external fun json_path_get_type(): GType

@CCall("knifunptr_glibjson4601_json_path_error_quark")
external fun json_path_error_quark(): GQuark

@CCall("knifunptr_glibjson4602_json_path_new")
external fun json_path_new(): CPointer<JsonPath>?

@CCall("knifunptr_glibjson4603_json_path_compile")
external fun json_path_compile(path: CValuesRef<JsonPath>?, @CCall.CString expression: String?, error: CValuesRef<CPointerVar<GError>>?): gboolean

@CCall("knifunptr_glibjson4604_json_path_match")
external fun json_path_match(path: CValuesRef<JsonPath>?, root: CValuesRef<JsonNode>?): CPointer<JsonNode>?

@CCall("knifunptr_glibjson4605_json_path_query")
external fun json_path_query(@CCall.CString expression: String?, root: CValuesRef<JsonNode>?, error: CValuesRef<CPointerVar<GError>>?): CPointer<JsonNode>?

@CCall("knifunptr_glibjson4606_glib_autoptr_cleanup_JsonPath")
external fun glib_autoptr_cleanup_JsonPath(_ptr: CValuesRef<CPointerVar<JsonPath>>?): Unit

@CCall("knifunptr_glibjson4607_glib_listautoptr_cleanup_JsonPath")
external fun glib_listautoptr_cleanup_JsonPath(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4608_glib_slistautoptr_cleanup_JsonPath")
external fun glib_slistautoptr_cleanup_JsonPath(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4609_json_reader_error_quark")
external fun json_reader_error_quark(): GQuark

@CCall("knifunptr_glibjson4610_json_reader_get_type")
external fun json_reader_get_type(): GType

@CCall("knifunptr_glibjson4611_json_reader_new")
external fun json_reader_new(node: CValuesRef<JsonNode>?): CPointer<JsonReader>?

@CCall("knifunptr_glibjson4612_json_reader_set_root")
external fun json_reader_set_root(reader: CValuesRef<JsonReader>?, root: CValuesRef<JsonNode>?): Unit

@CCall("knifunptr_glibjson4613_json_reader_get_error")
external fun json_reader_get_error(reader: CValuesRef<JsonReader>?): CPointer<GError>?

@CCall("knifunptr_glibjson4614_json_reader_is_array")
external fun json_reader_is_array(reader: CValuesRef<JsonReader>?): gboolean

@CCall("knifunptr_glibjson4615_json_reader_read_element")
external fun json_reader_read_element(reader: CValuesRef<JsonReader>?, index_: guint): gboolean

@CCall("knifunptr_glibjson4616_json_reader_end_element")
external fun json_reader_end_element(reader: CValuesRef<JsonReader>?): Unit

@CCall("knifunptr_glibjson4617_json_reader_count_elements")
external fun json_reader_count_elements(reader: CValuesRef<JsonReader>?): gint

@CCall("knifunptr_glibjson4618_json_reader_is_object")
external fun json_reader_is_object(reader: CValuesRef<JsonReader>?): gboolean

@CCall("knifunptr_glibjson4619_json_reader_read_member")
external fun json_reader_read_member(reader: CValuesRef<JsonReader>?, @CCall.CString member_name: String?): gboolean

@CCall("knifunptr_glibjson4620_json_reader_end_member")
external fun json_reader_end_member(reader: CValuesRef<JsonReader>?): Unit

@CCall("knifunptr_glibjson4621_json_reader_count_members")
external fun json_reader_count_members(reader: CValuesRef<JsonReader>?): gint

@CCall("knifunptr_glibjson4622_json_reader_list_members")
external fun json_reader_list_members(reader: CValuesRef<JsonReader>?): CPointer<CPointerVar<gcharVar>>?

@CCall("knifunptr_glibjson4623_json_reader_get_member_name")
external fun json_reader_get_member_name(reader: CValuesRef<JsonReader>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson4624_json_reader_is_value")
external fun json_reader_is_value(reader: CValuesRef<JsonReader>?): gboolean

@CCall("knifunptr_glibjson4625_json_reader_get_value")
external fun json_reader_get_value(reader: CValuesRef<JsonReader>?): CPointer<JsonNode>?

@CCall("knifunptr_glibjson4626_json_reader_get_int_value")
external fun json_reader_get_int_value(reader: CValuesRef<JsonReader>?): gint64

@CCall("knifunptr_glibjson4627_json_reader_get_double_value")
external fun json_reader_get_double_value(reader: CValuesRef<JsonReader>?): gdouble

@CCall("knifunptr_glibjson4628_json_reader_get_string_value")
external fun json_reader_get_string_value(reader: CValuesRef<JsonReader>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson4629_json_reader_get_boolean_value")
external fun json_reader_get_boolean_value(reader: CValuesRef<JsonReader>?): gboolean

@CCall("knifunptr_glibjson4630_json_reader_get_null_value")
external fun json_reader_get_null_value(reader: CValuesRef<JsonReader>?): gboolean

@CCall("knifunptr_glibjson4631_glib_autoptr_cleanup_JsonReader")
external fun glib_autoptr_cleanup_JsonReader(_ptr: CValuesRef<CPointerVar<JsonReader>>?): Unit

@CCall("knifunptr_glibjson4632_glib_listautoptr_cleanup_JsonReader")
external fun glib_listautoptr_cleanup_JsonReader(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4633_glib_slistautoptr_cleanup_JsonReader")
external fun glib_slistautoptr_cleanup_JsonReader(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4634_json_from_string")
external fun json_from_string(@CCall.CString str: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<JsonNode>?

@CCall("knifunptr_glibjson4635_json_to_string")
external fun json_to_string(node: CValuesRef<JsonNode>?, pretty: gboolean): CPointer<ByteVar>?

@CCall("knifunptr_glibjson4636_json_parser_error_get_type")
external fun json_parser_error_get_type(): GType

@CCall("knifunptr_glibjson4637_json_path_error_get_type")
external fun json_path_error_get_type(): GType

@CCall("knifunptr_glibjson4638_json_reader_error_get_type")
external fun json_reader_error_get_type(): GType

@CCall("knifunptr_glibjson4639_json_node_type_get_type")
external fun json_node_type_get_type(): GType

@CCall("knifunptr_glibjson4640_json_serializable_get_type")
external fun json_serializable_get_type(): GType

@CCall("knifunptr_glibjson4641_json_serializable_serialize_property")
external fun json_serializable_serialize_property(serializable: CValuesRef<JsonSerializable>?, @CCall.CString property_name: String?, value: CValuesRef<GValue>?, pspec: CValuesRef<GParamSpec>?): CPointer<JsonNode>?

@CCall("knifunptr_glibjson4642_json_serializable_deserialize_property")
external fun json_serializable_deserialize_property(serializable: CValuesRef<JsonSerializable>?, @CCall.CString property_name: String?, value: CValuesRef<GValue>?, pspec: CValuesRef<GParamSpec>?, property_node: CValuesRef<JsonNode>?): gboolean

@CCall("knifunptr_glibjson4643_json_serializable_find_property")
external fun json_serializable_find_property(serializable: CValuesRef<JsonSerializable>?, @CCall.CString name: String?): CPointer<GParamSpec>?

@CCall("knifunptr_glibjson4644_json_serializable_list_properties")
external fun json_serializable_list_properties(serializable: CValuesRef<JsonSerializable>?, n_pspecs: CValuesRef<guintVar>?): CPointer<CPointerVar<GParamSpec>>?

@CCall("knifunptr_glibjson4645_json_serializable_set_property")
external fun json_serializable_set_property(serializable: CValuesRef<JsonSerializable>?, pspec: CValuesRef<GParamSpec>?, value: CValuesRef<GValue>?): Unit

@CCall("knifunptr_glibjson4646_json_serializable_get_property")
external fun json_serializable_get_property(serializable: CValuesRef<JsonSerializable>?, pspec: CValuesRef<GParamSpec>?, value: CValuesRef<GValue>?): Unit

@CCall("knifunptr_glibjson4647_json_serializable_default_serialize_property")
external fun json_serializable_default_serialize_property(serializable: CValuesRef<JsonSerializable>?, @CCall.CString property_name: String?, value: CValuesRef<GValue>?, pspec: CValuesRef<GParamSpec>?): CPointer<JsonNode>?

@CCall("knifunptr_glibjson4648_json_serializable_default_deserialize_property")
external fun json_serializable_default_deserialize_property(serializable: CValuesRef<JsonSerializable>?, @CCall.CString property_name: String?, value: CValuesRef<GValue>?, pspec: CValuesRef<GParamSpec>?, property_node: CValuesRef<JsonNode>?): gboolean

@CCall("knifunptr_glibjson4649_json_boxed_register_serialize_func")
external fun json_boxed_register_serialize_func(gboxed_type: GType, node_type: JsonNodeType, serialize_func: JsonBoxedSerializeFunc?): Unit

@CCall("knifunptr_glibjson4650_json_boxed_register_deserialize_func")
external fun json_boxed_register_deserialize_func(gboxed_type: GType, node_type: JsonNodeType, deserialize_func: JsonBoxedDeserializeFunc?): Unit

@CCall("knifunptr_glibjson4651_json_boxed_can_serialize")
external fun json_boxed_can_serialize(gboxed_type: GType, node_type: CValuesRef<JsonNodeType.Var>?): gboolean

@CCall("knifunptr_glibjson4652_json_boxed_can_deserialize")
external fun json_boxed_can_deserialize(gboxed_type: GType, node_type: JsonNodeType): gboolean

@CCall("knifunptr_glibjson4653_json_boxed_serialize")
external fun json_boxed_serialize(gboxed_type: GType, boxed: gconstpointer?): CPointer<JsonNode>?

@CCall("knifunptr_glibjson4654_json_boxed_deserialize")
external fun json_boxed_deserialize(gboxed_type: GType, node: CValuesRef<JsonNode>?): gpointer?

@CCall("knifunptr_glibjson4655_json_gobject_serialize")
external fun json_gobject_serialize(gobject: CValuesRef<GObject>?): CPointer<JsonNode>?

@CCall("knifunptr_glibjson4656_json_gobject_deserialize")
external fun json_gobject_deserialize(gtype: GType, node: CValuesRef<JsonNode>?): CPointer<GObject>?

@CCall("knifunptr_glibjson4657_json_gobject_from_data")
external fun json_gobject_from_data(gtype: GType, @CCall.CString data: String?, length: gssize, error: CValuesRef<CPointerVar<GError>>?): CPointer<GObject>?

@CCall("knifunptr_glibjson4658_json_gobject_to_data")
external fun json_gobject_to_data(gobject: CValuesRef<GObject>?, length: CValuesRef<gsizeVar>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson4659_json_construct_gobject")
external fun json_construct_gobject(gtype: GType, @CCall.CString data: String?, length: gsize, error: CValuesRef<CPointerVar<GError>>?): CPointer<GObject>?

@CCall("knifunptr_glibjson4660_json_serialize_gobject")
external fun json_serialize_gobject(gobject: CValuesRef<GObject>?, length: CValuesRef<gsizeVar>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson4661_glib_autoptr_cleanup_JsonSerializable")
external fun glib_autoptr_cleanup_JsonSerializable(_ptr: CValuesRef<CPointerVar<JsonSerializable>>?): Unit

@CCall("knifunptr_glibjson4662_glib_listautoptr_cleanup_JsonSerializable")
external fun glib_listautoptr_cleanup_JsonSerializable(_l: CValuesRef<CPointerVar<GList>>?): Unit

@CCall("knifunptr_glibjson4663_glib_slistautoptr_cleanup_JsonSerializable")
external fun glib_slistautoptr_cleanup_JsonSerializable(_l: CValuesRef<CPointerVar<GSList>>?): Unit

@CCall("knifunptr_glibjson4664_json_gvariant_serialize")
external fun json_gvariant_serialize(variant: CValuesRef<GVariant>?): CPointer<JsonNode>?

@CCall("knifunptr_glibjson4665_json_gvariant_serialize_data")
external fun json_gvariant_serialize_data(variant: CValuesRef<GVariant>?, length: CValuesRef<gsizeVar>?): CPointer<gcharVar>?

@CCall("knifunptr_glibjson4666_json_gvariant_deserialize")
external fun json_gvariant_deserialize(json_node: CValuesRef<JsonNode>?, @CCall.CString signature: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GVariant>?

@CCall("knifunptr_glibjson4667_json_gvariant_deserialize_data")
external fun json_gvariant_deserialize_data(@CCall.CString json: String?, length: gssize, @CCall.CString signature: String?, error: CValuesRef<CPointerVar<GError>>?): CPointer<GVariant>?

var g_mem_gc_friendly: gboolean
    get() = kniBridge0()
    set(value) { kniBridge1(value) }

var glib_mem_profiler_table: CPointer<GMemVTable>?
    get() = interpretCPointer<GMemVTable>(kniBridge2())
    set(value) { kniBridge3(value.rawValue) }

val g_timeout_funcs: GSourceFuncs
    get() = interpretPointed<GSourceFuncs>(kniBridge4())

val g_child_watch_funcs: GSourceFuncs
    get() = interpretPointed<GSourceFuncs>(kniBridge5())

val g_idle_funcs: GSourceFuncs
    get() = interpretPointed<GSourceFuncs>(kniBridge6())

val g_unix_signal_funcs: GSourceFuncs
    get() = interpretPointed<GSourceFuncs>(kniBridge7())

val g_unix_fd_source_funcs: GSourceFuncs
    get() = interpretPointed<GSourceFuncs>(kniBridge8())

val g_utf8_skip: CPointer<gcharVar>?
    get() = interpretCPointer<gcharVar>(kniBridge9())

val g_io_watch_funcs: GSourceFuncs
    get() = interpretPointed<GSourceFuncs>(kniBridge10())

val g_ascii_table: CPointer<guint16Var>?
    get() = interpretCPointer<guint16Var>(kniBridge11())

val g_test_config_vars: CPointer<GTestConfig>?
    get() = interpretCPointer<GTestConfig>(kniBridge12())

val glib_major_version: guint
    get() = kniBridge13()

val glib_minor_version: guint
    get() = kniBridge14()

val glib_micro_version: guint
    get() = kniBridge15()

val glib_interface_age: guint
    get() = kniBridge16()

val glib_binary_age: guint
    get() = kniBridge17()

val g_thread_functions_for_glib_use: GThreadFunctions
    get() = interpretPointed<GThreadFunctions>(kniBridge18())

var g_thread_use_default_impl: gboolean
    get() = kniBridge19()
    set(value) { kniBridge20(value) }

var g_thread_gettime: CPointer<CFunction<() -> guint64>>?
    get() = interpretCPointer<CFunction<() -> guint64>>(kniBridge21())
    set(value) { kniBridge22(value.rawValue) }

var g_threads_got_initialized: gboolean
    get() = kniBridge23()
    set(value) { kniBridge24(value) }

var g_param_spec_types: CPointer<GTypeVar>?
    get() = interpretCPointer<GTypeVar>(kniBridge25())
    set(value) { kniBridge26(value.rawValue) }

val G_GNUC_FUNCTION: String get() = ""

val G_GNUC_PRETTY_FUNCTION: String get() = ""

const val G_ANALYZER_ANALYZING: Int = 0

val G_STRLOC: String get() = "\u002Ftmp\u002Ftmp14611283967257503331.c:95"

const val FALSE: Int = 0

const val TRUE: Int = 1

val G_MINFLOAT: Float get() = bitsToFloat(8388608) /* == 1.17549435E-38 */

val G_MAXFLOAT: Float get() = bitsToFloat(2139095039) /* == 3.4028235E38 */

val G_MINDOUBLE: Double get() = bitsToDouble(4503599627370496) /* == 2.2250738585072014E-308 */

val G_MAXDOUBLE: Double get() = bitsToDouble(9218868437227405311) /* == 1.7976931348623157E308 */

const val G_MINSHORT: Int = -32768

const val G_MAXSHORT: Int = 32767

const val G_MAXUSHORT: Int = 65535

const val G_MININT: Int = -2147483648

const val G_MAXINT: Int = 2147483647

const val G_MAXUINT: UInt = 4294967295u

const val G_MINLONG: Long = -9223372036854775807 - 1

const val G_MAXLONG: Long = 9223372036854775807

const val G_MAXULONG: ULong = 18446744073709551615u

val G_GINT16_MODIFIER: String get() = "h"

val G_GINT16_FORMAT: String get() = "hi"

val G_GUINT16_FORMAT: String get() = "hu"

val G_GINT32_MODIFIER: String get() = ""

val G_GINT32_FORMAT: String get() = "i"

val G_GUINT32_FORMAT: String get() = "u"

const val G_HAVE_GINT64: Int = 1

val G_GINT64_MODIFIER: String get() = "l"

val G_GINT64_FORMAT: String get() = "li"

val G_GUINT64_FORMAT: String get() = "lu"

const val GLIB_SIZEOF_VOID_P: Int = 8

const val GLIB_SIZEOF_LONG: Int = 8

const val GLIB_SIZEOF_SIZE_T: Int = 8

const val GLIB_SIZEOF_SSIZE_T: Int = 8

val G_GSIZE_MODIFIER: String get() = "l"

val G_GSSIZE_MODIFIER: String get() = "l"

val G_GSIZE_FORMAT: String get() = "lu"

val G_GSSIZE_FORMAT: String get() = "li"

const val G_MAXSIZE: ULong = 18446744073709551615u

const val G_MINSSIZE: Long = -9223372036854775807 - 1

const val G_MAXSSIZE: Long = 9223372036854775807

const val G_MINOFFSET: gint64 = -9223372036854775807 - 1

const val G_MAXOFFSET: Long = 9223372036854775807

val G_GOFFSET_MODIFIER: String get() = "l"

val G_GOFFSET_FORMAT: String get() = "li"

val G_POLLFD_FORMAT: String get() = "\u0025d"

val G_GINTPTR_MODIFIER: String get() = "l"

val G_GINTPTR_FORMAT: String get() = "li"

val G_GUINTPTR_FORMAT: String get() = "lu"

const val GLIB_MAJOR_VERSION: Int = 2

const val GLIB_MINOR_VERSION: Int = 56

const val GLIB_MICRO_VERSION: Int = 4

const val G_VA_COPY_AS_ARRAY: Int = 1

const val G_HAVE_ISO_VARARGS: Int = 1

const val G_HAVE_GNUC_VARARGS: Int = 1

const val G_HAVE_GROWING_STACK: Int = 0

const val G_HAVE_GNUC_VISIBILITY: Int = 1

const val G_BYTE_ORDER: Int = 1234

val G_MODULE_SUFFIX: String get() = "so"

val G_PID_FORMAT: String get() = "i"

const val GLIB_SYSDEF_AF_UNIX: Int = 1

const val GLIB_SYSDEF_AF_INET: Int = 2

const val GLIB_SYSDEF_AF_INET6: Int = 10

const val GLIB_SYSDEF_MSG_OOB: Int = 1

const val GLIB_SYSDEF_MSG_PEEK: Int = 2

const val GLIB_SYSDEF_MSG_DONTROUTE: Int = 4

const val G_DIR_SEPARATOR: Int = 47

val G_DIR_SEPARATOR_S: String get() = "\u002F"

const val G_SEARCHPATH_SEPARATOR: Int = 58

val G_SEARCHPATH_SEPARATOR_S: String get() = ":"

const val GLIB_VERSION_2_26: Int = 137728

const val GLIB_VERSION_2_28: Int = 138240

const val GLIB_VERSION_2_30: Int = 138752

const val GLIB_VERSION_2_32: Int = 139264

const val GLIB_VERSION_2_34: Int = 139776

const val GLIB_VERSION_2_36: Int = 140288

const val GLIB_VERSION_2_38: Int = 140800

const val GLIB_VERSION_2_40: Int = 141312

const val GLIB_VERSION_2_42: Int = 141824

const val GLIB_VERSION_2_44: Int = 142336

const val GLIB_VERSION_2_46: Int = 142848

const val GLIB_VERSION_2_48: Int = 143360

const val GLIB_VERSION_2_50: Int = 143872

const val GLIB_VERSION_2_52: Int = 144384

const val GLIB_VERSION_2_54: Int = 144896

const val GLIB_VERSION_2_56: Int = 145408

const val GLIB_VERSION_CUR_STABLE: Int = 145408

const val GLIB_VERSION_PREV_STABLE: Int = 144896

const val GLIB_VERSION_MIN_REQUIRED: Int = 145408

const val GLIB_VERSION_MAX_ALLOWED: Int = 145408

const val G_MININT8: gint8 = -128

const val G_MAXINT8: gint8 = 127

const val G_MAXUINT8: guint8 = 255u

const val G_MININT16: gint16 = -32768

const val G_MAXINT16: gint16 = 32767

const val G_MAXUINT16: guint16 = 65535u

const val G_MININT32: gint32 = -2147483648

const val G_MAXINT32: gint32 = 2147483647

const val G_MAXUINT32: guint32 = 4294967295u

const val G_MININT64: gint64 = -9223372036854775807 - 1

const val G_MAXINT64: Long = 9223372036854775807

const val G_MAXUINT64: ULong = 18446744073709551615u

val G_E: Double get() = bitsToDouble(4613303445314885481) /* == 2.718281828459045 */

val G_LN2: Double get() = bitsToDouble(4604418534313441775) /* == 0.6931471805599453 */

val G_LN10: Double get() = bitsToDouble(4612367379483415830) /* == 2.302585092994046 */

val G_PI: Double get() = bitsToDouble(4614256656552045848) /* == 3.141592653589793 */

val G_PI_2: Double get() = bitsToDouble(4609753056924675352) /* == 1.5707963267948966 */

val G_PI_4: Double get() = bitsToDouble(4605249457297304856) /* == 0.7853981633974483 */

val G_SQRT2: Double get() = bitsToDouble(4609047870845172685) /* == 1.4142135623730951 */

const val G_LITTLE_ENDIAN: Int = 1234

const val G_BIG_ENDIAN: Int = 4321

const val G_PDP_ENDIAN: Int = 3412

const val G_IEEE754_FLOAT_BIAS: Int = 127

const val G_IEEE754_DOUBLE_BIAS: Int = 1023

val G_LOG_2_BASE_10: Double get() = bitsToDouble(4599094494223104511) /* == 0.3010299956639812 */

const val G_DATALIST_FLAGS_MASK: Int = 3

const val G_DATE_BAD_JULIAN: UInt = 0u

const val G_DATE_BAD_DAY: UInt = 0u

const val G_DATE_BAD_YEAR: UInt = 0u

const val G_TIME_SPAN_DAY: Long = 86400000000

const val G_TIME_SPAN_HOUR: Long = 3600000000

const val G_TIME_SPAN_MINUTE: Long = 60000000

const val G_TIME_SPAN_SECOND: Long = 1000000

const val G_TIME_SPAN_MILLISECOND: Long = 1000

const val G_MEM_ALIGN: Int = 8

const val G_HOOK_FLAG_USER_SHIFT: Int = 4

const val G_PRIORITY_HIGH: Int = -100

const val G_PRIORITY_DEFAULT: Int = 0

const val G_PRIORITY_HIGH_IDLE: Int = 100

const val G_PRIORITY_DEFAULT_IDLE: Int = 200

const val G_PRIORITY_LOW: Int = 300

const val G_SOURCE_REMOVE: Int = 0

const val G_SOURCE_CONTINUE: Int = 1

const val G_UNICODE_COMBINING_MARK: Int = 10

const val G_UNICHAR_MAX_DECOMPOSITION_LENGTH: Int = 18

val G_KEY_FILE_DESKTOP_GROUP: String get() = "Desktop Entry"

val G_KEY_FILE_DESKTOP_ACTION_GROUP_PREFIX: String get() = "Desktop Action"

val G_KEY_FILE_DESKTOP_KEY_TYPE: String get() = "Type"

val G_KEY_FILE_DESKTOP_KEY_VERSION: String get() = "Version"

val G_KEY_FILE_DESKTOP_KEY_NAME: String get() = "Name"

val G_KEY_FILE_DESKTOP_KEY_GENERIC_NAME: String get() = "GenericName"

val G_KEY_FILE_DESKTOP_KEY_NO_DISPLAY: String get() = "NoDisplay"

val G_KEY_FILE_DESKTOP_KEY_COMMENT: String get() = "Comment"

val G_KEY_FILE_DESKTOP_KEY_ICON: String get() = "Icon"

val G_KEY_FILE_DESKTOP_KEY_HIDDEN: String get() = "Hidden"

val G_KEY_FILE_DESKTOP_KEY_ONLY_SHOW_IN: String get() = "OnlyShowIn"

val G_KEY_FILE_DESKTOP_KEY_NOT_SHOW_IN: String get() = "NotShowIn"

val G_KEY_FILE_DESKTOP_KEY_TRY_EXEC: String get() = "TryExec"

val G_KEY_FILE_DESKTOP_KEY_EXEC: String get() = "Exec"

val G_KEY_FILE_DESKTOP_KEY_PATH: String get() = "Path"

val G_KEY_FILE_DESKTOP_KEY_TERMINAL: String get() = "Terminal"

val G_KEY_FILE_DESKTOP_KEY_MIME_TYPE: String get() = "MimeType"

val G_KEY_FILE_DESKTOP_KEY_CATEGORIES: String get() = "Categories"

val G_KEY_FILE_DESKTOP_KEY_STARTUP_NOTIFY: String get() = "StartupNotify"

val G_KEY_FILE_DESKTOP_KEY_STARTUP_WM_CLASS: String get() = "StartupWMClass"

val G_KEY_FILE_DESKTOP_KEY_URL: String get() = "URL"

val G_KEY_FILE_DESKTOP_KEY_DBUS_ACTIVATABLE: String get() = "DBusActivatable"

val G_KEY_FILE_DESKTOP_KEY_ACTIONS: String get() = "Actions"

val G_KEY_FILE_DESKTOP_KEY_GETTEXT_DOMAIN: String get() = "X\u002DGNOME\u002DGettext\u002DDomain"

val G_KEY_FILE_DESKTOP_KEY_FULLNAME: String get() = "X\u002DGNOME\u002DFullName"

val G_KEY_FILE_DESKTOP_KEY_KEYWORDS: String get() = "Keywords"

val G_KEY_FILE_DESKTOP_TYPE_APPLICATION: String get() = "Application"

val G_KEY_FILE_DESKTOP_TYPE_LINK: String get() = "Link"

val G_KEY_FILE_DESKTOP_TYPE_DIRECTORY: String get() = "Directory"

const val G_LOG_LEVEL_USER_SHIFT: Int = 8

const val G_LOG_FATAL_MASK: Int = 5

val G_OPTION_REMAINING: String get() = ""

val G_CSET_A_2_Z: String get() = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"

val G_CSET_a_2_z: String get() = "abcdefghijklmnopqrstuvwxyz"

val G_CSET_DIGITS: String get() = "0123456789"

val G_CSET_LATINC: String get() = "\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD"

val G_CSET_LATINS: String get() = "\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD"

val G_STR_DELIMITERS: String get() = "_\u002D\u007C\u003E \u003C."

const val G_ASCII_DTOSTR_BUF_SIZE: Int = 39

const val G_USEC_PER_SEC: Int = 1000000

val G_URI_RESERVED_CHARS_GENERIC_DELIMITERS: String get() = ":\u002F\u003F#[]@"

val G_URI_RESERVED_CHARS_SUBCOMPONENT_DELIMITERS: String get() = "\u0021\$\u0026\u0027()*\u002B,;="

val G_URI_RESERVED_CHARS_ALLOWED_IN_PATH_ELEMENT: String get() = "\u0021\$\u0026\u0027()*\u002B,;=:@"

val G_URI_RESERVED_CHARS_ALLOWED_IN_PATH: String get() = "\u0021\$\u0026\u0027()*\u002B,;=:@\u002F"

val G_URI_RESERVED_CHARS_ALLOWED_IN_USERINFO: String get() = "\u0021\$\u0026\u0027()*\u002B,;=:"

const val G_ALLOC_ONLY: Int = 1

const val G_ALLOC_AND_FREE: Int = 2

const val G_ALLOCATOR_LIST: Int = 1

const val G_ALLOCATOR_SLIST: Int = 2

const val G_ALLOCATOR_NODE: Int = 3

const val G_TYPE_FUNDAMENTAL_MAX: Int = 1020

const val G_TYPE_INVALID: GType = 0u

const val G_TYPE_NONE: GType = 4u

const val G_TYPE_INTERFACE: GType = 8u

const val G_TYPE_CHAR: GType = 12u

const val G_TYPE_UCHAR: GType = 16u

const val G_TYPE_BOOLEAN: GType = 20u

const val G_TYPE_INT: GType = 24u

const val G_TYPE_UINT: GType = 28u

const val G_TYPE_LONG: GType = 32u

const val G_TYPE_ULONG: GType = 36u

const val G_TYPE_INT64: GType = 40u

const val G_TYPE_UINT64: GType = 44u

const val G_TYPE_ENUM: GType = 48u

const val G_TYPE_FLAGS: GType = 52u

const val G_TYPE_FLOAT: GType = 56u

const val G_TYPE_DOUBLE: GType = 60u

const val G_TYPE_STRING: GType = 64u

const val G_TYPE_POINTER: GType = 68u

const val G_TYPE_BOXED: GType = 72u

const val G_TYPE_PARAM: GType = 76u

const val G_TYPE_OBJECT: GType = 80u

const val G_TYPE_VARIANT: GType = 84u

const val G_TYPE_FUNDAMENTAL_SHIFT: Int = 2

const val G_TYPE_RESERVED_GLIB_FIRST: Int = 22

const val G_TYPE_RESERVED_GLIB_LAST: Int = 31

const val G_TYPE_RESERVED_BSE_FIRST: Int = 32

const val G_TYPE_RESERVED_BSE_LAST: Int = 48

const val G_TYPE_RESERVED_USER_FIRST: Int = 49

const val G_TYPE_FLAG_RESERVED_ID_BIT: GType = 1u

const val G_VALUE_NOCOPY_CONTENTS: Int = 134217728

const val G_PARAM_STATIC_STRINGS: Int = 224

const val G_PARAM_MASK: Int = 255

const val G_PARAM_USER_SHIFT: Int = 8

const val G_SIGNAL_FLAGS_MASK: Int = 511

const val G_SIGNAL_MATCH_MASK: Int = 63

const val G_SIGNAL_TYPE_STATIC_SCOPE: GType = 1u

const val JSON_MAJOR_VERSION: Int = 1

const val JSON_MINOR_VERSION: Int = 4

const val JSON_MICRO_VERSION: Int = 2

val JSON_VERSION_S: String get() = "1.4.2"

const val JSON_VERSION_HEX: Int = 17039872

const val JSON_VERSION_1_0: Int = 65536

const val JSON_VERSION_1_2: Int = 66048

const val JSON_VERSION_1_4: Int = 66560

const val JSON_VERSION_CUR_STABLE: Int = 66560

const val JSON_VERSION_PREV_STABLE: Int = 66048

const val JSON_VERSION_MIN_REQUIRED: Int = 66560

const val JSON_VERSION_MAX_ALLOWED: Int = 66560

val G_FILE_ATTRIBUTE_STANDARD_TYPE: String get() = "standard::type"

val G_FILE_ATTRIBUTE_STANDARD_IS_HIDDEN: String get() = "standard::is\u002Dhidden"

val G_FILE_ATTRIBUTE_STANDARD_IS_BACKUP: String get() = "standard::is\u002Dbackup"

val G_FILE_ATTRIBUTE_STANDARD_IS_SYMLINK: String get() = "standard::is\u002Dsymlink"

val G_FILE_ATTRIBUTE_STANDARD_IS_VIRTUAL: String get() = "standard::is\u002Dvirtual"

val G_FILE_ATTRIBUTE_STANDARD_IS_VOLATILE: String get() = "standard::is\u002Dvolatile"

val G_FILE_ATTRIBUTE_STANDARD_NAME: String get() = "standard::name"

val G_FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME: String get() = "standard::display\u002Dname"

val G_FILE_ATTRIBUTE_STANDARD_EDIT_NAME: String get() = "standard::edit\u002Dname"

val G_FILE_ATTRIBUTE_STANDARD_COPY_NAME: String get() = "standard::copy\u002Dname"

val G_FILE_ATTRIBUTE_STANDARD_DESCRIPTION: String get() = "standard::description"

val G_FILE_ATTRIBUTE_STANDARD_ICON: String get() = "standard::icon"

val G_FILE_ATTRIBUTE_STANDARD_SYMBOLIC_ICON: String get() = "standard::symbolic\u002Dicon"

val G_FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE: String get() = "standard::content\u002Dtype"

val G_FILE_ATTRIBUTE_STANDARD_FAST_CONTENT_TYPE: String get() = "standard::fast\u002Dcontent\u002Dtype"

val G_FILE_ATTRIBUTE_STANDARD_SIZE: String get() = "standard::size"

val G_FILE_ATTRIBUTE_STANDARD_ALLOCATED_SIZE: String get() = "standard::allocated\u002Dsize"

val G_FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET: String get() = "standard::symlink\u002Dtarget"

val G_FILE_ATTRIBUTE_STANDARD_TARGET_URI: String get() = "standard::target\u002Duri"

val G_FILE_ATTRIBUTE_STANDARD_SORT_ORDER: String get() = "standard::sort\u002Dorder"

val G_FILE_ATTRIBUTE_ETAG_VALUE: String get() = "etag::value"

val G_FILE_ATTRIBUTE_ID_FILE: String get() = "id::file"

val G_FILE_ATTRIBUTE_ID_FILESYSTEM: String get() = "id::filesystem"

val G_FILE_ATTRIBUTE_ACCESS_CAN_READ: String get() = "access::can\u002Dread"

val G_FILE_ATTRIBUTE_ACCESS_CAN_WRITE: String get() = "access::can\u002Dwrite"

val G_FILE_ATTRIBUTE_ACCESS_CAN_EXECUTE: String get() = "access::can\u002Dexecute"

val G_FILE_ATTRIBUTE_ACCESS_CAN_DELETE: String get() = "access::can\u002Ddelete"

val G_FILE_ATTRIBUTE_ACCESS_CAN_TRASH: String get() = "access::can\u002Dtrash"

val G_FILE_ATTRIBUTE_ACCESS_CAN_RENAME: String get() = "access::can\u002Drename"

val G_FILE_ATTRIBUTE_MOUNTABLE_CAN_MOUNT: String get() = "mountable::can\u002Dmount"

val G_FILE_ATTRIBUTE_MOUNTABLE_CAN_UNMOUNT: String get() = "mountable::can\u002Dunmount"

val G_FILE_ATTRIBUTE_MOUNTABLE_CAN_EJECT: String get() = "mountable::can\u002Deject"

val G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE: String get() = "mountable::unix\u002Ddevice"

val G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE_FILE: String get() = "mountable::unix\u002Ddevice\u002Dfile"

val G_FILE_ATTRIBUTE_MOUNTABLE_HAL_UDI: String get() = "mountable::hal\u002Dudi"

val G_FILE_ATTRIBUTE_MOUNTABLE_CAN_START: String get() = "mountable::can\u002Dstart"

val G_FILE_ATTRIBUTE_MOUNTABLE_CAN_START_DEGRADED: String get() = "mountable::can\u002Dstart\u002Ddegraded"

val G_FILE_ATTRIBUTE_MOUNTABLE_CAN_STOP: String get() = "mountable::can\u002Dstop"

val G_FILE_ATTRIBUTE_MOUNTABLE_START_STOP_TYPE: String get() = "mountable::start\u002Dstop\u002Dtype"

val G_FILE_ATTRIBUTE_MOUNTABLE_CAN_POLL: String get() = "mountable::can\u002Dpoll"

val G_FILE_ATTRIBUTE_MOUNTABLE_IS_MEDIA_CHECK_AUTOMATIC: String get() = "mountable::is\u002Dmedia\u002Dcheck\u002Dautomatic"

val G_FILE_ATTRIBUTE_TIME_MODIFIED: String get() = "time::modified"

val G_FILE_ATTRIBUTE_TIME_MODIFIED_USEC: String get() = "time::modified\u002Dusec"

val G_FILE_ATTRIBUTE_TIME_ACCESS: String get() = "time::access"

val G_FILE_ATTRIBUTE_TIME_ACCESS_USEC: String get() = "time::access\u002Dusec"

val G_FILE_ATTRIBUTE_TIME_CHANGED: String get() = "time::changed"

val G_FILE_ATTRIBUTE_TIME_CHANGED_USEC: String get() = "time::changed\u002Dusec"

val G_FILE_ATTRIBUTE_TIME_CREATED: String get() = "time::created"

val G_FILE_ATTRIBUTE_TIME_CREATED_USEC: String get() = "time::created\u002Dusec"

val G_FILE_ATTRIBUTE_UNIX_DEVICE: String get() = "unix::device"

val G_FILE_ATTRIBUTE_UNIX_INODE: String get() = "unix::inode"

val G_FILE_ATTRIBUTE_UNIX_MODE: String get() = "unix::mode"

val G_FILE_ATTRIBUTE_UNIX_NLINK: String get() = "unix::nlink"

val G_FILE_ATTRIBUTE_UNIX_UID: String get() = "unix::uid"

val G_FILE_ATTRIBUTE_UNIX_GID: String get() = "unix::gid"

val G_FILE_ATTRIBUTE_UNIX_RDEV: String get() = "unix::rdev"

val G_FILE_ATTRIBUTE_UNIX_BLOCK_SIZE: String get() = "unix::block\u002Dsize"

val G_FILE_ATTRIBUTE_UNIX_BLOCKS: String get() = "unix::blocks"

val G_FILE_ATTRIBUTE_UNIX_IS_MOUNTPOINT: String get() = "unix::is\u002Dmountpoint"

val G_FILE_ATTRIBUTE_DOS_IS_ARCHIVE: String get() = "dos::is\u002Darchive"

val G_FILE_ATTRIBUTE_DOS_IS_SYSTEM: String get() = "dos::is\u002Dsystem"

val G_FILE_ATTRIBUTE_OWNER_USER: String get() = "owner::user"

val G_FILE_ATTRIBUTE_OWNER_USER_REAL: String get() = "owner::user\u002Dreal"

val G_FILE_ATTRIBUTE_OWNER_GROUP: String get() = "owner::group"

val G_FILE_ATTRIBUTE_THUMBNAIL_PATH: String get() = "thumbnail::path"

val G_FILE_ATTRIBUTE_THUMBNAILING_FAILED: String get() = "thumbnail::failed"

val G_FILE_ATTRIBUTE_THUMBNAIL_IS_VALID: String get() = "thumbnail::is\u002Dvalid"

val G_FILE_ATTRIBUTE_PREVIEW_ICON: String get() = "preview::icon"

val G_FILE_ATTRIBUTE_FILESYSTEM_SIZE: String get() = "filesystem::size"

val G_FILE_ATTRIBUTE_FILESYSTEM_FREE: String get() = "filesystem::free"

val G_FILE_ATTRIBUTE_FILESYSTEM_USED: String get() = "filesystem::used"

val G_FILE_ATTRIBUTE_FILESYSTEM_TYPE: String get() = "filesystem::type"

val G_FILE_ATTRIBUTE_FILESYSTEM_READONLY: String get() = "filesystem::readonly"

val G_FILE_ATTRIBUTE_FILESYSTEM_USE_PREVIEW: String get() = "filesystem::use\u002Dpreview"

val G_FILE_ATTRIBUTE_FILESYSTEM_REMOTE: String get() = "filesystem::remote"

val G_FILE_ATTRIBUTE_GVFS_BACKEND: String get() = "gvfs::backend"

val G_FILE_ATTRIBUTE_SELINUX_CONTEXT: String get() = "selinux::context"

val G_FILE_ATTRIBUTE_TRASH_ITEM_COUNT: String get() = "trash::item\u002Dcount"

val G_FILE_ATTRIBUTE_TRASH_ORIG_PATH: String get() = "trash::orig\u002Dpath"

val G_FILE_ATTRIBUTE_TRASH_DELETION_DATE: String get() = "trash::deletion\u002Ddate"

val G_FILE_ATTRIBUTE_RECENT_MODIFIED: String get() = "recent::modified"

val G_VOLUME_MONITOR_EXTENSION_POINT_NAME: String get() = "gio\u002Dvolume\u002Dmonitor"

val G_NATIVE_VOLUME_MONITOR_EXTENSION_POINT_NAME: String get() = "gio\u002Dnative\u002Dvolume\u002Dmonitor"

val G_NETWORK_MONITOR_EXTENSION_POINT_NAME: String get() = "gio\u002Dnetwork\u002Dmonitor"

val G_PROXY_EXTENSION_POINT_NAME: String get() = "gio\u002Dproxy"

val G_PROXY_RESOLVER_EXTENSION_POINT_NAME: String get() = "gio\u002Dproxy\u002Dresolver"

val G_TLS_BACKEND_EXTENSION_POINT_NAME: String get() = "gio\u002Dtls\u002Dbackend"

val G_TLS_DATABASE_PURPOSE_AUTHENTICATE_SERVER: String get() = "1.3.6.1.5.5.7.3.1"

val G_TLS_DATABASE_PURPOSE_AUTHENTICATE_CLIENT: String get() = "1.3.6.1.5.5.7.3.2"

val G_VFS_EXTENSION_POINT_NAME: String get() = "gio\u002Dvfs"

val G_VOLUME_IDENTIFIER_KIND_HAL_UDI: String get() = "hal\u002Dudi"

val G_VOLUME_IDENTIFIER_KIND_UNIX_DEVICE: String get() = "unix\u002Ddevice"

val G_VOLUME_IDENTIFIER_KIND_LABEL: String get() = "label"

val G_VOLUME_IDENTIFIER_KIND_UUID: String get() = "uuid"

val G_VOLUME_IDENTIFIER_KIND_NFS_MOUNT: String get() = "nfs\u002Dmount"

val G_VOLUME_IDENTIFIER_KIND_CLASS: String get() = "class"

val G_MENU_ATTRIBUTE_ACTION: String get() = "action"

val G_MENU_ATTRIBUTE_ACTION_NAMESPACE: String get() = "action\u002Dnamespace"

val G_MENU_ATTRIBUTE_TARGET: String get() = "target"

val G_MENU_ATTRIBUTE_LABEL: String get() = "label"

val G_MENU_ATTRIBUTE_ICON: String get() = "icon"

val G_MENU_LINK_SUBMENU: String get() = "submenu"

val G_MENU_LINK_SECTION: String get() = "section"

val G_STRFUNC: CPointer<ByteVar>?
    get() = interpretCPointer<ByteVar>(kniBridge27())

val G_THREAD_ERROR: GQuark
    get() = kniBridge28()

val G_BOOKMARK_FILE_ERROR: GQuark
    get() = kniBridge29()

val G_CONVERT_ERROR: GQuark
    get() = kniBridge30()

val g_date_weekday: CPointer<CFunction<(CPointer<GDate>?) -> GDateWeekday>>?
    get() = interpretCPointer<CFunction<(CPointer<GDate>?) -> GDateWeekday>>(kniBridge31())

val g_date_month: CPointer<CFunction<(CPointer<GDate>?) -> GDateMonth>>?
    get() = interpretCPointer<CFunction<(CPointer<GDate>?) -> GDateMonth>>(kniBridge32())

val g_date_year: CPointer<CFunction<(CPointer<GDate>?) -> GDateYear>>?
    get() = interpretCPointer<CFunction<(CPointer<GDate>?) -> GDateYear>>(kniBridge33())

val g_date_day: CPointer<CFunction<(CPointer<GDate>?) -> GDateDay>>?
    get() = interpretCPointer<CFunction<(CPointer<GDate>?) -> GDateDay>>(kniBridge34())

val g_date_julian: CPointer<CFunction<(CPointer<GDate>?) -> guint32>>?
    get() = interpretCPointer<CFunction<(CPointer<GDate>?) -> guint32>>(kniBridge35())

val g_date_day_of_year: CPointer<CFunction<(CPointer<GDate>?) -> guint>>?
    get() = interpretCPointer<CFunction<(CPointer<GDate>?) -> guint>>(kniBridge36())

val g_date_monday_week_of_year: CPointer<CFunction<(CPointer<GDate>?) -> guint>>?
    get() = interpretCPointer<CFunction<(CPointer<GDate>?) -> guint>>(kniBridge37())

val g_date_sunday_week_of_year: CPointer<CFunction<(CPointer<GDate>?) -> guint>>?
    get() = interpretCPointer<CFunction<(CPointer<GDate>?) -> guint>>(kniBridge38())

val g_date_days_in_month: CPointer<CFunction<(GDateMonth, GDateYear) -> guint8>>?
    get() = interpretCPointer<CFunction<(GDateMonth, GDateYear) -> guint8>>(kniBridge39())

val g_date_monday_weeks_in_year: CPointer<CFunction<(GDateYear) -> guint8>>?
    get() = interpretCPointer<CFunction<(GDateYear) -> guint8>>(kniBridge40())

val g_date_sunday_weeks_in_year: CPointer<CFunction<(GDateYear) -> guint8>>?
    get() = interpretCPointer<CFunction<(GDateYear) -> guint8>>(kniBridge41())

val G_FILE_ERROR: GQuark
    get() = kniBridge42()

val g_dirname: CPointer<CFunction<(CPointer<gcharVar>?) -> CPointer<gcharVar>?>>?
    get() = interpretCPointer<CFunction<(CPointer<gcharVar>?) -> CPointer<gcharVar>?>>(kniBridge43())

val g_list_free1: CPointer<CFunction<(CPointer<GList>?) -> Unit>>?
    get() = interpretCPointer<CFunction<(CPointer<GList>?) -> Unit>>(kniBridge44())

val g_slist_free1: CPointer<CFunction<(CPointer<GSList>?) -> Unit>>?
    get() = interpretCPointer<CFunction<(CPointer<GSList>?) -> Unit>>(kniBridge45())

val g_string_sprintf: COpaquePointer?
    get() = interpretCPointer<COpaque>(kniBridge46())

val g_string_sprintfa: COpaquePointer?
    get() = interpretCPointer<COpaque>(kniBridge47())

val G_IO_CHANNEL_ERROR: GQuark
    get() = kniBridge48()

val G_KEY_FILE_ERROR: GQuark
    get() = kniBridge49()

val G_MARKUP_ERROR: GQuark
    get() = kniBridge50()

val G_VARIANT_TYPE_BOOLEAN: CPointer<GVariantType>?
    get() = interpretCPointer<GVariantType>(kniBridge51())

val G_VARIANT_TYPE_BYTE: CPointer<GVariantType>?
    get() = interpretCPointer<GVariantType>(kniBridge52())

val G_VARIANT_TYPE_INT16: CPointer<GVariantType>?
    get() = interpretCPointer<GVariantType>(kniBridge53())

val G_VARIANT_TYPE_UINT16: CPointer<GVariantType>?
    get() = interpretCPointer<GVariantType>(kniBridge54())

val G_VARIANT_TYPE_INT32: CPointer<GVariantType>?
    get() = interpretCPointer<GVariantType>(kniBridge55())

val G_VARIANT_TYPE_UINT32: CPointer<GVariantType>?
    get() = interpretCPointer<GVariantType>(kniBridge56())

val G_VARIANT_TYPE_INT64: CPointer<GVariantType>?
    get() = interpretCPointer<GVariantType>(kniBridge57())

val G_VARIANT_TYPE_UINT64: CPointer<GVariantType>?
    get() = interpretCPointer<GVariantType>(kniBridge58())

val G_VARIANT_TYPE_DOUBLE: CPointer<GVariantType>?
    get() = interpretCPointer<GVariantType>(kniBridge59())

val G_VARIANT_TYPE_STRING: CPointer<GVariantType>?
    get() = interpretCPointer<GVariantType>(kniBridge60())

val G_VARIANT_TYPE_OBJECT_PATH: CPointer<GVariantType>?
    get() = interpretCPointer<GVariantType>(kniBridge61())

val G_VARIANT_TYPE_SIGNATURE: CPointer<GVariantType>?
    get() = interpretCPointer<GVariantType>(kniBridge62())

val G_VARIANT_TYPE_VARIANT: CPointer<GVariantType>?
    get() = interpretCPointer<GVariantType>(kniBridge63())

val G_VARIANT_TYPE_HANDLE: CPointer<GVariantType>?
    get() = interpretCPointer<GVariantType>(kniBridge64())

val G_VARIANT_TYPE_UNIT: CPointer<GVariantType>?
    get() = interpretCPointer<GVariantType>(kniBridge65())

val G_VARIANT_TYPE_ANY: CPointer<GVariantType>?
    get() = interpretCPointer<GVariantType>(kniBridge66())

val G_VARIANT_TYPE_BASIC: CPointer<GVariantType>?
    get() = interpretCPointer<GVariantType>(kniBridge67())

val G_VARIANT_TYPE_MAYBE: CPointer<GVariantType>?
    get() = interpretCPointer<GVariantType>(kniBridge68())

val G_VARIANT_TYPE_ARRAY: CPointer<GVariantType>?
    get() = interpretCPointer<GVariantType>(kniBridge69())

val G_VARIANT_TYPE_TUPLE: CPointer<GVariantType>?
    get() = interpretCPointer<GVariantType>(kniBridge70())

val G_VARIANT_TYPE_DICT_ENTRY: CPointer<GVariantType>?
    get() = interpretCPointer<GVariantType>(kniBridge71())

val G_VARIANT_TYPE_DICTIONARY: CPointer<GVariantType>?
    get() = interpretCPointer<GVariantType>(kniBridge72())

val G_VARIANT_TYPE_STRING_ARRAY: CPointer<GVariantType>?
    get() = interpretCPointer<GVariantType>(kniBridge73())

val G_VARIANT_TYPE_OBJECT_PATH_ARRAY: CPointer<GVariantType>?
    get() = interpretCPointer<GVariantType>(kniBridge74())

val G_VARIANT_TYPE_BYTESTRING: CPointer<GVariantType>?
    get() = interpretCPointer<GVariantType>(kniBridge75())

val G_VARIANT_TYPE_BYTESTRING_ARRAY: CPointer<GVariantType>?
    get() = interpretCPointer<GVariantType>(kniBridge76())

val G_VARIANT_TYPE_VARDICT: CPointer<GVariantType>?
    get() = interpretCPointer<GVariantType>(kniBridge77())

val G_VARIANT_PARSE_ERROR: GQuark
    get() = kniBridge78()

val G_LOG_DOMAIN: CPointer<gcharVar>?
    get() = interpretCPointer<gcharVar>(kniBridge79())

val G_OPTION_ERROR: GQuark
    get() = kniBridge80()

val G_REGEX_ERROR: GQuark
    get() = kniBridge81()

val G_SHELL_ERROR: GQuark
    get() = kniBridge82()

val G_SPAWN_ERROR: GQuark
    get() = kniBridge83()

val G_SPAWN_EXIT_ERROR: GQuark
    get() = kniBridge84()

val G_NUMBER_PARSER_ERROR: GQuark
    get() = kniBridge85()

val g_static_mutex_get_mutex: CPointer<CFunction<(CPointer<GStaticMutex>?) -> CPointer<GMutex>?>>?
    get() = interpretCPointer<CFunction<(CPointer<GStaticMutex>?) -> CPointer<GMutex>?>>(kniBridge86())

val g_cclosure_marshal_BOOL__FLAGS: CPointer<CFunction<(CPointer<GClosure>?, CPointer<GValue>?, guint, CPointer<GValue>?, gpointer?, gpointer?) -> Unit>>?
    get() = interpretCPointer<CFunction<(CPointer<GClosure>?, CPointer<GValue>?, guint, CPointer<GValue>?, gpointer?, gpointer?) -> Unit>>(kniBridge87())

val g_cclosure_marshal_BOOL__BOXED_BOXED: CPointer<CFunction<(CPointer<GClosure>?, CPointer<GValue>?, guint, CPointer<GValue>?, gpointer?, gpointer?) -> Unit>>?
    get() = interpretCPointer<CFunction<(CPointer<GClosure>?, CPointer<GValue>?, guint, CPointer<GValue>?, gpointer?, gpointer?) -> Unit>>(kniBridge88())

val G_TYPE_DATE: GType
    get() = kniBridge89()

val G_TYPE_STRV: GType
    get() = kniBridge90()

val G_TYPE_GSTRING: GType
    get() = kniBridge91()

val G_TYPE_HASH_TABLE: GType
    get() = kniBridge92()

val G_TYPE_REGEX: GType
    get() = kniBridge93()

val G_TYPE_MATCH_INFO: GType
    get() = kniBridge94()

val G_TYPE_ARRAY: GType
    get() = kniBridge95()

val G_TYPE_BYTE_ARRAY: GType
    get() = kniBridge96()

val G_TYPE_PTR_ARRAY: GType
    get() = kniBridge97()

val G_TYPE_BYTES: GType
    get() = kniBridge98()

val G_TYPE_VARIANT_TYPE: GType
    get() = kniBridge99()

val G_TYPE_ERROR: GType
    get() = kniBridge100()

val G_TYPE_DATE_TIME: GType
    get() = kniBridge101()

val G_TYPE_TIME_ZONE: GType
    get() = kniBridge102()

val G_TYPE_IO_CHANNEL: GType
    get() = kniBridge103()

val G_TYPE_IO_CONDITION: GType
    get() = kniBridge104()

val G_TYPE_VARIANT_BUILDER: GType
    get() = kniBridge105()

val G_TYPE_VARIANT_DICT: GType
    get() = kniBridge106()

val G_TYPE_MAIN_LOOP: GType
    get() = kniBridge107()

val G_TYPE_MAIN_CONTEXT: GType
    get() = kniBridge108()

val G_TYPE_SOURCE: GType
    get() = kniBridge109()

val G_TYPE_POLLFD: GType
    get() = kniBridge110()

val G_TYPE_MARKUP_PARSE_CONTEXT: GType
    get() = kniBridge111()

val G_TYPE_KEY_FILE: GType
    get() = kniBridge112()

val G_TYPE_MAPPED_FILE: GType
    get() = kniBridge113()

val G_TYPE_THREAD: GType
    get() = kniBridge114()

val G_TYPE_CHECKSUM: GType
    get() = kniBridge115()

val G_TYPE_OPTION_GROUP: GType
    get() = kniBridge116()

val G_TYPE_CLOSURE: GType
    get() = kniBridge117()

val G_TYPE_VALUE: GType
    get() = kniBridge118()

val G_TYPE_INITIALLY_UNOWNED: GType
    get() = kniBridge119()

val G_TYPE_BINDING_FLAGS: GType
    get() = kniBridge120()

val G_TYPE_BINDING: GType
    get() = kniBridge121()

val G_TYPE_PARAM_CHAR: GType
    get() = kniBridge122()

val G_TYPE_PARAM_UCHAR: GType
    get() = kniBridge123()

val G_TYPE_PARAM_BOOLEAN: GType
    get() = kniBridge124()

val G_TYPE_PARAM_INT: GType
    get() = kniBridge125()

val G_TYPE_PARAM_UINT: GType
    get() = kniBridge126()

val G_TYPE_PARAM_LONG: GType
    get() = kniBridge127()

val G_TYPE_PARAM_ULONG: GType
    get() = kniBridge128()

val G_TYPE_PARAM_INT64: GType
    get() = kniBridge129()

val G_TYPE_PARAM_UINT64: GType
    get() = kniBridge130()

val G_TYPE_PARAM_UNICHAR: GType
    get() = kniBridge131()

val G_TYPE_PARAM_ENUM: GType
    get() = kniBridge132()

val G_TYPE_PARAM_FLAGS: GType
    get() = kniBridge133()

val G_TYPE_PARAM_FLOAT: GType
    get() = kniBridge134()

val G_TYPE_PARAM_DOUBLE: GType
    get() = kniBridge135()

val G_TYPE_PARAM_STRING: GType
    get() = kniBridge136()

val G_TYPE_PARAM_PARAM: GType
    get() = kniBridge137()

val G_TYPE_PARAM_BOXED: GType
    get() = kniBridge138()

val G_TYPE_PARAM_POINTER: GType
    get() = kniBridge139()

val G_TYPE_PARAM_VALUE_ARRAY: GType
    get() = kniBridge140()

val G_TYPE_PARAM_OBJECT: GType
    get() = kniBridge141()

val G_TYPE_PARAM_OVERRIDE: GType
    get() = kniBridge142()

val G_TYPE_PARAM_GTYPE: GType
    get() = kniBridge143()

val G_TYPE_PARAM_VARIANT: GType
    get() = kniBridge144()

val G_TYPE_TYPE_MODULE: GType
    get() = kniBridge145()

val G_TYPE_TYPE_PLUGIN: GType
    get() = kniBridge146()

val G_TYPE_VALUE_ARRAY: GType
    get() = kniBridge147()

val G_TYPE_GTYPE: GType
    get() = kniBridge148()

val JSON_TYPE_NODE: GType
    get() = kniBridge149()

val JSON_TYPE_OBJECT: GType
    get() = kniBridge150()

val JSON_TYPE_ARRAY: GType
    get() = kniBridge151()

val JSON_TYPE_BUILDER: GType
    get() = kniBridge152()

val G_TYPE_ACTION: GType
    get() = kniBridge153()

val G_TYPE_ACTION_GROUP: GType
    get() = kniBridge154()

val G_TYPE_ACTION_MAP: GType
    get() = kniBridge155()

val G_TYPE_APP_INFO: GType
    get() = kniBridge156()

val G_TYPE_APP_LAUNCH_CONTEXT: GType
    get() = kniBridge157()

val G_TYPE_APP_INFO_MONITOR: GType
    get() = kniBridge158()

val G_TYPE_APPLICATION: GType
    get() = kniBridge159()

val G_TYPE_APPLICATION_COMMAND_LINE: GType
    get() = kniBridge160()

val G_TYPE_INITABLE: GType
    get() = kniBridge161()

val G_TYPE_ASYNC_INITABLE: GType
    get() = kniBridge162()

val G_TYPE_ASYNC_RESULT: GType
    get() = kniBridge163()

val G_TYPE_INPUT_STREAM: GType
    get() = kniBridge164()

val G_TYPE_FILTER_INPUT_STREAM: GType
    get() = kniBridge165()

val G_TYPE_BUFFERED_INPUT_STREAM: GType
    get() = kniBridge166()

val G_TYPE_OUTPUT_STREAM: GType
    get() = kniBridge167()

val G_TYPE_FILTER_OUTPUT_STREAM: GType
    get() = kniBridge168()

val G_TYPE_BUFFERED_OUTPUT_STREAM: GType
    get() = kniBridge169()

val G_TYPE_BYTES_ICON: GType
    get() = kniBridge170()

val G_TYPE_CANCELLABLE: GType
    get() = kniBridge171()

val G_TYPE_CONVERTER: GType
    get() = kniBridge172()

val G_TYPE_CHARSET_CONVERTER: GType
    get() = kniBridge173()

val G_TYPE_CONVERTER_INPUT_STREAM: GType
    get() = kniBridge174()

val G_TYPE_CONVERTER_OUTPUT_STREAM: GType
    get() = kniBridge175()

val G_TYPE_CREDENTIALS: GType
    get() = kniBridge176()

val G_TYPE_DATAGRAM_BASED: GType
    get() = kniBridge177()

val G_TYPE_DATA_INPUT_STREAM: GType
    get() = kniBridge178()

val G_TYPE_DATA_OUTPUT_STREAM: GType
    get() = kniBridge179()

val G_TYPE_DBUS_AUTH_OBSERVER: GType
    get() = kniBridge180()

val G_TYPE_DBUS_CONNECTION: GType
    get() = kniBridge181()

val G_DBUS_ERROR: GQuark
    get() = kniBridge182()

val G_TYPE_DBUS_NODE_INFO: GType
    get() = kniBridge183()

val G_TYPE_DBUS_INTERFACE_INFO: GType
    get() = kniBridge184()

val G_TYPE_DBUS_METHOD_INFO: GType
    get() = kniBridge185()

val G_TYPE_DBUS_SIGNAL_INFO: GType
    get() = kniBridge186()

val G_TYPE_DBUS_PROPERTY_INFO: GType
    get() = kniBridge187()

val G_TYPE_DBUS_ARG_INFO: GType
    get() = kniBridge188()

val G_TYPE_DBUS_ANNOTATION_INFO: GType
    get() = kniBridge189()

val G_TYPE_DBUS_MESSAGE: GType
    get() = kniBridge190()

val G_TYPE_DBUS_METHOD_INVOCATION: GType
    get() = kniBridge191()

val G_TYPE_DBUS_PROXY: GType
    get() = kniBridge192()

val G_TYPE_DBUS_SERVER: GType
    get() = kniBridge193()

val G_TYPE_DRIVE: GType
    get() = kniBridge194()

val G_TYPE_DTLS_CONNECTION: GType
    get() = kniBridge195()

val G_TYPE_DTLS_CLIENT_CONNECTION: GType
    get() = kniBridge196()

val G_TYPE_DTLS_SERVER_CONNECTION: GType
    get() = kniBridge197()

val G_TYPE_ICON: GType
    get() = kniBridge198()

val G_TYPE_EMBLEM: GType
    get() = kniBridge199()

val G_TYPE_EMBLEMED_ICON: GType
    get() = kniBridge200()

val G_TYPE_FILE_ATTRIBUTE_INFO_LIST: GType
    get() = kniBridge201()

val G_TYPE_FILE_ENUMERATOR: GType
    get() = kniBridge202()

val G_TYPE_FILE: GType
    get() = kniBridge203()

val G_TYPE_FILE_ICON: GType
    get() = kniBridge204()

val G_TYPE_FILE_INFO: GType
    get() = kniBridge205()

val G_TYPE_FILE_ATTRIBUTE_MATCHER: GType
    get() = kniBridge206()

val G_TYPE_FILE_INPUT_STREAM: GType
    get() = kniBridge207()

val G_IO_ERROR: GQuark
    get() = kniBridge208()

val G_TYPE_IO_STREAM: GType
    get() = kniBridge209()

val G_TYPE_FILE_IO_STREAM: GType
    get() = kniBridge210()

val G_TYPE_FILE_MONITOR: GType
    get() = kniBridge211()

val G_TYPE_FILENAME_COMPLETER: GType
    get() = kniBridge212()

val G_TYPE_FILE_OUTPUT_STREAM: GType
    get() = kniBridge213()

val G_TYPE_INET_ADDRESS: GType
    get() = kniBridge214()

val G_TYPE_INET_ADDRESS_MASK: GType
    get() = kniBridge215()

val G_TYPE_SOCKET_ADDRESS: GType
    get() = kniBridge216()

val G_TYPE_INET_SOCKET_ADDRESS: GType
    get() = kniBridge217()

val G_TYPE_APP_INFO_CREATE_FLAGS: GType
    get() = kniBridge218()

val G_TYPE_CONVERTER_FLAGS: GType
    get() = kniBridge219()

val G_TYPE_CONVERTER_RESULT: GType
    get() = kniBridge220()

val G_TYPE_DATA_STREAM_BYTE_ORDER: GType
    get() = kniBridge221()

val G_TYPE_DATA_STREAM_NEWLINE_TYPE: GType
    get() = kniBridge222()

val G_TYPE_FILE_ATTRIBUTE_TYPE: GType
    get() = kniBridge223()

val G_TYPE_FILE_ATTRIBUTE_INFO_FLAGS: GType
    get() = kniBridge224()

val G_TYPE_FILE_ATTRIBUTE_STATUS: GType
    get() = kniBridge225()

val G_TYPE_FILE_QUERY_INFO_FLAGS: GType
    get() = kniBridge226()

val G_TYPE_FILE_CREATE_FLAGS: GType
    get() = kniBridge227()

val G_TYPE_FILE_MEASURE_FLAGS: GType
    get() = kniBridge228()

val G_TYPE_MOUNT_MOUNT_FLAGS: GType
    get() = kniBridge229()

val G_TYPE_MOUNT_UNMOUNT_FLAGS: GType
    get() = kniBridge230()

val G_TYPE_DRIVE_START_FLAGS: GType
    get() = kniBridge231()

val G_TYPE_DRIVE_START_STOP_TYPE: GType
    get() = kniBridge232()

val G_TYPE_FILE_COPY_FLAGS: GType
    get() = kniBridge233()

val G_TYPE_FILE_MONITOR_FLAGS: GType
    get() = kniBridge234()

val G_TYPE_FILE_TYPE: GType
    get() = kniBridge235()

val G_TYPE_FILESYSTEM_PREVIEW_TYPE: GType
    get() = kniBridge236()

val G_TYPE_FILE_MONITOR_EVENT: GType
    get() = kniBridge237()

val G_TYPE_IO_ERROR_ENUM: GType
    get() = kniBridge238()

val G_TYPE_ASK_PASSWORD_FLAGS: GType
    get() = kniBridge239()

val G_TYPE_PASSWORD_SAVE: GType
    get() = kniBridge240()

val G_TYPE_MOUNT_OPERATION_RESULT: GType
    get() = kniBridge241()

val G_TYPE_OUTPUT_STREAM_SPLICE_FLAGS: GType
    get() = kniBridge242()

val G_TYPE_IO_STREAM_SPLICE_FLAGS: GType
    get() = kniBridge243()

val G_TYPE_EMBLEM_ORIGIN: GType
    get() = kniBridge244()

val G_TYPE_RESOLVER_ERROR: GType
    get() = kniBridge245()

val G_TYPE_RESOLVER_RECORD_TYPE: GType
    get() = kniBridge246()

val G_TYPE_RESOURCE_ERROR: GType
    get() = kniBridge247()

val G_TYPE_RESOURCE_FLAGS: GType
    get() = kniBridge248()

val G_TYPE_RESOURCE_LOOKUP_FLAGS: GType
    get() = kniBridge249()

val G_TYPE_SOCKET_FAMILY: GType
    get() = kniBridge250()

val G_TYPE_SOCKET_TYPE: GType
    get() = kniBridge251()

val G_TYPE_SOCKET_MSG_FLAGS: GType
    get() = kniBridge252()

val G_TYPE_SOCKET_PROTOCOL: GType
    get() = kniBridge253()

val G_TYPE_ZLIB_COMPRESSOR_FORMAT: GType
    get() = kniBridge254()

val G_TYPE_UNIX_SOCKET_ADDRESS_TYPE: GType
    get() = kniBridge255()

val G_TYPE_BUS_TYPE: GType
    get() = kniBridge256()

val G_TYPE_BUS_NAME_OWNER_FLAGS: GType
    get() = kniBridge257()

val G_TYPE_BUS_NAME_WATCHER_FLAGS: GType
    get() = kniBridge258()

val G_TYPE_DBUS_PROXY_FLAGS: GType
    get() = kniBridge259()

val G_TYPE_DBUS_ERROR: GType
    get() = kniBridge260()

val G_TYPE_DBUS_CONNECTION_FLAGS: GType
    get() = kniBridge261()

val G_TYPE_DBUS_CAPABILITY_FLAGS: GType
    get() = kniBridge262()

val G_TYPE_DBUS_CALL_FLAGS: GType
    get() = kniBridge263()

val G_TYPE_DBUS_MESSAGE_TYPE: GType
    get() = kniBridge264()

val G_TYPE_DBUS_MESSAGE_FLAGS: GType
    get() = kniBridge265()

val G_TYPE_DBUS_MESSAGE_HEADER_FIELD: GType
    get() = kniBridge266()

val G_TYPE_DBUS_PROPERTY_INFO_FLAGS: GType
    get() = kniBridge267()

val G_TYPE_DBUS_SUBTREE_FLAGS: GType
    get() = kniBridge268()

val G_TYPE_DBUS_SERVER_FLAGS: GType
    get() = kniBridge269()

val G_TYPE_DBUS_SIGNAL_FLAGS: GType
    get() = kniBridge270()

val G_TYPE_DBUS_SEND_MESSAGE_FLAGS: GType
    get() = kniBridge271()

val G_TYPE_CREDENTIALS_TYPE: GType
    get() = kniBridge272()

val G_TYPE_DBUS_MESSAGE_BYTE_ORDER: GType
    get() = kniBridge273()

val G_TYPE_APPLICATION_FLAGS: GType
    get() = kniBridge274()

val G_TYPE_TLS_ERROR: GType
    get() = kniBridge275()

val G_TYPE_TLS_CERTIFICATE_FLAGS: GType
    get() = kniBridge276()

val G_TYPE_TLS_AUTHENTICATION_MODE: GType
    get() = kniBridge277()

val G_TYPE_TLS_REHANDSHAKE_MODE: GType
    get() = kniBridge278()

val G_TYPE_TLS_PASSWORD_FLAGS: GType
    get() = kniBridge279()

val G_TYPE_TLS_INTERACTION_RESULT: GType
    get() = kniBridge280()

val G_TYPE_DBUS_INTERFACE_SKELETON_FLAGS: GType
    get() = kniBridge281()

val G_TYPE_DBUS_OBJECT_MANAGER_CLIENT_FLAGS: GType
    get() = kniBridge282()

val G_TYPE_TLS_DATABASE_VERIFY_FLAGS: GType
    get() = kniBridge283()

val G_TYPE_TLS_DATABASE_LOOKUP_FLAGS: GType
    get() = kniBridge284()

val G_TYPE_TLS_CERTIFICATE_REQUEST_FLAGS: GType
    get() = kniBridge285()

val G_TYPE_IO_MODULE_SCOPE_FLAGS: GType
    get() = kniBridge286()

val G_TYPE_SOCKET_CLIENT_EVENT: GType
    get() = kniBridge287()

val G_TYPE_SOCKET_LISTENER_EVENT: GType
    get() = kniBridge288()

val G_TYPE_TEST_DBUS_FLAGS: GType
    get() = kniBridge289()

val G_TYPE_SUBPROCESS_FLAGS: GType
    get() = kniBridge290()

val G_TYPE_NOTIFICATION_PRIORITY: GType
    get() = kniBridge291()

val G_TYPE_NETWORK_CONNECTIVITY: GType
    get() = kniBridge292()

val G_TYPE_SETTINGS_BIND_FLAGS: GType
    get() = kniBridge293()

val G_IO_TYPE_MODULE: GType
    get() = kniBridge294()

val G_TYPE_LOADABLE_ICON: GType
    get() = kniBridge295()

val G_TYPE_MEMORY_INPUT_STREAM: GType
    get() = kniBridge296()

val G_TYPE_MEMORY_OUTPUT_STREAM: GType
    get() = kniBridge297()

val G_TYPE_MOUNT: GType
    get() = kniBridge298()

val G_TYPE_MOUNT_OPERATION: GType
    get() = kniBridge299()

val G_TYPE_VOLUME_MONITOR: GType
    get() = kniBridge300()

val G_TYPE_NATIVE_VOLUME_MONITOR: GType
    get() = kniBridge301()

val G_TYPE_NETWORK_ADDRESS: GType
    get() = kniBridge302()

val G_TYPE_NETWORK_MONITOR: GType
    get() = kniBridge303()

val G_TYPE_NETWORK_SERVICE: GType
    get() = kniBridge304()

val G_TYPE_PERMISSION: GType
    get() = kniBridge305()

val G_TYPE_POLLABLE_INPUT_STREAM: GType
    get() = kniBridge306()

val G_TYPE_POLLABLE_OUTPUT_STREAM: GType
    get() = kniBridge307()

val G_TYPE_PROPERTY_ACTION: GType
    get() = kniBridge308()

val G_TYPE_PROXY: GType
    get() = kniBridge309()

val G_TYPE_PROXY_ADDRESS: GType
    get() = kniBridge310()

val G_TYPE_SOCKET_ADDRESS_ENUMERATOR: GType
    get() = kniBridge311()

val G_TYPE_PROXY_ADDRESS_ENUMERATOR: GType
    get() = kniBridge312()

val G_TYPE_PROXY_RESOLVER: GType
    get() = kniBridge313()

val G_TYPE_RESOLVER: GType
    get() = kniBridge314()

val G_RESOLVER_ERROR: GQuark
    get() = kniBridge315()

val G_TYPE_RESOURCE: GType
    get() = kniBridge316()

val G_RESOURCE_ERROR: GQuark
    get() = kniBridge317()

val G_TYPE_SEEKABLE: GType
    get() = kniBridge318()

val G_TYPE_SETTINGS_SCHEMA_SOURCE: GType
    get() = kniBridge319()

val G_TYPE_SETTINGS_SCHEMA: GType
    get() = kniBridge320()

val G_TYPE_SETTINGS_SCHEMA_KEY: GType
    get() = kniBridge321()

val G_TYPE_SETTINGS: GType
    get() = kniBridge322()

val G_TYPE_SIMPLE_ACTION: GType
    get() = kniBridge323()

val G_TYPE_SIMPLE_ACTION_GROUP: GType
    get() = kniBridge324()

val G_TYPE_SIMPLE_ASYNC_RESULT: GType
    get() = kniBridge325()

val G_TYPE_SIMPLE_IO_STREAM: GType
    get() = kniBridge326()

val G_TYPE_SIMPLE_PERMISSION: GType
    get() = kniBridge327()

val G_TYPE_SOCKET_CLIENT: GType
    get() = kniBridge328()

val G_TYPE_SOCKET_CONNECTABLE: GType
    get() = kniBridge329()

val G_TYPE_SOCKET: GType
    get() = kniBridge330()

val G_TYPE_SOCKET_CONNECTION: GType
    get() = kniBridge331()

val G_TYPE_SOCKET_CONTROL_MESSAGE: GType
    get() = kniBridge332()

val G_TYPE_SOCKET_LISTENER: GType
    get() = kniBridge333()

val G_TYPE_SOCKET_SERVICE: GType
    get() = kniBridge334()

val G_TYPE_SRV_TARGET: GType
    get() = kniBridge335()

val G_TYPE_SIMPLE_PROXY_RESOLVER: GType
    get() = kniBridge336()

val G_TYPE_TASK: GType
    get() = kniBridge337()

val G_TYPE_SUBPROCESS: GType
    get() = kniBridge338()

val G_TYPE_SUBPROCESS_LAUNCHER: GType
    get() = kniBridge339()

val G_TYPE_TCP_CONNECTION: GType
    get() = kniBridge340()

val G_TYPE_TCP_WRAPPER_CONNECTION: GType
    get() = kniBridge341()

val G_TYPE_TEST_DBUS: GType
    get() = kniBridge342()

val G_TYPE_THEMED_ICON: GType
    get() = kniBridge343()

val G_TYPE_THREADED_SOCKET_SERVICE: GType
    get() = kniBridge344()

val G_TYPE_TLS_BACKEND: GType
    get() = kniBridge345()

val G_TYPE_TLS_CERTIFICATE: GType
    get() = kniBridge346()

val G_TYPE_TLS_CONNECTION: GType
    get() = kniBridge347()

val G_TLS_ERROR: GQuark
    get() = kniBridge348()

val G_TYPE_TLS_CLIENT_CONNECTION: GType
    get() = kniBridge349()

val G_TYPE_TLS_DATABASE: GType
    get() = kniBridge350()

val G_TYPE_TLS_FILE_DATABASE: GType
    get() = kniBridge351()

val G_TYPE_TLS_INTERACTION: GType
    get() = kniBridge352()

val G_TYPE_TLS_SERVER_CONNECTION: GType
    get() = kniBridge353()

val G_TYPE_TLS_PASSWORD: GType
    get() = kniBridge354()

val G_TYPE_VFS: GType
    get() = kniBridge355()

val G_TYPE_VOLUME: GType
    get() = kniBridge356()

val G_TYPE_ZLIB_COMPRESSOR: GType
    get() = kniBridge357()

val G_TYPE_ZLIB_DECOMPRESSOR: GType
    get() = kniBridge358()

val G_TYPE_DBUS_INTERFACE: GType
    get() = kniBridge359()

val G_TYPE_DBUS_INTERFACE_SKELETON: GType
    get() = kniBridge360()

val G_TYPE_DBUS_OBJECT: GType
    get() = kniBridge361()

val G_TYPE_DBUS_OBJECT_SKELETON: GType
    get() = kniBridge362()

val G_TYPE_DBUS_OBJECT_PROXY: GType
    get() = kniBridge363()

val G_TYPE_DBUS_OBJECT_MANAGER: GType
    get() = kniBridge364()

val G_TYPE_DBUS_OBJECT_MANAGER_CLIENT: GType
    get() = kniBridge365()

val G_TYPE_DBUS_OBJECT_MANAGER_SERVER: GType
    get() = kniBridge366()

val G_TYPE_DBUS_ACTION_GROUP: GType
    get() = kniBridge367()

val G_TYPE_REMOTE_ACTION_GROUP: GType
    get() = kniBridge368()

val G_TYPE_MENU_MODEL: GType
    get() = kniBridge369()

val G_TYPE_MENU_ATTRIBUTE_ITER: GType
    get() = kniBridge370()

val G_TYPE_MENU_LINK_ITER: GType
    get() = kniBridge371()

val G_TYPE_MENU: GType
    get() = kniBridge372()

val G_TYPE_MENU_ITEM: GType
    get() = kniBridge373()

val G_TYPE_DBUS_MENU_MODEL: GType
    get() = kniBridge374()

val G_TYPE_NOTIFICATION: GType
    get() = kniBridge375()

val G_TYPE_LIST_MODEL: GType
    get() = kniBridge376()

val G_TYPE_LIST_STORE: GType
    get() = kniBridge377()

val JSON_TYPE_GENERATOR: GType
    get() = kniBridge378()

val JSON_TYPE_PARSER: GType
    get() = kniBridge379()

val JSON_PARSER_ERROR: GQuark
    get() = kniBridge380()

val JSON_TYPE_PATH: GType
    get() = kniBridge381()

val JSON_PATH_ERROR: GQuark
    get() = kniBridge382()

val JSON_TYPE_READER: GType
    get() = kniBridge383()

val JSON_READER_ERROR: GQuark
    get() = kniBridge384()

val JSON_TYPE_PARSER_ERROR: GType
    get() = kniBridge385()

val JSON_TYPE_PATH_ERROR: GType
    get() = kniBridge386()

val JSON_TYPE_READER_ERROR: GType
    get() = kniBridge387()

val JSON_TYPE_NODE_TYPE: GType
    get() = kniBridge388()

val JSON_TYPE_SERIALIZABLE: GType
    get() = kniBridge389()

typealias gint8Var = ByteVarOf<gint8>

typealias gint8 = Byte

typealias guint8Var = UByteVarOf<guint8>

typealias guint8 = UByte

typealias gint16Var = ShortVarOf<gint16>

typealias gint16 = Short

typealias guint16Var = UShortVarOf<guint16>

typealias guint16 = UShort

typealias gint32Var = IntVarOf<gint32>

typealias gint32 = Int

typealias guint32Var = UIntVarOf<guint32>

typealias guint32 = UInt

typealias gint64Var = LongVarOf<gint64>

typealias gint64 = Long

typealias guint64Var = ULongVarOf<guint64>

typealias guint64 = ULong

typealias gssizeVar = LongVarOf<gssize>

typealias gssize = Long

typealias gsizeVar = ULongVarOf<gsize>

typealias gsize = ULong

typealias goffsetVar = LongVarOf<goffset>

typealias goffset = gint64

typealias gintptrVar = LongVarOf<gintptr>

typealias gintptr = Long

typealias guintptrVar = ULongVarOf<guintptr>

typealias guintptr = ULong

typealias GPidVar = IntVarOf<GPid>

typealias GPid = Int

typealias gcharVar = ByteVarOf<gchar>

typealias gchar = Byte

typealias gshortVar = ShortVarOf<gshort>

typealias gshort = Short

typealias glongVar = LongVarOf<glong>

typealias glong = Long

typealias gintVar = IntVarOf<gint>

typealias gint = Int

typealias gbooleanVar = IntVarOf<gboolean>

typealias gboolean = gint

typealias gucharVar = UByteVarOf<guchar>

typealias guchar = UByte

typealias gushortVar = UShortVarOf<gushort>

typealias gushort = UShort

typealias gulongVar = ULongVarOf<gulong>

typealias gulong = ULong

typealias guintVar = UIntVarOf<guint>

typealias guint = UInt

typealias gfloatVar = FloatVarOf<gfloat>

typealias gfloat = Float

typealias gdoubleVar = DoubleVarOf<gdouble>

typealias gdouble = Double

typealias gpointerVar = CPointerVarOf<gpointer>

typealias gpointer = COpaquePointer

typealias gconstpointerVar = CPointerVarOf<gconstpointer>

typealias gconstpointer = COpaquePointer

typealias GCompareFuncVar = CPointerVarOf<GCompareFunc>

typealias GCompareFunc = CPointer<CFunction<(gconstpointer?, gconstpointer?) -> gint>>

typealias GCompareDataFuncVar = CPointerVarOf<GCompareDataFunc>

typealias GCompareDataFunc = CPointer<CFunction<(gconstpointer?, gconstpointer?, gpointer?) -> gint>>

typealias GEqualFuncVar = CPointerVarOf<GEqualFunc>

typealias GEqualFunc = CPointer<CFunction<(gconstpointer?, gconstpointer?) -> gboolean>>

typealias GDestroyNotifyVar = CPointerVarOf<GDestroyNotify>

typealias GDestroyNotify = CPointer<CFunction<(gpointer?) -> Unit>>

typealias GFuncVar = CPointerVarOf<GFunc>

typealias GFunc = CPointer<CFunction<(gpointer?, gpointer?) -> Unit>>

typealias GHashFuncVar = CPointerVarOf<GHashFunc>

typealias GHashFunc = CPointer<CFunction<(gconstpointer?) -> guint>>

typealias GHFuncVar = CPointerVarOf<GHFunc>

typealias GHFunc = CPointer<CFunction<(gpointer?, gpointer?, gpointer?) -> Unit>>

typealias GFreeFuncVar = CPointerVarOf<GFreeFunc>

typealias GFreeFunc = CPointer<CFunction<(gpointer?) -> Unit>>

typealias GTranslateFuncVar = CPointerVarOf<GTranslateFunc>

typealias GTranslateFunc = CPointer<CFunction<(CPointer<gcharVar>?, gpointer?) -> CPointer<gcharVar>?>>

typealias GDoubleIEEE754 = _GDoubleIEEE754

typealias GFloatIEEE754 = _GFloatIEEE754

typealias GTimeVal = _GTimeVal

typealias GBytes = _GBytes

typealias GArray = _GArray

typealias GByteArray = _GByteArray

typealias GPtrArray = _GPtrArray

typealias GQuarkVar = UIntVarOf<GQuark>

typealias GQuark = guint32

typealias GError = _GError

typealias GDebugKey = _GDebugKey

typealias GVoidFuncVar = CPointerVarOf<GVoidFunc>

typealias GVoidFunc = CPointer<CFunction<() -> Unit>>

typealias GThreadFuncVar = CPointerVarOf<GThreadFunc>

typealias GThreadFunc = CPointer<CFunction<(gpointer?) -> gpointer?>>

typealias GThread = _GThread

typealias GMutex = _GMutex

typealias GRecMutex = _GRecMutex

typealias GRWLock = _GRWLock

typealias GCond = _GCond

typealias GPrivate = _GPrivate

typealias GOnce = _GOnce

typealias GAsyncQueue = _GAsyncQueue

typealias GBookmarkFile = _GBookmarkFile

typealias GChecksum = _GChecksum

typealias GIConvVar = CPointerVarOf<GIConv>

typealias GIConv = CPointer<_GIConv>

typealias GData = _GData

typealias GDataForeachFuncVar = CPointerVarOf<GDataForeachFunc>

typealias GDataForeachFunc = CPointer<CFunction<(GQuark, gpointer?, gpointer?) -> Unit>>

typealias GDuplicateFuncVar = CPointerVarOf<GDuplicateFunc>

typealias GDuplicateFunc = CPointer<CFunction<(gpointer?, gpointer?) -> gpointer?>>

typealias GTimeVar = IntVarOf<GTime>

typealias GTime = gint32

typealias GDateYearVar = UShortVarOf<GDateYear>

typealias GDateYear = guint16

typealias GDateDayVar = UByteVarOf<GDateDay>

typealias GDateDay = guint8

typealias GDate = _GDate

typealias GTimeZone = _GTimeZone

typealias GTimeSpanVar = LongVarOf<GTimeSpan>

typealias GTimeSpan = gint64

typealias GDateTime = _GDateTime

typealias GDir = _GDir

typealias GMemVTable = _GMemVTable

typealias GNode = _GNode

typealias GNodeTraverseFuncVar = CPointerVarOf<GNodeTraverseFunc>

typealias GNodeTraverseFunc = CPointer<CFunction<(CPointer<GNode>?, gpointer?) -> gboolean>>

typealias GNodeForeachFuncVar = CPointerVarOf<GNodeForeachFunc>

typealias GNodeForeachFunc = CPointer<CFunction<(CPointer<GNode>?, gpointer?) -> Unit>>

typealias GCopyFuncVar = CPointerVarOf<GCopyFunc>

typealias GCopyFunc = CPointer<CFunction<(gconstpointer?, gpointer?) -> gpointer?>>

typealias GList = _GList

typealias GHashTable = _GHashTable

typealias GHRFuncVar = CPointerVarOf<GHRFunc>

typealias GHRFunc = CPointer<CFunction<(gpointer?, gpointer?, gpointer?) -> gboolean>>

typealias GHashTableIter = _GHashTableIter

typealias GHmac = _GHmac

typealias GHook = _GHook

typealias GHookList = _GHookList

typealias GHookFinalizeFuncVar = CPointerVarOf<GHookFinalizeFunc>

typealias GHookFinalizeFunc = CPointer<CFunction<(CPointer<GHookList>?, CPointer<GHook>?) -> Unit>>

typealias GHookCompareFuncVar = CPointerVarOf<GHookCompareFunc>

typealias GHookCompareFunc = CPointer<CFunction<(CPointer<GHook>?, CPointer<GHook>?) -> gint>>

typealias GHookFindFuncVar = CPointerVarOf<GHookFindFunc>

typealias GHookFindFunc = CPointer<CFunction<(CPointer<GHook>?, gpointer?) -> gboolean>>

typealias GHookMarshallerVar = CPointerVarOf<GHookMarshaller>

typealias GHookMarshaller = CPointer<CFunction<(CPointer<GHook>?, gpointer?) -> Unit>>

typealias GHookCheckMarshallerVar = CPointerVarOf<GHookCheckMarshaller>

typealias GHookCheckMarshaller = CPointer<CFunction<(CPointer<GHook>?, gpointer?) -> gboolean>>

typealias GHookFuncVar = CPointerVarOf<GHookFunc>

typealias GHookFunc = CPointer<CFunction<(gpointer?) -> Unit>>

typealias GHookCheckFuncVar = CPointerVarOf<GHookCheckFunc>

typealias GHookCheckFunc = CPointer<CFunction<(gpointer?) -> gboolean>>

typealias GPollFD = _GPollFD

typealias GPollFuncVar = CPointerVarOf<GPollFunc>

typealias GPollFunc = CPointer<CFunction<(CPointer<GPollFD>?, guint, gint) -> gint>>

typealias GSList = _GSList

typealias GMainContext = _GMainContext

typealias GMainLoop = _GMainLoop

typealias GSource = _GSource

typealias GSourceFuncVar = CPointerVarOf<GSourceFunc>

typealias GSourceFunc = CPointer<CFunction<(gpointer?) -> gboolean>>

typealias GSourceCallbackFuncs = _GSourceCallbackFuncs

typealias GSourceDummyMarshalVar = CPointerVarOf<GSourceDummyMarshal>

typealias GSourceDummyMarshal = CPointer<CFunction<() -> Unit>>

typealias GSourceFuncs = _GSourceFuncs

typealias GSourcePrivate = _GSourcePrivate

typealias GChildWatchFuncVar = CPointerVarOf<GChildWatchFunc>

typealias GChildWatchFunc = CPointer<CFunction<(GPid, gint, gpointer?) -> Unit>>

typealias GClearHandleFuncVar = CPointerVarOf<GClearHandleFunc>

typealias GClearHandleFunc = CPointer<CFunction<(guint) -> Unit>>

typealias gunicharVar = UIntVarOf<gunichar>

typealias gunichar = guint32

typealias gunichar2Var = UShortVarOf<gunichar2>

typealias gunichar2 = guint16

typealias GString = _GString

typealias GIOChannel = _GIOChannel

typealias GIOFuncs = _GIOFuncs

typealias GIOFuncVar = CPointerVarOf<GIOFunc>

typealias GIOFunc = CPointer<CFunction<(CPointer<GIOChannel>?, GIOCondition, gpointer?) -> gboolean>>

typealias GKeyFile = _GKeyFile

typealias GMappedFile = _GMappedFile

typealias GMarkupParseContext = _GMarkupParseContext

typealias GMarkupParser = _GMarkupParser

typealias GVariantType = _GVariantType

typealias GVariant = _GVariant

typealias GVariantIter = _GVariantIter

typealias GVariantBuilder = _GVariantBuilder

typealias GVariantDict = _GVariantDict

typealias GLogFuncVar = CPointerVarOf<GLogFunc>

typealias GLogFunc = CPointer<CFunction<(CPointer<gcharVar>?, GLogLevelFlags, CPointer<gcharVar>?, gpointer?) -> Unit>>

typealias GLogField = _GLogField

typealias GLogWriterFuncVar = CPointerVarOf<GLogWriterFunc>

typealias GLogWriterFunc = CPointer<CFunction<(GLogLevelFlags, CPointer<GLogField>?, gsize, gpointer?) -> GLogWriterOutput>>

typealias GPrintFuncVar = CPointerVarOf<GPrintFunc>

typealias GPrintFunc = CPointer<CFunction<(CPointer<gcharVar>?) -> Unit>>

typealias GOptionContext = _GOptionContext

typealias GOptionGroup = _GOptionGroup

typealias GOptionEntry = _GOptionEntry

typealias GOptionArgFuncVar = CPointerVarOf<GOptionArgFunc>

typealias GOptionArgFunc = CPointer<CFunction<(CPointer<gcharVar>?, CPointer<gcharVar>?, gpointer?, CPointer<CPointerVar<GError>>?) -> gboolean>>

typealias GOptionParseFuncVar = CPointerVarOf<GOptionParseFunc>

typealias GOptionParseFunc = CPointer<CFunction<(CPointer<GOptionContext>?, CPointer<GOptionGroup>?, gpointer?, CPointer<CPointerVar<GError>>?) -> gboolean>>

typealias GOptionErrorFuncVar = CPointerVarOf<GOptionErrorFunc>

typealias GOptionErrorFunc = CPointer<CFunction<(CPointer<GOptionContext>?, CPointer<GOptionGroup>?, gpointer?, CPointer<CPointerVar<GError>>?) -> Unit>>

typealias GPatternSpec = _GPatternSpec

typealias GQueue = _GQueue

typealias GRand = _GRand

typealias GRegex = _GRegex

typealias GMatchInfo = _GMatchInfo

typealias GRegexEvalCallbackVar = CPointerVarOf<GRegexEvalCallback>

typealias GRegexEvalCallback = CPointer<CFunction<(CPointer<GMatchInfo>?, CPointer<GString>?, gpointer?) -> gboolean>>

typealias GScannerConfig = _GScannerConfig

typealias GTokenValue = _GTokenValue

typealias GScanner = _GScanner

typealias GScannerMsgFuncVar = CPointerVarOf<GScannerMsgFunc>

typealias GScannerMsgFunc = CPointer<CFunction<(CPointer<GScanner>?, CPointer<gcharVar>?, gboolean) -> Unit>>

typealias GSequence = _GSequence

typealias GSequenceIter = _GSequenceNode

typealias GSequenceIterCompareFuncVar = CPointerVarOf<GSequenceIterCompareFunc>

typealias GSequenceIterCompareFunc = CPointer<CFunction<(CPointer<GSequenceIter>?, CPointer<GSequenceIter>?, gpointer?) -> gint>>

typealias GSpawnChildSetupFuncVar = CPointerVarOf<GSpawnChildSetupFunc>

typealias GSpawnChildSetupFunc = CPointer<CFunction<(gpointer?) -> Unit>>

typealias GStrvVar = CPointerVarOf<GStrv>

typealias GStrv = CPointer<CPointerVar<gcharVar>>

typealias GStringChunk = _GStringChunk

typealias GTestFuncVar = CPointerVarOf<GTestFunc>

typealias GTestFunc = CPointer<CFunction<() -> Unit>>

typealias GTestDataFuncVar = CPointerVarOf<GTestDataFunc>

typealias GTestDataFunc = CPointer<CFunction<(gconstpointer?) -> Unit>>

typealias GTestFixtureFuncVar = CPointerVarOf<GTestFixtureFunc>

typealias GTestFixtureFunc = CPointer<CFunction<(gpointer?, gconstpointer?) -> Unit>>

typealias GTestLogFatalFuncVar = CPointerVarOf<GTestLogFatalFunc>

typealias GTestLogFatalFunc = CPointer<CFunction<(CPointer<gcharVar>?, GLogLevelFlags, CPointer<gcharVar>?, gpointer?) -> gboolean>>

typealias GThreadPool = _GThreadPool

typealias GTimer = _GTimer

typealias GTrashStack = _GTrashStack

typealias GTree = _GTree

typealias GTraverseFuncVar = CPointerVarOf<GTraverseFunc>

typealias GTraverseFunc = CPointer<CFunction<(gpointer?, gpointer?, gpointer?) -> gboolean>>

typealias GAllocator = _GAllocator

typealias GMemChunk = _GMemChunk

typealias GCache = _GCache

typealias GCacheNewFuncVar = CPointerVarOf<GCacheNewFunc>

typealias GCacheNewFunc = CPointer<CFunction<(gpointer?) -> gpointer?>>

typealias GCacheDupFuncVar = CPointerVarOf<GCacheDupFunc>

typealias GCacheDupFunc = CPointer<CFunction<(gpointer?) -> gpointer?>>

typealias GCacheDestroyFuncVar = CPointerVarOf<GCacheDestroyFunc>

typealias GCacheDestroyFunc = CPointer<CFunction<(gpointer?) -> Unit>>

typealias GCompletionFuncVar = CPointerVarOf<GCompletionFunc>

typealias GCompletionFunc = CPointer<CFunction<(gpointer?) -> CPointer<gcharVar>?>>

typealias GCompletionStrncmpFuncVar = CPointerVarOf<GCompletionStrncmpFunc>

typealias GCompletionStrncmpFunc = CPointer<CFunction<(CPointer<gcharVar>?, CPointer<gcharVar>?, gsize) -> gint>>

typealias GCompletion = _GCompletion

typealias GRelation = _GRelation

typealias GTuples = _GTuples

typealias GThreadFunctions = _GThreadFunctions

typealias GStaticRecMutex = _GStaticRecMutex

typealias GStaticRWLock = _GStaticRWLock

typealias GStaticPrivate = _GStaticPrivate

typealias GAsyncQueue_autoptrVar = CPointerVarOf<GAsyncQueue_autoptr>

typealias GAsyncQueue_autoptr = CPointer<GAsyncQueue>

typealias GAsyncQueue_listautoptrVar = CPointerVarOf<GAsyncQueue_listautoptr>

typealias GAsyncQueue_listautoptr = CPointer<GList>

typealias GAsyncQueue_slistautoptrVar = CPointerVarOf<GAsyncQueue_slistautoptr>

typealias GAsyncQueue_slistautoptr = CPointer<GSList>

typealias GBookmarkFile_autoptrVar = CPointerVarOf<GBookmarkFile_autoptr>

typealias GBookmarkFile_autoptr = CPointer<GBookmarkFile>

typealias GBookmarkFile_listautoptrVar = CPointerVarOf<GBookmarkFile_listautoptr>

typealias GBookmarkFile_listautoptr = CPointer<GList>

typealias GBookmarkFile_slistautoptrVar = CPointerVarOf<GBookmarkFile_slistautoptr>

typealias GBookmarkFile_slistautoptr = CPointer<GSList>

typealias GBytes_autoptrVar = CPointerVarOf<GBytes_autoptr>

typealias GBytes_autoptr = CPointer<GBytes>

typealias GBytes_listautoptrVar = CPointerVarOf<GBytes_listautoptr>

typealias GBytes_listautoptr = CPointer<GList>

typealias GBytes_slistautoptrVar = CPointerVarOf<GBytes_slistautoptr>

typealias GBytes_slistautoptr = CPointer<GSList>

typealias GChecksum_autoptrVar = CPointerVarOf<GChecksum_autoptr>

typealias GChecksum_autoptr = CPointer<GChecksum>

typealias GChecksum_listautoptrVar = CPointerVarOf<GChecksum_listautoptr>

typealias GChecksum_listautoptr = CPointer<GList>

typealias GChecksum_slistautoptrVar = CPointerVarOf<GChecksum_slistautoptr>

typealias GChecksum_slistautoptr = CPointer<GSList>

typealias GDateTime_autoptrVar = CPointerVarOf<GDateTime_autoptr>

typealias GDateTime_autoptr = CPointer<GDateTime>

typealias GDateTime_listautoptrVar = CPointerVarOf<GDateTime_listautoptr>

typealias GDateTime_listautoptr = CPointer<GList>

typealias GDateTime_slistautoptrVar = CPointerVarOf<GDateTime_slistautoptr>

typealias GDateTime_slistautoptr = CPointer<GSList>

typealias GDir_autoptrVar = CPointerVarOf<GDir_autoptr>

typealias GDir_autoptr = CPointer<GDir>

typealias GDir_listautoptrVar = CPointerVarOf<GDir_listautoptr>

typealias GDir_listautoptr = CPointer<GList>

typealias GDir_slistautoptrVar = CPointerVarOf<GDir_slistautoptr>

typealias GDir_slistautoptr = CPointer<GSList>

typealias GError_autoptrVar = CPointerVarOf<GError_autoptr>

typealias GError_autoptr = CPointer<GError>

typealias GError_listautoptrVar = CPointerVarOf<GError_listautoptr>

typealias GError_listautoptr = CPointer<GList>

typealias GError_slistautoptrVar = CPointerVarOf<GError_slistautoptr>

typealias GError_slistautoptr = CPointer<GSList>

typealias GHashTable_autoptrVar = CPointerVarOf<GHashTable_autoptr>

typealias GHashTable_autoptr = CPointer<GHashTable>

typealias GHashTable_listautoptrVar = CPointerVarOf<GHashTable_listautoptr>

typealias GHashTable_listautoptr = CPointer<GList>

typealias GHashTable_slistautoptrVar = CPointerVarOf<GHashTable_slistautoptr>

typealias GHashTable_slistautoptr = CPointer<GSList>

typealias GHmac_autoptrVar = CPointerVarOf<GHmac_autoptr>

typealias GHmac_autoptr = CPointer<GHmac>

typealias GHmac_listautoptrVar = CPointerVarOf<GHmac_listautoptr>

typealias GHmac_listautoptr = CPointer<GList>

typealias GHmac_slistautoptrVar = CPointerVarOf<GHmac_slistautoptr>

typealias GHmac_slistautoptr = CPointer<GSList>

typealias GIOChannel_autoptrVar = CPointerVarOf<GIOChannel_autoptr>

typealias GIOChannel_autoptr = CPointer<GIOChannel>

typealias GIOChannel_listautoptrVar = CPointerVarOf<GIOChannel_listautoptr>

typealias GIOChannel_listautoptr = CPointer<GList>

typealias GIOChannel_slistautoptrVar = CPointerVarOf<GIOChannel_slistautoptr>

typealias GIOChannel_slistautoptr = CPointer<GSList>

typealias GKeyFile_autoptrVar = CPointerVarOf<GKeyFile_autoptr>

typealias GKeyFile_autoptr = CPointer<GKeyFile>

typealias GKeyFile_listautoptrVar = CPointerVarOf<GKeyFile_listautoptr>

typealias GKeyFile_listautoptr = CPointer<GList>

typealias GKeyFile_slistautoptrVar = CPointerVarOf<GKeyFile_slistautoptr>

typealias GKeyFile_slistautoptr = CPointer<GSList>

typealias GList_autoptrVar = CPointerVarOf<GList_autoptr>

typealias GList_autoptr = CPointer<GList>

typealias GList_listautoptrVar = CPointerVarOf<GList_listautoptr>

typealias GList_listautoptr = CPointer<GList>

typealias GList_slistautoptrVar = CPointerVarOf<GList_slistautoptr>

typealias GList_slistautoptr = CPointer<GSList>

typealias GArray_autoptrVar = CPointerVarOf<GArray_autoptr>

typealias GArray_autoptr = CPointer<GArray>

typealias GArray_listautoptrVar = CPointerVarOf<GArray_listautoptr>

typealias GArray_listautoptr = CPointer<GList>

typealias GArray_slistautoptrVar = CPointerVarOf<GArray_slistautoptr>

typealias GArray_slistautoptr = CPointer<GSList>

typealias GPtrArray_autoptrVar = CPointerVarOf<GPtrArray_autoptr>

typealias GPtrArray_autoptr = CPointer<GPtrArray>

typealias GPtrArray_listautoptrVar = CPointerVarOf<GPtrArray_listautoptr>

typealias GPtrArray_listautoptr = CPointer<GList>

typealias GPtrArray_slistautoptrVar = CPointerVarOf<GPtrArray_slistautoptr>

typealias GPtrArray_slistautoptr = CPointer<GSList>

typealias GByteArray_autoptrVar = CPointerVarOf<GByteArray_autoptr>

typealias GByteArray_autoptr = CPointer<GByteArray>

typealias GByteArray_listautoptrVar = CPointerVarOf<GByteArray_listautoptr>

typealias GByteArray_listautoptr = CPointer<GList>

typealias GByteArray_slistautoptrVar = CPointerVarOf<GByteArray_slistautoptr>

typealias GByteArray_slistautoptr = CPointer<GSList>

typealias GMainContext_autoptrVar = CPointerVarOf<GMainContext_autoptr>

typealias GMainContext_autoptr = CPointer<GMainContext>

typealias GMainContext_listautoptrVar = CPointerVarOf<GMainContext_listautoptr>

typealias GMainContext_listautoptr = CPointer<GList>

typealias GMainContext_slistautoptrVar = CPointerVarOf<GMainContext_slistautoptr>

typealias GMainContext_slistautoptr = CPointer<GSList>

typealias GMainLoop_autoptrVar = CPointerVarOf<GMainLoop_autoptr>

typealias GMainLoop_autoptr = CPointer<GMainLoop>

typealias GMainLoop_listautoptrVar = CPointerVarOf<GMainLoop_listautoptr>

typealias GMainLoop_listautoptr = CPointer<GList>

typealias GMainLoop_slistautoptrVar = CPointerVarOf<GMainLoop_slistautoptr>

typealias GMainLoop_slistautoptr = CPointer<GSList>

typealias GSource_autoptrVar = CPointerVarOf<GSource_autoptr>

typealias GSource_autoptr = CPointer<GSource>

typealias GSource_listautoptrVar = CPointerVarOf<GSource_listautoptr>

typealias GSource_listautoptr = CPointer<GList>

typealias GSource_slistautoptrVar = CPointerVarOf<GSource_slistautoptr>

typealias GSource_slistautoptr = CPointer<GSList>

typealias GMappedFile_autoptrVar = CPointerVarOf<GMappedFile_autoptr>

typealias GMappedFile_autoptr = CPointer<GMappedFile>

typealias GMappedFile_listautoptrVar = CPointerVarOf<GMappedFile_listautoptr>

typealias GMappedFile_listautoptr = CPointer<GList>

typealias GMappedFile_slistautoptrVar = CPointerVarOf<GMappedFile_slistautoptr>

typealias GMappedFile_slistautoptr = CPointer<GSList>

typealias GMarkupParseContext_autoptrVar = CPointerVarOf<GMarkupParseContext_autoptr>

typealias GMarkupParseContext_autoptr = CPointer<GMarkupParseContext>

typealias GMarkupParseContext_listautoptrVar = CPointerVarOf<GMarkupParseContext_listautoptr>

typealias GMarkupParseContext_listautoptr = CPointer<GList>

typealias GMarkupParseContext_slistautoptrVar = CPointerVarOf<GMarkupParseContext_slistautoptr>

typealias GMarkupParseContext_slistautoptr = CPointer<GSList>

typealias GNode_autoptrVar = CPointerVarOf<GNode_autoptr>

typealias GNode_autoptr = CPointer<GNode>

typealias GNode_listautoptrVar = CPointerVarOf<GNode_listautoptr>

typealias GNode_listautoptr = CPointer<GList>

typealias GNode_slistautoptrVar = CPointerVarOf<GNode_slistautoptr>

typealias GNode_slistautoptr = CPointer<GSList>

typealias GOptionContext_autoptrVar = CPointerVarOf<GOptionContext_autoptr>

typealias GOptionContext_autoptr = CPointer<GOptionContext>

typealias GOptionContext_listautoptrVar = CPointerVarOf<GOptionContext_listautoptr>

typealias GOptionContext_listautoptr = CPointer<GList>

typealias GOptionContext_slistautoptrVar = CPointerVarOf<GOptionContext_slistautoptr>

typealias GOptionContext_slistautoptr = CPointer<GSList>

typealias GOptionGroup_autoptrVar = CPointerVarOf<GOptionGroup_autoptr>

typealias GOptionGroup_autoptr = CPointer<GOptionGroup>

typealias GOptionGroup_listautoptrVar = CPointerVarOf<GOptionGroup_listautoptr>

typealias GOptionGroup_listautoptr = CPointer<GList>

typealias GOptionGroup_slistautoptrVar = CPointerVarOf<GOptionGroup_slistautoptr>

typealias GOptionGroup_slistautoptr = CPointer<GSList>

typealias GPatternSpec_autoptrVar = CPointerVarOf<GPatternSpec_autoptr>

typealias GPatternSpec_autoptr = CPointer<GPatternSpec>

typealias GPatternSpec_listautoptrVar = CPointerVarOf<GPatternSpec_listautoptr>

typealias GPatternSpec_listautoptr = CPointer<GList>

typealias GPatternSpec_slistautoptrVar = CPointerVarOf<GPatternSpec_slistautoptr>

typealias GPatternSpec_slistautoptr = CPointer<GSList>

typealias GQueue_autoptrVar = CPointerVarOf<GQueue_autoptr>

typealias GQueue_autoptr = CPointer<GQueue>

typealias GQueue_listautoptrVar = CPointerVarOf<GQueue_listautoptr>

typealias GQueue_listautoptr = CPointer<GList>

typealias GQueue_slistautoptrVar = CPointerVarOf<GQueue_slistautoptr>

typealias GQueue_slistautoptr = CPointer<GSList>

typealias GRand_autoptrVar = CPointerVarOf<GRand_autoptr>

typealias GRand_autoptr = CPointer<GRand>

typealias GRand_listautoptrVar = CPointerVarOf<GRand_listautoptr>

typealias GRand_listautoptr = CPointer<GList>

typealias GRand_slistautoptrVar = CPointerVarOf<GRand_slistautoptr>

typealias GRand_slistautoptr = CPointer<GSList>

typealias GRegex_autoptrVar = CPointerVarOf<GRegex_autoptr>

typealias GRegex_autoptr = CPointer<GRegex>

typealias GRegex_listautoptrVar = CPointerVarOf<GRegex_listautoptr>

typealias GRegex_listautoptr = CPointer<GList>

typealias GRegex_slistautoptrVar = CPointerVarOf<GRegex_slistautoptr>

typealias GRegex_slistautoptr = CPointer<GSList>

typealias GMatchInfo_autoptrVar = CPointerVarOf<GMatchInfo_autoptr>

typealias GMatchInfo_autoptr = CPointer<GMatchInfo>

typealias GMatchInfo_listautoptrVar = CPointerVarOf<GMatchInfo_listautoptr>

typealias GMatchInfo_listautoptr = CPointer<GList>

typealias GMatchInfo_slistautoptrVar = CPointerVarOf<GMatchInfo_slistautoptr>

typealias GMatchInfo_slistautoptr = CPointer<GSList>

typealias GScanner_autoptrVar = CPointerVarOf<GScanner_autoptr>

typealias GScanner_autoptr = CPointer<GScanner>

typealias GScanner_listautoptrVar = CPointerVarOf<GScanner_listautoptr>

typealias GScanner_listautoptr = CPointer<GList>

typealias GScanner_slistautoptrVar = CPointerVarOf<GScanner_slistautoptr>

typealias GScanner_slistautoptr = CPointer<GSList>

typealias GSequence_autoptrVar = CPointerVarOf<GSequence_autoptr>

typealias GSequence_autoptr = CPointer<GSequence>

typealias GSequence_listautoptrVar = CPointerVarOf<GSequence_listautoptr>

typealias GSequence_listautoptr = CPointer<GList>

typealias GSequence_slistautoptrVar = CPointerVarOf<GSequence_slistautoptr>

typealias GSequence_slistautoptr = CPointer<GSList>

typealias GSList_autoptrVar = CPointerVarOf<GSList_autoptr>

typealias GSList_autoptr = CPointer<GSList>

typealias GSList_listautoptrVar = CPointerVarOf<GSList_listautoptr>

typealias GSList_listautoptr = CPointer<GList>

typealias GSList_slistautoptrVar = CPointerVarOf<GSList_slistautoptr>

typealias GSList_slistautoptr = CPointer<GSList>

typealias GString_autoptrVar = CPointerVarOf<GString_autoptr>

typealias GString_autoptr = CPointer<GString>

typealias GString_listautoptrVar = CPointerVarOf<GString_listautoptr>

typealias GString_listautoptr = CPointer<GList>

typealias GString_slistautoptrVar = CPointerVarOf<GString_slistautoptr>

typealias GString_slistautoptr = CPointer<GSList>

typealias GStringChunk_autoptrVar = CPointerVarOf<GStringChunk_autoptr>

typealias GStringChunk_autoptr = CPointer<GStringChunk>

typealias GStringChunk_listautoptrVar = CPointerVarOf<GStringChunk_listautoptr>

typealias GStringChunk_listautoptr = CPointer<GList>

typealias GStringChunk_slistautoptrVar = CPointerVarOf<GStringChunk_slistautoptr>

typealias GStringChunk_slistautoptr = CPointer<GSList>

typealias GThread_autoptrVar = CPointerVarOf<GThread_autoptr>

typealias GThread_autoptr = CPointer<GThread>

typealias GThread_listautoptrVar = CPointerVarOf<GThread_listautoptr>

typealias GThread_listautoptr = CPointer<GList>

typealias GThread_slistautoptrVar = CPointerVarOf<GThread_slistautoptr>

typealias GThread_slistautoptr = CPointer<GSList>

typealias GMutexLocker_autoptrVar = CPointerVarOf<GMutexLocker_autoptr>

typealias GMutexLocker_autoptr = COpaquePointer

typealias GMutexLocker_listautoptrVar = CPointerVarOf<GMutexLocker_listautoptr>

typealias GMutexLocker_listautoptr = CPointer<GList>

typealias GMutexLocker_slistautoptrVar = CPointerVarOf<GMutexLocker_slistautoptr>

typealias GMutexLocker_slistautoptr = CPointer<GSList>

typealias GTimer_autoptrVar = CPointerVarOf<GTimer_autoptr>

typealias GTimer_autoptr = CPointer<GTimer>

typealias GTimer_listautoptrVar = CPointerVarOf<GTimer_listautoptr>

typealias GTimer_listautoptr = CPointer<GList>

typealias GTimer_slistautoptrVar = CPointerVarOf<GTimer_slistautoptr>

typealias GTimer_slistautoptr = CPointer<GSList>

typealias GTimeZone_autoptrVar = CPointerVarOf<GTimeZone_autoptr>

typealias GTimeZone_autoptr = CPointer<GTimeZone>

typealias GTimeZone_listautoptrVar = CPointerVarOf<GTimeZone_listautoptr>

typealias GTimeZone_listautoptr = CPointer<GList>

typealias GTimeZone_slistautoptrVar = CPointerVarOf<GTimeZone_slistautoptr>

typealias GTimeZone_slistautoptr = CPointer<GSList>

typealias GTree_autoptrVar = CPointerVarOf<GTree_autoptr>

typealias GTree_autoptr = CPointer<GTree>

typealias GTree_listautoptrVar = CPointerVarOf<GTree_listautoptr>

typealias GTree_listautoptr = CPointer<GList>

typealias GTree_slistautoptrVar = CPointerVarOf<GTree_slistautoptr>

typealias GTree_slistautoptr = CPointer<GSList>

typealias GVariant_autoptrVar = CPointerVarOf<GVariant_autoptr>

typealias GVariant_autoptr = CPointer<GVariant>

typealias GVariant_listautoptrVar = CPointerVarOf<GVariant_listautoptr>

typealias GVariant_listautoptr = CPointer<GList>

typealias GVariant_slistautoptrVar = CPointerVarOf<GVariant_slistautoptr>

typealias GVariant_slistautoptr = CPointer<GSList>

typealias GVariantBuilder_autoptrVar = CPointerVarOf<GVariantBuilder_autoptr>

typealias GVariantBuilder_autoptr = CPointer<GVariantBuilder>

typealias GVariantBuilder_listautoptrVar = CPointerVarOf<GVariantBuilder_listautoptr>

typealias GVariantBuilder_listautoptr = CPointer<GList>

typealias GVariantBuilder_slistautoptrVar = CPointerVarOf<GVariantBuilder_slistautoptr>

typealias GVariantBuilder_slistautoptr = CPointer<GSList>

typealias GVariantIter_autoptrVar = CPointerVarOf<GVariantIter_autoptr>

typealias GVariantIter_autoptr = CPointer<GVariantIter>

typealias GVariantIter_listautoptrVar = CPointerVarOf<GVariantIter_listautoptr>

typealias GVariantIter_listautoptr = CPointer<GList>

typealias GVariantIter_slistautoptrVar = CPointerVarOf<GVariantIter_slistautoptr>

typealias GVariantIter_slistautoptr = CPointer<GSList>

typealias GVariantDict_autoptrVar = CPointerVarOf<GVariantDict_autoptr>

typealias GVariantDict_autoptr = CPointer<GVariantDict>

typealias GVariantDict_listautoptrVar = CPointerVarOf<GVariantDict_listautoptr>

typealias GVariantDict_listautoptr = CPointer<GList>

typealias GVariantDict_slistautoptrVar = CPointerVarOf<GVariantDict_slistautoptr>

typealias GVariantDict_slistautoptr = CPointer<GSList>

typealias GVariantType_autoptrVar = CPointerVarOf<GVariantType_autoptr>

typealias GVariantType_autoptr = CPointer<GVariantType>

typealias GVariantType_listautoptrVar = CPointerVarOf<GVariantType_listautoptr>

typealias GVariantType_listautoptr = CPointer<GList>

typealias GVariantType_slistautoptrVar = CPointerVarOf<GVariantType_slistautoptr>

typealias GVariantType_slistautoptr = CPointer<GSList>

typealias GTypeVar = ULongVarOf<GType>

typealias GType = gsize

typealias GValue = _GValue

typealias GTypeCValue = _GTypeCValue

typealias GTypePlugin = _GTypePlugin

typealias GTypeClass = _GTypeClass

typealias GTypeInterface = _GTypeInterface

typealias GTypeInstance = _GTypeInstance

typealias GBaseInitFuncVar = CPointerVarOf<GBaseInitFunc>

typealias GBaseInitFunc = CPointer<CFunction<(gpointer?) -> Unit>>

typealias GBaseFinalizeFuncVar = CPointerVarOf<GBaseFinalizeFunc>

typealias GBaseFinalizeFunc = CPointer<CFunction<(gpointer?) -> Unit>>

typealias GClassInitFuncVar = CPointerVarOf<GClassInitFunc>

typealias GClassInitFunc = CPointer<CFunction<(gpointer?, gpointer?) -> Unit>>

typealias GClassFinalizeFuncVar = CPointerVarOf<GClassFinalizeFunc>

typealias GClassFinalizeFunc = CPointer<CFunction<(gpointer?, gpointer?) -> Unit>>

typealias GInstanceInitFuncVar = CPointerVarOf<GInstanceInitFunc>

typealias GInstanceInitFunc = CPointer<CFunction<(CPointer<GTypeInstance>?, gpointer?) -> Unit>>

typealias GTypeValueTable = _GTypeValueTable

typealias GTypeInfo = _GTypeInfo

typealias GTypeFundamentalInfo = _GTypeFundamentalInfo

typealias GInterfaceInitFuncVar = CPointerVarOf<GInterfaceInitFunc>

typealias GInterfaceInitFunc = CPointer<CFunction<(gpointer?, gpointer?) -> Unit>>

typealias GInterfaceFinalizeFuncVar = CPointerVarOf<GInterfaceFinalizeFunc>

typealias GInterfaceFinalizeFunc = CPointer<CFunction<(gpointer?, gpointer?) -> Unit>>

typealias GInterfaceInfo = _GInterfaceInfo

typealias GTypeQuery = _GTypeQuery

typealias GTypeClassCacheFuncVar = CPointerVarOf<GTypeClassCacheFunc>

typealias GTypeClassCacheFunc = CPointer<CFunction<(gpointer?, CPointer<GTypeClass>?) -> gboolean>>

typealias GTypeInterfaceCheckFuncVar = CPointerVarOf<GTypeInterfaceCheckFunc>

typealias GTypeInterfaceCheckFunc = CPointer<CFunction<(gpointer?, gpointer?) -> Unit>>

typealias GValueTransformVar = CPointerVarOf<GValueTransform>

typealias GValueTransform = CPointer<CFunction<(CPointer<GValue>?, CPointer<GValue>?) -> Unit>>

typealias GParamSpec = _GParamSpec

typealias GParamSpecClass = _GParamSpecClass

typealias GParameter = _GParameter

typealias GParamSpecPool = _GParamSpecPool

typealias GParamSpecTypeInfo = _GParamSpecTypeInfo

typealias GClosure = _GClosure

typealias GClosureNotifyVar = CPointerVarOf<GClosureNotify>

typealias GClosureNotify = CPointer<CFunction<(gpointer?, CPointer<GClosure>?) -> Unit>>

typealias GClosureNotifyData = _GClosureNotifyData

typealias GCallbackVar = CPointerVarOf<GCallback>

typealias GCallback = CPointer<CFunction<() -> Unit>>

typealias GClosureMarshalVar = CPointerVarOf<GClosureMarshal>

typealias GClosureMarshal = CPointer<CFunction<(CPointer<GClosure>?, CPointer<GValue>?, guint, CPointer<GValue>?, gpointer?, gpointer?) -> Unit>>

typealias GVaClosureMarshalVar = CPointerVarOf<GVaClosureMarshal>

typealias GVaClosureMarshal = CPointer<CFunction<(CPointer<GClosure>?, CPointer<GValue>?, gpointer?, va_list?, gpointer?, Int, CPointer<GTypeVar>?) -> Unit>>

typealias GCClosure = _GCClosure

typealias GSignalQuery = _GSignalQuery

typealias GSignalInvocationHint = _GSignalInvocationHint

typealias GSignalCMarshallerVar = CPointerVarOf<GSignalCMarshaller>

typealias GSignalCMarshaller = GClosureMarshal

typealias GSignalCVaMarshallerVar = CPointerVarOf<GSignalCVaMarshaller>

typealias GSignalCVaMarshaller = GVaClosureMarshal

typealias GSignalEmissionHookVar = CPointerVarOf<GSignalEmissionHook>

typealias GSignalEmissionHook = CPointer<CFunction<(CPointer<GSignalInvocationHint>?, guint, CPointer<GValue>?, gpointer?) -> gboolean>>

typealias GSignalAccumulatorVar = CPointerVarOf<GSignalAccumulator>

typealias GSignalAccumulator = CPointer<CFunction<(CPointer<GSignalInvocationHint>?, CPointer<GValue>?, CPointer<GValue>?, gpointer?) -> gboolean>>

typealias GBoxedCopyFuncVar = CPointerVarOf<GBoxedCopyFunc>

typealias GBoxedCopyFunc = CPointer<CFunction<(gpointer?) -> gpointer?>>

typealias GBoxedFreeFuncVar = CPointerVarOf<GBoxedFreeFunc>

typealias GBoxedFreeFunc = CPointer<CFunction<(gpointer?) -> Unit>>

typealias GObject = _GObject

typealias GObjectConstructParam = _GObjectConstructParam

typealias GObjectClass = _GObjectClass

typealias GInitiallyUnowned = _GObject

typealias GInitiallyUnownedClass = _GObjectClass

typealias GObjectGetPropertyFuncVar = CPointerVarOf<GObjectGetPropertyFunc>

typealias GObjectGetPropertyFunc = CPointer<CFunction<(CPointer<GObject>?, guint, CPointer<GValue>?, CPointer<GParamSpec>?) -> Unit>>

typealias GObjectSetPropertyFuncVar = CPointerVarOf<GObjectSetPropertyFunc>

typealias GObjectSetPropertyFunc = CPointer<CFunction<(CPointer<GObject>?, guint, CPointer<GValue>?, CPointer<GParamSpec>?) -> Unit>>

typealias GObjectFinalizeFuncVar = CPointerVarOf<GObjectFinalizeFunc>

typealias GObjectFinalizeFunc = CPointer<CFunction<(CPointer<GObject>?) -> Unit>>

typealias GWeakNotifyVar = CPointerVarOf<GWeakNotify>

typealias GWeakNotify = CPointer<CFunction<(gpointer?, CPointer<GObject>?) -> Unit>>

typealias GToggleNotifyVar = CPointerVarOf<GToggleNotify>

typealias GToggleNotify = CPointer<CFunction<(gpointer?, CPointer<GObject>?, gboolean) -> Unit>>

typealias GBinding = _GBinding

typealias GBindingTransformFuncVar = CPointerVarOf<GBindingTransformFunc>

typealias GBindingTransformFunc = CPointer<CFunction<(CPointer<GBinding>?, CPointer<GValue>?, CPointer<GValue>?, gpointer?) -> gboolean>>

typealias GEnumValue = _GEnumValue

typealias GEnumClass = _GEnumClass

typealias GFlagsValue = _GFlagsValue

typealias GFlagsClass = _GFlagsClass

typealias GParamSpecChar = _GParamSpecChar

typealias GParamSpecUChar = _GParamSpecUChar

typealias GParamSpecBoolean = _GParamSpecBoolean

typealias GParamSpecInt = _GParamSpecInt

typealias GParamSpecUInt = _GParamSpecUInt

typealias GParamSpecLong = _GParamSpecLong

typealias GParamSpecULong = _GParamSpecULong

typealias GParamSpecInt64 = _GParamSpecInt64

typealias GParamSpecUInt64 = _GParamSpecUInt64

typealias GParamSpecUnichar = _GParamSpecUnichar

typealias GParamSpecEnum = _GParamSpecEnum

typealias GParamSpecFlags = _GParamSpecFlags

typealias GParamSpecFloat = _GParamSpecFloat

typealias GParamSpecDouble = _GParamSpecDouble

typealias GParamSpecString = _GParamSpecString

typealias GParamSpecParam = _GParamSpecParam

typealias GParamSpecBoxed = _GParamSpecBoxed

typealias GParamSpecPointer = _GParamSpecPointer

typealias GParamSpecValueArray = _GParamSpecValueArray

typealias GParamSpecObject = _GParamSpecObject

typealias GParamSpecOverride = _GParamSpecOverride

typealias GParamSpecGType = _GParamSpecGType

typealias GParamSpecVariant = _GParamSpecVariant

typealias GTypeModule = _GTypeModule

typealias GTypeModuleClass = _GTypeModuleClass

typealias GTypeModule_autoptrVar = CPointerVarOf<GTypeModule_autoptr>

typealias GTypeModule_autoptr = CPointer<GTypeModule>

typealias GTypeModule_listautoptrVar = CPointerVarOf<GTypeModule_listautoptr>

typealias GTypeModule_listautoptr = CPointer<GList>

typealias GTypeModule_slistautoptrVar = CPointerVarOf<GTypeModule_slistautoptr>

typealias GTypeModule_slistautoptr = CPointer<GSList>

typealias GTypePluginUseVar = CPointerVarOf<GTypePluginUse>

typealias GTypePluginUse = CPointer<CFunction<(CPointer<GTypePlugin>?) -> Unit>>

typealias GTypePluginUnuseVar = CPointerVarOf<GTypePluginUnuse>

typealias GTypePluginUnuse = CPointer<CFunction<(CPointer<GTypePlugin>?) -> Unit>>

typealias GTypePluginCompleteTypeInfoVar = CPointerVarOf<GTypePluginCompleteTypeInfo>

typealias GTypePluginCompleteTypeInfo = CPointer<CFunction<(CPointer<GTypePlugin>?, GType, CPointer<GTypeInfo>?, CPointer<GTypeValueTable>?) -> Unit>>

typealias GTypePluginCompleteInterfaceInfoVar = CPointerVarOf<GTypePluginCompleteInterfaceInfo>

typealias GTypePluginCompleteInterfaceInfo = CPointer<CFunction<(CPointer<GTypePlugin>?, GType, GType, CPointer<GInterfaceInfo>?) -> Unit>>

typealias GTypePluginClass = _GTypePluginClass

typealias GValueArray = _GValueArray

typealias gchararrayVar = CPointerVarOf<gchararray>

typealias gchararray = CPointer<gcharVar>

typealias GClosure_autoptrVar = CPointerVarOf<GClosure_autoptr>

typealias GClosure_autoptr = CPointer<GClosure>

typealias GClosure_listautoptrVar = CPointerVarOf<GClosure_listautoptr>

typealias GClosure_listautoptr = CPointer<GList>

typealias GClosure_slistautoptrVar = CPointerVarOf<GClosure_slistautoptr>

typealias GClosure_slistautoptr = CPointer<GSList>

typealias GObject_autoptrVar = CPointerVarOf<GObject_autoptr>

typealias GObject_autoptr = CPointer<GObject>

typealias GObject_listautoptrVar = CPointerVarOf<GObject_listautoptr>

typealias GObject_listautoptr = CPointer<GList>

typealias GObject_slistautoptrVar = CPointerVarOf<GObject_slistautoptr>

typealias GObject_slistautoptr = CPointer<GSList>

typealias GInitiallyUnowned_autoptrVar = CPointerVarOf<GInitiallyUnowned_autoptr>

typealias GInitiallyUnowned_autoptr = CPointer<GInitiallyUnowned>

typealias GInitiallyUnowned_listautoptrVar = CPointerVarOf<GInitiallyUnowned_listautoptr>

typealias GInitiallyUnowned_listautoptr = CPointer<GList>

typealias GInitiallyUnowned_slistautoptrVar = CPointerVarOf<GInitiallyUnowned_slistautoptr>

typealias GInitiallyUnowned_slistautoptr = CPointer<GSList>

typealias JsonNode = _JsonNode

typealias JsonObject = _JsonObject

typealias JsonArray = _JsonArray

typealias JsonObjectForeachVar = CPointerVarOf<JsonObjectForeach>

typealias JsonObjectForeach = CPointer<CFunction<(CPointer<JsonObject>?, CPointer<gcharVar>?, CPointer<JsonNode>?, gpointer?) -> Unit>>

typealias JsonArrayForeachVar = CPointerVarOf<JsonArrayForeach>

typealias JsonArrayForeach = CPointer<CFunction<(CPointer<JsonArray>?, guint, CPointer<JsonNode>?, gpointer?) -> Unit>>

typealias JsonArray_autoptrVar = CPointerVarOf<JsonArray_autoptr>

typealias JsonArray_autoptr = CPointer<JsonArray>

typealias JsonArray_listautoptrVar = CPointerVarOf<JsonArray_listautoptr>

typealias JsonArray_listautoptr = CPointer<GList>

typealias JsonArray_slistautoptrVar = CPointerVarOf<JsonArray_slistautoptr>

typealias JsonArray_slistautoptr = CPointer<GSList>

typealias JsonObject_autoptrVar = CPointerVarOf<JsonObject_autoptr>

typealias JsonObject_autoptr = CPointer<JsonObject>

typealias JsonObject_listautoptrVar = CPointerVarOf<JsonObject_listautoptr>

typealias JsonObject_listautoptr = CPointer<GList>

typealias JsonObject_slistautoptrVar = CPointerVarOf<JsonObject_slistautoptr>

typealias JsonObject_slistautoptr = CPointer<GSList>

typealias JsonNode_autoptrVar = CPointerVarOf<JsonNode_autoptr>

typealias JsonNode_autoptr = CPointer<JsonNode>

typealias JsonNode_listautoptrVar = CPointerVarOf<JsonNode_listautoptr>

typealias JsonNode_listautoptr = CPointer<GList>

typealias JsonNode_slistautoptrVar = CPointerVarOf<JsonNode_slistautoptr>

typealias JsonNode_slistautoptr = CPointer<GSList>

typealias JsonBuilderPrivate = _JsonBuilderPrivate

typealias JsonBuilder = _JsonBuilder

typealias JsonBuilderClass = _JsonBuilderClass

typealias JsonBuilder_autoptrVar = CPointerVarOf<JsonBuilder_autoptr>

typealias JsonBuilder_autoptr = CPointer<JsonBuilder>

typealias JsonBuilder_listautoptrVar = CPointerVarOf<JsonBuilder_listautoptr>

typealias JsonBuilder_listautoptr = CPointer<GList>

typealias JsonBuilder_slistautoptrVar = CPointerVarOf<JsonBuilder_slistautoptr>

typealias JsonBuilder_slistautoptr = CPointer<GSList>

typealias GTlsPasswordFlagsVar = UIntVarOf<GTlsPasswordFlags>

typealias GTlsPasswordFlags = _GTlsPasswordFlags

typealias GAppLaunchContextPrivate = _GAppLaunchContextPrivate

typealias GAppLaunchContext = _GAppLaunchContext

typealias GAppInfo = _GAppInfo

typealias GAsyncResult = _GAsyncResult

typealias GAsyncInitable = _GAsyncInitable

typealias GInputStreamPrivate = _GInputStreamPrivate

typealias GInputStream = _GInputStream

typealias GFilterInputStream = _GFilterInputStream

typealias GBufferedInputStreamPrivate = _GBufferedInputStreamPrivate

typealias GBufferedInputStream = _GBufferedInputStream

typealias GOutputStreamPrivate = _GOutputStreamPrivate

typealias GOutputStream = _GOutputStream

typealias GFilterOutputStream = _GFilterOutputStream

typealias GBufferedOutputStreamPrivate = _GBufferedOutputStreamPrivate

typealias GBufferedOutputStream = _GBufferedOutputStream

typealias GCancellablePrivate = _GCancellablePrivate

typealias GCancellable = _GCancellable

typealias GCharsetConverter = _GCharsetConverter

typealias GConverter = _GConverter

typealias GConverterInputStreamPrivate = _GConverterInputStreamPrivate

typealias GConverterInputStream = _GConverterInputStream

typealias GConverterOutputStreamPrivate = _GConverterOutputStreamPrivate

typealias GConverterOutputStream = _GConverterOutputStream

typealias GDatagramBased = _GDatagramBased

typealias GDataInputStreamPrivate = _GDataInputStreamPrivate

typealias GDataInputStream = _GDataInputStream

typealias GSimplePermission = _GSimplePermission

typealias GZlibCompressor = _GZlibCompressor

typealias GZlibDecompressor = _GZlibDecompressor

typealias GSimpleActionGroupPrivate = _GSimpleActionGroupPrivate

typealias GSimpleActionGroup = _GSimpleActionGroup

typealias GRemoteActionGroup = _GRemoteActionGroup

typealias GDBusActionGroup = _GDBusActionGroup

typealias GActionMap = _GActionMap

typealias GActionGroup = _GActionGroup

typealias GPropertyAction = _GPropertyAction

typealias GSimpleAction = _GSimpleAction

typealias GAction = _GAction

typealias GApplicationPrivate = _GApplicationPrivate

typealias GApplication = _GApplication

typealias GApplicationCommandLinePrivate = _GApplicationCommandLinePrivate

typealias GApplicationCommandLine = _GApplicationCommandLine

typealias GSettingsBackend = _GSettingsBackend

typealias GSettingsPrivate = _GSettingsPrivate

typealias GSettings = _GSettings

typealias GPermissionPrivate = _GPermissionPrivate

typealias GPermission = _GPermission

typealias GMenuModelPrivate = _GMenuModelPrivate

typealias GMenuModel = _GMenuModel

typealias GNotification = _GNotification

typealias GDrive = _GDrive

typealias GFileEnumeratorPrivate = _GFileEnumeratorPrivate

typealias GFileEnumerator = _GFileEnumerator

typealias GFileMonitorPrivate = _GFileMonitorPrivate

typealias GFileMonitor = _GFileMonitor

typealias GFile = _GFile

typealias GFileInfo = _GFileInfo

typealias GFileAttributeMatcher = _GFileAttributeMatcher

typealias GFileAttributeInfo = _GFileAttributeInfo

typealias GFileAttributeInfoList = _GFileAttributeInfoList

typealias GFileDescriptorBased = _GFileDescriptorBased

typealias GFileInputStreamPrivate = _GFileInputStreamPrivate

typealias GFileInputStream = _GFileInputStream

typealias GFileOutputStreamPrivate = _GFileOutputStreamPrivate

typealias GFileOutputStream = _GFileOutputStream

typealias GIOStreamPrivate = _GIOStreamPrivate

typealias GIOStream = _GIOStream

typealias GFileIOStreamPrivate = _GFileIOStreamPrivate

typealias GFileIOStream = _GFileIOStream

typealias GFileIcon = _GFileIcon

typealias GFilenameCompleter = _GFilenameCompleter

typealias GIcon = _GIcon

typealias GInetAddressPrivate = _GInetAddressPrivate

typealias GInetAddress = _GInetAddress

typealias GInetAddressMaskPrivate = _GInetAddressMaskPrivate

typealias GInetAddressMask = _GInetAddressMask

typealias GSocketAddress = _GSocketAddress

typealias GInetSocketAddressPrivate = _GInetSocketAddressPrivate

typealias GInetSocketAddress = _GInetSocketAddress

typealias GNativeSocketAddress = _GNativeSocketAddress

typealias GInitable = _GInitable

typealias GIOModule = _GIOModule

typealias GIOExtensionPoint = _GIOExtensionPoint

typealias GIOExtension = _GIOExtension

typealias GIOSchedulerJob = _GIOSchedulerJob

typealias GIOStreamAdapter = _GIOStreamAdapter

typealias GLoadableIcon = _GLoadableIcon

typealias GBytesIcon = _GBytesIcon

typealias GMemoryInputStreamPrivate = _GMemoryInputStreamPrivate

typealias GMemoryInputStream = _GMemoryInputStream

typealias GMemoryOutputStreamPrivate = _GMemoryOutputStreamPrivate

typealias GMemoryOutputStream = _GMemoryOutputStream

typealias GMount = _GMount

typealias GMountOperationPrivate = _GMountOperationPrivate

typealias GMountOperation = _GMountOperation

typealias GNetworkAddressPrivate = _GNetworkAddressPrivate

typealias GNetworkAddress = _GNetworkAddress

typealias GNetworkMonitor = _GNetworkMonitor

typealias GNetworkServicePrivate = _GNetworkServicePrivate

typealias GNetworkService = _GNetworkService

typealias GSimpleIOStream = _GSimpleIOStream

typealias GPollableInputStream = _GPollableInputStream

typealias GPollableOutputStream = _GPollableOutputStream

typealias GResolverPrivate = _GResolverPrivate

typealias GResolver = _GResolver

typealias GResource = _GResource

typealias GSeekable = _GSeekable

typealias GSimpleAsyncResult = _GSimpleAsyncResult

typealias GSocketPrivate = _GSocketPrivate

typealias GSocket = _GSocket

typealias GSocketControlMessagePrivate = _GSocketControlMessagePrivate

typealias GSocketControlMessage = _GSocketControlMessage

typealias GSocketClientPrivate = _GSocketClientPrivate

typealias GSocketClient = _GSocketClient

typealias GSocketConnectionPrivate = _GSocketConnectionPrivate

typealias GSocketConnection = _GSocketConnection

typealias GSocketListenerPrivate = _GSocketListenerPrivate

typealias GSocketListener = _GSocketListener

typealias GSocketServicePrivate = _GSocketServicePrivate

typealias GSocketService = _GSocketService

typealias GSocketAddressEnumerator = _GSocketAddressEnumerator

typealias GSocketConnectable = _GSocketConnectable

typealias GSrvTarget = _GSrvTarget

typealias GTask = _GTask

typealias GTcpConnectionPrivate = _GTcpConnectionPrivate

typealias GTcpConnection = _GTcpConnection

typealias GTcpWrapperConnectionPrivate = _GTcpWrapperConnectionPrivate

typealias GTcpWrapperConnection = _GTcpWrapperConnection

typealias GThreadedSocketServicePrivate = _GThreadedSocketServicePrivate

typealias GThreadedSocketService = _GThreadedSocketService

typealias GDtlsConnection = _GDtlsConnection

typealias GDtlsClientConnection = _GDtlsClientConnection

typealias GDtlsServerConnection = _GDtlsServerConnection

typealias GThemedIcon = _GThemedIcon

typealias GTlsCertificatePrivate = _GTlsCertificatePrivate

typealias GTlsCertificate = _GTlsCertificate

typealias GTlsClientConnection = _GTlsClientConnection

typealias GTlsConnectionPrivate = _GTlsConnectionPrivate

typealias GTlsConnection = _GTlsConnection

typealias GTlsDatabasePrivate = _GTlsDatabasePrivate

typealias GTlsDatabase = _GTlsDatabase

typealias GTlsFileDatabase = _GTlsFileDatabase

typealias GTlsInteractionPrivate = _GTlsInteractionPrivate

typealias GTlsInteraction = _GTlsInteraction

typealias GTlsPasswordPrivate = _GTlsPasswordPrivate

typealias GTlsPassword = _GTlsPassword

typealias GTlsServerConnection = _GTlsServerConnection

typealias GVfs = _GVfs

typealias GProxyResolver = _GProxyResolver

typealias GProxy = _GProxy

typealias GProxyAddressPrivate = _GProxyAddressPrivate

typealias GProxyAddress = _GProxyAddress

typealias GProxyAddressEnumeratorPrivate = _GProxyAddressEnumeratorPrivate

typealias GProxyAddressEnumerator = _GProxyAddressEnumerator

typealias GVolume = _GVolume

typealias GVolumeMonitor = _GVolumeMonitor

typealias GAsyncReadyCallbackVar = CPointerVarOf<GAsyncReadyCallback>

typealias GAsyncReadyCallback = CPointer<CFunction<(CPointer<GObject>?, CPointer<GAsyncResult>?, gpointer?) -> Unit>>

typealias GFileProgressCallbackVar = CPointerVarOf<GFileProgressCallback>

typealias GFileProgressCallback = CPointer<CFunction<(goffset, goffset, gpointer?) -> Unit>>

typealias GFileReadMoreCallbackVar = CPointerVarOf<GFileReadMoreCallback>

typealias GFileReadMoreCallback = CPointer<CFunction<(CPointer<ByteVar>?, goffset, gpointer?) -> gboolean>>

typealias GFileMeasureProgressCallbackVar = CPointerVarOf<GFileMeasureProgressCallback>

typealias GFileMeasureProgressCallback = CPointer<CFunction<(gboolean, guint64, guint64, guint64, gpointer?) -> Unit>>

typealias GIOSchedulerJobFuncVar = CPointerVarOf<GIOSchedulerJobFunc>

typealias GIOSchedulerJobFunc = CPointer<CFunction<(CPointer<GIOSchedulerJob>?, CPointer<GCancellable>?, gpointer?) -> gboolean>>

typealias GSimpleAsyncThreadFuncVar = CPointerVarOf<GSimpleAsyncThreadFunc>

typealias GSimpleAsyncThreadFunc = CPointer<CFunction<(CPointer<GSimpleAsyncResult>?, CPointer<GObject>?, CPointer<GCancellable>?) -> Unit>>

typealias GSocketSourceFuncVar = CPointerVarOf<GSocketSourceFunc>

typealias GSocketSourceFunc = CPointer<CFunction<(CPointer<GSocket>?, GIOCondition, gpointer?) -> gboolean>>

typealias GDatagramBasedSourceFuncVar = CPointerVarOf<GDatagramBasedSourceFunc>

typealias GDatagramBasedSourceFunc = CPointer<CFunction<(CPointer<GDatagramBased>?, GIOCondition, gpointer?) -> gboolean>>

typealias GInputVector = _GInputVector

typealias GInputMessage = _GInputMessage

typealias GOutputVector = _GOutputVector

typealias GOutputMessage = _GOutputMessage

typealias GCredentials = _GCredentials

typealias GUnixCredentialsMessage = _GUnixCredentialsMessage

typealias GUnixFDList = _GUnixFDList

typealias GDBusMessage = _GDBusMessage

typealias GDBusConnection = _GDBusConnection

typealias GDBusProxyPrivate = _GDBusProxyPrivate

typealias GDBusProxy = _GDBusProxy

typealias GDBusMethodInvocation = _GDBusMethodInvocation

typealias GDBusServer = _GDBusServer

typealias GDBusAuthObserver = _GDBusAuthObserver

typealias GDBusErrorEntry = _GDBusErrorEntry

typealias GDBusInterfaceMethodCallFuncVar = CPointerVarOf<GDBusInterfaceMethodCallFunc>

typealias GDBusInterfaceMethodCallFunc = CPointer<CFunction<(CPointer<GDBusConnection>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<GVariant>?, CPointer<GDBusMethodInvocation>?, gpointer?) -> Unit>>

typealias GDBusInterfaceGetPropertyFuncVar = CPointerVarOf<GDBusInterfaceGetPropertyFunc>

typealias GDBusInterfaceGetPropertyFunc = CPointer<CFunction<(CPointer<GDBusConnection>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<CPointerVar<GError>>?, gpointer?) -> CPointer<GVariant>?>>

typealias GDBusInterfaceSetPropertyFuncVar = CPointerVarOf<GDBusInterfaceSetPropertyFunc>

typealias GDBusInterfaceSetPropertyFunc = CPointer<CFunction<(CPointer<GDBusConnection>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<GVariant>?, CPointer<CPointerVar<GError>>?, gpointer?) -> gboolean>>

typealias GDBusInterfaceVTable = _GDBusInterfaceVTable

typealias GDBusSubtreeEnumerateFuncVar = CPointerVarOf<GDBusSubtreeEnumerateFunc>

typealias GDBusSubtreeEnumerateFunc = CPointer<CFunction<(CPointer<GDBusConnection>?, CPointer<gcharVar>?, CPointer<gcharVar>?, gpointer?) -> CPointer<CPointerVar<gcharVar>>?>>

typealias GDBusAnnotationInfo = _GDBusAnnotationInfo

typealias GDBusArgInfo = _GDBusArgInfo

typealias GDBusMethodInfo = _GDBusMethodInfo

typealias GDBusSignalInfo = _GDBusSignalInfo

typealias GDBusPropertyInfo = _GDBusPropertyInfo

typealias GDBusInterfaceInfo = _GDBusInterfaceInfo

typealias GDBusSubtreeIntrospectFuncVar = CPointerVarOf<GDBusSubtreeIntrospectFunc>

typealias GDBusSubtreeIntrospectFunc = CPointer<CFunction<(CPointer<GDBusConnection>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<gcharVar>?, gpointer?) -> CPointer<CPointerVar<GDBusInterfaceInfo>>?>>

typealias GDBusSubtreeDispatchFuncVar = CPointerVarOf<GDBusSubtreeDispatchFunc>

typealias GDBusSubtreeDispatchFunc = CPointer<CFunction<(CPointer<GDBusConnection>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<gpointerVar>?, gpointer?) -> CPointer<GDBusInterfaceVTable>?>>

typealias GDBusSubtreeVTable = _GDBusSubtreeVTable

typealias GDBusNodeInfo = _GDBusNodeInfo

typealias GCancellableSourceFuncVar = CPointerVarOf<GCancellableSourceFunc>

typealias GCancellableSourceFunc = CPointer<CFunction<(CPointer<GCancellable>?, gpointer?) -> gboolean>>

typealias GPollableSourceFuncVar = CPointerVarOf<GPollableSourceFunc>

typealias GPollableSourceFunc = CPointer<CFunction<(CPointer<GObject>?, gpointer?) -> gboolean>>

typealias GDBusInterface = _GDBusInterface

typealias GDBusInterfaceSkeletonPrivate = _GDBusInterfaceSkeletonPrivate

typealias GDBusInterfaceSkeleton = _GDBusInterfaceSkeleton

typealias GDBusObject = _GDBusObject

typealias GDBusObjectSkeletonPrivate = _GDBusObjectSkeletonPrivate

typealias GDBusObjectSkeleton = _GDBusObjectSkeleton

typealias GDBusObjectProxyPrivate = _GDBusObjectProxyPrivate

typealias GDBusObjectProxy = _GDBusObjectProxy

typealias GDBusObjectManager = _GDBusObjectManager

typealias GDBusObjectManagerClientPrivate = _GDBusObjectManagerClientPrivate

typealias GDBusObjectManagerClient = _GDBusObjectManagerClient

typealias GDBusObjectManagerServerPrivate = _GDBusObjectManagerServerPrivate

typealias GDBusObjectManagerServer = _GDBusObjectManagerServer

typealias GDBusProxyTypeFuncVar = CPointerVarOf<GDBusProxyTypeFunc>

typealias GDBusProxyTypeFunc = CPointer<CFunction<(CPointer<GDBusObjectManagerClient>?, CPointer<gcharVar>?, CPointer<gcharVar>?, gpointer?) -> GType>>

typealias GTestDBus = _GTestDBus

typealias GSubprocess = _GSubprocess

typealias GSubprocessLauncher = _GSubprocessLauncher

typealias GActionInterface = _GActionInterface

typealias GActionGroupInterface = _GActionGroupInterface

typealias GActionMapInterface = _GActionMapInterface

typealias GActionEntry = _GActionEntry

typealias GAppLaunchContextClass = _GAppLaunchContextClass

typealias GAppInfoIface = _GAppInfoIface

typealias GAppInfoMonitor = _GAppInfoMonitor

typealias GApplicationClass = _GApplicationClass

typealias GApplicationCommandLineClass = _GApplicationCommandLineClass

typealias GInitableIface = _GInitableIface

typealias GAsyncInitableIface = _GAsyncInitableIface

typealias GAsyncResultIface = _GAsyncResultIface

typealias GInputStreamClass = _GInputStreamClass

typealias GFilterInputStreamClass = _GFilterInputStreamClass

typealias GBufferedInputStreamClass = _GBufferedInputStreamClass

typealias GOutputStreamClass = _GOutputStreamClass

typealias GFilterOutputStreamClass = _GFilterOutputStreamClass

typealias GBufferedOutputStreamClass = _GBufferedOutputStreamClass

typealias GCancellableClass = _GCancellableClass

typealias GConverterIface = _GConverterIface

typealias GCharsetConverterClass = _GCharsetConverterClass

typealias GConverterInputStreamClass = _GConverterInputStreamClass

typealias GConverterOutputStreamClass = _GConverterOutputStreamClass

typealias GCredentialsClass = _GCredentialsClass

typealias GDatagramBasedInterface = _GDatagramBasedInterface

typealias GDataInputStreamClass = _GDataInputStreamClass

typealias GDataOutputStreamPrivate = _GDataOutputStreamPrivate

typealias GDataOutputStream = _GDataOutputStream

typealias GDataOutputStreamClass = _GDataOutputStreamClass

typealias GDBusSignalCallbackVar = CPointerVarOf<GDBusSignalCallback>

typealias GDBusSignalCallback = CPointer<CFunction<(CPointer<GDBusConnection>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<gcharVar>?, CPointer<GVariant>?, gpointer?) -> Unit>>

typealias GDBusMessageFilterFunctionVar = CPointerVarOf<GDBusMessageFilterFunction>

typealias GDBusMessageFilterFunction = CPointer<CFunction<(CPointer<GDBusConnection>?, CPointer<GDBusMessage>?, gboolean, gpointer?) -> CPointer<GDBusMessage>?>>

typealias GBusAcquiredCallbackVar = CPointerVarOf<GBusAcquiredCallback>

typealias GBusAcquiredCallback = CPointer<CFunction<(CPointer<GDBusConnection>?, CPointer<gcharVar>?, gpointer?) -> Unit>>

typealias GBusNameAcquiredCallbackVar = CPointerVarOf<GBusNameAcquiredCallback>

typealias GBusNameAcquiredCallback = CPointer<CFunction<(CPointer<GDBusConnection>?, CPointer<gcharVar>?, gpointer?) -> Unit>>

typealias GBusNameLostCallbackVar = CPointerVarOf<GBusNameLostCallback>

typealias GBusNameLostCallback = CPointer<CFunction<(CPointer<GDBusConnection>?, CPointer<gcharVar>?, gpointer?) -> Unit>>

typealias GBusNameAppearedCallbackVar = CPointerVarOf<GBusNameAppearedCallback>

typealias GBusNameAppearedCallback = CPointer<CFunction<(CPointer<GDBusConnection>?, CPointer<gcharVar>?, CPointer<gcharVar>?, gpointer?) -> Unit>>

typealias GBusNameVanishedCallbackVar = CPointerVarOf<GBusNameVanishedCallback>

typealias GBusNameVanishedCallback = CPointer<CFunction<(CPointer<GDBusConnection>?, CPointer<gcharVar>?, gpointer?) -> Unit>>

typealias GDBusProxyClass = _GDBusProxyClass

typealias GDriveIface = _GDriveIface

typealias GDtlsConnectionInterface = _GDtlsConnectionInterface

typealias GDtlsClientConnectionInterface = _GDtlsClientConnectionInterface

typealias GDtlsServerConnectionInterface = _GDtlsServerConnectionInterface

typealias GIconIface = _GIconIface

typealias GEmblem = _GEmblem

typealias GEmblemClass = _GEmblemClass

typealias GEmblemedIconPrivate = _GEmblemedIconPrivate

typealias GEmblemedIcon = _GEmblemedIcon

typealias GEmblemedIconClass = _GEmblemedIconClass

typealias GFileEnumeratorClass = _GFileEnumeratorClass

typealias GFileIface = _GFileIface

typealias GFileIconClass = _GFileIconClass

typealias GFileInfoClass = _GFileInfoClass

typealias GFileInputStreamClass = _GFileInputStreamClass

typealias GIOStreamClass = _GIOStreamClass

typealias GFileIOStreamClass = _GFileIOStreamClass

typealias GFileMonitorClass = _GFileMonitorClass

typealias GFilenameCompleterClass = _GFilenameCompleterClass

typealias GFileOutputStreamClass = _GFileOutputStreamClass

typealias GInetAddressClass = _GInetAddressClass

typealias GInetAddressMaskClass = _GInetAddressMaskClass

typealias GSocketAddressClass = _GSocketAddressClass

typealias GInetSocketAddressClass = _GInetSocketAddressClass

typealias GModule = _GModule

typealias GModuleCheckInitVar = CPointerVarOf<GModuleCheckInit>

typealias GModuleCheckInit = CPointer<CFunction<(CPointer<GModule>?) -> CPointer<gcharVar>?>>

typealias GModuleUnloadVar = CPointerVarOf<GModuleUnload>

typealias GModuleUnload = CPointer<CFunction<(CPointer<GModule>?) -> Unit>>

typealias GIOModuleScope = _GIOModuleScope

typealias GIOModuleClass = _GIOModuleClass

typealias GLoadableIconIface = _GLoadableIconIface

typealias GMemoryInputStreamClass = _GMemoryInputStreamClass

typealias GMemoryOutputStreamClass = _GMemoryOutputStreamClass

typealias GReallocFuncVar = CPointerVarOf<GReallocFunc>

typealias GReallocFunc = CPointer<CFunction<(gpointer?, gsize) -> gpointer?>>

typealias GMountIface = _GMountIface

typealias GMountOperationClass = _GMountOperationClass

typealias GVolumeMonitorClass = _GVolumeMonitorClass

typealias GNativeVolumeMonitor = _GNativeVolumeMonitor

typealias GNativeVolumeMonitorClass = _GNativeVolumeMonitorClass

typealias GNetworkAddressClass = _GNetworkAddressClass

typealias GNetworkMonitorInterface = _GNetworkMonitorInterface

typealias GNetworkServiceClass = _GNetworkServiceClass

typealias GPermissionClass = _GPermissionClass

typealias GPollableInputStreamInterface = _GPollableInputStreamInterface

typealias GPollableOutputStreamInterface = _GPollableOutputStreamInterface

typealias GProxyInterface = _GProxyInterface

typealias GProxyAddressClass = _GProxyAddressClass

typealias GSocketAddressEnumeratorClass = _GSocketAddressEnumeratorClass

typealias GProxyAddressEnumeratorClass = _GProxyAddressEnumeratorClass

typealias GProxyResolverInterface = _GProxyResolverInterface

typealias GResolverClass = _GResolverClass

typealias GStaticResource = _GStaticResource

typealias GSeekableIface = _GSeekableIface

typealias GSettingsSchemaSource = _GSettingsSchemaSource

typealias GSettingsSchema = _GSettingsSchema

typealias GSettingsSchemaKey = _GSettingsSchemaKey

typealias GSettingsClass = _GSettingsClass

typealias GSettingsBindSetMappingVar = CPointerVarOf<GSettingsBindSetMapping>

typealias GSettingsBindSetMapping = CPointer<CFunction<(CPointer<GValue>?, CPointer<GVariantType>?, gpointer?) -> CPointer<GVariant>?>>

typealias GSettingsBindGetMappingVar = CPointerVarOf<GSettingsBindGetMapping>

typealias GSettingsBindGetMapping = CPointer<CFunction<(CPointer<GValue>?, CPointer<GVariant>?, gpointer?) -> gboolean>>

typealias GSettingsGetMappingVar = CPointerVarOf<GSettingsGetMapping>

typealias GSettingsGetMapping = CPointer<CFunction<(CPointer<GVariant>?, CPointer<gpointerVar>?, gpointer?) -> gboolean>>

typealias GSimpleActionGroupClass = _GSimpleActionGroupClass

typealias GSimpleAsyncResultClass = _GSimpleAsyncResultClass

typealias GSocketClientClass = _GSocketClientClass

typealias GSocketConnectableIface = _GSocketConnectableIface

typealias GSocketClass = _GSocketClass

typealias GSocketConnectionClass = _GSocketConnectionClass

typealias GSocketControlMessageClass = _GSocketControlMessageClass

typealias GSocketListenerClass = _GSocketListenerClass

typealias GSocketServiceClass = _GSocketServiceClass

typealias GSimpleProxyResolverPrivate = _GSimpleProxyResolverPrivate

typealias GSimpleProxyResolver = _GSimpleProxyResolver

typealias GSimpleProxyResolverClass = _GSimpleProxyResolverClass

typealias GTaskClass = _GTaskClass

typealias GTaskThreadFuncVar = CPointerVarOf<GTaskThreadFunc>

typealias GTaskThreadFunc = CPointer<CFunction<(CPointer<GTask>?, gpointer?, gpointer?, CPointer<GCancellable>?) -> Unit>>

typealias GTcpConnectionClass = _GTcpConnectionClass

typealias GTcpWrapperConnectionClass = _GTcpWrapperConnectionClass

typealias GThemedIconClass = _GThemedIconClass

typealias GThreadedSocketServiceClass = _GThreadedSocketServiceClass

typealias GTlsBackend = _GTlsBackend

typealias GTlsBackendInterface = _GTlsBackendInterface

typealias GTlsCertificateClass = _GTlsCertificateClass

typealias GTlsConnectionClass = _GTlsConnectionClass

typealias GTlsClientConnectionInterface = _GTlsClientConnectionInterface

typealias GTlsDatabaseClass = _GTlsDatabaseClass

typealias GTlsFileDatabaseInterface = _GTlsFileDatabaseInterface

typealias GTlsInteractionClass = _GTlsInteractionClass

typealias GTlsServerConnectionInterface = _GTlsServerConnectionInterface

typealias GTlsPasswordClass = _GTlsPasswordClass

typealias GVfsFileLookupFuncVar = CPointerVarOf<GVfsFileLookupFunc>

typealias GVfsFileLookupFunc = CPointer<CFunction<(CPointer<GVfs>?, CPointer<ByteVar>?, gpointer?) -> CPointer<GFile>?>>

typealias GVfsClass = _GVfsClass

typealias GVolumeIface = _GVolumeIface

typealias GZlibCompressorClass = _GZlibCompressorClass

typealias GZlibDecompressorClass = _GZlibDecompressorClass

typealias GDBusInterfaceIface = _GDBusInterfaceIface

typealias GDBusInterfaceSkeletonClass = _GDBusInterfaceSkeletonClass

typealias GDBusObjectIface = _GDBusObjectIface

typealias GDBusObjectSkeletonClass = _GDBusObjectSkeletonClass

typealias GDBusObjectProxyClass = _GDBusObjectProxyClass

typealias GDBusObjectManagerIface = _GDBusObjectManagerIface

typealias GDBusObjectManagerClientClass = _GDBusObjectManagerClientClass

typealias GDBusObjectManagerServerClass = _GDBusObjectManagerServerClass

typealias GRemoteActionGroupInterface = _GRemoteActionGroupInterface

typealias GMenuAttributeIterPrivate = _GMenuAttributeIterPrivate

typealias GMenuAttributeIter = _GMenuAttributeIter

typealias GMenuLinkIterPrivate = _GMenuLinkIterPrivate

typealias GMenuLinkIter = _GMenuLinkIter

typealias GMenuModelClass = _GMenuModelClass

typealias GMenuAttributeIterClass = _GMenuAttributeIterClass

typealias GMenuLinkIterClass = _GMenuLinkIterClass

typealias GMenuItem = _GMenuItem

typealias GMenu = _GMenu

typealias GDBusMenuModel = _GDBusMenuModel

typealias GListModel = _GListModel

typealias GListModelInterface = _GListModelInterface

typealias GListModel_autoptrVar = CPointerVarOf<GListModel_autoptr>

typealias GListModel_autoptr = CPointer<GListModel>

typealias GListStore = _GListStore

typealias GListStore_autoptrVar = CPointerVarOf<GListStore_autoptr>

typealias GListStore_autoptr = CPointer<GListStore>

typealias GAction_autoptrVar = CPointerVarOf<GAction_autoptr>

typealias GAction_autoptr = CPointer<GAction>

typealias GAction_listautoptrVar = CPointerVarOf<GAction_listautoptr>

typealias GAction_listautoptr = CPointer<GList>

typealias GAction_slistautoptrVar = CPointerVarOf<GAction_slistautoptr>

typealias GAction_slistautoptr = CPointer<GSList>

typealias GActionMap_autoptrVar = CPointerVarOf<GActionMap_autoptr>

typealias GActionMap_autoptr = CPointer<GActionMap>

typealias GActionMap_listautoptrVar = CPointerVarOf<GActionMap_listautoptr>

typealias GActionMap_listautoptr = CPointer<GList>

typealias GActionMap_slistautoptrVar = CPointerVarOf<GActionMap_slistautoptr>

typealias GActionMap_slistautoptr = CPointer<GSList>

typealias GAppInfo_autoptrVar = CPointerVarOf<GAppInfo_autoptr>

typealias GAppInfo_autoptr = CPointer<GAppInfo>

typealias GAppInfo_listautoptrVar = CPointerVarOf<GAppInfo_listautoptr>

typealias GAppInfo_listautoptr = CPointer<GList>

typealias GAppInfo_slistautoptrVar = CPointerVarOf<GAppInfo_slistautoptr>

typealias GAppInfo_slistautoptr = CPointer<GSList>

typealias GAppLaunchContext_autoptrVar = CPointerVarOf<GAppLaunchContext_autoptr>

typealias GAppLaunchContext_autoptr = CPointer<GAppLaunchContext>

typealias GAppLaunchContext_listautoptrVar = CPointerVarOf<GAppLaunchContext_listautoptr>

typealias GAppLaunchContext_listautoptr = CPointer<GList>

typealias GAppLaunchContext_slistautoptrVar = CPointerVarOf<GAppLaunchContext_slistautoptr>

typealias GAppLaunchContext_slistautoptr = CPointer<GSList>

typealias GAppInfoMonitor_autoptrVar = CPointerVarOf<GAppInfoMonitor_autoptr>

typealias GAppInfoMonitor_autoptr = CPointer<GAppInfoMonitor>

typealias GAppInfoMonitor_listautoptrVar = CPointerVarOf<GAppInfoMonitor_listautoptr>

typealias GAppInfoMonitor_listautoptr = CPointer<GList>

typealias GAppInfoMonitor_slistautoptrVar = CPointerVarOf<GAppInfoMonitor_slistautoptr>

typealias GAppInfoMonitor_slistautoptr = CPointer<GSList>

typealias GApplicationCommandLine_autoptrVar = CPointerVarOf<GApplicationCommandLine_autoptr>

typealias GApplicationCommandLine_autoptr = CPointer<GApplicationCommandLine>

typealias GApplicationCommandLine_listautoptrVar = CPointerVarOf<GApplicationCommandLine_listautoptr>

typealias GApplicationCommandLine_listautoptr = CPointer<GList>

typealias GApplicationCommandLine_slistautoptrVar = CPointerVarOf<GApplicationCommandLine_slistautoptr>

typealias GApplicationCommandLine_slistautoptr = CPointer<GSList>

typealias GApplication_autoptrVar = CPointerVarOf<GApplication_autoptr>

typealias GApplication_autoptr = CPointer<GApplication>

typealias GApplication_listautoptrVar = CPointerVarOf<GApplication_listautoptr>

typealias GApplication_listautoptr = CPointer<GList>

typealias GApplication_slistautoptrVar = CPointerVarOf<GApplication_slistautoptr>

typealias GApplication_slistautoptr = CPointer<GSList>

typealias GAsyncInitable_autoptrVar = CPointerVarOf<GAsyncInitable_autoptr>

typealias GAsyncInitable_autoptr = CPointer<GAsyncInitable>

typealias GAsyncInitable_listautoptrVar = CPointerVarOf<GAsyncInitable_listautoptr>

typealias GAsyncInitable_listautoptr = CPointer<GList>

typealias GAsyncInitable_slistautoptrVar = CPointerVarOf<GAsyncInitable_slistautoptr>

typealias GAsyncInitable_slistautoptr = CPointer<GSList>

typealias GAsyncResult_autoptrVar = CPointerVarOf<GAsyncResult_autoptr>

typealias GAsyncResult_autoptr = CPointer<GAsyncResult>

typealias GAsyncResult_listautoptrVar = CPointerVarOf<GAsyncResult_listautoptr>

typealias GAsyncResult_listautoptr = CPointer<GList>

typealias GAsyncResult_slistautoptrVar = CPointerVarOf<GAsyncResult_slistautoptr>

typealias GAsyncResult_slistautoptr = CPointer<GSList>

typealias GBufferedInputStream_autoptrVar = CPointerVarOf<GBufferedInputStream_autoptr>

typealias GBufferedInputStream_autoptr = CPointer<GBufferedInputStream>

typealias GBufferedInputStream_listautoptrVar = CPointerVarOf<GBufferedInputStream_listautoptr>

typealias GBufferedInputStream_listautoptr = CPointer<GList>

typealias GBufferedInputStream_slistautoptrVar = CPointerVarOf<GBufferedInputStream_slistautoptr>

typealias GBufferedInputStream_slistautoptr = CPointer<GSList>

typealias GBufferedOutputStream_autoptrVar = CPointerVarOf<GBufferedOutputStream_autoptr>

typealias GBufferedOutputStream_autoptr = CPointer<GBufferedOutputStream>

typealias GBufferedOutputStream_listautoptrVar = CPointerVarOf<GBufferedOutputStream_listautoptr>

typealias GBufferedOutputStream_listautoptr = CPointer<GList>

typealias GBufferedOutputStream_slistautoptrVar = CPointerVarOf<GBufferedOutputStream_slistautoptr>

typealias GBufferedOutputStream_slistautoptr = CPointer<GSList>

typealias GBytesIcon_autoptrVar = CPointerVarOf<GBytesIcon_autoptr>

typealias GBytesIcon_autoptr = CPointer<GBytesIcon>

typealias GBytesIcon_listautoptrVar = CPointerVarOf<GBytesIcon_listautoptr>

typealias GBytesIcon_listautoptr = CPointer<GList>

typealias GBytesIcon_slistautoptrVar = CPointerVarOf<GBytesIcon_slistautoptr>

typealias GBytesIcon_slistautoptr = CPointer<GSList>

typealias GCancellable_autoptrVar = CPointerVarOf<GCancellable_autoptr>

typealias GCancellable_autoptr = CPointer<GCancellable>

typealias GCancellable_listautoptrVar = CPointerVarOf<GCancellable_listautoptr>

typealias GCancellable_listautoptr = CPointer<GList>

typealias GCancellable_slistautoptrVar = CPointerVarOf<GCancellable_slistautoptr>

typealias GCancellable_slistautoptr = CPointer<GSList>

typealias GCharsetConverter_autoptrVar = CPointerVarOf<GCharsetConverter_autoptr>

typealias GCharsetConverter_autoptr = CPointer<GCharsetConverter>

typealias GCharsetConverter_listautoptrVar = CPointerVarOf<GCharsetConverter_listautoptr>

typealias GCharsetConverter_listautoptr = CPointer<GList>

typealias GCharsetConverter_slistautoptrVar = CPointerVarOf<GCharsetConverter_slistautoptr>

typealias GCharsetConverter_slistautoptr = CPointer<GSList>

typealias GConverter_autoptrVar = CPointerVarOf<GConverter_autoptr>

typealias GConverter_autoptr = CPointer<GConverter>

typealias GConverter_listautoptrVar = CPointerVarOf<GConverter_listautoptr>

typealias GConverter_listautoptr = CPointer<GList>

typealias GConverter_slistautoptrVar = CPointerVarOf<GConverter_slistautoptr>

typealias GConverter_slistautoptr = CPointer<GSList>

typealias GConverterInputStream_autoptrVar = CPointerVarOf<GConverterInputStream_autoptr>

typealias GConverterInputStream_autoptr = CPointer<GConverterInputStream>

typealias GConverterInputStream_listautoptrVar = CPointerVarOf<GConverterInputStream_listautoptr>

typealias GConverterInputStream_listautoptr = CPointer<GList>

typealias GConverterInputStream_slistautoptrVar = CPointerVarOf<GConverterInputStream_slistautoptr>

typealias GConverterInputStream_slistautoptr = CPointer<GSList>

typealias GConverterOutputStream_autoptrVar = CPointerVarOf<GConverterOutputStream_autoptr>

typealias GConverterOutputStream_autoptr = CPointer<GConverterOutputStream>

typealias GConverterOutputStream_listautoptrVar = CPointerVarOf<GConverterOutputStream_listautoptr>

typealias GConverterOutputStream_listautoptr = CPointer<GList>

typealias GConverterOutputStream_slistautoptrVar = CPointerVarOf<GConverterOutputStream_slistautoptr>

typealias GConverterOutputStream_slistautoptr = CPointer<GSList>

typealias GCredentials_autoptrVar = CPointerVarOf<GCredentials_autoptr>

typealias GCredentials_autoptr = CPointer<GCredentials>

typealias GCredentials_listautoptrVar = CPointerVarOf<GCredentials_listautoptr>

typealias GCredentials_listautoptr = CPointer<GList>

typealias GCredentials_slistautoptrVar = CPointerVarOf<GCredentials_slistautoptr>

typealias GCredentials_slistautoptr = CPointer<GSList>

typealias GDatagramBased_autoptrVar = CPointerVarOf<GDatagramBased_autoptr>

typealias GDatagramBased_autoptr = CPointer<GDatagramBased>

typealias GDatagramBased_listautoptrVar = CPointerVarOf<GDatagramBased_listautoptr>

typealias GDatagramBased_listautoptr = CPointer<GList>

typealias GDatagramBased_slistautoptrVar = CPointerVarOf<GDatagramBased_slistautoptr>

typealias GDatagramBased_slistautoptr = CPointer<GSList>

typealias GDataInputStream_autoptrVar = CPointerVarOf<GDataInputStream_autoptr>

typealias GDataInputStream_autoptr = CPointer<GDataInputStream>

typealias GDataInputStream_listautoptrVar = CPointerVarOf<GDataInputStream_listautoptr>

typealias GDataInputStream_listautoptr = CPointer<GList>

typealias GDataInputStream_slistautoptrVar = CPointerVarOf<GDataInputStream_slistautoptr>

typealias GDataInputStream_slistautoptr = CPointer<GSList>

typealias GDataOutputStream_autoptrVar = CPointerVarOf<GDataOutputStream_autoptr>

typealias GDataOutputStream_autoptr = CPointer<GDataOutputStream>

typealias GDataOutputStream_listautoptrVar = CPointerVarOf<GDataOutputStream_listautoptr>

typealias GDataOutputStream_listautoptr = CPointer<GList>

typealias GDataOutputStream_slistautoptrVar = CPointerVarOf<GDataOutputStream_slistautoptr>

typealias GDataOutputStream_slistautoptr = CPointer<GSList>

typealias GDBusActionGroup_autoptrVar = CPointerVarOf<GDBusActionGroup_autoptr>

typealias GDBusActionGroup_autoptr = CPointer<GDBusActionGroup>

typealias GDBusActionGroup_listautoptrVar = CPointerVarOf<GDBusActionGroup_listautoptr>

typealias GDBusActionGroup_listautoptr = CPointer<GList>

typealias GDBusActionGroup_slistautoptrVar = CPointerVarOf<GDBusActionGroup_slistautoptr>

typealias GDBusActionGroup_slistautoptr = CPointer<GSList>

typealias GDBusAuthObserver_autoptrVar = CPointerVarOf<GDBusAuthObserver_autoptr>

typealias GDBusAuthObserver_autoptr = CPointer<GDBusAuthObserver>

typealias GDBusAuthObserver_listautoptrVar = CPointerVarOf<GDBusAuthObserver_listautoptr>

typealias GDBusAuthObserver_listautoptr = CPointer<GList>

typealias GDBusAuthObserver_slistautoptrVar = CPointerVarOf<GDBusAuthObserver_slistautoptr>

typealias GDBusAuthObserver_slistautoptr = CPointer<GSList>

typealias GDBusConnection_autoptrVar = CPointerVarOf<GDBusConnection_autoptr>

typealias GDBusConnection_autoptr = CPointer<GDBusConnection>

typealias GDBusConnection_listautoptrVar = CPointerVarOf<GDBusConnection_listautoptr>

typealias GDBusConnection_listautoptr = CPointer<GList>

typealias GDBusConnection_slistautoptrVar = CPointerVarOf<GDBusConnection_slistautoptr>

typealias GDBusConnection_slistautoptr = CPointer<GSList>

typealias GDBusInterface_autoptrVar = CPointerVarOf<GDBusInterface_autoptr>

typealias GDBusInterface_autoptr = CPointer<GDBusInterface>

typealias GDBusInterface_listautoptrVar = CPointerVarOf<GDBusInterface_listautoptr>

typealias GDBusInterface_listautoptr = CPointer<GList>

typealias GDBusInterface_slistautoptrVar = CPointerVarOf<GDBusInterface_slistautoptr>

typealias GDBusInterface_slistautoptr = CPointer<GSList>

typealias GDBusInterfaceSkeleton_autoptrVar = CPointerVarOf<GDBusInterfaceSkeleton_autoptr>

typealias GDBusInterfaceSkeleton_autoptr = CPointer<GDBusInterfaceSkeleton>

typealias GDBusInterfaceSkeleton_listautoptrVar = CPointerVarOf<GDBusInterfaceSkeleton_listautoptr>

typealias GDBusInterfaceSkeleton_listautoptr = CPointer<GList>

typealias GDBusInterfaceSkeleton_slistautoptrVar = CPointerVarOf<GDBusInterfaceSkeleton_slistautoptr>

typealias GDBusInterfaceSkeleton_slistautoptr = CPointer<GSList>

typealias GDBusMenuModel_autoptrVar = CPointerVarOf<GDBusMenuModel_autoptr>

typealias GDBusMenuModel_autoptr = CPointer<GDBusMenuModel>

typealias GDBusMenuModel_listautoptrVar = CPointerVarOf<GDBusMenuModel_listautoptr>

typealias GDBusMenuModel_listautoptr = CPointer<GList>

typealias GDBusMenuModel_slistautoptrVar = CPointerVarOf<GDBusMenuModel_slistautoptr>

typealias GDBusMenuModel_slistautoptr = CPointer<GSList>

typealias GDBusMessage_autoptrVar = CPointerVarOf<GDBusMessage_autoptr>

typealias GDBusMessage_autoptr = CPointer<GDBusMessage>

typealias GDBusMessage_listautoptrVar = CPointerVarOf<GDBusMessage_listautoptr>

typealias GDBusMessage_listautoptr = CPointer<GList>

typealias GDBusMessage_slistautoptrVar = CPointerVarOf<GDBusMessage_slistautoptr>

typealias GDBusMessage_slistautoptr = CPointer<GSList>

typealias GDBusMethodInvocation_autoptrVar = CPointerVarOf<GDBusMethodInvocation_autoptr>

typealias GDBusMethodInvocation_autoptr = CPointer<GDBusMethodInvocation>

typealias GDBusMethodInvocation_listautoptrVar = CPointerVarOf<GDBusMethodInvocation_listautoptr>

typealias GDBusMethodInvocation_listautoptr = CPointer<GList>

typealias GDBusMethodInvocation_slistautoptrVar = CPointerVarOf<GDBusMethodInvocation_slistautoptr>

typealias GDBusMethodInvocation_slistautoptr = CPointer<GSList>

typealias GDBusNodeInfo_autoptrVar = CPointerVarOf<GDBusNodeInfo_autoptr>

typealias GDBusNodeInfo_autoptr = CPointer<GDBusNodeInfo>

typealias GDBusNodeInfo_listautoptrVar = CPointerVarOf<GDBusNodeInfo_listautoptr>

typealias GDBusNodeInfo_listautoptr = CPointer<GList>

typealias GDBusNodeInfo_slistautoptrVar = CPointerVarOf<GDBusNodeInfo_slistautoptr>

typealias GDBusNodeInfo_slistautoptr = CPointer<GSList>

typealias GDBusObject_autoptrVar = CPointerVarOf<GDBusObject_autoptr>

typealias GDBusObject_autoptr = CPointer<GDBusObject>

typealias GDBusObject_listautoptrVar = CPointerVarOf<GDBusObject_listautoptr>

typealias GDBusObject_listautoptr = CPointer<GList>

typealias GDBusObject_slistautoptrVar = CPointerVarOf<GDBusObject_slistautoptr>

typealias GDBusObject_slistautoptr = CPointer<GSList>

typealias GDBusObjectManagerClient_autoptrVar = CPointerVarOf<GDBusObjectManagerClient_autoptr>

typealias GDBusObjectManagerClient_autoptr = CPointer<GDBusObjectManagerClient>

typealias GDBusObjectManagerClient_listautoptrVar = CPointerVarOf<GDBusObjectManagerClient_listautoptr>

typealias GDBusObjectManagerClient_listautoptr = CPointer<GList>

typealias GDBusObjectManagerClient_slistautoptrVar = CPointerVarOf<GDBusObjectManagerClient_slistautoptr>

typealias GDBusObjectManagerClient_slistautoptr = CPointer<GSList>

typealias GDBusObjectManager_autoptrVar = CPointerVarOf<GDBusObjectManager_autoptr>

typealias GDBusObjectManager_autoptr = CPointer<GDBusObjectManager>

typealias GDBusObjectManager_listautoptrVar = CPointerVarOf<GDBusObjectManager_listautoptr>

typealias GDBusObjectManager_listautoptr = CPointer<GList>

typealias GDBusObjectManager_slistautoptrVar = CPointerVarOf<GDBusObjectManager_slistautoptr>

typealias GDBusObjectManager_slistautoptr = CPointer<GSList>

typealias GDBusObjectManagerServer_autoptrVar = CPointerVarOf<GDBusObjectManagerServer_autoptr>

typealias GDBusObjectManagerServer_autoptr = CPointer<GDBusObjectManagerServer>

typealias GDBusObjectManagerServer_listautoptrVar = CPointerVarOf<GDBusObjectManagerServer_listautoptr>

typealias GDBusObjectManagerServer_listautoptr = CPointer<GList>

typealias GDBusObjectManagerServer_slistautoptrVar = CPointerVarOf<GDBusObjectManagerServer_slistautoptr>

typealias GDBusObjectManagerServer_slistautoptr = CPointer<GSList>

typealias GDBusObjectProxy_autoptrVar = CPointerVarOf<GDBusObjectProxy_autoptr>

typealias GDBusObjectProxy_autoptr = CPointer<GDBusObjectProxy>

typealias GDBusObjectProxy_listautoptrVar = CPointerVarOf<GDBusObjectProxy_listautoptr>

typealias GDBusObjectProxy_listautoptr = CPointer<GList>

typealias GDBusObjectProxy_slistautoptrVar = CPointerVarOf<GDBusObjectProxy_slistautoptr>

typealias GDBusObjectProxy_slistautoptr = CPointer<GSList>

typealias GDBusObjectSkeleton_autoptrVar = CPointerVarOf<GDBusObjectSkeleton_autoptr>

typealias GDBusObjectSkeleton_autoptr = CPointer<GDBusObjectSkeleton>

typealias GDBusObjectSkeleton_listautoptrVar = CPointerVarOf<GDBusObjectSkeleton_listautoptr>

typealias GDBusObjectSkeleton_listautoptr = CPointer<GList>

typealias GDBusObjectSkeleton_slistautoptrVar = CPointerVarOf<GDBusObjectSkeleton_slistautoptr>

typealias GDBusObjectSkeleton_slistautoptr = CPointer<GSList>

typealias GDBusProxy_autoptrVar = CPointerVarOf<GDBusProxy_autoptr>

typealias GDBusProxy_autoptr = CPointer<GDBusProxy>

typealias GDBusProxy_listautoptrVar = CPointerVarOf<GDBusProxy_listautoptr>

typealias GDBusProxy_listautoptr = CPointer<GList>

typealias GDBusProxy_slistautoptrVar = CPointerVarOf<GDBusProxy_slistautoptr>

typealias GDBusProxy_slistautoptr = CPointer<GSList>

typealias GDBusServer_autoptrVar = CPointerVarOf<GDBusServer_autoptr>

typealias GDBusServer_autoptr = CPointer<GDBusServer>

typealias GDBusServer_listautoptrVar = CPointerVarOf<GDBusServer_listautoptr>

typealias GDBusServer_listautoptr = CPointer<GList>

typealias GDBusServer_slistautoptrVar = CPointerVarOf<GDBusServer_slistautoptr>

typealias GDBusServer_slistautoptr = CPointer<GSList>

typealias GDrive_autoptrVar = CPointerVarOf<GDrive_autoptr>

typealias GDrive_autoptr = CPointer<GDrive>

typealias GDrive_listautoptrVar = CPointerVarOf<GDrive_listautoptr>

typealias GDrive_listautoptr = CPointer<GList>

typealias GDrive_slistautoptrVar = CPointerVarOf<GDrive_slistautoptr>

typealias GDrive_slistautoptr = CPointer<GSList>

typealias GEmblemedIcon_autoptrVar = CPointerVarOf<GEmblemedIcon_autoptr>

typealias GEmblemedIcon_autoptr = CPointer<GEmblemedIcon>

typealias GEmblemedIcon_listautoptrVar = CPointerVarOf<GEmblemedIcon_listautoptr>

typealias GEmblemedIcon_listautoptr = CPointer<GList>

typealias GEmblemedIcon_slistautoptrVar = CPointerVarOf<GEmblemedIcon_slistautoptr>

typealias GEmblemedIcon_slistautoptr = CPointer<GSList>

typealias GEmblem_autoptrVar = CPointerVarOf<GEmblem_autoptr>

typealias GEmblem_autoptr = CPointer<GEmblem>

typealias GEmblem_listautoptrVar = CPointerVarOf<GEmblem_listautoptr>

typealias GEmblem_listautoptr = CPointer<GList>

typealias GEmblem_slistautoptrVar = CPointerVarOf<GEmblem_slistautoptr>

typealias GEmblem_slistautoptr = CPointer<GSList>

typealias GFileEnumerator_autoptrVar = CPointerVarOf<GFileEnumerator_autoptr>

typealias GFileEnumerator_autoptr = CPointer<GFileEnumerator>

typealias GFileEnumerator_listautoptrVar = CPointerVarOf<GFileEnumerator_listautoptr>

typealias GFileEnumerator_listautoptr = CPointer<GList>

typealias GFileEnumerator_slistautoptrVar = CPointerVarOf<GFileEnumerator_slistautoptr>

typealias GFileEnumerator_slistautoptr = CPointer<GSList>

typealias GFile_autoptrVar = CPointerVarOf<GFile_autoptr>

typealias GFile_autoptr = CPointer<GFile>

typealias GFile_listautoptrVar = CPointerVarOf<GFile_listautoptr>

typealias GFile_listautoptr = CPointer<GList>

typealias GFile_slistautoptrVar = CPointerVarOf<GFile_slistautoptr>

typealias GFile_slistautoptr = CPointer<GSList>

typealias GFileAttributeInfoList_autoptrVar = CPointerVarOf<GFileAttributeInfoList_autoptr>

typealias GFileAttributeInfoList_autoptr = CPointer<GFileAttributeInfoList>

typealias GFileAttributeInfoList_listautoptrVar = CPointerVarOf<GFileAttributeInfoList_listautoptr>

typealias GFileAttributeInfoList_listautoptr = CPointer<GList>

typealias GFileAttributeInfoList_slistautoptrVar = CPointerVarOf<GFileAttributeInfoList_slistautoptr>

typealias GFileAttributeInfoList_slistautoptr = CPointer<GSList>

typealias GFileIcon_autoptrVar = CPointerVarOf<GFileIcon_autoptr>

typealias GFileIcon_autoptr = CPointer<GFileIcon>

typealias GFileIcon_listautoptrVar = CPointerVarOf<GFileIcon_listautoptr>

typealias GFileIcon_listautoptr = CPointer<GList>

typealias GFileIcon_slistautoptrVar = CPointerVarOf<GFileIcon_slistautoptr>

typealias GFileIcon_slistautoptr = CPointer<GSList>

typealias GFileInfo_autoptrVar = CPointerVarOf<GFileInfo_autoptr>

typealias GFileInfo_autoptr = CPointer<GFileInfo>

typealias GFileInfo_listautoptrVar = CPointerVarOf<GFileInfo_listautoptr>

typealias GFileInfo_listautoptr = CPointer<GList>

typealias GFileInfo_slistautoptrVar = CPointerVarOf<GFileInfo_slistautoptr>

typealias GFileInfo_slistautoptr = CPointer<GSList>

typealias GFileInputStream_autoptrVar = CPointerVarOf<GFileInputStream_autoptr>

typealias GFileInputStream_autoptr = CPointer<GFileInputStream>

typealias GFileInputStream_listautoptrVar = CPointerVarOf<GFileInputStream_listautoptr>

typealias GFileInputStream_listautoptr = CPointer<GList>

typealias GFileInputStream_slistautoptrVar = CPointerVarOf<GFileInputStream_slistautoptr>

typealias GFileInputStream_slistautoptr = CPointer<GSList>

typealias GFileIOStream_autoptrVar = CPointerVarOf<GFileIOStream_autoptr>

typealias GFileIOStream_autoptr = CPointer<GFileIOStream>

typealias GFileIOStream_listautoptrVar = CPointerVarOf<GFileIOStream_listautoptr>

typealias GFileIOStream_listautoptr = CPointer<GList>

typealias GFileIOStream_slistautoptrVar = CPointerVarOf<GFileIOStream_slistautoptr>

typealias GFileIOStream_slistautoptr = CPointer<GSList>

typealias GFileMonitor_autoptrVar = CPointerVarOf<GFileMonitor_autoptr>

typealias GFileMonitor_autoptr = CPointer<GFileMonitor>

typealias GFileMonitor_listautoptrVar = CPointerVarOf<GFileMonitor_listautoptr>

typealias GFileMonitor_listautoptr = CPointer<GList>

typealias GFileMonitor_slistautoptrVar = CPointerVarOf<GFileMonitor_slistautoptr>

typealias GFileMonitor_slistautoptr = CPointer<GSList>

typealias GFilenameCompleter_autoptrVar = CPointerVarOf<GFilenameCompleter_autoptr>

typealias GFilenameCompleter_autoptr = CPointer<GFilenameCompleter>

typealias GFilenameCompleter_listautoptrVar = CPointerVarOf<GFilenameCompleter_listautoptr>

typealias GFilenameCompleter_listautoptr = CPointer<GList>

typealias GFilenameCompleter_slistautoptrVar = CPointerVarOf<GFilenameCompleter_slistautoptr>

typealias GFilenameCompleter_slistautoptr = CPointer<GSList>

typealias GFileOutputStream_autoptrVar = CPointerVarOf<GFileOutputStream_autoptr>

typealias GFileOutputStream_autoptr = CPointer<GFileOutputStream>

typealias GFileOutputStream_listautoptrVar = CPointerVarOf<GFileOutputStream_listautoptr>

typealias GFileOutputStream_listautoptr = CPointer<GList>

typealias GFileOutputStream_slistautoptrVar = CPointerVarOf<GFileOutputStream_slistautoptr>

typealias GFileOutputStream_slistautoptr = CPointer<GSList>

typealias GFilterInputStream_autoptrVar = CPointerVarOf<GFilterInputStream_autoptr>

typealias GFilterInputStream_autoptr = CPointer<GFilterInputStream>

typealias GFilterInputStream_listautoptrVar = CPointerVarOf<GFilterInputStream_listautoptr>

typealias GFilterInputStream_listautoptr = CPointer<GList>

typealias GFilterInputStream_slistautoptrVar = CPointerVarOf<GFilterInputStream_slistautoptr>

typealias GFilterInputStream_slistautoptr = CPointer<GSList>

typealias GFilterOutputStream_autoptrVar = CPointerVarOf<GFilterOutputStream_autoptr>

typealias GFilterOutputStream_autoptr = CPointer<GFilterOutputStream>

typealias GFilterOutputStream_listautoptrVar = CPointerVarOf<GFilterOutputStream_listautoptr>

typealias GFilterOutputStream_listautoptr = CPointer<GList>

typealias GFilterOutputStream_slistautoptrVar = CPointerVarOf<GFilterOutputStream_slistautoptr>

typealias GFilterOutputStream_slistautoptr = CPointer<GSList>

typealias GIcon_autoptrVar = CPointerVarOf<GIcon_autoptr>

typealias GIcon_autoptr = CPointer<GIcon>

typealias GIcon_listautoptrVar = CPointerVarOf<GIcon_listautoptr>

typealias GIcon_listautoptr = CPointer<GList>

typealias GIcon_slistautoptrVar = CPointerVarOf<GIcon_slistautoptr>

typealias GIcon_slistautoptr = CPointer<GSList>

typealias GInetAddress_autoptrVar = CPointerVarOf<GInetAddress_autoptr>

typealias GInetAddress_autoptr = CPointer<GInetAddress>

typealias GInetAddress_listautoptrVar = CPointerVarOf<GInetAddress_listautoptr>

typealias GInetAddress_listautoptr = CPointer<GList>

typealias GInetAddress_slistautoptrVar = CPointerVarOf<GInetAddress_slistautoptr>

typealias GInetAddress_slistautoptr = CPointer<GSList>

typealias GInetAddressMask_autoptrVar = CPointerVarOf<GInetAddressMask_autoptr>

typealias GInetAddressMask_autoptr = CPointer<GInetAddressMask>

typealias GInetAddressMask_listautoptrVar = CPointerVarOf<GInetAddressMask_listautoptr>

typealias GInetAddressMask_listautoptr = CPointer<GList>

typealias GInetAddressMask_slistautoptrVar = CPointerVarOf<GInetAddressMask_slistautoptr>

typealias GInetAddressMask_slistautoptr = CPointer<GSList>

typealias GInetSocketAddress_autoptrVar = CPointerVarOf<GInetSocketAddress_autoptr>

typealias GInetSocketAddress_autoptr = CPointer<GInetSocketAddress>

typealias GInetSocketAddress_listautoptrVar = CPointerVarOf<GInetSocketAddress_listautoptr>

typealias GInetSocketAddress_listautoptr = CPointer<GList>

typealias GInetSocketAddress_slistautoptrVar = CPointerVarOf<GInetSocketAddress_slistautoptr>

typealias GInetSocketAddress_slistautoptr = CPointer<GSList>

typealias GInitable_autoptrVar = CPointerVarOf<GInitable_autoptr>

typealias GInitable_autoptr = CPointer<GInitable>

typealias GInitable_listautoptrVar = CPointerVarOf<GInitable_listautoptr>

typealias GInitable_listautoptr = CPointer<GList>

typealias GInitable_slistautoptrVar = CPointerVarOf<GInitable_slistautoptr>

typealias GInitable_slistautoptr = CPointer<GSList>

typealias GInputStream_autoptrVar = CPointerVarOf<GInputStream_autoptr>

typealias GInputStream_autoptr = CPointer<GInputStream>

typealias GInputStream_listautoptrVar = CPointerVarOf<GInputStream_listautoptr>

typealias GInputStream_listautoptr = CPointer<GList>

typealias GInputStream_slistautoptrVar = CPointerVarOf<GInputStream_slistautoptr>

typealias GInputStream_slistautoptr = CPointer<GSList>

typealias GIOModule_autoptrVar = CPointerVarOf<GIOModule_autoptr>

typealias GIOModule_autoptr = CPointer<GIOModule>

typealias GIOModule_listautoptrVar = CPointerVarOf<GIOModule_listautoptr>

typealias GIOModule_listautoptr = CPointer<GList>

typealias GIOModule_slistautoptrVar = CPointerVarOf<GIOModule_slistautoptr>

typealias GIOModule_slistautoptr = CPointer<GSList>

typealias GIOStream_autoptrVar = CPointerVarOf<GIOStream_autoptr>

typealias GIOStream_autoptr = CPointer<GIOStream>

typealias GIOStream_listautoptrVar = CPointerVarOf<GIOStream_listautoptr>

typealias GIOStream_listautoptr = CPointer<GList>

typealias GIOStream_slistautoptrVar = CPointerVarOf<GIOStream_slistautoptr>

typealias GIOStream_slistautoptr = CPointer<GSList>

typealias GLoadableIcon_autoptrVar = CPointerVarOf<GLoadableIcon_autoptr>

typealias GLoadableIcon_autoptr = CPointer<GLoadableIcon>

typealias GLoadableIcon_listautoptrVar = CPointerVarOf<GLoadableIcon_listautoptr>

typealias GLoadableIcon_listautoptr = CPointer<GList>

typealias GLoadableIcon_slistautoptrVar = CPointerVarOf<GLoadableIcon_slistautoptr>

typealias GLoadableIcon_slistautoptr = CPointer<GSList>

typealias GMemoryInputStream_autoptrVar = CPointerVarOf<GMemoryInputStream_autoptr>

typealias GMemoryInputStream_autoptr = CPointer<GMemoryInputStream>

typealias GMemoryInputStream_listautoptrVar = CPointerVarOf<GMemoryInputStream_listautoptr>

typealias GMemoryInputStream_listautoptr = CPointer<GList>

typealias GMemoryInputStream_slistautoptrVar = CPointerVarOf<GMemoryInputStream_slistautoptr>

typealias GMemoryInputStream_slistautoptr = CPointer<GSList>

typealias GMemoryOutputStream_autoptrVar = CPointerVarOf<GMemoryOutputStream_autoptr>

typealias GMemoryOutputStream_autoptr = CPointer<GMemoryOutputStream>

typealias GMemoryOutputStream_listautoptrVar = CPointerVarOf<GMemoryOutputStream_listautoptr>

typealias GMemoryOutputStream_listautoptr = CPointer<GList>

typealias GMemoryOutputStream_slistautoptrVar = CPointerVarOf<GMemoryOutputStream_slistautoptr>

typealias GMemoryOutputStream_slistautoptr = CPointer<GSList>

typealias GMenu_autoptrVar = CPointerVarOf<GMenu_autoptr>

typealias GMenu_autoptr = CPointer<GMenu>

typealias GMenu_listautoptrVar = CPointerVarOf<GMenu_listautoptr>

typealias GMenu_listautoptr = CPointer<GList>

typealias GMenu_slistautoptrVar = CPointerVarOf<GMenu_slistautoptr>

typealias GMenu_slistautoptr = CPointer<GSList>

typealias GMenuItem_autoptrVar = CPointerVarOf<GMenuItem_autoptr>

typealias GMenuItem_autoptr = CPointer<GMenuItem>

typealias GMenuItem_listautoptrVar = CPointerVarOf<GMenuItem_listautoptr>

typealias GMenuItem_listautoptr = CPointer<GList>

typealias GMenuItem_slistautoptrVar = CPointerVarOf<GMenuItem_slistautoptr>

typealias GMenuItem_slistautoptr = CPointer<GSList>

typealias GMenuModel_autoptrVar = CPointerVarOf<GMenuModel_autoptr>

typealias GMenuModel_autoptr = CPointer<GMenuModel>

typealias GMenuModel_listautoptrVar = CPointerVarOf<GMenuModel_listautoptr>

typealias GMenuModel_listautoptr = CPointer<GList>

typealias GMenuModel_slistautoptrVar = CPointerVarOf<GMenuModel_slistautoptr>

typealias GMenuModel_slistautoptr = CPointer<GSList>

typealias GMenuAttributeIter_autoptrVar = CPointerVarOf<GMenuAttributeIter_autoptr>

typealias GMenuAttributeIter_autoptr = CPointer<GMenuAttributeIter>

typealias GMenuAttributeIter_listautoptrVar = CPointerVarOf<GMenuAttributeIter_listautoptr>

typealias GMenuAttributeIter_listautoptr = CPointer<GList>

typealias GMenuAttributeIter_slistautoptrVar = CPointerVarOf<GMenuAttributeIter_slistautoptr>

typealias GMenuAttributeIter_slistautoptr = CPointer<GSList>

typealias GMenuLinkIter_autoptrVar = CPointerVarOf<GMenuLinkIter_autoptr>

typealias GMenuLinkIter_autoptr = CPointer<GMenuLinkIter>

typealias GMenuLinkIter_listautoptrVar = CPointerVarOf<GMenuLinkIter_listautoptr>

typealias GMenuLinkIter_listautoptr = CPointer<GList>

typealias GMenuLinkIter_slistautoptrVar = CPointerVarOf<GMenuLinkIter_slistautoptr>

typealias GMenuLinkIter_slistautoptr = CPointer<GSList>

typealias GMount_autoptrVar = CPointerVarOf<GMount_autoptr>

typealias GMount_autoptr = CPointer<GMount>

typealias GMount_listautoptrVar = CPointerVarOf<GMount_listautoptr>

typealias GMount_listautoptr = CPointer<GList>

typealias GMount_slistautoptrVar = CPointerVarOf<GMount_slistautoptr>

typealias GMount_slistautoptr = CPointer<GSList>

typealias GMountOperation_autoptrVar = CPointerVarOf<GMountOperation_autoptr>

typealias GMountOperation_autoptr = CPointer<GMountOperation>

typealias GMountOperation_listautoptrVar = CPointerVarOf<GMountOperation_listautoptr>

typealias GMountOperation_listautoptr = CPointer<GList>

typealias GMountOperation_slistautoptrVar = CPointerVarOf<GMountOperation_slistautoptr>

typealias GMountOperation_slistautoptr = CPointer<GSList>

typealias GNativeVolumeMonitor_autoptrVar = CPointerVarOf<GNativeVolumeMonitor_autoptr>

typealias GNativeVolumeMonitor_autoptr = CPointer<GNativeVolumeMonitor>

typealias GNativeVolumeMonitor_listautoptrVar = CPointerVarOf<GNativeVolumeMonitor_listautoptr>

typealias GNativeVolumeMonitor_listautoptr = CPointer<GList>

typealias GNativeVolumeMonitor_slistautoptrVar = CPointerVarOf<GNativeVolumeMonitor_slistautoptr>

typealias GNativeVolumeMonitor_slistautoptr = CPointer<GSList>

typealias GNetworkAddress_autoptrVar = CPointerVarOf<GNetworkAddress_autoptr>

typealias GNetworkAddress_autoptr = CPointer<GNetworkAddress>

typealias GNetworkAddress_listautoptrVar = CPointerVarOf<GNetworkAddress_listautoptr>

typealias GNetworkAddress_listautoptr = CPointer<GList>

typealias GNetworkAddress_slistautoptrVar = CPointerVarOf<GNetworkAddress_slistautoptr>

typealias GNetworkAddress_slistautoptr = CPointer<GSList>

typealias GNetworkMonitor_autoptrVar = CPointerVarOf<GNetworkMonitor_autoptr>

typealias GNetworkMonitor_autoptr = CPointer<GNetworkMonitor>

typealias GNetworkMonitor_listautoptrVar = CPointerVarOf<GNetworkMonitor_listautoptr>

typealias GNetworkMonitor_listautoptr = CPointer<GList>

typealias GNetworkMonitor_slistautoptrVar = CPointerVarOf<GNetworkMonitor_slistautoptr>

typealias GNetworkMonitor_slistautoptr = CPointer<GSList>

typealias GNetworkService_autoptrVar = CPointerVarOf<GNetworkService_autoptr>

typealias GNetworkService_autoptr = CPointer<GNetworkService>

typealias GNetworkService_listautoptrVar = CPointerVarOf<GNetworkService_listautoptr>

typealias GNetworkService_listautoptr = CPointer<GList>

typealias GNetworkService_slistautoptrVar = CPointerVarOf<GNetworkService_slistautoptr>

typealias GNetworkService_slistautoptr = CPointer<GSList>

typealias GNotification_autoptrVar = CPointerVarOf<GNotification_autoptr>

typealias GNotification_autoptr = CPointer<GNotification>

typealias GNotification_listautoptrVar = CPointerVarOf<GNotification_listautoptr>

typealias GNotification_listautoptr = CPointer<GList>

typealias GNotification_slistautoptrVar = CPointerVarOf<GNotification_slistautoptr>

typealias GNotification_slistautoptr = CPointer<GSList>

typealias GOutputStream_autoptrVar = CPointerVarOf<GOutputStream_autoptr>

typealias GOutputStream_autoptr = CPointer<GOutputStream>

typealias GOutputStream_listautoptrVar = CPointerVarOf<GOutputStream_listautoptr>

typealias GOutputStream_listautoptr = CPointer<GList>

typealias GOutputStream_slistautoptrVar = CPointerVarOf<GOutputStream_slistautoptr>

typealias GOutputStream_slistautoptr = CPointer<GSList>

typealias GPermission_autoptrVar = CPointerVarOf<GPermission_autoptr>

typealias GPermission_autoptr = CPointer<GPermission>

typealias GPermission_listautoptrVar = CPointerVarOf<GPermission_listautoptr>

typealias GPermission_listautoptr = CPointer<GList>

typealias GPermission_slistautoptrVar = CPointerVarOf<GPermission_slistautoptr>

typealias GPermission_slistautoptr = CPointer<GSList>

typealias GPollableInputStream_autoptrVar = CPointerVarOf<GPollableInputStream_autoptr>

typealias GPollableInputStream_autoptr = CPointer<GPollableInputStream>

typealias GPollableInputStream_listautoptrVar = CPointerVarOf<GPollableInputStream_listautoptr>

typealias GPollableInputStream_listautoptr = CPointer<GList>

typealias GPollableInputStream_slistautoptrVar = CPointerVarOf<GPollableInputStream_slistautoptr>

typealias GPollableInputStream_slistautoptr = CPointer<GSList>

typealias GPollableOutputStream_autoptrVar = CPointerVarOf<GPollableOutputStream_autoptr>

typealias GPollableOutputStream_autoptr = CPointer<GPollableOutputStream>

typealias GPollableOutputStream_listautoptrVar = CPointerVarOf<GPollableOutputStream_listautoptr>

typealias GPollableOutputStream_listautoptr = CPointer<GList>

typealias GPollableOutputStream_slistautoptrVar = CPointerVarOf<GPollableOutputStream_slistautoptr>

typealias GPollableOutputStream_slistautoptr = CPointer<GSList>

typealias GPropertyAction_autoptrVar = CPointerVarOf<GPropertyAction_autoptr>

typealias GPropertyAction_autoptr = CPointer<GPropertyAction>

typealias GPropertyAction_listautoptrVar = CPointerVarOf<GPropertyAction_listautoptr>

typealias GPropertyAction_listautoptr = CPointer<GList>

typealias GPropertyAction_slistautoptrVar = CPointerVarOf<GPropertyAction_slistautoptr>

typealias GPropertyAction_slistautoptr = CPointer<GSList>

typealias GProxyAddressEnumerator_autoptrVar = CPointerVarOf<GProxyAddressEnumerator_autoptr>

typealias GProxyAddressEnumerator_autoptr = CPointer<GProxyAddressEnumerator>

typealias GProxyAddressEnumerator_listautoptrVar = CPointerVarOf<GProxyAddressEnumerator_listautoptr>

typealias GProxyAddressEnumerator_listautoptr = CPointer<GList>

typealias GProxyAddressEnumerator_slistautoptrVar = CPointerVarOf<GProxyAddressEnumerator_slistautoptr>

typealias GProxyAddressEnumerator_slistautoptr = CPointer<GSList>

typealias GProxyAddress_autoptrVar = CPointerVarOf<GProxyAddress_autoptr>

typealias GProxyAddress_autoptr = CPointer<GProxyAddress>

typealias GProxyAddress_listautoptrVar = CPointerVarOf<GProxyAddress_listautoptr>

typealias GProxyAddress_listautoptr = CPointer<GList>

typealias GProxyAddress_slistautoptrVar = CPointerVarOf<GProxyAddress_slistautoptr>

typealias GProxyAddress_slistautoptr = CPointer<GSList>

typealias GProxy_autoptrVar = CPointerVarOf<GProxy_autoptr>

typealias GProxy_autoptr = CPointer<GProxy>

typealias GProxy_listautoptrVar = CPointerVarOf<GProxy_listautoptr>

typealias GProxy_listautoptr = CPointer<GList>

typealias GProxy_slistautoptrVar = CPointerVarOf<GProxy_slistautoptr>

typealias GProxy_slistautoptr = CPointer<GSList>

typealias GProxyResolver_autoptrVar = CPointerVarOf<GProxyResolver_autoptr>

typealias GProxyResolver_autoptr = CPointer<GProxyResolver>

typealias GProxyResolver_listautoptrVar = CPointerVarOf<GProxyResolver_listautoptr>

typealias GProxyResolver_listautoptr = CPointer<GList>

typealias GProxyResolver_slistautoptrVar = CPointerVarOf<GProxyResolver_slistautoptr>

typealias GProxyResolver_slistautoptr = CPointer<GSList>

typealias GRemoteActionGroup_autoptrVar = CPointerVarOf<GRemoteActionGroup_autoptr>

typealias GRemoteActionGroup_autoptr = CPointer<GRemoteActionGroup>

typealias GRemoteActionGroup_listautoptrVar = CPointerVarOf<GRemoteActionGroup_listautoptr>

typealias GRemoteActionGroup_listautoptr = CPointer<GList>

typealias GRemoteActionGroup_slistautoptrVar = CPointerVarOf<GRemoteActionGroup_slistautoptr>

typealias GRemoteActionGroup_slistautoptr = CPointer<GSList>

typealias GResolver_autoptrVar = CPointerVarOf<GResolver_autoptr>

typealias GResolver_autoptr = CPointer<GResolver>

typealias GResolver_listautoptrVar = CPointerVarOf<GResolver_listautoptr>

typealias GResolver_listautoptr = CPointer<GList>

typealias GResolver_slistautoptrVar = CPointerVarOf<GResolver_slistautoptr>

typealias GResolver_slistautoptr = CPointer<GSList>

typealias GSeekable_autoptrVar = CPointerVarOf<GSeekable_autoptr>

typealias GSeekable_autoptr = CPointer<GSeekable>

typealias GSeekable_listautoptrVar = CPointerVarOf<GSeekable_listautoptr>

typealias GSeekable_listautoptr = CPointer<GList>

typealias GSeekable_slistautoptrVar = CPointerVarOf<GSeekable_slistautoptr>

typealias GSeekable_slistautoptr = CPointer<GSList>

typealias GSettingsBackend_autoptrVar = CPointerVarOf<GSettingsBackend_autoptr>

typealias GSettingsBackend_autoptr = CPointer<GSettingsBackend>

typealias GSettingsBackend_listautoptrVar = CPointerVarOf<GSettingsBackend_listautoptr>

typealias GSettingsBackend_listautoptr = CPointer<GList>

typealias GSettingsBackend_slistautoptrVar = CPointerVarOf<GSettingsBackend_slistautoptr>

typealias GSettingsBackend_slistautoptr = CPointer<GSList>

typealias GSettingsSchema_autoptrVar = CPointerVarOf<GSettingsSchema_autoptr>

typealias GSettingsSchema_autoptr = CPointer<GSettingsSchema>

typealias GSettingsSchema_listautoptrVar = CPointerVarOf<GSettingsSchema_listautoptr>

typealias GSettingsSchema_listautoptr = CPointer<GList>

typealias GSettingsSchema_slistautoptrVar = CPointerVarOf<GSettingsSchema_slistautoptr>

typealias GSettingsSchema_slistautoptr = CPointer<GSList>

typealias GSettings_autoptrVar = CPointerVarOf<GSettings_autoptr>

typealias GSettings_autoptr = CPointer<GSettings>

typealias GSettings_listautoptrVar = CPointerVarOf<GSettings_listautoptr>

typealias GSettings_listautoptr = CPointer<GList>

typealias GSettings_slistautoptrVar = CPointerVarOf<GSettings_slistautoptr>

typealias GSettings_slistautoptr = CPointer<GSList>

typealias GSimpleActionGroup_autoptrVar = CPointerVarOf<GSimpleActionGroup_autoptr>

typealias GSimpleActionGroup_autoptr = CPointer<GSimpleActionGroup>

typealias GSimpleActionGroup_listautoptrVar = CPointerVarOf<GSimpleActionGroup_listautoptr>

typealias GSimpleActionGroup_listautoptr = CPointer<GList>

typealias GSimpleActionGroup_slistautoptrVar = CPointerVarOf<GSimpleActionGroup_slistautoptr>

typealias GSimpleActionGroup_slistautoptr = CPointer<GSList>

typealias GSimpleAction_autoptrVar = CPointerVarOf<GSimpleAction_autoptr>

typealias GSimpleAction_autoptr = CPointer<GSimpleAction>

typealias GSimpleAction_listautoptrVar = CPointerVarOf<GSimpleAction_listautoptr>

typealias GSimpleAction_listautoptr = CPointer<GList>

typealias GSimpleAction_slistautoptrVar = CPointerVarOf<GSimpleAction_slistautoptr>

typealias GSimpleAction_slistautoptr = CPointer<GSList>

typealias GSimpleAsyncResult_autoptrVar = CPointerVarOf<GSimpleAsyncResult_autoptr>

typealias GSimpleAsyncResult_autoptr = CPointer<GSimpleAsyncResult>

typealias GSimpleAsyncResult_listautoptrVar = CPointerVarOf<GSimpleAsyncResult_listautoptr>

typealias GSimpleAsyncResult_listautoptr = CPointer<GList>

typealias GSimpleAsyncResult_slistautoptrVar = CPointerVarOf<GSimpleAsyncResult_slistautoptr>

typealias GSimpleAsyncResult_slistautoptr = CPointer<GSList>

typealias GSimplePermission_autoptrVar = CPointerVarOf<GSimplePermission_autoptr>

typealias GSimplePermission_autoptr = CPointer<GSimplePermission>

typealias GSimplePermission_listautoptrVar = CPointerVarOf<GSimplePermission_listautoptr>

typealias GSimplePermission_listautoptr = CPointer<GList>

typealias GSimplePermission_slistautoptrVar = CPointerVarOf<GSimplePermission_slistautoptr>

typealias GSimplePermission_slistautoptr = CPointer<GSList>

typealias GSimpleProxyResolver_autoptrVar = CPointerVarOf<GSimpleProxyResolver_autoptr>

typealias GSimpleProxyResolver_autoptr = CPointer<GSimpleProxyResolver>

typealias GSimpleProxyResolver_listautoptrVar = CPointerVarOf<GSimpleProxyResolver_listautoptr>

typealias GSimpleProxyResolver_listautoptr = CPointer<GList>

typealias GSimpleProxyResolver_slistautoptrVar = CPointerVarOf<GSimpleProxyResolver_slistautoptr>

typealias GSimpleProxyResolver_slistautoptr = CPointer<GSList>

typealias GSocketAddressEnumerator_autoptrVar = CPointerVarOf<GSocketAddressEnumerator_autoptr>

typealias GSocketAddressEnumerator_autoptr = CPointer<GSocketAddressEnumerator>

typealias GSocketAddressEnumerator_listautoptrVar = CPointerVarOf<GSocketAddressEnumerator_listautoptr>

typealias GSocketAddressEnumerator_listautoptr = CPointer<GList>

typealias GSocketAddressEnumerator_slistautoptrVar = CPointerVarOf<GSocketAddressEnumerator_slistautoptr>

typealias GSocketAddressEnumerator_slistautoptr = CPointer<GSList>

typealias GSocketAddress_autoptrVar = CPointerVarOf<GSocketAddress_autoptr>

typealias GSocketAddress_autoptr = CPointer<GSocketAddress>

typealias GSocketAddress_listautoptrVar = CPointerVarOf<GSocketAddress_listautoptr>

typealias GSocketAddress_listautoptr = CPointer<GList>

typealias GSocketAddress_slistautoptrVar = CPointerVarOf<GSocketAddress_slistautoptr>

typealias GSocketAddress_slistautoptr = CPointer<GSList>

typealias GSocketClient_autoptrVar = CPointerVarOf<GSocketClient_autoptr>

typealias GSocketClient_autoptr = CPointer<GSocketClient>

typealias GSocketClient_listautoptrVar = CPointerVarOf<GSocketClient_listautoptr>

typealias GSocketClient_listautoptr = CPointer<GList>

typealias GSocketClient_slistautoptrVar = CPointerVarOf<GSocketClient_slistautoptr>

typealias GSocketClient_slistautoptr = CPointer<GSList>

typealias GSocketConnectable_autoptrVar = CPointerVarOf<GSocketConnectable_autoptr>

typealias GSocketConnectable_autoptr = CPointer<GSocketConnectable>

typealias GSocketConnectable_listautoptrVar = CPointerVarOf<GSocketConnectable_listautoptr>

typealias GSocketConnectable_listautoptr = CPointer<GList>

typealias GSocketConnectable_slistautoptrVar = CPointerVarOf<GSocketConnectable_slistautoptr>

typealias GSocketConnectable_slistautoptr = CPointer<GSList>

typealias GSocketConnection_autoptrVar = CPointerVarOf<GSocketConnection_autoptr>

typealias GSocketConnection_autoptr = CPointer<GSocketConnection>

typealias GSocketConnection_listautoptrVar = CPointerVarOf<GSocketConnection_listautoptr>

typealias GSocketConnection_listautoptr = CPointer<GList>

typealias GSocketConnection_slistautoptrVar = CPointerVarOf<GSocketConnection_slistautoptr>

typealias GSocketConnection_slistautoptr = CPointer<GSList>

typealias GSocketControlMessage_autoptrVar = CPointerVarOf<GSocketControlMessage_autoptr>

typealias GSocketControlMessage_autoptr = CPointer<GSocketControlMessage>

typealias GSocketControlMessage_listautoptrVar = CPointerVarOf<GSocketControlMessage_listautoptr>

typealias GSocketControlMessage_listautoptr = CPointer<GList>

typealias GSocketControlMessage_slistautoptrVar = CPointerVarOf<GSocketControlMessage_slistautoptr>

typealias GSocketControlMessage_slistautoptr = CPointer<GSList>

typealias GSocket_autoptrVar = CPointerVarOf<GSocket_autoptr>

typealias GSocket_autoptr = CPointer<GSocket>

typealias GSocket_listautoptrVar = CPointerVarOf<GSocket_listautoptr>

typealias GSocket_listautoptr = CPointer<GList>

typealias GSocket_slistautoptrVar = CPointerVarOf<GSocket_slistautoptr>

typealias GSocket_slistautoptr = CPointer<GSList>

typealias GSocketListener_autoptrVar = CPointerVarOf<GSocketListener_autoptr>

typealias GSocketListener_autoptr = CPointer<GSocketListener>

typealias GSocketListener_listautoptrVar = CPointerVarOf<GSocketListener_listautoptr>

typealias GSocketListener_listautoptr = CPointer<GList>

typealias GSocketListener_slistautoptrVar = CPointerVarOf<GSocketListener_slistautoptr>

typealias GSocketListener_slistautoptr = CPointer<GSList>

typealias GSocketService_autoptrVar = CPointerVarOf<GSocketService_autoptr>

typealias GSocketService_autoptr = CPointer<GSocketService>

typealias GSocketService_listautoptrVar = CPointerVarOf<GSocketService_listautoptr>

typealias GSocketService_listautoptr = CPointer<GList>

typealias GSocketService_slistautoptrVar = CPointerVarOf<GSocketService_slistautoptr>

typealias GSocketService_slistautoptr = CPointer<GSList>

typealias GSubprocess_autoptrVar = CPointerVarOf<GSubprocess_autoptr>

typealias GSubprocess_autoptr = CPointer<GSubprocess>

typealias GSubprocess_listautoptrVar = CPointerVarOf<GSubprocess_listautoptr>

typealias GSubprocess_listautoptr = CPointer<GList>

typealias GSubprocess_slistautoptrVar = CPointerVarOf<GSubprocess_slistautoptr>

typealias GSubprocess_slistautoptr = CPointer<GSList>

typealias GSubprocessLauncher_autoptrVar = CPointerVarOf<GSubprocessLauncher_autoptr>

typealias GSubprocessLauncher_autoptr = CPointer<GSubprocessLauncher>

typealias GSubprocessLauncher_listautoptrVar = CPointerVarOf<GSubprocessLauncher_listautoptr>

typealias GSubprocessLauncher_listautoptr = CPointer<GList>

typealias GSubprocessLauncher_slistautoptrVar = CPointerVarOf<GSubprocessLauncher_slistautoptr>

typealias GSubprocessLauncher_slistautoptr = CPointer<GSList>

typealias GTask_autoptrVar = CPointerVarOf<GTask_autoptr>

typealias GTask_autoptr = CPointer<GTask>

typealias GTask_listautoptrVar = CPointerVarOf<GTask_listautoptr>

typealias GTask_listautoptr = CPointer<GList>

typealias GTask_slistautoptrVar = CPointerVarOf<GTask_slistautoptr>

typealias GTask_slistautoptr = CPointer<GSList>

typealias GTcpConnection_autoptrVar = CPointerVarOf<GTcpConnection_autoptr>

typealias GTcpConnection_autoptr = CPointer<GTcpConnection>

typealias GTcpConnection_listautoptrVar = CPointerVarOf<GTcpConnection_listautoptr>

typealias GTcpConnection_listautoptr = CPointer<GList>

typealias GTcpConnection_slistautoptrVar = CPointerVarOf<GTcpConnection_slistautoptr>

typealias GTcpConnection_slistautoptr = CPointer<GSList>

typealias GTcpWrapperConnection_autoptrVar = CPointerVarOf<GTcpWrapperConnection_autoptr>

typealias GTcpWrapperConnection_autoptr = CPointer<GTcpWrapperConnection>

typealias GTcpWrapperConnection_listautoptrVar = CPointerVarOf<GTcpWrapperConnection_listautoptr>

typealias GTcpWrapperConnection_listautoptr = CPointer<GList>

typealias GTcpWrapperConnection_slistautoptrVar = CPointerVarOf<GTcpWrapperConnection_slistautoptr>

typealias GTcpWrapperConnection_slistautoptr = CPointer<GSList>

typealias GTestDBus_autoptrVar = CPointerVarOf<GTestDBus_autoptr>

typealias GTestDBus_autoptr = CPointer<GTestDBus>

typealias GTestDBus_listautoptrVar = CPointerVarOf<GTestDBus_listautoptr>

typealias GTestDBus_listautoptr = CPointer<GList>

typealias GTestDBus_slistautoptrVar = CPointerVarOf<GTestDBus_slistautoptr>

typealias GTestDBus_slistautoptr = CPointer<GSList>

typealias GThemedIcon_autoptrVar = CPointerVarOf<GThemedIcon_autoptr>

typealias GThemedIcon_autoptr = CPointer<GThemedIcon>

typealias GThemedIcon_listautoptrVar = CPointerVarOf<GThemedIcon_listautoptr>

typealias GThemedIcon_listautoptr = CPointer<GList>

typealias GThemedIcon_slistautoptrVar = CPointerVarOf<GThemedIcon_slistautoptr>

typealias GThemedIcon_slistautoptr = CPointer<GSList>

typealias GThreadedSocketService_autoptrVar = CPointerVarOf<GThreadedSocketService_autoptr>

typealias GThreadedSocketService_autoptr = CPointer<GThreadedSocketService>

typealias GThreadedSocketService_listautoptrVar = CPointerVarOf<GThreadedSocketService_listautoptr>

typealias GThreadedSocketService_listautoptr = CPointer<GList>

typealias GThreadedSocketService_slistautoptrVar = CPointerVarOf<GThreadedSocketService_slistautoptr>

typealias GThreadedSocketService_slistautoptr = CPointer<GSList>

typealias GTlsBackend_autoptrVar = CPointerVarOf<GTlsBackend_autoptr>

typealias GTlsBackend_autoptr = CPointer<GTlsBackend>

typealias GTlsBackend_listautoptrVar = CPointerVarOf<GTlsBackend_listautoptr>

typealias GTlsBackend_listautoptr = CPointer<GList>

typealias GTlsBackend_slistautoptrVar = CPointerVarOf<GTlsBackend_slistautoptr>

typealias GTlsBackend_slistautoptr = CPointer<GSList>

typealias GTlsCertificate_autoptrVar = CPointerVarOf<GTlsCertificate_autoptr>

typealias GTlsCertificate_autoptr = CPointer<GTlsCertificate>

typealias GTlsCertificate_listautoptrVar = CPointerVarOf<GTlsCertificate_listautoptr>

typealias GTlsCertificate_listautoptr = CPointer<GList>

typealias GTlsCertificate_slistautoptrVar = CPointerVarOf<GTlsCertificate_slistautoptr>

typealias GTlsCertificate_slistautoptr = CPointer<GSList>

typealias GTlsClientConnection_autoptrVar = CPointerVarOf<GTlsClientConnection_autoptr>

typealias GTlsClientConnection_autoptr = CPointer<GTlsClientConnection>

typealias GTlsClientConnection_listautoptrVar = CPointerVarOf<GTlsClientConnection_listautoptr>

typealias GTlsClientConnection_listautoptr = CPointer<GList>

typealias GTlsClientConnection_slistautoptrVar = CPointerVarOf<GTlsClientConnection_slistautoptr>

typealias GTlsClientConnection_slistautoptr = CPointer<GSList>

typealias GTlsConnection_autoptrVar = CPointerVarOf<GTlsConnection_autoptr>

typealias GTlsConnection_autoptr = CPointer<GTlsConnection>

typealias GTlsConnection_listautoptrVar = CPointerVarOf<GTlsConnection_listautoptr>

typealias GTlsConnection_listautoptr = CPointer<GList>

typealias GTlsConnection_slistautoptrVar = CPointerVarOf<GTlsConnection_slistautoptr>

typealias GTlsConnection_slistautoptr = CPointer<GSList>

typealias GTlsDatabase_autoptrVar = CPointerVarOf<GTlsDatabase_autoptr>

typealias GTlsDatabase_autoptr = CPointer<GTlsDatabase>

typealias GTlsDatabase_listautoptrVar = CPointerVarOf<GTlsDatabase_listautoptr>

typealias GTlsDatabase_listautoptr = CPointer<GList>

typealias GTlsDatabase_slistautoptrVar = CPointerVarOf<GTlsDatabase_slistautoptr>

typealias GTlsDatabase_slistautoptr = CPointer<GSList>

typealias GTlsFileDatabase_autoptrVar = CPointerVarOf<GTlsFileDatabase_autoptr>

typealias GTlsFileDatabase_autoptr = CPointer<GTlsFileDatabase>

typealias GTlsFileDatabase_listautoptrVar = CPointerVarOf<GTlsFileDatabase_listautoptr>

typealias GTlsFileDatabase_listautoptr = CPointer<GList>

typealias GTlsFileDatabase_slistautoptrVar = CPointerVarOf<GTlsFileDatabase_slistautoptr>

typealias GTlsFileDatabase_slistautoptr = CPointer<GSList>

typealias GTlsInteraction_autoptrVar = CPointerVarOf<GTlsInteraction_autoptr>

typealias GTlsInteraction_autoptr = CPointer<GTlsInteraction>

typealias GTlsInteraction_listautoptrVar = CPointerVarOf<GTlsInteraction_listautoptr>

typealias GTlsInteraction_listautoptr = CPointer<GList>

typealias GTlsInteraction_slistautoptrVar = CPointerVarOf<GTlsInteraction_slistautoptr>

typealias GTlsInteraction_slistautoptr = CPointer<GSList>

typealias GTlsPassword_autoptrVar = CPointerVarOf<GTlsPassword_autoptr>

typealias GTlsPassword_autoptr = CPointer<GTlsPassword>

typealias GTlsPassword_listautoptrVar = CPointerVarOf<GTlsPassword_listautoptr>

typealias GTlsPassword_listautoptr = CPointer<GList>

typealias GTlsPassword_slistautoptrVar = CPointerVarOf<GTlsPassword_slistautoptr>

typealias GTlsPassword_slistautoptr = CPointer<GSList>

typealias GTlsServerConnection_autoptrVar = CPointerVarOf<GTlsServerConnection_autoptr>

typealias GTlsServerConnection_autoptr = CPointer<GTlsServerConnection>

typealias GTlsServerConnection_listautoptrVar = CPointerVarOf<GTlsServerConnection_listautoptr>

typealias GTlsServerConnection_listautoptr = CPointer<GList>

typealias GTlsServerConnection_slistautoptrVar = CPointerVarOf<GTlsServerConnection_slistautoptr>

typealias GTlsServerConnection_slistautoptr = CPointer<GSList>

typealias GVfs_autoptrVar = CPointerVarOf<GVfs_autoptr>

typealias GVfs_autoptr = CPointer<GVfs>

typealias GVfs_listautoptrVar = CPointerVarOf<GVfs_listautoptr>

typealias GVfs_listautoptr = CPointer<GList>

typealias GVfs_slistautoptrVar = CPointerVarOf<GVfs_slistautoptr>

typealias GVfs_slistautoptr = CPointer<GSList>

typealias GVolume_autoptrVar = CPointerVarOf<GVolume_autoptr>

typealias GVolume_autoptr = CPointer<GVolume>

typealias GVolume_listautoptrVar = CPointerVarOf<GVolume_listautoptr>

typealias GVolume_listautoptr = CPointer<GList>

typealias GVolume_slistautoptrVar = CPointerVarOf<GVolume_slistautoptr>

typealias GVolume_slistautoptr = CPointer<GSList>

typealias GVolumeMonitor_autoptrVar = CPointerVarOf<GVolumeMonitor_autoptr>

typealias GVolumeMonitor_autoptr = CPointer<GVolumeMonitor>

typealias GVolumeMonitor_listautoptrVar = CPointerVarOf<GVolumeMonitor_listautoptr>

typealias GVolumeMonitor_listautoptr = CPointer<GList>

typealias GVolumeMonitor_slistautoptrVar = CPointerVarOf<GVolumeMonitor_slistautoptr>

typealias GVolumeMonitor_slistautoptr = CPointer<GSList>

typealias GZlibCompressor_autoptrVar = CPointerVarOf<GZlibCompressor_autoptr>

typealias GZlibCompressor_autoptr = CPointer<GZlibCompressor>

typealias GZlibCompressor_listautoptrVar = CPointerVarOf<GZlibCompressor_listautoptr>

typealias GZlibCompressor_listautoptr = CPointer<GList>

typealias GZlibCompressor_slistautoptrVar = CPointerVarOf<GZlibCompressor_slistautoptr>

typealias GZlibCompressor_slistautoptr = CPointer<GSList>

typealias GZlibDecompressor_autoptrVar = CPointerVarOf<GZlibDecompressor_autoptr>

typealias GZlibDecompressor_autoptr = CPointer<GZlibDecompressor>

typealias GZlibDecompressor_listautoptrVar = CPointerVarOf<GZlibDecompressor_listautoptr>

typealias GZlibDecompressor_listautoptr = CPointer<GList>

typealias GZlibDecompressor_slistautoptrVar = CPointerVarOf<GZlibDecompressor_slistautoptr>

typealias GZlibDecompressor_slistautoptr = CPointer<GSList>

typealias JsonGeneratorPrivate = _JsonGeneratorPrivate

typealias JsonGenerator = _JsonGenerator

typealias JsonGeneratorClass = _JsonGeneratorClass

typealias JsonGenerator_autoptrVar = CPointerVarOf<JsonGenerator_autoptr>

typealias JsonGenerator_autoptr = CPointer<JsonGenerator>

typealias JsonGenerator_listautoptrVar = CPointerVarOf<JsonGenerator_listautoptr>

typealias JsonGenerator_listautoptr = CPointer<GList>

typealias JsonGenerator_slistautoptrVar = CPointerVarOf<JsonGenerator_slistautoptr>

typealias JsonGenerator_slistautoptr = CPointer<GSList>

typealias JsonParserPrivate = _JsonParserPrivate

typealias JsonParser = _JsonParser

typealias JsonParserClass = _JsonParserClass

typealias JsonParser_autoptrVar = CPointerVarOf<JsonParser_autoptr>

typealias JsonParser_autoptr = CPointer<JsonParser>

typealias JsonParser_listautoptrVar = CPointerVarOf<JsonParser_listautoptr>

typealias JsonParser_listautoptr = CPointer<GList>

typealias JsonParser_slistautoptrVar = CPointerVarOf<JsonParser_slistautoptr>

typealias JsonParser_slistautoptr = CPointer<GSList>

typealias JsonPath = _JsonPath

typealias JsonPathClass = _JsonPathClass

typealias JsonPath_autoptrVar = CPointerVarOf<JsonPath_autoptr>

typealias JsonPath_autoptr = CPointer<JsonPath>

typealias JsonPath_listautoptrVar = CPointerVarOf<JsonPath_listautoptr>

typealias JsonPath_listautoptr = CPointer<GList>

typealias JsonPath_slistautoptrVar = CPointerVarOf<JsonPath_slistautoptr>

typealias JsonPath_slistautoptr = CPointer<GSList>

typealias JsonReaderPrivate = _JsonReaderPrivate

typealias JsonReader = _JsonReader

typealias JsonReaderClass = _JsonReaderClass

typealias JsonReader_autoptrVar = CPointerVarOf<JsonReader_autoptr>

typealias JsonReader_autoptr = CPointer<JsonReader>

typealias JsonReader_listautoptrVar = CPointerVarOf<JsonReader_listautoptr>

typealias JsonReader_listautoptr = CPointer<GList>

typealias JsonReader_slistautoptrVar = CPointerVarOf<JsonReader_slistautoptr>

typealias JsonReader_slistautoptr = CPointer<GSList>

typealias JsonSerializable = _JsonSerializable

typealias JsonSerializableIface = _JsonSerializableIface

typealias JsonBoxedSerializeFuncVar = CPointerVarOf<JsonBoxedSerializeFunc>

typealias JsonBoxedSerializeFunc = CPointer<CFunction<(gconstpointer?) -> CPointer<JsonNode>?>>

typealias JsonBoxedDeserializeFuncVar = CPointerVarOf<JsonBoxedDeserializeFunc>

typealias JsonBoxedDeserializeFunc = CPointer<CFunction<(CPointer<JsonNode>?) -> gpointer?>>

typealias JsonSerializable_autoptrVar = CPointerVarOf<JsonSerializable_autoptr>

typealias JsonSerializable_autoptr = CPointer<JsonSerializable>

typealias JsonSerializable_listautoptrVar = CPointerVarOf<JsonSerializable_listautoptr>

typealias JsonSerializable_listautoptr = CPointer<GList>

typealias JsonSerializable_slistautoptrVar = CPointerVarOf<JsonSerializable_slistautoptr>

typealias JsonSerializable_slistautoptr = CPointer<GSList>


val G_FORMAT_SIZE_DEFAULT: GFormatSizeFlags get() = 0u

val G_FORMAT_SIZE_LONG_FORMAT: GFormatSizeFlags get() = 1u

val G_FORMAT_SIZE_IEC_UNITS: GFormatSizeFlags get() = 2u

val G_FORMAT_SIZE_BITS: GFormatSizeFlags get() = 4u

typealias GFormatSizeFlagsVar = UIntVarOf<GFormatSizeFlags>

typealias GFormatSizeFlags = UInt


val G_DATE_DAY: GDateDMY get() = 0u

val G_DATE_MONTH: GDateDMY get() = 1u

val G_DATE_YEAR: GDateDMY get() = 2u

typealias GDateDMYVar = UIntVarOf<GDateDMY>

typealias GDateDMY = UInt


val G_DATE_BAD_WEEKDAY: GDateWeekday get() = 0u

val G_DATE_MONDAY: GDateWeekday get() = 1u

val G_DATE_TUESDAY: GDateWeekday get() = 2u

val G_DATE_WEDNESDAY: GDateWeekday get() = 3u

val G_DATE_THURSDAY: GDateWeekday get() = 4u

val G_DATE_FRIDAY: GDateWeekday get() = 5u

val G_DATE_SATURDAY: GDateWeekday get() = 6u

val G_DATE_SUNDAY: GDateWeekday get() = 7u

typealias GDateWeekdayVar = UIntVarOf<GDateWeekday>

typealias GDateWeekday = UInt


val G_DATE_BAD_MONTH: GDateMonth get() = 0u

val G_DATE_JANUARY: GDateMonth get() = 1u

val G_DATE_FEBRUARY: GDateMonth get() = 2u

val G_DATE_MARCH: GDateMonth get() = 3u

val G_DATE_APRIL: GDateMonth get() = 4u

val G_DATE_MAY: GDateMonth get() = 5u

val G_DATE_JUNE: GDateMonth get() = 6u

val G_DATE_JULY: GDateMonth get() = 7u

val G_DATE_AUGUST: GDateMonth get() = 8u

val G_DATE_SEPTEMBER: GDateMonth get() = 9u

val G_DATE_OCTOBER: GDateMonth get() = 10u

val G_DATE_NOVEMBER: GDateMonth get() = 11u

val G_DATE_DECEMBER: GDateMonth get() = 12u

typealias GDateMonthVar = UIntVarOf<GDateMonth>

typealias GDateMonth = UInt


val G_FILE_TEST_IS_REGULAR: GFileTest get() = 1u

val G_FILE_TEST_IS_SYMLINK: GFileTest get() = 2u

val G_FILE_TEST_IS_DIR: GFileTest get() = 4u

val G_FILE_TEST_IS_EXECUTABLE: GFileTest get() = 8u

val G_FILE_TEST_EXISTS: GFileTest get() = 16u

typealias GFileTestVar = UIntVarOf<GFileTest>

typealias GFileTest = UInt


val G_TRAVERSE_LEAVES: GTraverseFlags get() = 1u

val G_TRAVERSE_NON_LEAVES: GTraverseFlags get() = 2u

val G_TRAVERSE_ALL: GTraverseFlags get() = 3u

val G_TRAVERSE_MASK: GTraverseFlags get() = 3u

val G_TRAVERSE_LEAFS: GTraverseFlags get() = 1u

val G_TRAVERSE_NON_LEAFS: GTraverseFlags get() = 2u

typealias GTraverseFlagsVar = UIntVarOf<GTraverseFlags>

typealias GTraverseFlags = UInt


val G_HOOK_FLAG_ACTIVE: GHookFlagMask get() = 1u

val G_HOOK_FLAG_IN_CALL: GHookFlagMask get() = 2u

val G_HOOK_FLAG_MASK: GHookFlagMask get() = 15u

typealias GHookFlagMaskVar = UIntVarOf<GHookFlagMask>

typealias GHookFlagMask = UInt


val G_IO_IN: GIOCondition get() = 1u

val G_IO_OUT: GIOCondition get() = 4u

val G_IO_PRI: GIOCondition get() = 2u

val G_IO_ERR: GIOCondition get() = 8u

val G_IO_HUP: GIOCondition get() = 16u

val G_IO_NVAL: GIOCondition get() = 32u

typealias GIOConditionVar = UIntVarOf<GIOCondition>

typealias GIOCondition = UInt


val G_UNICODE_SCRIPT_INVALID_CODE: GUnicodeScript get() = -1

val G_UNICODE_SCRIPT_COMMON: GUnicodeScript get() = 0

val G_UNICODE_SCRIPT_INHERITED: GUnicodeScript get() = 1

val G_UNICODE_SCRIPT_ARABIC: GUnicodeScript get() = 2

val G_UNICODE_SCRIPT_ARMENIAN: GUnicodeScript get() = 3

val G_UNICODE_SCRIPT_BENGALI: GUnicodeScript get() = 4

val G_UNICODE_SCRIPT_BOPOMOFO: GUnicodeScript get() = 5

val G_UNICODE_SCRIPT_CHEROKEE: GUnicodeScript get() = 6

val G_UNICODE_SCRIPT_COPTIC: GUnicodeScript get() = 7

val G_UNICODE_SCRIPT_CYRILLIC: GUnicodeScript get() = 8

val G_UNICODE_SCRIPT_DESERET: GUnicodeScript get() = 9

val G_UNICODE_SCRIPT_DEVANAGARI: GUnicodeScript get() = 10

val G_UNICODE_SCRIPT_ETHIOPIC: GUnicodeScript get() = 11

val G_UNICODE_SCRIPT_GEORGIAN: GUnicodeScript get() = 12

val G_UNICODE_SCRIPT_GOTHIC: GUnicodeScript get() = 13

val G_UNICODE_SCRIPT_GREEK: GUnicodeScript get() = 14

val G_UNICODE_SCRIPT_GUJARATI: GUnicodeScript get() = 15

val G_UNICODE_SCRIPT_GURMUKHI: GUnicodeScript get() = 16

val G_UNICODE_SCRIPT_HAN: GUnicodeScript get() = 17

val G_UNICODE_SCRIPT_HANGUL: GUnicodeScript get() = 18

val G_UNICODE_SCRIPT_HEBREW: GUnicodeScript get() = 19

val G_UNICODE_SCRIPT_HIRAGANA: GUnicodeScript get() = 20

val G_UNICODE_SCRIPT_KANNADA: GUnicodeScript get() = 21

val G_UNICODE_SCRIPT_KATAKANA: GUnicodeScript get() = 22

val G_UNICODE_SCRIPT_KHMER: GUnicodeScript get() = 23

val G_UNICODE_SCRIPT_LAO: GUnicodeScript get() = 24

val G_UNICODE_SCRIPT_LATIN: GUnicodeScript get() = 25

val G_UNICODE_SCRIPT_MALAYALAM: GUnicodeScript get() = 26

val G_UNICODE_SCRIPT_MONGOLIAN: GUnicodeScript get() = 27

val G_UNICODE_SCRIPT_MYANMAR: GUnicodeScript get() = 28

val G_UNICODE_SCRIPT_OGHAM: GUnicodeScript get() = 29

val G_UNICODE_SCRIPT_OLD_ITALIC: GUnicodeScript get() = 30

val G_UNICODE_SCRIPT_ORIYA: GUnicodeScript get() = 31

val G_UNICODE_SCRIPT_RUNIC: GUnicodeScript get() = 32

val G_UNICODE_SCRIPT_SINHALA: GUnicodeScript get() = 33

val G_UNICODE_SCRIPT_SYRIAC: GUnicodeScript get() = 34

val G_UNICODE_SCRIPT_TAMIL: GUnicodeScript get() = 35

val G_UNICODE_SCRIPT_TELUGU: GUnicodeScript get() = 36

val G_UNICODE_SCRIPT_THAANA: GUnicodeScript get() = 37

val G_UNICODE_SCRIPT_THAI: GUnicodeScript get() = 38

val G_UNICODE_SCRIPT_TIBETAN: GUnicodeScript get() = 39

val G_UNICODE_SCRIPT_CANADIAN_ABORIGINAL: GUnicodeScript get() = 40

val G_UNICODE_SCRIPT_YI: GUnicodeScript get() = 41

val G_UNICODE_SCRIPT_TAGALOG: GUnicodeScript get() = 42

val G_UNICODE_SCRIPT_HANUNOO: GUnicodeScript get() = 43

val G_UNICODE_SCRIPT_BUHID: GUnicodeScript get() = 44

val G_UNICODE_SCRIPT_TAGBANWA: GUnicodeScript get() = 45

val G_UNICODE_SCRIPT_BRAILLE: GUnicodeScript get() = 46

val G_UNICODE_SCRIPT_CYPRIOT: GUnicodeScript get() = 47

val G_UNICODE_SCRIPT_LIMBU: GUnicodeScript get() = 48

val G_UNICODE_SCRIPT_OSMANYA: GUnicodeScript get() = 49

val G_UNICODE_SCRIPT_SHAVIAN: GUnicodeScript get() = 50

val G_UNICODE_SCRIPT_LINEAR_B: GUnicodeScript get() = 51

val G_UNICODE_SCRIPT_TAI_LE: GUnicodeScript get() = 52

val G_UNICODE_SCRIPT_UGARITIC: GUnicodeScript get() = 53

val G_UNICODE_SCRIPT_NEW_TAI_LUE: GUnicodeScript get() = 54

val G_UNICODE_SCRIPT_BUGINESE: GUnicodeScript get() = 55

val G_UNICODE_SCRIPT_GLAGOLITIC: GUnicodeScript get() = 56

val G_UNICODE_SCRIPT_TIFINAGH: GUnicodeScript get() = 57

val G_UNICODE_SCRIPT_SYLOTI_NAGRI: GUnicodeScript get() = 58

val G_UNICODE_SCRIPT_OLD_PERSIAN: GUnicodeScript get() = 59

val G_UNICODE_SCRIPT_KHAROSHTHI: GUnicodeScript get() = 60

val G_UNICODE_SCRIPT_UNKNOWN: GUnicodeScript get() = 61

val G_UNICODE_SCRIPT_BALINESE: GUnicodeScript get() = 62

val G_UNICODE_SCRIPT_CUNEIFORM: GUnicodeScript get() = 63

val G_UNICODE_SCRIPT_PHOENICIAN: GUnicodeScript get() = 64

val G_UNICODE_SCRIPT_PHAGS_PA: GUnicodeScript get() = 65

val G_UNICODE_SCRIPT_NKO: GUnicodeScript get() = 66

val G_UNICODE_SCRIPT_KAYAH_LI: GUnicodeScript get() = 67

val G_UNICODE_SCRIPT_LEPCHA: GUnicodeScript get() = 68

val G_UNICODE_SCRIPT_REJANG: GUnicodeScript get() = 69

val G_UNICODE_SCRIPT_SUNDANESE: GUnicodeScript get() = 70

val G_UNICODE_SCRIPT_SAURASHTRA: GUnicodeScript get() = 71

val G_UNICODE_SCRIPT_CHAM: GUnicodeScript get() = 72

val G_UNICODE_SCRIPT_OL_CHIKI: GUnicodeScript get() = 73

val G_UNICODE_SCRIPT_VAI: GUnicodeScript get() = 74

val G_UNICODE_SCRIPT_CARIAN: GUnicodeScript get() = 75

val G_UNICODE_SCRIPT_LYCIAN: GUnicodeScript get() = 76

val G_UNICODE_SCRIPT_LYDIAN: GUnicodeScript get() = 77

val G_UNICODE_SCRIPT_AVESTAN: GUnicodeScript get() = 78

val G_UNICODE_SCRIPT_BAMUM: GUnicodeScript get() = 79

val G_UNICODE_SCRIPT_EGYPTIAN_HIEROGLYPHS: GUnicodeScript get() = 80

val G_UNICODE_SCRIPT_IMPERIAL_ARAMAIC: GUnicodeScript get() = 81

val G_UNICODE_SCRIPT_INSCRIPTIONAL_PAHLAVI: GUnicodeScript get() = 82

val G_UNICODE_SCRIPT_INSCRIPTIONAL_PARTHIAN: GUnicodeScript get() = 83

val G_UNICODE_SCRIPT_JAVANESE: GUnicodeScript get() = 84

val G_UNICODE_SCRIPT_KAITHI: GUnicodeScript get() = 85

val G_UNICODE_SCRIPT_LISU: GUnicodeScript get() = 86

val G_UNICODE_SCRIPT_MEETEI_MAYEK: GUnicodeScript get() = 87

val G_UNICODE_SCRIPT_OLD_SOUTH_ARABIAN: GUnicodeScript get() = 88

val G_UNICODE_SCRIPT_OLD_TURKIC: GUnicodeScript get() = 89

val G_UNICODE_SCRIPT_SAMARITAN: GUnicodeScript get() = 90

val G_UNICODE_SCRIPT_TAI_THAM: GUnicodeScript get() = 91

val G_UNICODE_SCRIPT_TAI_VIET: GUnicodeScript get() = 92

val G_UNICODE_SCRIPT_BATAK: GUnicodeScript get() = 93

val G_UNICODE_SCRIPT_BRAHMI: GUnicodeScript get() = 94

val G_UNICODE_SCRIPT_MANDAIC: GUnicodeScript get() = 95

val G_UNICODE_SCRIPT_CHAKMA: GUnicodeScript get() = 96

val G_UNICODE_SCRIPT_MEROITIC_CURSIVE: GUnicodeScript get() = 97

val G_UNICODE_SCRIPT_MEROITIC_HIEROGLYPHS: GUnicodeScript get() = 98

val G_UNICODE_SCRIPT_MIAO: GUnicodeScript get() = 99

val G_UNICODE_SCRIPT_SHARADA: GUnicodeScript get() = 100

val G_UNICODE_SCRIPT_SORA_SOMPENG: GUnicodeScript get() = 101

val G_UNICODE_SCRIPT_TAKRI: GUnicodeScript get() = 102

val G_UNICODE_SCRIPT_BASSA_VAH: GUnicodeScript get() = 103

val G_UNICODE_SCRIPT_CAUCASIAN_ALBANIAN: GUnicodeScript get() = 104

val G_UNICODE_SCRIPT_DUPLOYAN: GUnicodeScript get() = 105

val G_UNICODE_SCRIPT_ELBASAN: GUnicodeScript get() = 106

val G_UNICODE_SCRIPT_GRANTHA: GUnicodeScript get() = 107

val G_UNICODE_SCRIPT_KHOJKI: GUnicodeScript get() = 108

val G_UNICODE_SCRIPT_KHUDAWADI: GUnicodeScript get() = 109

val G_UNICODE_SCRIPT_LINEAR_A: GUnicodeScript get() = 110

val G_UNICODE_SCRIPT_MAHAJANI: GUnicodeScript get() = 111

val G_UNICODE_SCRIPT_MANICHAEAN: GUnicodeScript get() = 112

val G_UNICODE_SCRIPT_MENDE_KIKAKUI: GUnicodeScript get() = 113

val G_UNICODE_SCRIPT_MODI: GUnicodeScript get() = 114

val G_UNICODE_SCRIPT_MRO: GUnicodeScript get() = 115

val G_UNICODE_SCRIPT_NABATAEAN: GUnicodeScript get() = 116

val G_UNICODE_SCRIPT_OLD_NORTH_ARABIAN: GUnicodeScript get() = 117

val G_UNICODE_SCRIPT_OLD_PERMIC: GUnicodeScript get() = 118

val G_UNICODE_SCRIPT_PAHAWH_HMONG: GUnicodeScript get() = 119

val G_UNICODE_SCRIPT_PALMYRENE: GUnicodeScript get() = 120

val G_UNICODE_SCRIPT_PAU_CIN_HAU: GUnicodeScript get() = 121

val G_UNICODE_SCRIPT_PSALTER_PAHLAVI: GUnicodeScript get() = 122

val G_UNICODE_SCRIPT_SIDDHAM: GUnicodeScript get() = 123

val G_UNICODE_SCRIPT_TIRHUTA: GUnicodeScript get() = 124

val G_UNICODE_SCRIPT_WARANG_CITI: GUnicodeScript get() = 125

val G_UNICODE_SCRIPT_AHOM: GUnicodeScript get() = 126

val G_UNICODE_SCRIPT_ANATOLIAN_HIEROGLYPHS: GUnicodeScript get() = 127

val G_UNICODE_SCRIPT_HATRAN: GUnicodeScript get() = 128

val G_UNICODE_SCRIPT_MULTANI: GUnicodeScript get() = 129

val G_UNICODE_SCRIPT_OLD_HUNGARIAN: GUnicodeScript get() = 130

val G_UNICODE_SCRIPT_SIGNWRITING: GUnicodeScript get() = 131

val G_UNICODE_SCRIPT_ADLAM: GUnicodeScript get() = 132

val G_UNICODE_SCRIPT_BHAIKSUKI: GUnicodeScript get() = 133

val G_UNICODE_SCRIPT_MARCHEN: GUnicodeScript get() = 134

val G_UNICODE_SCRIPT_NEWA: GUnicodeScript get() = 135

val G_UNICODE_SCRIPT_OSAGE: GUnicodeScript get() = 136

val G_UNICODE_SCRIPT_TANGUT: GUnicodeScript get() = 137

val G_UNICODE_SCRIPT_MASARAM_GONDI: GUnicodeScript get() = 138

val G_UNICODE_SCRIPT_NUSHU: GUnicodeScript get() = 139

val G_UNICODE_SCRIPT_SOYOMBO: GUnicodeScript get() = 140

val G_UNICODE_SCRIPT_ZANABAZAR_SQUARE: GUnicodeScript get() = 141

typealias GUnicodeScriptVar = IntVarOf<GUnicodeScript>

typealias GUnicodeScript = Int


val G_NORMALIZE_DEFAULT: GNormalizeMode get() = 0u

val G_NORMALIZE_NFD: GNormalizeMode get() = 0u

val G_NORMALIZE_DEFAULT_COMPOSE: GNormalizeMode get() = 1u

val G_NORMALIZE_NFC: GNormalizeMode get() = 1u

val G_NORMALIZE_ALL: GNormalizeMode get() = 2u

val G_NORMALIZE_NFKD: GNormalizeMode get() = 2u

val G_NORMALIZE_ALL_COMPOSE: GNormalizeMode get() = 3u

val G_NORMALIZE_NFKC: GNormalizeMode get() = 3u

typealias GNormalizeModeVar = UIntVarOf<GNormalizeMode>

typealias GNormalizeMode = UInt


val G_IO_FLAG_APPEND: GIOFlags get() = 1u

val G_IO_FLAG_NONBLOCK: GIOFlags get() = 2u

val G_IO_FLAG_IS_READABLE: GIOFlags get() = 4u

val G_IO_FLAG_IS_WRITABLE: GIOFlags get() = 8u

val G_IO_FLAG_IS_WRITEABLE: GIOFlags get() = 8u

val G_IO_FLAG_IS_SEEKABLE: GIOFlags get() = 16u

val G_IO_FLAG_MASK: GIOFlags get() = 31u

val G_IO_FLAG_GET_MASK: GIOFlags get() = 31u

val G_IO_FLAG_SET_MASK: GIOFlags get() = 3u

typealias GIOFlagsVar = UIntVarOf<GIOFlags>

typealias GIOFlags = UInt


val G_KEY_FILE_NONE: GKeyFileFlags get() = 0u

val G_KEY_FILE_KEEP_COMMENTS: GKeyFileFlags get() = 1u

val G_KEY_FILE_KEEP_TRANSLATIONS: GKeyFileFlags get() = 2u

typealias GKeyFileFlagsVar = UIntVarOf<GKeyFileFlags>

typealias GKeyFileFlags = UInt


val G_MARKUP_DO_NOT_USE_THIS_UNSUPPORTED_FLAG: GMarkupParseFlags get() = 1u

val G_MARKUP_TREAT_CDATA_AS_TEXT: GMarkupParseFlags get() = 2u

val G_MARKUP_PREFIX_ERROR_POSITION: GMarkupParseFlags get() = 4u

val G_MARKUP_IGNORE_QUALIFIED: GMarkupParseFlags get() = 8u

typealias GMarkupParseFlagsVar = UIntVarOf<GMarkupParseFlags>

typealias GMarkupParseFlags = UInt


val G_MARKUP_COLLECT_INVALID: GMarkupCollectType get() = 0u

val G_MARKUP_COLLECT_STRING: GMarkupCollectType get() = 1u

val G_MARKUP_COLLECT_STRDUP: GMarkupCollectType get() = 2u

val G_MARKUP_COLLECT_BOOLEAN: GMarkupCollectType get() = 3u

val G_MARKUP_COLLECT_TRISTATE: GMarkupCollectType get() = 4u

val G_MARKUP_COLLECT_OPTIONAL: GMarkupCollectType get() = 65536u

typealias GMarkupCollectTypeVar = UIntVarOf<GMarkupCollectType>

typealias GMarkupCollectType = UInt


val G_VARIANT_CLASS_BOOLEAN: GVariantClass get() = 98u

val G_VARIANT_CLASS_BYTE: GVariantClass get() = 121u

val G_VARIANT_CLASS_INT16: GVariantClass get() = 110u

val G_VARIANT_CLASS_UINT16: GVariantClass get() = 113u

val G_VARIANT_CLASS_INT32: GVariantClass get() = 105u

val G_VARIANT_CLASS_UINT32: GVariantClass get() = 117u

val G_VARIANT_CLASS_INT64: GVariantClass get() = 120u

val G_VARIANT_CLASS_UINT64: GVariantClass get() = 116u

val G_VARIANT_CLASS_HANDLE: GVariantClass get() = 104u

val G_VARIANT_CLASS_DOUBLE: GVariantClass get() = 100u

val G_VARIANT_CLASS_STRING: GVariantClass get() = 115u

val G_VARIANT_CLASS_OBJECT_PATH: GVariantClass get() = 111u

val G_VARIANT_CLASS_SIGNATURE: GVariantClass get() = 103u

val G_VARIANT_CLASS_VARIANT: GVariantClass get() = 118u

val G_VARIANT_CLASS_MAYBE: GVariantClass get() = 109u

val G_VARIANT_CLASS_ARRAY: GVariantClass get() = 97u

val G_VARIANT_CLASS_TUPLE: GVariantClass get() = 40u

val G_VARIANT_CLASS_DICT_ENTRY: GVariantClass get() = 123u

typealias GVariantClassVar = UIntVarOf<GVariantClass>

typealias GVariantClass = UInt


val G_LOG_FLAG_RECURSION: GLogLevelFlags get() = 1

val G_LOG_FLAG_FATAL: GLogLevelFlags get() = 2

val G_LOG_LEVEL_ERROR: GLogLevelFlags get() = 4

val G_LOG_LEVEL_CRITICAL: GLogLevelFlags get() = 8

val G_LOG_LEVEL_WARNING: GLogLevelFlags get() = 16

val G_LOG_LEVEL_MESSAGE: GLogLevelFlags get() = 32

val G_LOG_LEVEL_INFO: GLogLevelFlags get() = 64

val G_LOG_LEVEL_DEBUG: GLogLevelFlags get() = 128

val G_LOG_LEVEL_MASK: GLogLevelFlags get() = -4

typealias GLogLevelFlagsVar = IntVarOf<GLogLevelFlags>

typealias GLogLevelFlags = Int


val G_LOG_WRITER_HANDLED: GLogWriterOutput get() = 1u

val G_LOG_WRITER_UNHANDLED: GLogWriterOutput get() = 0u

typealias GLogWriterOutputVar = UIntVarOf<GLogWriterOutput>

typealias GLogWriterOutput = UInt


val G_OPTION_FLAG_NONE: GOptionFlags get() = 0u

val G_OPTION_FLAG_HIDDEN: GOptionFlags get() = 1u

val G_OPTION_FLAG_IN_MAIN: GOptionFlags get() = 2u

val G_OPTION_FLAG_REVERSE: GOptionFlags get() = 4u

val G_OPTION_FLAG_NO_ARG: GOptionFlags get() = 8u

val G_OPTION_FLAG_FILENAME: GOptionFlags get() = 16u

val G_OPTION_FLAG_OPTIONAL_ARG: GOptionFlags get() = 32u

val G_OPTION_FLAG_NOALIAS: GOptionFlags get() = 64u

typealias GOptionFlagsVar = UIntVarOf<GOptionFlags>

typealias GOptionFlags = UInt


val G_REGEX_ERROR_COMPILE: GRegexError get() = 0u

val G_REGEX_ERROR_OPTIMIZE: GRegexError get() = 1u

val G_REGEX_ERROR_REPLACE: GRegexError get() = 2u

val G_REGEX_ERROR_MATCH: GRegexError get() = 3u

val G_REGEX_ERROR_INTERNAL: GRegexError get() = 4u

val G_REGEX_ERROR_STRAY_BACKSLASH: GRegexError get() = 101u

val G_REGEX_ERROR_MISSING_CONTROL_CHAR: GRegexError get() = 102u

val G_REGEX_ERROR_UNRECOGNIZED_ESCAPE: GRegexError get() = 103u

val G_REGEX_ERROR_QUANTIFIERS_OUT_OF_ORDER: GRegexError get() = 104u

val G_REGEX_ERROR_QUANTIFIER_TOO_BIG: GRegexError get() = 105u

val G_REGEX_ERROR_UNTERMINATED_CHARACTER_CLASS: GRegexError get() = 106u

val G_REGEX_ERROR_INVALID_ESCAPE_IN_CHARACTER_CLASS: GRegexError get() = 107u

val G_REGEX_ERROR_RANGE_OUT_OF_ORDER: GRegexError get() = 108u

val G_REGEX_ERROR_NOTHING_TO_REPEAT: GRegexError get() = 109u

val G_REGEX_ERROR_UNRECOGNIZED_CHARACTER: GRegexError get() = 112u

val G_REGEX_ERROR_POSIX_NAMED_CLASS_OUTSIDE_CLASS: GRegexError get() = 113u

val G_REGEX_ERROR_UNMATCHED_PARENTHESIS: GRegexError get() = 114u

val G_REGEX_ERROR_INEXISTENT_SUBPATTERN_REFERENCE: GRegexError get() = 115u

val G_REGEX_ERROR_UNTERMINATED_COMMENT: GRegexError get() = 118u

val G_REGEX_ERROR_EXPRESSION_TOO_LARGE: GRegexError get() = 120u

val G_REGEX_ERROR_MEMORY_ERROR: GRegexError get() = 121u

val G_REGEX_ERROR_VARIABLE_LENGTH_LOOKBEHIND: GRegexError get() = 125u

val G_REGEX_ERROR_MALFORMED_CONDITION: GRegexError get() = 126u

val G_REGEX_ERROR_TOO_MANY_CONDITIONAL_BRANCHES: GRegexError get() = 127u

val G_REGEX_ERROR_ASSERTION_EXPECTED: GRegexError get() = 128u

val G_REGEX_ERROR_UNKNOWN_POSIX_CLASS_NAME: GRegexError get() = 130u

val G_REGEX_ERROR_POSIX_COLLATING_ELEMENTS_NOT_SUPPORTED: GRegexError get() = 131u

val G_REGEX_ERROR_HEX_CODE_TOO_LARGE: GRegexError get() = 134u

val G_REGEX_ERROR_INVALID_CONDITION: GRegexError get() = 135u

val G_REGEX_ERROR_SINGLE_BYTE_MATCH_IN_LOOKBEHIND: GRegexError get() = 136u

val G_REGEX_ERROR_INFINITE_LOOP: GRegexError get() = 140u

val G_REGEX_ERROR_MISSING_SUBPATTERN_NAME_TERMINATOR: GRegexError get() = 142u

val G_REGEX_ERROR_DUPLICATE_SUBPATTERN_NAME: GRegexError get() = 143u

val G_REGEX_ERROR_MALFORMED_PROPERTY: GRegexError get() = 146u

val G_REGEX_ERROR_UNKNOWN_PROPERTY: GRegexError get() = 147u

val G_REGEX_ERROR_SUBPATTERN_NAME_TOO_LONG: GRegexError get() = 148u

val G_REGEX_ERROR_TOO_MANY_SUBPATTERNS: GRegexError get() = 149u

val G_REGEX_ERROR_INVALID_OCTAL_VALUE: GRegexError get() = 151u

val G_REGEX_ERROR_TOO_MANY_BRANCHES_IN_DEFINE: GRegexError get() = 154u

val G_REGEX_ERROR_DEFINE_REPETION: GRegexError get() = 155u

val G_REGEX_ERROR_INCONSISTENT_NEWLINE_OPTIONS: GRegexError get() = 156u

val G_REGEX_ERROR_MISSING_BACK_REFERENCE: GRegexError get() = 157u

val G_REGEX_ERROR_INVALID_RELATIVE_REFERENCE: GRegexError get() = 158u

val G_REGEX_ERROR_BACKTRACKING_CONTROL_VERB_ARGUMENT_FORBIDDEN: GRegexError get() = 159u

val G_REGEX_ERROR_UNKNOWN_BACKTRACKING_CONTROL_VERB: GRegexError get() = 160u

val G_REGEX_ERROR_NUMBER_TOO_BIG: GRegexError get() = 161u

val G_REGEX_ERROR_MISSING_SUBPATTERN_NAME: GRegexError get() = 162u

val G_REGEX_ERROR_MISSING_DIGIT: GRegexError get() = 163u

val G_REGEX_ERROR_INVALID_DATA_CHARACTER: GRegexError get() = 164u

val G_REGEX_ERROR_EXTRA_SUBPATTERN_NAME: GRegexError get() = 165u

val G_REGEX_ERROR_BACKTRACKING_CONTROL_VERB_ARGUMENT_REQUIRED: GRegexError get() = 166u

val G_REGEX_ERROR_INVALID_CONTROL_CHAR: GRegexError get() = 168u

val G_REGEX_ERROR_MISSING_NAME: GRegexError get() = 169u

val G_REGEX_ERROR_NOT_SUPPORTED_IN_CLASS: GRegexError get() = 171u

val G_REGEX_ERROR_TOO_MANY_FORWARD_REFERENCES: GRegexError get() = 172u

val G_REGEX_ERROR_NAME_TOO_LONG: GRegexError get() = 175u

val G_REGEX_ERROR_CHARACTER_VALUE_TOO_LARGE: GRegexError get() = 176u

typealias GRegexErrorVar = UIntVarOf<GRegexError>

typealias GRegexError = UInt


val G_REGEX_CASELESS: GRegexCompileFlags get() = 1u

val G_REGEX_MULTILINE: GRegexCompileFlags get() = 2u

val G_REGEX_DOTALL: GRegexCompileFlags get() = 4u

val G_REGEX_EXTENDED: GRegexCompileFlags get() = 8u

val G_REGEX_ANCHORED: GRegexCompileFlags get() = 16u

val G_REGEX_DOLLAR_ENDONLY: GRegexCompileFlags get() = 32u

val G_REGEX_UNGREEDY: GRegexCompileFlags get() = 512u

val G_REGEX_RAW: GRegexCompileFlags get() = 2048u

val G_REGEX_NO_AUTO_CAPTURE: GRegexCompileFlags get() = 4096u

val G_REGEX_OPTIMIZE: GRegexCompileFlags get() = 8192u

val G_REGEX_FIRSTLINE: GRegexCompileFlags get() = 262144u

val G_REGEX_DUPNAMES: GRegexCompileFlags get() = 524288u

val G_REGEX_NEWLINE_CR: GRegexCompileFlags get() = 1048576u

val G_REGEX_NEWLINE_LF: GRegexCompileFlags get() = 2097152u

val G_REGEX_NEWLINE_CRLF: GRegexCompileFlags get() = 3145728u

val G_REGEX_NEWLINE_ANYCRLF: GRegexCompileFlags get() = 5242880u

val G_REGEX_BSR_ANYCRLF: GRegexCompileFlags get() = 8388608u

val G_REGEX_JAVASCRIPT_COMPAT: GRegexCompileFlags get() = 33554432u

typealias GRegexCompileFlagsVar = UIntVarOf<GRegexCompileFlags>

typealias GRegexCompileFlags = UInt


val G_REGEX_MATCH_ANCHORED: GRegexMatchFlags get() = 16u

val G_REGEX_MATCH_NOTBOL: GRegexMatchFlags get() = 128u

val G_REGEX_MATCH_NOTEOL: GRegexMatchFlags get() = 256u

val G_REGEX_MATCH_NOTEMPTY: GRegexMatchFlags get() = 1024u

val G_REGEX_MATCH_PARTIAL: GRegexMatchFlags get() = 32768u

val G_REGEX_MATCH_NEWLINE_CR: GRegexMatchFlags get() = 1048576u

val G_REGEX_MATCH_NEWLINE_LF: GRegexMatchFlags get() = 2097152u

val G_REGEX_MATCH_NEWLINE_CRLF: GRegexMatchFlags get() = 3145728u

val G_REGEX_MATCH_NEWLINE_ANY: GRegexMatchFlags get() = 4194304u

val G_REGEX_MATCH_NEWLINE_ANYCRLF: GRegexMatchFlags get() = 5242880u

val G_REGEX_MATCH_BSR_ANYCRLF: GRegexMatchFlags get() = 8388608u

val G_REGEX_MATCH_BSR_ANY: GRegexMatchFlags get() = 16777216u

val G_REGEX_MATCH_PARTIAL_SOFT: GRegexMatchFlags get() = 32768u

val G_REGEX_MATCH_PARTIAL_HARD: GRegexMatchFlags get() = 134217728u

val G_REGEX_MATCH_NOTEMPTY_ATSTART: GRegexMatchFlags get() = 268435456u

typealias GRegexMatchFlagsVar = UIntVarOf<GRegexMatchFlags>

typealias GRegexMatchFlags = UInt


val G_TOKEN_EOF: GTokenType get() = 0u

val G_TOKEN_LEFT_PAREN: GTokenType get() = 40u

val G_TOKEN_RIGHT_PAREN: GTokenType get() = 41u

val G_TOKEN_LEFT_CURLY: GTokenType get() = 123u

val G_TOKEN_RIGHT_CURLY: GTokenType get() = 125u

val G_TOKEN_LEFT_BRACE: GTokenType get() = 91u

val G_TOKEN_RIGHT_BRACE: GTokenType get() = 93u

val G_TOKEN_EQUAL_SIGN: GTokenType get() = 61u

val G_TOKEN_COMMA: GTokenType get() = 44u

val G_TOKEN_NONE: GTokenType get() = 256u

val G_TOKEN_ERROR: GTokenType get() = 257u

val G_TOKEN_CHAR: GTokenType get() = 258u

val G_TOKEN_BINARY: GTokenType get() = 259u

val G_TOKEN_OCTAL: GTokenType get() = 260u

val G_TOKEN_INT: GTokenType get() = 261u

val G_TOKEN_HEX: GTokenType get() = 262u

val G_TOKEN_FLOAT: GTokenType get() = 263u

val G_TOKEN_STRING: GTokenType get() = 264u

val G_TOKEN_SYMBOL: GTokenType get() = 265u

val G_TOKEN_IDENTIFIER: GTokenType get() = 266u

val G_TOKEN_IDENTIFIER_NULL: GTokenType get() = 267u

val G_TOKEN_COMMENT_SINGLE: GTokenType get() = 268u

val G_TOKEN_COMMENT_MULTI: GTokenType get() = 269u

val G_TOKEN_LAST: GTokenType get() = 270u

typealias GTokenTypeVar = UIntVarOf<GTokenType>

typealias GTokenType = UInt


val G_SLICE_CONFIG_ALWAYS_MALLOC: GSliceConfig get() = 1u

val G_SLICE_CONFIG_BYPASS_MAGAZINES: GSliceConfig get() = 2u

val G_SLICE_CONFIG_WORKING_SET_MSECS: GSliceConfig get() = 3u

val G_SLICE_CONFIG_COLOR_INCREMENT: GSliceConfig get() = 4u

val G_SLICE_CONFIG_CHUNK_SIZES: GSliceConfig get() = 5u

val G_SLICE_CONFIG_CONTENTION_COUNTER: GSliceConfig get() = 6u

typealias GSliceConfigVar = UIntVarOf<GSliceConfig>

typealias GSliceConfig = UInt


val G_SPAWN_ERROR_FORK: GSpawnError get() = 0u

val G_SPAWN_ERROR_READ: GSpawnError get() = 1u

val G_SPAWN_ERROR_CHDIR: GSpawnError get() = 2u

val G_SPAWN_ERROR_ACCES: GSpawnError get() = 3u

val G_SPAWN_ERROR_PERM: GSpawnError get() = 4u

val G_SPAWN_ERROR_TOO_BIG: GSpawnError get() = 5u

val G_SPAWN_ERROR_2BIG: GSpawnError get() = 5u

val G_SPAWN_ERROR_NOEXEC: GSpawnError get() = 6u

val G_SPAWN_ERROR_NAMETOOLONG: GSpawnError get() = 7u

val G_SPAWN_ERROR_NOENT: GSpawnError get() = 8u

val G_SPAWN_ERROR_NOMEM: GSpawnError get() = 9u

val G_SPAWN_ERROR_NOTDIR: GSpawnError get() = 10u

val G_SPAWN_ERROR_LOOP: GSpawnError get() = 11u

val G_SPAWN_ERROR_TXTBUSY: GSpawnError get() = 12u

val G_SPAWN_ERROR_IO: GSpawnError get() = 13u

val G_SPAWN_ERROR_NFILE: GSpawnError get() = 14u

val G_SPAWN_ERROR_MFILE: GSpawnError get() = 15u

val G_SPAWN_ERROR_INVAL: GSpawnError get() = 16u

val G_SPAWN_ERROR_ISDIR: GSpawnError get() = 17u

val G_SPAWN_ERROR_LIBBAD: GSpawnError get() = 18u

val G_SPAWN_ERROR_FAILED: GSpawnError get() = 19u

typealias GSpawnErrorVar = UIntVarOf<GSpawnError>

typealias GSpawnError = UInt


val G_SPAWN_DEFAULT: GSpawnFlags get() = 0u

val G_SPAWN_LEAVE_DESCRIPTORS_OPEN: GSpawnFlags get() = 1u

val G_SPAWN_DO_NOT_REAP_CHILD: GSpawnFlags get() = 2u

val G_SPAWN_SEARCH_PATH: GSpawnFlags get() = 4u

val G_SPAWN_STDOUT_TO_DEV_NULL: GSpawnFlags get() = 8u

val G_SPAWN_STDERR_TO_DEV_NULL: GSpawnFlags get() = 16u

val G_SPAWN_CHILD_INHERITS_STDIN: GSpawnFlags get() = 32u

val G_SPAWN_FILE_AND_ARGV_ZERO: GSpawnFlags get() = 64u

val G_SPAWN_SEARCH_PATH_FROM_ENVP: GSpawnFlags get() = 128u

val G_SPAWN_CLOEXEC_PIPES: GSpawnFlags get() = 256u

typealias GSpawnFlagsVar = UIntVarOf<GSpawnFlags>

typealias GSpawnFlags = UInt


val G_ASCII_ALNUM: GAsciiType get() = 1u

val G_ASCII_ALPHA: GAsciiType get() = 2u

val G_ASCII_CNTRL: GAsciiType get() = 4u

val G_ASCII_DIGIT: GAsciiType get() = 8u

val G_ASCII_GRAPH: GAsciiType get() = 16u

val G_ASCII_LOWER: GAsciiType get() = 32u

val G_ASCII_PRINT: GAsciiType get() = 64u

val G_ASCII_PUNCT: GAsciiType get() = 128u

val G_ASCII_SPACE: GAsciiType get() = 256u

val G_ASCII_UPPER: GAsciiType get() = 512u

val G_ASCII_XDIGIT: GAsciiType get() = 1024u

typealias GAsciiTypeVar = UIntVarOf<GAsciiType>

typealias GAsciiType = UInt


val G_TEST_TRAP_SILENCE_STDOUT: GTestTrapFlags get() = 128u

val G_TEST_TRAP_SILENCE_STDERR: GTestTrapFlags get() = 256u

val G_TEST_TRAP_INHERIT_STDIN: GTestTrapFlags get() = 512u

typealias GTestTrapFlagsVar = UIntVarOf<GTestTrapFlags>

typealias GTestTrapFlags = UInt


val G_TEST_SUBPROCESS_INHERIT_STDIN: GTestSubprocessFlags get() = 1u

val G_TEST_SUBPROCESS_INHERIT_STDOUT: GTestSubprocessFlags get() = 2u

val G_TEST_SUBPROCESS_INHERIT_STDERR: GTestSubprocessFlags get() = 4u

typealias GTestSubprocessFlagsVar = UIntVarOf<GTestSubprocessFlags>

typealias GTestSubprocessFlags = UInt


val G_TYPE_FLAG_CLASSED: GTypeFundamentalFlags get() = 1u

val G_TYPE_FLAG_INSTANTIATABLE: GTypeFundamentalFlags get() = 2u

val G_TYPE_FLAG_DERIVABLE: GTypeFundamentalFlags get() = 4u

val G_TYPE_FLAG_DEEP_DERIVABLE: GTypeFundamentalFlags get() = 8u

typealias GTypeFundamentalFlagsVar = UIntVarOf<GTypeFundamentalFlags>

typealias GTypeFundamentalFlags = UInt


val G_TYPE_DEBUG_NONE: GTypeDebugFlags get() = 0u

val G_TYPE_DEBUG_OBJECTS: GTypeDebugFlags get() = 1u

val G_TYPE_DEBUG_SIGNALS: GTypeDebugFlags get() = 2u

val G_TYPE_DEBUG_INSTANCE_COUNT: GTypeDebugFlags get() = 4u

val G_TYPE_DEBUG_MASK: GTypeDebugFlags get() = 7u

typealias GTypeDebugFlagsVar = UIntVarOf<GTypeDebugFlags>

typealias GTypeDebugFlags = UInt


val G_TYPE_FLAG_ABSTRACT: GTypeFlags get() = 16u

val G_TYPE_FLAG_VALUE_ABSTRACT: GTypeFlags get() = 32u

typealias GTypeFlagsVar = UIntVarOf<GTypeFlags>

typealias GTypeFlags = UInt


val G_PARAM_READABLE: GParamFlags get() = 1

val G_PARAM_WRITABLE: GParamFlags get() = 2

val G_PARAM_READWRITE: GParamFlags get() = 3

val G_PARAM_CONSTRUCT: GParamFlags get() = 4

val G_PARAM_CONSTRUCT_ONLY: GParamFlags get() = 8

val G_PARAM_LAX_VALIDATION: GParamFlags get() = 16

val G_PARAM_STATIC_NAME: GParamFlags get() = 32

val G_PARAM_PRIVATE: GParamFlags get() = 32

val G_PARAM_STATIC_NICK: GParamFlags get() = 64

val G_PARAM_STATIC_BLURB: GParamFlags get() = 128

val G_PARAM_EXPLICIT_NOTIFY: GParamFlags get() = 1073741824

val G_PARAM_DEPRECATED: GParamFlags get() = -2147483648

typealias GParamFlagsVar = IntVarOf<GParamFlags>

typealias GParamFlags = Int


val G_SIGNAL_RUN_FIRST: GSignalFlags get() = 1u

val G_SIGNAL_RUN_LAST: GSignalFlags get() = 2u

val G_SIGNAL_RUN_CLEANUP: GSignalFlags get() = 4u

val G_SIGNAL_NO_RECURSE: GSignalFlags get() = 8u

val G_SIGNAL_DETAILED: GSignalFlags get() = 16u

val G_SIGNAL_ACTION: GSignalFlags get() = 32u

val G_SIGNAL_NO_HOOKS: GSignalFlags get() = 64u

val G_SIGNAL_MUST_COLLECT: GSignalFlags get() = 128u

val G_SIGNAL_DEPRECATED: GSignalFlags get() = 256u

typealias GSignalFlagsVar = UIntVarOf<GSignalFlags>

typealias GSignalFlags = UInt


val G_CONNECT_AFTER: GConnectFlags get() = 1u

val G_CONNECT_SWAPPED: GConnectFlags get() = 2u

typealias GConnectFlagsVar = UIntVarOf<GConnectFlags>

typealias GConnectFlags = UInt


val G_SIGNAL_MATCH_ID: GSignalMatchType get() = 1u

val G_SIGNAL_MATCH_DETAIL: GSignalMatchType get() = 2u

val G_SIGNAL_MATCH_CLOSURE: GSignalMatchType get() = 4u

val G_SIGNAL_MATCH_FUNC: GSignalMatchType get() = 8u

val G_SIGNAL_MATCH_DATA: GSignalMatchType get() = 16u

val G_SIGNAL_MATCH_UNBLOCKED: GSignalMatchType get() = 32u

typealias GSignalMatchTypeVar = UIntVarOf<GSignalMatchType>

typealias GSignalMatchType = UInt


val G_BINDING_DEFAULT: GBindingFlags get() = 0u

val G_BINDING_BIDIRECTIONAL: GBindingFlags get() = 1u

val G_BINDING_SYNC_CREATE: GBindingFlags get() = 2u

val G_BINDING_INVERT_BOOLEAN: GBindingFlags get() = 4u

typealias GBindingFlagsVar = UIntVarOf<GBindingFlags>

typealias GBindingFlags = UInt


val G_APP_INFO_CREATE_NONE: GAppInfoCreateFlags get() = 0u

val G_APP_INFO_CREATE_NEEDS_TERMINAL: GAppInfoCreateFlags get() = 1u

val G_APP_INFO_CREATE_SUPPORTS_URIS: GAppInfoCreateFlags get() = 2u

val G_APP_INFO_CREATE_SUPPORTS_STARTUP_NOTIFICATION: GAppInfoCreateFlags get() = 4u

typealias GAppInfoCreateFlagsVar = UIntVarOf<GAppInfoCreateFlags>

typealias GAppInfoCreateFlags = UInt


val G_CONVERTER_NO_FLAGS: GConverterFlags get() = 0u

val G_CONVERTER_INPUT_AT_END: GConverterFlags get() = 1u

val G_CONVERTER_FLUSH: GConverterFlags get() = 2u

typealias GConverterFlagsVar = UIntVarOf<GConverterFlags>

typealias GConverterFlags = UInt


val G_CONVERTER_ERROR: GConverterResult get() = 0u

val G_CONVERTER_CONVERTED: GConverterResult get() = 1u

val G_CONVERTER_FINISHED: GConverterResult get() = 2u

val G_CONVERTER_FLUSHED: GConverterResult get() = 3u

typealias GConverterResultVar = UIntVarOf<GConverterResult>

typealias GConverterResult = UInt


val G_FILE_ATTRIBUTE_TYPE_INVALID: GFileAttributeType get() = 0u

val G_FILE_ATTRIBUTE_TYPE_STRING: GFileAttributeType get() = 1u

val G_FILE_ATTRIBUTE_TYPE_BYTE_STRING: GFileAttributeType get() = 2u

val G_FILE_ATTRIBUTE_TYPE_BOOLEAN: GFileAttributeType get() = 3u

val G_FILE_ATTRIBUTE_TYPE_UINT32: GFileAttributeType get() = 4u

val G_FILE_ATTRIBUTE_TYPE_INT32: GFileAttributeType get() = 5u

val G_FILE_ATTRIBUTE_TYPE_UINT64: GFileAttributeType get() = 6u

val G_FILE_ATTRIBUTE_TYPE_INT64: GFileAttributeType get() = 7u

val G_FILE_ATTRIBUTE_TYPE_OBJECT: GFileAttributeType get() = 8u

val G_FILE_ATTRIBUTE_TYPE_STRINGV: GFileAttributeType get() = 9u

typealias GFileAttributeTypeVar = UIntVarOf<GFileAttributeType>

typealias GFileAttributeType = UInt


val G_FILE_ATTRIBUTE_INFO_NONE: GFileAttributeInfoFlags get() = 0u

val G_FILE_ATTRIBUTE_INFO_COPY_WITH_FILE: GFileAttributeInfoFlags get() = 1u

val G_FILE_ATTRIBUTE_INFO_COPY_WHEN_MOVED: GFileAttributeInfoFlags get() = 2u

typealias GFileAttributeInfoFlagsVar = UIntVarOf<GFileAttributeInfoFlags>

typealias GFileAttributeInfoFlags = UInt


val G_FILE_ATTRIBUTE_STATUS_UNSET: GFileAttributeStatus get() = 0u

val G_FILE_ATTRIBUTE_STATUS_SET: GFileAttributeStatus get() = 1u

val G_FILE_ATTRIBUTE_STATUS_ERROR_SETTING: GFileAttributeStatus get() = 2u

typealias GFileAttributeStatusVar = UIntVarOf<GFileAttributeStatus>

typealias GFileAttributeStatus = UInt


val G_FILE_QUERY_INFO_NONE: GFileQueryInfoFlags get() = 0u

val G_FILE_QUERY_INFO_NOFOLLOW_SYMLINKS: GFileQueryInfoFlags get() = 1u

typealias GFileQueryInfoFlagsVar = UIntVarOf<GFileQueryInfoFlags>

typealias GFileQueryInfoFlags = UInt


val G_FILE_CREATE_NONE: GFileCreateFlags get() = 0u

val G_FILE_CREATE_PRIVATE: GFileCreateFlags get() = 1u

val G_FILE_CREATE_REPLACE_DESTINATION: GFileCreateFlags get() = 2u

typealias GFileCreateFlagsVar = UIntVarOf<GFileCreateFlags>

typealias GFileCreateFlags = UInt


val G_FILE_MEASURE_NONE: GFileMeasureFlags get() = 0u

val G_FILE_MEASURE_REPORT_ANY_ERROR: GFileMeasureFlags get() = 2u

val G_FILE_MEASURE_APPARENT_SIZE: GFileMeasureFlags get() = 4u

val G_FILE_MEASURE_NO_XDEV: GFileMeasureFlags get() = 8u

typealias GFileMeasureFlagsVar = UIntVarOf<GFileMeasureFlags>

typealias GFileMeasureFlags = UInt


val G_MOUNT_MOUNT_NONE: GMountMountFlags get() = 0u

typealias GMountMountFlagsVar = UIntVarOf<GMountMountFlags>

typealias GMountMountFlags = UInt


val G_MOUNT_UNMOUNT_NONE: GMountUnmountFlags get() = 0u

val G_MOUNT_UNMOUNT_FORCE: GMountUnmountFlags get() = 1u

typealias GMountUnmountFlagsVar = UIntVarOf<GMountUnmountFlags>

typealias GMountUnmountFlags = UInt


val G_DRIVE_START_NONE: GDriveStartFlags get() = 0u

typealias GDriveStartFlagsVar = UIntVarOf<GDriveStartFlags>

typealias GDriveStartFlags = UInt


val G_FILE_COPY_NONE: GFileCopyFlags get() = 0u

val G_FILE_COPY_OVERWRITE: GFileCopyFlags get() = 1u

val G_FILE_COPY_BACKUP: GFileCopyFlags get() = 2u

val G_FILE_COPY_NOFOLLOW_SYMLINKS: GFileCopyFlags get() = 4u

val G_FILE_COPY_ALL_METADATA: GFileCopyFlags get() = 8u

val G_FILE_COPY_NO_FALLBACK_FOR_MOVE: GFileCopyFlags get() = 16u

val G_FILE_COPY_TARGET_DEFAULT_PERMS: GFileCopyFlags get() = 32u

typealias GFileCopyFlagsVar = UIntVarOf<GFileCopyFlags>

typealias GFileCopyFlags = UInt


val G_FILE_MONITOR_NONE: GFileMonitorFlags get() = 0u

val G_FILE_MONITOR_WATCH_MOUNTS: GFileMonitorFlags get() = 1u

val G_FILE_MONITOR_SEND_MOVED: GFileMonitorFlags get() = 2u

val G_FILE_MONITOR_WATCH_HARD_LINKS: GFileMonitorFlags get() = 4u

val G_FILE_MONITOR_WATCH_MOVES: GFileMonitorFlags get() = 8u

typealias GFileMonitorFlagsVar = UIntVarOf<GFileMonitorFlags>

typealias GFileMonitorFlags = UInt


val G_FILE_TYPE_UNKNOWN: GFileType get() = 0u

val G_FILE_TYPE_REGULAR: GFileType get() = 1u

val G_FILE_TYPE_DIRECTORY: GFileType get() = 2u

val G_FILE_TYPE_SYMBOLIC_LINK: GFileType get() = 3u

val G_FILE_TYPE_SPECIAL: GFileType get() = 4u

val G_FILE_TYPE_SHORTCUT: GFileType get() = 5u

val G_FILE_TYPE_MOUNTABLE: GFileType get() = 6u

typealias GFileTypeVar = UIntVarOf<GFileType>

typealias GFileType = UInt


val G_FILESYSTEM_PREVIEW_TYPE_IF_ALWAYS: GFilesystemPreviewType get() = 0u

val G_FILESYSTEM_PREVIEW_TYPE_IF_LOCAL: GFilesystemPreviewType get() = 1u

val G_FILESYSTEM_PREVIEW_TYPE_NEVER: GFilesystemPreviewType get() = 2u

typealias GFilesystemPreviewTypeVar = UIntVarOf<GFilesystemPreviewType>

typealias GFilesystemPreviewType = UInt


val G_IO_ERROR_FAILED: GIOErrorEnum get() = 0u

val G_IO_ERROR_NOT_FOUND: GIOErrorEnum get() = 1u

val G_IO_ERROR_EXISTS: GIOErrorEnum get() = 2u

val G_IO_ERROR_IS_DIRECTORY: GIOErrorEnum get() = 3u

val G_IO_ERROR_NOT_DIRECTORY: GIOErrorEnum get() = 4u

val G_IO_ERROR_NOT_EMPTY: GIOErrorEnum get() = 5u

val G_IO_ERROR_NOT_REGULAR_FILE: GIOErrorEnum get() = 6u

val G_IO_ERROR_NOT_SYMBOLIC_LINK: GIOErrorEnum get() = 7u

val G_IO_ERROR_NOT_MOUNTABLE_FILE: GIOErrorEnum get() = 8u

val G_IO_ERROR_FILENAME_TOO_LONG: GIOErrorEnum get() = 9u

val G_IO_ERROR_INVALID_FILENAME: GIOErrorEnum get() = 10u

val G_IO_ERROR_TOO_MANY_LINKS: GIOErrorEnum get() = 11u

val G_IO_ERROR_NO_SPACE: GIOErrorEnum get() = 12u

val G_IO_ERROR_INVALID_ARGUMENT: GIOErrorEnum get() = 13u

val G_IO_ERROR_PERMISSION_DENIED: GIOErrorEnum get() = 14u

val G_IO_ERROR_NOT_SUPPORTED: GIOErrorEnum get() = 15u

val G_IO_ERROR_NOT_MOUNTED: GIOErrorEnum get() = 16u

val G_IO_ERROR_ALREADY_MOUNTED: GIOErrorEnum get() = 17u

val G_IO_ERROR_CLOSED: GIOErrorEnum get() = 18u

val G_IO_ERROR_CANCELLED: GIOErrorEnum get() = 19u

val G_IO_ERROR_PENDING: GIOErrorEnum get() = 20u

val G_IO_ERROR_READ_ONLY: GIOErrorEnum get() = 21u

val G_IO_ERROR_CANT_CREATE_BACKUP: GIOErrorEnum get() = 22u

val G_IO_ERROR_WRONG_ETAG: GIOErrorEnum get() = 23u

val G_IO_ERROR_TIMED_OUT: GIOErrorEnum get() = 24u

val G_IO_ERROR_WOULD_RECURSE: GIOErrorEnum get() = 25u

val G_IO_ERROR_BUSY: GIOErrorEnum get() = 26u

val G_IO_ERROR_WOULD_BLOCK: GIOErrorEnum get() = 27u

val G_IO_ERROR_HOST_NOT_FOUND: GIOErrorEnum get() = 28u

val G_IO_ERROR_WOULD_MERGE: GIOErrorEnum get() = 29u

val G_IO_ERROR_FAILED_HANDLED: GIOErrorEnum get() = 30u

val G_IO_ERROR_TOO_MANY_OPEN_FILES: GIOErrorEnum get() = 31u

val G_IO_ERROR_NOT_INITIALIZED: GIOErrorEnum get() = 32u

val G_IO_ERROR_ADDRESS_IN_USE: GIOErrorEnum get() = 33u

val G_IO_ERROR_PARTIAL_INPUT: GIOErrorEnum get() = 34u

val G_IO_ERROR_INVALID_DATA: GIOErrorEnum get() = 35u

val G_IO_ERROR_DBUS_ERROR: GIOErrorEnum get() = 36u

val G_IO_ERROR_HOST_UNREACHABLE: GIOErrorEnum get() = 37u

val G_IO_ERROR_NETWORK_UNREACHABLE: GIOErrorEnum get() = 38u

val G_IO_ERROR_CONNECTION_REFUSED: GIOErrorEnum get() = 39u

val G_IO_ERROR_PROXY_FAILED: GIOErrorEnum get() = 40u

val G_IO_ERROR_PROXY_AUTH_FAILED: GIOErrorEnum get() = 41u

val G_IO_ERROR_PROXY_NEED_AUTH: GIOErrorEnum get() = 42u

val G_IO_ERROR_PROXY_NOT_ALLOWED: GIOErrorEnum get() = 43u

val G_IO_ERROR_BROKEN_PIPE: GIOErrorEnum get() = 44u

val G_IO_ERROR_CONNECTION_CLOSED: GIOErrorEnum get() = 44u

val G_IO_ERROR_NOT_CONNECTED: GIOErrorEnum get() = 45u

val G_IO_ERROR_MESSAGE_TOO_LARGE: GIOErrorEnum get() = 46u

typealias GIOErrorEnumVar = UIntVarOf<GIOErrorEnum>

typealias GIOErrorEnum = UInt


val G_ASK_PASSWORD_NEED_PASSWORD: GAskPasswordFlags get() = 1u

val G_ASK_PASSWORD_NEED_USERNAME: GAskPasswordFlags get() = 2u

val G_ASK_PASSWORD_NEED_DOMAIN: GAskPasswordFlags get() = 4u

val G_ASK_PASSWORD_SAVING_SUPPORTED: GAskPasswordFlags get() = 8u

val G_ASK_PASSWORD_ANONYMOUS_SUPPORTED: GAskPasswordFlags get() = 16u

typealias GAskPasswordFlagsVar = UIntVarOf<GAskPasswordFlags>

typealias GAskPasswordFlags = UInt


val G_OUTPUT_STREAM_SPLICE_NONE: GOutputStreamSpliceFlags get() = 0u

val G_OUTPUT_STREAM_SPLICE_CLOSE_SOURCE: GOutputStreamSpliceFlags get() = 1u

val G_OUTPUT_STREAM_SPLICE_CLOSE_TARGET: GOutputStreamSpliceFlags get() = 2u

typealias GOutputStreamSpliceFlagsVar = UIntVarOf<GOutputStreamSpliceFlags>

typealias GOutputStreamSpliceFlags = UInt


val G_IO_STREAM_SPLICE_NONE: GIOStreamSpliceFlags get() = 0u

val G_IO_STREAM_SPLICE_CLOSE_STREAM1: GIOStreamSpliceFlags get() = 1u

val G_IO_STREAM_SPLICE_CLOSE_STREAM2: GIOStreamSpliceFlags get() = 2u

val G_IO_STREAM_SPLICE_WAIT_FOR_BOTH: GIOStreamSpliceFlags get() = 4u

typealias GIOStreamSpliceFlagsVar = UIntVarOf<GIOStreamSpliceFlags>

typealias GIOStreamSpliceFlags = UInt


val G_RESOLVER_RECORD_SRV: GResolverRecordType get() = 1u

val G_RESOLVER_RECORD_MX: GResolverRecordType get() = 2u

val G_RESOLVER_RECORD_TXT: GResolverRecordType get() = 3u

val G_RESOLVER_RECORD_SOA: GResolverRecordType get() = 4u

val G_RESOLVER_RECORD_NS: GResolverRecordType get() = 5u

typealias GResolverRecordTypeVar = UIntVarOf<GResolverRecordType>

typealias GResolverRecordType = UInt


val G_RESOURCE_FLAGS_NONE: GResourceFlags get() = 0u

val G_RESOURCE_FLAGS_COMPRESSED: GResourceFlags get() = 1u

typealias GResourceFlagsVar = UIntVarOf<GResourceFlags>

typealias GResourceFlags = UInt


val G_RESOURCE_LOOKUP_FLAGS_NONE: GResourceLookupFlags get() = 0u

typealias GResourceLookupFlagsVar = UIntVarOf<GResourceLookupFlags>

typealias GResourceLookupFlags = UInt


val G_SOCKET_FAMILY_INVALID: GSocketFamily get() = 0u

val G_SOCKET_FAMILY_UNIX: GSocketFamily get() = 1u

val G_SOCKET_FAMILY_IPV4: GSocketFamily get() = 2u

val G_SOCKET_FAMILY_IPV6: GSocketFamily get() = 10u

typealias GSocketFamilyVar = UIntVarOf<GSocketFamily>

typealias GSocketFamily = UInt


val G_SOCKET_MSG_NONE: GSocketMsgFlags get() = 0u

val G_SOCKET_MSG_OOB: GSocketMsgFlags get() = 1u

val G_SOCKET_MSG_PEEK: GSocketMsgFlags get() = 2u

val G_SOCKET_MSG_DONTROUTE: GSocketMsgFlags get() = 4u

typealias GSocketMsgFlagsVar = UIntVarOf<GSocketMsgFlags>

typealias GSocketMsgFlags = UInt


val G_SOCKET_PROTOCOL_UNKNOWN: GSocketProtocol get() = -1

val G_SOCKET_PROTOCOL_DEFAULT: GSocketProtocol get() = 0

val G_SOCKET_PROTOCOL_TCP: GSocketProtocol get() = 6

val G_SOCKET_PROTOCOL_UDP: GSocketProtocol get() = 17

val G_SOCKET_PROTOCOL_SCTP: GSocketProtocol get() = 132

typealias GSocketProtocolVar = IntVarOf<GSocketProtocol>

typealias GSocketProtocol = Int


val G_BUS_TYPE_STARTER: GBusType get() = -1

val G_BUS_TYPE_NONE: GBusType get() = 0

val G_BUS_TYPE_SYSTEM: GBusType get() = 1

val G_BUS_TYPE_SESSION: GBusType get() = 2

typealias GBusTypeVar = IntVarOf<GBusType>

typealias GBusType = Int


val G_BUS_NAME_OWNER_FLAGS_NONE: GBusNameOwnerFlags get() = 0u

val G_BUS_NAME_OWNER_FLAGS_ALLOW_REPLACEMENT: GBusNameOwnerFlags get() = 1u

val G_BUS_NAME_OWNER_FLAGS_REPLACE: GBusNameOwnerFlags get() = 2u

val G_BUS_NAME_OWNER_FLAGS_DO_NOT_QUEUE: GBusNameOwnerFlags get() = 4u

typealias GBusNameOwnerFlagsVar = UIntVarOf<GBusNameOwnerFlags>

typealias GBusNameOwnerFlags = UInt


val G_BUS_NAME_WATCHER_FLAGS_NONE: GBusNameWatcherFlags get() = 0u

val G_BUS_NAME_WATCHER_FLAGS_AUTO_START: GBusNameWatcherFlags get() = 1u

typealias GBusNameWatcherFlagsVar = UIntVarOf<GBusNameWatcherFlags>

typealias GBusNameWatcherFlags = UInt


val G_DBUS_PROXY_FLAGS_NONE: GDBusProxyFlags get() = 0u

val G_DBUS_PROXY_FLAGS_DO_NOT_LOAD_PROPERTIES: GDBusProxyFlags get() = 1u

val G_DBUS_PROXY_FLAGS_DO_NOT_CONNECT_SIGNALS: GDBusProxyFlags get() = 2u

val G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START: GDBusProxyFlags get() = 4u

val G_DBUS_PROXY_FLAGS_GET_INVALIDATED_PROPERTIES: GDBusProxyFlags get() = 8u

val G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START_AT_CONSTRUCTION: GDBusProxyFlags get() = 16u

typealias GDBusProxyFlagsVar = UIntVarOf<GDBusProxyFlags>

typealias GDBusProxyFlags = UInt


val G_DBUS_CONNECTION_FLAGS_NONE: GDBusConnectionFlags get() = 0u

val G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_CLIENT: GDBusConnectionFlags get() = 1u

val G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_SERVER: GDBusConnectionFlags get() = 2u

val G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS: GDBusConnectionFlags get() = 4u

val G_DBUS_CONNECTION_FLAGS_MESSAGE_BUS_CONNECTION: GDBusConnectionFlags get() = 8u

val G_DBUS_CONNECTION_FLAGS_DELAY_MESSAGE_PROCESSING: GDBusConnectionFlags get() = 16u

typealias GDBusConnectionFlagsVar = UIntVarOf<GDBusConnectionFlags>

typealias GDBusConnectionFlags = UInt


val G_DBUS_CAPABILITY_FLAGS_NONE: GDBusCapabilityFlags get() = 0u

val G_DBUS_CAPABILITY_FLAGS_UNIX_FD_PASSING: GDBusCapabilityFlags get() = 1u

typealias GDBusCapabilityFlagsVar = UIntVarOf<GDBusCapabilityFlags>

typealias GDBusCapabilityFlags = UInt


val G_DBUS_CALL_FLAGS_NONE: GDBusCallFlags get() = 0u

val G_DBUS_CALL_FLAGS_NO_AUTO_START: GDBusCallFlags get() = 1u

val G_DBUS_CALL_FLAGS_ALLOW_INTERACTIVE_AUTHORIZATION: GDBusCallFlags get() = 2u

typealias GDBusCallFlagsVar = UIntVarOf<GDBusCallFlags>

typealias GDBusCallFlags = UInt


val G_DBUS_MESSAGE_FLAGS_NONE: GDBusMessageFlags get() = 0u

val G_DBUS_MESSAGE_FLAGS_NO_REPLY_EXPECTED: GDBusMessageFlags get() = 1u

val G_DBUS_MESSAGE_FLAGS_NO_AUTO_START: GDBusMessageFlags get() = 2u

val G_DBUS_MESSAGE_FLAGS_ALLOW_INTERACTIVE_AUTHORIZATION: GDBusMessageFlags get() = 4u

typealias GDBusMessageFlagsVar = UIntVarOf<GDBusMessageFlags>

typealias GDBusMessageFlags = UInt


val G_DBUS_PROPERTY_INFO_FLAGS_NONE: GDBusPropertyInfoFlags get() = 0u

val G_DBUS_PROPERTY_INFO_FLAGS_READABLE: GDBusPropertyInfoFlags get() = 1u

val G_DBUS_PROPERTY_INFO_FLAGS_WRITABLE: GDBusPropertyInfoFlags get() = 2u

typealias GDBusPropertyInfoFlagsVar = UIntVarOf<GDBusPropertyInfoFlags>

typealias GDBusPropertyInfoFlags = UInt


val G_DBUS_SUBTREE_FLAGS_NONE: GDBusSubtreeFlags get() = 0u

val G_DBUS_SUBTREE_FLAGS_DISPATCH_TO_UNENUMERATED_NODES: GDBusSubtreeFlags get() = 1u

typealias GDBusSubtreeFlagsVar = UIntVarOf<GDBusSubtreeFlags>

typealias GDBusSubtreeFlags = UInt


val G_DBUS_SERVER_FLAGS_NONE: GDBusServerFlags get() = 0u

val G_DBUS_SERVER_FLAGS_RUN_IN_THREAD: GDBusServerFlags get() = 1u

val G_DBUS_SERVER_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS: GDBusServerFlags get() = 2u

typealias GDBusServerFlagsVar = UIntVarOf<GDBusServerFlags>

typealias GDBusServerFlags = UInt


val G_DBUS_SIGNAL_FLAGS_NONE: GDBusSignalFlags get() = 0u

val G_DBUS_SIGNAL_FLAGS_NO_MATCH_RULE: GDBusSignalFlags get() = 1u

val G_DBUS_SIGNAL_FLAGS_MATCH_ARG0_NAMESPACE: GDBusSignalFlags get() = 2u

val G_DBUS_SIGNAL_FLAGS_MATCH_ARG0_PATH: GDBusSignalFlags get() = 4u

typealias GDBusSignalFlagsVar = UIntVarOf<GDBusSignalFlags>

typealias GDBusSignalFlags = UInt


val G_DBUS_SEND_MESSAGE_FLAGS_NONE: GDBusSendMessageFlags get() = 0u

val G_DBUS_SEND_MESSAGE_FLAGS_PRESERVE_SERIAL: GDBusSendMessageFlags get() = 1u

typealias GDBusSendMessageFlagsVar = UIntVarOf<GDBusSendMessageFlags>

typealias GDBusSendMessageFlags = UInt


val G_DBUS_MESSAGE_BYTE_ORDER_BIG_ENDIAN: GDBusMessageByteOrder get() = 66u

val G_DBUS_MESSAGE_BYTE_ORDER_LITTLE_ENDIAN: GDBusMessageByteOrder get() = 108u

typealias GDBusMessageByteOrderVar = UIntVarOf<GDBusMessageByteOrder>

typealias GDBusMessageByteOrder = UInt


val G_APPLICATION_FLAGS_NONE: GApplicationFlags get() = 0u

val G_APPLICATION_IS_SERVICE: GApplicationFlags get() = 1u

val G_APPLICATION_IS_LAUNCHER: GApplicationFlags get() = 2u

val G_APPLICATION_HANDLES_OPEN: GApplicationFlags get() = 4u

val G_APPLICATION_HANDLES_COMMAND_LINE: GApplicationFlags get() = 8u

val G_APPLICATION_SEND_ENVIRONMENT: GApplicationFlags get() = 16u

val G_APPLICATION_NON_UNIQUE: GApplicationFlags get() = 32u

val G_APPLICATION_CAN_OVERRIDE_APP_ID: GApplicationFlags get() = 64u

typealias GApplicationFlagsVar = UIntVarOf<GApplicationFlags>

typealias GApplicationFlags = UInt


val G_TLS_CERTIFICATE_UNKNOWN_CA: GTlsCertificateFlags get() = 1u

val G_TLS_CERTIFICATE_BAD_IDENTITY: GTlsCertificateFlags get() = 2u

val G_TLS_CERTIFICATE_NOT_ACTIVATED: GTlsCertificateFlags get() = 4u

val G_TLS_CERTIFICATE_EXPIRED: GTlsCertificateFlags get() = 8u

val G_TLS_CERTIFICATE_REVOKED: GTlsCertificateFlags get() = 16u

val G_TLS_CERTIFICATE_INSECURE: GTlsCertificateFlags get() = 32u

val G_TLS_CERTIFICATE_GENERIC_ERROR: GTlsCertificateFlags get() = 64u

val G_TLS_CERTIFICATE_VALIDATE_ALL: GTlsCertificateFlags get() = 127u

typealias GTlsCertificateFlagsVar = UIntVarOf<GTlsCertificateFlags>

typealias GTlsCertificateFlags = UInt


val G_TLS_PASSWORD_NONE: _GTlsPasswordFlags get() = 0u

val G_TLS_PASSWORD_RETRY: _GTlsPasswordFlags get() = 2u

val G_TLS_PASSWORD_MANY_TRIES: _GTlsPasswordFlags get() = 4u

val G_TLS_PASSWORD_FINAL_TRY: _GTlsPasswordFlags get() = 8u

typealias _GTlsPasswordFlagsVar = UIntVarOf<_GTlsPasswordFlags>

typealias _GTlsPasswordFlags = UInt


val G_DBUS_INTERFACE_SKELETON_FLAGS_NONE: GDBusInterfaceSkeletonFlags get() = 0u

val G_DBUS_INTERFACE_SKELETON_FLAGS_HANDLE_METHOD_INVOCATIONS_IN_THREAD: GDBusInterfaceSkeletonFlags get() = 1u

typealias GDBusInterfaceSkeletonFlagsVar = UIntVarOf<GDBusInterfaceSkeletonFlags>

typealias GDBusInterfaceSkeletonFlags = UInt


val G_DBUS_OBJECT_MANAGER_CLIENT_FLAGS_NONE: GDBusObjectManagerClientFlags get() = 0u

val G_DBUS_OBJECT_MANAGER_CLIENT_FLAGS_DO_NOT_AUTO_START: GDBusObjectManagerClientFlags get() = 1u

typealias GDBusObjectManagerClientFlagsVar = UIntVarOf<GDBusObjectManagerClientFlags>

typealias GDBusObjectManagerClientFlags = UInt


val G_TLS_DATABASE_VERIFY_NONE: GTlsDatabaseVerifyFlags get() = 0u

typealias GTlsDatabaseVerifyFlagsVar = UIntVarOf<GTlsDatabaseVerifyFlags>

typealias GTlsDatabaseVerifyFlags = UInt


val G_TLS_DATABASE_LOOKUP_NONE: GTlsDatabaseLookupFlags get() = 0u

val G_TLS_DATABASE_LOOKUP_KEYPAIR: GTlsDatabaseLookupFlags get() = 1u

typealias GTlsDatabaseLookupFlagsVar = UIntVarOf<GTlsDatabaseLookupFlags>

typealias GTlsDatabaseLookupFlags = UInt


val G_TLS_CERTIFICATE_REQUEST_NONE: GTlsCertificateRequestFlags get() = 0u

typealias GTlsCertificateRequestFlagsVar = UIntVarOf<GTlsCertificateRequestFlags>

typealias GTlsCertificateRequestFlags = UInt


val G_TEST_DBUS_NONE: GTestDBusFlags get() = 0u

typealias GTestDBusFlagsVar = UIntVarOf<GTestDBusFlags>

typealias GTestDBusFlags = UInt


val G_SUBPROCESS_FLAGS_NONE: GSubprocessFlags get() = 0u

val G_SUBPROCESS_FLAGS_STDIN_PIPE: GSubprocessFlags get() = 1u

val G_SUBPROCESS_FLAGS_STDIN_INHERIT: GSubprocessFlags get() = 2u

val G_SUBPROCESS_FLAGS_STDOUT_PIPE: GSubprocessFlags get() = 4u

val G_SUBPROCESS_FLAGS_STDOUT_SILENCE: GSubprocessFlags get() = 8u

val G_SUBPROCESS_FLAGS_STDERR_PIPE: GSubprocessFlags get() = 16u

val G_SUBPROCESS_FLAGS_STDERR_SILENCE: GSubprocessFlags get() = 32u

val G_SUBPROCESS_FLAGS_STDERR_MERGE: GSubprocessFlags get() = 64u

val G_SUBPROCESS_FLAGS_INHERIT_FDS: GSubprocessFlags get() = 128u

typealias GSubprocessFlagsVar = UIntVarOf<GSubprocessFlags>

typealias GSubprocessFlags = UInt


val G_NETWORK_CONNECTIVITY_LOCAL: GNetworkConnectivity get() = 1u

val G_NETWORK_CONNECTIVITY_LIMITED: GNetworkConnectivity get() = 2u

val G_NETWORK_CONNECTIVITY_PORTAL: GNetworkConnectivity get() = 3u

val G_NETWORK_CONNECTIVITY_FULL: GNetworkConnectivity get() = 4u

typealias GNetworkConnectivityVar = UIntVarOf<GNetworkConnectivity>

typealias GNetworkConnectivity = UInt


val G_MODULE_BIND_LAZY: GModuleFlags get() = 1u

val G_MODULE_BIND_LOCAL: GModuleFlags get() = 2u

val G_MODULE_BIND_MASK: GModuleFlags get() = 3u

typealias GModuleFlagsVar = UIntVarOf<GModuleFlags>

typealias GModuleFlags = UInt


val G_SETTINGS_BIND_DEFAULT: GSettingsBindFlags get() = 0u

val G_SETTINGS_BIND_GET: GSettingsBindFlags get() = 1u

val G_SETTINGS_BIND_SET: GSettingsBindFlags get() = 2u

val G_SETTINGS_BIND_NO_SENSITIVITY: GSettingsBindFlags get() = 4u

val G_SETTINGS_BIND_GET_NO_CHANGES: GSettingsBindFlags get() = 8u

val G_SETTINGS_BIND_INVERT_BOOLEAN: GSettingsBindFlags get() = 16u

typealias GSettingsBindFlagsVar = UIntVarOf<GSettingsBindFlags>

typealias GSettingsBindFlags = UInt
@SymbolName("glibjson_kniBridge0")
private external fun kniBridge0(): Int
@SymbolName("glibjson_kniBridge1")
private external fun kniBridge1(p0: Int): Unit
@SymbolName("glibjson_kniBridge2")
private external fun kniBridge2(): NativePtr
@SymbolName("glibjson_kniBridge3")
private external fun kniBridge3(p0: NativePtr): Unit
@SymbolName("glibjson_kniBridge4")
private external fun kniBridge4(): NativePtr
@SymbolName("glibjson_kniBridge5")
private external fun kniBridge5(): NativePtr
@SymbolName("glibjson_kniBridge6")
private external fun kniBridge6(): NativePtr
@SymbolName("glibjson_kniBridge7")
private external fun kniBridge7(): NativePtr
@SymbolName("glibjson_kniBridge8")
private external fun kniBridge8(): NativePtr
@SymbolName("glibjson_kniBridge9")
private external fun kniBridge9(): NativePtr
@SymbolName("glibjson_kniBridge10")
private external fun kniBridge10(): NativePtr
@SymbolName("glibjson_kniBridge11")
private external fun kniBridge11(): NativePtr
@SymbolName("glibjson_kniBridge12")
private external fun kniBridge12(): NativePtr
@SymbolName("glibjson_kniBridge13")
private external fun kniBridge13(): UInt
@SymbolName("glibjson_kniBridge14")
private external fun kniBridge14(): UInt
@SymbolName("glibjson_kniBridge15")
private external fun kniBridge15(): UInt
@SymbolName("glibjson_kniBridge16")
private external fun kniBridge16(): UInt
@SymbolName("glibjson_kniBridge17")
private external fun kniBridge17(): UInt
@SymbolName("glibjson_kniBridge18")
private external fun kniBridge18(): NativePtr
@SymbolName("glibjson_kniBridge19")
private external fun kniBridge19(): Int
@SymbolName("glibjson_kniBridge20")
private external fun kniBridge20(p0: Int): Unit
@SymbolName("glibjson_kniBridge21")
private external fun kniBridge21(): NativePtr
@SymbolName("glibjson_kniBridge22")
private external fun kniBridge22(p0: NativePtr): Unit
@SymbolName("glibjson_kniBridge23")
private external fun kniBridge23(): Int
@SymbolName("glibjson_kniBridge24")
private external fun kniBridge24(p0: Int): Unit
@SymbolName("glibjson_kniBridge25")
private external fun kniBridge25(): NativePtr
@SymbolName("glibjson_kniBridge26")
private external fun kniBridge26(p0: NativePtr): Unit
@SymbolName("glibjson_kniBridge27")
private external fun kniBridge27(): NativePtr
@SymbolName("glibjson_kniBridge28")
private external fun kniBridge28(): UInt
@SymbolName("glibjson_kniBridge29")
private external fun kniBridge29(): UInt
@SymbolName("glibjson_kniBridge30")
private external fun kniBridge30(): UInt
@SymbolName("glibjson_kniBridge31")
private external fun kniBridge31(): NativePtr
@SymbolName("glibjson_kniBridge32")
private external fun kniBridge32(): NativePtr
@SymbolName("glibjson_kniBridge33")
private external fun kniBridge33(): NativePtr
@SymbolName("glibjson_kniBridge34")
private external fun kniBridge34(): NativePtr
@SymbolName("glibjson_kniBridge35")
private external fun kniBridge35(): NativePtr
@SymbolName("glibjson_kniBridge36")
private external fun kniBridge36(): NativePtr
@SymbolName("glibjson_kniBridge37")
private external fun kniBridge37(): NativePtr
@SymbolName("glibjson_kniBridge38")
private external fun kniBridge38(): NativePtr
@SymbolName("glibjson_kniBridge39")
private external fun kniBridge39(): NativePtr
@SymbolName("glibjson_kniBridge40")
private external fun kniBridge40(): NativePtr
@SymbolName("glibjson_kniBridge41")
private external fun kniBridge41(): NativePtr
@SymbolName("glibjson_kniBridge42")
private external fun kniBridge42(): UInt
@SymbolName("glibjson_kniBridge43")
private external fun kniBridge43(): NativePtr
@SymbolName("glibjson_kniBridge44")
private external fun kniBridge44(): NativePtr
@SymbolName("glibjson_kniBridge45")
private external fun kniBridge45(): NativePtr
@SymbolName("glibjson_kniBridge46")
private external fun kniBridge46(): NativePtr
@SymbolName("glibjson_kniBridge47")
private external fun kniBridge47(): NativePtr
@SymbolName("glibjson_kniBridge48")
private external fun kniBridge48(): UInt
@SymbolName("glibjson_kniBridge49")
private external fun kniBridge49(): UInt
@SymbolName("glibjson_kniBridge50")
private external fun kniBridge50(): UInt
@SymbolName("glibjson_kniBridge51")
private external fun kniBridge51(): NativePtr
@SymbolName("glibjson_kniBridge52")
private external fun kniBridge52(): NativePtr
@SymbolName("glibjson_kniBridge53")
private external fun kniBridge53(): NativePtr
@SymbolName("glibjson_kniBridge54")
private external fun kniBridge54(): NativePtr
@SymbolName("glibjson_kniBridge55")
private external fun kniBridge55(): NativePtr
@SymbolName("glibjson_kniBridge56")
private external fun kniBridge56(): NativePtr
@SymbolName("glibjson_kniBridge57")
private external fun kniBridge57(): NativePtr
@SymbolName("glibjson_kniBridge58")
private external fun kniBridge58(): NativePtr
@SymbolName("glibjson_kniBridge59")
private external fun kniBridge59(): NativePtr
@SymbolName("glibjson_kniBridge60")
private external fun kniBridge60(): NativePtr
@SymbolName("glibjson_kniBridge61")
private external fun kniBridge61(): NativePtr
@SymbolName("glibjson_kniBridge62")
private external fun kniBridge62(): NativePtr
@SymbolName("glibjson_kniBridge63")
private external fun kniBridge63(): NativePtr
@SymbolName("glibjson_kniBridge64")
private external fun kniBridge64(): NativePtr
@SymbolName("glibjson_kniBridge65")
private external fun kniBridge65(): NativePtr
@SymbolName("glibjson_kniBridge66")
private external fun kniBridge66(): NativePtr
@SymbolName("glibjson_kniBridge67")
private external fun kniBridge67(): NativePtr
@SymbolName("glibjson_kniBridge68")
private external fun kniBridge68(): NativePtr
@SymbolName("glibjson_kniBridge69")
private external fun kniBridge69(): NativePtr
@SymbolName("glibjson_kniBridge70")
private external fun kniBridge70(): NativePtr
@SymbolName("glibjson_kniBridge71")
private external fun kniBridge71(): NativePtr
@SymbolName("glibjson_kniBridge72")
private external fun kniBridge72(): NativePtr
@SymbolName("glibjson_kniBridge73")
private external fun kniBridge73(): NativePtr
@SymbolName("glibjson_kniBridge74")
private external fun kniBridge74(): NativePtr
@SymbolName("glibjson_kniBridge75")
private external fun kniBridge75(): NativePtr
@SymbolName("glibjson_kniBridge76")
private external fun kniBridge76(): NativePtr
@SymbolName("glibjson_kniBridge77")
private external fun kniBridge77(): NativePtr
@SymbolName("glibjson_kniBridge78")
private external fun kniBridge78(): UInt
@SymbolName("glibjson_kniBridge79")
private external fun kniBridge79(): NativePtr
@SymbolName("glibjson_kniBridge80")
private external fun kniBridge80(): UInt
@SymbolName("glibjson_kniBridge81")
private external fun kniBridge81(): UInt
@SymbolName("glibjson_kniBridge82")
private external fun kniBridge82(): UInt
@SymbolName("glibjson_kniBridge83")
private external fun kniBridge83(): UInt
@SymbolName("glibjson_kniBridge84")
private external fun kniBridge84(): UInt
@SymbolName("glibjson_kniBridge85")
private external fun kniBridge85(): UInt
@SymbolName("glibjson_kniBridge86")
private external fun kniBridge86(): NativePtr
@SymbolName("glibjson_kniBridge87")
private external fun kniBridge87(): NativePtr
@SymbolName("glibjson_kniBridge88")
private external fun kniBridge88(): NativePtr
@SymbolName("glibjson_kniBridge89")
private external fun kniBridge89(): ULong
@SymbolName("glibjson_kniBridge90")
private external fun kniBridge90(): ULong
@SymbolName("glibjson_kniBridge91")
private external fun kniBridge91(): ULong
@SymbolName("glibjson_kniBridge92")
private external fun kniBridge92(): ULong
@SymbolName("glibjson_kniBridge93")
private external fun kniBridge93(): ULong
@SymbolName("glibjson_kniBridge94")
private external fun kniBridge94(): ULong
@SymbolName("glibjson_kniBridge95")
private external fun kniBridge95(): ULong
@SymbolName("glibjson_kniBridge96")
private external fun kniBridge96(): ULong
@SymbolName("glibjson_kniBridge97")
private external fun kniBridge97(): ULong
@SymbolName("glibjson_kniBridge98")
private external fun kniBridge98(): ULong
@SymbolName("glibjson_kniBridge99")
private external fun kniBridge99(): ULong
@SymbolName("glibjson_kniBridge100")
private external fun kniBridge100(): ULong
@SymbolName("glibjson_kniBridge101")
private external fun kniBridge101(): ULong
@SymbolName("glibjson_kniBridge102")
private external fun kniBridge102(): ULong
@SymbolName("glibjson_kniBridge103")
private external fun kniBridge103(): ULong
@SymbolName("glibjson_kniBridge104")
private external fun kniBridge104(): ULong
@SymbolName("glibjson_kniBridge105")
private external fun kniBridge105(): ULong
@SymbolName("glibjson_kniBridge106")
private external fun kniBridge106(): ULong
@SymbolName("glibjson_kniBridge107")
private external fun kniBridge107(): ULong
@SymbolName("glibjson_kniBridge108")
private external fun kniBridge108(): ULong
@SymbolName("glibjson_kniBridge109")
private external fun kniBridge109(): ULong
@SymbolName("glibjson_kniBridge110")
private external fun kniBridge110(): ULong
@SymbolName("glibjson_kniBridge111")
private external fun kniBridge111(): ULong
@SymbolName("glibjson_kniBridge112")
private external fun kniBridge112(): ULong
@SymbolName("glibjson_kniBridge113")
private external fun kniBridge113(): ULong
@SymbolName("glibjson_kniBridge114")
private external fun kniBridge114(): ULong
@SymbolName("glibjson_kniBridge115")
private external fun kniBridge115(): ULong
@SymbolName("glibjson_kniBridge116")
private external fun kniBridge116(): ULong
@SymbolName("glibjson_kniBridge117")
private external fun kniBridge117(): ULong
@SymbolName("glibjson_kniBridge118")
private external fun kniBridge118(): ULong
@SymbolName("glibjson_kniBridge119")
private external fun kniBridge119(): ULong
@SymbolName("glibjson_kniBridge120")
private external fun kniBridge120(): ULong
@SymbolName("glibjson_kniBridge121")
private external fun kniBridge121(): ULong
@SymbolName("glibjson_kniBridge122")
private external fun kniBridge122(): ULong
@SymbolName("glibjson_kniBridge123")
private external fun kniBridge123(): ULong
@SymbolName("glibjson_kniBridge124")
private external fun kniBridge124(): ULong
@SymbolName("glibjson_kniBridge125")
private external fun kniBridge125(): ULong
@SymbolName("glibjson_kniBridge126")
private external fun kniBridge126(): ULong
@SymbolName("glibjson_kniBridge127")
private external fun kniBridge127(): ULong
@SymbolName("glibjson_kniBridge128")
private external fun kniBridge128(): ULong
@SymbolName("glibjson_kniBridge129")
private external fun kniBridge129(): ULong
@SymbolName("glibjson_kniBridge130")
private external fun kniBridge130(): ULong
@SymbolName("glibjson_kniBridge131")
private external fun kniBridge131(): ULong
@SymbolName("glibjson_kniBridge132")
private external fun kniBridge132(): ULong
@SymbolName("glibjson_kniBridge133")
private external fun kniBridge133(): ULong
@SymbolName("glibjson_kniBridge134")
private external fun kniBridge134(): ULong
@SymbolName("glibjson_kniBridge135")
private external fun kniBridge135(): ULong
@SymbolName("glibjson_kniBridge136")
private external fun kniBridge136(): ULong
@SymbolName("glibjson_kniBridge137")
private external fun kniBridge137(): ULong
@SymbolName("glibjson_kniBridge138")
private external fun kniBridge138(): ULong
@SymbolName("glibjson_kniBridge139")
private external fun kniBridge139(): ULong
@SymbolName("glibjson_kniBridge140")
private external fun kniBridge140(): ULong
@SymbolName("glibjson_kniBridge141")
private external fun kniBridge141(): ULong
@SymbolName("glibjson_kniBridge142")
private external fun kniBridge142(): ULong
@SymbolName("glibjson_kniBridge143")
private external fun kniBridge143(): ULong
@SymbolName("glibjson_kniBridge144")
private external fun kniBridge144(): ULong
@SymbolName("glibjson_kniBridge145")
private external fun kniBridge145(): ULong
@SymbolName("glibjson_kniBridge146")
private external fun kniBridge146(): ULong
@SymbolName("glibjson_kniBridge147")
private external fun kniBridge147(): ULong
@SymbolName("glibjson_kniBridge148")
private external fun kniBridge148(): ULong
@SymbolName("glibjson_kniBridge149")
private external fun kniBridge149(): ULong
@SymbolName("glibjson_kniBridge150")
private external fun kniBridge150(): ULong
@SymbolName("glibjson_kniBridge151")
private external fun kniBridge151(): ULong
@SymbolName("glibjson_kniBridge152")
private external fun kniBridge152(): ULong
@SymbolName("glibjson_kniBridge153")
private external fun kniBridge153(): ULong
@SymbolName("glibjson_kniBridge154")
private external fun kniBridge154(): ULong
@SymbolName("glibjson_kniBridge155")
private external fun kniBridge155(): ULong
@SymbolName("glibjson_kniBridge156")
private external fun kniBridge156(): ULong
@SymbolName("glibjson_kniBridge157")
private external fun kniBridge157(): ULong
@SymbolName("glibjson_kniBridge158")
private external fun kniBridge158(): ULong
@SymbolName("glibjson_kniBridge159")
private external fun kniBridge159(): ULong
@SymbolName("glibjson_kniBridge160")
private external fun kniBridge160(): ULong
@SymbolName("glibjson_kniBridge161")
private external fun kniBridge161(): ULong
@SymbolName("glibjson_kniBridge162")
private external fun kniBridge162(): ULong
@SymbolName("glibjson_kniBridge163")
private external fun kniBridge163(): ULong
@SymbolName("glibjson_kniBridge164")
private external fun kniBridge164(): ULong
@SymbolName("glibjson_kniBridge165")
private external fun kniBridge165(): ULong
@SymbolName("glibjson_kniBridge166")
private external fun kniBridge166(): ULong
@SymbolName("glibjson_kniBridge167")
private external fun kniBridge167(): ULong
@SymbolName("glibjson_kniBridge168")
private external fun kniBridge168(): ULong
@SymbolName("glibjson_kniBridge169")
private external fun kniBridge169(): ULong
@SymbolName("glibjson_kniBridge170")
private external fun kniBridge170(): ULong
@SymbolName("glibjson_kniBridge171")
private external fun kniBridge171(): ULong
@SymbolName("glibjson_kniBridge172")
private external fun kniBridge172(): ULong
@SymbolName("glibjson_kniBridge173")
private external fun kniBridge173(): ULong
@SymbolName("glibjson_kniBridge174")
private external fun kniBridge174(): ULong
@SymbolName("glibjson_kniBridge175")
private external fun kniBridge175(): ULong
@SymbolName("glibjson_kniBridge176")
private external fun kniBridge176(): ULong
@SymbolName("glibjson_kniBridge177")
private external fun kniBridge177(): ULong
@SymbolName("glibjson_kniBridge178")
private external fun kniBridge178(): ULong
@SymbolName("glibjson_kniBridge179")
private external fun kniBridge179(): ULong
@SymbolName("glibjson_kniBridge180")
private external fun kniBridge180(): ULong
@SymbolName("glibjson_kniBridge181")
private external fun kniBridge181(): ULong
@SymbolName("glibjson_kniBridge182")
private external fun kniBridge182(): UInt
@SymbolName("glibjson_kniBridge183")
private external fun kniBridge183(): ULong
@SymbolName("glibjson_kniBridge184")
private external fun kniBridge184(): ULong
@SymbolName("glibjson_kniBridge185")
private external fun kniBridge185(): ULong
@SymbolName("glibjson_kniBridge186")
private external fun kniBridge186(): ULong
@SymbolName("glibjson_kniBridge187")
private external fun kniBridge187(): ULong
@SymbolName("glibjson_kniBridge188")
private external fun kniBridge188(): ULong
@SymbolName("glibjson_kniBridge189")
private external fun kniBridge189(): ULong
@SymbolName("glibjson_kniBridge190")
private external fun kniBridge190(): ULong
@SymbolName("glibjson_kniBridge191")
private external fun kniBridge191(): ULong
@SymbolName("glibjson_kniBridge192")
private external fun kniBridge192(): ULong
@SymbolName("glibjson_kniBridge193")
private external fun kniBridge193(): ULong
@SymbolName("glibjson_kniBridge194")
private external fun kniBridge194(): ULong
@SymbolName("glibjson_kniBridge195")
private external fun kniBridge195(): ULong
@SymbolName("glibjson_kniBridge196")
private external fun kniBridge196(): ULong
@SymbolName("glibjson_kniBridge197")
private external fun kniBridge197(): ULong
@SymbolName("glibjson_kniBridge198")
private external fun kniBridge198(): ULong
@SymbolName("glibjson_kniBridge199")
private external fun kniBridge199(): ULong
@SymbolName("glibjson_kniBridge200")
private external fun kniBridge200(): ULong
@SymbolName("glibjson_kniBridge201")
private external fun kniBridge201(): ULong
@SymbolName("glibjson_kniBridge202")
private external fun kniBridge202(): ULong
@SymbolName("glibjson_kniBridge203")
private external fun kniBridge203(): ULong
@SymbolName("glibjson_kniBridge204")
private external fun kniBridge204(): ULong
@SymbolName("glibjson_kniBridge205")
private external fun kniBridge205(): ULong
@SymbolName("glibjson_kniBridge206")
private external fun kniBridge206(): ULong
@SymbolName("glibjson_kniBridge207")
private external fun kniBridge207(): ULong
@SymbolName("glibjson_kniBridge208")
private external fun kniBridge208(): UInt
@SymbolName("glibjson_kniBridge209")
private external fun kniBridge209(): ULong
@SymbolName("glibjson_kniBridge210")
private external fun kniBridge210(): ULong
@SymbolName("glibjson_kniBridge211")
private external fun kniBridge211(): ULong
@SymbolName("glibjson_kniBridge212")
private external fun kniBridge212(): ULong
@SymbolName("glibjson_kniBridge213")
private external fun kniBridge213(): ULong
@SymbolName("glibjson_kniBridge214")
private external fun kniBridge214(): ULong
@SymbolName("glibjson_kniBridge215")
private external fun kniBridge215(): ULong
@SymbolName("glibjson_kniBridge216")
private external fun kniBridge216(): ULong
@SymbolName("glibjson_kniBridge217")
private external fun kniBridge217(): ULong
@SymbolName("glibjson_kniBridge218")
private external fun kniBridge218(): ULong
@SymbolName("glibjson_kniBridge219")
private external fun kniBridge219(): ULong
@SymbolName("glibjson_kniBridge220")
private external fun kniBridge220(): ULong
@SymbolName("glibjson_kniBridge221")
private external fun kniBridge221(): ULong
@SymbolName("glibjson_kniBridge222")
private external fun kniBridge222(): ULong
@SymbolName("glibjson_kniBridge223")
private external fun kniBridge223(): ULong
@SymbolName("glibjson_kniBridge224")
private external fun kniBridge224(): ULong
@SymbolName("glibjson_kniBridge225")
private external fun kniBridge225(): ULong
@SymbolName("glibjson_kniBridge226")
private external fun kniBridge226(): ULong
@SymbolName("glibjson_kniBridge227")
private external fun kniBridge227(): ULong
@SymbolName("glibjson_kniBridge228")
private external fun kniBridge228(): ULong
@SymbolName("glibjson_kniBridge229")
private external fun kniBridge229(): ULong
@SymbolName("glibjson_kniBridge230")
private external fun kniBridge230(): ULong
@SymbolName("glibjson_kniBridge231")
private external fun kniBridge231(): ULong
@SymbolName("glibjson_kniBridge232")
private external fun kniBridge232(): ULong
@SymbolName("glibjson_kniBridge233")
private external fun kniBridge233(): ULong
@SymbolName("glibjson_kniBridge234")
private external fun kniBridge234(): ULong
@SymbolName("glibjson_kniBridge235")
private external fun kniBridge235(): ULong
@SymbolName("glibjson_kniBridge236")
private external fun kniBridge236(): ULong
@SymbolName("glibjson_kniBridge237")
private external fun kniBridge237(): ULong
@SymbolName("glibjson_kniBridge238")
private external fun kniBridge238(): ULong
@SymbolName("glibjson_kniBridge239")
private external fun kniBridge239(): ULong
@SymbolName("glibjson_kniBridge240")
private external fun kniBridge240(): ULong
@SymbolName("glibjson_kniBridge241")
private external fun kniBridge241(): ULong
@SymbolName("glibjson_kniBridge242")
private external fun kniBridge242(): ULong
@SymbolName("glibjson_kniBridge243")
private external fun kniBridge243(): ULong
@SymbolName("glibjson_kniBridge244")
private external fun kniBridge244(): ULong
@SymbolName("glibjson_kniBridge245")
private external fun kniBridge245(): ULong
@SymbolName("glibjson_kniBridge246")
private external fun kniBridge246(): ULong
@SymbolName("glibjson_kniBridge247")
private external fun kniBridge247(): ULong
@SymbolName("glibjson_kniBridge248")
private external fun kniBridge248(): ULong
@SymbolName("glibjson_kniBridge249")
private external fun kniBridge249(): ULong
@SymbolName("glibjson_kniBridge250")
private external fun kniBridge250(): ULong
@SymbolName("glibjson_kniBridge251")
private external fun kniBridge251(): ULong
@SymbolName("glibjson_kniBridge252")
private external fun kniBridge252(): ULong
@SymbolName("glibjson_kniBridge253")
private external fun kniBridge253(): ULong
@SymbolName("glibjson_kniBridge254")
private external fun kniBridge254(): ULong
@SymbolName("glibjson_kniBridge255")
private external fun kniBridge255(): ULong
@SymbolName("glibjson_kniBridge256")
private external fun kniBridge256(): ULong
@SymbolName("glibjson_kniBridge257")
private external fun kniBridge257(): ULong
@SymbolName("glibjson_kniBridge258")
private external fun kniBridge258(): ULong
@SymbolName("glibjson_kniBridge259")
private external fun kniBridge259(): ULong
@SymbolName("glibjson_kniBridge260")
private external fun kniBridge260(): ULong
@SymbolName("glibjson_kniBridge261")
private external fun kniBridge261(): ULong
@SymbolName("glibjson_kniBridge262")
private external fun kniBridge262(): ULong
@SymbolName("glibjson_kniBridge263")
private external fun kniBridge263(): ULong
@SymbolName("glibjson_kniBridge264")
private external fun kniBridge264(): ULong
@SymbolName("glibjson_kniBridge265")
private external fun kniBridge265(): ULong
@SymbolName("glibjson_kniBridge266")
private external fun kniBridge266(): ULong
@SymbolName("glibjson_kniBridge267")
private external fun kniBridge267(): ULong
@SymbolName("glibjson_kniBridge268")
private external fun kniBridge268(): ULong
@SymbolName("glibjson_kniBridge269")
private external fun kniBridge269(): ULong
@SymbolName("glibjson_kniBridge270")
private external fun kniBridge270(): ULong
@SymbolName("glibjson_kniBridge271")
private external fun kniBridge271(): ULong
@SymbolName("glibjson_kniBridge272")
private external fun kniBridge272(): ULong
@SymbolName("glibjson_kniBridge273")
private external fun kniBridge273(): ULong
@SymbolName("glibjson_kniBridge274")
private external fun kniBridge274(): ULong
@SymbolName("glibjson_kniBridge275")
private external fun kniBridge275(): ULong
@SymbolName("glibjson_kniBridge276")
private external fun kniBridge276(): ULong
@SymbolName("glibjson_kniBridge277")
private external fun kniBridge277(): ULong
@SymbolName("glibjson_kniBridge278")
private external fun kniBridge278(): ULong
@SymbolName("glibjson_kniBridge279")
private external fun kniBridge279(): ULong
@SymbolName("glibjson_kniBridge280")
private external fun kniBridge280(): ULong
@SymbolName("glibjson_kniBridge281")
private external fun kniBridge281(): ULong
@SymbolName("glibjson_kniBridge282")
private external fun kniBridge282(): ULong
@SymbolName("glibjson_kniBridge283")
private external fun kniBridge283(): ULong
@SymbolName("glibjson_kniBridge284")
private external fun kniBridge284(): ULong
@SymbolName("glibjson_kniBridge285")
private external fun kniBridge285(): ULong
@SymbolName("glibjson_kniBridge286")
private external fun kniBridge286(): ULong
@SymbolName("glibjson_kniBridge287")
private external fun kniBridge287(): ULong
@SymbolName("glibjson_kniBridge288")
private external fun kniBridge288(): ULong
@SymbolName("glibjson_kniBridge289")
private external fun kniBridge289(): ULong
@SymbolName("glibjson_kniBridge290")
private external fun kniBridge290(): ULong
@SymbolName("glibjson_kniBridge291")
private external fun kniBridge291(): ULong
@SymbolName("glibjson_kniBridge292")
private external fun kniBridge292(): ULong
@SymbolName("glibjson_kniBridge293")
private external fun kniBridge293(): ULong
@SymbolName("glibjson_kniBridge294")
private external fun kniBridge294(): ULong
@SymbolName("glibjson_kniBridge295")
private external fun kniBridge295(): ULong
@SymbolName("glibjson_kniBridge296")
private external fun kniBridge296(): ULong
@SymbolName("glibjson_kniBridge297")
private external fun kniBridge297(): ULong
@SymbolName("glibjson_kniBridge298")
private external fun kniBridge298(): ULong
@SymbolName("glibjson_kniBridge299")
private external fun kniBridge299(): ULong
@SymbolName("glibjson_kniBridge300")
private external fun kniBridge300(): ULong
@SymbolName("glibjson_kniBridge301")
private external fun kniBridge301(): ULong
@SymbolName("glibjson_kniBridge302")
private external fun kniBridge302(): ULong
@SymbolName("glibjson_kniBridge303")
private external fun kniBridge303(): ULong
@SymbolName("glibjson_kniBridge304")
private external fun kniBridge304(): ULong
@SymbolName("glibjson_kniBridge305")
private external fun kniBridge305(): ULong
@SymbolName("glibjson_kniBridge306")
private external fun kniBridge306(): ULong
@SymbolName("glibjson_kniBridge307")
private external fun kniBridge307(): ULong
@SymbolName("glibjson_kniBridge308")
private external fun kniBridge308(): ULong
@SymbolName("glibjson_kniBridge309")
private external fun kniBridge309(): ULong
@SymbolName("glibjson_kniBridge310")
private external fun kniBridge310(): ULong
@SymbolName("glibjson_kniBridge311")
private external fun kniBridge311(): ULong
@SymbolName("glibjson_kniBridge312")
private external fun kniBridge312(): ULong
@SymbolName("glibjson_kniBridge313")
private external fun kniBridge313(): ULong
@SymbolName("glibjson_kniBridge314")
private external fun kniBridge314(): ULong
@SymbolName("glibjson_kniBridge315")
private external fun kniBridge315(): UInt
@SymbolName("glibjson_kniBridge316")
private external fun kniBridge316(): ULong
@SymbolName("glibjson_kniBridge317")
private external fun kniBridge317(): UInt
@SymbolName("glibjson_kniBridge318")
private external fun kniBridge318(): ULong
@SymbolName("glibjson_kniBridge319")
private external fun kniBridge319(): ULong
@SymbolName("glibjson_kniBridge320")
private external fun kniBridge320(): ULong
@SymbolName("glibjson_kniBridge321")
private external fun kniBridge321(): ULong
@SymbolName("glibjson_kniBridge322")
private external fun kniBridge322(): ULong
@SymbolName("glibjson_kniBridge323")
private external fun kniBridge323(): ULong
@SymbolName("glibjson_kniBridge324")
private external fun kniBridge324(): ULong
@SymbolName("glibjson_kniBridge325")
private external fun kniBridge325(): ULong
@SymbolName("glibjson_kniBridge326")
private external fun kniBridge326(): ULong
@SymbolName("glibjson_kniBridge327")
private external fun kniBridge327(): ULong
@SymbolName("glibjson_kniBridge328")
private external fun kniBridge328(): ULong
@SymbolName("glibjson_kniBridge329")
private external fun kniBridge329(): ULong
@SymbolName("glibjson_kniBridge330")
private external fun kniBridge330(): ULong
@SymbolName("glibjson_kniBridge331")
private external fun kniBridge331(): ULong
@SymbolName("glibjson_kniBridge332")
private external fun kniBridge332(): ULong
@SymbolName("glibjson_kniBridge333")
private external fun kniBridge333(): ULong
@SymbolName("glibjson_kniBridge334")
private external fun kniBridge334(): ULong
@SymbolName("glibjson_kniBridge335")
private external fun kniBridge335(): ULong
@SymbolName("glibjson_kniBridge336")
private external fun kniBridge336(): ULong
@SymbolName("glibjson_kniBridge337")
private external fun kniBridge337(): ULong
@SymbolName("glibjson_kniBridge338")
private external fun kniBridge338(): ULong
@SymbolName("glibjson_kniBridge339")
private external fun kniBridge339(): ULong
@SymbolName("glibjson_kniBridge340")
private external fun kniBridge340(): ULong
@SymbolName("glibjson_kniBridge341")
private external fun kniBridge341(): ULong
@SymbolName("glibjson_kniBridge342")
private external fun kniBridge342(): ULong
@SymbolName("glibjson_kniBridge343")
private external fun kniBridge343(): ULong
@SymbolName("glibjson_kniBridge344")
private external fun kniBridge344(): ULong
@SymbolName("glibjson_kniBridge345")
private external fun kniBridge345(): ULong
@SymbolName("glibjson_kniBridge346")
private external fun kniBridge346(): ULong
@SymbolName("glibjson_kniBridge347")
private external fun kniBridge347(): ULong
@SymbolName("glibjson_kniBridge348")
private external fun kniBridge348(): UInt
@SymbolName("glibjson_kniBridge349")
private external fun kniBridge349(): ULong
@SymbolName("glibjson_kniBridge350")
private external fun kniBridge350(): ULong
@SymbolName("glibjson_kniBridge351")
private external fun kniBridge351(): ULong
@SymbolName("glibjson_kniBridge352")
private external fun kniBridge352(): ULong
@SymbolName("glibjson_kniBridge353")
private external fun kniBridge353(): ULong
@SymbolName("glibjson_kniBridge354")
private external fun kniBridge354(): ULong
@SymbolName("glibjson_kniBridge355")
private external fun kniBridge355(): ULong
@SymbolName("glibjson_kniBridge356")
private external fun kniBridge356(): ULong
@SymbolName("glibjson_kniBridge357")
private external fun kniBridge357(): ULong
@SymbolName("glibjson_kniBridge358")
private external fun kniBridge358(): ULong
@SymbolName("glibjson_kniBridge359")
private external fun kniBridge359(): ULong
@SymbolName("glibjson_kniBridge360")
private external fun kniBridge360(): ULong
@SymbolName("glibjson_kniBridge361")
private external fun kniBridge361(): ULong
@SymbolName("glibjson_kniBridge362")
private external fun kniBridge362(): ULong
@SymbolName("glibjson_kniBridge363")
private external fun kniBridge363(): ULong
@SymbolName("glibjson_kniBridge364")
private external fun kniBridge364(): ULong
@SymbolName("glibjson_kniBridge365")
private external fun kniBridge365(): ULong
@SymbolName("glibjson_kniBridge366")
private external fun kniBridge366(): ULong
@SymbolName("glibjson_kniBridge367")
private external fun kniBridge367(): ULong
@SymbolName("glibjson_kniBridge368")
private external fun kniBridge368(): ULong
@SymbolName("glibjson_kniBridge369")
private external fun kniBridge369(): ULong
@SymbolName("glibjson_kniBridge370")
private external fun kniBridge370(): ULong
@SymbolName("glibjson_kniBridge371")
private external fun kniBridge371(): ULong
@SymbolName("glibjson_kniBridge372")
private external fun kniBridge372(): ULong
@SymbolName("glibjson_kniBridge373")
private external fun kniBridge373(): ULong
@SymbolName("glibjson_kniBridge374")
private external fun kniBridge374(): ULong
@SymbolName("glibjson_kniBridge375")
private external fun kniBridge375(): ULong
@SymbolName("glibjson_kniBridge376")
private external fun kniBridge376(): ULong
@SymbolName("glibjson_kniBridge377")
private external fun kniBridge377(): ULong
@SymbolName("glibjson_kniBridge378")
private external fun kniBridge378(): ULong
@SymbolName("glibjson_kniBridge379")
private external fun kniBridge379(): ULong
@SymbolName("glibjson_kniBridge380")
private external fun kniBridge380(): UInt
@SymbolName("glibjson_kniBridge381")
private external fun kniBridge381(): ULong
@SymbolName("glibjson_kniBridge382")
private external fun kniBridge382(): UInt
@SymbolName("glibjson_kniBridge383")
private external fun kniBridge383(): ULong
@SymbolName("glibjson_kniBridge384")
private external fun kniBridge384(): UInt
@SymbolName("glibjson_kniBridge385")
private external fun kniBridge385(): ULong
@SymbolName("glibjson_kniBridge386")
private external fun kniBridge386(): ULong
@SymbolName("glibjson_kniBridge387")
private external fun kniBridge387(): ULong
@SymbolName("glibjson_kniBridge388")
private external fun kniBridge388(): ULong
@SymbolName("glibjson_kniBridge389")
private external fun kniBridge389(): ULong
